id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: Virgis
  commentId: N:Virgis
  language: CSharp
  name:
    CSharp: Virgis
    VB: Virgis
  nameWithType:
    CSharp: Virgis
    VB: Virgis
  qualifiedName:
    CSharp: Virgis
    VB: Virgis
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Virgis.AppState
    commentId: T:Virgis.AppState
    language: CSharp
    name:
      CSharp: AppState
      VB: AppState
    nameWithType:
      CSharp: AppState
      VB: AppState
    qualifiedName:
      CSharp: Virgis.AppState
      VB: Virgis.AppState
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: AppState
      path: ''
      startLine: 19
    syntax:
      content:
        CSharp: 'public class AppState : MonoBehaviour'
        VB: >-
          Public Class AppState

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.AppState.instance
      commentId: F:Virgis.AppState.instance
      language: CSharp
      name:
        CSharp: instance
        VB: instance
      nameWithType:
        CSharp: AppState.instance
        VB: AppState.instance
      qualifiedName:
        CSharp: Virgis.AppState.instance
        VB: Virgis.AppState.instance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: instance
        path: ''
        startLine: 20
      syntax:
        content:
          CSharp: public static AppState instance
          VB: Public Shared instance As AppState
        return:
          type: Virgis.AppState
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Virgis.AppState.Orientation
      commentId: P:Virgis.AppState.Orientation
      language: CSharp
      name:
        CSharp: Orientation
        VB: Orientation
      nameWithType:
        CSharp: AppState.Orientation
        VB: AppState.Orientation
      qualifiedName:
        CSharp: Virgis.AppState.Orientation
        VB: Virgis.AppState.Orientation
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Orientation
        path: ''
        startLine: 26
      syntax:
        content:
          CSharp: public OrientEvent Orientation { get; }
          VB: Public ReadOnly Property Orientation As OrientEvent
        parameters: []
        return:
          type: Virgis.OrientEvent
      overload: Virgis.AppState.Orientation*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Virgis.AppState.Info
      commentId: P:Virgis.AppState.Info
      language: CSharp
      name:
        CSharp: Info
        VB: Info
      nameWithType:
        CSharp: AppState.Info
        VB: AppState.Info
      qualifiedName:
        CSharp: Virgis.AppState.Info
        VB: Virgis.AppState.Info
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Info
        path: ''
        startLine: 31
      syntax:
        content:
          CSharp: public InfoEvent Info { get; }
          VB: Public ReadOnly Property Info As InfoEvent
        parameters: []
        return:
          type: Virgis.InfoEvent
      overload: Virgis.AppState.Info*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Virgis.AppState.Zoom
      commentId: P:Virgis.AppState.Zoom
      language: CSharp
      name:
        CSharp: Zoom
        VB: Zoom
      nameWithType:
        CSharp: AppState.Zoom
        VB: AppState.Zoom
      qualifiedName:
        CSharp: Virgis.AppState.Zoom
        VB: Virgis.AppState.Zoom
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Zoom
        path: ''
        startLine: 36
      syntax:
        content:
          CSharp: public ZoomEvent Zoom { get; }
          VB: Public ReadOnly Property Zoom As ZoomEvent
        parameters: []
        return:
          type: Virgis.ZoomEvent
      overload: Virgis.AppState.Zoom*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Virgis.AppState.ButtonStatus
      commentId: P:Virgis.AppState.ButtonStatus
      language: CSharp
      name:
        CSharp: ButtonStatus
        VB: ButtonStatus
      nameWithType:
        CSharp: AppState.ButtonStatus
        VB: AppState.ButtonStatus
      qualifiedName:
        CSharp: Virgis.AppState.ButtonStatus
        VB: Virgis.AppState.ButtonStatus
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ButtonStatus
        path: ''
        startLine: 41
      syntax:
        content:
          CSharp: public ButtonStatus ButtonStatus { get; }
          VB: Public ReadOnly Property ButtonStatus As ButtonStatus
        parameters: []
        return:
          type: Virgis.ButtonStatus
      overload: Virgis.AppState.ButtonStatus*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Virgis.AppState.Project
      commentId: P:Virgis.AppState.Project
      language: CSharp
      name:
        CSharp: Project
        VB: Project
      nameWithType:
        CSharp: AppState.Project
        VB: AppState.Project
      qualifiedName:
        CSharp: Virgis.AppState.Project
        VB: Virgis.AppState.Project
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Project
        path: ''
        startLine: 49
      summary: "\nUse this to get the project change event\n"
      example: []
      syntax:
        content:
          CSharp: public ProjectChange Project { get; }
          VB: Public ReadOnly Property Project As ProjectChange
        parameters: []
        return:
          type: Virgis.ProjectChange
      overload: Virgis.AppState.Project*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Virgis.AppState.Init
      commentId: M:Virgis.AppState.Init
      language: CSharp
      name:
        CSharp: Init()
        VB: Init()
      nameWithType:
        CSharp: AppState.Init()
        VB: AppState.Init()
      qualifiedName:
        CSharp: Virgis.AppState.Init()
        VB: Virgis.AppState.Init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Init
        path: ''
        startLine: 103
      summary: "\nInit is called after a project has been fully loaded.\n"
      example: []
      syntax:
        content:
          CSharp: public void Init()
          VB: Public Sub Init
      overload: Virgis.AppState.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.AppState.editSession
      commentId: P:Virgis.AppState.editSession
      language: CSharp
      name:
        CSharp: editSession
        VB: editSession
      nameWithType:
        CSharp: AppState.editSession
        VB: AppState.editSession
      qualifiedName:
        CSharp: Virgis.AppState.editSession
        VB: Virgis.AppState.editSession
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: editSession
        path: ''
        startLine: 111
      syntax:
        content:
          CSharp: public EditSession editSession { get; }
          VB: Public ReadOnly Property editSession As EditSession
        parameters: []
        return:
          type: Virgis.EditSession
      overload: Virgis.AppState.editSession*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Virgis.AppState.map
      commentId: P:Virgis.AppState.map
      language: CSharp
      name:
        CSharp: map
        VB: map
      nameWithType:
        CSharp: AppState.map
        VB: AppState.map
      qualifiedName:
        CSharp: Virgis.AppState.map
        VB: Virgis.AppState.map
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: map
        path: ''
        startLine: 116
      syntax:
        content:
          CSharp: public GameObject map { get; set; }
          VB: Public Property map As GameObject
        parameters: []
        return:
          type: GameObject
      overload: Virgis.AppState.map*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Virgis.AppState.project
      commentId: P:Virgis.AppState.project
      language: CSharp
      name:
        CSharp: project
        VB: project
      nameWithType:
        CSharp: AppState.project
        VB: AppState.project
      qualifiedName:
        CSharp: Virgis.AppState.project
        VB: Virgis.AppState.project
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: project
        path: ''
        startLine: 123
      summary: "\nUse this to change or get the project\n"
      example: []
      syntax:
        content:
          CSharp: public GisProject project { get; set; }
          VB: Public Property project As GisProject
        parameters: []
        return:
          type: GisProject
      overload: Virgis.AppState.project*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Virgis.AppState.mapProj
      commentId: P:Virgis.AppState.mapProj
      language: CSharp
      name:
        CSharp: mapProj
        VB: mapProj
      nameWithType:
        CSharp: AppState.mapProj
        VB: AppState.mapProj
      qualifiedName:
        CSharp: Virgis.AppState.mapProj
        VB: Virgis.AppState.mapProj
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: mapProj
        path: ''
        startLine: 133
      syntax:
        content:
          CSharp: public SpatialReference mapProj { get; }
          VB: Public ReadOnly Property mapProj As SpatialReference
        parameters: []
        return:
          type: SpatialReference
      overload: Virgis.AppState.mapProj*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Virgis.AppState.mapTrans
      commentId: P:Virgis.AppState.mapTrans
      language: CSharp
      name:
        CSharp: mapTrans
        VB: mapTrans
      nameWithType:
        CSharp: AppState.mapTrans
        VB: AppState.mapTrans
      qualifiedName:
        CSharp: Virgis.AppState.mapTrans
        VB: Virgis.AppState.mapTrans
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: mapTrans
        path: ''
        startLine: 137
      syntax:
        content:
          CSharp: public CoordinateTransformation mapTrans { get; }
          VB: Public ReadOnly Property mapTrans As CoordinateTransformation
        parameters: []
        return:
          type: CoordinateTransformation
      overload: Virgis.AppState.mapTrans*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Virgis.AppState.initProj
      commentId: M:Virgis.AppState.initProj
      language: CSharp
      name:
        CSharp: initProj()
        VB: initProj()
      nameWithType:
        CSharp: AppState.initProj()
        VB: AppState.initProj()
      qualifiedName:
        CSharp: Virgis.AppState.initProj()
        VB: Virgis.AppState.initProj()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: initProj
        path: ''
        startLine: 144
      summary: "\nTasks to be run after a project is loaded\n"
      example: []
      syntax:
        content:
          CSharp: public void initProj()
          VB: Public Sub initProj
      overload: Virgis.AppState.initProj*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.AppState.layers
      commentId: P:Virgis.AppState.layers
      language: CSharp
      name:
        CSharp: layers
        VB: layers
      nameWithType:
        CSharp: AppState.layers
        VB: AppState.layers
      qualifiedName:
        CSharp: Virgis.AppState.layers
        VB: Virgis.AppState.layers
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: layers
        path: ''
        startLine: 171
      syntax:
        content:
          CSharp: public List<Component> layers { get; }
          VB: Public ReadOnly Property layers As List(Of Component)
        parameters: []
        return:
          type: System.Collections.Generic.List{Component}
      overload: Virgis.AppState.layers*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Virgis.AppState.addLayer(Component)
      commentId: M:Virgis.AppState.addLayer(Component)
      language: CSharp
      name:
        CSharp: addLayer(Component)
        VB: addLayer(Component)
      nameWithType:
        CSharp: AppState.addLayer(Component)
        VB: AppState.addLayer(Component)
      qualifiedName:
        CSharp: Virgis.AppState.addLayer(Component)
        VB: Virgis.AppState.addLayer(Component)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: addLayer
        path: ''
        startLine: 175
      syntax:
        content:
          CSharp: public void addLayer(Component layer)
          VB: Public Sub addLayer(layer As Component)
        parameters:
        - id: layer
          type: Component
      overload: Virgis.AppState.addLayer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.AppState.clearLayers
      commentId: M:Virgis.AppState.clearLayers
      language: CSharp
      name:
        CSharp: clearLayers()
        VB: clearLayers()
      nameWithType:
        CSharp: AppState.clearLayers()
        VB: AppState.clearLayers()
      qualifiedName:
        CSharp: Virgis.AppState.clearLayers()
        VB: Virgis.AppState.clearLayers()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: clearLayers
        path: ''
        startLine: 179
      syntax:
        content:
          CSharp: public void clearLayers()
          VB: Public Sub clearLayers
      overload: Virgis.AppState.clearLayers*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.AppState.mainCamera
      commentId: P:Virgis.AppState.mainCamera
      language: CSharp
      name:
        CSharp: mainCamera
        VB: mainCamera
      nameWithType:
        CSharp: AppState.mainCamera
        VB: AppState.mainCamera
      qualifiedName:
        CSharp: Virgis.AppState.mainCamera
        VB: Virgis.AppState.mainCamera
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: mainCamera
        path: ''
        startLine: 183
      syntax:
        content:
          CSharp: public Camera mainCamera { get; set; }
          VB: Public Property mainCamera As Camera
        parameters: []
        return:
          type: Camera
      overload: Virgis.AppState.mainCamera*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Virgis.AppState.trackingSpace
      commentId: P:Virgis.AppState.trackingSpace
      language: CSharp
      name:
        CSharp: trackingSpace
        VB: trackingSpace
      nameWithType:
        CSharp: AppState.trackingSpace
        VB: AppState.trackingSpace
      qualifiedName:
        CSharp: Virgis.AppState.trackingSpace
        VB: Virgis.AppState.trackingSpace
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: trackingSpace
        path: ''
        startLine: 187
      syntax:
        content:
          CSharp: public GameObject trackingSpace { get; set; }
          VB: Public Property trackingSpace As GameObject
        parameters: []
        return:
          type: GameObject
      overload: Virgis.AppState.trackingSpace*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Virgis.AppState.InEditSession
      commentId: M:Virgis.AppState.InEditSession
      language: CSharp
      name:
        CSharp: InEditSession()
        VB: InEditSession()
      nameWithType:
        CSharp: AppState.InEditSession()
        VB: AppState.InEditSession()
      qualifiedName:
        CSharp: Virgis.AppState.InEditSession()
        VB: Virgis.AppState.InEditSession()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: InEditSession
        path: ''
        startLine: 191
      syntax:
        content:
          CSharp: public bool InEditSession()
          VB: Public Function InEditSession As Boolean
        return:
          type: System.Boolean
      overload: Virgis.AppState.InEditSession*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.AppState.StartEditSession
      commentId: M:Virgis.AppState.StartEditSession
      language: CSharp
      name:
        CSharp: StartEditSession()
        VB: StartEditSession()
      nameWithType:
        CSharp: AppState.StartEditSession()
        VB: AppState.StartEditSession()
      qualifiedName:
        CSharp: Virgis.AppState.StartEditSession()
        VB: Virgis.AppState.StartEditSession()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: StartEditSession
        path: ''
        startLine: 195
      syntax:
        content:
          CSharp: public void StartEditSession()
          VB: Public Sub StartEditSession
      overload: Virgis.AppState.StartEditSession*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.AppState.StopSaveEditSession
      commentId: M:Virgis.AppState.StopSaveEditSession
      language: CSharp
      name:
        CSharp: StopSaveEditSession()
        VB: StopSaveEditSession()
      nameWithType:
        CSharp: AppState.StopSaveEditSession()
        VB: AppState.StopSaveEditSession()
      qualifiedName:
        CSharp: Virgis.AppState.StopSaveEditSession()
        VB: Virgis.AppState.StopSaveEditSession()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: StopSaveEditSession
        path: ''
        startLine: 199
      syntax:
        content:
          CSharp: public void StopSaveEditSession()
          VB: Public Sub StopSaveEditSession
      overload: Virgis.AppState.StopSaveEditSession*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.AppState.StopDiscardEditSession
      commentId: M:Virgis.AppState.StopDiscardEditSession
      language: CSharp
      name:
        CSharp: StopDiscardEditSession()
        VB: StopDiscardEditSession()
      nameWithType:
        CSharp: AppState.StopDiscardEditSession()
        VB: AppState.StopDiscardEditSession()
      qualifiedName:
        CSharp: Virgis.AppState.StopDiscardEditSession()
        VB: Virgis.AppState.StopDiscardEditSession()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: StopDiscardEditSession
        path: ''
        startLine: 203
      syntax:
        content:
          CSharp: public void StopDiscardEditSession()
          VB: Public Sub StopDiscardEditSession
      overload: Virgis.AppState.StopDiscardEditSession*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.MapInitialize
    commentId: T:Virgis.MapInitialize
    language: CSharp
    name:
      CSharp: MapInitialize
      VB: MapInitialize
    nameWithType:
      CSharp: MapInitialize
      VB: MapInitialize
    qualifiedName:
      CSharp: Virgis.MapInitialize
      VB: Virgis.MapInitialize
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: MapInitialize
      path: ''
      startLine: 226
    summary: "\nThis script initialises the project and loads the Project and Layer data.\n\nIt is run once at Startup\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class MapInitialize : VirgisLayer, IVirgisLayer, IVirgisEntity'
        VB: >-
          Public MustInherit Class MapInitialize

              Inherits VirgisLayer

              Implements IVirgisLayer, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisLayer
    implements:
    - Virgis.IVirgisLayer
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.VirgisLayer._layer
    - Virgis.VirgisLayer.featureType
    - Virgis.VirgisLayer.changed
    - Virgis.VirgisLayer._id
    - Virgis.VirgisLayer._editable
    - Virgis.VirgisLayer._crs
    - Virgis.VirgisLayer.AddFeature(Vector3[])
    - Virgis.VirgisLayer.Draw
    - Virgis.VirgisLayer.CheckPoint
    - Virgis.VirgisLayer.Save
    - Virgis.VirgisLayer.Translate(Virgis.MoveArgs)
    - Virgis.VirgisLayer.MoveAxis(Virgis.MoveArgs)
    - Virgis.VirgisLayer.MoveTo(Virgis.MoveArgs)
    - Virgis.VirgisLayer.VertexMove(Virgis.MoveArgs)
    - Virgis.VirgisLayer.Selected(Virgis.SelectionType)
    - Virgis.VirgisLayer.UnSelected(Virgis.SelectionType)
    - Virgis.VirgisLayer.GetClosest(Vector3,System.Guid[])
    - Virgis.VirgisLayer.GetFeature(System.Guid)
    - Virgis.VirgisLayer.GetId
    - Virgis.VirgisLayer.GetMetadata
    - Virgis.VirgisLayer.SetMetadata(RecordSet)
    - Virgis.VirgisLayer.SetVisible(System.Boolean)
    - Virgis.VirgisLayer._set_visible
    - Virgis.VirgisLayer.IsVisible
    - Virgis.VirgisLayer.SetEditable(System.Boolean)
    - Virgis.VirgisLayer.IsEditable
    - Virgis.VirgisLayer.SetCrs(SpatialReference)
    - Virgis.VirgisLayer.GetCrs
    - Virgis.VirgisLayer.Equals(System.Object)
    - Virgis.VirgisLayer.GetHashCode
    - Virgis.VirgisLayer.Equals(Virgis.VirgisLayer)
    - Virgis.VirgisLayer.GetLayer
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: Virgis.MapInitialize.appState
      commentId: F:Virgis.MapInitialize.appState
      language: CSharp
      name:
        CSharp: appState
        VB: appState
      nameWithType:
        CSharp: MapInitialize.appState
        VB: MapInitialize.appState
      qualifiedName:
        CSharp: Virgis.MapInitialize.appState
        VB: Virgis.MapInitialize.appState
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: appState
        path: ''
        startLine: 229
      syntax:
        content:
          CSharp: public AppState appState
          VB: Public appState As AppState
        return:
          type: Virgis.AppState
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MapInitialize.Load(System.String)
      commentId: M:Virgis.MapInitialize.Load(System.String)
      language: CSharp
      name:
        CSharp: Load(String)
        VB: Load(String)
      nameWithType:
        CSharp: MapInitialize.Load(String)
        VB: MapInitialize.Load(String)
      qualifiedName:
        CSharp: Virgis.MapInitialize.Load(System.String)
        VB: Virgis.MapInitialize.Load(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Load
        path: ''
        startLine: 262
      syntax:
        content:
          CSharp: public Task<bool> Load(string file)
          VB: Public Function Load(file As String) As Task(Of Boolean)
        parameters:
        - id: file
          type: System.String
        return:
          type: Task{System.Boolean}
      overload: Virgis.MapInitialize.Load*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MapInitialize.createLayer(RecordSet)
      commentId: M:Virgis.MapInitialize.createLayer(RecordSet)
      language: CSharp
      name:
        CSharp: createLayer(RecordSet)
        VB: createLayer(RecordSet)
      nameWithType:
        CSharp: MapInitialize.createLayer(RecordSet)
        VB: MapInitialize.createLayer(RecordSet)
      qualifiedName:
        CSharp: Virgis.MapInitialize.createLayer(RecordSet)
        VB: Virgis.MapInitialize.createLayer(RecordSet)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: createLayer
        path: ''
        startLine: 293
      syntax:
        content:
          CSharp: public abstract Task<VirgisLayer> createLayer(RecordSet thisLayer)
          VB: Public MustOverride Function createLayer(thisLayer As RecordSet) As Task(Of VirgisLayer)
        parameters:
        - id: thisLayer
          type: RecordSet
        return:
          type: Task{Virgis.VirgisLayer}
      overload: Virgis.MapInitialize.createLayer*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: Virgis.MapInitialize.Add(Virgis.MoveArgs)
      commentId: M:Virgis.MapInitialize.Add(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Add(MoveArgs)
        VB: Add(MoveArgs)
      nameWithType:
        CSharp: MapInitialize.Add(MoveArgs)
        VB: MapInitialize.Add(MoveArgs)
      qualifiedName:
        CSharp: Virgis.MapInitialize.Add(Virgis.MoveArgs)
        VB: Virgis.MapInitialize.Add(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Add
        path: ''
        startLine: 321
      syntax:
        content:
          CSharp: public void Add(MoveArgs args)
          VB: Public Sub Add(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.MapInitialize.Add*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MapInitialize._addFeature(Vector3[])
      commentId: M:Virgis.MapInitialize._addFeature(Vector3[])
      language: CSharp
      name:
        CSharp: _addFeature(Vector3[])
        VB: _addFeature(Vector3())
      nameWithType:
        CSharp: MapInitialize._addFeature(Vector3[])
        VB: MapInitialize._addFeature(Vector3())
      qualifiedName:
        CSharp: Virgis.MapInitialize._addFeature(Vector3[])
        VB: Virgis.MapInitialize._addFeature(Vector3())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _addFeature
        path: ''
        startLine: 326
      syntax:
        content:
          CSharp: protected override VirgisFeature _addFeature(Vector3[] geometry)
          VB: Protected Overrides Function _addFeature(geometry As Vector3()) As VirgisFeature
        parameters:
        - id: geometry
          type: Vector3[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.MapInitialize._addFeature*
      overridden: Virgis.VirgisLayer._addFeature(Vector3[])
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.MapInitialize._draw
      commentId: M:Virgis.MapInitialize._draw
      language: CSharp
      name:
        CSharp: _draw()
        VB: _draw()
      nameWithType:
        CSharp: MapInitialize._draw()
        VB: MapInitialize._draw()
      qualifiedName:
        CSharp: Virgis.MapInitialize._draw()
        VB: Virgis.MapInitialize._draw()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _draw
        path: ''
        startLine: 339
      syntax:
        content:
          CSharp: protected override void _draw()
          VB: Protected Overrides Sub _draw
      overload: Virgis.MapInitialize._draw*
      overridden: Virgis.VirgisLayer._draw
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.MapInitialize._checkpoint
      commentId: M:Virgis.MapInitialize._checkpoint
      language: CSharp
      name:
        CSharp: _checkpoint()
        VB: _checkpoint()
      nameWithType:
        CSharp: MapInitialize._checkpoint()
        VB: MapInitialize._checkpoint()
      qualifiedName:
        CSharp: Virgis.MapInitialize._checkpoint()
        VB: Virgis.MapInitialize._checkpoint()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _checkpoint
        path: ''
        startLine: 344
      syntax:
        content:
          CSharp: protected override void _checkpoint()
          VB: Protected Overrides Sub _checkpoint
      overload: Virgis.MapInitialize._checkpoint*
      overridden: Virgis.VirgisLayer._checkpoint
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.MapInitialize.Save(System.Boolean)
      commentId: M:Virgis.MapInitialize.Save(System.Boolean)
      language: CSharp
      name:
        CSharp: Save(Boolean)
        VB: Save(Boolean)
      nameWithType:
        CSharp: MapInitialize.Save(Boolean)
        VB: MapInitialize.Save(Boolean)
      qualifiedName:
        CSharp: Virgis.MapInitialize.Save(System.Boolean)
        VB: Virgis.MapInitialize.Save(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Save
        path: ''
        startLine: 348
      syntax:
        content:
          CSharp: public Task<RecordSet> Save(bool all = true)
          VB: Public Function Save(all As Boolean = True) As Task(Of RecordSet)
        parameters:
        - id: all
          type: System.Boolean
        return:
          type: Task{RecordSet}
      overload: Virgis.MapInitialize.Save*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MapInitialize._save
      commentId: M:Virgis.MapInitialize._save
      language: CSharp
      name:
        CSharp: _save()
        VB: _save()
      nameWithType:
        CSharp: MapInitialize._save()
        VB: MapInitialize._save()
      qualifiedName:
        CSharp: Virgis.MapInitialize._save()
        VB: Virgis.MapInitialize._save()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _save
        path: ''
        startLine: 371
      syntax:
        content:
          CSharp: protected override Task _save()
          VB: Protected Overrides Function _save As Task
        return:
          type: Task
      overload: Virgis.MapInitialize._save*
      overridden: Virgis.VirgisLayer._save
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.MapInitialize._onStartEditSession(System.Boolean)
      commentId: M:Virgis.MapInitialize._onStartEditSession(System.Boolean)
      language: CSharp
      name:
        CSharp: _onStartEditSession(Boolean)
        VB: _onStartEditSession(Boolean)
      nameWithType:
        CSharp: MapInitialize._onStartEditSession(Boolean)
        VB: MapInitialize._onStartEditSession(Boolean)
      qualifiedName:
        CSharp: Virgis.MapInitialize._onStartEditSession(System.Boolean)
        VB: Virgis.MapInitialize._onStartEditSession(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _onStartEditSession
        path: ''
        startLine: 377
      syntax:
        content:
          CSharp: protected void _onStartEditSession(bool ignore)
          VB: Protected Sub _onStartEditSession(ignore As Boolean)
        parameters:
        - id: ignore
          type: System.Boolean
      overload: Virgis.MapInitialize._onStartEditSession*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.MapInitialize._onExitEditSession(System.Boolean)
      commentId: M:Virgis.MapInitialize._onExitEditSession(System.Boolean)
      language: CSharp
      name:
        CSharp: _onExitEditSession(Boolean)
        VB: _onExitEditSession(Boolean)
      nameWithType:
        CSharp: MapInitialize._onExitEditSession(Boolean)
        VB: MapInitialize._onExitEditSession(Boolean)
      qualifiedName:
        CSharp: Virgis.MapInitialize._onExitEditSession(System.Boolean)
        VB: Virgis.MapInitialize._onExitEditSession(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _onExitEditSession
        path: ''
        startLine: 386
      summary: "\nCalled when an edit session ends\n"
      example: []
      syntax:
        content:
          CSharp: protected void _onExitEditSession(bool saved)
          VB: Protected Sub _onExitEditSession(saved As Boolean)
        parameters:
        - id: saved
          type: System.Boolean
          description: true if stop and save, false if stop and discard
      overload: Virgis.MapInitialize._onExitEditSession*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.MapInitialize.GetFeatureShape
      commentId: M:Virgis.MapInitialize.GetFeatureShape
      language: CSharp
      name:
        CSharp: GetFeatureShape()
        VB: GetFeatureShape()
      nameWithType:
        CSharp: MapInitialize.GetFeatureShape()
        VB: MapInitialize.GetFeatureShape()
      qualifiedName:
        CSharp: Virgis.MapInitialize.GetFeatureShape()
        VB: Virgis.MapInitialize.GetFeatureShape()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetFeatureShape
        path: ''
        startLine: 394
      syntax:
        content:
          CSharp: public override GameObject GetFeatureShape()
          VB: Public Overrides Function GetFeatureShape As GameObject
        return:
          type: GameObject
      overload: Virgis.MapInitialize.GetFeatureShape*
      overridden: Virgis.VirgisLayer.GetFeatureShape
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Virgis.DataRotator
    commentId: T:Virgis.DataRotator
    language: CSharp
    name:
      CSharp: DataRotator
      VB: DataRotator
    nameWithType:
      CSharp: DataRotator
      VB: DataRotator
    qualifiedName:
      CSharp: Virgis.DataRotator
      VB: Virgis.DataRotator
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: DataRotator
      path: ''
      startLine: 408
    syntax:
      content:
        CSharp: 'public class DataRotator : MonoBehaviour'
        VB: >-
          Public Class DataRotator

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.DataRotator.color
      commentId: F:Virgis.DataRotator.color
      language: CSharp
      name:
        CSharp: color
        VB: color
      nameWithType:
        CSharp: DataRotator.color
        VB: DataRotator.color
      qualifiedName:
        CSharp: Virgis.DataRotator.color
        VB: Virgis.DataRotator.color
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: color
        path: ''
        startLine: 410
      syntax:
        content:
          CSharp: public Color color
          VB: Public color As Color
        return:
          type: Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.DataRotator.anticolor
      commentId: F:Virgis.DataRotator.anticolor
      language: CSharp
      name:
        CSharp: anticolor
        VB: anticolor
      nameWithType:
        CSharp: DataRotator.anticolor
        VB: DataRotator.anticolor
      qualifiedName:
        CSharp: Virgis.DataRotator.anticolor
        VB: Virgis.DataRotator.anticolor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: anticolor
        path: ''
        startLine: 411
      syntax:
        content:
          CSharp: public Color anticolor
          VB: Public anticolor As Color
        return:
          type: Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.DataRotator.position
      commentId: F:Virgis.DataRotator.position
      language: CSharp
      name:
        CSharp: position
        VB: position
      nameWithType:
        CSharp: DataRotator.position
        VB: DataRotator.position
      qualifiedName:
        CSharp: Virgis.DataRotator.position
        VB: Virgis.DataRotator.position
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: position
        path: ''
        startLine: 412
      syntax:
        content:
          CSharp: public Vector3 position
          VB: Public position As Vector3
        return:
          type: Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.DataRotator.SetColor(Color)
      commentId: M:Virgis.DataRotator.SetColor(Color)
      language: CSharp
      name:
        CSharp: SetColor(Color)
        VB: SetColor(Color)
      nameWithType:
        CSharp: DataRotator.SetColor(Color)
        VB: DataRotator.SetColor(Color)
      qualifiedName:
        CSharp: Virgis.DataRotator.SetColor(Color)
        VB: Virgis.DataRotator.SetColor(Color)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetColor
        path: ''
        startLine: 426
      syntax:
        content:
          CSharp: public void SetColor(Color newCol)
          VB: Public Sub SetColor(newCol As Color)
        parameters:
        - id: newCol
          type: Color
      overload: Virgis.DataRotator.SetColor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.DataRotator.Selected(System.Int32)
      commentId: M:Virgis.DataRotator.Selected(System.Int32)
      language: CSharp
      name:
        CSharp: Selected(Int32)
        VB: Selected(Int32)
      nameWithType:
        CSharp: DataRotator.Selected(Int32)
        VB: DataRotator.Selected(Int32)
      qualifiedName:
        CSharp: Virgis.DataRotator.Selected(System.Int32)
        VB: Virgis.DataRotator.Selected(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Selected
        path: ''
        startLine: 435
      syntax:
        content:
          CSharp: public void Selected(int button)
          VB: Public Sub Selected(button As Integer)
        parameters:
        - id: button
          type: System.Int32
      overload: Virgis.DataRotator.Selected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.DataRotator.UnSelected(System.Int32)
      commentId: M:Virgis.DataRotator.UnSelected(System.Int32)
      language: CSharp
      name:
        CSharp: UnSelected(Int32)
        VB: UnSelected(Int32)
      nameWithType:
        CSharp: DataRotator.UnSelected(Int32)
        VB: DataRotator.UnSelected(Int32)
      qualifiedName:
        CSharp: Virgis.DataRotator.UnSelected(System.Int32)
        VB: Virgis.DataRotator.UnSelected(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: UnSelected
        path: ''
        startLine: 443
      syntax:
        content:
          CSharp: public void UnSelected(int button)
          VB: Public Sub UnSelected(button As Integer)
        parameters:
        - id: button
          type: System.Int32
      overload: Virgis.DataRotator.UnSelected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.DataRotator.Translate(Virgis.MoveArgs)
      commentId: M:Virgis.DataRotator.Translate(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Translate(MoveArgs)
        VB: Translate(MoveArgs)
      nameWithType:
        CSharp: DataRotator.Translate(MoveArgs)
        VB: DataRotator.Translate(MoveArgs)
      qualifiedName:
        CSharp: Virgis.DataRotator.Translate(Virgis.MoveArgs)
        VB: Virgis.DataRotator.Translate(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Translate
        path: ''
        startLine: 451
      syntax:
        content:
          CSharp: public void Translate(MoveArgs args)
          VB: Public Sub Translate(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.DataRotator.Translate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.MenuFacade
    commentId: T:Virgis.MenuFacade
    language: CSharp
    name:
      CSharp: MenuFacade
      VB: MenuFacade
    nameWithType:
      CSharp: MenuFacade
      VB: MenuFacade
    qualifiedName:
      CSharp: Virgis.MenuFacade
      VB: Virgis.MenuFacade
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: MenuFacade
      path: ''
      startLine: 699
    summary: "\nMenuFacade is the mediator for all components within the Menus GO.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class MenuFacade : MonoBehaviour'
        VB: >-
          Public Class MenuFacade

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.MenuFacade.startEditButton
      commentId: F:Virgis.MenuFacade.startEditButton
      language: CSharp
      name:
        CSharp: startEditButton
        VB: startEditButton
      nameWithType:
        CSharp: MenuFacade.startEditButton
        VB: MenuFacade.startEditButton
      qualifiedName:
        CSharp: Virgis.MenuFacade.startEditButton
        VB: Virgis.MenuFacade.startEditButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: startEditButton
        path: ''
        startLine: 701
      syntax:
        content:
          CSharp: public Button startEditButton
          VB: Public startEditButton As Button
        return:
          type: Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MenuFacade.stopSaveEditButton
      commentId: F:Virgis.MenuFacade.stopSaveEditButton
      language: CSharp
      name:
        CSharp: stopSaveEditButton
        VB: stopSaveEditButton
      nameWithType:
        CSharp: MenuFacade.stopSaveEditButton
        VB: MenuFacade.stopSaveEditButton
      qualifiedName:
        CSharp: Virgis.MenuFacade.stopSaveEditButton
        VB: Virgis.MenuFacade.stopSaveEditButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: stopSaveEditButton
        path: ''
        startLine: 702
      syntax:
        content:
          CSharp: public Button stopSaveEditButton
          VB: Public stopSaveEditButton As Button
        return:
          type: Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MenuFacade.stopDiscardEditButton
      commentId: F:Virgis.MenuFacade.stopDiscardEditButton
      language: CSharp
      name:
        CSharp: stopDiscardEditButton
        VB: stopDiscardEditButton
      nameWithType:
        CSharp: MenuFacade.stopDiscardEditButton
        VB: MenuFacade.stopDiscardEditButton
      qualifiedName:
        CSharp: Virgis.MenuFacade.stopDiscardEditButton
        VB: Virgis.MenuFacade.stopDiscardEditButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: stopDiscardEditButton
        path: ''
        startLine: 703
      syntax:
        content:
          CSharp: public Button stopDiscardEditButton
          VB: Public stopDiscardEditButton As Button
        return:
          type: Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MenuFacade.fileButton
      commentId: F:Virgis.MenuFacade.fileButton
      language: CSharp
      name:
        CSharp: fileButton
        VB: fileButton
      nameWithType:
        CSharp: MenuFacade.fileButton
        VB: MenuFacade.fileButton
      qualifiedName:
        CSharp: Virgis.MenuFacade.fileButton
        VB: Virgis.MenuFacade.fileButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: fileButton
        path: ''
        startLine: 704
      syntax:
        content:
          CSharp: public Button fileButton
          VB: Public fileButton As Button
        return:
          type: Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MenuFacade.quitButton
      commentId: F:Virgis.MenuFacade.quitButton
      language: CSharp
      name:
        CSharp: quitButton
        VB: quitButton
      nameWithType:
        CSharp: MenuFacade.quitButton
        VB: MenuFacade.quitButton
      qualifiedName:
        CSharp: Virgis.MenuFacade.quitButton
        VB: Virgis.MenuFacade.quitButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: quitButton
        path: ''
        startLine: 705
      syntax:
        content:
          CSharp: public Button quitButton
          VB: Public quitButton As Button
        return:
          type: Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MenuFacade.layersUI
      commentId: F:Virgis.MenuFacade.layersUI
      language: CSharp
      name:
        CSharp: layersUI
        VB: layersUI
      nameWithType:
        CSharp: MenuFacade.layersUI
        VB: MenuFacade.layersUI
      qualifiedName:
        CSharp: Virgis.MenuFacade.layersUI
        VB: Virgis.MenuFacade.layersUI
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: layersUI
        path: ''
        startLine: 706
      syntax:
        content:
          CSharp: public GameObject layersUI
          VB: Public layersUI As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MenuFacade.startMenu
      commentId: F:Virgis.MenuFacade.startMenu
      language: CSharp
      name:
        CSharp: startMenu
        VB: startMenu
      nameWithType:
        CSharp: MenuFacade.startMenu
        VB: MenuFacade.startMenu
      qualifiedName:
        CSharp: Virgis.MenuFacade.startMenu
        VB: Virgis.MenuFacade.startMenu
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: startMenu
        path: ''
        startLine: 707
      syntax:
        content:
          CSharp: public GameObject startMenu
          VB: Public startMenu As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MenuFacade.Visible(System.Boolean)
      commentId: M:Virgis.MenuFacade.Visible(System.Boolean)
      language: CSharp
      name:
        CSharp: Visible(Boolean)
        VB: Visible(Boolean)
      nameWithType:
        CSharp: MenuFacade.Visible(Boolean)
        VB: MenuFacade.Visible(Boolean)
      qualifiedName:
        CSharp: Virgis.MenuFacade.Visible(System.Boolean)
        VB: Virgis.MenuFacade.Visible(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Visible
        path: ''
        startLine: 728
      syntax:
        content:
          CSharp: public void Visible(bool thisEvent)
          VB: Public Sub Visible(thisEvent As Boolean)
        parameters:
        - id: thisEvent
          type: System.Boolean
      overload: Virgis.MenuFacade.Visible*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MenuFacade.OnShowLayersButtonClicked
      commentId: M:Virgis.MenuFacade.OnShowLayersButtonClicked
      language: CSharp
      name:
        CSharp: OnShowLayersButtonClicked()
        VB: OnShowLayersButtonClicked()
      nameWithType:
        CSharp: MenuFacade.OnShowLayersButtonClicked()
        VB: MenuFacade.OnShowLayersButtonClicked()
      qualifiedName:
        CSharp: Virgis.MenuFacade.OnShowLayersButtonClicked()
        VB: Virgis.MenuFacade.OnShowLayersButtonClicked()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: OnShowLayersButtonClicked
        path: ''
        startLine: 737
      syntax:
        content:
          CSharp: public void OnShowLayersButtonClicked()
          VB: Public Sub OnShowLayersButtonClicked
      overload: Virgis.MenuFacade.OnShowLayersButtonClicked*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MenuFacade.OnStartEditButtonClicked
      commentId: M:Virgis.MenuFacade.OnStartEditButtonClicked
      language: CSharp
      name:
        CSharp: OnStartEditButtonClicked()
        VB: OnStartEditButtonClicked()
      nameWithType:
        CSharp: MenuFacade.OnStartEditButtonClicked()
        VB: MenuFacade.OnStartEditButtonClicked()
      qualifiedName:
        CSharp: Virgis.MenuFacade.OnStartEditButtonClicked()
        VB: Virgis.MenuFacade.OnStartEditButtonClicked()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: OnStartEditButtonClicked
        path: ''
        startLine: 742
      syntax:
        content:
          CSharp: public void OnStartEditButtonClicked()
          VB: Public Sub OnStartEditButtonClicked
      overload: Virgis.MenuFacade.OnStartEditButtonClicked*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MenuFacade.OnStopSaveEditButtonClicked
      commentId: M:Virgis.MenuFacade.OnStopSaveEditButtonClicked
      language: CSharp
      name:
        CSharp: OnStopSaveEditButtonClicked()
        VB: OnStopSaveEditButtonClicked()
      nameWithType:
        CSharp: MenuFacade.OnStopSaveEditButtonClicked()
        VB: MenuFacade.OnStopSaveEditButtonClicked()
      qualifiedName:
        CSharp: Virgis.MenuFacade.OnStopSaveEditButtonClicked()
        VB: Virgis.MenuFacade.OnStopSaveEditButtonClicked()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: OnStopSaveEditButtonClicked
        path: ''
        startLine: 746
      syntax:
        content:
          CSharp: public void OnStopSaveEditButtonClicked()
          VB: Public Sub OnStopSaveEditButtonClicked
      overload: Virgis.MenuFacade.OnStopSaveEditButtonClicked*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MenuFacade.OnStopDiscardEditButtonClicked
      commentId: M:Virgis.MenuFacade.OnStopDiscardEditButtonClicked
      language: CSharp
      name:
        CSharp: OnStopDiscardEditButtonClicked()
        VB: OnStopDiscardEditButtonClicked()
      nameWithType:
        CSharp: MenuFacade.OnStopDiscardEditButtonClicked()
        VB: MenuFacade.OnStopDiscardEditButtonClicked()
      qualifiedName:
        CSharp: Virgis.MenuFacade.OnStopDiscardEditButtonClicked()
        VB: Virgis.MenuFacade.OnStopDiscardEditButtonClicked()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: OnStopDiscardEditButtonClicked
        path: ''
        startLine: 750
      syntax:
        content:
          CSharp: public void OnStopDiscardEditButtonClicked()
          VB: Public Sub OnStopDiscardEditButtonClicked
      overload: Virgis.MenuFacade.OnStopDiscardEditButtonClicked*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MenuFacade.onFileClicked
      commentId: M:Virgis.MenuFacade.onFileClicked
      language: CSharp
      name:
        CSharp: onFileClicked()
        VB: onFileClicked()
      nameWithType:
        CSharp: MenuFacade.onFileClicked()
        VB: MenuFacade.onFileClicked()
      qualifiedName:
        CSharp: Virgis.MenuFacade.onFileClicked()
        VB: Virgis.MenuFacade.onFileClicked()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: onFileClicked
        path: ''
        startLine: 754
      syntax:
        content:
          CSharp: public void onFileClicked()
          VB: Public Sub onFileClicked
      overload: Virgis.MenuFacade.onFileClicked*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.LayersUI
    commentId: T:Virgis.LayersUI
    language: CSharp
    name:
      CSharp: LayersUI
      VB: LayersUI
    nameWithType:
      CSharp: LayersUI
      VB: LayersUI
    qualifiedName:
      CSharp: Virgis.LayersUI
      VB: Virgis.LayersUI
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: LayersUI
      path: ''
      startLine: 807
    summary: "\nLayersUI is the mediator for all components within the Layers UI GO (i.e. Layers Menu).\n"
    example: []
    syntax:
      content:
        CSharp: 'public class LayersUI : MonoBehaviour'
        VB: >-
          Public Class LayersUI

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.LayersUI.layersScrollView
      commentId: F:Virgis.LayersUI.layersScrollView
      language: CSharp
      name:
        CSharp: layersScrollView
        VB: layersScrollView
      nameWithType:
        CSharp: LayersUI.layersScrollView
        VB: LayersUI.layersScrollView
      qualifiedName:
        CSharp: Virgis.LayersUI.layersScrollView
        VB: Virgis.LayersUI.layersScrollView
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: layersScrollView
        path: ''
        startLine: 809
      syntax:
        content:
          CSharp: public GameObject layersScrollView
          VB: Public layersScrollView As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LayersUI.layerPanelPrefab
      commentId: F:Virgis.LayersUI.layerPanelPrefab
      language: CSharp
      name:
        CSharp: layerPanelPrefab
        VB: layerPanelPrefab
      nameWithType:
        CSharp: LayersUI.layerPanelPrefab
        VB: LayersUI.layerPanelPrefab
      qualifiedName:
        CSharp: Virgis.LayersUI.layerPanelPrefab
        VB: Virgis.LayersUI.layerPanelPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: layerPanelPrefab
        path: ''
        startLine: 810
      syntax:
        content:
          CSharp: public GameObject layerPanelPrefab
          VB: Public layerPanelPrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LayersUI.menus
      commentId: F:Virgis.LayersUI.menus
      language: CSharp
      name:
        CSharp: menus
        VB: menus
      nameWithType:
        CSharp: LayersUI.menus
        VB: LayersUI.menus
      qualifiedName:
        CSharp: Virgis.LayersUI.menus
        VB: Virgis.LayersUI.menus
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: menus
        path: ''
        startLine: 811
      syntax:
        content:
          CSharp: public GameObject menus
          VB: Public menus As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LayersUI.OnShowMenuButtonClicked
      commentId: M:Virgis.LayersUI.OnShowMenuButtonClicked
      language: CSharp
      name:
        CSharp: OnShowMenuButtonClicked()
        VB: OnShowMenuButtonClicked()
      nameWithType:
        CSharp: LayersUI.OnShowMenuButtonClicked()
        VB: LayersUI.OnShowMenuButtonClicked()
      qualifiedName:
        CSharp: Virgis.LayersUI.OnShowMenuButtonClicked()
        VB: Virgis.LayersUI.OnShowMenuButtonClicked()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: OnShowMenuButtonClicked
        path: ''
        startLine: 827
      syntax:
        content:
          CSharp: public void OnShowMenuButtonClicked()
          VB: Public Sub OnShowMenuButtonClicked
      overload: Virgis.LayersUI.OnShowMenuButtonClicked*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LayersUI.CreateLayerPanels
      commentId: M:Virgis.LayersUI.CreateLayerPanels
      language: CSharp
      name:
        CSharp: CreateLayerPanels()
        VB: CreateLayerPanels()
      nameWithType:
        CSharp: LayersUI.CreateLayerPanels()
        VB: LayersUI.CreateLayerPanels()
      qualifiedName:
        CSharp: Virgis.LayersUI.CreateLayerPanels()
        VB: Virgis.LayersUI.CreateLayerPanels()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CreateLayerPanels
        path: ''
        startLine: 833
      syntax:
        content:
          CSharp: public void CreateLayerPanels()
          VB: Public Sub CreateLayerPanels
      overload: Virgis.LayersUI.CreateLayerPanels*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.FeatureAdder
    commentId: T:Virgis.FeatureAdder
    language: CSharp
    name:
      CSharp: FeatureAdder
      VB: FeatureAdder
    nameWithType:
      CSharp: FeatureAdder
      VB: FeatureAdder
    qualifiedName:
      CSharp: Virgis.FeatureAdder
      VB: Virgis.FeatureAdder
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: FeatureAdder
      path: ''
      startLine: 1027
    syntax:
      content:
        CSharp: 'public class FeatureAdder : MonoBehaviour'
        VB: >-
          Public Class FeatureAdder

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.FeatureAdder.blueCubePrefab
      commentId: F:Virgis.FeatureAdder.blueCubePrefab
      language: CSharp
      name:
        CSharp: blueCubePrefab
        VB: blueCubePrefab
      nameWithType:
        CSharp: FeatureAdder.blueCubePrefab
        VB: FeatureAdder.blueCubePrefab
      qualifiedName:
        CSharp: Virgis.FeatureAdder.blueCubePrefab
        VB: Virgis.FeatureAdder.blueCubePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: blueCubePrefab
        path: ''
        startLine: 1028
      syntax:
        content:
          CSharp: public GameObject blueCubePrefab
          VB: Public blueCubePrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FeatureAdder.defaultMarkerShape
      commentId: F:Virgis.FeatureAdder.defaultMarkerShape
      language: CSharp
      name:
        CSharp: defaultMarkerShape
        VB: defaultMarkerShape
      nameWithType:
        CSharp: FeatureAdder.defaultMarkerShape
        VB: FeatureAdder.defaultMarkerShape
      qualifiedName:
        CSharp: Virgis.FeatureAdder.defaultMarkerShape
        VB: Virgis.FeatureAdder.defaultMarkerShape
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: defaultMarkerShape
        path: ''
        startLine: 1029
      syntax:
        content:
          CSharp: public GameObject defaultMarkerShape
          VB: Public defaultMarkerShape As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FeatureAdder.LeftTriggerPressed(System.Boolean)
      commentId: M:Virgis.FeatureAdder.LeftTriggerPressed(System.Boolean)
      language: CSharp
      name:
        CSharp: LeftTriggerPressed(Boolean)
        VB: LeftTriggerPressed(Boolean)
      nameWithType:
        CSharp: FeatureAdder.LeftTriggerPressed(Boolean)
        VB: FeatureAdder.LeftTriggerPressed(Boolean)
      qualifiedName:
        CSharp: Virgis.FeatureAdder.LeftTriggerPressed(System.Boolean)
        VB: Virgis.FeatureAdder.LeftTriggerPressed(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: LeftTriggerPressed
        path: ''
        startLine: 1064
      syntax:
        content:
          CSharp: public void LeftTriggerPressed(bool activate)
          VB: Public Sub LeftTriggerPressed(activate As Boolean)
        parameters:
        - id: activate
          type: System.Boolean
      overload: Virgis.FeatureAdder.LeftTriggerPressed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.FeatureAdder.LeftTriggerReleased(System.Boolean)
      commentId: M:Virgis.FeatureAdder.LeftTriggerReleased(System.Boolean)
      language: CSharp
      name:
        CSharp: LeftTriggerReleased(Boolean)
        VB: LeftTriggerReleased(Boolean)
      nameWithType:
        CSharp: FeatureAdder.LeftTriggerReleased(Boolean)
        VB: FeatureAdder.LeftTriggerReleased(Boolean)
      qualifiedName:
        CSharp: Virgis.FeatureAdder.LeftTriggerReleased(System.Boolean)
        VB: Virgis.FeatureAdder.LeftTriggerReleased(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: LeftTriggerReleased
        path: ''
        startLine: 1077
      syntax:
        content:
          CSharp: public void LeftTriggerReleased(bool activate)
          VB: Public Sub LeftTriggerReleased(activate As Boolean)
        parameters:
        - id: activate
          type: System.Boolean
      overload: Virgis.FeatureAdder.LeftTriggerReleased*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.QuitButton
    commentId: T:Virgis.QuitButton
    language: CSharp
    name:
      CSharp: QuitButton
      VB: QuitButton
    nameWithType:
      CSharp: QuitButton
      VB: QuitButton
    qualifiedName:
      CSharp: Virgis.QuitButton
      VB: Virgis.QuitButton
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: QuitButton
      path: ''
      startLine: 1206
    syntax:
      content:
        CSharp: 'public class QuitButton : MonoBehaviour'
        VB: >-
          Public Class QuitButton

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.QuitButton.OnClick
      commentId: M:Virgis.QuitButton.OnClick
      language: CSharp
      name:
        CSharp: OnClick()
        VB: OnClick()
      nameWithType:
        CSharp: QuitButton.OnClick()
        VB: QuitButton.OnClick()
      qualifiedName:
        CSharp: Virgis.QuitButton.OnClick()
        VB: Virgis.QuitButton.OnClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: OnClick
        path: ''
        startLine: 1208
      syntax:
        content:
          CSharp: public void OnClick()
          VB: Public Sub OnClick
      overload: Virgis.QuitButton.OnClick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.EditModeUI
    commentId: T:Virgis.EditModeUI
    language: CSharp
    name:
      CSharp: EditModeUI
      VB: EditModeUI
    nameWithType:
      CSharp: EditModeUI
      VB: EditModeUI
    qualifiedName:
      CSharp: Virgis.EditModeUI
      VB: Virgis.EditModeUI
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: EditModeUI
      path: ''
      startLine: 1222
    syntax:
      content:
        CSharp: 'public class EditModeUI : MonoBehaviour'
        VB: >-
          Public Class EditModeUI

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.EditModeUI.snapGridToggle
      commentId: F:Virgis.EditModeUI.snapGridToggle
      language: CSharp
      name:
        CSharp: snapGridToggle
        VB: snapGridToggle
      nameWithType:
        CSharp: EditModeUI.snapGridToggle
        VB: EditModeUI.snapGridToggle
      qualifiedName:
        CSharp: Virgis.EditModeUI.snapGridToggle
        VB: Virgis.EditModeUI.snapGridToggle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: snapGridToggle
        path: ''
        startLine: 1223
      syntax:
        content:
          CSharp: public Toggle snapGridToggle
          VB: Public snapGridToggle As Toggle
        return:
          type: Toggle
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.EditModeUI.snapAnchorToggle
      commentId: F:Virgis.EditModeUI.snapAnchorToggle
      language: CSharp
      name:
        CSharp: snapAnchorToggle
        VB: snapAnchorToggle
      nameWithType:
        CSharp: EditModeUI.snapAnchorToggle
        VB: EditModeUI.snapAnchorToggle
      qualifiedName:
        CSharp: Virgis.EditModeUI.snapAnchorToggle
        VB: Virgis.EditModeUI.snapAnchorToggle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: snapAnchorToggle
        path: ''
        startLine: 1224
      syntax:
        content:
          CSharp: public Toggle snapAnchorToggle
          VB: Public snapAnchorToggle As Toggle
        return:
          type: Toggle
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.EditModeUI.OnSnapGridToggleValueChanged(System.Boolean)
      commentId: M:Virgis.EditModeUI.OnSnapGridToggleValueChanged(System.Boolean)
      language: CSharp
      name:
        CSharp: OnSnapGridToggleValueChanged(Boolean)
        VB: OnSnapGridToggleValueChanged(Boolean)
      nameWithType:
        CSharp: EditModeUI.OnSnapGridToggleValueChanged(Boolean)
        VB: EditModeUI.OnSnapGridToggleValueChanged(Boolean)
      qualifiedName:
        CSharp: Virgis.EditModeUI.OnSnapGridToggleValueChanged(System.Boolean)
        VB: Virgis.EditModeUI.OnSnapGridToggleValueChanged(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: OnSnapGridToggleValueChanged
        path: ''
        startLine: 1242
      syntax:
        content:
          CSharp: public void OnSnapGridToggleValueChanged(bool enabled)
          VB: Public Sub OnSnapGridToggleValueChanged(enabled As Boolean)
        parameters:
        - id: enabled
          type: System.Boolean
      overload: Virgis.EditModeUI.OnSnapGridToggleValueChanged*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.EditModeUI.OnSnapAnchorToggleValueChanged(System.Boolean)
      commentId: M:Virgis.EditModeUI.OnSnapAnchorToggleValueChanged(System.Boolean)
      language: CSharp
      name:
        CSharp: OnSnapAnchorToggleValueChanged(Boolean)
        VB: OnSnapAnchorToggleValueChanged(Boolean)
      nameWithType:
        CSharp: EditModeUI.OnSnapAnchorToggleValueChanged(Boolean)
        VB: EditModeUI.OnSnapAnchorToggleValueChanged(Boolean)
      qualifiedName:
        CSharp: Virgis.EditModeUI.OnSnapAnchorToggleValueChanged(System.Boolean)
        VB: Virgis.EditModeUI.OnSnapAnchorToggleValueChanged(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: OnSnapAnchorToggleValueChanged
        path: ''
        startLine: 1258
      syntax:
        content:
          CSharp: public void OnSnapAnchorToggleValueChanged(bool enabled)
          VB: Public Sub OnSnapAnchorToggleValueChanged(enabled As Boolean)
        parameters:
        - id: enabled
          type: System.Boolean
      overload: Virgis.EditModeUI.OnSnapAnchorToggleValueChanged*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.LayerPanelEditSelectedEvent
    commentId: T:Virgis.LayerPanelEditSelectedEvent
    language: CSharp
    name:
      CSharp: LayerPanelEditSelectedEvent
      VB: LayerPanelEditSelectedEvent
    nameWithType:
      CSharp: LayerPanelEditSelectedEvent
      VB: LayerPanelEditSelectedEvent
    qualifiedName:
      CSharp: Virgis.LayerPanelEditSelectedEvent
      VB: Virgis.LayerPanelEditSelectedEvent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: LayerPanelEditSelectedEvent
      path: ''
      startLine: 1281
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class LayerPanelEditSelectedEvent : UnityEvent<LayerUIPanel, bool>
        VB: >-
          <Serializable>

          Public Class LayerPanelEditSelectedEvent

              Inherits UnityEvent(Of LayerUIPanel, Boolean)
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Virgis.LayerUIPanel
    commentId: T:Virgis.LayerUIPanel
    language: CSharp
    name:
      CSharp: LayerUIPanel
      VB: LayerUIPanel
    nameWithType:
      CSharp: LayerUIPanel
      VB: LayerUIPanel
    qualifiedName:
      CSharp: Virgis.LayerUIPanel
      VB: Virgis.LayerUIPanel
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: LayerUIPanel
      path: ''
      startLine: 1284
    syntax:
      content:
        CSharp: 'public class LayerUIPanel : MonoBehaviour'
        VB: >-
          Public Class LayerUIPanel

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.LayerUIPanel.editLayerToggle
      commentId: F:Virgis.LayerUIPanel.editLayerToggle
      language: CSharp
      name:
        CSharp: editLayerToggle
        VB: editLayerToggle
      nameWithType:
        CSharp: LayerUIPanel.editLayerToggle
        VB: LayerUIPanel.editLayerToggle
      qualifiedName:
        CSharp: Virgis.LayerUIPanel.editLayerToggle
        VB: Virgis.LayerUIPanel.editLayerToggle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: editLayerToggle
        path: ''
        startLine: 1285
      syntax:
        content:
          CSharp: public Toggle editLayerToggle
          VB: Public editLayerToggle As Toggle
        return:
          type: Toggle
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LayerUIPanel.viewLayerToggle
      commentId: F:Virgis.LayerUIPanel.viewLayerToggle
      language: CSharp
      name:
        CSharp: viewLayerToggle
        VB: viewLayerToggle
      nameWithType:
        CSharp: LayerUIPanel.viewLayerToggle
        VB: LayerUIPanel.viewLayerToggle
      qualifiedName:
        CSharp: Virgis.LayerUIPanel.viewLayerToggle
        VB: Virgis.LayerUIPanel.viewLayerToggle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: viewLayerToggle
        path: ''
        startLine: 1286
      syntax:
        content:
          CSharp: public Toggle viewLayerToggle
          VB: Public viewLayerToggle As Toggle
        return:
          type: Toggle
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LayerUIPanel.layer
      commentId: P:Virgis.LayerUIPanel.layer
      language: CSharp
      name:
        CSharp: layer
        VB: layer
      nameWithType:
        CSharp: LayerUIPanel.layer
        VB: LayerUIPanel.layer
      qualifiedName:
        CSharp: Virgis.LayerUIPanel.layer
        VB: Virgis.LayerUIPanel.layer
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: layer
        path: ''
        startLine: 1298
      syntax:
        content:
          CSharp: public IVirgisLayer layer { get; set; }
          VB: Public Property layer As IVirgisLayer
        parameters: []
        return:
          type: Virgis.IVirgisLayer
      overload: Virgis.LayerUIPanel.layer*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Virgis.LayerUIPanel.AddEditSelectedListener(UnityAction{Virgis.LayerUIPanel,System.Boolean})
      commentId: M:Virgis.LayerUIPanel.AddEditSelectedListener(UnityAction{Virgis.LayerUIPanel,System.Boolean})
      language: CSharp
      name:
        CSharp: AddEditSelectedListener(UnityAction<LayerUIPanel, Boolean>)
        VB: AddEditSelectedListener(UnityAction(Of LayerUIPanel, Boolean))
      nameWithType:
        CSharp: LayerUIPanel.AddEditSelectedListener(UnityAction<LayerUIPanel, Boolean>)
        VB: LayerUIPanel.AddEditSelectedListener(UnityAction(Of LayerUIPanel, Boolean))
      qualifiedName:
        CSharp: Virgis.LayerUIPanel.AddEditSelectedListener(UnityAction<Virgis.LayerUIPanel, System.Boolean>)
        VB: Virgis.LayerUIPanel.AddEditSelectedListener(UnityAction(Of Virgis.LayerUIPanel, System.Boolean))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AddEditSelectedListener
        path: ''
        startLine: 1311
      syntax:
        content:
          CSharp: public void AddEditSelectedListener(UnityAction<LayerUIPanel, bool> action)
          VB: Public Sub AddEditSelectedListener(action As UnityAction(Of LayerUIPanel, Boolean))
        parameters:
        - id: action
          type: UnityAction{Virgis.LayerUIPanel,System.Boolean}
      overload: Virgis.LayerUIPanel.AddEditSelectedListener*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.InfoPanelFacade
    commentId: T:Virgis.InfoPanelFacade
    language: CSharp
    name:
      CSharp: InfoPanelFacade
      VB: InfoPanelFacade
    nameWithType:
      CSharp: InfoPanelFacade
      VB: InfoPanelFacade
    qualifiedName:
      CSharp: Virgis.InfoPanelFacade
      VB: Virgis.InfoPanelFacade
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: InfoPanelFacade
      path: ''
      startLine: 1344
    syntax:
      content:
        CSharp: 'public class InfoPanelFacade : MonoBehaviour'
        VB: >-
          Public Class InfoPanelFacade

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.InfoPanelFacade.rightInfoPanel
      commentId: F:Virgis.InfoPanelFacade.rightInfoPanel
      language: CSharp
      name:
        CSharp: rightInfoPanel
        VB: rightInfoPanel
      nameWithType:
        CSharp: InfoPanelFacade.rightInfoPanel
        VB: InfoPanelFacade.rightInfoPanel
      qualifiedName:
        CSharp: Virgis.InfoPanelFacade.rightInfoPanel
        VB: Virgis.InfoPanelFacade.rightInfoPanel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: rightInfoPanel
        path: ''
        startLine: 1345
      syntax:
        content:
          CSharp: public bool rightInfoPanel
          VB: Public rightInfoPanel As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.InfoPanelFacade.leftInfoPanel
      commentId: F:Virgis.InfoPanelFacade.leftInfoPanel
      language: CSharp
      name:
        CSharp: leftInfoPanel
        VB: leftInfoPanel
      nameWithType:
        CSharp: InfoPanelFacade.leftInfoPanel
        VB: InfoPanelFacade.leftInfoPanel
      qualifiedName:
        CSharp: Virgis.InfoPanelFacade.leftInfoPanel
        VB: Virgis.InfoPanelFacade.leftInfoPanel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: leftInfoPanel
        path: ''
        startLine: 1346
      syntax:
        content:
          CSharp: public bool leftInfoPanel
          VB: Public leftInfoPanel As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.InfoPanelFacade.textBox
      commentId: F:Virgis.InfoPanelFacade.textBox
      language: CSharp
      name:
        CSharp: textBox
        VB: textBox
      nameWithType:
        CSharp: InfoPanelFacade.textBox
        VB: InfoPanelFacade.textBox
      qualifiedName:
        CSharp: Virgis.InfoPanelFacade.textBox
        VB: Virgis.InfoPanelFacade.textBox
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: textBox
        path: ''
        startLine: 1347
      syntax:
        content:
          CSharp: public Text textBox
          VB: Public textBox As Text
        return:
          type: Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.StartFacade
    commentId: T:Virgis.StartFacade
    language: CSharp
    name:
      CSharp: StartFacade
      VB: StartFacade
    nameWithType:
      CSharp: StartFacade
      VB: StartFacade
    qualifiedName:
      CSharp: Virgis.StartFacade
      VB: Virgis.StartFacade
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: StartFacade
      path: ''
      startLine: 1414
    syntax:
      content:
        CSharp: 'public class StartFacade : MonoBehaviour'
        VB: >-
          Public Class StartFacade

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.StartFacade.fileListPanelPrefab
      commentId: F:Virgis.StartFacade.fileListPanelPrefab
      language: CSharp
      name:
        CSharp: fileListPanelPrefab
        VB: fileListPanelPrefab
      nameWithType:
        CSharp: StartFacade.fileListPanelPrefab
        VB: StartFacade.fileListPanelPrefab
      qualifiedName:
        CSharp: Virgis.StartFacade.fileListPanelPrefab
        VB: Virgis.StartFacade.fileListPanelPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: fileListPanelPrefab
        path: ''
        startLine: 1416
      syntax:
        content:
          CSharp: public GameObject fileListPanelPrefab
          VB: Public fileListPanelPrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.StartFacade.fileScrollView
      commentId: F:Virgis.StartFacade.fileScrollView
      language: CSharp
      name:
        CSharp: fileScrollView
        VB: fileScrollView
      nameWithType:
        CSharp: StartFacade.fileScrollView
        VB: StartFacade.fileScrollView
      qualifiedName:
        CSharp: Virgis.StartFacade.fileScrollView
        VB: Virgis.StartFacade.fileScrollView
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: fileScrollView
        path: ''
        startLine: 1417
      syntax:
        content:
          CSharp: public GameObject fileScrollView
          VB: Public fileScrollView As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.StartFacade.projectDirectory
      commentId: F:Virgis.StartFacade.projectDirectory
      language: CSharp
      name:
        CSharp: projectDirectory
        VB: projectDirectory
      nameWithType:
        CSharp: StartFacade.projectDirectory
        VB: StartFacade.projectDirectory
      qualifiedName:
        CSharp: Virgis.StartFacade.projectDirectory
        VB: Virgis.StartFacade.projectDirectory
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: projectDirectory
        path: ''
        startLine: 1418
      syntax:
        content:
          CSharp: public string projectDirectory
          VB: Public projectDirectory As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.StartFacade.searchPattern
      commentId: F:Virgis.StartFacade.searchPattern
      language: CSharp
      name:
        CSharp: searchPattern
        VB: searchPattern
      nameWithType:
        CSharp: StartFacade.searchPattern
        VB: StartFacade.searchPattern
      qualifiedName:
        CSharp: Virgis.StartFacade.searchPattern
        VB: Virgis.StartFacade.searchPattern
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: searchPattern
        path: ''
        startLine: 1419
      syntax:
        content:
          CSharp: public string searchPattern
          VB: Public searchPattern As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.StartFacade.onFileSelected(System.String)
      commentId: M:Virgis.StartFacade.onFileSelected(System.String)
      language: CSharp
      name:
        CSharp: onFileSelected(String)
        VB: onFileSelected(String)
      nameWithType:
        CSharp: StartFacade.onFileSelected(String)
        VB: StartFacade.onFileSelected(String)
      qualifiedName:
        CSharp: Virgis.StartFacade.onFileSelected(System.String)
        VB: Virgis.StartFacade.onFileSelected(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: onFileSelected
        path: ''
        startLine: 1457
      syntax:
        content:
          CSharp: public void onFileSelected(string file)
          VB: Public Sub onFileSelected(file As String)
        parameters:
        - id: file
          type: System.String
      overload: Virgis.StartFacade.onFileSelected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.PointCloudLayer
    commentId: T:Virgis.PointCloudLayer
    language: CSharp
    name:
      CSharp: PointCloudLayer
      VB: PointCloudLayer
    nameWithType:
      CSharp: PointCloudLayer
      VB: PointCloudLayer
    qualifiedName:
      CSharp: Virgis.PointCloudLayer
      VB: Virgis.PointCloudLayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: PointCloudLayer
      path: ''
      startLine: 1485
    syntax:
      content:
        CSharp: 'public class PointCloudLayer : VirgisLayer<RecordSet, BakedPointCloud>, IVirgisLayer, IVirgisEntity'
        VB: >-
          Public Class PointCloudLayer

              Inherits VirgisLayer(Of RecordSet, BakedPointCloud)

              Implements IVirgisLayer, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisLayer
    - Virgis.VirgisLayer{RecordSet,BakedPointCloud}
    implements:
    - Virgis.IVirgisLayer
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.VirgisLayer{RecordSet,BakedPointCloud}.features
    - Virgis.VirgisLayer{RecordSet,BakedPointCloud}.Init(RecordSet)
    - Virgis.VirgisLayer{RecordSet,BakedPointCloud}._init
    - Virgis.VirgisLayer{RecordSet,BakedPointCloud}.GetMetadata
    - Virgis.VirgisLayer{RecordSet,BakedPointCloud}.SetMetadata(RecordSet)
    - Virgis.VirgisLayer{RecordSet,BakedPointCloud}.SetFeatures(BakedPointCloud)
    - Virgis.VirgisLayer{RecordSet,BakedPointCloud}.Equals(System.Object)
    - Virgis.VirgisLayer{RecordSet,BakedPointCloud}.GetHashCode
    - Virgis.VirgisLayer{RecordSet,BakedPointCloud}.Equals(Virgis.VirgisLayer{RecordSet,BakedPointCloud})
    - Virgis.VirgisLayer._layer
    - Virgis.VirgisLayer.featureType
    - Virgis.VirgisLayer.changed
    - Virgis.VirgisLayer._id
    - Virgis.VirgisLayer._editable
    - Virgis.VirgisLayer._crs
    - Virgis.VirgisLayer.AddFeature(Vector3[])
    - Virgis.VirgisLayer.Draw
    - Virgis.VirgisLayer.CheckPoint
    - Virgis.VirgisLayer.Save
    - Virgis.VirgisLayer.MoveTo(Virgis.MoveArgs)
    - Virgis.VirgisLayer.VertexMove(Virgis.MoveArgs)
    - Virgis.VirgisLayer.Selected(Virgis.SelectionType)
    - Virgis.VirgisLayer.UnSelected(Virgis.SelectionType)
    - Virgis.VirgisLayer.GetClosest(Vector3,System.Guid[])
    - Virgis.VirgisLayer.GetFeature(System.Guid)
    - Virgis.VirgisLayer.GetId
    - Virgis.VirgisLayer.GetMetadata
    - Virgis.VirgisLayer.SetMetadata(RecordSet)
    - Virgis.VirgisLayer.GetFeatureShape
    - Virgis.VirgisLayer.SetVisible(System.Boolean)
    - Virgis.VirgisLayer.IsVisible
    - Virgis.VirgisLayer.SetEditable(System.Boolean)
    - Virgis.VirgisLayer.IsEditable
    - Virgis.VirgisLayer.SetCrs(SpatialReference)
    - Virgis.VirgisLayer.GetCrs
    - Virgis.VirgisLayer.Equals(System.Object)
    - Virgis.VirgisLayer.GetHashCode
    - Virgis.VirgisLayer.Equals(Virgis.VirgisLayer)
    - Virgis.VirgisLayer.GetLayer
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.PointCloudLayer.material
      commentId: F:Virgis.PointCloudLayer.material
      language: CSharp
      name:
        CSharp: material
        VB: material
      nameWithType:
        CSharp: PointCloudLayer.material
        VB: PointCloudLayer.material
      qualifiedName:
        CSharp: Virgis.PointCloudLayer.material
        VB: Virgis.PointCloudLayer.material
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: material
        path: ''
        startLine: 1488
      syntax:
        content:
          CSharp: public Material material
          VB: Public material As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PointCloudLayer.handle
      commentId: F:Virgis.PointCloudLayer.handle
      language: CSharp
      name:
        CSharp: handle
        VB: handle
      nameWithType:
        CSharp: PointCloudLayer.handle
        VB: PointCloudLayer.handle
      qualifiedName:
        CSharp: Virgis.PointCloudLayer.handle
        VB: Virgis.PointCloudLayer.handle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: handle
        path: ''
        startLine: 1489
      syntax:
        content:
          CSharp: public GameObject handle
          VB: Public handle As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PointCloudLayer.pointCloud
      commentId: F:Virgis.PointCloudLayer.pointCloud
      language: CSharp
      name:
        CSharp: pointCloud
        VB: pointCloud
      nameWithType:
        CSharp: PointCloudLayer.pointCloud
        VB: PointCloudLayer.pointCloud
      qualifiedName:
        CSharp: Virgis.PointCloudLayer.pointCloud
        VB: Virgis.PointCloudLayer.pointCloud
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: pointCloud
        path: ''
        startLine: 1490
      syntax:
        content:
          CSharp: public GameObject pointCloud
          VB: Public pointCloud As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PointCloudLayer.meshes
      commentId: F:Virgis.PointCloudLayer.meshes
      language: CSharp
      name:
        CSharp: meshes
        VB: meshes
      nameWithType:
        CSharp: PointCloudLayer.meshes
        VB: PointCloudLayer.meshes
      qualifiedName:
        CSharp: Virgis.PointCloudLayer.meshes
        VB: Virgis.PointCloudLayer.meshes
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: meshes
        path: ''
        startLine: 1491
      syntax:
        content:
          CSharp: public List<GameObject> meshes
          VB: Public meshes As List(Of GameObject)
        return:
          type: System.Collections.Generic.List{GameObject}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PointCloudLayer.HandleMaterial
      commentId: F:Virgis.PointCloudLayer.HandleMaterial
      language: CSharp
      name:
        CSharp: HandleMaterial
        VB: HandleMaterial
      nameWithType:
        CSharp: PointCloudLayer.HandleMaterial
        VB: PointCloudLayer.HandleMaterial
      qualifiedName:
        CSharp: Virgis.PointCloudLayer.HandleMaterial
        VB: Virgis.PointCloudLayer.HandleMaterial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: HandleMaterial
        path: ''
        startLine: 1492
      syntax:
        content:
          CSharp: public Material HandleMaterial
          VB: Public HandleMaterial As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PointCloudLayer._init
      commentId: M:Virgis.PointCloudLayer._init
      language: CSharp
      name:
        CSharp: _init()
        VB: _init()
      nameWithType:
        CSharp: PointCloudLayer._init()
        VB: PointCloudLayer._init()
      qualifiedName:
        CSharp: Virgis.PointCloudLayer._init()
        VB: Virgis.PointCloudLayer._init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _init
        path: ''
        startLine: 1504
      syntax:
        content:
          CSharp: protected override Task _init()
          VB: Protected Overrides Function _init As Task
        return:
          type: Task
      overload: Virgis.PointCloudLayer._init*
      overridden: Virgis.VirgisLayer{RecordSet,BakedPointCloud}._init
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.PointCloudLayer._addFeature(Vector3[])
      commentId: M:Virgis.PointCloudLayer._addFeature(Vector3[])
      language: CSharp
      name:
        CSharp: _addFeature(Vector3[])
        VB: _addFeature(Vector3())
      nameWithType:
        CSharp: PointCloudLayer._addFeature(Vector3[])
        VB: PointCloudLayer._addFeature(Vector3())
      qualifiedName:
        CSharp: Virgis.PointCloudLayer._addFeature(Vector3[])
        VB: Virgis.PointCloudLayer._addFeature(Vector3())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _addFeature
        path: ''
        startLine: 1575
      syntax:
        content:
          CSharp: protected override VirgisFeature _addFeature(Vector3[] geometry)
          VB: Protected Overrides Function _addFeature(geometry As Vector3()) As VirgisFeature
        parameters:
        - id: geometry
          type: Vector3[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.PointCloudLayer._addFeature*
      overridden: Virgis.VirgisLayer._addFeature(Vector3[])
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.PointCloudLayer._draw
      commentId: M:Virgis.PointCloudLayer._draw
      language: CSharp
      name:
        CSharp: _draw()
        VB: _draw()
      nameWithType:
        CSharp: PointCloudLayer._draw()
        VB: PointCloudLayer._draw()
      qualifiedName:
        CSharp: Virgis.PointCloudLayer._draw()
        VB: Virgis.PointCloudLayer._draw()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _draw
        path: ''
        startLine: 1580
      syntax:
        content:
          CSharp: protected override void _draw()
          VB: Protected Overrides Sub _draw
      overload: Virgis.PointCloudLayer._draw*
      overridden: Virgis.VirgisLayer._draw
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.PointCloudLayer._set_visible
      commentId: M:Virgis.PointCloudLayer._set_visible
      language: CSharp
      name:
        CSharp: _set_visible()
        VB: _set_visible()
      nameWithType:
        CSharp: PointCloudLayer._set_visible()
        VB: PointCloudLayer._set_visible()
      qualifiedName:
        CSharp: Virgis.PointCloudLayer._set_visible()
        VB: Virgis.PointCloudLayer._set_visible()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _set_visible
        path: ''
        startLine: 1607
      syntax:
        content:
          CSharp: public override void _set_visible()
          VB: Public Overrides Sub _set_visible
      overload: Virgis.PointCloudLayer._set_visible*
      overridden: Virgis.VirgisLayer._set_visible
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.PointCloudLayer.Translate(Virgis.MoveArgs)
      commentId: M:Virgis.PointCloudLayer.Translate(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Translate(MoveArgs)
        VB: Translate(MoveArgs)
      nameWithType:
        CSharp: PointCloudLayer.Translate(MoveArgs)
        VB: PointCloudLayer.Translate(MoveArgs)
      qualifiedName:
        CSharp: Virgis.PointCloudLayer.Translate(Virgis.MoveArgs)
        VB: Virgis.PointCloudLayer.Translate(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Translate
        path: ''
        startLine: 1618
      syntax:
        content:
          CSharp: public override void Translate(MoveArgs args)
          VB: Public Overrides Sub Translate(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.PointCloudLayer.Translate*
      overridden: Virgis.VirgisLayer.Translate(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.PointCloudLayer.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.PointCloudLayer.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: PointCloudLayer.MoveAxis(MoveArgs)
        VB: PointCloudLayer.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.PointCloudLayer.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.PointCloudLayer.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 1627
      syntax:
        content:
          CSharp: public override void MoveAxis(MoveArgs args)
          VB: Public Overrides Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.PointCloudLayer.MoveAxis*
      overridden: Virgis.VirgisLayer.MoveAxis(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.PointCloudLayer._checkpoint
      commentId: M:Virgis.PointCloudLayer._checkpoint
      language: CSharp
      name:
        CSharp: _checkpoint()
        VB: _checkpoint()
      nameWithType:
        CSharp: PointCloudLayer._checkpoint()
        VB: PointCloudLayer._checkpoint()
      qualifiedName:
        CSharp: Virgis.PointCloudLayer._checkpoint()
        VB: Virgis.PointCloudLayer._checkpoint()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _checkpoint
        path: ''
        startLine: 1655
      syntax:
        content:
          CSharp: protected override void _checkpoint()
          VB: Protected Overrides Sub _checkpoint
      overload: Virgis.PointCloudLayer._checkpoint*
      overridden: Virgis.VirgisLayer._checkpoint
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.PointCloudLayer._save
      commentId: M:Virgis.PointCloudLayer._save
      language: CSharp
      name:
        CSharp: _save()
        VB: _save()
      nameWithType:
        CSharp: PointCloudLayer._save()
        VB: PointCloudLayer._save()
      qualifiedName:
        CSharp: Virgis.PointCloudLayer._save()
        VB: Virgis.PointCloudLayer._save()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _save
        path: ''
        startLine: 1657
      syntax:
        content:
          CSharp: protected override Task _save()
          VB: Protected Overrides Function _save As Task
        return:
          type: Task
      overload: Virgis.PointCloudLayer._save*
      overridden: Virgis.VirgisLayer._save
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: Virgis.RasterLayer
    commentId: T:Virgis.RasterLayer
    language: CSharp
    name:
      CSharp: RasterLayer
      VB: RasterLayer
    nameWithType:
      CSharp: RasterLayer
      VB: RasterLayer
    qualifiedName:
      CSharp: Virgis.RasterLayer
      VB: Virgis.RasterLayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: RasterLayer
      path: ''
      startLine: 1680
    syntax:
      content:
        CSharp: 'public class RasterLayer : VirgisLayer<RecordSet, BakedPointCloud>, IVirgisLayer, IVirgisEntity'
        VB: >-
          Public Class RasterLayer

              Inherits VirgisLayer(Of RecordSet, BakedPointCloud)

              Implements IVirgisLayer, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisLayer
    - Virgis.VirgisLayer{RecordSet,BakedPointCloud}
    implements:
    - Virgis.IVirgisLayer
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.VirgisLayer{RecordSet,BakedPointCloud}.features
    - Virgis.VirgisLayer{RecordSet,BakedPointCloud}.Init(RecordSet)
    - Virgis.VirgisLayer{RecordSet,BakedPointCloud}._init
    - Virgis.VirgisLayer{RecordSet,BakedPointCloud}.GetMetadata
    - Virgis.VirgisLayer{RecordSet,BakedPointCloud}.SetMetadata(RecordSet)
    - Virgis.VirgisLayer{RecordSet,BakedPointCloud}.SetFeatures(BakedPointCloud)
    - Virgis.VirgisLayer{RecordSet,BakedPointCloud}.Equals(System.Object)
    - Virgis.VirgisLayer{RecordSet,BakedPointCloud}.GetHashCode
    - Virgis.VirgisLayer{RecordSet,BakedPointCloud}.Equals(Virgis.VirgisLayer{RecordSet,BakedPointCloud})
    - Virgis.VirgisLayer._layer
    - Virgis.VirgisLayer.featureType
    - Virgis.VirgisLayer.changed
    - Virgis.VirgisLayer._id
    - Virgis.VirgisLayer._editable
    - Virgis.VirgisLayer._crs
    - Virgis.VirgisLayer.AddFeature(Vector3[])
    - Virgis.VirgisLayer.Draw
    - Virgis.VirgisLayer.CheckPoint
    - Virgis.VirgisLayer.Save
    - Virgis.VirgisLayer.MoveTo(Virgis.MoveArgs)
    - Virgis.VirgisLayer.VertexMove(Virgis.MoveArgs)
    - Virgis.VirgisLayer.Selected(Virgis.SelectionType)
    - Virgis.VirgisLayer.UnSelected(Virgis.SelectionType)
    - Virgis.VirgisLayer.GetClosest(Vector3,System.Guid[])
    - Virgis.VirgisLayer.GetFeature(System.Guid)
    - Virgis.VirgisLayer.GetId
    - Virgis.VirgisLayer.GetMetadata
    - Virgis.VirgisLayer.SetMetadata(RecordSet)
    - Virgis.VirgisLayer.GetFeatureShape
    - Virgis.VirgisLayer.SetVisible(System.Boolean)
    - Virgis.VirgisLayer.IsVisible
    - Virgis.VirgisLayer.SetEditable(System.Boolean)
    - Virgis.VirgisLayer.IsEditable
    - Virgis.VirgisLayer.SetCrs(SpatialReference)
    - Virgis.VirgisLayer.GetCrs
    - Virgis.VirgisLayer.Equals(System.Object)
    - Virgis.VirgisLayer.GetHashCode
    - Virgis.VirgisLayer.Equals(Virgis.VirgisLayer)
    - Virgis.VirgisLayer.GetLayer
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.RasterLayer.handle
      commentId: F:Virgis.RasterLayer.handle
      language: CSharp
      name:
        CSharp: handle
        VB: handle
      nameWithType:
        CSharp: RasterLayer.handle
        VB: RasterLayer.handle
      qualifiedName:
        CSharp: Virgis.RasterLayer.handle
        VB: Virgis.RasterLayer.handle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: handle
        path: ''
        startLine: 1684
      syntax:
        content:
          CSharp: public GameObject handle
          VB: Public handle As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.RasterLayer.pointCloud
      commentId: F:Virgis.RasterLayer.pointCloud
      language: CSharp
      name:
        CSharp: pointCloud
        VB: pointCloud
      nameWithType:
        CSharp: RasterLayer.pointCloud
        VB: RasterLayer.pointCloud
      qualifiedName:
        CSharp: Virgis.RasterLayer.pointCloud
        VB: Virgis.RasterLayer.pointCloud
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: pointCloud
        path: ''
        startLine: 1685
      syntax:
        content:
          CSharp: public GameObject pointCloud
          VB: Public pointCloud As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.RasterLayer.meshes
      commentId: F:Virgis.RasterLayer.meshes
      language: CSharp
      name:
        CSharp: meshes
        VB: meshes
      nameWithType:
        CSharp: RasterLayer.meshes
        VB: RasterLayer.meshes
      qualifiedName:
        CSharp: Virgis.RasterLayer.meshes
        VB: Virgis.RasterLayer.meshes
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: meshes
        path: ''
        startLine: 1686
      syntax:
        content:
          CSharp: public List<GameObject> meshes
          VB: Public meshes As List(Of GameObject)
        return:
          type: System.Collections.Generic.List{GameObject}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.RasterLayer.HandleMaterial
      commentId: F:Virgis.RasterLayer.HandleMaterial
      language: CSharp
      name:
        CSharp: HandleMaterial
        VB: HandleMaterial
      nameWithType:
        CSharp: RasterLayer.HandleMaterial
        VB: RasterLayer.HandleMaterial
      qualifiedName:
        CSharp: Virgis.RasterLayer.HandleMaterial
        VB: Virgis.RasterLayer.HandleMaterial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: HandleMaterial
        path: ''
        startLine: 1687
      syntax:
        content:
          CSharp: public Material HandleMaterial
          VB: Public HandleMaterial As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.RasterLayer._init
      commentId: M:Virgis.RasterLayer._init
      language: CSharp
      name:
        CSharp: _init()
        VB: _init()
      nameWithType:
        CSharp: RasterLayer._init()
        VB: RasterLayer._init()
      qualifiedName:
        CSharp: Virgis.RasterLayer._init()
        VB: Virgis.RasterLayer._init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _init
        path: ''
        startLine: 1699
      syntax:
        content:
          CSharp: protected override Task _init()
          VB: Protected Overrides Function _init As Task
        return:
          type: Task
      overload: Virgis.RasterLayer._init*
      overridden: Virgis.VirgisLayer{RecordSet,BakedPointCloud}._init
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.RasterLayer._addFeature(Vector3[])
      commentId: M:Virgis.RasterLayer._addFeature(Vector3[])
      language: CSharp
      name:
        CSharp: _addFeature(Vector3[])
        VB: _addFeature(Vector3())
      nameWithType:
        CSharp: RasterLayer._addFeature(Vector3[])
        VB: RasterLayer._addFeature(Vector3())
      qualifiedName:
        CSharp: Virgis.RasterLayer._addFeature(Vector3[])
        VB: Virgis.RasterLayer._addFeature(Vector3())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _addFeature
        path: ''
        startLine: 1781
      syntax:
        content:
          CSharp: protected override VirgisFeature _addFeature(Vector3[] geometry)
          VB: Protected Overrides Function _addFeature(geometry As Vector3()) As VirgisFeature
        parameters:
        - id: geometry
          type: Vector3[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.RasterLayer._addFeature*
      overridden: Virgis.VirgisLayer._addFeature(Vector3[])
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.RasterLayer._draw
      commentId: M:Virgis.RasterLayer._draw
      language: CSharp
      name:
        CSharp: _draw()
        VB: _draw()
      nameWithType:
        CSharp: RasterLayer._draw()
        VB: RasterLayer._draw()
      qualifiedName:
        CSharp: Virgis.RasterLayer._draw()
        VB: Virgis.RasterLayer._draw()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _draw
        path: ''
        startLine: 1786
      syntax:
        content:
          CSharp: protected override void _draw()
          VB: Protected Overrides Sub _draw
      overload: Virgis.RasterLayer._draw*
      overridden: Virgis.VirgisLayer._draw
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.RasterLayer._set_visible
      commentId: M:Virgis.RasterLayer._set_visible
      language: CSharp
      name:
        CSharp: _set_visible()
        VB: _set_visible()
      nameWithType:
        CSharp: RasterLayer._set_visible()
        VB: RasterLayer._set_visible()
      qualifiedName:
        CSharp: Virgis.RasterLayer._set_visible()
        VB: Virgis.RasterLayer._set_visible()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _set_visible
        path: ''
        startLine: 1815
      syntax:
        content:
          CSharp: public override void _set_visible()
          VB: Public Overrides Sub _set_visible
      overload: Virgis.RasterLayer._set_visible*
      overridden: Virgis.VirgisLayer._set_visible
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.RasterLayer.Translate(Virgis.MoveArgs)
      commentId: M:Virgis.RasterLayer.Translate(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Translate(MoveArgs)
        VB: Translate(MoveArgs)
      nameWithType:
        CSharp: RasterLayer.Translate(MoveArgs)
        VB: RasterLayer.Translate(MoveArgs)
      qualifiedName:
        CSharp: Virgis.RasterLayer.Translate(Virgis.MoveArgs)
        VB: Virgis.RasterLayer.Translate(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Translate
        path: ''
        startLine: 1826
      syntax:
        content:
          CSharp: public override void Translate(MoveArgs args)
          VB: Public Overrides Sub Translate(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.RasterLayer.Translate*
      overridden: Virgis.VirgisLayer.Translate(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.RasterLayer.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.RasterLayer.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: RasterLayer.MoveAxis(MoveArgs)
        VB: RasterLayer.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.RasterLayer.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.RasterLayer.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 1835
      syntax:
        content:
          CSharp: public override void MoveAxis(MoveArgs args)
          VB: Public Overrides Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.RasterLayer.MoveAxis*
      overridden: Virgis.VirgisLayer.MoveAxis(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.RasterLayer._checkpoint
      commentId: M:Virgis.RasterLayer._checkpoint
      language: CSharp
      name:
        CSharp: _checkpoint()
        VB: _checkpoint()
      nameWithType:
        CSharp: RasterLayer._checkpoint()
        VB: RasterLayer._checkpoint()
      qualifiedName:
        CSharp: Virgis.RasterLayer._checkpoint()
        VB: Virgis.RasterLayer._checkpoint()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _checkpoint
        path: ''
        startLine: 1863
      syntax:
        content:
          CSharp: protected override void _checkpoint()
          VB: Protected Overrides Sub _checkpoint
      overload: Virgis.RasterLayer._checkpoint*
      overridden: Virgis.VirgisLayer._checkpoint
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.RasterLayer._save
      commentId: M:Virgis.RasterLayer._save
      language: CSharp
      name:
        CSharp: _save()
        VB: _save()
      nameWithType:
        CSharp: RasterLayer._save()
        VB: RasterLayer._save()
      qualifiedName:
        CSharp: Virgis.RasterLayer._save()
        VB: Virgis.RasterLayer._save()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _save
        path: ''
        startLine: 1865
      syntax:
        content:
          CSharp: protected override Task _save()
          VB: Protected Overrides Function _save As Task
        return:
          type: Task
      overload: Virgis.RasterLayer._save*
      overridden: Virgis.VirgisLayer._save
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: Virgis.MeshLayer
    commentId: T:Virgis.MeshLayer
    language: CSharp
    name:
      CSharp: MeshLayer
      VB: MeshLayer
    nameWithType:
      CSharp: MeshLayer
      VB: MeshLayer
    qualifiedName:
      CSharp: Virgis.MeshLayer
      VB: Virgis.MeshLayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: MeshLayer
      path: ''
      startLine: 1888
    syntax:
      content:
        CSharp: 'public class MeshLayer : VirgisLayer<RecordSet, List<DMesh3>>, IVirgisLayer, IVirgisEntity'
        VB: >-
          Public Class MeshLayer

              Inherits VirgisLayer(Of RecordSet, List(Of DMesh3))

              Implements IVirgisLayer, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisLayer
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}
    implements:
    - Virgis.IVirgisLayer
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.features
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.Init(RecordSet)
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}._init
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.GetMetadata
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.SetMetadata(RecordSet)
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.SetFeatures(System.Collections.Generic.List{DMesh3})
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.Equals(System.Object)
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.GetHashCode
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.Equals(Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}})
    - Virgis.VirgisLayer._layer
    - Virgis.VirgisLayer.featureType
    - Virgis.VirgisLayer.changed
    - Virgis.VirgisLayer._id
    - Virgis.VirgisLayer._editable
    - Virgis.VirgisLayer._crs
    - Virgis.VirgisLayer.AddFeature(Vector3[])
    - Virgis.VirgisLayer.Draw
    - Virgis.VirgisLayer.CheckPoint
    - Virgis.VirgisLayer.Save
    - Virgis.VirgisLayer.MoveTo(Virgis.MoveArgs)
    - Virgis.VirgisLayer.VertexMove(Virgis.MoveArgs)
    - Virgis.VirgisLayer.Selected(Virgis.SelectionType)
    - Virgis.VirgisLayer.UnSelected(Virgis.SelectionType)
    - Virgis.VirgisLayer.GetClosest(Vector3,System.Guid[])
    - Virgis.VirgisLayer.GetFeature(System.Guid)
    - Virgis.VirgisLayer.GetId
    - Virgis.VirgisLayer.GetMetadata
    - Virgis.VirgisLayer.SetMetadata(RecordSet)
    - Virgis.VirgisLayer.GetFeatureShape
    - Virgis.VirgisLayer.SetVisible(System.Boolean)
    - Virgis.VirgisLayer._set_visible
    - Virgis.VirgisLayer.IsVisible
    - Virgis.VirgisLayer.SetEditable(System.Boolean)
    - Virgis.VirgisLayer.IsEditable
    - Virgis.VirgisLayer.SetCrs(SpatialReference)
    - Virgis.VirgisLayer.GetCrs
    - Virgis.VirgisLayer.Equals(System.Object)
    - Virgis.VirgisLayer.GetHashCode
    - Virgis.VirgisLayer.Equals(Virgis.VirgisLayer)
    - Virgis.VirgisLayer.GetLayer
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.MeshLayer.Mesh
      commentId: F:Virgis.MeshLayer.Mesh
      language: CSharp
      name:
        CSharp: Mesh
        VB: Mesh
      nameWithType:
        CSharp: MeshLayer.Mesh
        VB: MeshLayer.Mesh
      qualifiedName:
        CSharp: Virgis.MeshLayer.Mesh
        VB: Virgis.MeshLayer.Mesh
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Mesh
        path: ''
        startLine: 1891
      syntax:
        content:
          CSharp: public GameObject Mesh
          VB: Public Mesh As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MeshLayer.MeshMaterial
      commentId: F:Virgis.MeshLayer.MeshMaterial
      language: CSharp
      name:
        CSharp: MeshMaterial
        VB: MeshMaterial
      nameWithType:
        CSharp: MeshLayer.MeshMaterial
        VB: MeshLayer.MeshMaterial
      qualifiedName:
        CSharp: Virgis.MeshLayer.MeshMaterial
        VB: Virgis.MeshLayer.MeshMaterial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MeshMaterial
        path: ''
        startLine: 1892
      syntax:
        content:
          CSharp: public Material MeshMaterial
          VB: Public MeshMaterial As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MeshLayer._init
      commentId: M:Virgis.MeshLayer._init
      language: CSharp
      name:
        CSharp: _init()
        VB: _init()
      nameWithType:
        CSharp: MeshLayer._init()
        VB: MeshLayer._init()
      qualifiedName:
        CSharp: Virgis.MeshLayer._init()
        VB: Virgis.MeshLayer._init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _init
        path: ''
        startLine: 1925
      syntax:
        content:
          CSharp: protected override Task _init()
          VB: Protected Overrides Function _init As Task
        return:
          type: Task
      overload: Virgis.MeshLayer._init*
      overridden: Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}._init
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.MeshLayer._addFeature(Vector3[])
      commentId: M:Virgis.MeshLayer._addFeature(Vector3[])
      language: CSharp
      name:
        CSharp: _addFeature(Vector3[])
        VB: _addFeature(Vector3())
      nameWithType:
        CSharp: MeshLayer._addFeature(Vector3[])
        VB: MeshLayer._addFeature(Vector3())
      qualifiedName:
        CSharp: Virgis.MeshLayer._addFeature(Vector3[])
        VB: Virgis.MeshLayer._addFeature(Vector3())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _addFeature
        path: ''
        startLine: 1932
      syntax:
        content:
          CSharp: protected override VirgisFeature _addFeature(Vector3[] geometry)
          VB: Protected Overrides Function _addFeature(geometry As Vector3()) As VirgisFeature
        parameters:
        - id: geometry
          type: Vector3[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.MeshLayer._addFeature*
      overridden: Virgis.VirgisLayer._addFeature(Vector3[])
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.MeshLayer._draw
      commentId: M:Virgis.MeshLayer._draw
      language: CSharp
      name:
        CSharp: _draw()
        VB: _draw()
      nameWithType:
        CSharp: MeshLayer._draw()
        VB: MeshLayer._draw()
      qualifiedName:
        CSharp: Virgis.MeshLayer._draw()
        VB: Virgis.MeshLayer._draw()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _draw
        path: ''
        startLine: 1936
      syntax:
        content:
          CSharp: protected override void _draw()
          VB: Protected Overrides Sub _draw
      overload: Virgis.MeshLayer._draw*
      overridden: Virgis.VirgisLayer._draw
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.MeshLayer.Translate(Virgis.MoveArgs)
      commentId: M:Virgis.MeshLayer.Translate(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Translate(MoveArgs)
        VB: Translate(MoveArgs)
      nameWithType:
        CSharp: MeshLayer.Translate(MoveArgs)
        VB: MeshLayer.Translate(MoveArgs)
      qualifiedName:
        CSharp: Virgis.MeshLayer.Translate(Virgis.MoveArgs)
        VB: Virgis.MeshLayer.Translate(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Translate
        path: ''
        startLine: 1952
      syntax:
        content:
          CSharp: public override void Translate(MoveArgs args)
          VB: Public Overrides Sub Translate(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.MeshLayer.Translate*
      overridden: Virgis.VirgisLayer.Translate(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.MeshLayer.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.MeshLayer.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: MeshLayer.MoveAxis(MoveArgs)
        VB: MeshLayer.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.MeshLayer.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.MeshLayer.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 1959
      example: []
      syntax:
        content:
          CSharp: public override void MoveAxis(MoveArgs args)
          VB: Public Overrides Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.MeshLayer.MoveAxis*
      overridden: Virgis.VirgisLayer.MoveAxis(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.MeshLayer._checkpoint
      commentId: M:Virgis.MeshLayer._checkpoint
      language: CSharp
      name:
        CSharp: _checkpoint()
        VB: _checkpoint()
      nameWithType:
        CSharp: MeshLayer._checkpoint()
        VB: MeshLayer._checkpoint()
      qualifiedName:
        CSharp: Virgis.MeshLayer._checkpoint()
        VB: Virgis.MeshLayer._checkpoint()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _checkpoint
        path: ''
        startLine: 1985
      syntax:
        content:
          CSharp: protected override void _checkpoint()
          VB: Protected Overrides Sub _checkpoint
      overload: Virgis.MeshLayer._checkpoint*
      overridden: Virgis.VirgisLayer._checkpoint
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.MeshLayer._save
      commentId: M:Virgis.MeshLayer._save
      language: CSharp
      name:
        CSharp: _save()
        VB: _save()
      nameWithType:
        CSharp: MeshLayer._save()
        VB: MeshLayer._save()
      qualifiedName:
        CSharp: Virgis.MeshLayer._save()
        VB: Virgis.MeshLayer._save()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _save
        path: ''
        startLine: 1987
      syntax:
        content:
          CSharp: protected override Task _save()
          VB: Protected Overrides Function _save As Task
        return:
          type: Task
      overload: Virgis.MeshLayer._save*
      overridden: Virgis.VirgisLayer._save
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: Virgis.PolygonLayer
    commentId: T:Virgis.PolygonLayer
    language: CSharp
    name:
      CSharp: PolygonLayer
      VB: PolygonLayer
    nameWithType:
      CSharp: PolygonLayer
      VB: PolygonLayer
    qualifiedName:
      CSharp: Virgis.PolygonLayer
      VB: Virgis.PolygonLayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: PolygonLayer
      path: ''
      startLine: 2015
    summary: "\nControls an instance of a Polygon Layer\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PolygonLayer : VirgisLayer<RecordSet, Layer>, IVirgisLayer, IVirgisEntity'
        VB: >-
          Public Class PolygonLayer

              Inherits VirgisLayer(Of RecordSet, Layer)

              Implements IVirgisLayer, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisLayer
    - Virgis.VirgisLayer{RecordSet,Layer}
    implements:
    - Virgis.IVirgisLayer
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.VirgisLayer{RecordSet,Layer}.features
    - Virgis.VirgisLayer{RecordSet,Layer}.Init(RecordSet)
    - Virgis.VirgisLayer{RecordSet,Layer}._init
    - Virgis.VirgisLayer{RecordSet,Layer}.GetMetadata
    - Virgis.VirgisLayer{RecordSet,Layer}.SetMetadata(RecordSet)
    - Virgis.VirgisLayer{RecordSet,Layer}.SetFeatures(Layer)
    - Virgis.VirgisLayer{RecordSet,Layer}.Equals(System.Object)
    - Virgis.VirgisLayer{RecordSet,Layer}.GetHashCode
    - Virgis.VirgisLayer{RecordSet,Layer}.Equals(Virgis.VirgisLayer{RecordSet,Layer})
    - Virgis.VirgisLayer._layer
    - Virgis.VirgisLayer.featureType
    - Virgis.VirgisLayer.changed
    - Virgis.VirgisLayer._id
    - Virgis.VirgisLayer._editable
    - Virgis.VirgisLayer._crs
    - Virgis.VirgisLayer.AddFeature(Vector3[])
    - Virgis.VirgisLayer.Draw
    - Virgis.VirgisLayer.CheckPoint
    - Virgis.VirgisLayer.Save
    - Virgis.VirgisLayer.MoveTo(Virgis.MoveArgs)
    - Virgis.VirgisLayer.VertexMove(Virgis.MoveArgs)
    - Virgis.VirgisLayer.Selected(Virgis.SelectionType)
    - Virgis.VirgisLayer.UnSelected(Virgis.SelectionType)
    - Virgis.VirgisLayer.GetClosest(Vector3,System.Guid[])
    - Virgis.VirgisLayer.GetFeature(System.Guid)
    - Virgis.VirgisLayer.GetId
    - Virgis.VirgisLayer.GetMetadata
    - Virgis.VirgisLayer.SetMetadata(RecordSet)
    - Virgis.VirgisLayer.SetVisible(System.Boolean)
    - Virgis.VirgisLayer._set_visible
    - Virgis.VirgisLayer.IsVisible
    - Virgis.VirgisLayer.SetEditable(System.Boolean)
    - Virgis.VirgisLayer.IsEditable
    - Virgis.VirgisLayer.SetCrs(SpatialReference)
    - Virgis.VirgisLayer.GetCrs
    - Virgis.VirgisLayer.Equals(System.Object)
    - Virgis.VirgisLayer.GetHashCode
    - Virgis.VirgisLayer.Equals(Virgis.VirgisLayer)
    - Virgis.VirgisLayer.GetLayer
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.PolygonLayer.CylinderLinePrefab
      commentId: F:Virgis.PolygonLayer.CylinderLinePrefab
      language: CSharp
      name:
        CSharp: CylinderLinePrefab
        VB: CylinderLinePrefab
      nameWithType:
        CSharp: PolygonLayer.CylinderLinePrefab
        VB: PolygonLayer.CylinderLinePrefab
      qualifiedName:
        CSharp: Virgis.PolygonLayer.CylinderLinePrefab
        VB: Virgis.PolygonLayer.CylinderLinePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CylinderLinePrefab
        path: ''
        startLine: 2019
      syntax:
        content:
          CSharp: public GameObject CylinderLinePrefab
          VB: Public CylinderLinePrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PolygonLayer.CuboidLinePrefab
      commentId: F:Virgis.PolygonLayer.CuboidLinePrefab
      language: CSharp
      name:
        CSharp: CuboidLinePrefab
        VB: CuboidLinePrefab
      nameWithType:
        CSharp: PolygonLayer.CuboidLinePrefab
        VB: PolygonLayer.CuboidLinePrefab
      qualifiedName:
        CSharp: Virgis.PolygonLayer.CuboidLinePrefab
        VB: Virgis.PolygonLayer.CuboidLinePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CuboidLinePrefab
        path: ''
        startLine: 2020
      syntax:
        content:
          CSharp: public GameObject CuboidLinePrefab
          VB: Public CuboidLinePrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PolygonLayer.SpherePrefab
      commentId: F:Virgis.PolygonLayer.SpherePrefab
      language: CSharp
      name:
        CSharp: SpherePrefab
        VB: SpherePrefab
      nameWithType:
        CSharp: PolygonLayer.SpherePrefab
        VB: PolygonLayer.SpherePrefab
      qualifiedName:
        CSharp: Virgis.PolygonLayer.SpherePrefab
        VB: Virgis.PolygonLayer.SpherePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SpherePrefab
        path: ''
        startLine: 2021
      syntax:
        content:
          CSharp: public GameObject SpherePrefab
          VB: Public SpherePrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PolygonLayer.CubePrefab
      commentId: F:Virgis.PolygonLayer.CubePrefab
      language: CSharp
      name:
        CSharp: CubePrefab
        VB: CubePrefab
      nameWithType:
        CSharp: PolygonLayer.CubePrefab
        VB: PolygonLayer.CubePrefab
      qualifiedName:
        CSharp: Virgis.PolygonLayer.CubePrefab
        VB: Virgis.PolygonLayer.CubePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CubePrefab
        path: ''
        startLine: 2022
      syntax:
        content:
          CSharp: public GameObject CubePrefab
          VB: Public CubePrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PolygonLayer.CylinderPrefab
      commentId: F:Virgis.PolygonLayer.CylinderPrefab
      language: CSharp
      name:
        CSharp: CylinderPrefab
        VB: CylinderPrefab
      nameWithType:
        CSharp: PolygonLayer.CylinderPrefab
        VB: PolygonLayer.CylinderPrefab
      qualifiedName:
        CSharp: Virgis.PolygonLayer.CylinderPrefab
        VB: Virgis.PolygonLayer.CylinderPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CylinderPrefab
        path: ''
        startLine: 2023
      syntax:
        content:
          CSharp: public GameObject CylinderPrefab
          VB: Public CylinderPrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PolygonLayer.PolygonPrefab
      commentId: F:Virgis.PolygonLayer.PolygonPrefab
      language: CSharp
      name:
        CSharp: PolygonPrefab
        VB: PolygonPrefab
      nameWithType:
        CSharp: PolygonLayer.PolygonPrefab
        VB: PolygonLayer.PolygonPrefab
      qualifiedName:
        CSharp: Virgis.PolygonLayer.PolygonPrefab
        VB: Virgis.PolygonLayer.PolygonPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: PolygonPrefab
        path: ''
        startLine: 2024
      syntax:
        content:
          CSharp: public GameObject PolygonPrefab
          VB: Public PolygonPrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PolygonLayer.LabelPrefab
      commentId: F:Virgis.PolygonLayer.LabelPrefab
      language: CSharp
      name:
        CSharp: LabelPrefab
        VB: LabelPrefab
      nameWithType:
        CSharp: PolygonLayer.LabelPrefab
        VB: PolygonLayer.LabelPrefab
      qualifiedName:
        CSharp: Virgis.PolygonLayer.LabelPrefab
        VB: Virgis.PolygonLayer.LabelPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: LabelPrefab
        path: ''
        startLine: 2025
      syntax:
        content:
          CSharp: public GameObject LabelPrefab
          VB: Public LabelPrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PolygonLayer.PointBaseMaterial
      commentId: F:Virgis.PolygonLayer.PointBaseMaterial
      language: CSharp
      name:
        CSharp: PointBaseMaterial
        VB: PointBaseMaterial
      nameWithType:
        CSharp: PolygonLayer.PointBaseMaterial
        VB: PolygonLayer.PointBaseMaterial
      qualifiedName:
        CSharp: Virgis.PolygonLayer.PointBaseMaterial
        VB: Virgis.PolygonLayer.PointBaseMaterial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: PointBaseMaterial
        path: ''
        startLine: 2026
      syntax:
        content:
          CSharp: public Material PointBaseMaterial
          VB: Public PointBaseMaterial As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PolygonLayer.LineBaseMaterial
      commentId: F:Virgis.PolygonLayer.LineBaseMaterial
      language: CSharp
      name:
        CSharp: LineBaseMaterial
        VB: LineBaseMaterial
      nameWithType:
        CSharp: PolygonLayer.LineBaseMaterial
        VB: PolygonLayer.LineBaseMaterial
      qualifiedName:
        CSharp: Virgis.PolygonLayer.LineBaseMaterial
        VB: Virgis.PolygonLayer.LineBaseMaterial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: LineBaseMaterial
        path: ''
        startLine: 2027
      syntax:
        content:
          CSharp: public Material LineBaseMaterial
          VB: Public LineBaseMaterial As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PolygonLayer.BodyBaseMaterial
      commentId: F:Virgis.PolygonLayer.BodyBaseMaterial
      language: CSharp
      name:
        CSharp: BodyBaseMaterial
        VB: BodyBaseMaterial
      nameWithType:
        CSharp: PolygonLayer.BodyBaseMaterial
        VB: PolygonLayer.BodyBaseMaterial
      qualifiedName:
        CSharp: Virgis.PolygonLayer.BodyBaseMaterial
        VB: Virgis.PolygonLayer.BodyBaseMaterial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: BodyBaseMaterial
        path: ''
        startLine: 2028
      syntax:
        content:
          CSharp: public Material BodyBaseMaterial
          VB: Public BodyBaseMaterial As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PolygonLayer._init
      commentId: M:Virgis.PolygonLayer._init
      language: CSharp
      name:
        CSharp: _init()
        VB: _init()
      nameWithType:
        CSharp: PolygonLayer._init()
        VB: PolygonLayer._init()
      qualifiedName:
        CSharp: Virgis.PolygonLayer._init()
        VB: Virgis.PolygonLayer._init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _init
        path: ''
        startLine: 2046
      syntax:
        content:
          CSharp: protected override Task _init()
          VB: Protected Overrides Function _init As Task
        return:
          type: Task
      overload: Virgis.PolygonLayer._init*
      overridden: Virgis.VirgisLayer{RecordSet,Layer}._init
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.PolygonLayer._addFeature(Vector3[])
      commentId: M:Virgis.PolygonLayer._addFeature(Vector3[])
      language: CSharp
      name:
        CSharp: _addFeature(Vector3[])
        VB: _addFeature(Vector3())
      nameWithType:
        CSharp: PolygonLayer._addFeature(Vector3[])
        VB: PolygonLayer._addFeature(Vector3())
      qualifiedName:
        CSharp: Virgis.PolygonLayer._addFeature(Vector3[])
        VB: Virgis.PolygonLayer._addFeature(Vector3())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _addFeature
        path: ''
        startLine: 2113
      syntax:
        content:
          CSharp: protected override VirgisFeature _addFeature(Vector3[] line)
          VB: Protected Overrides Function _addFeature(line As Vector3()) As VirgisFeature
        parameters:
        - id: line
          type: Vector3[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.PolygonLayer._addFeature*
      overridden: Virgis.VirgisLayer._addFeature(Vector3[])
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.PolygonLayer._draw
      commentId: M:Virgis.PolygonLayer._draw
      language: CSharp
      name:
        CSharp: _draw()
        VB: _draw()
      nameWithType:
        CSharp: PolygonLayer._draw()
        VB: PolygonLayer._draw()
      qualifiedName:
        CSharp: Virgis.PolygonLayer._draw()
        VB: Virgis.PolygonLayer._draw()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _draw
        path: ''
        startLine: 2125
      syntax:
        content:
          CSharp: protected override void _draw()
          VB: Protected Overrides Sub _draw
      overload: Virgis.PolygonLayer._draw*
      overridden: Virgis.VirgisLayer._draw
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.PolygonLayer._drawFeature(Geometry,Feature)
      commentId: M:Virgis.PolygonLayer._drawFeature(Geometry,Feature)
      language: CSharp
      name:
        CSharp: _drawFeature(Geometry, Feature)
        VB: _drawFeature(Geometry, Feature)
      nameWithType:
        CSharp: PolygonLayer._drawFeature(Geometry, Feature)
        VB: PolygonLayer._drawFeature(Geometry, Feature)
      qualifiedName:
        CSharp: Virgis.PolygonLayer._drawFeature(Geometry, Feature)
        VB: Virgis.PolygonLayer._drawFeature(Geometry, Feature)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _drawFeature
        path: ''
        startLine: 2168
      syntax:
        content:
          CSharp: protected VirgisFeature _drawFeature(Geometry poly, Feature feature = null)
          VB: Protected Function _drawFeature(poly As Geometry, feature As Feature = Nothing) As VirgisFeature
        parameters:
        - id: poly
          type: Geometry
        - id: feature
          type: Feature
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.PolygonLayer._drawFeature*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.PolygonLayer._checkpoint
      commentId: M:Virgis.PolygonLayer._checkpoint
      language: CSharp
      name:
        CSharp: _checkpoint()
        VB: _checkpoint()
      nameWithType:
        CSharp: PolygonLayer._checkpoint()
        VB: PolygonLayer._checkpoint()
      qualifiedName:
        CSharp: Virgis.PolygonLayer._checkpoint()
        VB: Virgis.PolygonLayer._checkpoint()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _checkpoint
        path: ''
        startLine: 2216
      syntax:
        content:
          CSharp: protected override void _checkpoint()
          VB: Protected Overrides Sub _checkpoint
      overload: Virgis.PolygonLayer._checkpoint*
      overridden: Virgis.VirgisLayer._checkpoint
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.PolygonLayer._save
      commentId: M:Virgis.PolygonLayer._save
      language: CSharp
      name:
        CSharp: _save()
        VB: _save()
      nameWithType:
        CSharp: PolygonLayer._save()
        VB: PolygonLayer._save()
      qualifiedName:
        CSharp: Virgis.PolygonLayer._save()
        VB: Virgis.PolygonLayer._save()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _save
        path: ''
        startLine: 2219
      syntax:
        content:
          CSharp: protected override Task _save()
          VB: Protected Overrides Function _save As Task
        return:
          type: Task
      overload: Virgis.PolygonLayer._save*
      overridden: Virgis.VirgisLayer._save
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.PolygonLayer.GetFeatureShape
      commentId: M:Virgis.PolygonLayer.GetFeatureShape
      language: CSharp
      name:
        CSharp: GetFeatureShape()
        VB: GetFeatureShape()
      nameWithType:
        CSharp: PolygonLayer.GetFeatureShape()
        VB: PolygonLayer.GetFeatureShape()
      qualifiedName:
        CSharp: Virgis.PolygonLayer.GetFeatureShape()
        VB: Virgis.PolygonLayer.GetFeatureShape()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetFeatureShape
        path: ''
        startLine: 2243
      syntax:
        content:
          CSharp: public override GameObject GetFeatureShape()
          VB: Public Overrides Function GetFeatureShape As GameObject
        return:
          type: GameObject
      overload: Virgis.PolygonLayer.GetFeatureShape*
      overridden: Virgis.VirgisLayer.GetFeatureShape
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.PolygonLayer.Translate(Virgis.MoveArgs)
      commentId: M:Virgis.PolygonLayer.Translate(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Translate(MoveArgs)
        VB: Translate(MoveArgs)
      nameWithType:
        CSharp: PolygonLayer.Translate(MoveArgs)
        VB: PolygonLayer.Translate(MoveArgs)
      qualifiedName:
        CSharp: Virgis.PolygonLayer.Translate(Virgis.MoveArgs)
        VB: Virgis.PolygonLayer.Translate(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Translate
        path: ''
        startLine: 2251
      syntax:
        content:
          CSharp: public override void Translate(MoveArgs args)
          VB: Public Overrides Sub Translate(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.PolygonLayer.Translate*
      overridden: Virgis.VirgisLayer.Translate(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.PolygonLayer.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.PolygonLayer.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: PolygonLayer.MoveAxis(MoveArgs)
        VB: PolygonLayer.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.PolygonLayer.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.PolygonLayer.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 2256
      syntax:
        content:
          CSharp: public override void MoveAxis(MoveArgs args)
          VB: Public Overrides Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.PolygonLayer.MoveAxis*
      overridden: Virgis.VirgisLayer.MoveAxis(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Virgis.PointLayer
    commentId: T:Virgis.PointLayer
    language: CSharp
    name:
      CSharp: PointLayer
      VB: PointLayer
    nameWithType:
      CSharp: PointLayer
      VB: PointLayer
    qualifiedName:
      CSharp: Virgis.PointLayer
      VB: Virgis.PointLayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: PointLayer
      path: ''
      startLine: 2275
    syntax:
      content:
        CSharp: 'public class PointLayer : VirgisLayer<RecordSet, Layer>, IVirgisLayer, IVirgisEntity'
        VB: >-
          Public Class PointLayer

              Inherits VirgisLayer(Of RecordSet, Layer)

              Implements IVirgisLayer, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisLayer
    - Virgis.VirgisLayer{RecordSet,Layer}
    implements:
    - Virgis.IVirgisLayer
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.VirgisLayer{RecordSet,Layer}.features
    - Virgis.VirgisLayer{RecordSet,Layer}.Init(RecordSet)
    - Virgis.VirgisLayer{RecordSet,Layer}._init
    - Virgis.VirgisLayer{RecordSet,Layer}.GetMetadata
    - Virgis.VirgisLayer{RecordSet,Layer}.SetMetadata(RecordSet)
    - Virgis.VirgisLayer{RecordSet,Layer}.SetFeatures(Layer)
    - Virgis.VirgisLayer{RecordSet,Layer}.Equals(System.Object)
    - Virgis.VirgisLayer{RecordSet,Layer}.GetHashCode
    - Virgis.VirgisLayer{RecordSet,Layer}.Equals(Virgis.VirgisLayer{RecordSet,Layer})
    - Virgis.VirgisLayer._layer
    - Virgis.VirgisLayer.featureType
    - Virgis.VirgisLayer.changed
    - Virgis.VirgisLayer._id
    - Virgis.VirgisLayer._editable
    - Virgis.VirgisLayer._crs
    - Virgis.VirgisLayer.AddFeature(Vector3[])
    - Virgis.VirgisLayer.Draw
    - Virgis.VirgisLayer.CheckPoint
    - Virgis.VirgisLayer.Save
    - Virgis.VirgisLayer.MoveTo(Virgis.MoveArgs)
    - Virgis.VirgisLayer.VertexMove(Virgis.MoveArgs)
    - Virgis.VirgisLayer.Selected(Virgis.SelectionType)
    - Virgis.VirgisLayer.UnSelected(Virgis.SelectionType)
    - Virgis.VirgisLayer.GetClosest(Vector3,System.Guid[])
    - Virgis.VirgisLayer.GetFeature(System.Guid)
    - Virgis.VirgisLayer.GetId
    - Virgis.VirgisLayer.GetMetadata
    - Virgis.VirgisLayer.SetMetadata(RecordSet)
    - Virgis.VirgisLayer.SetVisible(System.Boolean)
    - Virgis.VirgisLayer._set_visible
    - Virgis.VirgisLayer.IsVisible
    - Virgis.VirgisLayer.SetEditable(System.Boolean)
    - Virgis.VirgisLayer.IsEditable
    - Virgis.VirgisLayer.SetCrs(SpatialReference)
    - Virgis.VirgisLayer.GetCrs
    - Virgis.VirgisLayer.Equals(System.Object)
    - Virgis.VirgisLayer.GetHashCode
    - Virgis.VirgisLayer.Equals(Virgis.VirgisLayer)
    - Virgis.VirgisLayer.GetLayer
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.PointLayer.SpherePrefab
      commentId: F:Virgis.PointLayer.SpherePrefab
      language: CSharp
      name:
        CSharp: SpherePrefab
        VB: SpherePrefab
      nameWithType:
        CSharp: PointLayer.SpherePrefab
        VB: PointLayer.SpherePrefab
      qualifiedName:
        CSharp: Virgis.PointLayer.SpherePrefab
        VB: Virgis.PointLayer.SpherePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SpherePrefab
        path: ''
        startLine: 2277
      syntax:
        content:
          CSharp: public GameObject SpherePrefab
          VB: Public SpherePrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PointLayer.CubePrefab
      commentId: F:Virgis.PointLayer.CubePrefab
      language: CSharp
      name:
        CSharp: CubePrefab
        VB: CubePrefab
      nameWithType:
        CSharp: PointLayer.CubePrefab
        VB: PointLayer.CubePrefab
      qualifiedName:
        CSharp: Virgis.PointLayer.CubePrefab
        VB: Virgis.PointLayer.CubePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CubePrefab
        path: ''
        startLine: 2278
      syntax:
        content:
          CSharp: public GameObject CubePrefab
          VB: Public CubePrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PointLayer.CylinderPrefab
      commentId: F:Virgis.PointLayer.CylinderPrefab
      language: CSharp
      name:
        CSharp: CylinderPrefab
        VB: CylinderPrefab
      nameWithType:
        CSharp: PointLayer.CylinderPrefab
        VB: PointLayer.CylinderPrefab
      qualifiedName:
        CSharp: Virgis.PointLayer.CylinderPrefab
        VB: Virgis.PointLayer.CylinderPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CylinderPrefab
        path: ''
        startLine: 2279
      syntax:
        content:
          CSharp: public GameObject CylinderPrefab
          VB: Public CylinderPrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PointLayer.LabelPrefab
      commentId: F:Virgis.PointLayer.LabelPrefab
      language: CSharp
      name:
        CSharp: LabelPrefab
        VB: LabelPrefab
      nameWithType:
        CSharp: PointLayer.LabelPrefab
        VB: PointLayer.LabelPrefab
      qualifiedName:
        CSharp: Virgis.PointLayer.LabelPrefab
        VB: Virgis.PointLayer.LabelPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: LabelPrefab
        path: ''
        startLine: 2280
      syntax:
        content:
          CSharp: public GameObject LabelPrefab
          VB: Public LabelPrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PointLayer.BaseMaterial
      commentId: F:Virgis.PointLayer.BaseMaterial
      language: CSharp
      name:
        CSharp: BaseMaterial
        VB: BaseMaterial
      nameWithType:
        CSharp: PointLayer.BaseMaterial
        VB: PointLayer.BaseMaterial
      qualifiedName:
        CSharp: Virgis.PointLayer.BaseMaterial
        VB: Virgis.PointLayer.BaseMaterial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: BaseMaterial
        path: ''
        startLine: 2281
      syntax:
        content:
          CSharp: public Material BaseMaterial
          VB: Public BaseMaterial As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.PointLayer._init
      commentId: M:Virgis.PointLayer._init
      language: CSharp
      name:
        CSharp: _init()
        VB: _init()
      nameWithType:
        CSharp: PointLayer._init()
        VB: PointLayer._init()
      qualifiedName:
        CSharp: Virgis.PointLayer._init()
        VB: Virgis.PointLayer._init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _init
        path: ''
        startLine: 2293
      syntax:
        content:
          CSharp: protected override Task _init()
          VB: Protected Overrides Function _init As Task
        return:
          type: Task
      overload: Virgis.PointLayer._init*
      overridden: Virgis.VirgisLayer{RecordSet,Layer}._init
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.PointLayer._addFeature(Vector3[])
      commentId: M:Virgis.PointLayer._addFeature(Vector3[])
      language: CSharp
      name:
        CSharp: _addFeature(Vector3[])
        VB: _addFeature(Vector3())
      nameWithType:
        CSharp: PointLayer._addFeature(Vector3[])
        VB: PointLayer._addFeature(Vector3())
      qualifiedName:
        CSharp: Virgis.PointLayer._addFeature(Vector3[])
        VB: Virgis.PointLayer._addFeature(Vector3())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _addFeature
        path: ''
        startLine: 2326
      syntax:
        content:
          CSharp: protected override VirgisFeature _addFeature(Vector3[] geometry)
          VB: Protected Overrides Function _addFeature(geometry As Vector3()) As VirgisFeature
        parameters:
        - id: geometry
          type: Vector3[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.PointLayer._addFeature*
      overridden: Virgis.VirgisLayer._addFeature(Vector3[])
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.PointLayer._draw
      commentId: M:Virgis.PointLayer._draw
      language: CSharp
      name:
        CSharp: _draw()
        VB: _draw()
      nameWithType:
        CSharp: PointLayer._draw()
        VB: PointLayer._draw()
      qualifiedName:
        CSharp: Virgis.PointLayer._draw()
        VB: Virgis.PointLayer._draw()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _draw
        path: ''
        startLine: 2334
      syntax:
        content:
          CSharp: protected override void _draw()
          VB: Protected Overrides Sub _draw
      overload: Virgis.PointLayer._draw*
      overridden: Virgis.VirgisLayer._draw
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.PointLayer._drawFeature(Vector3,Feature)
      commentId: M:Virgis.PointLayer._drawFeature(Vector3,Feature)
      language: CSharp
      name:
        CSharp: _drawFeature(Vector3, Feature)
        VB: _drawFeature(Vector3, Feature)
      nameWithType:
        CSharp: PointLayer._drawFeature(Vector3, Feature)
        VB: PointLayer._drawFeature(Vector3, Feature)
      qualifiedName:
        CSharp: Virgis.PointLayer._drawFeature(Vector3, Feature)
        VB: Virgis.PointLayer._drawFeature(Vector3, Feature)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _drawFeature
        path: ''
        startLine: 2378
      summary: "\nDraws a single feature based on world space coordinates\n"
      example: []
      syntax:
        content:
          CSharp: protected VirgisFeature _drawFeature(Vector3 position, Feature feature = null)
          VB: Protected Function _drawFeature(position As Vector3, feature As Feature = Nothing) As VirgisFeature
        parameters:
        - id: position
          type: Vector3
          description: Vector3 position
        - id: feature
          type: Feature
          description: Feature (optional)
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.PointLayer._drawFeature*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.PointLayer._checkpoint
      commentId: M:Virgis.PointLayer._checkpoint
      language: CSharp
      name:
        CSharp: _checkpoint()
        VB: _checkpoint()
      nameWithType:
        CSharp: PointLayer._checkpoint()
        VB: PointLayer._checkpoint()
      qualifiedName:
        CSharp: Virgis.PointLayer._checkpoint()
        VB: Virgis.PointLayer._checkpoint()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _checkpoint
        path: ''
        startLine: 2410
      syntax:
        content:
          CSharp: protected override void _checkpoint()
          VB: Protected Overrides Sub _checkpoint
      overload: Virgis.PointLayer._checkpoint*
      overridden: Virgis.VirgisLayer._checkpoint
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.PointLayer._save
      commentId: M:Virgis.PointLayer._save
      language: CSharp
      name:
        CSharp: _save()
        VB: _save()
      nameWithType:
        CSharp: PointLayer._save()
        VB: PointLayer._save()
      qualifiedName:
        CSharp: Virgis.PointLayer._save()
        VB: Virgis.PointLayer._save()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _save
        path: ''
        startLine: 2412
      syntax:
        content:
          CSharp: protected override Task _save()
          VB: Protected Overrides Function _save As Task
        return:
          type: Task
      overload: Virgis.PointLayer._save*
      overridden: Virgis.VirgisLayer._save
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.PointLayer.GetFeatureShape
      commentId: M:Virgis.PointLayer.GetFeatureShape
      language: CSharp
      name:
        CSharp: GetFeatureShape()
        VB: GetFeatureShape()
      nameWithType:
        CSharp: PointLayer.GetFeatureShape()
        VB: PointLayer.GetFeatureShape()
      qualifiedName:
        CSharp: Virgis.PointLayer.GetFeatureShape()
        VB: Virgis.PointLayer.GetFeatureShape()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetFeatureShape
        path: ''
        startLine: 2428
      syntax:
        content:
          CSharp: public override GameObject GetFeatureShape()
          VB: Public Overrides Function GetFeatureShape As GameObject
        return:
          type: GameObject
      overload: Virgis.PointLayer.GetFeatureShape*
      overridden: Virgis.VirgisLayer.GetFeatureShape
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.PointLayer.Translate(Virgis.MoveArgs)
      commentId: M:Virgis.PointLayer.Translate(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Translate(MoveArgs)
        VB: Translate(MoveArgs)
      nameWithType:
        CSharp: PointLayer.Translate(MoveArgs)
        VB: PointLayer.Translate(MoveArgs)
      qualifiedName:
        CSharp: Virgis.PointLayer.Translate(Virgis.MoveArgs)
        VB: Virgis.PointLayer.Translate(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Translate
        path: ''
        startLine: 2435
      syntax:
        content:
          CSharp: public override void Translate(MoveArgs args)
          VB: Public Overrides Sub Translate(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.PointLayer.Translate*
      overridden: Virgis.VirgisLayer.Translate(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.PointLayer.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.PointLayer.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: PointLayer.MoveAxis(MoveArgs)
        VB: PointLayer.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.PointLayer.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.PointLayer.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 2440
      syntax:
        content:
          CSharp: public override void MoveAxis(MoveArgs args)
          VB: Public Overrides Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.PointLayer.MoveAxis*
      overridden: Virgis.VirgisLayer.MoveAxis(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.PointLayer.RemoveVertex(Virgis.VirgisFeature)
      commentId: M:Virgis.PointLayer.RemoveVertex(Virgis.VirgisFeature)
      language: CSharp
      name:
        CSharp: RemoveVertex(VirgisFeature)
        VB: RemoveVertex(VirgisFeature)
      nameWithType:
        CSharp: PointLayer.RemoveVertex(VirgisFeature)
        VB: PointLayer.RemoveVertex(VirgisFeature)
      qualifiedName:
        CSharp: Virgis.PointLayer.RemoveVertex(Virgis.VirgisFeature)
        VB: Virgis.PointLayer.RemoveVertex(Virgis.VirgisFeature)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: RemoveVertex
        path: ''
        startLine: 2444
      syntax:
        content:
          CSharp: public void RemoveVertex(VirgisFeature vertex)
          VB: Public Sub RemoveVertex(vertex As VirgisFeature)
        parameters:
        - id: vertex
          type: Virgis.VirgisFeature
      overload: Virgis.PointLayer.RemoveVertex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.ContainerLayer
    commentId: T:Virgis.ContainerLayer
    language: CSharp
    name:
      CSharp: ContainerLayer
      VB: ContainerLayer
    nameWithType:
      CSharp: ContainerLayer
      VB: ContainerLayer
    qualifiedName:
      CSharp: Virgis.ContainerLayer
      VB: Virgis.ContainerLayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: ContainerLayer
      path: ''
      startLine: 2459
    syntax:
      content:
        CSharp: 'public class ContainerLayer : VirgisLayer, IVirgisLayer, IVirgisEntity'
        VB: >-
          Public Class ContainerLayer

              Inherits VirgisLayer

              Implements IVirgisLayer, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisLayer
    implements:
    - Virgis.IVirgisLayer
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.VirgisLayer._layer
    - Virgis.VirgisLayer.featureType
    - Virgis.VirgisLayer.changed
    - Virgis.VirgisLayer._id
    - Virgis.VirgisLayer._editable
    - Virgis.VirgisLayer._crs
    - Virgis.VirgisLayer.AddFeature(Vector3[])
    - Virgis.VirgisLayer.Draw
    - Virgis.VirgisLayer.CheckPoint
    - Virgis.VirgisLayer.Save
    - Virgis.VirgisLayer.Translate(Virgis.MoveArgs)
    - Virgis.VirgisLayer.MoveAxis(Virgis.MoveArgs)
    - Virgis.VirgisLayer.MoveTo(Virgis.MoveArgs)
    - Virgis.VirgisLayer.VertexMove(Virgis.MoveArgs)
    - Virgis.VirgisLayer.Selected(Virgis.SelectionType)
    - Virgis.VirgisLayer.UnSelected(Virgis.SelectionType)
    - Virgis.VirgisLayer.GetClosest(Vector3,System.Guid[])
    - Virgis.VirgisLayer.GetFeature(System.Guid)
    - Virgis.VirgisLayer.GetId
    - Virgis.VirgisLayer.GetMetadata
    - Virgis.VirgisLayer.SetMetadata(RecordSet)
    - Virgis.VirgisLayer.GetFeatureShape
    - Virgis.VirgisLayer.SetVisible(System.Boolean)
    - Virgis.VirgisLayer._set_visible
    - Virgis.VirgisLayer.IsVisible
    - Virgis.VirgisLayer.SetEditable(System.Boolean)
    - Virgis.VirgisLayer.IsEditable
    - Virgis.VirgisLayer.SetCrs(SpatialReference)
    - Virgis.VirgisLayer.GetCrs
    - Virgis.VirgisLayer.Equals(System.Object)
    - Virgis.VirgisLayer.GetHashCode
    - Virgis.VirgisLayer.Equals(Virgis.VirgisLayer)
    - Virgis.VirgisLayer.GetLayer
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.ContainerLayer._addFeature(Vector3[])
      commentId: M:Virgis.ContainerLayer._addFeature(Vector3[])
      language: CSharp
      name:
        CSharp: _addFeature(Vector3[])
        VB: _addFeature(Vector3())
      nameWithType:
        CSharp: ContainerLayer._addFeature(Vector3[])
        VB: ContainerLayer._addFeature(Vector3())
      qualifiedName:
        CSharp: Virgis.ContainerLayer._addFeature(Vector3[])
        VB: Virgis.ContainerLayer._addFeature(Vector3())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _addFeature
        path: ''
        startLine: 2461
      syntax:
        content:
          CSharp: protected override VirgisFeature _addFeature(Vector3[] geometry)
          VB: Protected Overrides Function _addFeature(geometry As Vector3()) As VirgisFeature
        parameters:
        - id: geometry
          type: Vector3[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.ContainerLayer._addFeature*
      overridden: Virgis.VirgisLayer._addFeature(Vector3[])
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.ContainerLayer._checkpoint
      commentId: M:Virgis.ContainerLayer._checkpoint
      language: CSharp
      name:
        CSharp: _checkpoint()
        VB: _checkpoint()
      nameWithType:
        CSharp: ContainerLayer._checkpoint()
        VB: ContainerLayer._checkpoint()
      qualifiedName:
        CSharp: Virgis.ContainerLayer._checkpoint()
        VB: Virgis.ContainerLayer._checkpoint()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _checkpoint
        path: ''
        startLine: 2465
      syntax:
        content:
          CSharp: protected override void _checkpoint()
          VB: Protected Overrides Sub _checkpoint
      overload: Virgis.ContainerLayer._checkpoint*
      overridden: Virgis.VirgisLayer._checkpoint
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.ContainerLayer._draw
      commentId: M:Virgis.ContainerLayer._draw
      language: CSharp
      name:
        CSharp: _draw()
        VB: _draw()
      nameWithType:
        CSharp: ContainerLayer._draw()
        VB: ContainerLayer._draw()
      qualifiedName:
        CSharp: Virgis.ContainerLayer._draw()
        VB: Virgis.ContainerLayer._draw()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _draw
        path: ''
        startLine: 2472
      syntax:
        content:
          CSharp: protected override void _draw()
          VB: Protected Overrides Sub _draw
      overload: Virgis.ContainerLayer._draw*
      overridden: Virgis.VirgisLayer._draw
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.ContainerLayer._save
      commentId: M:Virgis.ContainerLayer._save
      language: CSharp
      name:
        CSharp: _save()
        VB: _save()
      nameWithType:
        CSharp: ContainerLayer._save()
        VB: ContainerLayer._save()
      qualifiedName:
        CSharp: Virgis.ContainerLayer._save()
        VB: Virgis.ContainerLayer._save()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _save
        path: ''
        startLine: 2479
      syntax:
        content:
          CSharp: protected override Task _save()
          VB: Protected Overrides Function _save As Task
        return:
          type: Task
      overload: Virgis.ContainerLayer._save*
      overridden: Virgis.VirgisLayer._save
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: Virgis.OgrLayer
    commentId: T:Virgis.OgrLayer
    language: CSharp
    name:
      CSharp: OgrLayer
      VB: OgrLayer
    nameWithType:
      CSharp: OgrLayer
      VB: OgrLayer
    qualifiedName:
      CSharp: Virgis.OgrLayer
      VB: Virgis.OgrLayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: OgrLayer
      path: ''
      startLine: 2501
    syntax:
      content:
        CSharp: 'public class OgrLayer : VirgisLayer<RecordSet, Layer[]>, IVirgisLayer, IVirgisEntity'
        VB: >-
          Public Class OgrLayer

              Inherits VirgisLayer(Of RecordSet, Layer())

              Implements IVirgisLayer, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisLayer
    - Virgis.VirgisLayer{RecordSet,Layer[]}
    implements:
    - Virgis.IVirgisLayer
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.VirgisLayer{RecordSet,Layer[]}.features
    - Virgis.VirgisLayer{RecordSet,Layer[]}.Init(RecordSet)
    - Virgis.VirgisLayer{RecordSet,Layer[]}._init
    - Virgis.VirgisLayer{RecordSet,Layer[]}.GetMetadata
    - Virgis.VirgisLayer{RecordSet,Layer[]}.SetMetadata(RecordSet)
    - Virgis.VirgisLayer{RecordSet,Layer[]}.SetFeatures(Layer[])
    - Virgis.VirgisLayer{RecordSet,Layer[]}.Equals(System.Object)
    - Virgis.VirgisLayer{RecordSet,Layer[]}.GetHashCode
    - Virgis.VirgisLayer{RecordSet,Layer[]}.Equals(Virgis.VirgisLayer{RecordSet,Layer[]})
    - Virgis.VirgisLayer._layer
    - Virgis.VirgisLayer.featureType
    - Virgis.VirgisLayer.changed
    - Virgis.VirgisLayer._id
    - Virgis.VirgisLayer._editable
    - Virgis.VirgisLayer._crs
    - Virgis.VirgisLayer.AddFeature(Vector3[])
    - Virgis.VirgisLayer.Draw
    - Virgis.VirgisLayer.CheckPoint
    - Virgis.VirgisLayer.Save
    - Virgis.VirgisLayer.Translate(Virgis.MoveArgs)
    - Virgis.VirgisLayer.MoveAxis(Virgis.MoveArgs)
    - Virgis.VirgisLayer.MoveTo(Virgis.MoveArgs)
    - Virgis.VirgisLayer.VertexMove(Virgis.MoveArgs)
    - Virgis.VirgisLayer.Selected(Virgis.SelectionType)
    - Virgis.VirgisLayer.UnSelected(Virgis.SelectionType)
    - Virgis.VirgisLayer.GetClosest(Vector3,System.Guid[])
    - Virgis.VirgisLayer.GetFeature(System.Guid)
    - Virgis.VirgisLayer.GetId
    - Virgis.VirgisLayer.GetMetadata
    - Virgis.VirgisLayer.SetMetadata(RecordSet)
    - Virgis.VirgisLayer.GetFeatureShape
    - Virgis.VirgisLayer.SetVisible(System.Boolean)
    - Virgis.VirgisLayer._set_visible
    - Virgis.VirgisLayer.IsVisible
    - Virgis.VirgisLayer.SetEditable(System.Boolean)
    - Virgis.VirgisLayer.IsEditable
    - Virgis.VirgisLayer.SetCrs(SpatialReference)
    - Virgis.VirgisLayer.GetCrs
    - Virgis.VirgisLayer.Equals(System.Object)
    - Virgis.VirgisLayer.GetHashCode
    - Virgis.VirgisLayer.Equals(Virgis.VirgisLayer)
    - Virgis.VirgisLayer.GetLayer
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.OgrLayer.PointLayer
      commentId: F:Virgis.OgrLayer.PointLayer
      language: CSharp
      name:
        CSharp: PointLayer
        VB: PointLayer
      nameWithType:
        CSharp: OgrLayer.PointLayer
        VB: OgrLayer.PointLayer
      qualifiedName:
        CSharp: Virgis.OgrLayer.PointLayer
        VB: Virgis.OgrLayer.PointLayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: PointLayer
        path: ''
        startLine: 2503
      syntax:
        content:
          CSharp: public GameObject PointLayer
          VB: Public PointLayer As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.OgrLayer.LineLayer
      commentId: F:Virgis.OgrLayer.LineLayer
      language: CSharp
      name:
        CSharp: LineLayer
        VB: LineLayer
      nameWithType:
        CSharp: OgrLayer.LineLayer
        VB: OgrLayer.LineLayer
      qualifiedName:
        CSharp: Virgis.OgrLayer.LineLayer
        VB: Virgis.OgrLayer.LineLayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: LineLayer
        path: ''
        startLine: 2504
      syntax:
        content:
          CSharp: public GameObject LineLayer
          VB: Public LineLayer As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.OgrLayer.PolygonLayer
      commentId: F:Virgis.OgrLayer.PolygonLayer
      language: CSharp
      name:
        CSharp: PolygonLayer
        VB: PolygonLayer
      nameWithType:
        CSharp: OgrLayer.PolygonLayer
        VB: OgrLayer.PolygonLayer
      qualifiedName:
        CSharp: Virgis.OgrLayer.PolygonLayer
        VB: Virgis.OgrLayer.PolygonLayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: PolygonLayer
        path: ''
        startLine: 2505
      syntax:
        content:
          CSharp: public GameObject PolygonLayer
          VB: Public PolygonLayer As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.OgrLayer._init
      commentId: M:Virgis.OgrLayer._init
      language: CSharp
      name:
        CSharp: _init()
        VB: _init()
      nameWithType:
        CSharp: OgrLayer._init()
        VB: OgrLayer._init()
      qualifiedName:
        CSharp: Virgis.OgrLayer._init()
        VB: Virgis.OgrLayer._init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _init
        path: ''
        startLine: 2514
      syntax:
        content:
          CSharp: protected override Task _init()
          VB: Protected Overrides Function _init As Task
        return:
          type: Task
      overload: Virgis.OgrLayer._init*
      overridden: Virgis.VirgisLayer{RecordSet,Layer[]}._init
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.OgrLayer._addFeature(Vector3[])
      commentId: M:Virgis.OgrLayer._addFeature(Vector3[])
      language: CSharp
      name:
        CSharp: _addFeature(Vector3[])
        VB: _addFeature(Vector3())
      nameWithType:
        CSharp: OgrLayer._addFeature(Vector3[])
        VB: OgrLayer._addFeature(Vector3())
      qualifiedName:
        CSharp: Virgis.OgrLayer._addFeature(Vector3[])
        VB: Virgis.OgrLayer._addFeature(Vector3())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _addFeature
        path: ''
        startLine: 2608
      syntax:
        content:
          CSharp: protected override VirgisFeature _addFeature(Vector3[] geometry)
          VB: Protected Overrides Function _addFeature(geometry As Vector3()) As VirgisFeature
        parameters:
        - id: geometry
          type: Vector3[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.OgrLayer._addFeature*
      overridden: Virgis.VirgisLayer._addFeature(Vector3[])
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.OgrLayer._draw
      commentId: M:Virgis.OgrLayer._draw
      language: CSharp
      name:
        CSharp: _draw()
        VB: _draw()
      nameWithType:
        CSharp: OgrLayer._draw()
        VB: OgrLayer._draw()
      qualifiedName:
        CSharp: Virgis.OgrLayer._draw()
        VB: Virgis.OgrLayer._draw()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _draw
        path: ''
        startLine: 2614
      syntax:
        content:
          CSharp: protected override void _draw()
          VB: Protected Overrides Sub _draw
      overload: Virgis.OgrLayer._draw*
      overridden: Virgis.VirgisLayer._draw
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.OgrLayer._checkpoint
      commentId: M:Virgis.OgrLayer._checkpoint
      language: CSharp
      name:
        CSharp: _checkpoint()
        VB: _checkpoint()
      nameWithType:
        CSharp: OgrLayer._checkpoint()
        VB: OgrLayer._checkpoint()
      qualifiedName:
        CSharp: Virgis.OgrLayer._checkpoint()
        VB: Virgis.OgrLayer._checkpoint()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _checkpoint
        path: ''
        startLine: 2618
      syntax:
        content:
          CSharp: protected override void _checkpoint()
          VB: Protected Overrides Sub _checkpoint
      overload: Virgis.OgrLayer._checkpoint*
      overridden: Virgis.VirgisLayer._checkpoint
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.OgrLayer._save
      commentId: M:Virgis.OgrLayer._save
      language: CSharp
      name:
        CSharp: _save()
        VB: _save()
      nameWithType:
        CSharp: OgrLayer._save()
        VB: OgrLayer._save()
      qualifiedName:
        CSharp: Virgis.OgrLayer._save()
        VB: Virgis.OgrLayer._save()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _save
        path: ''
        startLine: 2622
      syntax:
        content:
          CSharp: protected override Task _save()
          VB: Protected Overrides Function _save As Task
        return:
          type: Task
      overload: Virgis.OgrLayer._save*
      overridden: Virgis.VirgisLayer._save
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: Virgis.MdalLayer
    commentId: T:Virgis.MdalLayer
    language: CSharp
    name:
      CSharp: MdalLayer
      VB: MdalLayer
    nameWithType:
      CSharp: MdalLayer
      VB: MdalLayer
    qualifiedName:
      CSharp: Virgis.MdalLayer
      VB: Virgis.MdalLayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: MdalLayer
      path: ''
      startLine: 2642
    syntax:
      content:
        CSharp: 'public class MdalLayer : VirgisLayer<RecordSet, List<DMesh3>>, IVirgisLayer, IVirgisEntity'
        VB: >-
          Public Class MdalLayer

              Inherits VirgisLayer(Of RecordSet, List(Of DMesh3))

              Implements IVirgisLayer, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisLayer
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}
    implements:
    - Virgis.IVirgisLayer
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.features
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.Init(RecordSet)
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}._init
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.GetMetadata
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.SetMetadata(RecordSet)
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.SetFeatures(System.Collections.Generic.List{DMesh3})
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.Equals(System.Object)
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.GetHashCode
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.Equals(Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}})
    - Virgis.VirgisLayer._layer
    - Virgis.VirgisLayer.featureType
    - Virgis.VirgisLayer.changed
    - Virgis.VirgisLayer._id
    - Virgis.VirgisLayer._editable
    - Virgis.VirgisLayer._crs
    - Virgis.VirgisLayer.AddFeature(Vector3[])
    - Virgis.VirgisLayer.Draw
    - Virgis.VirgisLayer.CheckPoint
    - Virgis.VirgisLayer.Save
    - Virgis.VirgisLayer.MoveTo(Virgis.MoveArgs)
    - Virgis.VirgisLayer.VertexMove(Virgis.MoveArgs)
    - Virgis.VirgisLayer.Selected(Virgis.SelectionType)
    - Virgis.VirgisLayer.UnSelected(Virgis.SelectionType)
    - Virgis.VirgisLayer.GetClosest(Vector3,System.Guid[])
    - Virgis.VirgisLayer.GetFeature(System.Guid)
    - Virgis.VirgisLayer.GetId
    - Virgis.VirgisLayer.GetMetadata
    - Virgis.VirgisLayer.SetMetadata(RecordSet)
    - Virgis.VirgisLayer.GetFeatureShape
    - Virgis.VirgisLayer.SetVisible(System.Boolean)
    - Virgis.VirgisLayer._set_visible
    - Virgis.VirgisLayer.IsVisible
    - Virgis.VirgisLayer.SetEditable(System.Boolean)
    - Virgis.VirgisLayer.IsEditable
    - Virgis.VirgisLayer.SetCrs(SpatialReference)
    - Virgis.VirgisLayer.GetCrs
    - Virgis.VirgisLayer.Equals(System.Object)
    - Virgis.VirgisLayer.GetHashCode
    - Virgis.VirgisLayer.Equals(Virgis.VirgisLayer)
    - Virgis.VirgisLayer.GetLayer
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.MdalLayer.Mesh
      commentId: F:Virgis.MdalLayer.Mesh
      language: CSharp
      name:
        CSharp: Mesh
        VB: Mesh
      nameWithType:
        CSharp: MdalLayer.Mesh
        VB: MdalLayer.Mesh
      qualifiedName:
        CSharp: Virgis.MdalLayer.Mesh
        VB: Virgis.MdalLayer.Mesh
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Mesh
        path: ''
        startLine: 2645
      syntax:
        content:
          CSharp: public GameObject Mesh
          VB: Public Mesh As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MdalLayer.MeshMaterial
      commentId: F:Virgis.MdalLayer.MeshMaterial
      language: CSharp
      name:
        CSharp: MeshMaterial
        VB: MeshMaterial
      nameWithType:
        CSharp: MdalLayer.MeshMaterial
        VB: MdalLayer.MeshMaterial
      qualifiedName:
        CSharp: Virgis.MdalLayer.MeshMaterial
        VB: Virgis.MdalLayer.MeshMaterial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MeshMaterial
        path: ''
        startLine: 2646
      syntax:
        content:
          CSharp: public Material MeshMaterial
          VB: Public MeshMaterial As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MdalLayer._init
      commentId: M:Virgis.MdalLayer._init
      language: CSharp
      name:
        CSharp: _init()
        VB: _init()
      nameWithType:
        CSharp: MdalLayer._init()
        VB: MdalLayer._init()
      qualifiedName:
        CSharp: Virgis.MdalLayer._init()
        VB: Virgis.MdalLayer._init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _init
        path: ''
        startLine: 2655
      syntax:
        content:
          CSharp: protected override Task _init()
          VB: Protected Overrides Function _init As Task
        return:
          type: Task
      overload: Virgis.MdalLayer._init*
      overridden: Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}._init
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.MdalLayer._addFeature(Vector3[])
      commentId: M:Virgis.MdalLayer._addFeature(Vector3[])
      language: CSharp
      name:
        CSharp: _addFeature(Vector3[])
        VB: _addFeature(Vector3())
      nameWithType:
        CSharp: MdalLayer._addFeature(Vector3[])
        VB: MdalLayer._addFeature(Vector3())
      qualifiedName:
        CSharp: Virgis.MdalLayer._addFeature(Vector3[])
        VB: Virgis.MdalLayer._addFeature(Vector3())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _addFeature
        path: ''
        startLine: 2674
      syntax:
        content:
          CSharp: protected override VirgisFeature _addFeature(Vector3[] geometry)
          VB: Protected Overrides Function _addFeature(geometry As Vector3()) As VirgisFeature
        parameters:
        - id: geometry
          type: Vector3[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.MdalLayer._addFeature*
      overridden: Virgis.VirgisLayer._addFeature(Vector3[])
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.MdalLayer._draw
      commentId: M:Virgis.MdalLayer._draw
      language: CSharp
      name:
        CSharp: _draw()
        VB: _draw()
      nameWithType:
        CSharp: MdalLayer._draw()
        VB: MdalLayer._draw()
      qualifiedName:
        CSharp: Virgis.MdalLayer._draw()
        VB: Virgis.MdalLayer._draw()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _draw
        path: ''
        startLine: 2678
      syntax:
        content:
          CSharp: protected override void _draw()
          VB: Protected Overrides Sub _draw
      overload: Virgis.MdalLayer._draw*
      overridden: Virgis.VirgisLayer._draw
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.MdalLayer.Translate(Virgis.MoveArgs)
      commentId: M:Virgis.MdalLayer.Translate(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Translate(MoveArgs)
        VB: Translate(MoveArgs)
      nameWithType:
        CSharp: MdalLayer.Translate(MoveArgs)
        VB: MdalLayer.Translate(MoveArgs)
      qualifiedName:
        CSharp: Virgis.MdalLayer.Translate(Virgis.MoveArgs)
        VB: Virgis.MdalLayer.Translate(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Translate
        path: ''
        startLine: 2694
      syntax:
        content:
          CSharp: public override void Translate(MoveArgs args)
          VB: Public Overrides Sub Translate(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.MdalLayer.Translate*
      overridden: Virgis.VirgisLayer.Translate(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.MdalLayer.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.MdalLayer.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: MdalLayer.MoveAxis(MoveArgs)
        VB: MdalLayer.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.MdalLayer.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.MdalLayer.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 2702
      example: []
      syntax:
        content:
          CSharp: public override void MoveAxis(MoveArgs args)
          VB: Public Overrides Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.MdalLayer.MoveAxis*
      overridden: Virgis.VirgisLayer.MoveAxis(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.MdalLayer._checkpoint
      commentId: M:Virgis.MdalLayer._checkpoint
      language: CSharp
      name:
        CSharp: _checkpoint()
        VB: _checkpoint()
      nameWithType:
        CSharp: MdalLayer._checkpoint()
        VB: MdalLayer._checkpoint()
      qualifiedName:
        CSharp: Virgis.MdalLayer._checkpoint()
        VB: Virgis.MdalLayer._checkpoint()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _checkpoint
        path: ''
        startLine: 2728
      syntax:
        content:
          CSharp: protected override void _checkpoint()
          VB: Protected Overrides Sub _checkpoint
      overload: Virgis.MdalLayer._checkpoint*
      overridden: Virgis.VirgisLayer._checkpoint
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.MdalLayer._save
      commentId: M:Virgis.MdalLayer._save
      language: CSharp
      name:
        CSharp: _save()
        VB: _save()
      nameWithType:
        CSharp: MdalLayer._save()
        VB: MdalLayer._save()
      qualifiedName:
        CSharp: Virgis.MdalLayer._save()
        VB: Virgis.MdalLayer._save()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _save
        path: ''
        startLine: 2730
      syntax:
        content:
          CSharp: protected override Task _save()
          VB: Protected Overrides Function _save As Task
        return:
          type: Task
      overload: Virgis.MdalLayer._save*
      overridden: Virgis.VirgisLayer._save
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: Virgis.DemLayer
    commentId: T:Virgis.DemLayer
    language: CSharp
    name:
      CSharp: DemLayer
      VB: DemLayer
    nameWithType:
      CSharp: DemLayer
      VB: DemLayer
    qualifiedName:
      CSharp: Virgis.DemLayer
      VB: Virgis.DemLayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: DemLayer
      path: ''
      startLine: 2758
    syntax:
      content:
        CSharp: 'public class DemLayer : VirgisLayer<RecordSet, List<DMesh3>>, IVirgisLayer, IVirgisEntity'
        VB: >-
          Public Class DemLayer

              Inherits VirgisLayer(Of RecordSet, List(Of DMesh3))

              Implements IVirgisLayer, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisLayer
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}
    implements:
    - Virgis.IVirgisLayer
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.features
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.Init(RecordSet)
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}._init
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.GetMetadata
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.SetMetadata(RecordSet)
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.SetFeatures(System.Collections.Generic.List{DMesh3})
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.Equals(System.Object)
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.GetHashCode
    - Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.Equals(Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}})
    - Virgis.VirgisLayer._layer
    - Virgis.VirgisLayer.featureType
    - Virgis.VirgisLayer.changed
    - Virgis.VirgisLayer._id
    - Virgis.VirgisLayer._editable
    - Virgis.VirgisLayer._crs
    - Virgis.VirgisLayer.AddFeature(Vector3[])
    - Virgis.VirgisLayer.Draw
    - Virgis.VirgisLayer.CheckPoint
    - Virgis.VirgisLayer.Save
    - Virgis.VirgisLayer.MoveTo(Virgis.MoveArgs)
    - Virgis.VirgisLayer.VertexMove(Virgis.MoveArgs)
    - Virgis.VirgisLayer.Selected(Virgis.SelectionType)
    - Virgis.VirgisLayer.UnSelected(Virgis.SelectionType)
    - Virgis.VirgisLayer.GetClosest(Vector3,System.Guid[])
    - Virgis.VirgisLayer.GetFeature(System.Guid)
    - Virgis.VirgisLayer.GetId
    - Virgis.VirgisLayer.GetMetadata
    - Virgis.VirgisLayer.SetMetadata(RecordSet)
    - Virgis.VirgisLayer.GetFeatureShape
    - Virgis.VirgisLayer.SetVisible(System.Boolean)
    - Virgis.VirgisLayer.IsVisible
    - Virgis.VirgisLayer.SetEditable(System.Boolean)
    - Virgis.VirgisLayer.IsEditable
    - Virgis.VirgisLayer.SetCrs(SpatialReference)
    - Virgis.VirgisLayer.GetCrs
    - Virgis.VirgisLayer.Equals(System.Object)
    - Virgis.VirgisLayer.GetHashCode
    - Virgis.VirgisLayer.Equals(Virgis.VirgisLayer)
    - Virgis.VirgisLayer.GetLayer
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.DemLayer.Mesh
      commentId: F:Virgis.DemLayer.Mesh
      language: CSharp
      name:
        CSharp: Mesh
        VB: Mesh
      nameWithType:
        CSharp: DemLayer.Mesh
        VB: DemLayer.Mesh
      qualifiedName:
        CSharp: Virgis.DemLayer.Mesh
        VB: Virgis.DemLayer.Mesh
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Mesh
        path: ''
        startLine: 2760
      syntax:
        content:
          CSharp: public GameObject Mesh
          VB: Public Mesh As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.DemLayer.MeshMaterial
      commentId: F:Virgis.DemLayer.MeshMaterial
      language: CSharp
      name:
        CSharp: MeshMaterial
        VB: MeshMaterial
      nameWithType:
        CSharp: DemLayer.MeshMaterial
        VB: DemLayer.MeshMaterial
      qualifiedName:
        CSharp: Virgis.DemLayer.MeshMaterial
        VB: Virgis.DemLayer.MeshMaterial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MeshMaterial
        path: ''
        startLine: 2761
      syntax:
        content:
          CSharp: public Material MeshMaterial
          VB: Public MeshMaterial As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.DemLayer._init
      commentId: M:Virgis.DemLayer._init
      language: CSharp
      name:
        CSharp: _init()
        VB: _init()
      nameWithType:
        CSharp: DemLayer._init()
        VB: DemLayer._init()
      qualifiedName:
        CSharp: Virgis.DemLayer._init()
        VB: Virgis.DemLayer._init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _init
        path: ''
        startLine: 2771
      syntax:
        content:
          CSharp: protected override Task _init()
          VB: Protected Overrides Function _init As Task
        return:
          type: Task
      overload: Virgis.DemLayer._init*
      overridden: Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}._init
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.DemLayer._addFeature(Vector3[])
      commentId: M:Virgis.DemLayer._addFeature(Vector3[])
      language: CSharp
      name:
        CSharp: _addFeature(Vector3[])
        VB: _addFeature(Vector3())
      nameWithType:
        CSharp: DemLayer._addFeature(Vector3[])
        VB: DemLayer._addFeature(Vector3())
      qualifiedName:
        CSharp: Virgis.DemLayer._addFeature(Vector3[])
        VB: Virgis.DemLayer._addFeature(Vector3())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _addFeature
        path: ''
        startLine: 2935
      syntax:
        content:
          CSharp: protected override VirgisFeature _addFeature(Vector3[] geometry)
          VB: Protected Overrides Function _addFeature(geometry As Vector3()) As VirgisFeature
        parameters:
        - id: geometry
          type: Vector3[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.DemLayer._addFeature*
      overridden: Virgis.VirgisLayer._addFeature(Vector3[])
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.DemLayer._draw
      commentId: M:Virgis.DemLayer._draw
      language: CSharp
      name:
        CSharp: _draw()
        VB: _draw()
      nameWithType:
        CSharp: DemLayer._draw()
        VB: DemLayer._draw()
      qualifiedName:
        CSharp: Virgis.DemLayer._draw()
        VB: Virgis.DemLayer._draw()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _draw
        path: ''
        startLine: 2940
      syntax:
        content:
          CSharp: protected override void _draw()
          VB: Protected Overrides Sub _draw
      overload: Virgis.DemLayer._draw*
      overridden: Virgis.VirgisLayer._draw
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.DemLayer._set_visible
      commentId: M:Virgis.DemLayer._set_visible
      language: CSharp
      name:
        CSharp: _set_visible()
        VB: _set_visible()
      nameWithType:
        CSharp: DemLayer._set_visible()
        VB: DemLayer._set_visible()
      qualifiedName:
        CSharp: Virgis.DemLayer._set_visible()
        VB: Virgis.DemLayer._set_visible()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _set_visible
        path: ''
        startLine: 2958
      syntax:
        content:
          CSharp: public override void _set_visible()
          VB: Public Overrides Sub _set_visible
      overload: Virgis.DemLayer._set_visible*
      overridden: Virgis.VirgisLayer._set_visible
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.DemLayer.Translate(Virgis.MoveArgs)
      commentId: M:Virgis.DemLayer.Translate(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Translate(MoveArgs)
        VB: Translate(MoveArgs)
      nameWithType:
        CSharp: DemLayer.Translate(MoveArgs)
        VB: DemLayer.Translate(MoveArgs)
      qualifiedName:
        CSharp: Virgis.DemLayer.Translate(Virgis.MoveArgs)
        VB: Virgis.DemLayer.Translate(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Translate
        path: ''
        startLine: 2964
      syntax:
        content:
          CSharp: public override void Translate(MoveArgs args)
          VB: Public Overrides Sub Translate(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.DemLayer.Translate*
      overridden: Virgis.VirgisLayer.Translate(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.DemLayer.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.DemLayer.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: DemLayer.MoveAxis(MoveArgs)
        VB: DemLayer.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.DemLayer.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.DemLayer.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 2973
      syntax:
        content:
          CSharp: public override void MoveAxis(MoveArgs args)
          VB: Public Overrides Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.DemLayer.MoveAxis*
      overridden: Virgis.VirgisLayer.MoveAxis(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.DemLayer._checkpoint
      commentId: M:Virgis.DemLayer._checkpoint
      language: CSharp
      name:
        CSharp: _checkpoint()
        VB: _checkpoint()
      nameWithType:
        CSharp: DemLayer._checkpoint()
        VB: DemLayer._checkpoint()
      qualifiedName:
        CSharp: Virgis.DemLayer._checkpoint()
        VB: Virgis.DemLayer._checkpoint()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _checkpoint
        path: ''
        startLine: 2999
      syntax:
        content:
          CSharp: protected override void _checkpoint()
          VB: Protected Overrides Sub _checkpoint
      overload: Virgis.DemLayer._checkpoint*
      overridden: Virgis.VirgisLayer._checkpoint
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.DemLayer._save
      commentId: M:Virgis.DemLayer._save
      language: CSharp
      name:
        CSharp: _save()
        VB: _save()
      nameWithType:
        CSharp: DemLayer._save()
        VB: DemLayer._save()
      qualifiedName:
        CSharp: Virgis.DemLayer._save()
        VB: Virgis.DemLayer._save()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _save
        path: ''
        startLine: 3001
      syntax:
        content:
          CSharp: protected override Task _save()
          VB: Protected Overrides Function _save As Task
        return:
          type: Task
      overload: Virgis.DemLayer._save*
      overridden: Virgis.VirgisLayer._save
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: Virgis.LineLayer
    commentId: T:Virgis.LineLayer
    language: CSharp
    name:
      CSharp: LineLayer
      VB: LineLayer
    nameWithType:
      CSharp: LineLayer
      VB: LineLayer
    qualifiedName:
      CSharp: Virgis.LineLayer
      VB: Virgis.LineLayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: LineLayer
      path: ''
      startLine: 3027
    summary: "\nThe parent entity for a instance of a Line Layer - that holds one MultiLineString FeatureCollection\n"
    example: []
    syntax:
      content:
        CSharp: 'public class LineLayer : VirgisLayer<RecordSet, Layer>, IVirgisLayer, IVirgisEntity'
        VB: >-
          Public Class LineLayer

              Inherits VirgisLayer(Of RecordSet, Layer)

              Implements IVirgisLayer, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisLayer
    - Virgis.VirgisLayer{RecordSet,Layer}
    implements:
    - Virgis.IVirgisLayer
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.VirgisLayer{RecordSet,Layer}.features
    - Virgis.VirgisLayer{RecordSet,Layer}.Init(RecordSet)
    - Virgis.VirgisLayer{RecordSet,Layer}._init
    - Virgis.VirgisLayer{RecordSet,Layer}.GetMetadata
    - Virgis.VirgisLayer{RecordSet,Layer}.SetMetadata(RecordSet)
    - Virgis.VirgisLayer{RecordSet,Layer}.SetFeatures(Layer)
    - Virgis.VirgisLayer{RecordSet,Layer}.Equals(System.Object)
    - Virgis.VirgisLayer{RecordSet,Layer}.GetHashCode
    - Virgis.VirgisLayer{RecordSet,Layer}.Equals(Virgis.VirgisLayer{RecordSet,Layer})
    - Virgis.VirgisLayer._layer
    - Virgis.VirgisLayer.featureType
    - Virgis.VirgisLayer.changed
    - Virgis.VirgisLayer._id
    - Virgis.VirgisLayer._editable
    - Virgis.VirgisLayer._crs
    - Virgis.VirgisLayer.AddFeature(Vector3[])
    - Virgis.VirgisLayer.Draw
    - Virgis.VirgisLayer.CheckPoint
    - Virgis.VirgisLayer.Save
    - Virgis.VirgisLayer.MoveTo(Virgis.MoveArgs)
    - Virgis.VirgisLayer.VertexMove(Virgis.MoveArgs)
    - Virgis.VirgisLayer.Selected(Virgis.SelectionType)
    - Virgis.VirgisLayer.UnSelected(Virgis.SelectionType)
    - Virgis.VirgisLayer.GetClosest(Vector3,System.Guid[])
    - Virgis.VirgisLayer.GetFeature(System.Guid)
    - Virgis.VirgisLayer.GetId
    - Virgis.VirgisLayer.GetMetadata
    - Virgis.VirgisLayer.SetMetadata(RecordSet)
    - Virgis.VirgisLayer.SetVisible(System.Boolean)
    - Virgis.VirgisLayer._set_visible
    - Virgis.VirgisLayer.IsVisible
    - Virgis.VirgisLayer.SetEditable(System.Boolean)
    - Virgis.VirgisLayer.IsEditable
    - Virgis.VirgisLayer.SetCrs(SpatialReference)
    - Virgis.VirgisLayer.GetCrs
    - Virgis.VirgisLayer.Equals(System.Object)
    - Virgis.VirgisLayer.GetHashCode
    - Virgis.VirgisLayer.Equals(Virgis.VirgisLayer)
    - Virgis.VirgisLayer.GetLayer
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.LineLayer.CylinderLinePrefab
      commentId: F:Virgis.LineLayer.CylinderLinePrefab
      language: CSharp
      name:
        CSharp: CylinderLinePrefab
        VB: CylinderLinePrefab
      nameWithType:
        CSharp: LineLayer.CylinderLinePrefab
        VB: LineLayer.CylinderLinePrefab
      qualifiedName:
        CSharp: Virgis.LineLayer.CylinderLinePrefab
        VB: Virgis.LineLayer.CylinderLinePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CylinderLinePrefab
        path: ''
        startLine: 3030
      syntax:
        content:
          CSharp: public GameObject CylinderLinePrefab
          VB: Public CylinderLinePrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LineLayer.CuboidLinePrefab
      commentId: F:Virgis.LineLayer.CuboidLinePrefab
      language: CSharp
      name:
        CSharp: CuboidLinePrefab
        VB: CuboidLinePrefab
      nameWithType:
        CSharp: LineLayer.CuboidLinePrefab
        VB: LineLayer.CuboidLinePrefab
      qualifiedName:
        CSharp: Virgis.LineLayer.CuboidLinePrefab
        VB: Virgis.LineLayer.CuboidLinePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CuboidLinePrefab
        path: ''
        startLine: 3031
      syntax:
        content:
          CSharp: public GameObject CuboidLinePrefab
          VB: Public CuboidLinePrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LineLayer.SpherePrefab
      commentId: F:Virgis.LineLayer.SpherePrefab
      language: CSharp
      name:
        CSharp: SpherePrefab
        VB: SpherePrefab
      nameWithType:
        CSharp: LineLayer.SpherePrefab
        VB: LineLayer.SpherePrefab
      qualifiedName:
        CSharp: Virgis.LineLayer.SpherePrefab
        VB: Virgis.LineLayer.SpherePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SpherePrefab
        path: ''
        startLine: 3032
      syntax:
        content:
          CSharp: public GameObject SpherePrefab
          VB: Public SpherePrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LineLayer.CubePrefab
      commentId: F:Virgis.LineLayer.CubePrefab
      language: CSharp
      name:
        CSharp: CubePrefab
        VB: CubePrefab
      nameWithType:
        CSharp: LineLayer.CubePrefab
        VB: LineLayer.CubePrefab
      qualifiedName:
        CSharp: Virgis.LineLayer.CubePrefab
        VB: Virgis.LineLayer.CubePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CubePrefab
        path: ''
        startLine: 3033
      syntax:
        content:
          CSharp: public GameObject CubePrefab
          VB: Public CubePrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LineLayer.CylinderPrefab
      commentId: F:Virgis.LineLayer.CylinderPrefab
      language: CSharp
      name:
        CSharp: CylinderPrefab
        VB: CylinderPrefab
      nameWithType:
        CSharp: LineLayer.CylinderPrefab
        VB: LineLayer.CylinderPrefab
      qualifiedName:
        CSharp: Virgis.LineLayer.CylinderPrefab
        VB: Virgis.LineLayer.CylinderPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CylinderPrefab
        path: ''
        startLine: 3034
      syntax:
        content:
          CSharp: public GameObject CylinderPrefab
          VB: Public CylinderPrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LineLayer.LabelPrefab
      commentId: F:Virgis.LineLayer.LabelPrefab
      language: CSharp
      name:
        CSharp: LabelPrefab
        VB: LabelPrefab
      nameWithType:
        CSharp: LineLayer.LabelPrefab
        VB: LineLayer.LabelPrefab
      qualifiedName:
        CSharp: Virgis.LineLayer.LabelPrefab
        VB: Virgis.LineLayer.LabelPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: LabelPrefab
        path: ''
        startLine: 3035
      syntax:
        content:
          CSharp: public GameObject LabelPrefab
          VB: Public LabelPrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LineLayer.PointBaseMaterial
      commentId: F:Virgis.LineLayer.PointBaseMaterial
      language: CSharp
      name:
        CSharp: PointBaseMaterial
        VB: PointBaseMaterial
      nameWithType:
        CSharp: LineLayer.PointBaseMaterial
        VB: LineLayer.PointBaseMaterial
      qualifiedName:
        CSharp: Virgis.LineLayer.PointBaseMaterial
        VB: Virgis.LineLayer.PointBaseMaterial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: PointBaseMaterial
        path: ''
        startLine: 3036
      syntax:
        content:
          CSharp: public Material PointBaseMaterial
          VB: Public PointBaseMaterial As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LineLayer.LineBaseMaterial
      commentId: F:Virgis.LineLayer.LineBaseMaterial
      language: CSharp
      name:
        CSharp: LineBaseMaterial
        VB: LineBaseMaterial
      nameWithType:
        CSharp: LineLayer.LineBaseMaterial
        VB: LineLayer.LineBaseMaterial
      qualifiedName:
        CSharp: Virgis.LineLayer.LineBaseMaterial
        VB: Virgis.LineLayer.LineBaseMaterial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: LineBaseMaterial
        path: ''
        startLine: 3037
      syntax:
        content:
          CSharp: public Material LineBaseMaterial
          VB: Public LineBaseMaterial As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LineLayer._init
      commentId: M:Virgis.LineLayer._init
      language: CSharp
      name:
        CSharp: _init()
        VB: _init()
      nameWithType:
        CSharp: LineLayer._init()
        VB: LineLayer._init()
      qualifiedName:
        CSharp: Virgis.LineLayer._init()
        VB: Virgis.LineLayer._init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _init
        path: ''
        startLine: 3055
      syntax:
        content:
          CSharp: protected override Task _init()
          VB: Protected Overrides Function _init As Task
        return:
          type: Task
      overload: Virgis.LineLayer._init*
      overridden: Virgis.VirgisLayer{RecordSet,Layer}._init
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.LineLayer._addFeature(Vector3[])
      commentId: M:Virgis.LineLayer._addFeature(Vector3[])
      language: CSharp
      name:
        CSharp: _addFeature(Vector3[])
        VB: _addFeature(Vector3())
      nameWithType:
        CSharp: LineLayer._addFeature(Vector3[])
        VB: LineLayer._addFeature(Vector3())
      qualifiedName:
        CSharp: Virgis.LineLayer._addFeature(Vector3[])
        VB: Virgis.LineLayer._addFeature(Vector3())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _addFeature
        path: ''
        startLine: 3118
      syntax:
        content:
          CSharp: protected override VirgisFeature _addFeature(Vector3[] line)
          VB: Protected Overrides Function _addFeature(line As Vector3()) As VirgisFeature
        parameters:
        - id: line
          type: Vector3[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.LineLayer._addFeature*
      overridden: Virgis.VirgisLayer._addFeature(Vector3[])
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.LineLayer._draw
      commentId: M:Virgis.LineLayer._draw
      language: CSharp
      name:
        CSharp: _draw()
        VB: _draw()
      nameWithType:
        CSharp: LineLayer._draw()
        VB: LineLayer._draw()
      qualifiedName:
        CSharp: Virgis.LineLayer._draw()
        VB: Virgis.LineLayer._draw()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _draw
        path: ''
        startLine: 3126
      syntax:
        content:
          CSharp: protected override void _draw()
          VB: Protected Overrides Sub _draw
      overload: Virgis.LineLayer._draw*
      overridden: Virgis.VirgisLayer._draw
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.LineLayer._drawFeature(Geometry,Feature)
      commentId: M:Virgis.LineLayer._drawFeature(Geometry,Feature)
      language: CSharp
      name:
        CSharp: _drawFeature(Geometry, Feature)
        VB: _drawFeature(Geometry, Feature)
      nameWithType:
        CSharp: LineLayer._drawFeature(Geometry, Feature)
        VB: LineLayer._drawFeature(Geometry, Feature)
      qualifiedName:
        CSharp: Virgis.LineLayer._drawFeature(Geometry, Feature)
        VB: Virgis.LineLayer._drawFeature(Geometry, Feature)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _drawFeature
        path: ''
        startLine: 3177
      summary: "\nDraws a single feature based on world scale coordinates\n"
      example: []
      syntax:
        content:
          CSharp: protected VirgisFeature _drawFeature(Geometry line, Feature feature = null)
          VB: Protected Function _drawFeature(line As Geometry, feature As Feature = Nothing) As VirgisFeature
        parameters:
        - id: line
          type: Geometry
          description: Vector3[] coordinates
        - id: feature
          type: Feature
          description: Featire (optinal)
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.LineLayer._drawFeature*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.LineLayer._checkpoint
      commentId: M:Virgis.LineLayer._checkpoint
      language: CSharp
      name:
        CSharp: _checkpoint()
        VB: _checkpoint()
      nameWithType:
        CSharp: LineLayer._checkpoint()
        VB: LineLayer._checkpoint()
      qualifiedName:
        CSharp: Virgis.LineLayer._checkpoint()
        VB: Virgis.LineLayer._checkpoint()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _checkpoint
        path: ''
        startLine: 3192
      syntax:
        content:
          CSharp: protected override void _checkpoint()
          VB: Protected Overrides Sub _checkpoint
      overload: Virgis.LineLayer._checkpoint*
      overridden: Virgis.VirgisLayer._checkpoint
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.LineLayer._save
      commentId: M:Virgis.LineLayer._save
      language: CSharp
      name:
        CSharp: _save()
        VB: _save()
      nameWithType:
        CSharp: LineLayer._save()
        VB: LineLayer._save()
      qualifiedName:
        CSharp: Virgis.LineLayer._save()
        VB: Virgis.LineLayer._save()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _save
        path: ''
        startLine: 3196
      syntax:
        content:
          CSharp: protected override Task _save()
          VB: Protected Overrides Function _save As Task
        return:
          type: Task
      overload: Virgis.LineLayer._save*
      overridden: Virgis.VirgisLayer._save
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.LineLayer.GetFeatureShape
      commentId: M:Virgis.LineLayer.GetFeatureShape
      language: CSharp
      name:
        CSharp: GetFeatureShape()
        VB: GetFeatureShape()
      nameWithType:
        CSharp: LineLayer.GetFeatureShape()
        VB: LineLayer.GetFeatureShape()
      qualifiedName:
        CSharp: Virgis.LineLayer.GetFeatureShape()
        VB: Virgis.LineLayer.GetFeatureShape()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetFeatureShape
        path: ''
        startLine: 3213
      syntax:
        content:
          CSharp: public override GameObject GetFeatureShape()
          VB: Public Overrides Function GetFeatureShape As GameObject
        return:
          type: GameObject
      overload: Virgis.LineLayer.GetFeatureShape*
      overridden: Virgis.VirgisLayer.GetFeatureShape
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.LineLayer.Translate(Virgis.MoveArgs)
      commentId: M:Virgis.LineLayer.Translate(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Translate(MoveArgs)
        VB: Translate(MoveArgs)
      nameWithType:
        CSharp: LineLayer.Translate(MoveArgs)
        VB: LineLayer.Translate(MoveArgs)
      qualifiedName:
        CSharp: Virgis.LineLayer.Translate(Virgis.MoveArgs)
        VB: Virgis.LineLayer.Translate(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Translate
        path: ''
        startLine: 3221
      syntax:
        content:
          CSharp: public override void Translate(MoveArgs args)
          VB: Public Overrides Sub Translate(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.LineLayer.Translate*
      overridden: Virgis.VirgisLayer.Translate(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.LineLayer.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.LineLayer.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: LineLayer.MoveAxis(MoveArgs)
        VB: LineLayer.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.LineLayer.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.LineLayer.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 3229
      syntax:
        content:
          CSharp: public override void MoveAxis(MoveArgs args)
          VB: Public Overrides Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.LineLayer.MoveAxis*
      overridden: Virgis.VirgisLayer.MoveAxis(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Virgis.GraphLayer
    commentId: T:Virgis.GraphLayer
    language: CSharp
    name:
      CSharp: GraphLayer
      VB: GraphLayer
    nameWithType:
      CSharp: GraphLayer
      VB: GraphLayer
    qualifiedName:
      CSharp: Virgis.GraphLayer
      VB: Virgis.GraphLayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: GraphLayer
      path: ''
      startLine: 3250
    syntax:
      content:
        CSharp: 'public class GraphLayer : VirgisLayer<RecordSet, Layer[]>, IVirgisLayer, IVirgisEntity'
        VB: >-
          Public Class GraphLayer

              Inherits VirgisLayer(Of RecordSet, Layer())

              Implements IVirgisLayer, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisLayer
    - Virgis.VirgisLayer{RecordSet,Layer[]}
    implements:
    - Virgis.IVirgisLayer
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.VirgisLayer{RecordSet,Layer[]}.features
    - Virgis.VirgisLayer{RecordSet,Layer[]}.Init(RecordSet)
    - Virgis.VirgisLayer{RecordSet,Layer[]}._init
    - Virgis.VirgisLayer{RecordSet,Layer[]}.GetMetadata
    - Virgis.VirgisLayer{RecordSet,Layer[]}.SetMetadata(RecordSet)
    - Virgis.VirgisLayer{RecordSet,Layer[]}.SetFeatures(Layer[])
    - Virgis.VirgisLayer{RecordSet,Layer[]}.Equals(System.Object)
    - Virgis.VirgisLayer{RecordSet,Layer[]}.GetHashCode
    - Virgis.VirgisLayer{RecordSet,Layer[]}.Equals(Virgis.VirgisLayer{RecordSet,Layer[]})
    - Virgis.VirgisLayer._layer
    - Virgis.VirgisLayer.featureType
    - Virgis.VirgisLayer.changed
    - Virgis.VirgisLayer._id
    - Virgis.VirgisLayer._editable
    - Virgis.VirgisLayer._crs
    - Virgis.VirgisLayer.AddFeature(Vector3[])
    - Virgis.VirgisLayer.Draw
    - Virgis.VirgisLayer.CheckPoint
    - Virgis.VirgisLayer.Save
    - Virgis.VirgisLayer.Translate(Virgis.MoveArgs)
    - Virgis.VirgisLayer.MoveAxis(Virgis.MoveArgs)
    - Virgis.VirgisLayer.MoveTo(Virgis.MoveArgs)
    - Virgis.VirgisLayer.VertexMove(Virgis.MoveArgs)
    - Virgis.VirgisLayer.Selected(Virgis.SelectionType)
    - Virgis.VirgisLayer.UnSelected(Virgis.SelectionType)
    - Virgis.VirgisLayer.GetClosest(Vector3,System.Guid[])
    - Virgis.VirgisLayer.GetFeature(System.Guid)
    - Virgis.VirgisLayer.GetId
    - Virgis.VirgisLayer.GetMetadata
    - Virgis.VirgisLayer.SetMetadata(RecordSet)
    - Virgis.VirgisLayer.GetFeatureShape
    - Virgis.VirgisLayer.SetVisible(System.Boolean)
    - Virgis.VirgisLayer._set_visible
    - Virgis.VirgisLayer.IsVisible
    - Virgis.VirgisLayer.SetEditable(System.Boolean)
    - Virgis.VirgisLayer.IsEditable
    - Virgis.VirgisLayer.SetCrs(SpatialReference)
    - Virgis.VirgisLayer.GetCrs
    - Virgis.VirgisLayer.Equals(System.Object)
    - Virgis.VirgisLayer.GetHashCode
    - Virgis.VirgisLayer.Equals(Virgis.VirgisLayer)
    - Virgis.VirgisLayer.GetLayer
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.GraphLayer.PointLayer
      commentId: F:Virgis.GraphLayer.PointLayer
      language: CSharp
      name:
        CSharp: PointLayer
        VB: PointLayer
      nameWithType:
        CSharp: GraphLayer.PointLayer
        VB: GraphLayer.PointLayer
      qualifiedName:
        CSharp: Virgis.GraphLayer.PointLayer
        VB: Virgis.GraphLayer.PointLayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: PointLayer
        path: ''
        startLine: 3252
      syntax:
        content:
          CSharp: public GameObject PointLayer
          VB: Public PointLayer As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.GraphLayer.LineLayer
      commentId: F:Virgis.GraphLayer.LineLayer
      language: CSharp
      name:
        CSharp: LineLayer
        VB: LineLayer
      nameWithType:
        CSharp: GraphLayer.LineLayer
        VB: GraphLayer.LineLayer
      qualifiedName:
        CSharp: Virgis.GraphLayer.LineLayer
        VB: Virgis.GraphLayer.LineLayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: LineLayer
        path: ''
        startLine: 3253
      syntax:
        content:
          CSharp: public GameObject LineLayer
          VB: Public LineLayer As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.GraphLayer.PolygonLayer
      commentId: F:Virgis.GraphLayer.PolygonLayer
      language: CSharp
      name:
        CSharp: PolygonLayer
        VB: PolygonLayer
      nameWithType:
        CSharp: GraphLayer.PolygonLayer
        VB: GraphLayer.PolygonLayer
      qualifiedName:
        CSharp: Virgis.GraphLayer.PolygonLayer
        VB: Virgis.GraphLayer.PolygonLayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: PolygonLayer
        path: ''
        startLine: 3254
      syntax:
        content:
          CSharp: public GameObject PolygonLayer
          VB: Public PolygonLayer As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.GraphLayer._init
      commentId: M:Virgis.GraphLayer._init
      language: CSharp
      name:
        CSharp: _init()
        VB: _init()
      nameWithType:
        CSharp: GraphLayer._init()
        VB: GraphLayer._init()
      qualifiedName:
        CSharp: Virgis.GraphLayer._init()
        VB: Virgis.GraphLayer._init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _init
        path: ''
        startLine: 3260
      syntax:
        content:
          CSharp: protected override Task _init()
          VB: Protected Overrides Function _init As Task
        return:
          type: Task
      overload: Virgis.GraphLayer._init*
      overridden: Virgis.VirgisLayer{RecordSet,Layer[]}._init
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.GraphLayer._addFeature(Vector3[])
      commentId: M:Virgis.GraphLayer._addFeature(Vector3[])
      language: CSharp
      name:
        CSharp: _addFeature(Vector3[])
        VB: _addFeature(Vector3())
      nameWithType:
        CSharp: GraphLayer._addFeature(Vector3[])
        VB: GraphLayer._addFeature(Vector3())
      qualifiedName:
        CSharp: Virgis.GraphLayer._addFeature(Vector3[])
        VB: Virgis.GraphLayer._addFeature(Vector3())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _addFeature
        path: ''
        startLine: 3264
      syntax:
        content:
          CSharp: protected override VirgisFeature _addFeature(Vector3[] geometry)
          VB: Protected Overrides Function _addFeature(geometry As Vector3()) As VirgisFeature
        parameters:
        - id: geometry
          type: Vector3[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.GraphLayer._addFeature*
      overridden: Virgis.VirgisLayer._addFeature(Vector3[])
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.GraphLayer._draw
      commentId: M:Virgis.GraphLayer._draw
      language: CSharp
      name:
        CSharp: _draw()
        VB: _draw()
      nameWithType:
        CSharp: GraphLayer._draw()
        VB: GraphLayer._draw()
      qualifiedName:
        CSharp: Virgis.GraphLayer._draw()
        VB: Virgis.GraphLayer._draw()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _draw
        path: ''
        startLine: 3270
      syntax:
        content:
          CSharp: protected override void _draw()
          VB: Protected Overrides Sub _draw
      overload: Virgis.GraphLayer._draw*
      overridden: Virgis.VirgisLayer._draw
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.GraphLayer._checkpoint
      commentId: M:Virgis.GraphLayer._checkpoint
      language: CSharp
      name:
        CSharp: _checkpoint()
        VB: _checkpoint()
      nameWithType:
        CSharp: GraphLayer._checkpoint()
        VB: GraphLayer._checkpoint()
      qualifiedName:
        CSharp: Virgis.GraphLayer._checkpoint()
        VB: Virgis.GraphLayer._checkpoint()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _checkpoint
        path: ''
        startLine: 3274
      syntax:
        content:
          CSharp: protected override void _checkpoint()
          VB: Protected Overrides Sub _checkpoint
      overload: Virgis.GraphLayer._checkpoint*
      overridden: Virgis.VirgisLayer._checkpoint
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Virgis.GraphLayer._save
      commentId: M:Virgis.GraphLayer._save
      language: CSharp
      name:
        CSharp: _save()
        VB: _save()
      nameWithType:
        CSharp: GraphLayer._save()
        VB: GraphLayer._save()
      qualifiedName:
        CSharp: Virgis.GraphLayer._save()
        VB: Virgis.GraphLayer._save()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _save
        path: ''
        startLine: 3278
      syntax:
        content:
          CSharp: protected override Task _save()
          VB: Protected Overrides Function _save As Task
        return:
          type: Task
      overload: Virgis.GraphLayer._save*
      overridden: Virgis.VirgisLayer._save
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: Virgis.OgrReader
    commentId: T:Virgis.OgrReader
    language: CSharp
    name:
      CSharp: OgrReader
      VB: OgrReader
    nameWithType:
      CSharp: OgrReader
      VB: OgrReader
    qualifiedName:
      CSharp: Virgis.OgrReader
      VB: Virgis.OgrReader
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: OgrReader
      path: ''
      startLine: 3302
    syntax:
      content:
        CSharp: public class OgrReader
        VB: Public Class OgrReader
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.OgrReader.fileName
      commentId: F:Virgis.OgrReader.fileName
      language: CSharp
      name:
        CSharp: fileName
        VB: fileName
      nameWithType:
        CSharp: OgrReader.fileName
        VB: OgrReader.fileName
      qualifiedName:
        CSharp: Virgis.OgrReader.fileName
        VB: Virgis.OgrReader.fileName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: fileName
        path: ''
        startLine: 3305
      syntax:
        content:
          CSharp: public string fileName
          VB: Public fileName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.OgrReader.GetLayers
      commentId: M:Virgis.OgrReader.GetLayers
      language: CSharp
      name:
        CSharp: GetLayers()
        VB: GetLayers()
      nameWithType:
        CSharp: OgrReader.GetLayers()
        VB: OgrReader.GetLayers()
      qualifiedName:
        CSharp: Virgis.OgrReader.GetLayers()
        VB: Virgis.OgrReader.GetLayers()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetLayers
        path: ''
        startLine: 3309
      syntax:
        content:
          CSharp: public List<Layer> GetLayers()
          VB: Public Function GetLayers As List(Of Layer)
        return:
          type: System.Collections.Generic.List{Layer}
      overload: Virgis.OgrReader.GetLayers*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.OgrReader.Load(System.String,System.Int32)
      commentId: M:Virgis.OgrReader.Load(System.String,System.Int32)
      language: CSharp
      name:
        CSharp: Load(String, Int32)
        VB: Load(String, Int32)
      nameWithType:
        CSharp: OgrReader.Load(String, Int32)
        VB: OgrReader.Load(String, Int32)
      qualifiedName:
        CSharp: Virgis.OgrReader.Load(System.String, System.Int32)
        VB: Virgis.OgrReader.Load(System.String, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Load
        path: ''
        startLine: 3315
      syntax:
        content:
          CSharp: public Task Load(string file, int update)
          VB: Public Function Load(file As String, update As Integer) As Task
        parameters:
        - id: file
          type: System.String
        - id: update
          type: System.Int32
        return:
          type: Task
      overload: Virgis.OgrReader.Load*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.OgrReader.LoadWfs(System.String,System.Int32)
      commentId: M:Virgis.OgrReader.LoadWfs(System.String,System.Int32)
      language: CSharp
      name:
        CSharp: LoadWfs(String, Int32)
        VB: LoadWfs(String, Int32)
      nameWithType:
        CSharp: OgrReader.LoadWfs(String, Int32)
        VB: OgrReader.LoadWfs(String, Int32)
      qualifiedName:
        CSharp: Virgis.OgrReader.LoadWfs(System.String, System.Int32)
        VB: Virgis.OgrReader.LoadWfs(System.String, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: LoadWfs
        path: ''
        startLine: 3338
      syntax:
        content:
          CSharp: public Task LoadWfs(string url, int update)
          VB: Public Function LoadWfs(url As String, update As Integer) As Task
        parameters:
        - id: url
          type: System.String
        - id: update
          type: System.Int32
        return:
          type: Task
      overload: Virgis.OgrReader.LoadWfs*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.OgrReader.Flatten(wkbGeometryType@)
      commentId: M:Virgis.OgrReader.Flatten(wkbGeometryType@)
      language: CSharp
      name:
        CSharp: Flatten(ref wkbGeometryType)
        VB: Flatten(ByRef wkbGeometryType)
      nameWithType:
        CSharp: OgrReader.Flatten(ref wkbGeometryType)
        VB: OgrReader.Flatten(ByRef wkbGeometryType)
      qualifiedName:
        CSharp: Virgis.OgrReader.Flatten(ref wkbGeometryType)
        VB: Virgis.OgrReader.Flatten(ByRef wkbGeometryType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Flatten
        path: ''
        startLine: 3344
      syntax:
        content:
          CSharp: public static void Flatten(ref wkbGeometryType type)
          VB: Public Shared Sub Flatten(ByRef type As wkbGeometryType)
        parameters:
        - id: type
          type: wkbGeometryType
      overload: Virgis.OgrReader.Flatten*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Virgis.OgrReader.getSR(Layer,RecordSet)
      commentId: M:Virgis.OgrReader.getSR(Layer,RecordSet)
      language: CSharp
      name:
        CSharp: getSR(Layer, RecordSet)
        VB: getSR(Layer, RecordSet)
      nameWithType:
        CSharp: OgrReader.getSR(Layer, RecordSet)
        VB: OgrReader.getSR(Layer, RecordSet)
      qualifiedName:
        CSharp: Virgis.OgrReader.getSR(Layer, RecordSet)
        VB: Virgis.OgrReader.getSR(Layer, RecordSet)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: getSR
        path: ''
        startLine: 3364
      syntax:
        content:
          CSharp: public static SpatialReference getSR(Layer layer, RecordSet metadata)
          VB: Public Shared Function getSR(layer As Layer, metadata As RecordSet) As SpatialReference
        parameters:
        - id: layer
          type: Layer
        - id: metadata
          type: RecordSet
        return:
          type: SpatialReference
      overload: Virgis.OgrReader.getSR*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Virgis.ProjectJsonReader
    commentId: T:Virgis.ProjectJsonReader
    language: CSharp
    name:
      CSharp: ProjectJsonReader
      VB: ProjectJsonReader
    nameWithType:
      CSharp: ProjectJsonReader
      VB: ProjectJsonReader
    qualifiedName:
      CSharp: Virgis.ProjectJsonReader
      VB: Virgis.ProjectJsonReader
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: ProjectJsonReader
      path: ''
      startLine: 3396
    syntax:
      content:
        CSharp: public class ProjectJsonReader
        VB: Public Class ProjectJsonReader
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.ProjectJsonReader.payload
      commentId: F:Virgis.ProjectJsonReader.payload
      language: CSharp
      name:
        CSharp: payload
        VB: payload
      nameWithType:
        CSharp: ProjectJsonReader.payload
        VB: ProjectJsonReader.payload
      qualifiedName:
        CSharp: Virgis.ProjectJsonReader.payload
        VB: Virgis.ProjectJsonReader.payload
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: payload
        path: ''
        startLine: 3398
      syntax:
        content:
          CSharp: public string payload
          VB: Public payload As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.ProjectJsonReader.fileName
      commentId: F:Virgis.ProjectJsonReader.fileName
      language: CSharp
      name:
        CSharp: fileName
        VB: fileName
      nameWithType:
        CSharp: ProjectJsonReader.fileName
        VB: ProjectJsonReader.fileName
      qualifiedName:
        CSharp: Virgis.ProjectJsonReader.fileName
        VB: Virgis.ProjectJsonReader.fileName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: fileName
        path: ''
        startLine: 3399
      syntax:
        content:
          CSharp: public string fileName
          VB: Public fileName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.ProjectJsonReader.Load(System.String)
      commentId: M:Virgis.ProjectJsonReader.Load(System.String)
      language: CSharp
      name:
        CSharp: Load(String)
        VB: Load(String)
      nameWithType:
        CSharp: ProjectJsonReader.Load(String)
        VB: ProjectJsonReader.Load(String)
      qualifiedName:
        CSharp: Virgis.ProjectJsonReader.Load(System.String)
        VB: Virgis.ProjectJsonReader.Load(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Load
        path: ''
        startLine: 3402
      syntax:
        content:
          CSharp: public void Load(string file)
          VB: Public Sub Load(file As String)
        parameters:
        - id: file
          type: System.String
      overload: Virgis.ProjectJsonReader.Load*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.ProjectJsonReader.GetProject
      commentId: M:Virgis.ProjectJsonReader.GetProject
      language: CSharp
      name:
        CSharp: GetProject()
        VB: GetProject()
      nameWithType:
        CSharp: ProjectJsonReader.GetProject()
        VB: ProjectJsonReader.GetProject()
      qualifiedName:
        CSharp: Virgis.ProjectJsonReader.GetProject()
        VB: Virgis.ProjectJsonReader.GetProject()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetProject
        path: ''
        startLine: 3421
      syntax:
        content:
          CSharp: public GisProject GetProject()
          VB: Public Function GetProject As GisProject
        return:
          type: GisProject
      overload: Virgis.ProjectJsonReader.GetProject*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.ProjectJsonReader.Save
      commentId: M:Virgis.ProjectJsonReader.Save
      language: CSharp
      name:
        CSharp: Save()
        VB: Save()
      nameWithType:
        CSharp: ProjectJsonReader.Save()
        VB: ProjectJsonReader.Save()
      qualifiedName:
        CSharp: Virgis.ProjectJsonReader.Save()
        VB: Virgis.ProjectJsonReader.Save()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Save
        path: ''
        startLine: 3430
      syntax:
        content:
          CSharp: public Task Save()
          VB: Public Function Save As Task
        return:
          type: Task
      overload: Virgis.ProjectJsonReader.Save*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.ProjectJsonReader.SetProject(GisProject)
      commentId: M:Virgis.ProjectJsonReader.SetProject(GisProject)
      language: CSharp
      name:
        CSharp: SetProject(GisProject)
        VB: SetProject(GisProject)
      nameWithType:
        CSharp: ProjectJsonReader.SetProject(GisProject)
        VB: ProjectJsonReader.SetProject(GisProject)
      qualifiedName:
        CSharp: Virgis.ProjectJsonReader.SetProject(GisProject)
        VB: Virgis.ProjectJsonReader.SetProject(GisProject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetProject
        path: ''
        startLine: 3438
      syntax:
        content:
          CSharp: public void SetProject(GisProject project)
          VB: Public Sub SetProject(project As GisProject)
        parameters:
        - id: project
          type: GisProject
      overload: Virgis.ProjectJsonReader.SetProject*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.TextureImage
    commentId: T:Virgis.TextureImage
    language: CSharp
    name:
      CSharp: TextureImage
      VB: TextureImage
    nameWithType:
      CSharp: TextureImage
      VB: TextureImage
    qualifiedName:
      CSharp: Virgis.TextureImage
      VB: Virgis.TextureImage
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: TextureImage
      path: ''
      startLine: 3454
    syntax:
      content:
        CSharp: public class TextureImage
        VB: Public Class TextureImage
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.TextureImage.Get(Uri)
      commentId: M:Virgis.TextureImage.Get(Uri)
      language: CSharp
      name:
        CSharp: Get(Uri)
        VB: Get(Uri)
      nameWithType:
        CSharp: TextureImage.Get(Uri)
        VB: TextureImage.Get(Uri)
      qualifiedName:
        CSharp: Virgis.TextureImage.Get(Uri)
        VB: Virgis.TextureImage.Get(Uri)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Get
        path: ''
        startLine: 3457
      syntax:
        content:
          CSharp: public static Task<Texture2D> Get(Uri url)
          VB: Public Shared Function Get(url As Uri) As Task(Of Texture2D)
        parameters:
        - id: url
          type: Uri
        return:
          type: Task{Texture2D}
      overload: Virgis.TextureImage.Get*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Virgis.Datapolygon
    commentId: T:Virgis.Datapolygon
    language: CSharp
    name:
      CSharp: Datapolygon
      VB: Datapolygon
    nameWithType:
      CSharp: Datapolygon
      VB: Datapolygon
    qualifiedName:
      CSharp: Virgis.Datapolygon
      VB: Virgis.Datapolygon
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: Datapolygon
      path: ''
      startLine: 3504
    summary: "\nControls an instance of a Polygon ViRGIS component\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Datapolygon : Datashape, IVirgisFeature, IVirgisEntity'
        VB: >-
          Public Class Datapolygon

              Inherits Datashape

              Implements IVirgisFeature, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisFeature
    - Virgis.Datashape
    implements:
    - Virgis.IVirgisFeature
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.Datashape.BlockMove
    - Virgis.Datashape.shapePrefab
    - Virgis.Datashape.Shape
    - Virgis.Datashape.VertexTable
    - Virgis.Datashape.lines
    - Virgis.Datashape.Polygon
    - Virgis.Datashape.scaleX
    - Virgis.Datashape.scaleY
    - Virgis.Datashape.Selected(Virgis.SelectionType)
    - Virgis.Datashape.UnSelected(Virgis.SelectionType)
    - Virgis.Datashape._redraw
    - Virgis.Datashape.AddVertex(Vector3)
    - Virgis.Datashape.RemoveVertex(Virgis.VirgisFeature)
    - Virgis.Datashape.BuildUVs(Vector3[])
    - Virgis.Datashape.GetVertexes
    - Virgis.VirgisFeature.mainMat
    - Virgis.VirgisFeature.selectedMat
    - Virgis.VirgisFeature.label
    - Virgis.VirgisFeature.feature
    - Virgis.VirgisFeature.SetMaterial(Material,Material)
    - Virgis.VirgisFeature.GetClosest(Vector3,System.Guid[])
    - Virgis.VirgisFeature.GetGeometry``1
    - Virgis.VirgisFeature.GetId
    - Virgis.VirgisFeature.Equals(System.Object)
    - Virgis.VirgisFeature.GetHashCode
    - Virgis.VirgisFeature.Equals(Virgis.VirgisFeature)
    - Virgis.VirgisFeature.Hover
    - Virgis.VirgisFeature.UnHover
    - Virgis.VirgisFeature.GetLayer
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.Datapolygon.VertexMove(Virgis.MoveArgs)
      commentId: M:Virgis.Datapolygon.VertexMove(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: VertexMove(MoveArgs)
        VB: VertexMove(MoveArgs)
      nameWithType:
        CSharp: Datapolygon.VertexMove(MoveArgs)
        VB: Datapolygon.VertexMove(MoveArgs)
      qualifiedName:
        CSharp: Virgis.Datapolygon.VertexMove(Virgis.MoveArgs)
        VB: Virgis.Datapolygon.VertexMove(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: VertexMove
        path: ''
        startLine: 3508
      syntax:
        content:
          CSharp: public override void VertexMove(MoveArgs data)
          VB: Public Overrides Sub VertexMove(data As MoveArgs)
        parameters:
        - id: data
          type: Virgis.MoveArgs
      overload: Virgis.Datapolygon.VertexMove*
      overridden: Virgis.VirgisFeature.VertexMove(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datapolygon.Translate(Virgis.MoveArgs)
      commentId: M:Virgis.Datapolygon.Translate(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Translate(MoveArgs)
        VB: Translate(MoveArgs)
      nameWithType:
        CSharp: Datapolygon.Translate(MoveArgs)
        VB: Datapolygon.Translate(MoveArgs)
      qualifiedName:
        CSharp: Virgis.Datapolygon.Translate(Virgis.MoveArgs)
        VB: Virgis.Datapolygon.Translate(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Translate
        path: ''
        startLine: 3514
      syntax:
        content:
          CSharp: public override void Translate(MoveArgs args)
          VB: Public Overrides Sub Translate(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.Datapolygon.Translate*
      overridden: Virgis.VirgisFeature.Translate(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datapolygon.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.Datapolygon.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: Datapolygon.MoveAxis(MoveArgs)
        VB: Datapolygon.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.Datapolygon.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.Datapolygon.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 3522
      syntax:
        content:
          CSharp: public override void MoveAxis(MoveArgs args)
          VB: Public Overrides Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.Datapolygon.MoveAxis*
      overridden: Virgis.VirgisFeature.MoveAxis(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datapolygon.MoveTo(Virgis.MoveArgs)
      commentId: M:Virgis.Datapolygon.MoveTo(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveTo(MoveArgs)
        VB: MoveTo(MoveArgs)
      nameWithType:
        CSharp: Datapolygon.MoveTo(MoveArgs)
        VB: Datapolygon.MoveTo(MoveArgs)
      qualifiedName:
        CSharp: Virgis.Datapolygon.MoveTo(Virgis.MoveArgs)
        VB: Virgis.Datapolygon.MoveTo(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveTo
        path: ''
        startLine: 3541
      syntax:
        content:
          CSharp: public override void MoveTo(MoveArgs args)
          VB: Public Overrides Sub MoveTo(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.Datapolygon.MoveTo*
      overridden: Virgis.Datashape.MoveTo(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datapolygon.Draw(System.Collections.Generic.List{Virgis.Dataline},Material,System.Single)
      commentId: M:Virgis.Datapolygon.Draw(System.Collections.Generic.List{Virgis.Dataline},Material,System.Single)
      language: CSharp
      name:
        CSharp: Draw(List<Dataline>, Material, Single)
        VB: Draw(List(Of Dataline), Material, Single)
      nameWithType:
        CSharp: Datapolygon.Draw(List<Dataline>, Material, Single)
        VB: Datapolygon.Draw(List(Of Dataline), Material, Single)
      qualifiedName:
        CSharp: Virgis.Datapolygon.Draw(System.Collections.Generic.List<Virgis.Dataline>, Material, System.Single)
        VB: Virgis.Datapolygon.Draw(System.Collections.Generic.List(Of Virgis.Dataline), Material, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Draw
        path: ''
        startLine: 3553
      summary: "\nCalled to draw the Polygon based upon the \n"
      example: []
      syntax:
        content:
          CSharp: public GameObject Draw(List<Dataline> polygon, Material mat, float tiling_size = 10F)
          VB: Public Function Draw(polygon As List(Of Dataline), mat As Material, tiling_size As Single = 10F) As GameObject
        parameters:
        - id: polygon
          type: System.Collections.Generic.List{Virgis.Dataline}
        - id: mat
          type: Material
          description: Material to be used
        - id: tiling_size
          type: System.Single
        return:
          type: GameObject
          description: ''
      overload: Virgis.Datapolygon.Draw*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Datapolygon.ShapeMoveVertex(Virgis.MoveArgs)
      commentId: M:Virgis.Datapolygon.ShapeMoveVertex(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: ShapeMoveVertex(MoveArgs)
        VB: ShapeMoveVertex(MoveArgs)
      nameWithType:
        CSharp: Datapolygon.ShapeMoveVertex(MoveArgs)
        VB: Datapolygon.ShapeMoveVertex(MoveArgs)
      qualifiedName:
        CSharp: Virgis.Datapolygon.ShapeMoveVertex(Virgis.MoveArgs)
        VB: Virgis.Datapolygon.ShapeMoveVertex(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ShapeMoveVertex
        path: ''
        startLine: 3574
      summary: "\nMove a vertex of the polygon and recreate the mesh\n"
      example: []
      syntax:
        content:
          CSharp: public void ShapeMoveVertex(MoveArgs data)
          VB: Public Sub ShapeMoveVertex(data As MoveArgs)
        parameters:
        - id: data
          type: Virgis.MoveArgs
          description: MoveArgs
      overload: Virgis.Datapolygon.ShapeMoveVertex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Datapolygon.GetMetadata
      commentId: M:Virgis.Datapolygon.GetMetadata
      language: CSharp
      name:
        CSharp: GetMetadata()
        VB: GetMetadata()
      nameWithType:
        CSharp: Datapolygon.GetMetadata()
        VB: Datapolygon.GetMetadata()
      qualifiedName:
        CSharp: Virgis.Datapolygon.GetMetadata()
        VB: Virgis.Datapolygon.GetMetadata()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetMetadata
        path: ''
        startLine: 3593
      syntax:
        content:
          CSharp: public override Dictionary<string, object> GetMetadata()
          VB: Public Overrides Function GetMetadata As Dictionary(Of String, Object)
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.Object}
      overload: Virgis.Datapolygon.GetMetadata*
      overridden: Virgis.Datashape.GetMetadata
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datapolygon.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
      commentId: M:Virgis.Datapolygon.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
      language: CSharp
      name:
        CSharp: SetMetadata(Dictionary<String, Object>)
        VB: SetMetadata(Dictionary(Of String, Object))
      nameWithType:
        CSharp: Datapolygon.SetMetadata(Dictionary<String, Object>)
        VB: Datapolygon.SetMetadata(Dictionary(Of String, Object))
      qualifiedName:
        CSharp: Virgis.Datapolygon.SetMetadata(System.Collections.Generic.Dictionary<System.String, System.Object>)
        VB: Virgis.Datapolygon.SetMetadata(System.Collections.Generic.Dictionary(Of System.String, System.Object))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetMetadata
        path: ''
        startLine: 3597
      syntax:
        content:
          CSharp: public override void SetMetadata(Dictionary<string, object> meta)
          VB: Public Overrides Sub SetMetadata(meta As Dictionary(Of String, Object))
        parameters:
        - id: meta
          type: System.Collections.Generic.Dictionary{System.String,System.Object}
      overload: Virgis.Datapolygon.SetMetadata*
      overridden: Virgis.Datashape.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Virgis.Datashape
    commentId: T:Virgis.Datashape
    language: CSharp
    name:
      CSharp: Datashape
      VB: Datashape
    nameWithType:
      CSharp: Datashape
      VB: Datashape
    qualifiedName:
      CSharp: Virgis.Datashape
      VB: Virgis.Datashape
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: Datashape
      path: ''
      startLine: 3618
    summary: "\nControls an instance of a Polygon ViRGIS component\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Datashape : VirgisFeature, IVirgisFeature, IVirgisEntity'
        VB: >-
          Public Class Datashape

              Inherits VirgisFeature

              Implements IVirgisFeature, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisFeature
    implements:
    - Virgis.IVirgisFeature
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.VirgisFeature.mainMat
    - Virgis.VirgisFeature.selectedMat
    - Virgis.VirgisFeature.label
    - Virgis.VirgisFeature.feature
    - Virgis.VirgisFeature.SetMaterial(Material,Material)
    - Virgis.VirgisFeature.MoveAxis(Virgis.MoveArgs)
    - Virgis.VirgisFeature.Translate(Virgis.MoveArgs)
    - Virgis.VirgisFeature.VertexMove(Virgis.MoveArgs)
    - Virgis.VirgisFeature.GetClosest(Vector3,System.Guid[])
    - Virgis.VirgisFeature.GetGeometry``1
    - Virgis.VirgisFeature.GetId
    - Virgis.VirgisFeature.Equals(System.Object)
    - Virgis.VirgisFeature.GetHashCode
    - Virgis.VirgisFeature.Equals(Virgis.VirgisFeature)
    - Virgis.VirgisFeature.Hover
    - Virgis.VirgisFeature.UnHover
    - Virgis.VirgisFeature.GetLayer
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.Datashape.BlockMove
      commentId: F:Virgis.Datashape.BlockMove
      language: CSharp
      name:
        CSharp: BlockMove
        VB: BlockMove
      nameWithType:
        CSharp: Datashape.BlockMove
        VB: Datashape.BlockMove
      qualifiedName:
        CSharp: Virgis.Datashape.BlockMove
        VB: Virgis.Datashape.BlockMove
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: BlockMove
        path: ''
        startLine: 3620
      syntax:
        content:
          CSharp: protected bool BlockMove
          VB: Protected BlockMove As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.Datashape.shapePrefab
      commentId: F:Virgis.Datashape.shapePrefab
      language: CSharp
      name:
        CSharp: shapePrefab
        VB: shapePrefab
      nameWithType:
        CSharp: Datashape.shapePrefab
        VB: Datashape.shapePrefab
      qualifiedName:
        CSharp: Virgis.Datashape.shapePrefab
        VB: Virgis.Datashape.shapePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: shapePrefab
        path: ''
        startLine: 3621
      syntax:
        content:
          CSharp: public GameObject shapePrefab
          VB: Public shapePrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Datashape.Shape
      commentId: F:Virgis.Datashape.Shape
      language: CSharp
      name:
        CSharp: Shape
        VB: Shape
      nameWithType:
        CSharp: Datashape.Shape
        VB: Datashape.Shape
      qualifiedName:
        CSharp: Virgis.Datashape.Shape
        VB: Virgis.Datashape.Shape
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Shape
        path: ''
        startLine: 3622
      syntax:
        content:
          CSharp: protected GameObject Shape
          VB: Protected Shape As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.Datashape.VertexTable
      commentId: F:Virgis.Datashape.VertexTable
      language: CSharp
      name:
        CSharp: VertexTable
        VB: VertexTable
      nameWithType:
        CSharp: Datashape.VertexTable
        VB: Datashape.VertexTable
      qualifiedName:
        CSharp: Virgis.Datashape.VertexTable
        VB: Virgis.Datashape.VertexTable
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: VertexTable
        path: ''
        startLine: 3623
      syntax:
        content:
          CSharp: protected List<VertexLookup> VertexTable
          VB: Protected VertexTable As List(Of VertexLookup)
        return:
          type: System.Collections.Generic.List{Virgis.VertexLookup}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.Datashape.lines
      commentId: F:Virgis.Datashape.lines
      language: CSharp
      name:
        CSharp: lines
        VB: lines
      nameWithType:
        CSharp: Datashape.lines
        VB: Datashape.lines
      qualifiedName:
        CSharp: Virgis.Datashape.lines
        VB: Virgis.Datashape.lines
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: lines
        path: ''
        startLine: 3624
      syntax:
        content:
          CSharp: protected List<Dataline> lines
          VB: Protected lines As List(Of Dataline)
        return:
          type: System.Collections.Generic.List{Virgis.Dataline}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.Datashape.Polygon
      commentId: F:Virgis.Datashape.Polygon
      language: CSharp
      name:
        CSharp: Polygon
        VB: Polygon
      nameWithType:
        CSharp: Datashape.Polygon
        VB: Datashape.Polygon
      qualifiedName:
        CSharp: Virgis.Datashape.Polygon
        VB: Virgis.Datashape.Polygon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Polygon
        path: ''
        startLine: 3625
      syntax:
        content:
          CSharp: protected List<DCurve3> Polygon
          VB: Protected Polygon As List(Of DCurve3)
        return:
          type: System.Collections.Generic.List{DCurve3}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.Datashape.scaleX
      commentId: F:Virgis.Datashape.scaleX
      language: CSharp
      name:
        CSharp: scaleX
        VB: scaleX
      nameWithType:
        CSharp: Datashape.scaleX
        VB: Datashape.scaleX
      qualifiedName:
        CSharp: Virgis.Datashape.scaleX
        VB: Virgis.Datashape.scaleX
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: scaleX
        path: ''
        startLine: 3626
      syntax:
        content:
          CSharp: protected float scaleX
          VB: Protected scaleX As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.Datashape.scaleY
      commentId: F:Virgis.Datashape.scaleY
      language: CSharp
      name:
        CSharp: scaleY
        VB: scaleY
      nameWithType:
        CSharp: Datashape.scaleY
        VB: Datashape.scaleY
      qualifiedName:
        CSharp: Virgis.Datashape.scaleY
        VB: Virgis.Datashape.scaleY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: scaleY
        path: ''
        startLine: 3627
      syntax:
        content:
          CSharp: protected float scaleY
          VB: Protected scaleY As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.Datashape.Selected(Virgis.SelectionType)
      commentId: M:Virgis.Datashape.Selected(Virgis.SelectionType)
      language: CSharp
      name:
        CSharp: Selected(SelectionType)
        VB: Selected(SelectionType)
      nameWithType:
        CSharp: Datashape.Selected(SelectionType)
        VB: Datashape.Selected(SelectionType)
      qualifiedName:
        CSharp: Virgis.Datashape.Selected(Virgis.SelectionType)
        VB: Virgis.Datashape.Selected(Virgis.SelectionType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Selected
        path: ''
        startLine: 3629
      syntax:
        content:
          CSharp: public override void Selected(SelectionType button)
          VB: Public Overrides Sub Selected(button As SelectionType)
        parameters:
        - id: button
          type: Virgis.SelectionType
      overload: Virgis.Datashape.Selected*
      overridden: Virgis.VirgisFeature.Selected(Virgis.SelectionType)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datashape.UnSelected(Virgis.SelectionType)
      commentId: M:Virgis.Datashape.UnSelected(Virgis.SelectionType)
      language: CSharp
      name:
        CSharp: UnSelected(SelectionType)
        VB: UnSelected(SelectionType)
      nameWithType:
        CSharp: Datashape.UnSelected(SelectionType)
        VB: Datashape.UnSelected(SelectionType)
      qualifiedName:
        CSharp: Virgis.Datashape.UnSelected(Virgis.SelectionType)
        VB: Virgis.Datashape.UnSelected(Virgis.SelectionType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: UnSelected
        path: ''
        startLine: 3637
      syntax:
        content:
          CSharp: public override void UnSelected(SelectionType button)
          VB: Public Overrides Sub UnSelected(button As SelectionType)
        parameters:
        - id: button
          type: Virgis.SelectionType
      overload: Virgis.Datashape.UnSelected*
      overridden: Virgis.VirgisFeature.UnSelected(Virgis.SelectionType)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datashape.MoveTo(Virgis.MoveArgs)
      commentId: M:Virgis.Datashape.MoveTo(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveTo(MoveArgs)
        VB: MoveTo(MoveArgs)
      nameWithType:
        CSharp: Datashape.MoveTo(MoveArgs)
        VB: Datashape.MoveTo(MoveArgs)
      qualifiedName:
        CSharp: Virgis.Datashape.MoveTo(Virgis.MoveArgs)
        VB: Virgis.Datashape.MoveTo(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveTo
        path: ''
        startLine: 3644
      syntax:
        content:
          CSharp: public override void MoveTo(MoveArgs args)
          VB: Public Overrides Sub MoveTo(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.Datashape.MoveTo*
      overridden: Virgis.VirgisFeature.MoveTo(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datashape._redraw
      commentId: M:Virgis.Datashape._redraw
      language: CSharp
      name:
        CSharp: _redraw()
        VB: _redraw()
      nameWithType:
        CSharp: Datashape._redraw()
        VB: Datashape._redraw()
      qualifiedName:
        CSharp: Virgis.Datashape._redraw()
        VB: Virgis.Datashape._redraw()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _redraw
        path: ''
        startLine: 3651
      summary: "\nMakes the actual mesh\n"
      example: []
      syntax:
        content:
          CSharp: protected void _redraw()
          VB: Protected Sub _redraw
      overload: Virgis.Datashape._redraw*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.Datashape.AddVertex(Vector3)
      commentId: M:Virgis.Datashape.AddVertex(Vector3)
      language: CSharp
      name:
        CSharp: AddVertex(Vector3)
        VB: AddVertex(Vector3)
      nameWithType:
        CSharp: Datashape.AddVertex(Vector3)
        VB: Datashape.AddVertex(Vector3)
      qualifiedName:
        CSharp: Virgis.Datashape.AddVertex(Vector3)
        VB: Virgis.Datashape.AddVertex(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AddVertex
        path: ''
        startLine: 3749
      syntax:
        content:
          CSharp: public override VirgisFeature AddVertex(Vector3 position)
          VB: Public Overrides Function AddVertex(position As Vector3) As VirgisFeature
        parameters:
        - id: position
          type: Vector3
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.Datashape.AddVertex*
      overridden: Virgis.VirgisFeature.AddVertex(Vector3)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datashape.RemoveVertex(Virgis.VirgisFeature)
      commentId: M:Virgis.Datashape.RemoveVertex(Virgis.VirgisFeature)
      language: CSharp
      name:
        CSharp: RemoveVertex(VirgisFeature)
        VB: RemoveVertex(VirgisFeature)
      nameWithType:
        CSharp: Datashape.RemoveVertex(VirgisFeature)
        VB: Datashape.RemoveVertex(VirgisFeature)
      qualifiedName:
        CSharp: Virgis.Datashape.RemoveVertex(Virgis.VirgisFeature)
        VB: Virgis.Datashape.RemoveVertex(Virgis.VirgisFeature)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: RemoveVertex
        path: ''
        startLine: 3754
      syntax:
        content:
          CSharp: public override void RemoveVertex(VirgisFeature vertex)
          VB: Public Overrides Sub RemoveVertex(vertex As VirgisFeature)
        parameters:
        - id: vertex
          type: Virgis.VirgisFeature
      overload: Virgis.Datashape.RemoveVertex*
      overridden: Virgis.VirgisFeature.RemoveVertex(Virgis.VirgisFeature)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datashape.BuildUVs(Vector3[])
      commentId: M:Virgis.Datashape.BuildUVs(Vector3[])
      language: CSharp
      name:
        CSharp: BuildUVs(Vector3[])
        VB: BuildUVs(Vector3())
      nameWithType:
        CSharp: Datashape.BuildUVs(Vector3[])
        VB: Datashape.BuildUVs(Vector3())
      qualifiedName:
        CSharp: Virgis.Datashape.BuildUVs(Vector3[])
        VB: Virgis.Datashape.BuildUVs(Vector3())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: BuildUVs
        path: ''
        startLine: 3767
      summary: "\nBuilds the UV values for thw mesh represented by the vertices \n"
      example: []
      syntax:
        content:
          CSharp: protected Vector2[] BuildUVs(Vector3[] vertices)
          VB: Protected Function BuildUVs(vertices As Vector3()) As Vector2()
        parameters:
        - id: vertices
          type: Vector3[]
          description: ''
        return:
          type: Vector2[]
          description: ''
      overload: Virgis.Datashape.BuildUVs*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.Datashape.GetVertexes
      commentId: M:Virgis.Datashape.GetVertexes
      language: CSharp
      name:
        CSharp: GetVertexes()
        VB: GetVertexes()
      nameWithType:
        CSharp: Datashape.GetVertexes()
        VB: Datashape.GetVertexes()
      qualifiedName:
        CSharp: Virgis.Datashape.GetVertexes()
        VB: Virgis.Datashape.GetVertexes()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetVertexes
        path: ''
        startLine: 3827
      summary: "\nGet an array of the Datapoint components for the vertexes\n"
      example: []
      syntax:
        content:
          CSharp: public Datapoint[] GetVertexes()
          VB: Public Function GetVertexes As Datapoint()
        return:
          type: Virgis.Datapoint[]
          description: Datapoint[]
      overload: Virgis.Datashape.GetVertexes*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Datashape.GetMetadata
      commentId: M:Virgis.Datashape.GetMetadata
      language: CSharp
      name:
        CSharp: GetMetadata()
        VB: GetMetadata()
      nameWithType:
        CSharp: Datashape.GetMetadata()
        VB: Datashape.GetMetadata()
      qualifiedName:
        CSharp: Virgis.Datashape.GetMetadata()
        VB: Virgis.Datashape.GetMetadata()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetMetadata
        path: ''
        startLine: 3835
      syntax:
        content:
          CSharp: public override Dictionary<string, object> GetMetadata()
          VB: Public Overrides Function GetMetadata As Dictionary(Of String, Object)
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.Object}
      overload: Virgis.Datashape.GetMetadata*
      overridden: Virgis.VirgisFeature.GetMetadata
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datashape.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
      commentId: M:Virgis.Datashape.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
      language: CSharp
      name:
        CSharp: SetMetadata(Dictionary<String, Object>)
        VB: SetMetadata(Dictionary(Of String, Object))
      nameWithType:
        CSharp: Datashape.SetMetadata(Dictionary<String, Object>)
        VB: Datashape.SetMetadata(Dictionary(Of String, Object))
      qualifiedName:
        CSharp: Virgis.Datashape.SetMetadata(System.Collections.Generic.Dictionary<System.String, System.Object>)
        VB: Virgis.Datashape.SetMetadata(System.Collections.Generic.Dictionary(Of System.String, System.Object))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetMetadata
        path: ''
        startLine: 3839
      syntax:
        content:
          CSharp: public override void SetMetadata(Dictionary<string, object> meta)
          VB: Public Overrides Sub SetMetadata(meta As Dictionary(Of String, Object))
        parameters:
        - id: meta
          type: System.Collections.Generic.Dictionary{System.String,System.Object}
      overload: Virgis.Datashape.SetMetadata*
      overridden: Virgis.VirgisFeature.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Virgis.Datapoint
    commentId: T:Virgis.Datapoint
    language: CSharp
    name:
      CSharp: Datapoint
      VB: Datapoint
    nameWithType:
      CSharp: Datapoint
      VB: Datapoint
    qualifiedName:
      CSharp: Virgis.Datapoint
      VB: Virgis.Datapoint
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: Datapoint
      path: ''
      startLine: 3858
    summary: "\nControls an instance of a data pointor handle\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Datapoint : VirgisFeature, IVirgisFeature, IVirgisEntity'
        VB: >-
          Public Class Datapoint

              Inherits VirgisFeature

              Implements IVirgisFeature, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisFeature
    implements:
    - Virgis.IVirgisFeature
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.VirgisFeature.mainMat
    - Virgis.VirgisFeature.selectedMat
    - Virgis.VirgisFeature.label
    - Virgis.VirgisFeature.feature
    - Virgis.VirgisFeature.Translate(Virgis.MoveArgs)
    - Virgis.VirgisFeature.VertexMove(Virgis.MoveArgs)
    - Virgis.VirgisFeature.AddVertex(Vector3)
    - Virgis.VirgisFeature.RemoveVertex(Virgis.VirgisFeature)
    - Virgis.VirgisFeature.GetGeometry``1
    - Virgis.VirgisFeature.GetId
    - Virgis.VirgisFeature.Equals(System.Object)
    - Virgis.VirgisFeature.GetHashCode
    - Virgis.VirgisFeature.Equals(Virgis.VirgisFeature)
    - Virgis.VirgisFeature.Hover
    - Virgis.VirgisFeature.UnHover
    - Virgis.VirgisFeature.GetLayer
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.Datapoint.Selected(Virgis.SelectionType)
      commentId: M:Virgis.Datapoint.Selected(Virgis.SelectionType)
      language: CSharp
      name:
        CSharp: Selected(SelectionType)
        VB: Selected(SelectionType)
      nameWithType:
        CSharp: Datapoint.Selected(SelectionType)
        VB: Datapoint.Selected(SelectionType)
      qualifiedName:
        CSharp: Virgis.Datapoint.Selected(Virgis.SelectionType)
        VB: Virgis.Datapoint.Selected(Virgis.SelectionType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Selected
        path: ''
        startLine: 3876
      syntax:
        content:
          CSharp: public override void Selected(SelectionType button)
          VB: Public Overrides Sub Selected(button As SelectionType)
        parameters:
        - id: button
          type: Virgis.SelectionType
      overload: Virgis.Datapoint.Selected*
      overridden: Virgis.VirgisFeature.Selected(Virgis.SelectionType)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datapoint.UnSelected(Virgis.SelectionType)
      commentId: M:Virgis.Datapoint.UnSelected(Virgis.SelectionType)
      language: CSharp
      name:
        CSharp: UnSelected(SelectionType)
        VB: UnSelected(SelectionType)
      nameWithType:
        CSharp: Datapoint.UnSelected(SelectionType)
        VB: Datapoint.UnSelected(SelectionType)
      qualifiedName:
        CSharp: Virgis.Datapoint.UnSelected(Virgis.SelectionType)
        VB: Virgis.Datapoint.UnSelected(Virgis.SelectionType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: UnSelected
        path: ''
        startLine: 3884
      syntax:
        content:
          CSharp: public override void UnSelected(SelectionType button)
          VB: Public Overrides Sub UnSelected(button As SelectionType)
        parameters:
        - id: button
          type: Virgis.SelectionType
      overload: Virgis.Datapoint.UnSelected*
      overridden: Virgis.VirgisFeature.UnSelected(Virgis.SelectionType)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datapoint.SetMaterial(Material,Material)
      commentId: M:Virgis.Datapoint.SetMaterial(Material,Material)
      language: CSharp
      name:
        CSharp: SetMaterial(Material, Material)
        VB: SetMaterial(Material, Material)
      nameWithType:
        CSharp: Datapoint.SetMaterial(Material, Material)
        VB: Datapoint.SetMaterial(Material, Material)
      qualifiedName:
        CSharp: Virgis.Datapoint.SetMaterial(Material, Material)
        VB: Virgis.Datapoint.SetMaterial(Material, Material)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetMaterial
        path: ''
        startLine: 3916
      syntax:
        content:
          CSharp: public override void SetMaterial(Material mainMat, Material selectedMat)
          VB: Public Overrides Sub SetMaterial(mainMat As Material, selectedMat As Material)
        parameters:
        - id: mainMat
          type: Material
        - id: selectedMat
          type: Material
      overload: Virgis.Datapoint.SetMaterial*
      overridden: Virgis.VirgisFeature.SetMaterial(Material,Material)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datapoint.MoveTo(Virgis.MoveArgs)
      commentId: M:Virgis.Datapoint.MoveTo(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveTo(MoveArgs)
        VB: MoveTo(MoveArgs)
      nameWithType:
        CSharp: Datapoint.MoveTo(MoveArgs)
        VB: Datapoint.MoveTo(MoveArgs)
      qualifiedName:
        CSharp: Virgis.Datapoint.MoveTo(Virgis.MoveArgs)
        VB: Virgis.Datapoint.MoveTo(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveTo
        path: ''
        startLine: 3928
      syntax:
        content:
          CSharp: public override void MoveTo(MoveArgs args)
          VB: Public Overrides Sub MoveTo(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.Datapoint.MoveTo*
      overridden: Virgis.VirgisFeature.MoveTo(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datapoint.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.Datapoint.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: Datapoint.MoveAxis(MoveArgs)
        VB: Datapoint.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.Datapoint.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.Datapoint.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 3956
      syntax:
        content:
          CSharp: public override void MoveAxis(MoveArgs args)
          VB: Public Overrides Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.Datapoint.MoveAxis*
      overridden: Virgis.VirgisFeature.MoveAxis(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datapoint.GetClosest(Vector3,System.Guid[])
      commentId: M:Virgis.Datapoint.GetClosest(Vector3,System.Guid[])
      language: CSharp
      name:
        CSharp: GetClosest(Vector3, Guid[])
        VB: GetClosest(Vector3, Guid())
      nameWithType:
        CSharp: Datapoint.GetClosest(Vector3, Guid[])
        VB: Datapoint.GetClosest(Vector3, Guid())
      qualifiedName:
        CSharp: Virgis.Datapoint.GetClosest(Vector3, System.Guid[])
        VB: Virgis.Datapoint.GetClosest(Vector3, System.Guid())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetClosest
        path: ''
        startLine: 3963
      syntax:
        content:
          CSharp: public override VirgisFeature GetClosest(Vector3 coords, Guid[] excludes)
          VB: Public Overrides Function GetClosest(coords As Vector3, excludes As Guid()) As VirgisFeature
        parameters:
        - id: coords
          type: Vector3
        - id: excludes
          type: System.Guid[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.Datapoint.GetClosest*
      overridden: Virgis.VirgisFeature.GetClosest(Vector3,System.Guid[])
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datapoint.Delete
      commentId: M:Virgis.Datapoint.Delete
      language: CSharp
      name:
        CSharp: Delete()
        VB: Delete()
      nameWithType:
        CSharp: Datapoint.Delete()
        VB: Datapoint.Delete()
      qualifiedName:
        CSharp: Virgis.Datapoint.Delete()
        VB: Virgis.Datapoint.Delete()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Delete
        path: ''
        startLine: 3967
      syntax:
        content:
          CSharp: public void Delete()
          VB: Public Sub Delete
      overload: Virgis.Datapoint.Delete*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Datapoint.GetMetadata
      commentId: M:Virgis.Datapoint.GetMetadata
      language: CSharp
      name:
        CSharp: GetMetadata()
        VB: GetMetadata()
      nameWithType:
        CSharp: Datapoint.GetMetadata()
        VB: Datapoint.GetMetadata()
      qualifiedName:
        CSharp: Virgis.Datapoint.GetMetadata()
        VB: Virgis.Datapoint.GetMetadata()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetMetadata
        path: ''
        startLine: 3972
      syntax:
        content:
          CSharp: public override Dictionary<string, object> GetMetadata()
          VB: Public Overrides Function GetMetadata As Dictionary(Of String, Object)
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.Object}
      overload: Virgis.Datapoint.GetMetadata*
      overridden: Virgis.VirgisFeature.GetMetadata
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Datapoint.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
      commentId: M:Virgis.Datapoint.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
      language: CSharp
      name:
        CSharp: SetMetadata(Dictionary<String, Object>)
        VB: SetMetadata(Dictionary(Of String, Object))
      nameWithType:
        CSharp: Datapoint.SetMetadata(Dictionary<String, Object>)
        VB: Datapoint.SetMetadata(Dictionary(Of String, Object))
      qualifiedName:
        CSharp: Virgis.Datapoint.SetMetadata(System.Collections.Generic.Dictionary<System.String, System.Object>)
        VB: Virgis.Datapoint.SetMetadata(System.Collections.Generic.Dictionary(Of System.String, System.Object))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetMetadata
        path: ''
        startLine: 3985
      syntax:
        content:
          CSharp: public override void SetMetadata(Dictionary<string, object> meta)
          VB: Public Overrides Sub SetMetadata(meta As Dictionary(Of String, Object))
        parameters:
        - id: meta
          type: System.Collections.Generic.Dictionary{System.String,System.Object}
      overload: Virgis.Datapoint.SetMetadata*
      overridden: Virgis.VirgisFeature.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Virgis.Dataplane
    commentId: T:Virgis.Dataplane
    language: CSharp
    name:
      CSharp: Dataplane
      VB: Dataplane
    nameWithType:
      CSharp: Dataplane
      VB: Dataplane
    qualifiedName:
      CSharp: Virgis.Dataplane
      VB: Virgis.Dataplane
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: Dataplane
      path: ''
      startLine: 4003
    summary: "\nControls an instance of a Polygon ViRGIS component\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Dataplane : Datashape, IVirgisFeature, IVirgisEntity'
        VB: >-
          Public Class Dataplane

              Inherits Datashape

              Implements IVirgisFeature, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisFeature
    - Virgis.Datashape
    implements:
    - Virgis.IVirgisFeature
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.Datashape.BlockMove
    - Virgis.Datashape.shapePrefab
    - Virgis.Datashape.Shape
    - Virgis.Datashape.VertexTable
    - Virgis.Datashape.lines
    - Virgis.Datashape.Polygon
    - Virgis.Datashape.scaleX
    - Virgis.Datashape.scaleY
    - Virgis.Datashape.Selected(Virgis.SelectionType)
    - Virgis.Datashape.UnSelected(Virgis.SelectionType)
    - Virgis.Datashape._redraw
    - Virgis.Datashape.AddVertex(Vector3)
    - Virgis.Datashape.RemoveVertex(Virgis.VirgisFeature)
    - Virgis.Datashape.BuildUVs(Vector3[])
    - Virgis.Datashape.GetVertexes
    - Virgis.VirgisFeature.mainMat
    - Virgis.VirgisFeature.selectedMat
    - Virgis.VirgisFeature.label
    - Virgis.VirgisFeature.feature
    - Virgis.VirgisFeature.SetMaterial(Material,Material)
    - Virgis.VirgisFeature.Translate(Virgis.MoveArgs)
    - Virgis.VirgisFeature.VertexMove(Virgis.MoveArgs)
    - Virgis.VirgisFeature.GetClosest(Vector3,System.Guid[])
    - Virgis.VirgisFeature.GetGeometry``1
    - Virgis.VirgisFeature.GetId
    - Virgis.VirgisFeature.Equals(System.Object)
    - Virgis.VirgisFeature.GetHashCode
    - Virgis.VirgisFeature.Equals(Virgis.VirgisFeature)
    - Virgis.VirgisFeature.Hover
    - Virgis.VirgisFeature.UnHover
    - Virgis.VirgisFeature.GetLayer
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.Dataplane.gisId
      commentId: F:Virgis.Dataplane.gisId
      language: CSharp
      name:
        CSharp: gisId
        VB: gisId
      nameWithType:
        CSharp: Dataplane.gisId
        VB: Dataplane.gisId
      qualifiedName:
        CSharp: Virgis.Dataplane.gisId
        VB: Virgis.Dataplane.gisId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: gisId
        path: ''
        startLine: 4005
      syntax:
        content:
          CSharp: public string gisId
          VB: Public gisId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Dataplane.gisProperties
      commentId: F:Virgis.Dataplane.gisProperties
      language: CSharp
      name:
        CSharp: gisProperties
        VB: gisProperties
      nameWithType:
        CSharp: Dataplane.gisProperties
        VB: Dataplane.gisProperties
      qualifiedName:
        CSharp: Virgis.Dataplane.gisProperties
        VB: Virgis.Dataplane.gisProperties
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: gisProperties
        path: ''
        startLine: 4006
      syntax:
        content:
          CSharp: public Dictionary<string, object> gisProperties
          VB: Public gisProperties As Dictionary(Of String, Object)
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.Object}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Dataplane.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.Dataplane.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: Dataplane.MoveAxis(MoveArgs)
        VB: Dataplane.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.Dataplane.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.Dataplane.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 4008
      syntax:
        content:
          CSharp: public override void MoveAxis(MoveArgs args)
          VB: Public Overrides Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.Dataplane.MoveAxis*
      overridden: Virgis.VirgisFeature.MoveAxis(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Dataplane.MoveTo(Virgis.MoveArgs)
      commentId: M:Virgis.Dataplane.MoveTo(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveTo(MoveArgs)
        VB: MoveTo(MoveArgs)
      nameWithType:
        CSharp: Dataplane.MoveTo(MoveArgs)
        VB: Dataplane.MoveTo(MoveArgs)
      qualifiedName:
        CSharp: Virgis.Dataplane.MoveTo(Virgis.MoveArgs)
        VB: Virgis.Dataplane.MoveTo(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveTo
        path: ''
        startLine: 4013
      syntax:
        content:
          CSharp: public override void MoveTo(MoveArgs args)
          VB: Public Overrides Sub MoveTo(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.Dataplane.MoveTo*
      overridden: Virgis.Datashape.MoveTo(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Dataplane.Draw(Vector3[],Vector3[],Material)
      commentId: M:Virgis.Dataplane.Draw(Vector3[],Vector3[],Material)
      language: CSharp
      name:
        CSharp: Draw(Vector3[], Vector3[], Material)
        VB: Draw(Vector3(), Vector3(), Material)
      nameWithType:
        CSharp: Dataplane.Draw(Vector3[], Vector3[], Material)
        VB: Dataplane.Draw(Vector3(), Vector3(), Material)
      qualifiedName:
        CSharp: Virgis.Dataplane.Draw(Vector3[], Vector3[], Material)
        VB: Virgis.Dataplane.Draw(Vector3(), Vector3(), Material)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Draw
        path: ''
        startLine: 4024
      summary: "\nCalled to draw the Polygon based upon the \n"
      example: []
      syntax:
        content:
          CSharp: public GameObject Draw(Vector3[] top, Vector3[] bottom, Material mat = null)
          VB: Public Function Draw(top As Vector3(), bottom As Vector3(), mat As Material = Nothing) As GameObject
        parameters:
        - id: top
          type: Vector3[]
        - id: bottom
          type: Vector3[]
        - id: mat
          type: Material
          description: Material to be used
        return:
          type: GameObject
          description: ''
      overload: Virgis.Dataplane.Draw*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Dataplane.GetMetadata
      commentId: M:Virgis.Dataplane.GetMetadata
      language: CSharp
      name:
        CSharp: GetMetadata()
        VB: GetMetadata()
      nameWithType:
        CSharp: Dataplane.GetMetadata()
        VB: Dataplane.GetMetadata()
      qualifiedName:
        CSharp: Virgis.Dataplane.GetMetadata()
        VB: Virgis.Dataplane.GetMetadata()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetMetadata
        path: ''
        startLine: 4042
      syntax:
        content:
          CSharp: public override Dictionary<string, object> GetMetadata()
          VB: Public Overrides Function GetMetadata As Dictionary(Of String, Object)
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.Object}
      overload: Virgis.Dataplane.GetMetadata*
      overridden: Virgis.Datashape.GetMetadata
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Dataplane.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
      commentId: M:Virgis.Dataplane.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
      language: CSharp
      name:
        CSharp: SetMetadata(Dictionary<String, Object>)
        VB: SetMetadata(Dictionary(Of String, Object))
      nameWithType:
        CSharp: Dataplane.SetMetadata(Dictionary<String, Object>)
        VB: Dataplane.SetMetadata(Dictionary(Of String, Object))
      qualifiedName:
        CSharp: Virgis.Dataplane.SetMetadata(System.Collections.Generic.Dictionary<System.String, System.Object>)
        VB: Virgis.Dataplane.SetMetadata(System.Collections.Generic.Dictionary(Of System.String, System.Object))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetMetadata
        path: ''
        startLine: 4048
      syntax:
        content:
          CSharp: public override void SetMetadata(Dictionary<string, object> meta)
          VB: Public Overrides Sub SetMetadata(meta As Dictionary(Of String, Object))
        parameters:
        - id: meta
          type: System.Collections.Generic.Dictionary{System.String,System.Object}
      overload: Virgis.Dataplane.SetMetadata*
      overridden: Virgis.Datashape.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Virgis.LineSegment
    commentId: T:Virgis.LineSegment
    language: CSharp
    name:
      CSharp: LineSegment
      VB: LineSegment
    nameWithType:
      CSharp: LineSegment
      VB: LineSegment
    qualifiedName:
      CSharp: Virgis.LineSegment
      VB: Virgis.LineSegment
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: LineSegment
      path: ''
      startLine: 4064
    summary: "\nControls an instance of a line segment\n"
    example: []
    syntax:
      content:
        CSharp: 'public class LineSegment : VirgisFeature, IVirgisFeature, IVirgisEntity'
        VB: >-
          Public Class LineSegment

              Inherits VirgisFeature

              Implements IVirgisFeature, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisFeature
    implements:
    - Virgis.IVirgisFeature
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.VirgisFeature.mainMat
    - Virgis.VirgisFeature.selectedMat
    - Virgis.VirgisFeature.label
    - Virgis.VirgisFeature.feature
    - Virgis.VirgisFeature.Translate(Virgis.MoveArgs)
    - Virgis.VirgisFeature.VertexMove(Virgis.MoveArgs)
    - Virgis.VirgisFeature.GetClosest(Vector3,System.Guid[])
    - Virgis.VirgisFeature.RemoveVertex(Virgis.VirgisFeature)
    - Virgis.VirgisFeature.GetGeometry``1
    - Virgis.VirgisFeature.GetId
    - Virgis.VirgisFeature.Equals(System.Object)
    - Virgis.VirgisFeature.GetHashCode
    - Virgis.VirgisFeature.Equals(Virgis.VirgisFeature)
    - Virgis.VirgisFeature.Hover
    - Virgis.VirgisFeature.UnHover
    - Virgis.VirgisFeature.GetLayer
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.LineSegment.vStart
      commentId: F:Virgis.LineSegment.vStart
      language: CSharp
      name:
        CSharp: vStart
        VB: vStart
      nameWithType:
        CSharp: LineSegment.vStart
        VB: LineSegment.vStart
      qualifiedName:
        CSharp: Virgis.LineSegment.vStart
        VB: Virgis.LineSegment.vStart
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: vStart
        path: ''
        startLine: 4071
      syntax:
        content:
          CSharp: public int vStart
          VB: Public vStart As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LineSegment.vEnd
      commentId: F:Virgis.LineSegment.vEnd
      language: CSharp
      name:
        CSharp: vEnd
        VB: vEnd
      nameWithType:
        CSharp: LineSegment.vEnd
        VB: LineSegment.vEnd
      qualifiedName:
        CSharp: Virgis.LineSegment.vEnd
        VB: Virgis.LineSegment.vEnd
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: vEnd
        path: ''
        startLine: 4072
      syntax:
        content:
          CSharp: public int vEnd
          VB: Public vEnd As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LineSegment.Draw(Vector3,Vector3,System.Int32,System.Int32,System.Single)
      commentId: M:Virgis.LineSegment.Draw(Vector3,Vector3,System.Int32,System.Int32,System.Single)
      language: CSharp
      name:
        CSharp: Draw(Vector3, Vector3, Int32, Int32, Single)
        VB: Draw(Vector3, Vector3, Int32, Int32, Single)
      nameWithType:
        CSharp: LineSegment.Draw(Vector3, Vector3, Int32, Int32, Single)
        VB: LineSegment.Draw(Vector3, Vector3, Int32, Int32, Single)
      qualifiedName:
        CSharp: Virgis.LineSegment.Draw(Vector3, Vector3, System.Int32, System.Int32, System.Single)
        VB: Virgis.LineSegment.Draw(Vector3, Vector3, System.Int32, System.Int32, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Draw
        path: ''
        startLine: 4085
      summary: "\nCalled to draw the line Segment \n"
      example: []
      syntax:
        content:
          CSharp: public void Draw(Vector3 from, Vector3 to, int vertStart, int vertEnd, float dia)
          VB: Public Sub Draw(from As Vector3, to As Vector3, vertStart As Integer, vertEnd As Integer, dia As Single)
        parameters:
        - id: from
          type: Vector3
          description: starting point of the line segment in worldspace coords
        - id: to
          type: Vector3
          description: end point for the line segment in worldspace coordinates
        - id: vertStart
          type: System.Int32
          description: vertex ID for the vertex at the start of the line segment
        - id: vertEnd
          type: System.Int32
          description: 'vertex ID for the vertex at the end of the line segment '
        - id: dia
          type: System.Single
          description: Diamtere of the line segement in Map.local units
      overload: Virgis.LineSegment.Draw*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LineSegment.Selected(Virgis.SelectionType)
      commentId: M:Virgis.LineSegment.Selected(Virgis.SelectionType)
      language: CSharp
      name:
        CSharp: Selected(SelectionType)
        VB: Selected(SelectionType)
      nameWithType:
        CSharp: LineSegment.Selected(SelectionType)
        VB: LineSegment.Selected(SelectionType)
      qualifiedName:
        CSharp: Virgis.LineSegment.Selected(Virgis.SelectionType)
        VB: Virgis.LineSegment.Selected(Virgis.SelectionType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Selected
        path: ''
        startLine: 4095
      syntax:
        content:
          CSharp: public override void Selected(SelectionType button)
          VB: Public Overrides Sub Selected(button As SelectionType)
        parameters:
        - id: button
          type: Virgis.SelectionType
      overload: Virgis.LineSegment.Selected*
      overridden: Virgis.VirgisFeature.Selected(Virgis.SelectionType)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.LineSegment.UnSelected(Virgis.SelectionType)
      commentId: M:Virgis.LineSegment.UnSelected(Virgis.SelectionType)
      language: CSharp
      name:
        CSharp: UnSelected(SelectionType)
        VB: UnSelected(SelectionType)
      nameWithType:
        CSharp: LineSegment.UnSelected(SelectionType)
        VB: LineSegment.UnSelected(SelectionType)
      qualifiedName:
        CSharp: Virgis.LineSegment.UnSelected(Virgis.SelectionType)
        VB: Virgis.LineSegment.UnSelected(Virgis.SelectionType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: UnSelected
        path: ''
        startLine: 4103
      syntax:
        content:
          CSharp: public override void UnSelected(SelectionType button)
          VB: Public Overrides Sub UnSelected(button As SelectionType)
        parameters:
        - id: button
          type: Virgis.SelectionType
      overload: Virgis.LineSegment.UnSelected*
      overridden: Virgis.VirgisFeature.UnSelected(Virgis.SelectionType)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.LineSegment.SetMaterial(Material,Material)
      commentId: M:Virgis.LineSegment.SetMaterial(Material,Material)
      language: CSharp
      name:
        CSharp: SetMaterial(Material, Material)
        VB: SetMaterial(Material, Material)
      nameWithType:
        CSharp: LineSegment.SetMaterial(Material, Material)
        VB: LineSegment.SetMaterial(Material, Material)
      qualifiedName:
        CSharp: Virgis.LineSegment.SetMaterial(Material, Material)
        VB: Virgis.LineSegment.SetMaterial(Material, Material)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetMaterial
        path: ''
        startLine: 4113
      syntax:
        content:
          CSharp: public override void SetMaterial(Material mainMat, Material selectedMat)
          VB: Public Overrides Sub SetMaterial(mainMat As Material, selectedMat As Material)
        parameters:
        - id: mainMat
          type: Material
        - id: selectedMat
          type: Material
      overload: Virgis.LineSegment.SetMaterial*
      overridden: Virgis.VirgisFeature.SetMaterial(Material,Material)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.LineSegment.MoveStart(Vector3)
      commentId: M:Virgis.LineSegment.MoveStart(Vector3)
      language: CSharp
      name:
        CSharp: MoveStart(Vector3)
        VB: MoveStart(Vector3)
      nameWithType:
        CSharp: LineSegment.MoveStart(Vector3)
        VB: LineSegment.MoveStart(Vector3)
      qualifiedName:
        CSharp: Virgis.LineSegment.MoveStart(Vector3)
        VB: Virgis.LineSegment.MoveStart(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveStart
        path: ''
        startLine: 4123
      syntax:
        content:
          CSharp: public void MoveStart(Vector3 newStart)
          VB: Public Sub MoveStart(newStart As Vector3)
        parameters:
        - id: newStart
          type: Vector3
      overload: Virgis.LineSegment.MoveStart*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LineSegment.MoveEnd(Vector3)
      commentId: M:Virgis.LineSegment.MoveEnd(Vector3)
      language: CSharp
      name:
        CSharp: MoveEnd(Vector3)
        VB: MoveEnd(Vector3)
      nameWithType:
        CSharp: LineSegment.MoveEnd(Vector3)
        VB: LineSegment.MoveEnd(Vector3)
      qualifiedName:
        CSharp: Virgis.LineSegment.MoveEnd(Vector3)
        VB: Virgis.LineSegment.MoveEnd(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveEnd
        path: ''
        startLine: 4130
      syntax:
        content:
          CSharp: public void MoveEnd(Vector3 newEnd)
          VB: Public Sub MoveEnd(newEnd As Vector3)
        parameters:
        - id: newEnd
          type: Vector3
      overload: Virgis.LineSegment.MoveEnd*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LineSegment.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.LineSegment.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: LineSegment.MoveAxis(MoveArgs)
        VB: LineSegment.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.LineSegment.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.LineSegment.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 4146
      syntax:
        content:
          CSharp: public override void MoveAxis(MoveArgs args)
          VB: Public Overrides Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.LineSegment.MoveAxis*
      overridden: Virgis.VirgisFeature.MoveAxis(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.LineSegment.MoveTo(Virgis.MoveArgs)
      commentId: M:Virgis.LineSegment.MoveTo(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveTo(MoveArgs)
        VB: MoveTo(MoveArgs)
      nameWithType:
        CSharp: LineSegment.MoveTo(MoveArgs)
        VB: LineSegment.MoveTo(MoveArgs)
      qualifiedName:
        CSharp: Virgis.LineSegment.MoveTo(Virgis.MoveArgs)
        VB: Virgis.LineSegment.MoveTo(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveTo
        path: ''
        startLine: 4151
      syntax:
        content:
          CSharp: public override void MoveTo(MoveArgs args)
          VB: Public Overrides Sub MoveTo(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.LineSegment.MoveTo*
      overridden: Virgis.VirgisFeature.MoveTo(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.LineSegment.AddVertex(Vector3)
      commentId: M:Virgis.LineSegment.AddVertex(Vector3)
      language: CSharp
      name:
        CSharp: AddVertex(Vector3)
        VB: AddVertex(Vector3)
      nameWithType:
        CSharp: LineSegment.AddVertex(Vector3)
        VB: LineSegment.AddVertex(Vector3)
      qualifiedName:
        CSharp: Virgis.LineSegment.AddVertex(Vector3)
        VB: Virgis.LineSegment.AddVertex(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AddVertex
        path: ''
        startLine: 4156
      syntax:
        content:
          CSharp: public override VirgisFeature AddVertex(Vector3 position)
          VB: Public Overrides Function AddVertex(position As Vector3) As VirgisFeature
        parameters:
        - id: position
          type: Vector3
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.LineSegment.AddVertex*
      overridden: Virgis.VirgisFeature.AddVertex(Vector3)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.LineSegment.Delete
      commentId: M:Virgis.LineSegment.Delete
      language: CSharp
      name:
        CSharp: Delete()
        VB: Delete()
      nameWithType:
        CSharp: LineSegment.Delete()
        VB: LineSegment.Delete()
      qualifiedName:
        CSharp: Virgis.LineSegment.Delete()
        VB: Virgis.LineSegment.Delete()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Delete
        path: ''
        startLine: 4161
      syntax:
        content:
          CSharp: public void Delete()
          VB: Public Sub Delete
      overload: Virgis.LineSegment.Delete*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.LineSegment.GetMetadata
      commentId: M:Virgis.LineSegment.GetMetadata
      language: CSharp
      name:
        CSharp: GetMetadata()
        VB: GetMetadata()
      nameWithType:
        CSharp: LineSegment.GetMetadata()
        VB: LineSegment.GetMetadata()
      qualifiedName:
        CSharp: Virgis.LineSegment.GetMetadata()
        VB: Virgis.LineSegment.GetMetadata()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetMetadata
        path: ''
        startLine: 4165
      syntax:
        content:
          CSharp: public override Dictionary<string, object> GetMetadata()
          VB: Public Overrides Function GetMetadata As Dictionary(Of String, Object)
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.Object}
      overload: Virgis.LineSegment.GetMetadata*
      overridden: Virgis.VirgisFeature.GetMetadata
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.LineSegment.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
      commentId: M:Virgis.LineSegment.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
      language: CSharp
      name:
        CSharp: SetMetadata(Dictionary<String, Object>)
        VB: SetMetadata(Dictionary(Of String, Object))
      nameWithType:
        CSharp: LineSegment.SetMetadata(Dictionary<String, Object>)
        VB: LineSegment.SetMetadata(Dictionary(Of String, Object))
      qualifiedName:
        CSharp: Virgis.LineSegment.SetMetadata(System.Collections.Generic.Dictionary<System.String, System.Object>)
        VB: Virgis.LineSegment.SetMetadata(System.Collections.Generic.Dictionary(Of System.String, System.Object))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetMetadata
        path: ''
        startLine: 4169
      syntax:
        content:
          CSharp: public override void SetMetadata(Dictionary<string, object> meta)
          VB: Public Overrides Sub SetMetadata(meta As Dictionary(Of String, Object))
        parameters:
        - id: meta
          type: System.Collections.Generic.Dictionary{System.String,System.Object}
      overload: Virgis.LineSegment.SetMetadata*
      overridden: Virgis.VirgisFeature.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Virgis.Dataline
    commentId: T:Virgis.Dataline
    language: CSharp
    name:
      CSharp: Dataline
      VB: Dataline
    nameWithType:
      CSharp: Dataline
      VB: Dataline
    qualifiedName:
      CSharp: Virgis.Dataline
      VB: Virgis.Dataline
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: Dataline
      path: ''
      startLine: 4267
    summary: "\nControls and Instance of a Line Component\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Dataline : VirgisFeature, IVirgisFeature, IVirgisEntity'
        VB: >-
          Public Class Dataline

              Inherits VirgisFeature

              Implements IVirgisFeature, IVirgisEntity
    inheritance:
    - System.Object
    - Virgis.VirgisFeature
    implements:
    - Virgis.IVirgisFeature
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.VirgisFeature.mainMat
    - Virgis.VirgisFeature.selectedMat
    - Virgis.VirgisFeature.label
    - Virgis.VirgisFeature.feature
    - Virgis.VirgisFeature.SetMaterial(Material,Material)
    - Virgis.VirgisFeature.GetClosest(Vector3,System.Guid[])
    - Virgis.VirgisFeature.GetGeometry``1
    - Virgis.VirgisFeature.GetId
    - Virgis.VirgisFeature.Equals(System.Object)
    - Virgis.VirgisFeature.GetHashCode
    - Virgis.VirgisFeature.Equals(Virgis.VirgisFeature)
    - Virgis.VirgisFeature.Hover
    - Virgis.VirgisFeature.UnHover
    - Virgis.VirgisFeature.GetLayer
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.Dataline.CylinderObject
      commentId: F:Virgis.Dataline.CylinderObject
      language: CSharp
      name:
        CSharp: CylinderObject
        VB: CylinderObject
      nameWithType:
        CSharp: Dataline.CylinderObject
        VB: Dataline.CylinderObject
      qualifiedName:
        CSharp: Virgis.Dataline.CylinderObject
        VB: Virgis.Dataline.CylinderObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CylinderObject
        path: ''
        startLine: 4269
      syntax:
        content:
          CSharp: public GameObject CylinderObject
          VB: Public CylinderObject As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Dataline.VertexTable
      commentId: F:Virgis.Dataline.VertexTable
      language: CSharp
      name:
        CSharp: VertexTable
        VB: VertexTable
      nameWithType:
        CSharp: Dataline.VertexTable
        VB: Dataline.VertexTable
      qualifiedName:
        CSharp: Virgis.Dataline.VertexTable
        VB: Virgis.Dataline.VertexTable
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: VertexTable
        path: ''
        startLine: 4274
      syntax:
        content:
          CSharp: public List<VertexLookup> VertexTable
          VB: Public VertexTable As List(Of VertexLookup)
        return:
          type: System.Collections.Generic.List{Virgis.VertexLookup}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Dataline.curve
      commentId: F:Virgis.Dataline.curve
      language: CSharp
      name:
        CSharp: curve
        VB: curve
      nameWithType:
        CSharp: Dataline.curve
        VB: Dataline.curve
      qualifiedName:
        CSharp: Virgis.Dataline.curve
        VB: Virgis.Dataline.curve
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: curve
        path: ''
        startLine: 4281
      syntax:
        content:
          CSharp: public DCurve3 curve
          VB: Public curve As DCurve3
        return:
          type: DCurve3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Dataline.VertexMove(Virgis.MoveArgs)
      commentId: M:Virgis.Dataline.VertexMove(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: VertexMove(MoveArgs)
        VB: VertexMove(MoveArgs)
      nameWithType:
        CSharp: Dataline.VertexMove(MoveArgs)
        VB: Dataline.VertexMove(MoveArgs)
      qualifiedName:
        CSharp: Virgis.Dataline.VertexMove(Virgis.MoveArgs)
        VB: Virgis.Dataline.VertexMove(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: VertexMove
        path: ''
        startLine: 4295
      syntax:
        content:
          CSharp: public override void VertexMove(MoveArgs data)
          VB: Public Overrides Sub VertexMove(data As MoveArgs)
        parameters:
        - id: data
          type: Virgis.MoveArgs
      overload: Virgis.Dataline.VertexMove*
      overridden: Virgis.VirgisFeature.VertexMove(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Dataline.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.Dataline.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: Dataline.MoveAxis(MoveArgs)
        VB: Dataline.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.Dataline.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.Dataline.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 4311
      syntax:
        content:
          CSharp: public override void MoveAxis(MoveArgs args)
          VB: Public Overrides Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.Dataline.MoveAxis*
      overridden: Virgis.VirgisFeature.MoveAxis(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Dataline.MoveAxisAction(Virgis.MoveArgs)
      commentId: M:Virgis.Dataline.MoveAxisAction(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxisAction(MoveArgs)
        VB: MoveAxisAction(MoveArgs)
      nameWithType:
        CSharp: Dataline.MoveAxisAction(MoveArgs)
        VB: Dataline.MoveAxisAction(MoveArgs)
      qualifiedName:
        CSharp: Virgis.Dataline.MoveAxisAction(Virgis.MoveArgs)
        VB: Virgis.Dataline.MoveAxisAction(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxisAction
        path: ''
        startLine: 4322
      summary: "\nThis is called by the parent to action the move\n"
      example: []
      syntax:
        content:
          CSharp: public void MoveAxisAction(MoveArgs args)
          VB: Public Sub MoveAxisAction(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
          description: ''
      overload: Virgis.Dataline.MoveAxisAction*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Dataline.Draw(Geometry,System.Collections.Generic.Dictionary{System.String,Unit},GameObject,GameObject,GameObject,Material,Material,Material,Material,System.Boolean)
      commentId: M:Virgis.Dataline.Draw(Geometry,System.Collections.Generic.Dictionary{System.String,Unit},GameObject,GameObject,GameObject,Material,Material,Material,Material,System.Boolean)
      language: CSharp
      name:
        CSharp: Draw(Geometry, Dictionary<String, Unit>, GameObject, GameObject, GameObject, Material, Material, Material, Material, Boolean)
        VB: Draw(Geometry, Dictionary(Of String, Unit), GameObject, GameObject, GameObject, Material, Material, Material, Material, Boolean)
      nameWithType:
        CSharp: Dataline.Draw(Geometry, Dictionary<String, Unit>, GameObject, GameObject, GameObject, Material, Material, Material, Material, Boolean)
        VB: Dataline.Draw(Geometry, Dictionary(Of String, Unit), GameObject, GameObject, GameObject, Material, Material, Material, Material, Boolean)
      qualifiedName:
        CSharp: Virgis.Dataline.Draw(Geometry, System.Collections.Generic.Dictionary<System.String, Unit>, GameObject, GameObject, GameObject, Material, Material, Material, Material, System.Boolean)
        VB: Virgis.Dataline.Draw(Geometry, System.Collections.Generic.Dictionary(Of System.String, Unit), GameObject, GameObject, GameObject, Material, Material, Material, Material, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Draw
        path: ''
        startLine: 4362
      summary: "\nCalled to draw the line\n"
      example: []
      syntax:
        content:
          CSharp: public void Draw(Geometry geom, Dictionary<string, Unit> symbology, GameObject LinePrefab, GameObject HandlePrefab, GameObject LabelPrefab, Material mainMat, Material selectedMat, Material lineMain, Material lineSelected, bool isring = false)
          VB: Public Sub Draw(geom As Geometry, symbology As Dictionary(Of String, Unit), LinePrefab As GameObject, HandlePrefab As GameObject, LabelPrefab As GameObject, mainMat As Material, selectedMat As Material, lineMain As Material, lineSelected As Material, isring As Boolean = False)
        parameters:
        - id: geom
          type: Geometry
        - id: symbology
          type: System.Collections.Generic.Dictionary{System.String,Unit}
          description: The symbo,logy to be applied to the loine
        - id: LinePrefab
          type: GameObject
          description: The prefab to be used for the line
        - id: HandlePrefab
          type: GameObject
          description: The prefab to be used for the handle
        - id: LabelPrefab
          type: GameObject
          description: the prefab to used for the label
        - id: mainMat
          type: Material
        - id: selectedMat
          type: Material
        - id: lineMain
          type: Material
        - id: lineSelected
          type: Material
        - id: isring
          type: System.Boolean
      overload: Virgis.Dataline.Draw*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Dataline.MakeLinearRing
      commentId: M:Virgis.Dataline.MakeLinearRing
      language: CSharp
      name:
        CSharp: MakeLinearRing()
        VB: MakeLinearRing()
      nameWithType:
        CSharp: Dataline.MakeLinearRing()
        VB: Dataline.MakeLinearRing()
      qualifiedName:
        CSharp: Virgis.Dataline.MakeLinearRing()
        VB: Virgis.Dataline.MakeLinearRing()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MakeLinearRing
        path: ''
        startLine: 4414
      summary: "\nMake the Line into a Linear Ring by setting the Lr flag and creating a LineSegment form the last vertex to the first.\nIf the last vertex is in the same (exact) position as the first vertex, the last vertex is deleted.\n"
      example: []
      syntax:
        content:
          CSharp: public void MakeLinearRing()
          VB: Public Sub MakeLinearRing
      overload: Virgis.Dataline.MakeLinearRing*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Dataline.GetVertexPositions
      commentId: M:Virgis.Dataline.GetVertexPositions
      language: CSharp
      name:
        CSharp: GetVertexPositions()
        VB: GetVertexPositions()
      nameWithType:
        CSharp: Dataline.GetVertexPositions()
        VB: Dataline.GetVertexPositions()
      qualifiedName:
        CSharp: Virgis.Dataline.GetVertexPositions()
        VB: Virgis.Dataline.GetVertexPositions()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetVertexPositions
        path: ''
        startLine: 4437
      summary: "\ncalled to get the verteces of the LineString\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3[] GetVertexPositions()
          VB: Public Function GetVertexPositions As Vector3()
        return:
          type: Vector3[]
          description: Vector3[] of verteces
      overload: Virgis.Dataline.GetVertexPositions*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Dataline.GetVertexes
      commentId: M:Virgis.Dataline.GetVertexes
      language: CSharp
      name:
        CSharp: GetVertexes()
        VB: GetVertexes()
      nameWithType:
        CSharp: Dataline.GetVertexes()
        VB: Dataline.GetVertexes()
      qualifiedName:
        CSharp: Virgis.Dataline.GetVertexes()
        VB: Virgis.Dataline.GetVertexes()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetVertexes
        path: ''
        startLine: 4446
      syntax:
        content:
          CSharp: public Datapoint[] GetVertexes()
          VB: Public Function GetVertexes As Datapoint()
        return:
          type: Virgis.Datapoint[]
      overload: Virgis.Dataline.GetVertexes*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Dataline.Selected(Virgis.SelectionType)
      commentId: M:Virgis.Dataline.Selected(Virgis.SelectionType)
      language: CSharp
      name:
        CSharp: Selected(SelectionType)
        VB: Selected(SelectionType)
      nameWithType:
        CSharp: Dataline.Selected(SelectionType)
        VB: Dataline.Selected(SelectionType)
      qualifiedName:
        CSharp: Virgis.Dataline.Selected(Virgis.SelectionType)
        VB: Virgis.Dataline.Selected(Virgis.SelectionType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Selected
        path: ''
        startLine: 4455
      syntax:
        content:
          CSharp: public override void Selected(SelectionType button)
          VB: Public Overrides Sub Selected(button As SelectionType)
        parameters:
        - id: button
          type: Virgis.SelectionType
      overload: Virgis.Dataline.Selected*
      overridden: Virgis.VirgisFeature.Selected(Virgis.SelectionType)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Dataline.UnSelected(Virgis.SelectionType)
      commentId: M:Virgis.Dataline.UnSelected(Virgis.SelectionType)
      language: CSharp
      name:
        CSharp: UnSelected(SelectionType)
        VB: UnSelected(SelectionType)
      nameWithType:
        CSharp: Dataline.UnSelected(SelectionType)
        VB: Dataline.UnSelected(SelectionType)
      qualifiedName:
        CSharp: Virgis.Dataline.UnSelected(Virgis.SelectionType)
        VB: Virgis.Dataline.UnSelected(Virgis.SelectionType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: UnSelected
        path: ''
        startLine: 4464
      syntax:
        content:
          CSharp: public override void UnSelected(SelectionType button)
          VB: Public Overrides Sub UnSelected(button As SelectionType)
        parameters:
        - id: button
          type: Virgis.SelectionType
      overload: Virgis.Dataline.UnSelected*
      overridden: Virgis.VirgisFeature.UnSelected(Virgis.SelectionType)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Dataline.Translate(Virgis.MoveArgs)
      commentId: M:Virgis.Dataline.Translate(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Translate(MoveArgs)
        VB: Translate(MoveArgs)
      nameWithType:
        CSharp: Dataline.Translate(MoveArgs)
        VB: Dataline.Translate(MoveArgs)
      qualifiedName:
        CSharp: Virgis.Dataline.Translate(Virgis.MoveArgs)
        VB: Virgis.Dataline.Translate(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Translate
        path: ''
        startLine: 4473
      syntax:
        content:
          CSharp: public override void Translate(MoveArgs args)
          VB: Public Overrides Sub Translate(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.Dataline.Translate*
      overridden: Virgis.VirgisFeature.Translate(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Dataline.MoveTo(Virgis.MoveArgs)
      commentId: M:Virgis.Dataline.MoveTo(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveTo(MoveArgs)
        VB: MoveTo(MoveArgs)
      nameWithType:
        CSharp: Dataline.MoveTo(MoveArgs)
        VB: Dataline.MoveTo(MoveArgs)
      qualifiedName:
        CSharp: Virgis.Dataline.MoveTo(Virgis.MoveArgs)
        VB: Virgis.Dataline.MoveTo(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveTo
        path: ''
        startLine: 4486
      syntax:
        content:
          CSharp: public override void MoveTo(MoveArgs args)
          VB: Public Overrides Sub MoveTo(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.Dataline.MoveTo*
      overridden: Virgis.VirgisFeature.MoveTo(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Dataline.AddVertex(Vector3)
      commentId: M:Virgis.Dataline.AddVertex(Vector3)
      language: CSharp
      name:
        CSharp: AddVertex(Vector3)
        VB: AddVertex(Vector3)
      nameWithType:
        CSharp: Dataline.AddVertex(Vector3)
        VB: Dataline.AddVertex(Vector3)
      qualifiedName:
        CSharp: Virgis.Dataline.AddVertex(Vector3)
        VB: Virgis.Dataline.AddVertex(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AddVertex
        path: ''
        startLine: 4491
      syntax:
        content:
          CSharp: public override VirgisFeature AddVertex(Vector3 position)
          VB: Public Overrides Function AddVertex(position As Vector3) As VirgisFeature
        parameters:
        - id: position
          type: Vector3
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.Dataline.AddVertex*
      overridden: Virgis.VirgisFeature.AddVertex(Vector3)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Dataline.AddVertex(Virgis.LineSegment,Vector3)
      commentId: M:Virgis.Dataline.AddVertex(Virgis.LineSegment,Vector3)
      language: CSharp
      name:
        CSharp: AddVertex(LineSegment, Vector3)
        VB: AddVertex(LineSegment, Vector3)
      nameWithType:
        CSharp: Dataline.AddVertex(LineSegment, Vector3)
        VB: Dataline.AddVertex(LineSegment, Vector3)
      qualifiedName:
        CSharp: Virgis.Dataline.AddVertex(Virgis.LineSegment, Vector3)
        VB: Virgis.Dataline.AddVertex(Virgis.LineSegment, Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AddVertex
        path: ''
        startLine: 4503
      summary: "\nAdd a vertx to the Line when you know the segment to add the vertex to\n"
      example: []
      syntax:
        content:
          CSharp: public VirgisFeature AddVertex(LineSegment segment, Vector3 position)
          VB: Public Function AddVertex(segment As LineSegment, position As Vector3) As VirgisFeature
        parameters:
        - id: segment
          type: Virgis.LineSegment
          description: 'Linesegement to add the vertex to '
        - id: position
          type: Vector3
          description: Vertex Position in Wordl Space coordinates
        return:
          type: Virgis.VirgisFeature
          description: ''
      overload: Virgis.Dataline.AddVertex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.Dataline.RemoveVertex(Virgis.VirgisFeature)
      commentId: M:Virgis.Dataline.RemoveVertex(Virgis.VirgisFeature)
      language: CSharp
      name:
        CSharp: RemoveVertex(VirgisFeature)
        VB: RemoveVertex(VirgisFeature)
      nameWithType:
        CSharp: Dataline.RemoveVertex(VirgisFeature)
        VB: Dataline.RemoveVertex(VirgisFeature)
      qualifiedName:
        CSharp: Virgis.Dataline.RemoveVertex(Virgis.VirgisFeature)
        VB: Virgis.Dataline.RemoveVertex(Virgis.VirgisFeature)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: RemoveVertex
        path: ''
        startLine: 4535
      syntax:
        content:
          CSharp: public override void RemoveVertex(VirgisFeature vertex)
          VB: Public Overrides Sub RemoveVertex(vertex As VirgisFeature)
        parameters:
        - id: vertex
          type: Virgis.VirgisFeature
      overload: Virgis.Dataline.RemoveVertex*
      overridden: Virgis.VirgisFeature.RemoveVertex(Virgis.VirgisFeature)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Dataline.GetMetadata
      commentId: M:Virgis.Dataline.GetMetadata
      language: CSharp
      name:
        CSharp: GetMetadata()
        VB: GetMetadata()
      nameWithType:
        CSharp: Dataline.GetMetadata()
        VB: Dataline.GetMetadata()
      qualifiedName:
        CSharp: Virgis.Dataline.GetMetadata()
        VB: Virgis.Dataline.GetMetadata()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetMetadata
        path: ''
        startLine: 4612
      syntax:
        content:
          CSharp: public override Dictionary<string, object> GetMetadata()
          VB: Public Overrides Function GetMetadata As Dictionary(Of String, Object)
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.Object}
      overload: Virgis.Dataline.GetMetadata*
      overridden: Virgis.VirgisFeature.GetMetadata
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.Dataline.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
      commentId: M:Virgis.Dataline.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
      language: CSharp
      name:
        CSharp: SetMetadata(Dictionary<String, Object>)
        VB: SetMetadata(Dictionary(Of String, Object))
      nameWithType:
        CSharp: Dataline.SetMetadata(Dictionary<String, Object>)
        VB: Dataline.SetMetadata(Dictionary(Of String, Object))
      qualifiedName:
        CSharp: Virgis.Dataline.SetMetadata(System.Collections.Generic.Dictionary<System.String, System.Object>)
        VB: Virgis.Dataline.SetMetadata(System.Collections.Generic.Dictionary(Of System.String, System.Object))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetMetadata
        path: ''
        startLine: 4616
      syntax:
        content:
          CSharp: public override void SetMetadata(Dictionary<string, object> meta)
          VB: Public Overrides Sub SetMetadata(meta As Dictionary(Of String, Object))
        parameters:
        - id: meta
          type: System.Collections.Generic.Dictionary{System.String,System.Object}
      overload: Virgis.Dataline.SetMetadata*
      overridden: Virgis.VirgisFeature.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Virgis.ProjectChange
    commentId: T:Virgis.ProjectChange
    language: CSharp
    name:
      CSharp: ProjectChange
      VB: ProjectChange
    nameWithType:
      CSharp: ProjectChange
      VB: ProjectChange
    qualifiedName:
      CSharp: Virgis.ProjectChange
      VB: Virgis.ProjectChange
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: ProjectChange
      path: ''
      startLine: 4629
    syntax:
      content:
        CSharp: public class ProjectChange
        VB: Public Class ProjectChange
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.ProjectChange.Set(GisProject)
      commentId: M:Virgis.ProjectChange.Set(GisProject)
      language: CSharp
      name:
        CSharp: Set(GisProject)
        VB: Set(GisProject)
      nameWithType:
        CSharp: ProjectChange.Set(GisProject)
        VB: ProjectChange.Set(GisProject)
      qualifiedName:
        CSharp: Virgis.ProjectChange.Set(GisProject)
        VB: Virgis.ProjectChange.Set(GisProject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Set
        path: ''
        startLine: 4635
      syntax:
        content:
          CSharp: public void Set(GisProject project)
          VB: Public Sub Set(project As GisProject)
        parameters:
        - id: project
          type: GisProject
      overload: Virgis.ProjectChange.Set*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.ProjectChange.Complete
      commentId: M:Virgis.ProjectChange.Complete
      language: CSharp
      name:
        CSharp: Complete()
        VB: Complete()
      nameWithType:
        CSharp: ProjectChange.Complete()
        VB: ProjectChange.Complete()
      qualifiedName:
        CSharp: Virgis.ProjectChange.Complete()
        VB: Virgis.ProjectChange.Complete()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Complete
        path: ''
        startLine: 4639
      syntax:
        content:
          CSharp: public void Complete()
          VB: Public Sub Complete
      overload: Virgis.ProjectChange.Complete*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.ProjectChange.Get
      commentId: M:Virgis.ProjectChange.Get
      language: CSharp
      name:
        CSharp: Get()
        VB: Get()
      nameWithType:
        CSharp: ProjectChange.Get()
        VB: ProjectChange.Get()
      qualifiedName:
        CSharp: Virgis.ProjectChange.Get()
        VB: Virgis.ProjectChange.Get()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Get
        path: ''
        startLine: 4643
      syntax:
        content:
          CSharp: public GisProject Get()
          VB: Public Function Get As GisProject
        return:
          type: GisProject
      overload: Virgis.ProjectChange.Get*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.ProjectChange.Event
      commentId: P:Virgis.ProjectChange.Event
      language: CSharp
      name:
        CSharp: Event
        VB: Event
      nameWithType:
        CSharp: ProjectChange.Event
        VB: ProjectChange.Event
      qualifiedName:
        CSharp: Virgis.ProjectChange.Event
        VB: Virgis.ProjectChange.Event
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Event
        path: ''
        startLine: 4647
      syntax:
        content:
          CSharp: public IObservable<GisProject> Event { get; }
          VB: Public ReadOnly Property Event As IObservable(Of GisProject)
        parameters: []
        return:
          type: System.IObservable{GisProject}
      overload: Virgis.ProjectChange.Event*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Virgis.ZoomEvent
    commentId: T:Virgis.ZoomEvent
    language: CSharp
    name:
      CSharp: ZoomEvent
      VB: ZoomEvent
    nameWithType:
      CSharp: ZoomEvent
      VB: ZoomEvent
    qualifiedName:
      CSharp: Virgis.ZoomEvent
      VB: Virgis.ZoomEvent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: ZoomEvent
      path: ''
      startLine: 4668
    summary: "\nEvent type for Zoom Change Events\n"
    example: []
    syntax:
      content:
        CSharp: public class ZoomEvent
        VB: Public Class ZoomEvent
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.ZoomEvent.Event
      commentId: P:Virgis.ZoomEvent.Event
      language: CSharp
      name:
        CSharp: Event
        VB: Event
      nameWithType:
        CSharp: ZoomEvent.Event
        VB: ZoomEvent.Event
      qualifiedName:
        CSharp: Virgis.ZoomEvent.Event
        VB: Virgis.ZoomEvent.Event
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Event
        path: ''
        startLine: 4675
      syntax:
        content:
          CSharp: public IObservable<float> Event { get; }
          VB: Public ReadOnly Property Event As IObservable(Of Single)
        parameters: []
        return:
          type: System.IObservable{System.Single}
      overload: Virgis.ZoomEvent.Event*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Virgis.ZoomEvent.Set(System.Single)
      commentId: M:Virgis.ZoomEvent.Set(System.Single)
      language: CSharp
      name:
        CSharp: Set(Single)
        VB: Set(Single)
      nameWithType:
        CSharp: ZoomEvent.Set(Single)
        VB: ZoomEvent.Set(Single)
      qualifiedName:
        CSharp: Virgis.ZoomEvent.Set(System.Single)
        VB: Virgis.ZoomEvent.Set(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Set
        path: ''
        startLine: 4682
      syntax:
        content:
          CSharp: public void Set(float zoom)
          VB: Public Sub Set(zoom As Single)
        parameters:
        - id: zoom
          type: System.Single
      overload: Virgis.ZoomEvent.Set*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.ZoomEvent.Get
      commentId: M:Virgis.ZoomEvent.Get
      language: CSharp
      name:
        CSharp: Get()
        VB: Get()
      nameWithType:
        CSharp: ZoomEvent.Get()
        VB: ZoomEvent.Get()
      qualifiedName:
        CSharp: Virgis.ZoomEvent.Get()
        VB: Virgis.ZoomEvent.Get()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Get
        path: ''
        startLine: 4690
      syntax:
        content:
          CSharp: public float Get()
          VB: Public Function Get As Single
        return:
          type: System.Single
      overload: Virgis.ZoomEvent.Get*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.OrientEvent
    commentId: T:Virgis.OrientEvent
    language: CSharp
    name:
      CSharp: OrientEvent
      VB: OrientEvent
    nameWithType:
      CSharp: OrientEvent
      VB: OrientEvent
    qualifiedName:
      CSharp: Virgis.OrientEvent
      VB: Virgis.OrientEvent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: OrientEvent
      path: ''
      startLine: 4703
    syntax:
      content:
        CSharp: public class OrientEvent
        VB: Public Class OrientEvent
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.OrientEvent.Set(Vector3)
      commentId: M:Virgis.OrientEvent.Set(Vector3)
      language: CSharp
      name:
        CSharp: Set(Vector3)
        VB: Set(Vector3)
      nameWithType:
        CSharp: OrientEvent.Set(Vector3)
        VB: OrientEvent.Set(Vector3)
      qualifiedName:
        CSharp: Virgis.OrientEvent.Set(Vector3)
        VB: Virgis.OrientEvent.Set(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Set
        path: ''
        startLine: 4707
      syntax:
        content:
          CSharp: public void Set(Vector3 orientation)
          VB: Public Sub Set(orientation As Vector3)
        parameters:
        - id: orientation
          type: Vector3
      overload: Virgis.OrientEvent.Set*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.OrientEvent.Event
      commentId: P:Virgis.OrientEvent.Event
      language: CSharp
      name:
        CSharp: Event
        VB: Event
      nameWithType:
        CSharp: OrientEvent.Event
        VB: OrientEvent.Event
      qualifiedName:
        CSharp: Virgis.OrientEvent.Event
        VB: Virgis.OrientEvent.Event
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Event
        path: ''
        startLine: 4711
      syntax:
        content:
          CSharp: public IObservable<Vector3> Event { get; }
          VB: Public ReadOnly Property Event As IObservable(Of Vector3)
        parameters: []
        return:
          type: System.IObservable{Vector3}
      overload: Virgis.OrientEvent.Event*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Virgis.ButtonStatus
    commentId: T:Virgis.ButtonStatus
    language: CSharp
    name:
      CSharp: ButtonStatus
      VB: ButtonStatus
    nameWithType:
      CSharp: ButtonStatus
      VB: ButtonStatus
    qualifiedName:
      CSharp: Virgis.ButtonStatus
      VB: Virgis.ButtonStatus
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: ButtonStatus
      path: ''
      startLine: 4726
    syntax:
      content:
        CSharp: public class ButtonStatus
        VB: Public Class ButtonStatus
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.ButtonStatus.isLhTrigger
      commentId: P:Virgis.ButtonStatus.isLhTrigger
      language: CSharp
      name:
        CSharp: isLhTrigger
        VB: isLhTrigger
      nameWithType:
        CSharp: ButtonStatus.isLhTrigger
        VB: ButtonStatus.isLhTrigger
      qualifiedName:
        CSharp: Virgis.ButtonStatus.isLhTrigger
        VB: Virgis.ButtonStatus.isLhTrigger
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: isLhTrigger
        path: ''
        startLine: 4733
      syntax:
        content:
          CSharp: public bool isLhTrigger { get; set; }
          VB: Public Property isLhTrigger As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Virgis.ButtonStatus.isLhTrigger*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Virgis.ButtonStatus.isRhTrigger
      commentId: P:Virgis.ButtonStatus.isRhTrigger
      language: CSharp
      name:
        CSharp: isRhTrigger
        VB: isRhTrigger
      nameWithType:
        CSharp: ButtonStatus.isRhTrigger
        VB: ButtonStatus.isRhTrigger
      qualifiedName:
        CSharp: Virgis.ButtonStatus.isRhTrigger
        VB: Virgis.ButtonStatus.isRhTrigger
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: isRhTrigger
        path: ''
        startLine: 4744
      syntax:
        content:
          CSharp: public bool isRhTrigger { get; set; }
          VB: Public Property isRhTrigger As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Virgis.ButtonStatus.isRhTrigger*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Virgis.ButtonStatus.isLhGrip
      commentId: P:Virgis.ButtonStatus.isLhGrip
      language: CSharp
      name:
        CSharp: isLhGrip
        VB: isLhGrip
      nameWithType:
        CSharp: ButtonStatus.isLhGrip
        VB: ButtonStatus.isLhGrip
      qualifiedName:
        CSharp: Virgis.ButtonStatus.isLhGrip
        VB: Virgis.ButtonStatus.isLhGrip
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: isLhGrip
        path: ''
        startLine: 4756
      syntax:
        content:
          CSharp: public bool isLhGrip { get; set; }
          VB: Public Property isLhGrip As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Virgis.ButtonStatus.isLhGrip*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Virgis.ButtonStatus.isRhGrip
      commentId: P:Virgis.ButtonStatus.isRhGrip
      language: CSharp
      name:
        CSharp: isRhGrip
        VB: isRhGrip
      nameWithType:
        CSharp: ButtonStatus.isRhGrip
        VB: ButtonStatus.isRhGrip
      qualifiedName:
        CSharp: Virgis.ButtonStatus.isRhGrip
        VB: Virgis.ButtonStatus.isRhGrip
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: isRhGrip
        path: ''
        startLine: 4767
      syntax:
        content:
          CSharp: public bool isRhGrip { get; set; }
          VB: Public Property isRhGrip As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Virgis.ButtonStatus.isRhGrip*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Virgis.ButtonStatus.isAxisEdit
      commentId: P:Virgis.ButtonStatus.isAxisEdit
      language: CSharp
      name:
        CSharp: isAxisEdit
        VB: isAxisEdit
      nameWithType:
        CSharp: ButtonStatus.isAxisEdit
        VB: ButtonStatus.isAxisEdit
      qualifiedName:
        CSharp: Virgis.ButtonStatus.isAxisEdit
        VB: Virgis.ButtonStatus.isAxisEdit
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: isAxisEdit
        path: ''
        startLine: 4779
      syntax:
        content:
          CSharp: public bool isAxisEdit { get; }
          VB: Public ReadOnly Property isAxisEdit As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Virgis.ButtonStatus.isAxisEdit*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Virgis.ButtonStatus.activate
      commentId: F:Virgis.ButtonStatus.activate
      language: CSharp
      name:
        CSharp: activate
        VB: activate
      nameWithType:
        CSharp: ButtonStatus.activate
        VB: ButtonStatus.activate
      qualifiedName:
        CSharp: Virgis.ButtonStatus.activate
        VB: Virgis.ButtonStatus.activate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: activate
        path: ''
        startLine: 4785
      syntax:
        content:
          CSharp: public bool activate
          VB: Public activate As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.ButtonStatus.SelectionType
      commentId: P:Virgis.ButtonStatus.SelectionType
      language: CSharp
      name:
        CSharp: SelectionType
        VB: SelectionType
      nameWithType:
        CSharp: ButtonStatus.SelectionType
        VB: ButtonStatus.SelectionType
      qualifiedName:
        CSharp: Virgis.ButtonStatus.SelectionType
        VB: Virgis.ButtonStatus.SelectionType
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SelectionType
        path: ''
        startLine: 4787
      syntax:
        content:
          CSharp: public SelectionType SelectionType { get; }
          VB: Public ReadOnly Property SelectionType As SelectionType
        parameters: []
        return:
          type: Virgis.SelectionType
      overload: Virgis.ButtonStatus.SelectionType*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Virgis.ButtonStatus.Event
      commentId: P:Virgis.ButtonStatus.Event
      language: CSharp
      name:
        CSharp: Event
        VB: Event
      nameWithType:
        CSharp: ButtonStatus.Event
        VB: ButtonStatus.Event
      qualifiedName:
        CSharp: Virgis.ButtonStatus.Event
        VB: Virgis.ButtonStatus.Event
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Event
        path: ''
        startLine: 4793
      syntax:
        content:
          CSharp: public IObservable<ButtonStatus> Event { get; }
          VB: Public ReadOnly Property Event As IObservable(Of ButtonStatus)
        parameters: []
        return:
          type: System.IObservable{Virgis.ButtonStatus}
      overload: Virgis.ButtonStatus.Event*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Virgis.EditSession
    commentId: T:Virgis.EditSession
    language: CSharp
    name:
      CSharp: EditSession
      VB: EditSession
    nameWithType:
      CSharp: EditSession
      VB: EditSession
    qualifiedName:
      CSharp: Virgis.EditSession
      VB: Virgis.EditSession
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: EditSession
      path: ''
      startLine: 4810
    syntax:
      content:
        CSharp: public class EditSession
        VB: Public Class EditSession
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.EditSession.#ctor
      commentId: M:Virgis.EditSession.#ctor
      language: CSharp
      name:
        CSharp: EditSession()
        VB: EditSession()
      nameWithType:
        CSharp: EditSession.EditSession()
        VB: EditSession.EditSession()
      qualifiedName:
        CSharp: Virgis.EditSession.EditSession()
        VB: Virgis.EditSession.EditSession()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: .ctor
        path: ''
        startLine: 4838
      syntax:
        content:
          CSharp: public EditSession()
          VB: Public Sub New
      overload: Virgis.EditSession.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.EditSession.editableLayer
      commentId: P:Virgis.EditSession.editableLayer
      language: CSharp
      name:
        CSharp: editableLayer
        VB: editableLayer
      nameWithType:
        CSharp: EditSession.editableLayer
        VB: EditSession.editableLayer
      qualifiedName:
        CSharp: Virgis.EditSession.editableLayer
        VB: Virgis.EditSession.editableLayer
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: editableLayer
        path: ''
        startLine: 4846
      syntax:
        content:
          CSharp: public IVirgisLayer editableLayer { get; set; }
          VB: Public Property editableLayer As IVirgisLayer
        parameters: []
        return:
          type: Virgis.IVirgisLayer
      overload: Virgis.EditSession.editableLayer*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Virgis.EditSession.IsActive
      commentId: M:Virgis.EditSession.IsActive
      language: CSharp
      name:
        CSharp: IsActive()
        VB: IsActive()
      nameWithType:
        CSharp: EditSession.IsActive()
        VB: EditSession.IsActive()
      qualifiedName:
        CSharp: Virgis.EditSession.IsActive()
        VB: Virgis.EditSession.IsActive()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: IsActive
        path: ''
        startLine: 4856
      syntax:
        content:
          CSharp: public bool IsActive()
          VB: Public Function IsActive As Boolean
        return:
          type: System.Boolean
      overload: Virgis.EditSession.IsActive*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.EditSession.Start
      commentId: M:Virgis.EditSession.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: EditSession.Start()
        VB: EditSession.Start()
      qualifiedName:
        CSharp: Virgis.EditSession.Start()
        VB: Virgis.EditSession.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Start
        path: ''
        startLine: 4860
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: Virgis.EditSession.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.EditSession.StopAndSave
      commentId: M:Virgis.EditSession.StopAndSave
      language: CSharp
      name:
        CSharp: StopAndSave()
        VB: StopAndSave()
      nameWithType:
        CSharp: EditSession.StopAndSave()
        VB: EditSession.StopAndSave()
      qualifiedName:
        CSharp: Virgis.EditSession.StopAndSave()
        VB: Virgis.EditSession.StopAndSave()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: StopAndSave
        path: ''
        startLine: 4867
      syntax:
        content:
          CSharp: public void StopAndSave()
          VB: Public Sub StopAndSave
      overload: Virgis.EditSession.StopAndSave*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.EditSession.StopAndDiscard
      commentId: M:Virgis.EditSession.StopAndDiscard
      language: CSharp
      name:
        CSharp: StopAndDiscard()
        VB: StopAndDiscard()
      nameWithType:
        CSharp: EditSession.StopAndDiscard()
        VB: EditSession.StopAndDiscard()
      qualifiedName:
        CSharp: Virgis.EditSession.StopAndDiscard()
        VB: Virgis.EditSession.StopAndDiscard()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: StopAndDiscard
        path: ''
        startLine: 4874
      syntax:
        content:
          CSharp: public void StopAndDiscard()
          VB: Public Sub StopAndDiscard
      overload: Virgis.EditSession.StopAndDiscard*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.EditSession.mode
      commentId: P:Virgis.EditSession.mode
      language: CSharp
      name:
        CSharp: mode
        VB: mode
      nameWithType:
        CSharp: EditSession.mode
        VB: EditSession.mode
      qualifiedName:
        CSharp: Virgis.EditSession.mode
        VB: Virgis.EditSession.mode
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: mode
        path: ''
        startLine: 4881
      syntax:
        content:
          CSharp: public EditSession.EditMode mode { get; set; }
          VB: Public Property mode As EditSession.EditMode
        parameters: []
        return:
          type: Virgis.EditSession.EditMode
      overload: Virgis.EditSession.mode*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Virgis.EditSession.StartEvent
      commentId: P:Virgis.EditSession.StartEvent
      language: CSharp
      name:
        CSharp: StartEvent
        VB: StartEvent
      nameWithType:
        CSharp: EditSession.StartEvent
        VB: EditSession.StartEvent
      qualifiedName:
        CSharp: Virgis.EditSession.StartEvent
        VB: Virgis.EditSession.StartEvent
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: StartEvent
        path: ''
        startLine: 4888
      syntax:
        content:
          CSharp: public IObservable<bool> StartEvent { get; }
          VB: Public ReadOnly Property StartEvent As IObservable(Of Boolean)
        parameters: []
        return:
          type: System.IObservable{System.Boolean}
      overload: Virgis.EditSession.StartEvent*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Virgis.EditSession.EndEvent
      commentId: P:Virgis.EditSession.EndEvent
      language: CSharp
      name:
        CSharp: EndEvent
        VB: EndEvent
      nameWithType:
        CSharp: EditSession.EndEvent
        VB: EditSession.EndEvent
      qualifiedName:
        CSharp: Virgis.EditSession.EndEvent
        VB: Virgis.EditSession.EndEvent
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: EndEvent
        path: ''
        startLine: 4894
      syntax:
        content:
          CSharp: public IObservable<bool> EndEvent { get; }
          VB: Public ReadOnly Property EndEvent As IObservable(Of Boolean)
        parameters: []
        return:
          type: System.IObservable{System.Boolean}
      overload: Virgis.EditSession.EndEvent*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Virgis.EditSession.ChangeLayerEvent
      commentId: P:Virgis.EditSession.ChangeLayerEvent
      language: CSharp
      name:
        CSharp: ChangeLayerEvent
        VB: ChangeLayerEvent
      nameWithType:
        CSharp: EditSession.ChangeLayerEvent
        VB: EditSession.ChangeLayerEvent
      qualifiedName:
        CSharp: Virgis.EditSession.ChangeLayerEvent
        VB: Virgis.EditSession.ChangeLayerEvent
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ChangeLayerEvent
        path: ''
        startLine: 4900
      syntax:
        content:
          CSharp: public IObservable<IVirgisLayer> ChangeLayerEvent { get; }
          VB: Public ReadOnly Property ChangeLayerEvent As IObservable(Of IVirgisLayer)
        parameters: []
        return:
          type: System.IObservable{Virgis.IVirgisLayer}
      overload: Virgis.EditSession.ChangeLayerEvent*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Virgis.EditSession.EditMode
    commentId: T:Virgis.EditSession.EditMode
    language: CSharp
    name:
      CSharp: EditSession.EditMode
      VB: EditSession.EditMode
    nameWithType:
      CSharp: EditSession.EditMode
      VB: EditSession.EditMode
    qualifiedName:
      CSharp: Virgis.EditSession.EditMode
      VB: Virgis.EditSession.EditMode
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: EditMode
      path: ''
      startLine: 4811
    syntax:
      content:
        CSharp: public enum EditMode
        VB: Public Enum EditMode
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Virgis.EditSession.EditMode.None
      commentId: F:Virgis.EditSession.EditMode.None
      language: CSharp
      name:
        CSharp: None
        VB: None
      nameWithType:
        CSharp: EditSession.EditMode.None
        VB: EditSession.EditMode.None
      qualifiedName:
        CSharp: Virgis.EditSession.EditMode.None
        VB: Virgis.EditSession.EditMode.None
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: None
        path: ''
        startLine: 4812
      syntax:
        content:
          CSharp: None = 0
          VB: None = 0
        return:
          type: Virgis.EditSession.EditMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Virgis.EditSession.EditMode.SnapGrid
      commentId: F:Virgis.EditSession.EditMode.SnapGrid
      language: CSharp
      name:
        CSharp: SnapGrid
        VB: SnapGrid
      nameWithType:
        CSharp: EditSession.EditMode.SnapGrid
        VB: EditSession.EditMode.SnapGrid
      qualifiedName:
        CSharp: Virgis.EditSession.EditMode.SnapGrid
        VB: Virgis.EditSession.EditMode.SnapGrid
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SnapGrid
        path: ''
        startLine: 4812
      syntax:
        content:
          CSharp: SnapGrid = 1
          VB: SnapGrid = 1
        return:
          type: Virgis.EditSession.EditMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Virgis.EditSession.EditMode.SnapAnchor
      commentId: F:Virgis.EditSession.EditMode.SnapAnchor
      language: CSharp
      name:
        CSharp: SnapAnchor
        VB: SnapAnchor
      nameWithType:
        CSharp: EditSession.EditMode.SnapAnchor
        VB: EditSession.EditMode.SnapAnchor
      qualifiedName:
        CSharp: Virgis.EditSession.EditMode.SnapAnchor
        VB: Virgis.EditSession.EditMode.SnapAnchor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SnapAnchor
        path: ''
        startLine: 4812
      syntax:
        content:
          CSharp: SnapAnchor = 2
          VB: SnapAnchor = 2
        return:
          type: Virgis.EditSession.EditMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Virgis.InfoEvent
    commentId: T:Virgis.InfoEvent
    language: CSharp
    name:
      CSharp: InfoEvent
      VB: InfoEvent
    nameWithType:
      CSharp: InfoEvent
      VB: InfoEvent
    qualifiedName:
      CSharp: Virgis.InfoEvent
      VB: Virgis.InfoEvent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: InfoEvent
      path: ''
      startLine: 4915
    syntax:
      content:
        CSharp: public class InfoEvent
        VB: Public Class InfoEvent
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.InfoEvent.Set(System.String)
      commentId: M:Virgis.InfoEvent.Set(System.String)
      language: CSharp
      name:
        CSharp: Set(String)
        VB: Set(String)
      nameWithType:
        CSharp: InfoEvent.Set(String)
        VB: InfoEvent.Set(String)
      qualifiedName:
        CSharp: Virgis.InfoEvent.Set(System.String)
        VB: Virgis.InfoEvent.Set(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Set
        path: ''
        startLine: 4919
      syntax:
        content:
          CSharp: public void Set(string info)
          VB: Public Sub Set(info As String)
        parameters:
        - id: info
          type: System.String
      overload: Virgis.InfoEvent.Set*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.InfoEvent.Event
      commentId: P:Virgis.InfoEvent.Event
      language: CSharp
      name:
        CSharp: Event
        VB: Event
      nameWithType:
        CSharp: InfoEvent.Event
        VB: InfoEvent.Event
      qualifiedName:
        CSharp: Virgis.InfoEvent.Event
        VB: Virgis.InfoEvent.Event
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Event
        path: ''
        startLine: 4923
      syntax:
        content:
          CSharp: public IObservable<string> Event { get; }
          VB: Public ReadOnly Property Event As IObservable(Of String)
        parameters: []
        return:
          type: System.IObservable{System.String}
      overload: Virgis.InfoEvent.Event*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Virgis.MoveArgs
    commentId: T:Virgis.MoveArgs
    language: CSharp
    name:
      CSharp: MoveArgs
      VB: MoveArgs
    nameWithType:
      CSharp: MoveArgs
      VB: MoveArgs
    qualifiedName:
      CSharp: Virgis.MoveArgs
      VB: Virgis.MoveArgs
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: MoveArgs
      path: ''
      startLine: 4950
    summary: "\nStructure used to hold the details of a generic move request sent to a target enitity\n"
    example: []
    syntax:
      content:
        CSharp: public struct MoveArgs
        VB: Public Structure MoveArgs
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Virgis.MoveArgs.id
      commentId: F:Virgis.MoveArgs.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: MoveArgs.id
        VB: MoveArgs.id
      qualifiedName:
        CSharp: Virgis.MoveArgs.id
        VB: Virgis.MoveArgs.id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: id
        path: ''
        startLine: 4951
      syntax:
        content:
          CSharp: public Guid id
          VB: Public id As Guid
        return:
          type: System.Guid
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MoveArgs.pos
      commentId: F:Virgis.MoveArgs.pos
      language: CSharp
      name:
        CSharp: pos
        VB: pos
      nameWithType:
        CSharp: MoveArgs.pos
        VB: MoveArgs.pos
      qualifiedName:
        CSharp: Virgis.MoveArgs.pos
        VB: Virgis.MoveArgs.pos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: pos
        path: ''
        startLine: 4952
      syntax:
        content:
          CSharp: public Vector3 pos
          VB: Public pos As Vector3
        return:
          type: Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MoveArgs.translate
      commentId: F:Virgis.MoveArgs.translate
      language: CSharp
      name:
        CSharp: translate
        VB: translate
      nameWithType:
        CSharp: MoveArgs.translate
        VB: MoveArgs.translate
      qualifiedName:
        CSharp: Virgis.MoveArgs.translate
        VB: Virgis.MoveArgs.translate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: translate
        path: ''
        startLine: 4953
      syntax:
        content:
          CSharp: public Vector3 translate
          VB: Public translate As Vector3
        return:
          type: Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MoveArgs.rotate
      commentId: F:Virgis.MoveArgs.rotate
      language: CSharp
      name:
        CSharp: rotate
        VB: rotate
      nameWithType:
        CSharp: MoveArgs.rotate
        VB: MoveArgs.rotate
      qualifiedName:
        CSharp: Virgis.MoveArgs.rotate
        VB: Virgis.MoveArgs.rotate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: rotate
        path: ''
        startLine: 4954
      syntax:
        content:
          CSharp: public Quaternion rotate
          VB: Public rotate As Quaternion
        return:
          type: Quaternion
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MoveArgs.oldPos
      commentId: F:Virgis.MoveArgs.oldPos
      language: CSharp
      name:
        CSharp: oldPos
        VB: oldPos
      nameWithType:
        CSharp: MoveArgs.oldPos
        VB: MoveArgs.oldPos
      qualifiedName:
        CSharp: Virgis.MoveArgs.oldPos
        VB: Virgis.MoveArgs.oldPos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: oldPos
        path: ''
        startLine: 4955
      syntax:
        content:
          CSharp: public Vector3 oldPos
          VB: Public oldPos As Vector3
        return:
          type: Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.MoveArgs.scale
      commentId: F:Virgis.MoveArgs.scale
      language: CSharp
      name:
        CSharp: scale
        VB: scale
      nameWithType:
        CSharp: MoveArgs.scale
        VB: MoveArgs.scale
      qualifiedName:
        CSharp: Virgis.MoveArgs.scale
        VB: Virgis.MoveArgs.scale
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: scale
        path: ''
        startLine: 4956
      syntax:
        content:
          CSharp: public float scale
          VB: Public scale As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.SelectionType
    commentId: T:Virgis.SelectionType
    language: CSharp
    name:
      CSharp: SelectionType
      VB: SelectionType
    nameWithType:
      CSharp: SelectionType
      VB: SelectionType
    qualifiedName:
      CSharp: Virgis.SelectionType
      VB: Virgis.SelectionType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: SelectionType
      path: ''
      startLine: 4962
    summary: "\nEnum holding the types of &quot;selection&quot;tha the user can make\n"
    example: []
    syntax:
      content:
        CSharp: public enum SelectionType
        VB: Public Enum SelectionType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Virgis.SelectionType.SELECT
      commentId: F:Virgis.SelectionType.SELECT
      language: CSharp
      name:
        CSharp: SELECT
        VB: SELECT
      nameWithType:
        CSharp: SelectionType.SELECT
        VB: SelectionType.SELECT
      qualifiedName:
        CSharp: Virgis.SelectionType.SELECT
        VB: Virgis.SelectionType.SELECT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SELECT
        path: ''
        startLine: 4963
      syntax:
        content:
          CSharp: SELECT = 0
          VB: SELECT = 0
        return:
          type: Virgis.SelectionType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Virgis.SelectionType.SELECTALL
      commentId: F:Virgis.SelectionType.SELECTALL
      language: CSharp
      name:
        CSharp: SELECTALL
        VB: SELECTALL
      nameWithType:
        CSharp: SelectionType.SELECTALL
        VB: SelectionType.SELECTALL
      qualifiedName:
        CSharp: Virgis.SelectionType.SELECTALL
        VB: Virgis.SelectionType.SELECTALL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SELECTALL
        path: ''
        startLine: 4964
      syntax:
        content:
          CSharp: SELECTALL = 1
          VB: SELECTALL = 1
        return:
          type: Virgis.SelectionType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Virgis.SelectionType.INFO
      commentId: F:Virgis.SelectionType.INFO
      language: CSharp
      name:
        CSharp: INFO
        VB: INFO
      nameWithType:
        CSharp: SelectionType.INFO
        VB: SelectionType.INFO
      qualifiedName:
        CSharp: Virgis.SelectionType.INFO
        VB: Virgis.SelectionType.INFO
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: INFO
        path: ''
        startLine: 4965
      syntax:
        content:
          CSharp: INFO = 2
          VB: INFO = 2
        return:
          type: Virgis.SelectionType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Virgis.SelectionType.BROADCAST
      commentId: F:Virgis.SelectionType.BROADCAST
      language: CSharp
      name:
        CSharp: BROADCAST
        VB: BROADCAST
      nameWithType:
        CSharp: SelectionType.BROADCAST
        VB: SelectionType.BROADCAST
      qualifiedName:
        CSharp: Virgis.SelectionType.BROADCAST
        VB: Virgis.SelectionType.BROADCAST
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: BROADCAST
        path: ''
        startLine: 4966
      syntax:
        content:
          CSharp: BROADCAST = 3
          VB: BROADCAST = 3
        return:
          type: Virgis.SelectionType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Virgis.FeatureType
    commentId: T:Virgis.FeatureType
    language: CSharp
    name:
      CSharp: FeatureType
      VB: FeatureType
    nameWithType:
      CSharp: FeatureType
      VB: FeatureType
    qualifiedName:
      CSharp: Virgis.FeatureType
      VB: Virgis.FeatureType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: FeatureType
      path: ''
      startLine: 4969
    syntax:
      content:
        CSharp: public enum FeatureType
        VB: Public Enum FeatureType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Virgis.FeatureType.POINT
      commentId: F:Virgis.FeatureType.POINT
      language: CSharp
      name:
        CSharp: POINT
        VB: POINT
      nameWithType:
        CSharp: FeatureType.POINT
        VB: FeatureType.POINT
      qualifiedName:
        CSharp: Virgis.FeatureType.POINT
        VB: Virgis.FeatureType.POINT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: POINT
        path: ''
        startLine: 4970
      syntax:
        content:
          CSharp: POINT = 0
          VB: POINT = 0
        return:
          type: Virgis.FeatureType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Virgis.FeatureType.LINE
      commentId: F:Virgis.FeatureType.LINE
      language: CSharp
      name:
        CSharp: LINE
        VB: LINE
      nameWithType:
        CSharp: FeatureType.LINE
        VB: FeatureType.LINE
      qualifiedName:
        CSharp: Virgis.FeatureType.LINE
        VB: Virgis.FeatureType.LINE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: LINE
        path: ''
        startLine: 4971
      syntax:
        content:
          CSharp: LINE = 1
          VB: LINE = 1
        return:
          type: Virgis.FeatureType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Virgis.FeatureType.POLYGON
      commentId: F:Virgis.FeatureType.POLYGON
      language: CSharp
      name:
        CSharp: POLYGON
        VB: POLYGON
      nameWithType:
        CSharp: FeatureType.POLYGON
        VB: FeatureType.POLYGON
      qualifiedName:
        CSharp: Virgis.FeatureType.POLYGON
        VB: Virgis.FeatureType.POLYGON
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: POLYGON
        path: ''
        startLine: 4972
      syntax:
        content:
          CSharp: POLYGON = 2
          VB: POLYGON = 2
        return:
          type: Virgis.FeatureType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Virgis.FeatureType.MESH
      commentId: F:Virgis.FeatureType.MESH
      language: CSharp
      name:
        CSharp: MESH
        VB: MESH
      nameWithType:
        CSharp: FeatureType.MESH
        VB: FeatureType.MESH
      qualifiedName:
        CSharp: Virgis.FeatureType.MESH
        VB: Virgis.FeatureType.MESH
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MESH
        path: ''
        startLine: 4973
      syntax:
        content:
          CSharp: MESH = 3
          VB: MESH = 3
        return:
          type: Virgis.FeatureType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Virgis.FeatureType.POINTCLOUD
      commentId: F:Virgis.FeatureType.POINTCLOUD
      language: CSharp
      name:
        CSharp: POINTCLOUD
        VB: POINTCLOUD
      nameWithType:
        CSharp: FeatureType.POINTCLOUD
        VB: FeatureType.POINTCLOUD
      qualifiedName:
        CSharp: Virgis.FeatureType.POINTCLOUD
        VB: Virgis.FeatureType.POINTCLOUD
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: POINTCLOUD
        path: ''
        startLine: 4974
      syntax:
        content:
          CSharp: POINTCLOUD = 4
          VB: POINTCLOUD = 4
        return:
          type: Virgis.FeatureType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Virgis.FeatureType.RASTER
      commentId: F:Virgis.FeatureType.RASTER
      language: CSharp
      name:
        CSharp: RASTER
        VB: RASTER
      nameWithType:
        CSharp: FeatureType.RASTER
        VB: FeatureType.RASTER
      qualifiedName:
        CSharp: Virgis.FeatureType.RASTER
        VB: Virgis.FeatureType.RASTER
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: RASTER
        path: ''
        startLine: 4975
      syntax:
        content:
          CSharp: RASTER = 5
          VB: RASTER = 5
        return:
          type: Virgis.FeatureType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Virgis.FeatureType.NONE
      commentId: F:Virgis.FeatureType.NONE
      language: CSharp
      name:
        CSharp: NONE
        VB: NONE
      nameWithType:
        CSharp: FeatureType.NONE
        VB: FeatureType.NONE
      qualifiedName:
        CSharp: Virgis.FeatureType.NONE
        VB: Virgis.FeatureType.NONE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: NONE
        path: ''
        startLine: 4976
      syntax:
        content:
          CSharp: NONE = 6
          VB: NONE = 6
        return:
          type: Virgis.FeatureType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Virgis.UnityLayers
    commentId: T:Virgis.UnityLayers
    language: CSharp
    name:
      CSharp: UnityLayers
      VB: UnityLayers
    nameWithType:
      CSharp: UnityLayers
      VB: UnityLayers
    qualifiedName:
      CSharp: Virgis.UnityLayers
      VB: Virgis.UnityLayers
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: UnityLayers
      path: ''
      startLine: 4980
    syntax:
      content:
        CSharp: public static class UnityLayers
        VB: Public Module UnityLayers
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Virgis.UnityLayers.POINT
      commentId: P:Virgis.UnityLayers.POINT
      language: CSharp
      name:
        CSharp: POINT
        VB: POINT
      nameWithType:
        CSharp: UnityLayers.POINT
        VB: UnityLayers.POINT
      qualifiedName:
        CSharp: Virgis.UnityLayers.POINT
        VB: Virgis.UnityLayers.POINT
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: POINT
        path: ''
        startLine: 4981
      syntax:
        content:
          CSharp: public static LayerMask POINT { get; }
          VB: Public Shared ReadOnly Property POINT As LayerMask
        parameters: []
        return:
          type: LayerMask
      overload: Virgis.UnityLayers.POINT*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Virgis.UnityLayers.LINE
      commentId: P:Virgis.UnityLayers.LINE
      language: CSharp
      name:
        CSharp: LINE
        VB: LINE
      nameWithType:
        CSharp: UnityLayers.LINE
        VB: UnityLayers.LINE
      qualifiedName:
        CSharp: Virgis.UnityLayers.LINE
        VB: Virgis.UnityLayers.LINE
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: LINE
        path: ''
        startLine: 4986
      syntax:
        content:
          CSharp: public static LayerMask LINE { get; }
          VB: Public Shared ReadOnly Property LINE As LayerMask
        parameters: []
        return:
          type: LayerMask
      overload: Virgis.UnityLayers.LINE*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Virgis.UnityLayers.SHAPE
      commentId: P:Virgis.UnityLayers.SHAPE
      language: CSharp
      name:
        CSharp: SHAPE
        VB: SHAPE
      nameWithType:
        CSharp: UnityLayers.SHAPE
        VB: UnityLayers.SHAPE
      qualifiedName:
        CSharp: Virgis.UnityLayers.SHAPE
        VB: Virgis.UnityLayers.SHAPE
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SHAPE
        path: ''
        startLine: 4991
      syntax:
        content:
          CSharp: public static LayerMask SHAPE { get; }
          VB: Public Shared ReadOnly Property SHAPE As LayerMask
        parameters: []
        return:
          type: LayerMask
      overload: Virgis.UnityLayers.SHAPE*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Virgis.UnityLayers.MESH
      commentId: P:Virgis.UnityLayers.MESH
      language: CSharp
      name:
        CSharp: MESH
        VB: MESH
      nameWithType:
        CSharp: UnityLayers.MESH
        VB: UnityLayers.MESH
      qualifiedName:
        CSharp: Virgis.UnityLayers.MESH
        VB: Virgis.UnityLayers.MESH
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MESH
        path: ''
        startLine: 4996
      syntax:
        content:
          CSharp: public static LayerMask MESH { get; }
          VB: Public Shared ReadOnly Property MESH As LayerMask
        parameters: []
        return:
          type: LayerMask
      overload: Virgis.UnityLayers.MESH*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
  - id: Virgis.DcurveExtensions
    commentId: T:Virgis.DcurveExtensions
    language: CSharp
    name:
      CSharp: DcurveExtensions
      VB: DcurveExtensions
    nameWithType:
      CSharp: DcurveExtensions
      VB: DcurveExtensions
    qualifiedName:
      CSharp: Virgis.DcurveExtensions
      VB: Virgis.DcurveExtensions
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: DcurveExtensions
      path: ''
      startLine: 5005
    syntax:
      content:
        CSharp: public static class DcurveExtensions
        VB: Public Module DcurveExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Virgis.DcurveExtensions.Vector3(DCurve3,Vector3[],System.Boolean)
      commentId: M:Virgis.DcurveExtensions.Vector3(DCurve3,Vector3[],System.Boolean)
      language: CSharp
      name:
        CSharp: Vector3(DCurve3, Vector3[], Boolean)
        VB: Vector3(DCurve3, Vector3(), Boolean)
      nameWithType:
        CSharp: DcurveExtensions.Vector3(DCurve3, Vector3[], Boolean)
        VB: DcurveExtensions.Vector3(DCurve3, Vector3(), Boolean)
      qualifiedName:
        CSharp: Virgis.DcurveExtensions.Vector3(DCurve3, Vector3[], System.Boolean)
        VB: Virgis.DcurveExtensions.Vector3(DCurve3, Vector3(), System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Vector3
        path: ''
        startLine: 5013
      summary: "\nCreates g3.DCurve from Vector3[]\n"
      example: []
      syntax:
        content:
          CSharp: public static DCurve3 Vector3(this DCurve3 curve, Vector3[] verteces, bool bClosed)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Vector3(curve As DCurve3, verteces As Vector3(), bClosed As Boolean) As DCurve3
        parameters:
        - id: curve
          type: DCurve3
          description: DCurve
        - id: verteces
          type: Vector3[]
          description: Vextor3[]
        - id: bClosed
          type: System.Boolean
          description: whether the line is closed
        return:
          type: DCurve3
      overload: Virgis.DcurveExtensions.Vector3*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.DcurveExtensions.FromGeometry(DCurve3,Geometry)
      commentId: M:Virgis.DcurveExtensions.FromGeometry(DCurve3,Geometry)
      language: CSharp
      name:
        CSharp: FromGeometry(DCurve3, Geometry)
        VB: FromGeometry(DCurve3, Geometry)
      nameWithType:
        CSharp: DcurveExtensions.FromGeometry(DCurve3, Geometry)
        VB: DcurveExtensions.FromGeometry(DCurve3, Geometry)
      qualifiedName:
        CSharp: Virgis.DcurveExtensions.FromGeometry(DCurve3, Geometry)
        VB: Virgis.DcurveExtensions.FromGeometry(DCurve3, Geometry)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: FromGeometry
        path: ''
        startLine: 5030
      summary: "\nCreates ag3.DCurve from a geometry\n"
      example: []
      syntax:
        content:
          CSharp: public static DCurve3 FromGeometry(this DCurve3 curve, Geometry geom)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function FromGeometry(curve As DCurve3, geom As Geometry) As DCurve3
        parameters:
        - id: curve
          type: DCurve3
          description: ''
        - id: geom
          type: Geometry
          description: ''
        return:
          type: DCurve3
          description: ''
      overload: Virgis.DcurveExtensions.FromGeometry*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.DcurveExtensions.ToWorld(DCurve3)
      commentId: M:Virgis.DcurveExtensions.ToWorld(DCurve3)
      language: CSharp
      name:
        CSharp: ToWorld(DCurve3)
        VB: ToWorld(DCurve3)
      nameWithType:
        CSharp: DcurveExtensions.ToWorld(DCurve3)
        VB: DcurveExtensions.ToWorld(DCurve3)
      qualifiedName:
        CSharp: Virgis.DcurveExtensions.ToWorld(DCurve3)
        VB: Virgis.DcurveExtensions.ToWorld(DCurve3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ToWorld
        path: ''
        startLine: 5055
      summary: "\nConverts DCurve3 whihc is in Local Vector3d coordinates to Vector3[] World coordinates \n"
      example: []
      syntax:
        content:
          CSharp: public static Vector3[] ToWorld(this DCurve3 curve)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ToWorld(curve As DCurve3) As Vector3()
        parameters:
        - id: curve
          type: DCurve3
          description: input curve
        return:
          type: Vector3[]
          description: Vector3[] in world coordinates
      overload: Virgis.DcurveExtensions.ToWorld*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.DcurveExtensions.WorldCenter(DCurve3)
      commentId: M:Virgis.DcurveExtensions.WorldCenter(DCurve3)
      language: CSharp
      name:
        CSharp: WorldCenter(DCurve3)
        VB: WorldCenter(DCurve3)
      nameWithType:
        CSharp: DcurveExtensions.WorldCenter(DCurve3)
        VB: DcurveExtensions.WorldCenter(DCurve3)
      qualifiedName:
        CSharp: Virgis.DcurveExtensions.WorldCenter(DCurve3)
        VB: Virgis.DcurveExtensions.WorldCenter(DCurve3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: WorldCenter
        path: ''
        startLine: 5070
      summary: "\nCalculates the 3D Centroid as a World space Vector3 of the DCurve3 that is in local map space.\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector3 WorldCenter(this DCurve3 curve)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function WorldCenter(curve As DCurve3) As Vector3
        parameters:
        - id: curve
          type: DCurve3
          description: DCurve3 in local map space coordinates
        return:
          type: Vector3
          description: Vcetor3 in world space coordinates
      overload: Virgis.DcurveExtensions.WorldCenter*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.DcurveExtensions.Center(DCurve3)
      commentId: M:Virgis.DcurveExtensions.Center(DCurve3)
      language: CSharp
      name:
        CSharp: Center(DCurve3)
        VB: Center(DCurve3)
      nameWithType:
        CSharp: DcurveExtensions.Center(DCurve3)
        VB: DcurveExtensions.Center(DCurve3)
      qualifiedName:
        CSharp: Virgis.DcurveExtensions.Center(DCurve3)
        VB: Virgis.DcurveExtensions.Center(DCurve3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Center
        path: ''
        startLine: 5078
      summary: "\nEstimates the 3D centroid of a DCurve \n"
      example: []
      syntax:
        content:
          CSharp: public static Vector3d Center(this DCurve3 curve)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Center(curve As DCurve3) As Vector3d
        parameters:
        - id: curve
          type: DCurve3
          description: DCurve
        return:
          type: Vector3d
          description: Vector3[]
      overload: Virgis.DcurveExtensions.Center*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.DcurveExtensions.CenterMark(DCurve3)
      commentId: M:Virgis.DcurveExtensions.CenterMark(DCurve3)
      language: CSharp
      name:
        CSharp: CenterMark(DCurve3)
        VB: CenterMark(DCurve3)
      nameWithType:
        CSharp: DcurveExtensions.CenterMark(DCurve3)
        VB: DcurveExtensions.CenterMark(DCurve3)
      qualifiedName:
        CSharp: Virgis.DcurveExtensions.CenterMark(DCurve3)
        VB: Virgis.DcurveExtensions.CenterMark(DCurve3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CenterMark
        path: ''
        startLine: 5096
      summary: "\nEstimates the nearest point on a DCurve to the centroid of that DCurve\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector3d CenterMark(this DCurve3 curve)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function CenterMark(curve As DCurve3) As Vector3d
        parameters:
        - id: curve
          type: DCurve3
          description: g3.DCurve
        return:
          type: Vector3d
          description: g3.Vector3d Centroid
      overload: Virgis.DcurveExtensions.CenterMark*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.DcurveExtensions.NearestSegment(DCurve3,Vector3d)
      commentId: M:Virgis.DcurveExtensions.NearestSegment(DCurve3,Vector3d)
      language: CSharp
      name:
        CSharp: NearestSegment(DCurve3, Vector3d)
        VB: NearestSegment(DCurve3, Vector3d)
      nameWithType:
        CSharp: DcurveExtensions.NearestSegment(DCurve3, Vector3d)
        VB: DcurveExtensions.NearestSegment(DCurve3, Vector3d)
      qualifiedName:
        CSharp: Virgis.DcurveExtensions.NearestSegment(DCurve3, Vector3d)
        VB: Virgis.DcurveExtensions.NearestSegment(DCurve3, Vector3d)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: NearestSegment
        path: ''
        startLine: 5108
      summary: "\nFinds the Segment from the DCurve3 closes to the position\n"
      example: []
      syntax:
        content:
          CSharp: public static int NearestSegment(this DCurve3 curve, Vector3d position)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function NearestSegment(curve As DCurve3, position As Vector3d) As Integer
        parameters:
        - id: curve
          type: DCurve3
          description: DCurve3
        - id: position
          type: Vector3d
          description: Vector3d
        return:
          type: System.Int32
          description: Integer Sgement index
      overload: Virgis.DcurveExtensions.NearestSegment*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.DcurveExtensions.AllVertexItr(System.Collections.Generic.List{DCurve3})
      commentId: M:Virgis.DcurveExtensions.AllVertexItr(System.Collections.Generic.List{DCurve3})
      language: CSharp
      name:
        CSharp: AllVertexItr(List<DCurve3>)
        VB: AllVertexItr(List(Of DCurve3))
      nameWithType:
        CSharp: DcurveExtensions.AllVertexItr(List<DCurve3>)
        VB: DcurveExtensions.AllVertexItr(List(Of DCurve3))
      qualifiedName:
        CSharp: Virgis.DcurveExtensions.AllVertexItr(System.Collections.Generic.List<DCurve3>)
        VB: Virgis.DcurveExtensions.AllVertexItr(System.Collections.Generic.List(Of DCurve3))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AllVertexItr
        path: ''
        startLine: 5113
      syntax:
        content:
          CSharp: public static List<Vector3d> AllVertexItr(this List<DCurve3> poly)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function AllVertexItr(poly As List(Of DCurve3)) As List(Of Vector3d)
        parameters:
        - id: poly
          type: System.Collections.Generic.List{DCurve3}
        return:
          type: System.Collections.Generic.List{Vector3d}
      overload: Virgis.DcurveExtensions.AllVertexItr*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Virgis.GeometryExtensions
    commentId: T:Virgis.GeometryExtensions
    language: CSharp
    name:
      CSharp: GeometryExtensions
      VB: GeometryExtensions
    nameWithType:
      CSharp: GeometryExtensions
      VB: GeometryExtensions
    qualifiedName:
      CSharp: Virgis.GeometryExtensions
      VB: Virgis.GeometryExtensions
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: GeometryExtensions
      path: ''
      startLine: 5125
    summary: "\nExtension Methods to OGR Geometry\n"
    example: []
    syntax:
      content:
        CSharp: public static class GeometryExtensions
        VB: Public Module GeometryExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Virgis.GeometryExtensions.TransformWorld(Geometry)
      commentId: M:Virgis.GeometryExtensions.TransformWorld(Geometry)
      language: CSharp
      name:
        CSharp: TransformWorld(Geometry)
        VB: TransformWorld(Geometry)
      nameWithType:
        CSharp: GeometryExtensions.TransformWorld(Geometry)
        VB: GeometryExtensions.TransformWorld(Geometry)
      qualifiedName:
        CSharp: Virgis.GeometryExtensions.TransformWorld(Geometry)
        VB: Virgis.GeometryExtensions.TransformWorld(Geometry)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: TransformWorld
        path: ''
        startLine: 5132
      summary: "\nCOnvert Geometry to Vector3[] of World Space coordinates taking account of zoom\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector3[] TransformWorld(this Geometry geom)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function TransformWorld(geom As Geometry) As Vector3()
        parameters:
        - id: geom
          type: Geometry
          description: Geometry
        return:
          type: Vector3[]
          description: VEctor3[]
      overload: Virgis.GeometryExtensions.TransformWorld*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.GeometryExtensions.Vector3(Geometry,Vector3[])
      commentId: M:Virgis.GeometryExtensions.Vector3(Geometry,Vector3[])
      language: CSharp
      name:
        CSharp: Vector3(Geometry, Vector3[])
        VB: Vector3(Geometry, Vector3())
      nameWithType:
        CSharp: GeometryExtensions.Vector3(Geometry, Vector3[])
        VB: GeometryExtensions.Vector3(Geometry, Vector3())
      qualifiedName:
        CSharp: Virgis.GeometryExtensions.Vector3(Geometry, Vector3[])
        VB: Virgis.GeometryExtensions.Vector3(Geometry, Vector3())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Vector3
        path: ''
        startLine: 5156
      syntax:
        content:
          CSharp: public static Geometry Vector3(this Geometry geom, Vector3[] points)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Vector3(geom As Geometry, points As Vector3()) As Geometry
        parameters:
        - id: geom
          type: Geometry
        - id: points
          type: Vector3[]
        return:
          type: Geometry
      overload: Virgis.GeometryExtensions.Vector3*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Virgis.PolygonExtensions
    commentId: T:Virgis.PolygonExtensions
    language: CSharp
    name:
      CSharp: PolygonExtensions
      VB: PolygonExtensions
    nameWithType:
      CSharp: PolygonExtensions
      VB: PolygonExtensions
    qualifiedName:
      CSharp: Virgis.PolygonExtensions
      VB: Virgis.PolygonExtensions
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: PolygonExtensions
      path: ''
      startLine: 5164
    syntax:
      content:
        CSharp: public static class PolygonExtensions
        VB: Public Module PolygonExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Virgis.PolygonExtensions.ToPolygon(System.Collections.Generic.List{DCurve3},Frame3f@)
      commentId: M:Virgis.PolygonExtensions.ToPolygon(System.Collections.Generic.List{DCurve3},Frame3f@)
      language: CSharp
      name:
        CSharp: ToPolygon(List<DCurve3>, ref Frame3f)
        VB: ToPolygon(List(Of DCurve3), ByRef Frame3f)
      nameWithType:
        CSharp: PolygonExtensions.ToPolygon(List<DCurve3>, ref Frame3f)
        VB: PolygonExtensions.ToPolygon(List(Of DCurve3), ByRef Frame3f)
      qualifiedName:
        CSharp: Virgis.PolygonExtensions.ToPolygon(System.Collections.Generic.List<DCurve3>, ref Frame3f)
        VB: Virgis.PolygonExtensions.ToPolygon(System.Collections.Generic.List(Of DCurve3), ByRef Frame3f)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ToPolygon
        path: ''
        startLine: 5166
      syntax:
        content:
          CSharp: public static GeneralPolygon2d ToPolygon(this List<DCurve3> list, ref Frame3f frame)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ToPolygon(list As List(Of DCurve3), ByRef frame As Frame3f) As GeneralPolygon2d
        parameters:
        - id: list
          type: System.Collections.Generic.List{DCurve3}
        - id: frame
          type: Frame3f
        return:
          type: GeneralPolygon2d
      overload: Virgis.PolygonExtensions.ToPolygon*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.PolygonExtensions.IsOutside(GeneralPolygon2d,Segment2d)
      commentId: M:Virgis.PolygonExtensions.IsOutside(GeneralPolygon2d,Segment2d)
      language: CSharp
      name:
        CSharp: IsOutside(GeneralPolygon2d, Segment2d)
        VB: IsOutside(GeneralPolygon2d, Segment2d)
      nameWithType:
        CSharp: PolygonExtensions.IsOutside(GeneralPolygon2d, Segment2d)
        VB: PolygonExtensions.IsOutside(GeneralPolygon2d, Segment2d)
      qualifiedName:
        CSharp: Virgis.PolygonExtensions.IsOutside(GeneralPolygon2d, Segment2d)
        VB: Virgis.PolygonExtensions.IsOutside(GeneralPolygon2d, Segment2d)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: IsOutside
        path: ''
        startLine: 5195
      syntax:
        content:
          CSharp: public static bool IsOutside(this GeneralPolygon2d poly, Segment2d seg)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function IsOutside(poly As GeneralPolygon2d, seg As Segment2d) As Boolean
        parameters:
        - id: poly
          type: GeneralPolygon2d
        - id: seg
          type: Segment2d
        return:
          type: System.Boolean
      overload: Virgis.PolygonExtensions.IsOutside*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.PolygonExtensions.BiContains(Polygon2d,Segment2d)
      commentId: M:Virgis.PolygonExtensions.BiContains(Polygon2d,Segment2d)
      language: CSharp
      name:
        CSharp: BiContains(Polygon2d, Segment2d)
        VB: BiContains(Polygon2d, Segment2d)
      nameWithType:
        CSharp: PolygonExtensions.BiContains(Polygon2d, Segment2d)
        VB: PolygonExtensions.BiContains(Polygon2d, Segment2d)
      qualifiedName:
        CSharp: Virgis.PolygonExtensions.BiContains(Polygon2d, Segment2d)
        VB: Virgis.PolygonExtensions.BiContains(Polygon2d, Segment2d)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: BiContains
        path: ''
        startLine: 5214
      syntax:
        content:
          CSharp: public static bool BiContains(this Polygon2d poly, Segment2d seg)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function BiContains(poly As Polygon2d, seg As Segment2d) As Boolean
        parameters:
        - id: poly
          type: Polygon2d
        - id: seg
          type: Segment2d
        return:
          type: System.Boolean
      overload: Virgis.PolygonExtensions.BiContains*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.PolygonExtensions.IsMember(Polygon2d,Segment2d,System.Boolean@)
      commentId: M:Virgis.PolygonExtensions.IsMember(Polygon2d,Segment2d,System.Boolean@)
      language: CSharp
      name:
        CSharp: IsMember(Polygon2d, Segment2d, out Boolean)
        VB: IsMember(Polygon2d, Segment2d, ByRef Boolean)
      nameWithType:
        CSharp: PolygonExtensions.IsMember(Polygon2d, Segment2d, out Boolean)
        VB: PolygonExtensions.IsMember(Polygon2d, Segment2d, ByRef Boolean)
      qualifiedName:
        CSharp: Virgis.PolygonExtensions.IsMember(Polygon2d, Segment2d, out System.Boolean)
        VB: Virgis.PolygonExtensions.IsMember(Polygon2d, Segment2d, ByRef System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: IsMember
        path: ''
        startLine: 5222
      syntax:
        content:
          CSharp: public static bool IsMember(this Polygon2d poly, Segment2d seg, out bool IsOutside)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function IsMember(poly As Polygon2d, seg As Segment2d, ByRef IsOutside As Boolean) As Boolean
        parameters:
        - id: poly
          type: Polygon2d
        - id: seg
          type: Segment2d
        - id: IsOutside
          type: System.Boolean
        return:
          type: System.Boolean
      overload: Virgis.PolygonExtensions.IsMember*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Virgis.DelaunatorExtensions
    commentId: T:Virgis.DelaunatorExtensions
    language: CSharp
    name:
      CSharp: DelaunatorExtensions
      VB: DelaunatorExtensions
    nameWithType:
      CSharp: DelaunatorExtensions
      VB: DelaunatorExtensions
    qualifiedName:
      CSharp: Virgis.DelaunatorExtensions
      VB: Virgis.DelaunatorExtensions
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: DelaunatorExtensions
      path: ''
      startLine: 5233
    syntax:
      content:
        CSharp: public static class DelaunatorExtensions
        VB: Public Module DelaunatorExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Virgis.DelaunatorExtensions.ToPoints(System.Collections.Generic.IEnumerable{Vector2d})
      commentId: M:Virgis.DelaunatorExtensions.ToPoints(System.Collections.Generic.IEnumerable{Vector2d})
      language: CSharp
      name:
        CSharp: ToPoints(IEnumerable<Vector2d>)
        VB: ToPoints(IEnumerable(Of Vector2d))
      nameWithType:
        CSharp: DelaunatorExtensions.ToPoints(IEnumerable<Vector2d>)
        VB: DelaunatorExtensions.ToPoints(IEnumerable(Of Vector2d))
      qualifiedName:
        CSharp: Virgis.DelaunatorExtensions.ToPoints(System.Collections.Generic.IEnumerable<Vector2d>)
        VB: Virgis.DelaunatorExtensions.ToPoints(System.Collections.Generic.IEnumerable(Of Vector2d))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ToPoints
        path: ''
        startLine: 5234
      syntax:
        content:
          CSharp: public static IPoint[] ToPoints(this IEnumerable<Vector2d> vertices)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ToPoints(vertices As IEnumerable(Of Vector2d)) As IPoint()
        parameters:
        - id: vertices
          type: System.Collections.Generic.IEnumerable{Vector2d}
        return:
          type: IPoint[]
      overload: Virgis.DelaunatorExtensions.ToPoints*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.DelaunatorExtensions.ToVectors2d(System.Collections.Generic.IEnumerable{IPoint})
      commentId: M:Virgis.DelaunatorExtensions.ToVectors2d(System.Collections.Generic.IEnumerable{IPoint})
      language: CSharp
      name:
        CSharp: ToVectors2d(IEnumerable<IPoint>)
        VB: ToVectors2d(IEnumerable(Of IPoint))
      nameWithType:
        CSharp: DelaunatorExtensions.ToVectors2d(IEnumerable<IPoint>)
        VB: DelaunatorExtensions.ToVectors2d(IEnumerable(Of IPoint))
      qualifiedName:
        CSharp: Virgis.DelaunatorExtensions.ToVectors2d(System.Collections.Generic.IEnumerable<IPoint>)
        VB: Virgis.DelaunatorExtensions.ToVectors2d(System.Collections.Generic.IEnumerable(Of IPoint))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ToVectors2d
        path: ''
        startLine: 5236
      syntax:
        content:
          CSharp: public static Vector2d[] ToVectors2d(this IEnumerable<IPoint> points)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ToVectors2d(points As IEnumerable(Of IPoint)) As Vector2d()
        parameters:
        - id: points
          type: System.Collections.Generic.IEnumerable{IPoint}
        return:
          type: Vector2d[]
      overload: Virgis.DelaunatorExtensions.ToVectors2d*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.DelaunatorExtensions.ToVector2d(IPoint)
      commentId: M:Virgis.DelaunatorExtensions.ToVector2d(IPoint)
      language: CSharp
      name:
        CSharp: ToVector2d(IPoint)
        VB: ToVector2d(IPoint)
      nameWithType:
        CSharp: DelaunatorExtensions.ToVector2d(IPoint)
        VB: DelaunatorExtensions.ToVector2d(IPoint)
      qualifiedName:
        CSharp: Virgis.DelaunatorExtensions.ToVector2d(IPoint)
        VB: Virgis.DelaunatorExtensions.ToVector2d(IPoint)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ToVector2d
        path: ''
        startLine: 5238
      syntax:
        content:
          CSharp: public static Vector2d ToVector2d(this IPoint point)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ToVector2d(point As IPoint) As Vector2d
        parameters:
        - id: point
          type: IPoint
        return:
          type: Vector2d
      overload: Virgis.DelaunatorExtensions.ToVector2d*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.DelaunatorExtensions.CetIncenter(ITriangle)
      commentId: M:Virgis.DelaunatorExtensions.CetIncenter(ITriangle)
      language: CSharp
      name:
        CSharp: CetIncenter(ITriangle)
        VB: CetIncenter(ITriangle)
      nameWithType:
        CSharp: DelaunatorExtensions.CetIncenter(ITriangle)
        VB: DelaunatorExtensions.CetIncenter(ITriangle)
      qualifiedName:
        CSharp: Virgis.DelaunatorExtensions.CetIncenter(ITriangle)
        VB: Virgis.DelaunatorExtensions.CetIncenter(ITriangle)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CetIncenter
        path: ''
        startLine: 5240
      syntax:
        content:
          CSharp: public static Vector2d CetIncenter(this ITriangle tri)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function CetIncenter(tri As ITriangle) As Vector2d
        parameters:
        - id: tri
          type: ITriangle
        return:
          type: Vector2d
      overload: Virgis.DelaunatorExtensions.CetIncenter*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Virgis.Segment2dExtensions
    commentId: T:Virgis.Segment2dExtensions
    language: CSharp
    name:
      CSharp: Segment2dExtensions
      VB: Segment2dExtensions
    nameWithType:
      CSharp: Segment2dExtensions
      VB: Segment2dExtensions
    qualifiedName:
      CSharp: Virgis.Segment2dExtensions
      VB: Virgis.Segment2dExtensions
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: Segment2dExtensions
      path: ''
      startLine: 5254
    syntax:
      content:
        CSharp: public static class Segment2dExtensions
        VB: Public Module Segment2dExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Virgis.Segment2dExtensions.BiEquals(Segment2d,Segment2d)
      commentId: M:Virgis.Segment2dExtensions.BiEquals(Segment2d,Segment2d)
      language: CSharp
      name:
        CSharp: BiEquals(Segment2d, Segment2d)
        VB: BiEquals(Segment2d, Segment2d)
      nameWithType:
        CSharp: Segment2dExtensions.BiEquals(Segment2d, Segment2d)
        VB: Segment2dExtensions.BiEquals(Segment2d, Segment2d)
      qualifiedName:
        CSharp: Virgis.Segment2dExtensions.BiEquals(Segment2d, Segment2d)
        VB: Virgis.Segment2dExtensions.BiEquals(Segment2d, Segment2d)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: BiEquals
        path: ''
        startLine: 5255
      syntax:
        content:
          CSharp: public static bool BiEquals(this Segment2d self, Segment2d seg)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function BiEquals(self As Segment2d, seg As Segment2d) As Boolean
        parameters:
        - id: self
          type: Segment2d
        - id: seg
          type: Segment2d
        return:
          type: System.Boolean
      overload: Virgis.Segment2dExtensions.BiEquals*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Virgis.MeshExtensions
    commentId: T:Virgis.MeshExtensions
    language: CSharp
    name:
      CSharp: MeshExtensions
      VB: MeshExtensions
    nameWithType:
      CSharp: MeshExtensions
      VB: MeshExtensions
    qualifiedName:
      CSharp: Virgis.MeshExtensions
      VB: Virgis.MeshExtensions
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: MeshExtensions
      path: ''
      startLine: 5260
    syntax:
      content:
        CSharp: public static class MeshExtensions
        VB: Public Module MeshExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Virgis.MeshExtensions.ToMesh(DMesh3)
      commentId: M:Virgis.MeshExtensions.ToMesh(DMesh3)
      language: CSharp
      name:
        CSharp: ToMesh(DMesh3)
        VB: ToMesh(DMesh3)
      nameWithType:
        CSharp: MeshExtensions.ToMesh(DMesh3)
        VB: MeshExtensions.ToMesh(DMesh3)
      qualifiedName:
        CSharp: Virgis.MeshExtensions.ToMesh(DMesh3)
        VB: Virgis.MeshExtensions.ToMesh(DMesh3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ToMesh
        path: ''
        startLine: 5267
      summary: "\nConverts g3.DMesh3 to UnityEngine.Mesh\n"
      example: []
      syntax:
        content:
          CSharp: public static Mesh ToMesh(this DMesh3 dMesh)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ToMesh(dMesh As DMesh3) As Mesh
        parameters:
        - id: dMesh
          type: DMesh3
          description: Dmesh3
        return:
          type: Mesh
          description: UnityEngine.Mesh
      overload: Virgis.MeshExtensions.ToMesh*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.MeshExtensions.Transform(DMesh3,SpatialReference)
      commentId: M:Virgis.MeshExtensions.Transform(DMesh3,SpatialReference)
      language: CSharp
      name:
        CSharp: Transform(DMesh3, SpatialReference)
        VB: Transform(DMesh3, SpatialReference)
      nameWithType:
        CSharp: MeshExtensions.Transform(DMesh3, SpatialReference)
        VB: MeshExtensions.Transform(DMesh3, SpatialReference)
      qualifiedName:
        CSharp: Virgis.MeshExtensions.Transform(DMesh3, SpatialReference)
        VB: Virgis.MeshExtensions.Transform(DMesh3, SpatialReference)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Transform
        path: ''
        startLine: 5314
      syntax:
        content:
          CSharp: public static bool Transform(this DMesh3 dMesh, SpatialReference to)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Transform(dMesh As DMesh3, to As SpatialReference) As Boolean
        parameters:
        - id: dMesh
          type: DMesh3
        - id: to
          type: SpatialReference
        return:
          type: System.Boolean
      overload: Virgis.MeshExtensions.Transform*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.MeshExtensions.CalculateUVs(DMesh3)
      commentId: M:Virgis.MeshExtensions.CalculateUVs(DMesh3)
      language: CSharp
      name:
        CSharp: CalculateUVs(DMesh3)
        VB: CalculateUVs(DMesh3)
      nameWithType:
        CSharp: MeshExtensions.CalculateUVs(DMesh3)
        VB: MeshExtensions.CalculateUVs(DMesh3)
      qualifiedName:
        CSharp: Virgis.MeshExtensions.CalculateUVs(DMesh3)
        VB: Virgis.MeshExtensions.CalculateUVs(DMesh3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CalculateUVs
        path: ''
        startLine: 5357
      syntax:
        content:
          CSharp: public static void CalculateUVs(this DMesh3 dMesh)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub CalculateUVs(dMesh As DMesh3)
        parameters:
        - id: dMesh
          type: DMesh3
      overload: Virgis.MeshExtensions.CalculateUVs*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Virgis.VirgisVectorExtensions
    commentId: T:Virgis.VirgisVectorExtensions
    language: CSharp
    name:
      CSharp: VirgisVectorExtensions
      VB: VirgisVectorExtensions
    nameWithType:
      CSharp: VirgisVectorExtensions
      VB: VirgisVectorExtensions
    qualifiedName:
      CSharp: Virgis.VirgisVectorExtensions
      VB: Virgis.VirgisVectorExtensions
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: VirgisVectorExtensions
      path: ''
      startLine: 5379
    syntax:
      content:
        CSharp: public static class VirgisVectorExtensions
        VB: Public Module VirgisVectorExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Virgis.VirgisVectorExtensions.Round(Vector3,System.Single)
      commentId: M:Virgis.VirgisVectorExtensions.Round(Vector3,System.Single)
      language: CSharp
      name:
        CSharp: Round(Vector3, Single)
        VB: Round(Vector3, Single)
      nameWithType:
        CSharp: VirgisVectorExtensions.Round(Vector3, Single)
        VB: VirgisVectorExtensions.Round(Vector3, Single)
      qualifiedName:
        CSharp: Virgis.VirgisVectorExtensions.Round(Vector3, System.Single)
        VB: Virgis.VirgisVectorExtensions.Round(Vector3, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Round
        path: ''
        startLine: 5387
      summary: "\nRounds a Vector3 in 3d to the nearest value divisible by roundTo\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector3 Round(this Vector3 vector3, float roundTo = 0.1F)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Round(vector3 As Vector3, roundTo As Single = 0.1F) As Vector3
        parameters:
        - id: vector3
          type: Vector3
          description: Vector 3 value
        - id: roundTo
          type: System.Single
          description: rounding size
        return:
          type: Vector3
          description: Vector3 rounded value
      overload: Virgis.VirgisVectorExtensions.Round*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Virgis.FeatureExtensions
    commentId: T:Virgis.FeatureExtensions
    language: CSharp
    name:
      CSharp: FeatureExtensions
      VB: FeatureExtensions
    nameWithType:
      CSharp: FeatureExtensions
      VB: FeatureExtensions
    qualifiedName:
      CSharp: Virgis.FeatureExtensions
      VB: Virgis.FeatureExtensions
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: FeatureExtensions
      path: ''
      startLine: 5396
    syntax:
      content:
        CSharp: public static class FeatureExtensions
        VB: Public Module FeatureExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Virgis.FeatureExtensions.ContainsKey(Feature,System.String)
      commentId: M:Virgis.FeatureExtensions.ContainsKey(Feature,System.String)
      language: CSharp
      name:
        CSharp: ContainsKey(Feature, String)
        VB: ContainsKey(Feature, String)
      nameWithType:
        CSharp: FeatureExtensions.ContainsKey(Feature, String)
        VB: FeatureExtensions.ContainsKey(Feature, String)
      qualifiedName:
        CSharp: Virgis.FeatureExtensions.ContainsKey(Feature, System.String)
        VB: Virgis.FeatureExtensions.ContainsKey(Feature, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ContainsKey
        path: ''
        startLine: 5398
      syntax:
        content:
          CSharp: public static bool ContainsKey(this Feature feature, string name)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ContainsKey(feature As Feature, name As String) As Boolean
        parameters:
        - id: feature
          type: Feature
        - id: name
          type: System.String
        return:
          type: System.Boolean
      overload: Virgis.FeatureExtensions.ContainsKey*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.FeatureExtensions.Get(Feature,System.String)
      commentId: M:Virgis.FeatureExtensions.Get(Feature,System.String)
      language: CSharp
      name:
        CSharp: Get(Feature, String)
        VB: Get(Feature, String)
      nameWithType:
        CSharp: FeatureExtensions.Get(Feature, String)
        VB: FeatureExtensions.Get(Feature, String)
      qualifiedName:
        CSharp: Virgis.FeatureExtensions.Get(Feature, System.String)
        VB: Virgis.FeatureExtensions.Get(Feature, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Get
        path: ''
        startLine: 5411
      syntax:
        content:
          CSharp: public static object Get(this Feature feature, string name)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Get(feature As Feature, name As String) As Object
        parameters:
        - id: feature
          type: Feature
        - id: name
          type: System.String
        return:
          type: System.Object
      overload: Virgis.FeatureExtensions.Get*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.FeatureExtensions.GetAll(Feature)
      commentId: M:Virgis.FeatureExtensions.GetAll(Feature)
      language: CSharp
      name:
        CSharp: GetAll(Feature)
        VB: GetAll(Feature)
      nameWithType:
        CSharp: FeatureExtensions.GetAll(Feature)
        VB: FeatureExtensions.GetAll(Feature)
      qualifiedName:
        CSharp: Virgis.FeatureExtensions.GetAll(Feature)
        VB: Virgis.FeatureExtensions.GetAll(Feature)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetAll
        path: ''
        startLine: 5434
      syntax:
        content:
          CSharp: public static Dictionary<string, object> GetAll(this Feature feature)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetAll(feature As Feature) As Dictionary(Of String, Object)
        parameters:
        - id: feature
          type: Feature
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.Object}
      overload: Virgis.FeatureExtensions.GetAll*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.FeatureExtensions.Set(Feature,System.String,System.Double)
      commentId: M:Virgis.FeatureExtensions.Set(Feature,System.String,System.Double)
      language: CSharp
      name:
        CSharp: Set(Feature, String, Double)
        VB: Set(Feature, String, Double)
      nameWithType:
        CSharp: FeatureExtensions.Set(Feature, String, Double)
        VB: FeatureExtensions.Set(Feature, String, Double)
      qualifiedName:
        CSharp: Virgis.FeatureExtensions.Set(Feature, System.String, System.Double)
        VB: Virgis.FeatureExtensions.Set(Feature, System.String, System.Double)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Set
        path: ''
        startLine: 5460
      syntax:
        content:
          CSharp: public static void Set(this Feature feature, string name, double value)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub Set(feature As Feature, name As String, value As Double)
        parameters:
        - id: feature
          type: Feature
        - id: name
          type: System.String
        - id: value
          type: System.Double
      overload: Virgis.FeatureExtensions.Set*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.FeatureExtensions.Set(Feature,System.String,System.String)
      commentId: M:Virgis.FeatureExtensions.Set(Feature,System.String,System.String)
      language: CSharp
      name:
        CSharp: Set(Feature, String, String)
        VB: Set(Feature, String, String)
      nameWithType:
        CSharp: FeatureExtensions.Set(Feature, String, String)
        VB: FeatureExtensions.Set(Feature, String, String)
      qualifiedName:
        CSharp: Virgis.FeatureExtensions.Set(Feature, System.String, System.String)
        VB: Virgis.FeatureExtensions.Set(Feature, System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Set
        path: ''
        startLine: 5467
      syntax:
        content:
          CSharp: public static void Set(this Feature feature, string name, string value)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub Set(feature As Feature, name As String, value As String)
        parameters:
        - id: feature
          type: Feature
        - id: name
          type: System.String
        - id: value
          type: System.String
      overload: Virgis.FeatureExtensions.Set*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.FeatureExtensions.Set(Feature,System.String,System.Int32)
      commentId: M:Virgis.FeatureExtensions.Set(Feature,System.String,System.Int32)
      language: CSharp
      name:
        CSharp: Set(Feature, String, Int32)
        VB: Set(Feature, String, Int32)
      nameWithType:
        CSharp: FeatureExtensions.Set(Feature, String, Int32)
        VB: FeatureExtensions.Set(Feature, String, Int32)
      qualifiedName:
        CSharp: Virgis.FeatureExtensions.Set(Feature, System.String, System.Int32)
        VB: Virgis.FeatureExtensions.Set(Feature, System.String, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Set
        path: ''
        startLine: 5474
      syntax:
        content:
          CSharp: public static void Set(this Feature feature, string name, int value)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub Set(feature As Feature, name As String, value As Integer)
        parameters:
        - id: feature
          type: Feature
        - id: name
          type: System.String
        - id: value
          type: System.Int32
      overload: Virgis.FeatureExtensions.Set*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Virgis.VertexLookup
    commentId: T:Virgis.VertexLookup
    language: CSharp
    name:
      CSharp: VertexLookup
      VB: VertexLookup
    nameWithType:
      CSharp: VertexLookup
      VB: VertexLookup
    qualifiedName:
      CSharp: Virgis.VertexLookup
      VB: Virgis.VertexLookup
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: VertexLookup
      path: ''
      startLine: 5485
    summary: "\nStructure used to hold avertex for an arbitrary shape and to calculate equality\n"
    example: []
    syntax:
      content:
        CSharp: public class VertexLookup
        VB: Public Class VertexLookup
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.VertexLookup.Id
      commentId: F:Virgis.VertexLookup.Id
      language: CSharp
      name:
        CSharp: Id
        VB: Id
      nameWithType:
        CSharp: VertexLookup.Id
        VB: VertexLookup.Id
      qualifiedName:
        CSharp: Virgis.VertexLookup.Id
        VB: Virgis.VertexLookup.Id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Id
        path: ''
        startLine: 5487
      syntax:
        content:
          CSharp: public Guid Id
          VB: Public Id As Guid
        return:
          type: System.Guid
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VertexLookup.Vertex
      commentId: F:Virgis.VertexLookup.Vertex
      language: CSharp
      name:
        CSharp: Vertex
        VB: Vertex
      nameWithType:
        CSharp: VertexLookup.Vertex
        VB: VertexLookup.Vertex
      qualifiedName:
        CSharp: Virgis.VertexLookup.Vertex
        VB: Virgis.VertexLookup.Vertex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Vertex
        path: ''
        startLine: 5488
      syntax:
        content:
          CSharp: public int Vertex
          VB: Public Vertex As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VertexLookup.isVertex
      commentId: F:Virgis.VertexLookup.isVertex
      language: CSharp
      name:
        CSharp: isVertex
        VB: isVertex
      nameWithType:
        CSharp: VertexLookup.isVertex
        VB: VertexLookup.isVertex
      qualifiedName:
        CSharp: Virgis.VertexLookup.isVertex
        VB: Virgis.VertexLookup.isVertex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: isVertex
        path: ''
        startLine: 5489
      syntax:
        content:
          CSharp: public bool isVertex
          VB: Public isVertex As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VertexLookup.Com
      commentId: F:Virgis.VertexLookup.Com
      language: CSharp
      name:
        CSharp: Com
        VB: Com
      nameWithType:
        CSharp: VertexLookup.Com
        VB: VertexLookup.Com
      qualifiedName:
        CSharp: Virgis.VertexLookup.Com
        VB: Virgis.VertexLookup.Com
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Com
        path: ''
        startLine: 5490
      syntax:
        content:
          CSharp: public VirgisFeature Com
          VB: Public Com As VirgisFeature
        return:
          type: Virgis.VirgisFeature
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VertexLookup.Line
      commentId: F:Virgis.VertexLookup.Line
      language: CSharp
      name:
        CSharp: Line
        VB: Line
      nameWithType:
        CSharp: VertexLookup.Line
        VB: VertexLookup.Line
      qualifiedName:
        CSharp: Virgis.VertexLookup.Line
        VB: Virgis.VertexLookup.Line
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Line
        path: ''
        startLine: 5491
      syntax:
        content:
          CSharp: public LineSegment Line
          VB: Public Line As LineSegment
        return:
          type: Virgis.LineSegment
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VertexLookup.pVertex
      commentId: F:Virgis.VertexLookup.pVertex
      language: CSharp
      name:
        CSharp: pVertex
        VB: pVertex
      nameWithType:
        CSharp: VertexLookup.pVertex
        VB: VertexLookup.pVertex
      qualifiedName:
        CSharp: Virgis.VertexLookup.pVertex
        VB: Virgis.VertexLookup.pVertex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: pVertex
        path: ''
        startLine: 5492
      syntax:
        content:
          CSharp: public int pVertex
          VB: Public pVertex As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VertexLookup.Equals(System.Object)
      commentId: M:Virgis.VertexLookup.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: VertexLookup.Equals(Object)
        VB: VertexLookup.Equals(Object)
      qualifiedName:
        CSharp: Virgis.VertexLookup.Equals(System.Object)
        VB: Virgis.VertexLookup.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Equals
        path: ''
        startLine: 5494
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
        return:
          type: System.Boolean
      overload: Virgis.VertexLookup.Equals*
      overridden: System.Object.Equals(System.Object)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.VertexLookup.GetHashCode
      commentId: M:Virgis.VertexLookup.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: VertexLookup.GetHashCode()
        VB: VertexLookup.GetHashCode()
      qualifiedName:
        CSharp: Virgis.VertexLookup.GetHashCode()
        VB: Virgis.VertexLookup.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetHashCode
        path: ''
        startLine: 5501
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Virgis.VertexLookup.GetHashCode*
      overridden: System.Object.GetHashCode
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.VertexLookup.Equals(Virgis.VertexLookup)
      commentId: M:Virgis.VertexLookup.Equals(Virgis.VertexLookup)
      language: CSharp
      name:
        CSharp: Equals(VertexLookup)
        VB: Equals(VertexLookup)
      nameWithType:
        CSharp: VertexLookup.Equals(VertexLookup)
        VB: VertexLookup.Equals(VertexLookup)
      qualifiedName:
        CSharp: Virgis.VertexLookup.Equals(Virgis.VertexLookup)
        VB: Virgis.VertexLookup.Equals(Virgis.VertexLookup)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Equals
        path: ''
        startLine: 5505
      syntax:
        content:
          CSharp: public bool Equals(VertexLookup other)
          VB: Public Function Equals(other As VertexLookup) As Boolean
        parameters:
        - id: other
          type: Virgis.VertexLookup
        return:
          type: System.Boolean
      overload: Virgis.VertexLookup.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VertexLookup.CompareTo(Virgis.VertexLookup)
      commentId: M:Virgis.VertexLookup.CompareTo(Virgis.VertexLookup)
      language: CSharp
      name:
        CSharp: CompareTo(VertexLookup)
        VB: CompareTo(VertexLookup)
      nameWithType:
        CSharp: VertexLookup.CompareTo(VertexLookup)
        VB: VertexLookup.CompareTo(VertexLookup)
      qualifiedName:
        CSharp: Virgis.VertexLookup.CompareTo(Virgis.VertexLookup)
        VB: Virgis.VertexLookup.CompareTo(Virgis.VertexLookup)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CompareTo
        path: ''
        startLine: 5511
      syntax:
        content:
          CSharp: public int CompareTo(VertexLookup other)
          VB: Public Function CompareTo(other As VertexLookup) As Integer
        parameters:
        - id: other
          type: Virgis.VertexLookup
        return:
          type: System.Int32
      overload: Virgis.VertexLookup.CompareTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.IVirgisEntity
    commentId: T:Virgis.IVirgisEntity
    language: CSharp
    name:
      CSharp: IVirgisEntity
      VB: IVirgisEntity
    nameWithType:
      CSharp: IVirgisEntity
      VB: IVirgisEntity
    qualifiedName:
      CSharp: Virgis.IVirgisEntity
      VB: Virgis.IVirgisEntity
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: IVirgisEntity
      path: ''
      startLine: 5536
    summary: "\nAbstract parent for all in game entities\n"
    example: []
    syntax:
      content:
        CSharp: public interface IVirgisEntity
        VB: Public Interface IVirgisEntity
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Virgis.IVirgisEntity.Selected(Virgis.SelectionType)
      commentId: M:Virgis.IVirgisEntity.Selected(Virgis.SelectionType)
      language: CSharp
      name:
        CSharp: Selected(SelectionType)
        VB: Selected(SelectionType)
      nameWithType:
        CSharp: IVirgisEntity.Selected(SelectionType)
        VB: IVirgisEntity.Selected(SelectionType)
      qualifiedName:
        CSharp: Virgis.IVirgisEntity.Selected(Virgis.SelectionType)
        VB: Virgis.IVirgisEntity.Selected(Virgis.SelectionType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Selected
        path: ''
        startLine: 5538
      syntax:
        content:
          CSharp: void Selected(SelectionType button)
          VB: Sub Selected(button As SelectionType)
        parameters:
        - id: button
          type: Virgis.SelectionType
      overload: Virgis.IVirgisEntity.Selected*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisEntity.UnSelected(Virgis.SelectionType)
      commentId: M:Virgis.IVirgisEntity.UnSelected(Virgis.SelectionType)
      language: CSharp
      name:
        CSharp: UnSelected(SelectionType)
        VB: UnSelected(SelectionType)
      nameWithType:
        CSharp: IVirgisEntity.UnSelected(SelectionType)
        VB: IVirgisEntity.UnSelected(SelectionType)
      qualifiedName:
        CSharp: Virgis.IVirgisEntity.UnSelected(Virgis.SelectionType)
        VB: Virgis.IVirgisEntity.UnSelected(Virgis.SelectionType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: UnSelected
        path: ''
        startLine: 5539
      syntax:
        content:
          CSharp: void UnSelected(SelectionType button)
          VB: Sub UnSelected(button As SelectionType)
        parameters:
        - id: button
          type: Virgis.SelectionType
      overload: Virgis.IVirgisEntity.UnSelected*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisEntity.GetId
      commentId: M:Virgis.IVirgisEntity.GetId
      language: CSharp
      name:
        CSharp: GetId()
        VB: GetId()
      nameWithType:
        CSharp: IVirgisEntity.GetId()
        VB: IVirgisEntity.GetId()
      qualifiedName:
        CSharp: Virgis.IVirgisEntity.GetId()
        VB: Virgis.IVirgisEntity.GetId()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetId
        path: ''
        startLine: 5540
      syntax:
        content:
          CSharp: Guid GetId()
          VB: Function GetId As Guid
        return:
          type: System.Guid
      overload: Virgis.IVirgisEntity.GetId*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisEntity.GetClosest(Vector3,System.Guid[])
      commentId: M:Virgis.IVirgisEntity.GetClosest(Vector3,System.Guid[])
      language: CSharp
      name:
        CSharp: GetClosest(Vector3, Guid[])
        VB: GetClosest(Vector3, Guid())
      nameWithType:
        CSharp: IVirgisEntity.GetClosest(Vector3, Guid[])
        VB: IVirgisEntity.GetClosest(Vector3, Guid())
      qualifiedName:
        CSharp: Virgis.IVirgisEntity.GetClosest(Vector3, System.Guid[])
        VB: Virgis.IVirgisEntity.GetClosest(Vector3, System.Guid())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetClosest
        path: ''
        startLine: 5541
      syntax:
        content:
          CSharp: VirgisFeature GetClosest(Vector3 coords, Guid[] exclude)
          VB: Function GetClosest(coords As Vector3, exclude As Guid()) As VirgisFeature
        parameters:
        - id: coords
          type: Vector3
        - id: exclude
          type: System.Guid[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.IVirgisEntity.GetClosest*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisEntity.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.IVirgisEntity.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: IVirgisEntity.MoveAxis(MoveArgs)
        VB: IVirgisEntity.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.IVirgisEntity.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.IVirgisEntity.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 5542
      syntax:
        content:
          CSharp: void MoveAxis(MoveArgs args)
          VB: Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.IVirgisEntity.MoveAxis*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisEntity.Translate(Virgis.MoveArgs)
      commentId: M:Virgis.IVirgisEntity.Translate(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Translate(MoveArgs)
        VB: Translate(MoveArgs)
      nameWithType:
        CSharp: IVirgisEntity.Translate(MoveArgs)
        VB: IVirgisEntity.Translate(MoveArgs)
      qualifiedName:
        CSharp: Virgis.IVirgisEntity.Translate(Virgis.MoveArgs)
        VB: Virgis.IVirgisEntity.Translate(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Translate
        path: ''
        startLine: 5543
      syntax:
        content:
          CSharp: void Translate(MoveArgs args)
          VB: Sub Translate(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.IVirgisEntity.Translate*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisEntity.MoveTo(Virgis.MoveArgs)
      commentId: M:Virgis.IVirgisEntity.MoveTo(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveTo(MoveArgs)
        VB: MoveTo(MoveArgs)
      nameWithType:
        CSharp: IVirgisEntity.MoveTo(MoveArgs)
        VB: IVirgisEntity.MoveTo(MoveArgs)
      qualifiedName:
        CSharp: Virgis.IVirgisEntity.MoveTo(Virgis.MoveArgs)
        VB: Virgis.IVirgisEntity.MoveTo(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveTo
        path: ''
        startLine: 5544
      syntax:
        content:
          CSharp: void MoveTo(MoveArgs args)
          VB: Sub MoveTo(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.IVirgisEntity.MoveTo*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisEntity.VertexMove(Virgis.MoveArgs)
      commentId: M:Virgis.IVirgisEntity.VertexMove(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: VertexMove(MoveArgs)
        VB: VertexMove(MoveArgs)
      nameWithType:
        CSharp: IVirgisEntity.VertexMove(MoveArgs)
        VB: IVirgisEntity.VertexMove(MoveArgs)
      qualifiedName:
        CSharp: Virgis.IVirgisEntity.VertexMove(Virgis.MoveArgs)
        VB: Virgis.IVirgisEntity.VertexMove(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: VertexMove
        path: ''
        startLine: 5545
      syntax:
        content:
          CSharp: void VertexMove(MoveArgs args)
          VB: Sub VertexMove(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.IVirgisEntity.VertexMove*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisEntity.GetLayer
      commentId: M:Virgis.IVirgisEntity.GetLayer
      language: CSharp
      name:
        CSharp: GetLayer()
        VB: GetLayer()
      nameWithType:
        CSharp: IVirgisEntity.GetLayer()
        VB: IVirgisEntity.GetLayer()
      qualifiedName:
        CSharp: Virgis.IVirgisEntity.GetLayer()
        VB: Virgis.IVirgisEntity.GetLayer()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetLayer
        path: ''
        startLine: 5546
      syntax:
        content:
          CSharp: VirgisLayer GetLayer()
          VB: Function GetLayer As VirgisLayer
        return:
          type: Virgis.VirgisLayer
      overload: Virgis.IVirgisEntity.GetLayer*
      modifiers:
        CSharp: []
        VB: []
  - id: Virgis.IVirgisFeature
    commentId: T:Virgis.IVirgisFeature
    language: CSharp
    name:
      CSharp: IVirgisFeature
      VB: IVirgisFeature
    nameWithType:
      CSharp: IVirgisFeature
      VB: IVirgisFeature
    qualifiedName:
      CSharp: Virgis.IVirgisFeature
      VB: Virgis.IVirgisFeature
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: IVirgisFeature
      path: ''
      startLine: 5552
    summary: "\nAbstract Parent for all symbology relevant in game entities\n"
    example: []
    syntax:
      content:
        CSharp: 'public interface IVirgisFeature : IVirgisEntity'
        VB: >-
          Public Interface IVirgisFeature

              Inherits IVirgisEntity
    inheritedMembers:
    - Virgis.IVirgisEntity.Selected(Virgis.SelectionType)
    - Virgis.IVirgisEntity.UnSelected(Virgis.SelectionType)
    - Virgis.IVirgisEntity.GetId
    - Virgis.IVirgisEntity.GetClosest(Vector3,System.Guid[])
    - Virgis.IVirgisEntity.MoveAxis(Virgis.MoveArgs)
    - Virgis.IVirgisEntity.Translate(Virgis.MoveArgs)
    - Virgis.IVirgisEntity.MoveTo(Virgis.MoveArgs)
    - Virgis.IVirgisEntity.VertexMove(Virgis.MoveArgs)
    - Virgis.IVirgisEntity.GetLayer
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Virgis.IVirgisFeature.SetMaterial(Material,Material)
      commentId: M:Virgis.IVirgisFeature.SetMaterial(Material,Material)
      language: CSharp
      name:
        CSharp: SetMaterial(Material, Material)
        VB: SetMaterial(Material, Material)
      nameWithType:
        CSharp: IVirgisFeature.SetMaterial(Material, Material)
        VB: IVirgisFeature.SetMaterial(Material, Material)
      qualifiedName:
        CSharp: Virgis.IVirgisFeature.SetMaterial(Material, Material)
        VB: Virgis.IVirgisFeature.SetMaterial(Material, Material)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetMaterial
        path: ''
        startLine: 5554
      syntax:
        content:
          CSharp: void SetMaterial(Material mainMat, Material selectedMat)
          VB: Sub SetMaterial(mainMat As Material, selectedMat As Material)
        parameters:
        - id: mainMat
          type: Material
        - id: selectedMat
          type: Material
      overload: Virgis.IVirgisFeature.SetMaterial*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisFeature.AddVertex(Vector3)
      commentId: M:Virgis.IVirgisFeature.AddVertex(Vector3)
      language: CSharp
      name:
        CSharp: AddVertex(Vector3)
        VB: AddVertex(Vector3)
      nameWithType:
        CSharp: IVirgisFeature.AddVertex(Vector3)
        VB: IVirgisFeature.AddVertex(Vector3)
      qualifiedName:
        CSharp: Virgis.IVirgisFeature.AddVertex(Vector3)
        VB: Virgis.IVirgisFeature.AddVertex(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AddVertex
        path: ''
        startLine: 5556
      syntax:
        content:
          CSharp: VirgisFeature AddVertex(Vector3 position)
          VB: Function AddVertex(position As Vector3) As VirgisFeature
        parameters:
        - id: position
          type: Vector3
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.IVirgisFeature.AddVertex*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisFeature.RemoveVertex(Virgis.VirgisFeature)
      commentId: M:Virgis.IVirgisFeature.RemoveVertex(Virgis.VirgisFeature)
      language: CSharp
      name:
        CSharp: RemoveVertex(VirgisFeature)
        VB: RemoveVertex(VirgisFeature)
      nameWithType:
        CSharp: IVirgisFeature.RemoveVertex(VirgisFeature)
        VB: IVirgisFeature.RemoveVertex(VirgisFeature)
      qualifiedName:
        CSharp: Virgis.IVirgisFeature.RemoveVertex(Virgis.VirgisFeature)
        VB: Virgis.IVirgisFeature.RemoveVertex(Virgis.VirgisFeature)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: RemoveVertex
        path: ''
        startLine: 5557
      syntax:
        content:
          CSharp: void RemoveVertex(VirgisFeature vertex)
          VB: Sub RemoveVertex(vertex As VirgisFeature)
        parameters:
        - id: vertex
          type: Virgis.VirgisFeature
      overload: Virgis.IVirgisFeature.RemoveVertex*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisFeature.GetGeometry``1
      commentId: M:Virgis.IVirgisFeature.GetGeometry``1
      language: CSharp
      name:
        CSharp: GetGeometry<T>()
        VB: GetGeometry(Of T)()
      nameWithType:
        CSharp: IVirgisFeature.GetGeometry<T>()
        VB: IVirgisFeature.GetGeometry(Of T)()
      qualifiedName:
        CSharp: Virgis.IVirgisFeature.GetGeometry<T>()
        VB: Virgis.IVirgisFeature.GetGeometry(Of T)()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetGeometry
        path: ''
        startLine: 5558
      syntax:
        content:
          CSharp: T GetGeometry<T>()
          VB: Function GetGeometry(Of T) As T
        typeParameters:
        - id: T
        return:
          type: '{T}'
      overload: Virgis.IVirgisFeature.GetGeometry*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisFeature.GetMetadata
      commentId: M:Virgis.IVirgisFeature.GetMetadata
      language: CSharp
      name:
        CSharp: GetMetadata()
        VB: GetMetadata()
      nameWithType:
        CSharp: IVirgisFeature.GetMetadata()
        VB: IVirgisFeature.GetMetadata()
      qualifiedName:
        CSharp: Virgis.IVirgisFeature.GetMetadata()
        VB: Virgis.IVirgisFeature.GetMetadata()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetMetadata
        path: ''
        startLine: 5559
      syntax:
        content:
          CSharp: Dictionary<string, object> GetMetadata()
          VB: Function GetMetadata As Dictionary(Of String, Object)
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.Object}
      overload: Virgis.IVirgisFeature.GetMetadata*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisFeature.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
      commentId: M:Virgis.IVirgisFeature.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
      language: CSharp
      name:
        CSharp: SetMetadata(Dictionary<String, Object>)
        VB: SetMetadata(Dictionary(Of String, Object))
      nameWithType:
        CSharp: IVirgisFeature.SetMetadata(Dictionary<String, Object>)
        VB: IVirgisFeature.SetMetadata(Dictionary(Of String, Object))
      qualifiedName:
        CSharp: Virgis.IVirgisFeature.SetMetadata(System.Collections.Generic.Dictionary<System.String, System.Object>)
        VB: Virgis.IVirgisFeature.SetMetadata(System.Collections.Generic.Dictionary(Of System.String, System.Object))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetMetadata
        path: ''
        startLine: 5560
      syntax:
        content:
          CSharp: void SetMetadata(Dictionary<string, object> meta)
          VB: Sub SetMetadata(meta As Dictionary(Of String, Object))
        parameters:
        - id: meta
          type: System.Collections.Generic.Dictionary{System.String,System.Object}
      overload: Virgis.IVirgisFeature.SetMetadata*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisFeature.Hover
      commentId: M:Virgis.IVirgisFeature.Hover
      language: CSharp
      name:
        CSharp: Hover()
        VB: Hover()
      nameWithType:
        CSharp: IVirgisFeature.Hover()
        VB: IVirgisFeature.Hover()
      qualifiedName:
        CSharp: Virgis.IVirgisFeature.Hover()
        VB: Virgis.IVirgisFeature.Hover()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Hover
        path: ''
        startLine: 5562
      syntax:
        content:
          CSharp: void Hover()
          VB: Sub Hover
      overload: Virgis.IVirgisFeature.Hover*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisFeature.UnHover
      commentId: M:Virgis.IVirgisFeature.UnHover
      language: CSharp
      name:
        CSharp: UnHover()
        VB: UnHover()
      nameWithType:
        CSharp: IVirgisFeature.UnHover()
        VB: IVirgisFeature.UnHover()
      qualifiedName:
        CSharp: Virgis.IVirgisFeature.UnHover()
        VB: Virgis.IVirgisFeature.UnHover()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: UnHover
        path: ''
        startLine: 5563
      syntax:
        content:
          CSharp: void UnHover()
          VB: Sub UnHover
      overload: Virgis.IVirgisFeature.UnHover*
      modifiers:
        CSharp: []
        VB: []
  - id: Virgis.VirgisFeature
    commentId: T:Virgis.VirgisFeature
    language: CSharp
    name:
      CSharp: VirgisFeature
      VB: VirgisFeature
    nameWithType:
      CSharp: VirgisFeature
      VB: VirgisFeature
    qualifiedName:
      CSharp: Virgis.VirgisFeature
      VB: Virgis.VirgisFeature
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: VirgisFeature
      path: ''
      startLine: 5567
    syntax:
      content:
        CSharp: 'public abstract class VirgisFeature : MonoBehaviour, IVirgisFeature, IVirgisEntity'
        VB: >-
          Public MustInherit Class VirgisFeature

              Inherits MonoBehaviour

              Implements IVirgisFeature, IVirgisEntity
    inheritance:
    - System.Object
    implements:
    - Virgis.IVirgisFeature
    - Virgis.IVirgisEntity
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: Virgis.VirgisFeature.mainMat
      commentId: F:Virgis.VirgisFeature.mainMat
      language: CSharp
      name:
        CSharp: mainMat
        VB: mainMat
      nameWithType:
        CSharp: VirgisFeature.mainMat
        VB: VirgisFeature.mainMat
      qualifiedName:
        CSharp: Virgis.VirgisFeature.mainMat
        VB: Virgis.VirgisFeature.mainMat
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: mainMat
        path: ''
        startLine: 5569
      syntax:
        content:
          CSharp: protected Material mainMat
          VB: Protected mainMat As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.VirgisFeature.selectedMat
      commentId: F:Virgis.VirgisFeature.selectedMat
      language: CSharp
      name:
        CSharp: selectedMat
        VB: selectedMat
      nameWithType:
        CSharp: VirgisFeature.selectedMat
        VB: VirgisFeature.selectedMat
      qualifiedName:
        CSharp: Virgis.VirgisFeature.selectedMat
        VB: Virgis.VirgisFeature.selectedMat
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: selectedMat
        path: ''
        startLine: 5570
      syntax:
        content:
          CSharp: protected Material selectedMat
          VB: Protected selectedMat As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.VirgisFeature.label
      commentId: F:Virgis.VirgisFeature.label
      language: CSharp
      name:
        CSharp: label
        VB: label
      nameWithType:
        CSharp: VirgisFeature.label
        VB: VirgisFeature.label
      qualifiedName:
        CSharp: Virgis.VirgisFeature.label
        VB: Virgis.VirgisFeature.label
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: label
        path: ''
        startLine: 5573
      syntax:
        content:
          CSharp: public Transform label
          VB: Public label As Transform
        return:
          type: Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisFeature.feature
      commentId: F:Virgis.VirgisFeature.feature
      language: CSharp
      name:
        CSharp: feature
        VB: feature
      nameWithType:
        CSharp: VirgisFeature.feature
        VB: VirgisFeature.feature
      qualifiedName:
        CSharp: Virgis.VirgisFeature.feature
        VB: Virgis.VirgisFeature.feature
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: feature
        path: ''
        startLine: 5574
      syntax:
        content:
          CSharp: public Feature feature
          VB: Public feature As Feature
        return:
          type: Feature
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisFeature.SetMaterial(Material,Material)
      commentId: M:Virgis.VirgisFeature.SetMaterial(Material,Material)
      language: CSharp
      name:
        CSharp: SetMaterial(Material, Material)
        VB: SetMaterial(Material, Material)
      nameWithType:
        CSharp: VirgisFeature.SetMaterial(Material, Material)
        VB: VirgisFeature.SetMaterial(Material, Material)
      qualifiedName:
        CSharp: Virgis.VirgisFeature.SetMaterial(Material, Material)
        VB: Virgis.VirgisFeature.SetMaterial(Material, Material)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetMaterial
        path: ''
        startLine: 5588
      summary: "\nUse to set the material of the feature\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void SetMaterial(Material mainMat, Material selectedMat)
          VB: Public Overridable Sub SetMaterial(mainMat As Material, selectedMat As Material)
        parameters:
        - id: mainMat
          type: Material
          description: Usual material
        - id: selectedMat
          type: Material
          description: Material to be used when feature is selected
      overload: Virgis.VirgisFeature.SetMaterial*
      implements:
      - Virgis.IVirgisFeature.SetMaterial(Material,Material)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisFeature.Selected(Virgis.SelectionType)
      commentId: M:Virgis.VirgisFeature.Selected(Virgis.SelectionType)
      language: CSharp
      name:
        CSharp: Selected(SelectionType)
        VB: Selected(SelectionType)
      nameWithType:
        CSharp: VirgisFeature.Selected(SelectionType)
        VB: VirgisFeature.Selected(SelectionType)
      qualifiedName:
        CSharp: Virgis.VirgisFeature.Selected(Virgis.SelectionType)
        VB: Virgis.VirgisFeature.Selected(Virgis.SelectionType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Selected
        path: ''
        startLine: 5597
      summary: "\nUse to tell the Component that it is selected\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Selected(SelectionType button)
          VB: Public Overridable Sub Selected(button As SelectionType)
        parameters:
        - id: button
          type: Virgis.SelectionType
          description: SelectionType
      overload: Virgis.VirgisFeature.Selected*
      implements:
      - Virgis.IVirgisEntity.Selected(Virgis.SelectionType)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisFeature.UnSelected(Virgis.SelectionType)
      commentId: M:Virgis.VirgisFeature.UnSelected(Virgis.SelectionType)
      language: CSharp
      name:
        CSharp: UnSelected(SelectionType)
        VB: UnSelected(SelectionType)
      nameWithType:
        CSharp: VirgisFeature.UnSelected(SelectionType)
        VB: VirgisFeature.UnSelected(SelectionType)
      qualifiedName:
        CSharp: Virgis.VirgisFeature.UnSelected(Virgis.SelectionType)
        VB: Virgis.VirgisFeature.UnSelected(Virgis.SelectionType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: UnSelected
        path: ''
        startLine: 5605
      summary: "\nUse to tell the Component that it is un selected\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void UnSelected(SelectionType button)
          VB: Public Overridable Sub UnSelected(button As SelectionType)
        parameters:
        - id: button
          type: Virgis.SelectionType
          description: SelectionType
      overload: Virgis.VirgisFeature.UnSelected*
      implements:
      - Virgis.IVirgisEntity.UnSelected(Virgis.SelectionType)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisFeature.MoveTo(Virgis.MoveArgs)
      commentId: M:Virgis.VirgisFeature.MoveTo(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveTo(MoveArgs)
        VB: MoveTo(MoveArgs)
      nameWithType:
        CSharp: VirgisFeature.MoveTo(MoveArgs)
        VB: VirgisFeature.MoveTo(MoveArgs)
      qualifiedName:
        CSharp: Virgis.VirgisFeature.MoveTo(Virgis.MoveArgs)
        VB: Virgis.VirgisFeature.MoveTo(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveTo
        path: ''
        startLine: 5616
      summary: "\nSent by the UI to request this component to move.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void MoveTo(MoveArgs args)
          VB: Public Overridable Sub MoveTo(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
          description: 'MoveArgs : Either a trabslate vectir OR a Vector position to move to, both in World space coordinates'
      overload: Virgis.VirgisFeature.MoveTo*
      implements:
      - Virgis.IVirgisEntity.MoveTo(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisFeature.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.VirgisFeature.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: VirgisFeature.MoveAxis(MoveArgs)
        VB: VirgisFeature.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.VirgisFeature.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.VirgisFeature.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 5624
      summary: "\nreceived when a Move Axis request is made by the user\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void MoveAxis(MoveArgs args)
          VB: Public Overridable Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.VirgisFeature.MoveAxis*
      implements:
      - Virgis.IVirgisEntity.MoveAxis(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisFeature.Translate(Virgis.MoveArgs)
      commentId: M:Virgis.VirgisFeature.Translate(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Translate(MoveArgs)
        VB: Translate(MoveArgs)
      nameWithType:
        CSharp: VirgisFeature.Translate(MoveArgs)
        VB: VirgisFeature.Translate(MoveArgs)
      qualifiedName:
        CSharp: Virgis.VirgisFeature.Translate(Virgis.MoveArgs)
        VB: Virgis.VirgisFeature.Translate(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Translate
        path: ''
        startLine: 5632
      summary: "\nCalled when a child component is translated by User action\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Translate(MoveArgs args)
          VB: Public Overridable Sub Translate(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
          description: MoveArgs
      overload: Virgis.VirgisFeature.Translate*
      implements:
      - Virgis.IVirgisEntity.Translate(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisFeature.VertexMove(Virgis.MoveArgs)
      commentId: M:Virgis.VirgisFeature.VertexMove(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: VertexMove(MoveArgs)
        VB: VertexMove(MoveArgs)
      nameWithType:
        CSharp: VirgisFeature.VertexMove(MoveArgs)
        VB: VirgisFeature.VertexMove(MoveArgs)
      qualifiedName:
        CSharp: Virgis.VirgisFeature.VertexMove(Virgis.MoveArgs)
        VB: Virgis.VirgisFeature.VertexMove(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: VertexMove
        path: ''
        startLine: 5640
      summary: "\nCalled when a child Vertex moves to the point in the MoveArgs - which is in World Coordinates\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void VertexMove(MoveArgs args)
          VB: Public Overridable Sub VertexMove(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.VirgisFeature.VertexMove*
      implements:
      - Virgis.IVirgisEntity.VertexMove(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisFeature.GetClosest(Vector3,System.Guid[])
      commentId: M:Virgis.VirgisFeature.GetClosest(Vector3,System.Guid[])
      language: CSharp
      name:
        CSharp: GetClosest(Vector3, Guid[])
        VB: GetClosest(Vector3, Guid())
      nameWithType:
        CSharp: VirgisFeature.GetClosest(Vector3, Guid[])
        VB: VirgisFeature.GetClosest(Vector3, Guid())
      qualifiedName:
        CSharp: Virgis.VirgisFeature.GetClosest(Vector3, System.Guid[])
        VB: Virgis.VirgisFeature.GetClosest(Vector3, System.Guid())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetClosest
        path: ''
        startLine: 5649
      summary: "\nGets the closest point of the faeture geometry to the coordinates\n"
      example: []
      syntax:
        content:
          CSharp: public virtual VirgisFeature GetClosest(Vector3 coords, Guid[] exclude)
          VB: Public Overridable Function GetClosest(coords As Vector3, exclude As Guid()) As VirgisFeature
        parameters:
        - id: coords
          type: Vector3
          description: 'Vector3 Target Coordinates '
        - id: exclude
          type: System.Guid[]
        return:
          type: Virgis.VirgisFeature
          description: 'Vector3 in world space coordinates '
      overload: Virgis.VirgisFeature.GetClosest*
      implements:
      - Virgis.IVirgisEntity.GetClosest(Vector3,System.Guid[])
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisFeature.AddVertex(Vector3)
      commentId: M:Virgis.VirgisFeature.AddVertex(Vector3)
      language: CSharp
      name:
        CSharp: AddVertex(Vector3)
        VB: AddVertex(Vector3)
      nameWithType:
        CSharp: VirgisFeature.AddVertex(Vector3)
        VB: VirgisFeature.AddVertex(Vector3)
      qualifiedName:
        CSharp: Virgis.VirgisFeature.AddVertex(Vector3)
        VB: Virgis.VirgisFeature.AddVertex(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AddVertex
        path: ''
        startLine: 5658
      summary: "\ncall this to add a vertex to a feature.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual VirgisFeature AddVertex(Vector3 position)
          VB: Public Overridable Function AddVertex(position As Vector3) As VirgisFeature
        parameters:
        - id: position
          type: Vector3
          description: Vector3
        return:
          type: Virgis.VirgisFeature
          description: VirgisComponent The new vertex
      overload: Virgis.VirgisFeature.AddVertex*
      implements:
      - Virgis.IVirgisFeature.AddVertex(Vector3)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisFeature.RemoveVertex(Virgis.VirgisFeature)
      commentId: M:Virgis.VirgisFeature.RemoveVertex(Virgis.VirgisFeature)
      language: CSharp
      name:
        CSharp: RemoveVertex(VirgisFeature)
        VB: RemoveVertex(VirgisFeature)
      nameWithType:
        CSharp: VirgisFeature.RemoveVertex(VirgisFeature)
        VB: VirgisFeature.RemoveVertex(VirgisFeature)
      qualifiedName:
        CSharp: Virgis.VirgisFeature.RemoveVertex(Virgis.VirgisFeature)
        VB: Virgis.VirgisFeature.RemoveVertex(Virgis.VirgisFeature)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: RemoveVertex
        path: ''
        startLine: 5667
      summary: "\ncall this to remove a vertxe from a feature\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void RemoveVertex(VirgisFeature vertex)
          VB: Public Overridable Sub RemoveVertex(vertex As VirgisFeature)
        parameters:
        - id: vertex
          type: Virgis.VirgisFeature
          description: Vertex to remove
      overload: Virgis.VirgisFeature.RemoveVertex*
      implements:
      - Virgis.IVirgisFeature.RemoveVertex(Virgis.VirgisFeature)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisFeature.GetGeometry``1
      commentId: M:Virgis.VirgisFeature.GetGeometry``1
      language: CSharp
      name:
        CSharp: GetGeometry<T>()
        VB: GetGeometry(Of T)()
      nameWithType:
        CSharp: VirgisFeature.GetGeometry<T>()
        VB: VirgisFeature.GetGeometry(Of T)()
      qualifiedName:
        CSharp: Virgis.VirgisFeature.GetGeometry<T>()
        VB: Virgis.VirgisFeature.GetGeometry(Of T)()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetGeometry
        path: ''
        startLine: 5678
      summary: "\nGet Geometry from the Feature\n"
      example: []
      syntax:
        content:
          CSharp: public virtual T GetGeometry<T>()
          VB: Public Overridable Function GetGeometry(Of T) As T
        typeParameters:
        - id: T
          description: The Type of the geometry
        return:
          type: '{T}'
          description: 'Gemoetry of type T '
      overload: Virgis.VirgisFeature.GetGeometry*
      implements:
      - Virgis.IVirgisFeature.GetGeometry``1
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisFeature.GetId
      commentId: M:Virgis.VirgisFeature.GetId
      language: CSharp
      name:
        CSharp: GetId()
        VB: GetId()
      nameWithType:
        CSharp: VirgisFeature.GetId()
        VB: VirgisFeature.GetId()
      qualifiedName:
        CSharp: Virgis.VirgisFeature.GetId()
        VB: Virgis.VirgisFeature.GetId()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetId
        path: ''
        startLine: 5682
      syntax:
        content:
          CSharp: public Guid GetId()
          VB: Public Function GetId As Guid
        return:
          type: System.Guid
      overload: Virgis.VirgisFeature.GetId*
      implements:
      - Virgis.IVirgisEntity.GetId
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisFeature.GetMetadata
      commentId: M:Virgis.VirgisFeature.GetMetadata
      language: CSharp
      name:
        CSharp: GetMetadata()
        VB: GetMetadata()
      nameWithType:
        CSharp: VirgisFeature.GetMetadata()
        VB: VirgisFeature.GetMetadata()
      qualifiedName:
        CSharp: Virgis.VirgisFeature.GetMetadata()
        VB: Virgis.VirgisFeature.GetMetadata()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetMetadata
        path: ''
        startLine: 5686
      syntax:
        content:
          CSharp: public abstract Dictionary<string, object> GetMetadata()
          VB: Public MustOverride Function GetMetadata As Dictionary(Of String, Object)
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.Object}
      overload: Virgis.VirgisFeature.GetMetadata*
      implements:
      - Virgis.IVirgisFeature.GetMetadata
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: Virgis.VirgisFeature.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
      commentId: M:Virgis.VirgisFeature.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
      language: CSharp
      name:
        CSharp: SetMetadata(Dictionary<String, Object>)
        VB: SetMetadata(Dictionary(Of String, Object))
      nameWithType:
        CSharp: VirgisFeature.SetMetadata(Dictionary<String, Object>)
        VB: VirgisFeature.SetMetadata(Dictionary(Of String, Object))
      qualifiedName:
        CSharp: Virgis.VirgisFeature.SetMetadata(System.Collections.Generic.Dictionary<System.String, System.Object>)
        VB: Virgis.VirgisFeature.SetMetadata(System.Collections.Generic.Dictionary(Of System.String, System.Object))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetMetadata
        path: ''
        startLine: 5688
      syntax:
        content:
          CSharp: public abstract void SetMetadata(Dictionary<string, object> meta)
          VB: Public MustOverride Sub SetMetadata(meta As Dictionary(Of String, Object))
        parameters:
        - id: meta
          type: System.Collections.Generic.Dictionary{System.String,System.Object}
      overload: Virgis.VirgisFeature.SetMetadata*
      implements:
      - Virgis.IVirgisFeature.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: Virgis.VirgisFeature.Equals(System.Object)
      commentId: M:Virgis.VirgisFeature.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: VirgisFeature.Equals(Object)
        VB: VirgisFeature.Equals(Object)
      qualifiedName:
        CSharp: Virgis.VirgisFeature.Equals(System.Object)
        VB: Virgis.VirgisFeature.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Equals
        path: ''
        startLine: 5690
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
        return:
          type: System.Boolean
      overload: Virgis.VirgisFeature.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.VirgisFeature.GetHashCode
      commentId: M:Virgis.VirgisFeature.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: VirgisFeature.GetHashCode()
        VB: VirgisFeature.GetHashCode()
      qualifiedName:
        CSharp: Virgis.VirgisFeature.GetHashCode()
        VB: Virgis.VirgisFeature.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetHashCode
        path: ''
        startLine: 5699
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Virgis.VirgisFeature.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.VirgisFeature.Equals(Virgis.VirgisFeature)
      commentId: M:Virgis.VirgisFeature.Equals(Virgis.VirgisFeature)
      language: CSharp
      name:
        CSharp: Equals(VirgisFeature)
        VB: Equals(VirgisFeature)
      nameWithType:
        CSharp: VirgisFeature.Equals(VirgisFeature)
        VB: VirgisFeature.Equals(VirgisFeature)
      qualifiedName:
        CSharp: Virgis.VirgisFeature.Equals(Virgis.VirgisFeature)
        VB: Virgis.VirgisFeature.Equals(Virgis.VirgisFeature)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Equals
        path: ''
        startLine: 5702
      syntax:
        content:
          CSharp: public bool Equals(VirgisFeature other)
          VB: Public Function Equals(other As VirgisFeature) As Boolean
        parameters:
        - id: other
          type: Virgis.VirgisFeature
        return:
          type: System.Boolean
      overload: Virgis.VirgisFeature.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisFeature.Hover
      commentId: M:Virgis.VirgisFeature.Hover
      language: CSharp
      name:
        CSharp: Hover()
        VB: Hover()
      nameWithType:
        CSharp: VirgisFeature.Hover()
        VB: VirgisFeature.Hover()
      qualifiedName:
        CSharp: Virgis.VirgisFeature.Hover()
        VB: Virgis.VirgisFeature.Hover()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Hover
        path: ''
        startLine: 5711
      summary: "\nCalled whnen the pointer hovers on this feature\n"
      example: []
      syntax:
        content:
          CSharp: public void Hover()
          VB: Public Sub Hover
      overload: Virgis.VirgisFeature.Hover*
      implements:
      - Virgis.IVirgisFeature.Hover
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisFeature.UnHover
      commentId: M:Virgis.VirgisFeature.UnHover
      language: CSharp
      name:
        CSharp: UnHover()
        VB: UnHover()
      nameWithType:
        CSharp: VirgisFeature.UnHover()
        VB: VirgisFeature.UnHover()
      qualifiedName:
        CSharp: Virgis.VirgisFeature.UnHover()
        VB: Virgis.VirgisFeature.UnHover()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: UnHover
        path: ''
        startLine: 5722
      summary: "\ncalled when the pointer stops hoveringon this feature\n"
      example: []
      syntax:
        content:
          CSharp: public void UnHover()
          VB: Public Sub UnHover
      overload: Virgis.VirgisFeature.UnHover*
      implements:
      - Virgis.IVirgisFeature.UnHover
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisFeature.GetLayer
      commentId: M:Virgis.VirgisFeature.GetLayer
      language: CSharp
      name:
        CSharp: GetLayer()
        VB: GetLayer()
      nameWithType:
        CSharp: VirgisFeature.GetLayer()
        VB: VirgisFeature.GetLayer()
      qualifiedName:
        CSharp: Virgis.VirgisFeature.GetLayer()
        VB: Virgis.VirgisFeature.GetLayer()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetLayer
        path: ''
        startLine: 5726
      syntax:
        content:
          CSharp: public VirgisLayer GetLayer()
          VB: Public Function GetLayer As VirgisLayer
        return:
          type: Virgis.VirgisLayer
      overload: Virgis.VirgisFeature.GetLayer*
      implements:
      - Virgis.IVirgisEntity.GetLayer
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.IVirgisLayer
    commentId: T:Virgis.IVirgisLayer
    language: CSharp
    name:
      CSharp: IVirgisLayer
      VB: IVirgisLayer
    nameWithType:
      CSharp: IVirgisLayer
      VB: IVirgisLayer
    qualifiedName:
      CSharp: Virgis.IVirgisLayer
      VB: Virgis.IVirgisLayer
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: IVirgisLayer
      path: ''
      startLine: 5743
    syntax:
      content:
        CSharp: 'public interface IVirgisLayer : IVirgisEntity'
        VB: >-
          Public Interface IVirgisLayer

              Inherits IVirgisEntity
    inheritedMembers:
    - Virgis.IVirgisEntity.Selected(Virgis.SelectionType)
    - Virgis.IVirgisEntity.UnSelected(Virgis.SelectionType)
    - Virgis.IVirgisEntity.GetId
    - Virgis.IVirgisEntity.GetClosest(Vector3,System.Guid[])
    - Virgis.IVirgisEntity.MoveAxis(Virgis.MoveArgs)
    - Virgis.IVirgisEntity.Translate(Virgis.MoveArgs)
    - Virgis.IVirgisEntity.MoveTo(Virgis.MoveArgs)
    - Virgis.IVirgisEntity.VertexMove(Virgis.MoveArgs)
    - Virgis.IVirgisEntity.GetLayer
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Virgis.IVirgisLayer.featureType
      commentId: P:Virgis.IVirgisLayer.featureType
      language: CSharp
      name:
        CSharp: featureType
        VB: featureType
      nameWithType:
        CSharp: IVirgisLayer.featureType
        VB: IVirgisLayer.featureType
      qualifiedName:
        CSharp: Virgis.IVirgisLayer.featureType
        VB: Virgis.IVirgisLayer.featureType
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: featureType
        path: ''
        startLine: 5745
      syntax:
        content:
          CSharp: FeatureType featureType { get; set; }
          VB: Property featureType As FeatureType
        parameters: []
        return:
          type: Virgis.FeatureType
      overload: Virgis.IVirgisLayer.featureType*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Virgis.IVirgisLayer.AddFeature(Vector3[])
      commentId: M:Virgis.IVirgisLayer.AddFeature(Vector3[])
      language: CSharp
      name:
        CSharp: AddFeature(Vector3[])
        VB: AddFeature(Vector3())
      nameWithType:
        CSharp: IVirgisLayer.AddFeature(Vector3[])
        VB: IVirgisLayer.AddFeature(Vector3())
      qualifiedName:
        CSharp: Virgis.IVirgisLayer.AddFeature(Vector3[])
        VB: Virgis.IVirgisLayer.AddFeature(Vector3())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AddFeature
        path: ''
        startLine: 5749
      syntax:
        content:
          CSharp: VirgisFeature AddFeature(Vector3[] geometry)
          VB: Function AddFeature(geometry As Vector3()) As VirgisFeature
        parameters:
        - id: geometry
          type: Vector3[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.IVirgisLayer.AddFeature*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisLayer.Draw
      commentId: M:Virgis.IVirgisLayer.Draw
      language: CSharp
      name:
        CSharp: Draw()
        VB: Draw()
      nameWithType:
        CSharp: IVirgisLayer.Draw()
        VB: IVirgisLayer.Draw()
      qualifiedName:
        CSharp: Virgis.IVirgisLayer.Draw()
        VB: Virgis.IVirgisLayer.Draw()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Draw
        path: ''
        startLine: 5750
      syntax:
        content:
          CSharp: void Draw()
          VB: Sub Draw
      overload: Virgis.IVirgisLayer.Draw*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisLayer.CheckPoint
      commentId: M:Virgis.IVirgisLayer.CheckPoint
      language: CSharp
      name:
        CSharp: CheckPoint()
        VB: CheckPoint()
      nameWithType:
        CSharp: IVirgisLayer.CheckPoint()
        VB: IVirgisLayer.CheckPoint()
      qualifiedName:
        CSharp: Virgis.IVirgisLayer.CheckPoint()
        VB: Virgis.IVirgisLayer.CheckPoint()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CheckPoint
        path: ''
        startLine: 5751
      syntax:
        content:
          CSharp: void CheckPoint()
          VB: Sub CheckPoint
      overload: Virgis.IVirgisLayer.CheckPoint*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisLayer.Save
      commentId: M:Virgis.IVirgisLayer.Save
      language: CSharp
      name:
        CSharp: Save()
        VB: Save()
      nameWithType:
        CSharp: IVirgisLayer.Save()
        VB: IVirgisLayer.Save()
      qualifiedName:
        CSharp: Virgis.IVirgisLayer.Save()
        VB: Virgis.IVirgisLayer.Save()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Save
        path: ''
        startLine: 5752
      syntax:
        content:
          CSharp: Task<RecordSet> Save()
          VB: Function Save As Task(Of RecordSet)
        return:
          type: Task{RecordSet}
      overload: Virgis.IVirgisLayer.Save*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisLayer.GetFeature(System.Guid)
      commentId: M:Virgis.IVirgisLayer.GetFeature(System.Guid)
      language: CSharp
      name:
        CSharp: GetFeature(Guid)
        VB: GetFeature(Guid)
      nameWithType:
        CSharp: IVirgisLayer.GetFeature(Guid)
        VB: IVirgisLayer.GetFeature(Guid)
      qualifiedName:
        CSharp: Virgis.IVirgisLayer.GetFeature(System.Guid)
        VB: Virgis.IVirgisLayer.GetFeature(System.Guid)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetFeature
        path: ''
        startLine: 5753
      syntax:
        content:
          CSharp: VirgisFeature GetFeature(Guid id)
          VB: Function GetFeature(id As Guid) As VirgisFeature
        parameters:
        - id: id
          type: System.Guid
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.IVirgisLayer.GetFeature*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisLayer.GetFeatureShape
      commentId: M:Virgis.IVirgisLayer.GetFeatureShape
      language: CSharp
      name:
        CSharp: GetFeatureShape()
        VB: GetFeatureShape()
      nameWithType:
        CSharp: IVirgisLayer.GetFeatureShape()
        VB: IVirgisLayer.GetFeatureShape()
      qualifiedName:
        CSharp: Virgis.IVirgisLayer.GetFeatureShape()
        VB: Virgis.IVirgisLayer.GetFeatureShape()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetFeatureShape
        path: ''
        startLine: 5754
      syntax:
        content:
          CSharp: GameObject GetFeatureShape()
          VB: Function GetFeatureShape As GameObject
        return:
          type: GameObject
      overload: Virgis.IVirgisLayer.GetFeatureShape*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisLayer.GetMetadata
      commentId: M:Virgis.IVirgisLayer.GetMetadata
      language: CSharp
      name:
        CSharp: GetMetadata()
        VB: GetMetadata()
      nameWithType:
        CSharp: IVirgisLayer.GetMetadata()
        VB: IVirgisLayer.GetMetadata()
      qualifiedName:
        CSharp: Virgis.IVirgisLayer.GetMetadata()
        VB: Virgis.IVirgisLayer.GetMetadata()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetMetadata
        path: ''
        startLine: 5755
      syntax:
        content:
          CSharp: RecordSet GetMetadata()
          VB: Function GetMetadata As RecordSet
        return:
          type: RecordSet
      overload: Virgis.IVirgisLayer.GetMetadata*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisLayer.SetMetadata(RecordSet)
      commentId: M:Virgis.IVirgisLayer.SetMetadata(RecordSet)
      language: CSharp
      name:
        CSharp: SetMetadata(RecordSet)
        VB: SetMetadata(RecordSet)
      nameWithType:
        CSharp: IVirgisLayer.SetMetadata(RecordSet)
        VB: IVirgisLayer.SetMetadata(RecordSet)
      qualifiedName:
        CSharp: Virgis.IVirgisLayer.SetMetadata(RecordSet)
        VB: Virgis.IVirgisLayer.SetMetadata(RecordSet)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetMetadata
        path: ''
        startLine: 5756
      syntax:
        content:
          CSharp: void SetMetadata(RecordSet meta)
          VB: Sub SetMetadata(meta As RecordSet)
        parameters:
        - id: meta
          type: RecordSet
      overload: Virgis.IVirgisLayer.SetMetadata*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisLayer.SetVisible(System.Boolean)
      commentId: M:Virgis.IVirgisLayer.SetVisible(System.Boolean)
      language: CSharp
      name:
        CSharp: SetVisible(Boolean)
        VB: SetVisible(Boolean)
      nameWithType:
        CSharp: IVirgisLayer.SetVisible(Boolean)
        VB: IVirgisLayer.SetVisible(Boolean)
      qualifiedName:
        CSharp: Virgis.IVirgisLayer.SetVisible(System.Boolean)
        VB: Virgis.IVirgisLayer.SetVisible(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetVisible
        path: ''
        startLine: 5757
      syntax:
        content:
          CSharp: void SetVisible(bool visible)
          VB: Sub SetVisible(visible As Boolean)
        parameters:
        - id: visible
          type: System.Boolean
      overload: Virgis.IVirgisLayer.SetVisible*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisLayer.IsVisible
      commentId: M:Virgis.IVirgisLayer.IsVisible
      language: CSharp
      name:
        CSharp: IsVisible()
        VB: IsVisible()
      nameWithType:
        CSharp: IVirgisLayer.IsVisible()
        VB: IVirgisLayer.IsVisible()
      qualifiedName:
        CSharp: Virgis.IVirgisLayer.IsVisible()
        VB: Virgis.IVirgisLayer.IsVisible()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: IsVisible
        path: ''
        startLine: 5758
      syntax:
        content:
          CSharp: bool IsVisible()
          VB: Function IsVisible As Boolean
        return:
          type: System.Boolean
      overload: Virgis.IVirgisLayer.IsVisible*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisLayer.SetEditable(System.Boolean)
      commentId: M:Virgis.IVirgisLayer.SetEditable(System.Boolean)
      language: CSharp
      name:
        CSharp: SetEditable(Boolean)
        VB: SetEditable(Boolean)
      nameWithType:
        CSharp: IVirgisLayer.SetEditable(Boolean)
        VB: IVirgisLayer.SetEditable(Boolean)
      qualifiedName:
        CSharp: Virgis.IVirgisLayer.SetEditable(System.Boolean)
        VB: Virgis.IVirgisLayer.SetEditable(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetEditable
        path: ''
        startLine: 5759
      syntax:
        content:
          CSharp: void SetEditable(bool inSession)
          VB: Sub SetEditable(inSession As Boolean)
        parameters:
        - id: inSession
          type: System.Boolean
      overload: Virgis.IVirgisLayer.SetEditable*
      modifiers:
        CSharp: []
        VB: []
    - id: Virgis.IVirgisLayer.IsEditable
      commentId: M:Virgis.IVirgisLayer.IsEditable
      language: CSharp
      name:
        CSharp: IsEditable()
        VB: IsEditable()
      nameWithType:
        CSharp: IVirgisLayer.IsEditable()
        VB: IVirgisLayer.IsEditable()
      qualifiedName:
        CSharp: Virgis.IVirgisLayer.IsEditable()
        VB: Virgis.IVirgisLayer.IsEditable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: IsEditable
        path: ''
        startLine: 5760
      syntax:
        content:
          CSharp: bool IsEditable()
          VB: Function IsEditable As Boolean
        return:
          type: System.Boolean
      overload: Virgis.IVirgisLayer.IsEditable*
      modifiers:
        CSharp: []
        VB: []
  - id: Virgis.VirgisLayer
    commentId: T:Virgis.VirgisLayer
    language: CSharp
    name:
      CSharp: VirgisLayer
      VB: VirgisLayer
    nameWithType:
      CSharp: VirgisLayer
      VB: VirgisLayer
    qualifiedName:
      CSharp: Virgis.VirgisLayer
      VB: Virgis.VirgisLayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: VirgisLayer
      path: ''
      startLine: 5766
    summary: "\nAbstract parent for all Layer entities\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class VirgisLayer : MonoBehaviour, IVirgisLayer, IVirgisEntity'
        VB: >-
          Public MustInherit Class VirgisLayer

              Inherits MonoBehaviour

              Implements IVirgisLayer, IVirgisEntity
    inheritance:
    - System.Object
    implements:
    - Virgis.IVirgisLayer
    - Virgis.IVirgisEntity
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: Virgis.VirgisLayer._layer
      commentId: F:Virgis.VirgisLayer._layer
      language: CSharp
      name:
        CSharp: _layer
        VB: _layer
      nameWithType:
        CSharp: VirgisLayer._layer
        VB: VirgisLayer._layer
      qualifiedName:
        CSharp: Virgis.VirgisLayer._layer
        VB: Virgis.VirgisLayer._layer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _layer
        path: ''
        startLine: 5768
      syntax:
        content:
          CSharp: public RecordSet _layer
          VB: Public _layer As RecordSet
        return:
          type: RecordSet
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer.featureType
      commentId: P:Virgis.VirgisLayer.featureType
      language: CSharp
      name:
        CSharp: featureType
        VB: featureType
      nameWithType:
        CSharp: VirgisLayer.featureType
        VB: VirgisLayer.featureType
      qualifiedName:
        CSharp: Virgis.VirgisLayer.featureType
        VB: Virgis.VirgisLayer.featureType
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: featureType
        path: ''
        startLine: 5769
      syntax:
        content:
          CSharp: public FeatureType featureType { get; set; }
          VB: Public Property featureType As FeatureType
        parameters: []
        return:
          type: Virgis.FeatureType
      overload: Virgis.VirgisLayer.featureType*
      implements:
      - Virgis.IVirgisLayer.featureType
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Virgis.VirgisLayer.changed
      commentId: F:Virgis.VirgisLayer.changed
      language: CSharp
      name:
        CSharp: changed
        VB: changed
      nameWithType:
        CSharp: VirgisLayer.changed
        VB: VirgisLayer.changed
      qualifiedName:
        CSharp: Virgis.VirgisLayer.changed
        VB: Virgis.VirgisLayer.changed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: changed
        path: ''
        startLine: 5771
      syntax:
        content:
          CSharp: public bool changed
          VB: Public changed As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer._id
      commentId: F:Virgis.VirgisLayer._id
      language: CSharp
      name:
        CSharp: _id
        VB: _id
      nameWithType:
        CSharp: VirgisLayer._id
        VB: VirgisLayer._id
      qualifiedName:
        CSharp: Virgis.VirgisLayer._id
        VB: Virgis.VirgisLayer._id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _id
        path: ''
        startLine: 5772
      syntax:
        content:
          CSharp: protected Guid _id
          VB: Protected _id As Guid
        return:
          type: System.Guid
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.VirgisLayer._editable
      commentId: F:Virgis.VirgisLayer._editable
      language: CSharp
      name:
        CSharp: _editable
        VB: _editable
      nameWithType:
        CSharp: VirgisLayer._editable
        VB: VirgisLayer._editable
      qualifiedName:
        CSharp: Virgis.VirgisLayer._editable
        VB: Virgis.VirgisLayer._editable
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _editable
        path: ''
        startLine: 5773
      syntax:
        content:
          CSharp: protected bool _editable
          VB: Protected _editable As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.VirgisLayer._crs
      commentId: F:Virgis.VirgisLayer._crs
      language: CSharp
      name:
        CSharp: _crs
        VB: _crs
      nameWithType:
        CSharp: VirgisLayer._crs
        VB: VirgisLayer._crs
      qualifiedName:
        CSharp: Virgis.VirgisLayer._crs
        VB: Virgis.VirgisLayer._crs
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _crs
        path: ''
        startLine: 5774
      syntax:
        content:
          CSharp: protected SpatialReference _crs
          VB: Protected _crs As SpatialReference
        return:
          type: SpatialReference
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.VirgisLayer.AddFeature(Vector3[])
      commentId: M:Virgis.VirgisLayer.AddFeature(Vector3[])
      language: CSharp
      name:
        CSharp: AddFeature(Vector3[])
        VB: AddFeature(Vector3())
      nameWithType:
        CSharp: VirgisLayer.AddFeature(Vector3[])
        VB: VirgisLayer.AddFeature(Vector3())
      qualifiedName:
        CSharp: Virgis.VirgisLayer.AddFeature(Vector3[])
        VB: Virgis.VirgisLayer.AddFeature(Vector3())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AddFeature
        path: ''
        startLine: 5785
      summary: "\nCall this to create a new feature\n"
      example: []
      syntax:
        content:
          CSharp: public VirgisFeature AddFeature(Vector3[] geometry)
          VB: Public Function AddFeature(geometry As Vector3()) As VirgisFeature
        parameters:
        - id: geometry
          type: Vector3[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.VirgisLayer.AddFeature*
      implements:
      - Virgis.IVirgisLayer.AddFeature(Vector3[])
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer._addFeature(Vector3[])
      commentId: M:Virgis.VirgisLayer._addFeature(Vector3[])
      language: CSharp
      name:
        CSharp: _addFeature(Vector3[])
        VB: _addFeature(Vector3())
      nameWithType:
        CSharp: VirgisLayer._addFeature(Vector3[])
        VB: VirgisLayer._addFeature(Vector3())
      qualifiedName:
        CSharp: Virgis.VirgisLayer._addFeature(Vector3[])
        VB: Virgis.VirgisLayer._addFeature(Vector3())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _addFeature
        path: ''
        startLine: 5796
      syntax:
        content:
          CSharp: protected abstract VirgisFeature _addFeature(Vector3[] geometry)
          VB: Protected MustOverride Function _addFeature(geometry As Vector3()) As VirgisFeature
        parameters:
        - id: geometry
          type: Vector3[]
        return:
          type: Virgis.VirgisFeature
      overload: Virgis.VirgisLayer._addFeature*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
    - id: Virgis.VirgisLayer.Draw
      commentId: M:Virgis.VirgisLayer.Draw
      language: CSharp
      name:
        CSharp: Draw()
        VB: Draw()
      nameWithType:
        CSharp: VirgisLayer.Draw()
        VB: VirgisLayer.Draw()
      qualifiedName:
        CSharp: Virgis.VirgisLayer.Draw()
        VB: Virgis.VirgisLayer.Draw()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Draw
        path: ''
        startLine: 5801
      summary: "\nDraw the layer based upon the features in the features RecordSet\n"
      example: []
      syntax:
        content:
          CSharp: public void Draw()
          VB: Public Sub Draw
      overload: Virgis.VirgisLayer.Draw*
      implements:
      - Virgis.IVirgisLayer.Draw
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer._draw
      commentId: M:Virgis.VirgisLayer._draw
      language: CSharp
      name:
        CSharp: _draw()
        VB: _draw()
      nameWithType:
        CSharp: VirgisLayer._draw()
        VB: VirgisLayer._draw()
      qualifiedName:
        CSharp: Virgis.VirgisLayer._draw()
        VB: Virgis.VirgisLayer._draw()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _draw
        path: ''
        startLine: 5824
      summary: "\nImplment the layer specific draw code in this method\n"
      example: []
      syntax:
        content:
          CSharp: protected abstract void _draw()
          VB: Protected MustOverride Sub _draw
      overload: Virgis.VirgisLayer._draw*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
    - id: Virgis.VirgisLayer.CheckPoint
      commentId: M:Virgis.VirgisLayer.CheckPoint
      language: CSharp
      name:
        CSharp: CheckPoint()
        VB: CheckPoint()
      nameWithType:
        CSharp: VirgisLayer.CheckPoint()
        VB: VirgisLayer.CheckPoint()
      qualifiedName:
        CSharp: Virgis.VirgisLayer.CheckPoint()
        VB: Virgis.VirgisLayer.CheckPoint()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CheckPoint
        path: ''
        startLine: 5831
      summary: "\nCall this to tell the layers to create a checkpoint. \n\nOnly valid outside of an Edit Session. Inside an Edit Session use Save() as CheckPoint() will do nothing\n"
      example: []
      syntax:
        content:
          CSharp: public void CheckPoint()
          VB: Public Sub CheckPoint
      overload: Virgis.VirgisLayer.CheckPoint*
      implements:
      - Virgis.IVirgisLayer.CheckPoint
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer._checkpoint
      commentId: M:Virgis.VirgisLayer._checkpoint
      language: CSharp
      name:
        CSharp: _checkpoint()
        VB: _checkpoint()
      nameWithType:
        CSharp: VirgisLayer._checkpoint()
        VB: VirgisLayer._checkpoint()
      qualifiedName:
        CSharp: Virgis.VirgisLayer._checkpoint()
        VB: Virgis.VirgisLayer._checkpoint()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _checkpoint
        path: ''
        startLine: 5841
      summary: "\nImplement the layer specific checkpoint code here\n"
      example: []
      syntax:
        content:
          CSharp: protected abstract void _checkpoint()
          VB: Protected MustOverride Sub _checkpoint
      overload: Virgis.VirgisLayer._checkpoint*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
    - id: Virgis.VirgisLayer.Save
      commentId: M:Virgis.VirgisLayer.Save
      language: CSharp
      name:
        CSharp: Save()
        VB: Save()
      nameWithType:
        CSharp: VirgisLayer.Save()
        VB: VirgisLayer.Save()
      qualifiedName:
        CSharp: Virgis.VirgisLayer.Save()
        VB: Virgis.VirgisLayer.Save()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Save
        path: ''
        startLine: 5847
      summary: "\nCalled to save the current layer data to source\n"
      example: []
      syntax:
        content:
          CSharp: public virtual Task<RecordSet> Save()
          VB: Public Overridable Function Save As Task(Of RecordSet)
        return:
          type: Task{RecordSet}
          description: A copy of the data save dot the source
      overload: Virgis.VirgisLayer.Save*
      implements:
      - Virgis.IVirgisLayer.Save
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisLayer._save
      commentId: M:Virgis.VirgisLayer._save
      language: CSharp
      name:
        CSharp: _save()
        VB: _save()
      nameWithType:
        CSharp: VirgisLayer._save()
        VB: VirgisLayer._save()
      qualifiedName:
        CSharp: Virgis.VirgisLayer._save()
        VB: Virgis.VirgisLayer._save()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _save
        path: ''
        startLine: 5858
      summary: "\nImplment the layer specific draw code in this method\n"
      example: []
      syntax:
        content:
          CSharp: protected abstract Task _save()
          VB: Protected MustOverride Function _save As Task
        return:
          type: Task
          description: ''
      overload: Virgis.VirgisLayer._save*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
    - id: Virgis.VirgisLayer.Translate(Virgis.MoveArgs)
      commentId: M:Virgis.VirgisLayer.Translate(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: Translate(MoveArgs)
        VB: Translate(MoveArgs)
      nameWithType:
        CSharp: VirgisLayer.Translate(MoveArgs)
        VB: VirgisLayer.Translate(MoveArgs)
      qualifiedName:
        CSharp: Virgis.VirgisLayer.Translate(Virgis.MoveArgs)
        VB: Virgis.VirgisLayer.Translate(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Translate
        path: ''
        startLine: 5864
      summary: "\nCalled Whenever a member entity is asked to Translate\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Translate(MoveArgs args)
          VB: Public Overridable Sub Translate(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
          description: MoveArge Object
      overload: Virgis.VirgisLayer.Translate*
      implements:
      - Virgis.IVirgisEntity.Translate(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisLayer.MoveAxis(Virgis.MoveArgs)
      commentId: M:Virgis.VirgisLayer.MoveAxis(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveAxis(MoveArgs)
        VB: MoveAxis(MoveArgs)
      nameWithType:
        CSharp: VirgisLayer.MoveAxis(MoveArgs)
        VB: VirgisLayer.MoveAxis(MoveArgs)
      qualifiedName:
        CSharp: Virgis.VirgisLayer.MoveAxis(Virgis.MoveArgs)
        VB: Virgis.VirgisLayer.MoveAxis(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveAxis
        path: ''
        startLine: 5872
      summary: "\nCalled whenevr a member entity is asked to Change Axis\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void MoveAxis(MoveArgs args)
          VB: Public Overridable Sub MoveAxis(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
          description: MoveArgs Object
      overload: Virgis.VirgisLayer.MoveAxis*
      implements:
      - Virgis.IVirgisEntity.MoveAxis(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisLayer.MoveTo(Virgis.MoveArgs)
      commentId: M:Virgis.VirgisLayer.MoveTo(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: MoveTo(MoveArgs)
        VB: MoveTo(MoveArgs)
      nameWithType:
        CSharp: VirgisLayer.MoveTo(MoveArgs)
        VB: VirgisLayer.MoveTo(MoveArgs)
      qualifiedName:
        CSharp: Virgis.VirgisLayer.MoveTo(Virgis.MoveArgs)
        VB: Virgis.VirgisLayer.MoveTo(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: MoveTo
        path: ''
        startLine: 5876
      syntax:
        content:
          CSharp: public virtual void MoveTo(MoveArgs args)
          VB: Public Overridable Sub MoveTo(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.VirgisLayer.MoveTo*
      implements:
      - Virgis.IVirgisEntity.MoveTo(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisLayer.VertexMove(Virgis.MoveArgs)
      commentId: M:Virgis.VirgisLayer.VertexMove(Virgis.MoveArgs)
      language: CSharp
      name:
        CSharp: VertexMove(MoveArgs)
        VB: VertexMove(MoveArgs)
      nameWithType:
        CSharp: VirgisLayer.VertexMove(MoveArgs)
        VB: VirgisLayer.VertexMove(MoveArgs)
      qualifiedName:
        CSharp: Virgis.VirgisLayer.VertexMove(Virgis.MoveArgs)
        VB: Virgis.VirgisLayer.VertexMove(Virgis.MoveArgs)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: VertexMove
        path: ''
        startLine: 5880
      syntax:
        content:
          CSharp: public virtual void VertexMove(MoveArgs args)
          VB: Public Overridable Sub VertexMove(args As MoveArgs)
        parameters:
        - id: args
          type: Virgis.MoveArgs
      overload: Virgis.VirgisLayer.VertexMove*
      implements:
      - Virgis.IVirgisEntity.VertexMove(Virgis.MoveArgs)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisLayer.Selected(Virgis.SelectionType)
      commentId: M:Virgis.VirgisLayer.Selected(Virgis.SelectionType)
      language: CSharp
      name:
        CSharp: Selected(SelectionType)
        VB: Selected(SelectionType)
      nameWithType:
        CSharp: VirgisLayer.Selected(SelectionType)
        VB: VirgisLayer.Selected(SelectionType)
      qualifiedName:
        CSharp: Virgis.VirgisLayer.Selected(Virgis.SelectionType)
        VB: Virgis.VirgisLayer.Selected(Virgis.SelectionType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Selected
        path: ''
        startLine: 5888
      summary: "\ncalled when a daughter IVirgisEntity is selected\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Selected(SelectionType button)
          VB: Public Overridable Sub Selected(button As SelectionType)
        parameters:
        - id: button
          type: Virgis.SelectionType
          description: SelectionType
      overload: Virgis.VirgisLayer.Selected*
      implements:
      - Virgis.IVirgisEntity.Selected(Virgis.SelectionType)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisLayer.UnSelected(Virgis.SelectionType)
      commentId: M:Virgis.VirgisLayer.UnSelected(Virgis.SelectionType)
      language: CSharp
      name:
        CSharp: UnSelected(SelectionType)
        VB: UnSelected(SelectionType)
      nameWithType:
        CSharp: VirgisLayer.UnSelected(SelectionType)
        VB: VirgisLayer.UnSelected(SelectionType)
      qualifiedName:
        CSharp: Virgis.VirgisLayer.UnSelected(Virgis.SelectionType)
        VB: Virgis.VirgisLayer.UnSelected(Virgis.SelectionType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: UnSelected
        path: ''
        startLine: 5896
      summary: "\nCalled when a daughter IVirgisEntity is UnSelected\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void UnSelected(SelectionType button)
          VB: Public Overridable Sub UnSelected(button As SelectionType)
        parameters:
        - id: button
          type: Virgis.SelectionType
          description: SelectionType
      overload: Virgis.VirgisLayer.UnSelected*
      implements:
      - Virgis.IVirgisEntity.UnSelected(Virgis.SelectionType)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisLayer.GetClosest(Vector3,System.Guid[])
      commentId: M:Virgis.VirgisLayer.GetClosest(Vector3,System.Guid[])
      language: CSharp
      name:
        CSharp: GetClosest(Vector3, Guid[])
        VB: GetClosest(Vector3, Guid())
      nameWithType:
        CSharp: VirgisLayer.GetClosest(Vector3, Guid[])
        VB: VirgisLayer.GetClosest(Vector3, Guid())
      qualifiedName:
        CSharp: Virgis.VirgisLayer.GetClosest(Vector3, System.Guid[])
        VB: Virgis.VirgisLayer.GetClosest(Vector3, System.Guid())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetClosest
        path: ''
        startLine: 5905
      summary: "\nGet the Closest Feature to the coordinates. Exclude any Component Ids in the Exclude Array. The exclude lis  is primarily used to avoid a GetClosest to a Faeture picking up the feature itself\n"
      example: []
      syntax:
        content:
          CSharp: public VirgisFeature GetClosest(Vector3 coords, Guid[] exclude)
          VB: Public Function GetClosest(coords As Vector3, exclude As Guid()) As VirgisFeature
        parameters:
        - id: coords
          type: Vector3
          description: 'coordinates '
        - id: exclude
          type: System.Guid[]
        return:
          type: Virgis.VirgisFeature
          description: returns the featue contained in an enitity of type S
      overload: Virgis.VirgisLayer.GetClosest*
      implements:
      - Virgis.IVirgisEntity.GetClosest(Vector3,System.Guid[])
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer.GetFeature(System.Guid)
      commentId: M:Virgis.VirgisLayer.GetFeature(System.Guid)
      language: CSharp
      name:
        CSharp: GetFeature(Guid)
        VB: GetFeature(Guid)
      nameWithType:
        CSharp: VirgisLayer.GetFeature(Guid)
        VB: VirgisLayer.GetFeature(Guid)
      qualifiedName:
        CSharp: Virgis.VirgisLayer.GetFeature(System.Guid)
        VB: Virgis.VirgisLayer.GetFeature(System.Guid)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetFeature
        path: ''
        startLine: 5918
      summary: "\nGet the feature that matches the ID provided \n"
      example: []
      syntax:
        content:
          CSharp: public VirgisFeature GetFeature(Guid id)
          VB: Public Function GetFeature(id As Guid) As VirgisFeature
        parameters:
        - id: id
          type: System.Guid
          description: ID
        return:
          type: Virgis.VirgisFeature
          description: returns the featue contained in an enitity of type S
      overload: Virgis.VirgisLayer.GetFeature*
      implements:
      - Virgis.IVirgisLayer.GetFeature(System.Guid)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer.GetId
      commentId: M:Virgis.VirgisLayer.GetId
      language: CSharp
      name:
        CSharp: GetId()
        VB: GetId()
      nameWithType:
        CSharp: VirgisLayer.GetId()
        VB: VirgisLayer.GetId()
      qualifiedName:
        CSharp: Virgis.VirgisLayer.GetId()
        VB: Virgis.VirgisLayer.GetId()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetId
        path: ''
        startLine: 5926
      summary: "\nFecth the layer GUID\n"
      example: []
      syntax:
        content:
          CSharp: public Guid GetId()
          VB: Public Function GetId As Guid
        return:
          type: System.Guid
          description: GUID
      overload: Virgis.VirgisLayer.GetId*
      implements:
      - Virgis.IVirgisEntity.GetId
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer.GetMetadata
      commentId: M:Virgis.VirgisLayer.GetMetadata
      language: CSharp
      name:
        CSharp: GetMetadata()
        VB: GetMetadata()
      nameWithType:
        CSharp: VirgisLayer.GetMetadata()
        VB: VirgisLayer.GetMetadata()
      qualifiedName:
        CSharp: Virgis.VirgisLayer.GetMetadata()
        VB: Virgis.VirgisLayer.GetMetadata()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetMetadata
        path: ''
        startLine: 5934
      summary: "\nGet the metadata for this Layer\n"
      example: []
      syntax:
        content:
          CSharp: public RecordSet GetMetadata()
          VB: Public Function GetMetadata As RecordSet
        return:
          type: RecordSet
          description: ''
      overload: Virgis.VirgisLayer.GetMetadata*
      implements:
      - Virgis.IVirgisLayer.GetMetadata
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer.SetMetadata(RecordSet)
      commentId: M:Virgis.VirgisLayer.SetMetadata(RecordSet)
      language: CSharp
      name:
        CSharp: SetMetadata(RecordSet)
        VB: SetMetadata(RecordSet)
      nameWithType:
        CSharp: VirgisLayer.SetMetadata(RecordSet)
        VB: VirgisLayer.SetMetadata(RecordSet)
      qualifiedName:
        CSharp: Virgis.VirgisLayer.SetMetadata(RecordSet)
        VB: Virgis.VirgisLayer.SetMetadata(RecordSet)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetMetadata
        path: ''
        startLine: 5942
      summary: "\nSets the layer Metadat\n"
      example: []
      syntax:
        content:
          CSharp: public void SetMetadata(RecordSet layer)
          VB: Public Sub SetMetadata(layer As RecordSet)
        parameters:
        - id: layer
          type: RecordSet
          description: Data tyoe that inherits form RecordSet
      overload: Virgis.VirgisLayer.SetMetadata*
      implements:
      - Virgis.IVirgisLayer.SetMetadata(RecordSet)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer.GetFeatureShape
      commentId: M:Virgis.VirgisLayer.GetFeatureShape
      language: CSharp
      name:
        CSharp: GetFeatureShape()
        VB: GetFeatureShape()
      nameWithType:
        CSharp: VirgisLayer.GetFeatureShape()
        VB: VirgisLayer.GetFeatureShape()
      qualifiedName:
        CSharp: Virgis.VirgisLayer.GetFeatureShape()
        VB: Virgis.VirgisLayer.GetFeatureShape()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetFeatureShape
        path: ''
        startLine: 5947
      syntax:
        content:
          CSharp: public virtual GameObject GetFeatureShape()
          VB: Public Overridable Function GetFeatureShape As GameObject
        return:
          type: GameObject
      overload: Virgis.VirgisLayer.GetFeatureShape*
      implements:
      - Virgis.IVirgisLayer.GetFeatureShape
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisLayer.SetVisible(System.Boolean)
      commentId: M:Virgis.VirgisLayer.SetVisible(System.Boolean)
      language: CSharp
      name:
        CSharp: SetVisible(Boolean)
        VB: SetVisible(Boolean)
      nameWithType:
        CSharp: VirgisLayer.SetVisible(Boolean)
        VB: VirgisLayer.SetVisible(Boolean)
      qualifiedName:
        CSharp: Virgis.VirgisLayer.SetVisible(System.Boolean)
        VB: Virgis.VirgisLayer.SetVisible(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetVisible
        path: ''
        startLine: 5951
      syntax:
        content:
          CSharp: public virtual void SetVisible(bool visible)
          VB: Public Overridable Sub SetVisible(visible As Boolean)
        parameters:
        - id: visible
          type: System.Boolean
      overload: Virgis.VirgisLayer.SetVisible*
      implements:
      - Virgis.IVirgisLayer.SetVisible(System.Boolean)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisLayer._set_visible
      commentId: M:Virgis.VirgisLayer._set_visible
      language: CSharp
      name:
        CSharp: _set_visible()
        VB: _set_visible()
      nameWithType:
        CSharp: VirgisLayer._set_visible()
        VB: VirgisLayer._set_visible()
      qualifiedName:
        CSharp: Virgis.VirgisLayer._set_visible()
        VB: Virgis.VirgisLayer._set_visible()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _set_visible
        path: ''
        startLine: 5959
      syntax:
        content:
          CSharp: public virtual void _set_visible()
          VB: Public Overridable Sub _set_visible
      overload: Virgis.VirgisLayer._set_visible*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Virgis.VirgisLayer.IsVisible
      commentId: M:Virgis.VirgisLayer.IsVisible
      language: CSharp
      name:
        CSharp: IsVisible()
        VB: IsVisible()
      nameWithType:
        CSharp: VirgisLayer.IsVisible()
        VB: VirgisLayer.IsVisible()
      qualifiedName:
        CSharp: Virgis.VirgisLayer.IsVisible()
        VB: Virgis.VirgisLayer.IsVisible()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: IsVisible
        path: ''
        startLine: 5966
      summary: "\nTest if this layer is currently visible\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsVisible()
          VB: Public Function IsVisible As Boolean
        return:
          type: System.Boolean
          description: Boolean
      overload: Virgis.VirgisLayer.IsVisible*
      implements:
      - Virgis.IVirgisLayer.IsVisible
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer.SetEditable(System.Boolean)
      commentId: M:Virgis.VirgisLayer.SetEditable(System.Boolean)
      language: CSharp
      name:
        CSharp: SetEditable(Boolean)
        VB: SetEditable(Boolean)
      nameWithType:
        CSharp: VirgisLayer.SetEditable(Boolean)
        VB: VirgisLayer.SetEditable(Boolean)
      qualifiedName:
        CSharp: Virgis.VirgisLayer.SetEditable(System.Boolean)
        VB: Virgis.VirgisLayer.SetEditable(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetEditable
        path: ''
        startLine: 5978
      summary: "\nSets a marker that this particular layer is being edited.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetEditable(bool inSession)
          VB: Public Sub SetEditable(inSession As Boolean)
        parameters:
        - id: inSession
          type: System.Boolean
          description: ''
      overload: Virgis.VirgisLayer.SetEditable*
      implements:
      - Virgis.IVirgisLayer.SetEditable(System.Boolean)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer.IsEditable
      commentId: M:Virgis.VirgisLayer.IsEditable
      language: CSharp
      name:
        CSharp: IsEditable()
        VB: IsEditable()
      nameWithType:
        CSharp: VirgisLayer.IsEditable()
        VB: VirgisLayer.IsEditable()
      qualifiedName:
        CSharp: Virgis.VirgisLayer.IsEditable()
        VB: Virgis.VirgisLayer.IsEditable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: IsEditable
        path: ''
        startLine: 5986
      summary: "\nTest to see if this layer is editable\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsEditable()
          VB: Public Function IsEditable As Boolean
        return:
          type: System.Boolean
          description: Boolean
      overload: Virgis.VirgisLayer.IsEditable*
      implements:
      - Virgis.IVirgisLayer.IsEditable
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer.SetCrs(SpatialReference)
      commentId: M:Virgis.VirgisLayer.SetCrs(SpatialReference)
      language: CSharp
      name:
        CSharp: SetCrs(SpatialReference)
        VB: SetCrs(SpatialReference)
      nameWithType:
        CSharp: VirgisLayer.SetCrs(SpatialReference)
        VB: VirgisLayer.SetCrs(SpatialReference)
      qualifiedName:
        CSharp: Virgis.VirgisLayer.SetCrs(SpatialReference)
        VB: Virgis.VirgisLayer.SetCrs(SpatialReference)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetCrs
        path: ''
        startLine: 5994
      summary: "\nSet the Layer CRS\n"
      example: []
      syntax:
        content:
          CSharp: public void SetCrs(SpatialReference crs)
          VB: Public Sub SetCrs(crs As SpatialReference)
        parameters:
        - id: crs
          type: SpatialReference
          description: SpatialReference
      overload: Virgis.VirgisLayer.SetCrs*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer.GetCrs
      commentId: M:Virgis.VirgisLayer.GetCrs
      language: CSharp
      name:
        CSharp: GetCrs()
        VB: GetCrs()
      nameWithType:
        CSharp: VirgisLayer.GetCrs()
        VB: VirgisLayer.GetCrs()
      qualifiedName:
        CSharp: Virgis.VirgisLayer.GetCrs()
        VB: Virgis.VirgisLayer.GetCrs()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetCrs
        path: ''
        startLine: 6002
      summary: "\nGet the Layer CRS\n"
      example: []
      syntax:
        content:
          CSharp: public SpatialReference GetCrs()
          VB: Public Function GetCrs As SpatialReference
        return:
          type: SpatialReference
          description: ''
      overload: Virgis.VirgisLayer.GetCrs*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer.Equals(System.Object)
      commentId: M:Virgis.VirgisLayer.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: VirgisLayer.Equals(Object)
        VB: VirgisLayer.Equals(Object)
      qualifiedName:
        CSharp: Virgis.VirgisLayer.Equals(System.Object)
        VB: Virgis.VirgisLayer.Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Equals
        path: ''
        startLine: 6006
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
        return:
          type: System.Boolean
      overload: Virgis.VirgisLayer.Equals*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.VirgisLayer.GetHashCode
      commentId: M:Virgis.VirgisLayer.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: VirgisLayer.GetHashCode()
        VB: VirgisLayer.GetHashCode()
      qualifiedName:
        CSharp: Virgis.VirgisLayer.GetHashCode()
        VB: Virgis.VirgisLayer.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetHashCode
        path: ''
        startLine: 6016
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Virgis.VirgisLayer.GetHashCode*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.VirgisLayer.Equals(Virgis.VirgisLayer)
      commentId: M:Virgis.VirgisLayer.Equals(Virgis.VirgisLayer)
      language: CSharp
      name:
        CSharp: Equals(VirgisLayer)
        VB: Equals(VirgisLayer)
      nameWithType:
        CSharp: VirgisLayer.Equals(VirgisLayer)
        VB: VirgisLayer.Equals(VirgisLayer)
      qualifiedName:
        CSharp: Virgis.VirgisLayer.Equals(Virgis.VirgisLayer)
        VB: Virgis.VirgisLayer.Equals(Virgis.VirgisLayer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Equals
        path: ''
        startLine: 6019
      syntax:
        content:
          CSharp: public bool Equals(VirgisLayer other)
          VB: Public Function Equals(other As VirgisLayer) As Boolean
        parameters:
        - id: other
          type: Virgis.VirgisLayer
        return:
          type: System.Boolean
      overload: Virgis.VirgisLayer.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer.GetLayer
      commentId: M:Virgis.VirgisLayer.GetLayer
      language: CSharp
      name:
        CSharp: GetLayer()
        VB: GetLayer()
      nameWithType:
        CSharp: VirgisLayer.GetLayer()
        VB: VirgisLayer.GetLayer()
      qualifiedName:
        CSharp: Virgis.VirgisLayer.GetLayer()
        VB: Virgis.VirgisLayer.GetLayer()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetLayer
        path: ''
        startLine: 6025
      syntax:
        content:
          CSharp: public VirgisLayer GetLayer()
          VB: Public Function GetLayer As VirgisLayer
        return:
          type: Virgis.VirgisLayer
      overload: Virgis.VirgisLayer.GetLayer*
      implements:
      - Virgis.IVirgisEntity.GetLayer
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.VirgisLayer`2
    commentId: T:Virgis.VirgisLayer`2
    language: CSharp
    name:
      CSharp: VirgisLayer<T, S>
      VB: VirgisLayer(Of T, S)
    nameWithType:
      CSharp: VirgisLayer<T, S>
      VB: VirgisLayer(Of T, S)
    qualifiedName:
      CSharp: Virgis.VirgisLayer<T, S>
      VB: Virgis.VirgisLayer(Of T, S)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: VirgisLayer
      path: ''
      startLine: 6030
    syntax:
      content:
        CSharp: 'public abstract class VirgisLayer<T, S> : VirgisLayer, IVirgisLayer, IVirgisEntity where T : RecordSet'
        VB: >-
          Public MustInherit Class VirgisLayer(Of T As RecordSet, S)

              Inherits VirgisLayer

              Implements IVirgisLayer, IVirgisEntity
      typeParameters:
      - id: T
      - id: S
    inheritance:
    - System.Object
    - Virgis.VirgisLayer
    implements:
    - Virgis.IVirgisLayer
    - Virgis.IVirgisEntity
    inheritedMembers:
    - Virgis.VirgisLayer._layer
    - Virgis.VirgisLayer.featureType
    - Virgis.VirgisLayer.changed
    - Virgis.VirgisLayer._id
    - Virgis.VirgisLayer._editable
    - Virgis.VirgisLayer._crs
    - Virgis.VirgisLayer.AddFeature(Vector3[])
    - Virgis.VirgisLayer._addFeature(Vector3[])
    - Virgis.VirgisLayer.Draw
    - Virgis.VirgisLayer._draw
    - Virgis.VirgisLayer.CheckPoint
    - Virgis.VirgisLayer._checkpoint
    - Virgis.VirgisLayer.Save
    - Virgis.VirgisLayer._save
    - Virgis.VirgisLayer.Translate(Virgis.MoveArgs)
    - Virgis.VirgisLayer.MoveAxis(Virgis.MoveArgs)
    - Virgis.VirgisLayer.MoveTo(Virgis.MoveArgs)
    - Virgis.VirgisLayer.VertexMove(Virgis.MoveArgs)
    - Virgis.VirgisLayer.Selected(Virgis.SelectionType)
    - Virgis.VirgisLayer.UnSelected(Virgis.SelectionType)
    - Virgis.VirgisLayer.GetClosest(Vector3,System.Guid[])
    - Virgis.VirgisLayer.GetFeature(System.Guid)
    - Virgis.VirgisLayer.GetId
    - Virgis.VirgisLayer.SetMetadata(RecordSet)
    - Virgis.VirgisLayer.GetFeatureShape
    - Virgis.VirgisLayer.SetVisible(System.Boolean)
    - Virgis.VirgisLayer._set_visible
    - Virgis.VirgisLayer.IsVisible
    - Virgis.VirgisLayer.SetEditable(System.Boolean)
    - Virgis.VirgisLayer.IsEditable
    - Virgis.VirgisLayer.SetCrs(SpatialReference)
    - Virgis.VirgisLayer.GetCrs
    - Virgis.VirgisLayer.Equals(Virgis.VirgisLayer)
    - Virgis.VirgisLayer.GetLayer
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: Virgis.VirgisLayer`2.features
      commentId: F:Virgis.VirgisLayer`2.features
      language: CSharp
      name:
        CSharp: features
        VB: features
      nameWithType:
        CSharp: VirgisLayer<T, S>.features
        VB: VirgisLayer(Of T, S).features
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.features
        VB: Virgis.VirgisLayer(Of T, S).features
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: features
        path: ''
        startLine: 6034
      syntax:
        content:
          CSharp: public S features
          VB: Public features As S
        return:
          type: '{S}'
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer`2.Init(`0)
      commentId: M:Virgis.VirgisLayer`2.Init(`0)
      language: CSharp
      name:
        CSharp: Init(T)
        VB: Init(T)
      nameWithType:
        CSharp: VirgisLayer<T, S>.Init(T)
        VB: VirgisLayer(Of T, S).Init(T)
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.Init(T)
        VB: Virgis.VirgisLayer(Of T, S).Init(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Init
        path: ''
        startLine: 6045
      summary: "\nCalled to initialise this layer\n\nIf the data cannot be read, fails quitely and creates an empty layer\n"
      example: []
      syntax:
        content:
          CSharp: public Task<VirgisLayer<T, S>> Init(T layer)
          VB: Public Function Init(layer As T) As Task(Of VirgisLayer(Of T, S))
        parameters:
        - id: layer
          type: '{T}'
          description: The RecordSet object that defines this layer
        return:
          type: Task{Virgis.VirgisLayer`2}
          description: refernce to this GameObject for chaining
      overload: Virgis.VirgisLayer`2.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer`2._init
      commentId: M:Virgis.VirgisLayer`2._init
      language: CSharp
      name:
        CSharp: _init()
        VB: _init()
      nameWithType:
        CSharp: VirgisLayer<T, S>._init()
        VB: VirgisLayer(Of T, S)._init()
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>._init()
        VB: Virgis.VirgisLayer(Of T, S)._init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _init
        path: ''
        startLine: 6056
      summary: "\nImplement the layer specific init code in this method\n"
      example: []
      syntax:
        content:
          CSharp: protected abstract Task _init()
          VB: Protected MustOverride Function _init As Task
        return:
          type: Task
          description: ''
      overload: Virgis.VirgisLayer`2._init*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
    - id: Virgis.VirgisLayer`2.GetMetadata
      commentId: M:Virgis.VirgisLayer`2.GetMetadata
      language: CSharp
      name:
        CSharp: GetMetadata()
        VB: GetMetadata()
      nameWithType:
        CSharp: VirgisLayer<T, S>.GetMetadata()
        VB: VirgisLayer(Of T, S).GetMetadata()
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.GetMetadata()
        VB: Virgis.VirgisLayer(Of T, S).GetMetadata()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetMetadata
        path: ''
        startLine: 6062
      summary: "\nGet the layer Metadata\n"
      example: []
      syntax:
        content:
          CSharp: public T GetMetadata()
          VB: Public Function GetMetadata As T
        return:
          type: '{T}'
          description: RecordSet Layer Metatdata
      overload: Virgis.VirgisLayer`2.GetMetadata*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer`2.SetMetadata(`0)
      commentId: M:Virgis.VirgisLayer`2.SetMetadata(`0)
      language: CSharp
      name:
        CSharp: SetMetadata(T)
        VB: SetMetadata(T)
      nameWithType:
        CSharp: VirgisLayer<T, S>.SetMetadata(T)
        VB: VirgisLayer(Of T, S).SetMetadata(T)
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.SetMetadata(T)
        VB: Virgis.VirgisLayer(Of T, S).SetMetadata(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetMetadata
        path: ''
        startLine: 6070
      summary: "\nSet the Layer Metadata\n"
      example: []
      syntax:
        content:
          CSharp: public void SetMetadata(T layer)
          VB: Public Sub SetMetadata(layer As T)
        parameters:
        - id: layer
          type: '{T}'
          description: RecordSet Layer Data
      overload: Virgis.VirgisLayer`2.SetMetadata*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer`2.SetFeatures(`1)
      commentId: M:Virgis.VirgisLayer`2.SetFeatures(`1)
      language: CSharp
      name:
        CSharp: SetFeatures(S)
        VB: SetFeatures(S)
      nameWithType:
        CSharp: VirgisLayer<T, S>.SetFeatures(S)
        VB: VirgisLayer(Of T, S).SetFeatures(S)
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.SetFeatures(S)
        VB: Virgis.VirgisLayer(Of T, S).SetFeatures(S)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: SetFeatures
        path: ''
        startLine: 6078
      summary: "\nSet the feature Data for layer explicitly\n"
      example: []
      syntax:
        content:
          CSharp: public void SetFeatures(S features)
          VB: Public Sub SetFeatures(features As S)
        parameters:
        - id: features
          type: '{S}'
          description: Feature Data in the correct format for the layer
      overload: Virgis.VirgisLayer`2.SetFeatures*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.VirgisLayer`2.Equals(System.Object)
      commentId: M:Virgis.VirgisLayer`2.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: VirgisLayer<T, S>.Equals(Object)
        VB: VirgisLayer(Of T, S).Equals(Object)
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.Equals(System.Object)
        VB: Virgis.VirgisLayer(Of T, S).Equals(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Equals
        path: ''
        startLine: 6085
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
        return:
          type: System.Boolean
      overload: Virgis.VirgisLayer`2.Equals*
      overridden: Virgis.VirgisLayer.Equals(System.Object)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.VirgisLayer`2.GetHashCode
      commentId: M:Virgis.VirgisLayer`2.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: VirgisLayer<T, S>.GetHashCode()
        VB: VirgisLayer(Of T, S).GetHashCode()
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.GetHashCode()
        VB: Virgis.VirgisLayer(Of T, S).GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetHashCode
        path: ''
        startLine: 6095
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode As Integer
        return:
          type: System.Int32
      overload: Virgis.VirgisLayer`2.GetHashCode*
      overridden: Virgis.VirgisLayer.GetHashCode
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
      commentId: M:Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
      language: CSharp
      name:
        CSharp: Equals(VirgisLayer<T, S>)
        VB: Equals(VirgisLayer(Of T, S))
      nameWithType:
        CSharp: VirgisLayer<T, S>.Equals(VirgisLayer<T, S>)
        VB: VirgisLayer(Of T, S).Equals(VirgisLayer(Of T, S))
      qualifiedName:
        CSharp: Virgis.VirgisLayer<T, S>.Equals(Virgis.VirgisLayer<T, S>)
        VB: Virgis.VirgisLayer(Of T, S).Equals(Virgis.VirgisLayer(Of T, S))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Equals
        path: ''
        startLine: 6098
      syntax:
        content:
          CSharp: public bool Equals(VirgisLayer<T, S> other)
          VB: Public Function Equals(other As VirgisLayer(Of T, S)) As Boolean
        parameters:
        - id: other
          type: Virgis.VirgisLayer`2
        return:
          type: System.Boolean
      overload: Virgis.VirgisLayer`2.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Virgis.KdTree`1
    commentId: T:Virgis.KdTree`1
    language: CSharp
    name:
      CSharp: KdTree<T>
      VB: KdTree(Of T)
    nameWithType:
      CSharp: KdTree<T>
      VB: KdTree(Of T)
    qualifiedName:
      CSharp: Virgis.KdTree<T>
      VB: Virgis.KdTree(Of T)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: KdTree
      path: ''
      startLine: 6125
    syntax:
      content:
        CSharp: 'public class KdTree<T> : IEnumerable<T>, IEnumerable, IEnumerable where T : Component'
        VB: >-
          Public Class KdTree(Of T As Component)

              Implements IEnumerable(Of T), IEnumerable, IEnumerable
      typeParameters:
      - id: T
    inheritance:
    - System.Object
    implements:
    - System.Collections.Generic.IEnumerable{{T}}
    - System.Collections.IEnumerable
    - System.Collections.Generic.IEnumerable
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Virgis.KdTree`1._root
      commentId: F:Virgis.KdTree`1._root
      language: CSharp
      name:
        CSharp: _root
        VB: _root
      nameWithType:
        CSharp: KdTree<T>._root
        VB: KdTree(Of T)._root
      qualifiedName:
        CSharp: Virgis.KdTree<T>._root
        VB: Virgis.KdTree(Of T)._root
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _root
        path: ''
        startLine: 6127
      syntax:
        content:
          CSharp: protected KdTree<T>.KdNode _root
          VB: Protected _root As KdTree(Of T).KdNode
        return:
          type: Virgis.KdTree`1.KdNode
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.KdTree`1._last
      commentId: F:Virgis.KdTree`1._last
      language: CSharp
      name:
        CSharp: _last
        VB: _last
      nameWithType:
        CSharp: KdTree<T>._last
        VB: KdTree(Of T)._last
      qualifiedName:
        CSharp: Virgis.KdTree<T>._last
        VB: Virgis.KdTree(Of T)._last
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _last
        path: ''
        startLine: 6128
      syntax:
        content:
          CSharp: protected KdTree<T>.KdNode _last
          VB: Protected _last As KdTree(Of T).KdNode
        return:
          type: Virgis.KdTree`1.KdNode
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.KdTree`1._count
      commentId: F:Virgis.KdTree`1._count
      language: CSharp
      name:
        CSharp: _count
        VB: _count
      nameWithType:
        CSharp: KdTree<T>._count
        VB: KdTree(Of T)._count
      qualifiedName:
        CSharp: Virgis.KdTree<T>._count
        VB: Virgis.KdTree(Of T)._count
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _count
        path: ''
        startLine: 6129
      syntax:
        content:
          CSharp: protected int _count
          VB: Protected _count As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.KdTree`1._just2D
      commentId: F:Virgis.KdTree`1._just2D
      language: CSharp
      name:
        CSharp: _just2D
        VB: _just2D
      nameWithType:
        CSharp: KdTree<T>._just2D
        VB: KdTree(Of T)._just2D
      qualifiedName:
        CSharp: Virgis.KdTree<T>._just2D
        VB: Virgis.KdTree(Of T)._just2D
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _just2D
        path: ''
        startLine: 6130
      syntax:
        content:
          CSharp: protected bool _just2D
          VB: Protected _just2D As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.KdTree`1._LastUpdate
      commentId: F:Virgis.KdTree`1._LastUpdate
      language: CSharp
      name:
        CSharp: _LastUpdate
        VB: _LastUpdate
      nameWithType:
        CSharp: KdTree<T>._LastUpdate
        VB: KdTree(Of T)._LastUpdate
      qualifiedName:
        CSharp: Virgis.KdTree<T>._LastUpdate
        VB: Virgis.KdTree(Of T)._LastUpdate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _LastUpdate
        path: ''
        startLine: 6131
      syntax:
        content:
          CSharp: protected float _LastUpdate
          VB: Protected _LastUpdate As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.KdTree`1._open
      commentId: F:Virgis.KdTree`1._open
      language: CSharp
      name:
        CSharp: _open
        VB: _open
      nameWithType:
        CSharp: KdTree<T>._open
        VB: KdTree(Of T)._open
      qualifiedName:
        CSharp: Virgis.KdTree<T>._open
        VB: Virgis.KdTree(Of T)._open
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _open
        path: ''
        startLine: 6132
      syntax:
        content:
          CSharp: protected KdTree<T>.KdNode[] _open
          VB: Protected _open As KdTree(Of T).KdNode()
        return:
          type: Virgis.KdTree`1.KdNode[]
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.KdTree`1.Count
      commentId: P:Virgis.KdTree`1.Count
      language: CSharp
      name:
        CSharp: Count
        VB: Count
      nameWithType:
        CSharp: KdTree<T>.Count
        VB: KdTree(Of T).Count
      qualifiedName:
        CSharp: Virgis.KdTree<T>.Count
        VB: Virgis.KdTree(Of T).Count
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Count
        path: ''
        startLine: 6134
      syntax:
        content:
          CSharp: public int Count { get; }
          VB: Public ReadOnly Property Count As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Virgis.KdTree`1.Count*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Virgis.KdTree`1.IsReadOnly
      commentId: P:Virgis.KdTree`1.IsReadOnly
      language: CSharp
      name:
        CSharp: IsReadOnly
        VB: IsReadOnly
      nameWithType:
        CSharp: KdTree<T>.IsReadOnly
        VB: KdTree(Of T).IsReadOnly
      qualifiedName:
        CSharp: Virgis.KdTree<T>.IsReadOnly
        VB: Virgis.KdTree(Of T).IsReadOnly
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: IsReadOnly
        path: ''
        startLine: 6135
      syntax:
        content:
          CSharp: public bool IsReadOnly { get; }
          VB: Public ReadOnly Property IsReadOnly As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Virgis.KdTree`1.IsReadOnly*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Virgis.KdTree`1.AverageSearchLength
      commentId: P:Virgis.KdTree`1.AverageSearchLength
      language: CSharp
      name:
        CSharp: AverageSearchLength
        VB: AverageSearchLength
      nameWithType:
        CSharp: KdTree<T>.AverageSearchLength
        VB: KdTree(Of T).AverageSearchLength
      qualifiedName:
        CSharp: Virgis.KdTree<T>.AverageSearchLength
        VB: Virgis.KdTree(Of T).AverageSearchLength
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AverageSearchLength
        path: ''
        startLine: 6136
      syntax:
        content:
          CSharp: public float AverageSearchLength { get; protected set; }
          VB: Public Property AverageSearchLength As Single
        parameters: []
        return:
          type: System.Single
      overload: Virgis.KdTree`1.AverageSearchLength*
      modifiers:
        CSharp:
        - public
        - get
        - protected set
        VB:
        - Public
        - Get
        - Protected Set
    - id: Virgis.KdTree`1.AverageSearchDeep
      commentId: P:Virgis.KdTree`1.AverageSearchDeep
      language: CSharp
      name:
        CSharp: AverageSearchDeep
        VB: AverageSearchDeep
      nameWithType:
        CSharp: KdTree<T>.AverageSearchDeep
        VB: KdTree(Of T).AverageSearchDeep
      qualifiedName:
        CSharp: Virgis.KdTree<T>.AverageSearchDeep
        VB: Virgis.KdTree(Of T).AverageSearchDeep
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AverageSearchDeep
        path: ''
        startLine: 6137
      syntax:
        content:
          CSharp: public float AverageSearchDeep { get; protected set; }
          VB: Public Property AverageSearchDeep As Single
        parameters: []
        return:
          type: System.Single
      overload: Virgis.KdTree`1.AverageSearchDeep*
      modifiers:
        CSharp:
        - public
        - get
        - protected set
        VB:
        - Public
        - Get
        - Protected Set
    - id: Virgis.KdTree`1.#ctor(System.Boolean)
      commentId: M:Virgis.KdTree`1.#ctor(System.Boolean)
      language: CSharp
      name:
        CSharp: KdTree(Boolean)
        VB: KdTree(Boolean)
      nameWithType:
        CSharp: KdTree<T>.KdTree(Boolean)
        VB: KdTree(Of T).KdTree(Boolean)
      qualifiedName:
        CSharp: Virgis.KdTree<T>.KdTree(System.Boolean)
        VB: Virgis.KdTree(Of T).KdTree(System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: .ctor
        path: ''
        startLine: 6143
      summary: "\ncreate a tree\n"
      example: []
      syntax:
        content:
          CSharp: public KdTree(bool just2D = false)
          VB: Public Sub New(just2D As Boolean = False)
        parameters:
        - id: just2D
          type: System.Boolean
          description: just use x/z
      overload: Virgis.KdTree`1.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1.Item(System.Int32)
      commentId: P:Virgis.KdTree`1.Item(System.Int32)
      language: CSharp
      name:
        CSharp: Item[Int32]
        VB: Item(Int32)
      nameWithType:
        CSharp: KdTree<T>.Item[Int32]
        VB: KdTree(Of T).Item(Int32)
      qualifiedName:
        CSharp: Virgis.KdTree<T>.Item[System.Int32]
        VB: Virgis.KdTree(Of T).Item(System.Int32)
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: this[]
        path: ''
        startLine: 6148
      syntax:
        content:
          CSharp: public T this[int key] { get; }
          VB: Public ReadOnly Property Item(key As Integer) As T
        parameters:
        - id: key
          type: System.Int32
        return:
          type: '{T}'
      overload: Virgis.KdTree`1.Item*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Virgis.KdTree`1.Add(`0)
      commentId: M:Virgis.KdTree`1.Add(`0)
      language: CSharp
      name:
        CSharp: Add(T)
        VB: Add(T)
      nameWithType:
        CSharp: KdTree<T>.Add(T)
        VB: KdTree(Of T).Add(T)
      qualifiedName:
        CSharp: Virgis.KdTree<T>.Add(T)
        VB: Virgis.KdTree(Of T).Add(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Add
        path: ''
        startLine: 6165
      summary: "\nadd item\n"
      example: []
      syntax:
        content:
          CSharp: public void Add(T item)
          VB: Public Sub Add(item As T)
        parameters:
        - id: item
          type: '{T}'
          description: item
      overload: Virgis.KdTree`1.Add*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1.AddAll(System.Collections.Generic.List{`0})
      commentId: M:Virgis.KdTree`1.AddAll(System.Collections.Generic.List{`0})
      language: CSharp
      name:
        CSharp: AddAll(List<T>)
        VB: AddAll(List(Of T))
      nameWithType:
        CSharp: KdTree<T>.AddAll(List<T>)
        VB: KdTree(Of T).AddAll(List(Of T))
      qualifiedName:
        CSharp: Virgis.KdTree<T>.AddAll(System.Collections.Generic.List<T>)
        VB: Virgis.KdTree(Of T).AddAll(System.Collections.Generic.List(Of T))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: AddAll
        path: ''
        startLine: 6174
      summary: "\nbatch add items\n"
      example: []
      syntax:
        content:
          CSharp: public void AddAll(List<T> items)
          VB: Public Sub AddAll(items As List(Of T))
        parameters:
        - id: items
          type: System.Collections.Generic.List{{T}}
          description: items
      overload: Virgis.KdTree`1.AddAll*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1.FindAll(System.Predicate{`0})
      commentId: M:Virgis.KdTree`1.FindAll(System.Predicate{`0})
      language: CSharp
      name:
        CSharp: FindAll(Predicate<T>)
        VB: FindAll(Predicate(Of T))
      nameWithType:
        CSharp: KdTree<T>.FindAll(Predicate<T>)
        VB: KdTree(Of T).FindAll(Predicate(Of T))
      qualifiedName:
        CSharp: Virgis.KdTree<T>.FindAll(System.Predicate<T>)
        VB: Virgis.KdTree(Of T).FindAll(System.Predicate(Of T))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: FindAll
        path: ''
        startLine: 6184
      summary: "\nfind all objects that matches the given predicate\n"
      example: []
      syntax:
        content:
          CSharp: public KdTree<T> FindAll(Predicate<T> match)
          VB: Public Function FindAll(match As Predicate(Of T)) As KdTree(Of T)
        parameters:
        - id: match
          type: System.Predicate{{T}}
          description: lamda expression
        return:
          type: Virgis.KdTree`1
      overload: Virgis.KdTree`1.FindAll*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1.Find(System.Predicate{`0})
      commentId: M:Virgis.KdTree`1.Find(System.Predicate{`0})
      language: CSharp
      name:
        CSharp: Find(Predicate<T>)
        VB: Find(Predicate(Of T))
      nameWithType:
        CSharp: KdTree<T>.Find(Predicate<T>)
        VB: KdTree(Of T).Find(Predicate(Of T))
      qualifiedName:
        CSharp: Virgis.KdTree<T>.Find(System.Predicate<T>)
        VB: Virgis.KdTree(Of T).Find(System.Predicate(Of T))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Find
        path: ''
        startLine: 6197
      summary: "\nfind first object that matches the given predicate\n"
      example: []
      syntax:
        content:
          CSharp: public T Find(Predicate<T> match)
          VB: Public Function Find(match As Predicate(Of T)) As T
        parameters:
        - id: match
          type: System.Predicate{{T}}
          description: lamda expression
        return:
          type: '{T}'
      overload: Virgis.KdTree`1.Find*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1.RemoveAt(System.Int32)
      commentId: M:Virgis.KdTree`1.RemoveAt(System.Int32)
      language: CSharp
      name:
        CSharp: RemoveAt(Int32)
        VB: RemoveAt(Int32)
      nameWithType:
        CSharp: KdTree<T>.RemoveAt(Int32)
        VB: KdTree(Of T).RemoveAt(Int32)
      qualifiedName:
        CSharp: Virgis.KdTree<T>.RemoveAt(System.Int32)
        VB: Virgis.KdTree(Of T).RemoveAt(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: RemoveAt
        path: ''
        startLine: 6212
      summary: "\nRemove at position i (position in list or loop)\n"
      example: []
      syntax:
        content:
          CSharp: public void RemoveAt(int i)
          VB: Public Sub RemoveAt(i As Integer)
        parameters:
        - id: i
          type: System.Int32
      overload: Virgis.KdTree`1.RemoveAt*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1.RemoveAll(System.Predicate{`0})
      commentId: M:Virgis.KdTree`1.RemoveAll(System.Predicate{`0})
      language: CSharp
      name:
        CSharp: RemoveAll(Predicate<T>)
        VB: RemoveAll(Predicate(Of T))
      nameWithType:
        CSharp: KdTree<T>.RemoveAll(Predicate<T>)
        VB: KdTree(Of T).RemoveAll(Predicate(Of T))
      qualifiedName:
        CSharp: Virgis.KdTree<T>.RemoveAll(System.Predicate<T>)
        VB: Virgis.KdTree(Of T).RemoveAll(System.Predicate(Of T))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: RemoveAll
        path: ''
        startLine: 6230
      summary: "\nremove all objects that matches the given predicate\n"
      example: []
      syntax:
        content:
          CSharp: public void RemoveAll(Predicate<T> match)
          VB: Public Sub RemoveAll(match As Predicate(Of T))
        parameters:
        - id: match
          type: System.Predicate{{T}}
          description: lamda expression
      overload: Virgis.KdTree`1.RemoveAll*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1.CountAll(System.Predicate{`0})
      commentId: M:Virgis.KdTree`1.CountAll(System.Predicate{`0})
      language: CSharp
      name:
        CSharp: CountAll(Predicate<T>)
        VB: CountAll(Predicate(Of T))
      nameWithType:
        CSharp: KdTree<T>.CountAll(Predicate<T>)
        VB: KdTree(Of T).CountAll(Predicate(Of T))
      qualifiedName:
        CSharp: Virgis.KdTree<T>.CountAll(System.Predicate<T>)
        VB: Virgis.KdTree(Of T).CountAll(System.Predicate(Of T))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: CountAll
        path: ''
        startLine: 6249
      summary: "\ncount all objects that matches the given predicate\n"
      example: []
      syntax:
        content:
          CSharp: public int CountAll(Predicate<T> match)
          VB: Public Function CountAll(match As Predicate(Of T)) As Integer
        parameters:
        - id: match
          type: System.Predicate{{T}}
          description: lamda expression
        return:
          type: System.Int32
          description: matching object count
      overload: Virgis.KdTree`1.CountAll*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1.Clear
      commentId: M:Virgis.KdTree`1.Clear
      language: CSharp
      name:
        CSharp: Clear()
        VB: Clear()
      nameWithType:
        CSharp: KdTree<T>.Clear()
        VB: KdTree(Of T).Clear()
      qualifiedName:
        CSharp: Virgis.KdTree<T>.Clear()
        VB: Virgis.KdTree(Of T).Clear()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Clear
        path: ''
        startLine: 6261
      summary: "\nclear tree\n"
      example: []
      syntax:
        content:
          CSharp: public void Clear()
          VB: Public Sub Clear
      overload: Virgis.KdTree`1.Clear*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1.UpdatePositions(System.Single)
      commentId: M:Virgis.KdTree`1.UpdatePositions(System.Single)
      language: CSharp
      name:
        CSharp: UpdatePositions(Single)
        VB: UpdatePositions(Single)
      nameWithType:
        CSharp: KdTree<T>.UpdatePositions(Single)
        VB: KdTree(Of T).UpdatePositions(Single)
      qualifiedName:
        CSharp: Virgis.KdTree<T>.UpdatePositions(System.Single)
        VB: Virgis.KdTree(Of T).UpdatePositions(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: UpdatePositions
        path: ''
        startLine: 6275
      summary: "\nUpdate positions (if objects moved)\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdatePositions(float rate)
          VB: Public Sub UpdatePositions(rate As Single)
        parameters:
        - id: rate
          type: System.Single
          description: Updates per second
      overload: Virgis.KdTree`1.UpdatePositions*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1.UpdatePositions
      commentId: M:Virgis.KdTree`1.UpdatePositions
      language: CSharp
      name:
        CSharp: UpdatePositions()
        VB: UpdatePositions()
      nameWithType:
        CSharp: KdTree<T>.UpdatePositions()
        VB: KdTree(Of T).UpdatePositions()
      qualifiedName:
        CSharp: Virgis.KdTree<T>.UpdatePositions()
        VB: Virgis.KdTree(Of T).UpdatePositions()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: UpdatePositions
        path: ''
        startLine: 6288
      summary: "\nUpdate positions (if objects moved)\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdatePositions()
          VB: Public Sub UpdatePositions
      overload: Virgis.KdTree`1.UpdatePositions*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1.GetEnumerator
      commentId: M:Virgis.KdTree`1.GetEnumerator
      language: CSharp
      name:
        CSharp: GetEnumerator()
        VB: GetEnumerator()
      nameWithType:
        CSharp: KdTree<T>.GetEnumerator()
        VB: KdTree(Of T).GetEnumerator()
      qualifiedName:
        CSharp: Virgis.KdTree<T>.GetEnumerator()
        VB: Virgis.KdTree(Of T).GetEnumerator()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: GetEnumerator
        path: ''
        startLine: 6316
      summary: "\nMethod to enable foreach-loops\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerator<T> GetEnumerator()
          VB: Public Function GetEnumerator As IEnumerator(Of T)
        return:
          type: System.Collections.Generic.IEnumerator{{T}}
          description: Enumberator
      overload: Virgis.KdTree`1.GetEnumerator*
      implements:
      - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1.ToList
      commentId: M:Virgis.KdTree`1.ToList
      language: CSharp
      name:
        CSharp: ToList()
        VB: ToList()
      nameWithType:
        CSharp: KdTree<T>.ToList()
        VB: KdTree(Of T).ToList()
      qualifiedName:
        CSharp: Virgis.KdTree<T>.ToList()
        VB: Virgis.KdTree(Of T).ToList()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ToList
        path: ''
        startLine: 6330
      summary: "\nConvert to list\n"
      example: []
      syntax:
        content:
          CSharp: public List<T> ToList()
          VB: Public Function ToList As List(Of T)
        return:
          type: System.Collections.Generic.List{{T}}
          description: list
      overload: Virgis.KdTree`1.ToList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1._distance(Vector3,Vector3)
      commentId: M:Virgis.KdTree`1._distance(Vector3,Vector3)
      language: CSharp
      name:
        CSharp: _distance(Vector3, Vector3)
        VB: _distance(Vector3, Vector3)
      nameWithType:
        CSharp: KdTree<T>._distance(Vector3, Vector3)
        VB: KdTree(Of T)._distance(Vector3, Vector3)
      qualifiedName:
        CSharp: Virgis.KdTree<T>._distance(Vector3, Vector3)
        VB: Virgis.KdTree(Of T)._distance(Vector3, Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _distance
        path: ''
        startLine: 6346
      syntax:
        content:
          CSharp: protected float _distance(Vector3 a, Vector3 b)
          VB: Protected Function _distance(a As Vector3, b As Vector3) As Single
        parameters:
        - id: a
          type: Vector3
        - id: b
          type: Vector3
        return:
          type: System.Single
      overload: Virgis.KdTree`1._distance*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.KdTree`1._getSplitValue(System.Int32,Vector3)
      commentId: M:Virgis.KdTree`1._getSplitValue(System.Int32,Vector3)
      language: CSharp
      name:
        CSharp: _getSplitValue(Int32, Vector3)
        VB: _getSplitValue(Int32, Vector3)
      nameWithType:
        CSharp: KdTree<T>._getSplitValue(Int32, Vector3)
        VB: KdTree(Of T)._getSplitValue(Int32, Vector3)
      qualifiedName:
        CSharp: Virgis.KdTree<T>._getSplitValue(System.Int32, Vector3)
        VB: Virgis.KdTree(Of T)._getSplitValue(System.Int32, Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _getSplitValue
        path: ''
        startLine: 6353
      syntax:
        content:
          CSharp: protected float _getSplitValue(int level, Vector3 position)
          VB: Protected Function _getSplitValue(level As Integer, position As Vector3) As Single
        parameters:
        - id: level
          type: System.Int32
        - id: position
          type: Vector3
        return:
          type: System.Single
      overload: Virgis.KdTree`1._getSplitValue*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Virgis.KdTree`1.FindClosest(Vector3)
      commentId: M:Virgis.KdTree`1.FindClosest(Vector3)
      language: CSharp
      name:
        CSharp: FindClosest(Vector3)
        VB: FindClosest(Vector3)
      nameWithType:
        CSharp: KdTree<T>.FindClosest(Vector3)
        VB: KdTree(Of T).FindClosest(Vector3)
      qualifiedName:
        CSharp: Virgis.KdTree<T>.FindClosest(Vector3)
        VB: Virgis.KdTree(Of T).FindClosest(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: FindClosest
        path: ''
        startLine: 6417
      summary: "\nFind closest object to given position\n"
      example: []
      syntax:
        content:
          CSharp: public T FindClosest(Vector3 position)
          VB: Public Function FindClosest(position As Vector3) As T
        parameters:
        - id: position
          type: Vector3
          description: position
        return:
          type: '{T}'
          description: closest object
      overload: Virgis.KdTree`1.FindClosest*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1.FindClose(Vector3)
      commentId: M:Virgis.KdTree`1.FindClose(Vector3)
      language: CSharp
      name:
        CSharp: FindClose(Vector3)
        VB: FindClose(Vector3)
      nameWithType:
        CSharp: KdTree<T>.FindClose(Vector3)
        VB: KdTree(Of T).FindClose(Vector3)
      qualifiedName:
        CSharp: Virgis.KdTree<T>.FindClose(Vector3)
        VB: Virgis.KdTree(Of T).FindClose(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: FindClose
        path: ''
        startLine: 6427
      summary: "\nFind close objects to given position\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerable<T> FindClose(Vector3 position)
          VB: Public Function FindClose(position As Vector3) As IEnumerable(Of T)
        parameters:
        - id: position
          type: Vector3
          description: position
        return:
          type: System.Collections.Generic.IEnumerable{{T}}
          description: close object
      overload: Virgis.KdTree`1.FindClose*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Virgis.KdTree`1._findClosest(Vector3,System.Collections.Generic.List{`0})
      commentId: M:Virgis.KdTree`1._findClosest(Vector3,System.Collections.Generic.List{`0})
      language: CSharp
      name:
        CSharp: _findClosest(Vector3, List<T>)
        VB: _findClosest(Vector3, List(Of T))
      nameWithType:
        CSharp: KdTree<T>._findClosest(Vector3, List<T>)
        VB: KdTree(Of T)._findClosest(Vector3, List(Of T))
      qualifiedName:
        CSharp: Virgis.KdTree<T>._findClosest(Vector3, System.Collections.Generic.List<T>)
        VB: Virgis.KdTree(Of T)._findClosest(Vector3, System.Collections.Generic.List(Of T))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: _findClosest
        path: ''
        startLine: 6434
      syntax:
        content:
          CSharp: protected T _findClosest(Vector3 position, List<T> traversed = null)
          VB: Protected Function _findClosest(position As Vector3, traversed As List(Of T) = Nothing) As T
        parameters:
        - id: position
          type: Vector3
        - id: traversed
          type: System.Collections.Generic.List{{T}}
        return:
          type: '{T}'
      overload: Virgis.KdTree`1._findClosest*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
  - id: Virgis.KdTree`1.KdNode
    commentId: T:Virgis.KdTree`1.KdNode
    language: CSharp
    name:
      CSharp: KdTree<T>.KdNode
      VB: KdTree(Of T).KdNode
    nameWithType:
      CSharp: KdTree<T>.KdNode
      VB: KdTree(Of T).KdNode
    qualifiedName:
      CSharp: Virgis.KdTree<T>.KdNode
      VB: Virgis.KdTree(Of T).KdNode
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: KdNode
      path: ''
      startLine: 6506
    syntax:
      content:
        CSharp: protected class KdNode
        VB: Protected Class KdNode
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - protected
      - class
      VB:
      - Protected
      - Class
    items: []
  - id: Virgis.Vector3ExtensionMethods
    commentId: T:Virgis.Vector3ExtensionMethods
    language: CSharp
    name:
      CSharp: Vector3ExtensionMethods
      VB: Vector3ExtensionMethods
    nameWithType:
      CSharp: Vector3ExtensionMethods
      VB: Vector3ExtensionMethods
    qualifiedName:
      CSharp: Virgis.Vector3ExtensionMethods
      VB: Virgis.Vector3ExtensionMethods
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: Vector3ExtensionMethods
      path: ''
      startLine: 6530
    syntax:
      content:
        CSharp: public static class Vector3ExtensionMethods
        VB: Public Module Vector3ExtensionMethods
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Virgis.Vector3ExtensionMethods.ToPosition(Vector3,ICRSObject)
      commentId: M:Virgis.Vector3ExtensionMethods.ToPosition(Vector3,ICRSObject)
      language: CSharp
      name:
        CSharp: ToPosition(Vector3, ICRSObject)
        VB: ToPosition(Vector3, ICRSObject)
      nameWithType:
        CSharp: Vector3ExtensionMethods.ToPosition(Vector3, ICRSObject)
        VB: Vector3ExtensionMethods.ToPosition(Vector3, ICRSObject)
      qualifiedName:
        CSharp: Virgis.Vector3ExtensionMethods.ToPosition(Vector3, ICRSObject)
        VB: Virgis.Vector3ExtensionMethods.ToPosition(Vector3, ICRSObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ToPosition
        path: ''
        startLine: 6536
      summary: "\nConvert Vector3 World Space location to Position taking account of zoom, scale and mapscale\n"
      example: []
      syntax:
        content:
          CSharp: public static IPosition ToPosition(this Vector3 position, ICRSObject crs = null)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ToPosition(position As Vector3, crs As ICRSObject = Nothing) As IPosition
        parameters:
        - id: position
          type: Vector3
          description: Vector3 World Space coordinates
        - id: crs
          type: ICRSObject
        return:
          type: IPosition
          description: Position
      overload: Virgis.Vector3ExtensionMethods.ToPosition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.Vector3ExtensionMethods.ToGeometry(Vector3)
      commentId: M:Virgis.Vector3ExtensionMethods.ToGeometry(Vector3)
      language: CSharp
      name:
        CSharp: ToGeometry(Vector3)
        VB: ToGeometry(Vector3)
      nameWithType:
        CSharp: Vector3ExtensionMethods.ToGeometry(Vector3)
        VB: Vector3ExtensionMethods.ToGeometry(Vector3)
      qualifiedName:
        CSharp: Virgis.Vector3ExtensionMethods.ToGeometry(Vector3)
        VB: Virgis.Vector3ExtensionMethods.ToGeometry(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ToGeometry
        path: ''
        startLine: 6562
      syntax:
        content:
          CSharp: public static Geometry ToGeometry(this Vector3 position)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ToGeometry(position As Vector3) As Geometry
        parameters:
        - id: position
          type: Vector3
        return:
          type: Geometry
      overload: Virgis.Vector3ExtensionMethods.ToGeometry*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.Vector3ExtensionMethods.ToPoint(Vector3)
      commentId: M:Virgis.Vector3ExtensionMethods.ToPoint(Vector3)
      language: CSharp
      name:
        CSharp: ToPoint(Vector3)
        VB: ToPoint(Vector3)
      nameWithType:
        CSharp: Vector3ExtensionMethods.ToPoint(Vector3)
        VB: Vector3ExtensionMethods.ToPoint(Vector3)
      qualifiedName:
        CSharp: Virgis.Vector3ExtensionMethods.ToPoint(Vector3)
        VB: Virgis.Vector3ExtensionMethods.ToPoint(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ToPoint
        path: ''
        startLine: 6574
      summary: "\nConverts Vector3 World Space Location to Point taking accoun t of zoom, scale and mapscale\n"
      example: []
      syntax:
        content:
          CSharp: public static Point ToPoint(this Vector3 point)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ToPoint(point As Vector3) As Point
        parameters:
        - id: point
          type: Vector3
        return:
          type: Point
          description: ''
      overload: Virgis.Vector3ExtensionMethods.ToPoint*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Virgis.PointExtensionsMethods
    commentId: T:Virgis.PointExtensionsMethods
    language: CSharp
    name:
      CSharp: PointExtensionsMethods
      VB: PointExtensionsMethods
    nameWithType:
      CSharp: PointExtensionsMethods
      VB: PointExtensionsMethods
    qualifiedName:
      CSharp: Virgis.PointExtensionsMethods
      VB: Virgis.PointExtensionsMethods
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: PointExtensionsMethods
      path: ''
      startLine: 6579
    syntax:
      content:
        CSharp: public static class PointExtensionsMethods
        VB: Public Module PointExtensionsMethods
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Virgis.PointExtensionsMethods.ToVector3(Point)
      commentId: M:Virgis.PointExtensionsMethods.ToVector3(Point)
      language: CSharp
      name:
        CSharp: ToVector3(Point)
        VB: ToVector3(Point)
      nameWithType:
        CSharp: PointExtensionsMethods.ToVector3(Point)
        VB: PointExtensionsMethods.ToVector3(Point)
      qualifiedName:
        CSharp: Virgis.PointExtensionsMethods.ToVector3(Point)
        VB: Virgis.PointExtensionsMethods.ToVector3(Point)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ToVector3
        path: ''
        startLine: 6580
      syntax:
        content:
          CSharp: public static Vector3 ToVector3(this Point point)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ToVector3(point As Point) As Vector3
        parameters:
        - id: point
          type: Point
        return:
          type: Vector3
      overload: Virgis.PointExtensionsMethods.ToVector3*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.PointExtensionsMethods.ToGeometry(Point)
      commentId: M:Virgis.PointExtensionsMethods.ToGeometry(Point)
      language: CSharp
      name:
        CSharp: ToGeometry(Point)
        VB: ToGeometry(Point)
      nameWithType:
        CSharp: PointExtensionsMethods.ToGeometry(Point)
        VB: PointExtensionsMethods.ToGeometry(Point)
      qualifiedName:
        CSharp: Virgis.PointExtensionsMethods.ToGeometry(Point)
        VB: Virgis.PointExtensionsMethods.ToGeometry(Point)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ToGeometry
        path: ''
        startLine: 6584
      syntax:
        content:
          CSharp: public static Geometry ToGeometry(this Point point)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ToGeometry(point As Point) As Geometry
        parameters:
        - id: point
          type: Point
        return:
          type: Geometry
      overload: Virgis.PointExtensionsMethods.ToGeometry*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Virgis.PositionExtensionMethods
    commentId: T:Virgis.PositionExtensionMethods
    language: CSharp
    name:
      CSharp: PositionExtensionMethods
      VB: PositionExtensionMethods
    nameWithType:
      CSharp: PositionExtensionMethods
      VB: PositionExtensionMethods
    qualifiedName:
      CSharp: Virgis.PositionExtensionMethods
      VB: Virgis.PositionExtensionMethods
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: PositionExtensionMethods
      path: ''
      startLine: 6589
    syntax:
      content:
        CSharp: public static class PositionExtensionMethods
        VB: Public Module PositionExtensionMethods
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Virgis.PositionExtensionMethods.Vector2(IPosition)
      commentId: M:Virgis.PositionExtensionMethods.Vector2(IPosition)
      language: CSharp
      name:
        CSharp: Vector2(IPosition)
        VB: Vector2(IPosition)
      nameWithType:
        CSharp: PositionExtensionMethods.Vector2(IPosition)
        VB: PositionExtensionMethods.Vector2(IPosition)
      qualifiedName:
        CSharp: Virgis.PositionExtensionMethods.Vector2(IPosition)
        VB: Virgis.PositionExtensionMethods.Vector2(IPosition)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Vector2
        path: ''
        startLine: 6596
      summary: "\nConverts IPosition to UnityEngine.vector2\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector2 Vector2(this IPosition position)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Vector2(position As IPosition) As Vector2
        parameters:
        - id: position
          type: IPosition
          description: IPosition
        return:
          type: Vector2
          description: UnityEngine.Vector2
      overload: Virgis.PositionExtensionMethods.Vector2*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.PositionExtensionMethods.Vector3(IPosition,ICRSObject)
      commentId: M:Virgis.PositionExtensionMethods.Vector3(IPosition,ICRSObject)
      language: CSharp
      name:
        CSharp: Vector3(IPosition, ICRSObject)
        VB: Vector3(IPosition, ICRSObject)
      nameWithType:
        CSharp: PositionExtensionMethods.Vector3(IPosition, ICRSObject)
        VB: PositionExtensionMethods.Vector3(IPosition, ICRSObject)
      qualifiedName:
        CSharp: Virgis.PositionExtensionMethods.Vector3(IPosition, ICRSObject)
        VB: Virgis.PositionExtensionMethods.Vector3(IPosition, ICRSObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Vector3
        path: ''
        startLine: 6606
      summary: "\nConverts Iposition to Vector3 World Space coordinates takling account of zoom, scale and mapscale\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector3 Vector3(this IPosition position, ICRSObject crs = null)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Vector3(position As IPosition, crs As ICRSObject = Nothing) As Vector3
        parameters:
        - id: position
          type: IPosition
          description: IPosition
        - id: crs
          type: ICRSObject
        return:
          type: Vector3
          description: Vector3
      overload: Virgis.PositionExtensionMethods.Vector3*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.PositionExtensionMethods.ToGeometry(IPosition,ICRSObject)
      commentId: M:Virgis.PositionExtensionMethods.ToGeometry(IPosition,ICRSObject)
      language: CSharp
      name:
        CSharp: ToGeometry(IPosition, ICRSObject)
        VB: ToGeometry(IPosition, ICRSObject)
      nameWithType:
        CSharp: PositionExtensionMethods.ToGeometry(IPosition, ICRSObject)
        VB: PositionExtensionMethods.ToGeometry(IPosition, ICRSObject)
      qualifiedName:
        CSharp: Virgis.PositionExtensionMethods.ToGeometry(IPosition, ICRSObject)
        VB: Virgis.PositionExtensionMethods.ToGeometry(IPosition, ICRSObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ToGeometry
        path: ''
        startLine: 6612
      syntax:
        content:
          CSharp: public static Geometry ToGeometry(this IPosition position, ICRSObject crs)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ToGeometry(position As IPosition, crs As ICRSObject) As Geometry
        parameters:
        - id: position
          type: IPosition
        - id: crs
          type: ICRSObject
        return:
          type: Geometry
      overload: Virgis.PositionExtensionMethods.ToGeometry*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Virgis.LineExtensionMethods
    commentId: T:Virgis.LineExtensionMethods
    language: CSharp
    name:
      CSharp: LineExtensionMethods
      VB: LineExtensionMethods
    nameWithType:
      CSharp: LineExtensionMethods
      VB: LineExtensionMethods
    qualifiedName:
      CSharp: Virgis.LineExtensionMethods
      VB: Virgis.LineExtensionMethods
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Virgis
    source:
      id: LineExtensionMethods
      path: ''
      startLine: 6644
    syntax:
      content:
        CSharp: public static class LineExtensionMethods
        VB: Public Module LineExtensionMethods
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Virgis.LineExtensionMethods.Point(LineString,System.Int32)
      commentId: M:Virgis.LineExtensionMethods.Point(LineString,System.Int32)
      language: CSharp
      name:
        CSharp: Point(LineString, Int32)
        VB: Point(LineString, Int32)
      nameWithType:
        CSharp: LineExtensionMethods.Point(LineString, Int32)
        VB: LineExtensionMethods.Point(LineString, Int32)
      qualifiedName:
        CSharp: Virgis.LineExtensionMethods.Point(LineString, System.Int32)
        VB: Virgis.LineExtensionMethods.Point(LineString, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Point
        path: ''
        startLine: 6651
      summary: "\nConverts LineString Vertex i to a Position\n"
      example: []
      syntax:
        content:
          CSharp: public static Position Point(this LineString line, int i)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Point(line As LineString, i As Integer) As Position
        parameters:
        - id: line
          type: LineString
          description: LineString
        - id: i
          type: System.Int32
          description: vertex index
        return:
          type: Position
          description: Position
      overload: Virgis.LineExtensionMethods.Point*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.LineExtensionMethods.Points(LineString)
      commentId: M:Virgis.LineExtensionMethods.Points(LineString)
      language: CSharp
      name:
        CSharp: Points(LineString)
        VB: Points(LineString)
      nameWithType:
        CSharp: LineExtensionMethods.Points(LineString)
        VB: LineExtensionMethods.Points(LineString)
      qualifiedName:
        CSharp: Virgis.LineExtensionMethods.Points(LineString)
        VB: Virgis.LineExtensionMethods.Points(LineString)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Points
        path: ''
        startLine: 6660
      summary: "\nConverts LineString to Position[]\n"
      example: []
      syntax:
        content:
          CSharp: public static Position[] Points(this LineString line)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Points(line As LineString) As Position()
        parameters:
        - id: line
          type: LineString
          description: LineString
        return:
          type: Position[]
          description: Position[]
      overload: Virgis.LineExtensionMethods.Points*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.LineExtensionMethods.Vector3(LineString)
      commentId: M:Virgis.LineExtensionMethods.Vector3(LineString)
      language: CSharp
      name:
        CSharp: Vector3(LineString)
        VB: Vector3(LineString)
      nameWithType:
        CSharp: LineExtensionMethods.Vector3(LineString)
        VB: LineExtensionMethods.Vector3(LineString)
      qualifiedName:
        CSharp: Virgis.LineExtensionMethods.Vector3(LineString)
        VB: Virgis.LineExtensionMethods.Vector3(LineString)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: Vector3
        path: ''
        startLine: 6674
      summary: "\nConverts LineString to Vector3[] in world space taking account of zoom, scale and map scale\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector3[] Vector3(this LineString line)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Vector3(line As LineString) As Vector3()
        parameters:
        - id: line
          type: LineString
          description: LineString
        return:
          type: Vector3[]
          description: Vector3[] World Space Locations
      overload: Virgis.LineExtensionMethods.Vector3*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Virgis.LineExtensionMethods.ToGeometry(LineString)
      commentId: M:Virgis.LineExtensionMethods.ToGeometry(LineString)
      language: CSharp
      name:
        CSharp: ToGeometry(LineString)
        VB: ToGeometry(LineString)
      nameWithType:
        CSharp: LineExtensionMethods.ToGeometry(LineString)
        VB: LineExtensionMethods.ToGeometry(LineString)
      qualifiedName:
        CSharp: Virgis.LineExtensionMethods.ToGeometry(LineString)
        VB: Virgis.LineExtensionMethods.ToGeometry(LineString)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Virgis
      source:
        id: ToGeometry
        path: ''
        startLine: 6681
      syntax:
        content:
          CSharp: public static Geometry ToGeometry(this LineString line)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ToGeometry(line As LineString) As Geometry
        parameters:
        - id: line
          type: LineString
        return:
          type: Geometry
      overload: Virgis.LineExtensionMethods.ToGeometry*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
references:
  Virgis:
    name:
      CSharp:
      - name: Virgis
        nameWithType: Virgis
        qualifiedName: Virgis
      VB:
      - name: Virgis
        nameWithType: Virgis
        qualifiedName: Virgis
    isDefinition: true
    commentId: N:Virgis
  Virgis.AppState:
    name:
      CSharp:
      - id: Virgis.AppState
        name: AppState
        nameWithType: AppState
        qualifiedName: Virgis.AppState
      VB:
      - id: Virgis.AppState
        name: AppState
        nameWithType: AppState
        qualifiedName: Virgis.AppState
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.AppState
  Virgis.OrientEvent:
    name:
      CSharp:
      - id: Virgis.OrientEvent
        name: OrientEvent
        nameWithType: OrientEvent
        qualifiedName: Virgis.OrientEvent
      VB:
      - id: Virgis.OrientEvent
        name: OrientEvent
        nameWithType: OrientEvent
        qualifiedName: Virgis.OrientEvent
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.OrientEvent
  Virgis.AppState.Orientation*:
    name:
      CSharp:
      - id: Virgis.AppState.Orientation*
        name: Orientation
        nameWithType: AppState.Orientation
        qualifiedName: Virgis.AppState.Orientation
      VB:
      - id: Virgis.AppState.Orientation*
        name: Orientation
        nameWithType: AppState.Orientation
        qualifiedName: Virgis.AppState.Orientation
    isDefinition: true
    commentId: Overload:Virgis.AppState.Orientation
  Virgis.InfoEvent:
    name:
      CSharp:
      - id: Virgis.InfoEvent
        name: InfoEvent
        nameWithType: InfoEvent
        qualifiedName: Virgis.InfoEvent
      VB:
      - id: Virgis.InfoEvent
        name: InfoEvent
        nameWithType: InfoEvent
        qualifiedName: Virgis.InfoEvent
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.InfoEvent
  Virgis.AppState.Info*:
    name:
      CSharp:
      - id: Virgis.AppState.Info*
        name: Info
        nameWithType: AppState.Info
        qualifiedName: Virgis.AppState.Info
      VB:
      - id: Virgis.AppState.Info*
        name: Info
        nameWithType: AppState.Info
        qualifiedName: Virgis.AppState.Info
    isDefinition: true
    commentId: Overload:Virgis.AppState.Info
  Virgis.ZoomEvent:
    name:
      CSharp:
      - id: Virgis.ZoomEvent
        name: ZoomEvent
        nameWithType: ZoomEvent
        qualifiedName: Virgis.ZoomEvent
      VB:
      - id: Virgis.ZoomEvent
        name: ZoomEvent
        nameWithType: ZoomEvent
        qualifiedName: Virgis.ZoomEvent
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.ZoomEvent
  Virgis.AppState.Zoom*:
    name:
      CSharp:
      - id: Virgis.AppState.Zoom*
        name: Zoom
        nameWithType: AppState.Zoom
        qualifiedName: Virgis.AppState.Zoom
      VB:
      - id: Virgis.AppState.Zoom*
        name: Zoom
        nameWithType: AppState.Zoom
        qualifiedName: Virgis.AppState.Zoom
    isDefinition: true
    commentId: Overload:Virgis.AppState.Zoom
  Virgis.ButtonStatus:
    name:
      CSharp:
      - id: Virgis.ButtonStatus
        name: ButtonStatus
        nameWithType: ButtonStatus
        qualifiedName: Virgis.ButtonStatus
      VB:
      - id: Virgis.ButtonStatus
        name: ButtonStatus
        nameWithType: ButtonStatus
        qualifiedName: Virgis.ButtonStatus
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.ButtonStatus
  Virgis.AppState.ButtonStatus*:
    name:
      CSharp:
      - id: Virgis.AppState.ButtonStatus*
        name: ButtonStatus
        nameWithType: AppState.ButtonStatus
        qualifiedName: Virgis.AppState.ButtonStatus
      VB:
      - id: Virgis.AppState.ButtonStatus*
        name: ButtonStatus
        nameWithType: AppState.ButtonStatus
        qualifiedName: Virgis.AppState.ButtonStatus
    isDefinition: true
    commentId: Overload:Virgis.AppState.ButtonStatus
  Virgis.ProjectChange:
    name:
      CSharp:
      - id: Virgis.ProjectChange
        name: ProjectChange
        nameWithType: ProjectChange
        qualifiedName: Virgis.ProjectChange
      VB:
      - id: Virgis.ProjectChange
        name: ProjectChange
        nameWithType: ProjectChange
        qualifiedName: Virgis.ProjectChange
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.ProjectChange
  Virgis.AppState.Project*:
    name:
      CSharp:
      - id: Virgis.AppState.Project*
        name: Project
        nameWithType: AppState.Project
        qualifiedName: Virgis.AppState.Project
      VB:
      - id: Virgis.AppState.Project*
        name: Project
        nameWithType: AppState.Project
        qualifiedName: Virgis.AppState.Project
    isDefinition: true
    commentId: Overload:Virgis.AppState.Project
  Virgis.AppState.Init*:
    name:
      CSharp:
      - id: Virgis.AppState.Init*
        name: Init
        nameWithType: AppState.Init
        qualifiedName: Virgis.AppState.Init
      VB:
      - id: Virgis.AppState.Init*
        name: Init
        nameWithType: AppState.Init
        qualifiedName: Virgis.AppState.Init
    isDefinition: true
    commentId: Overload:Virgis.AppState.Init
  Virgis.EditSession:
    name:
      CSharp:
      - id: Virgis.EditSession
        name: EditSession
        nameWithType: EditSession
        qualifiedName: Virgis.EditSession
      VB:
      - id: Virgis.EditSession
        name: EditSession
        nameWithType: EditSession
        qualifiedName: Virgis.EditSession
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.EditSession
  Virgis.AppState.editSession*:
    name:
      CSharp:
      - id: Virgis.AppState.editSession*
        name: editSession
        nameWithType: AppState.editSession
        qualifiedName: Virgis.AppState.editSession
      VB:
      - id: Virgis.AppState.editSession*
        name: editSession
        nameWithType: AppState.editSession
        qualifiedName: Virgis.AppState.editSession
    isDefinition: true
    commentId: Overload:Virgis.AppState.editSession
  GameObject:
    name:
      CSharp:
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      VB:
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
    isDefinition: true
  Virgis.AppState.map*:
    name:
      CSharp:
      - id: Virgis.AppState.map*
        name: map
        nameWithType: AppState.map
        qualifiedName: Virgis.AppState.map
      VB:
      - id: Virgis.AppState.map*
        name: map
        nameWithType: AppState.map
        qualifiedName: Virgis.AppState.map
    isDefinition: true
    commentId: Overload:Virgis.AppState.map
  GisProject:
    name:
      CSharp:
      - id: GisProject
        name: GisProject
        nameWithType: GisProject
        qualifiedName: GisProject
        isExternal: true
      VB:
      - id: GisProject
        name: GisProject
        nameWithType: GisProject
        qualifiedName: GisProject
        isExternal: true
    isDefinition: true
  Virgis.AppState.project*:
    name:
      CSharp:
      - id: Virgis.AppState.project*
        name: project
        nameWithType: AppState.project
        qualifiedName: Virgis.AppState.project
      VB:
      - id: Virgis.AppState.project*
        name: project
        nameWithType: AppState.project
        qualifiedName: Virgis.AppState.project
    isDefinition: true
    commentId: Overload:Virgis.AppState.project
  SpatialReference:
    name:
      CSharp:
      - id: SpatialReference
        name: SpatialReference
        nameWithType: SpatialReference
        qualifiedName: SpatialReference
        isExternal: true
      VB:
      - id: SpatialReference
        name: SpatialReference
        nameWithType: SpatialReference
        qualifiedName: SpatialReference
        isExternal: true
    isDefinition: true
  Virgis.AppState.mapProj*:
    name:
      CSharp:
      - id: Virgis.AppState.mapProj*
        name: mapProj
        nameWithType: AppState.mapProj
        qualifiedName: Virgis.AppState.mapProj
      VB:
      - id: Virgis.AppState.mapProj*
        name: mapProj
        nameWithType: AppState.mapProj
        qualifiedName: Virgis.AppState.mapProj
    isDefinition: true
    commentId: Overload:Virgis.AppState.mapProj
  CoordinateTransformation:
    name:
      CSharp:
      - id: CoordinateTransformation
        name: CoordinateTransformation
        nameWithType: CoordinateTransformation
        qualifiedName: CoordinateTransformation
        isExternal: true
      VB:
      - id: CoordinateTransformation
        name: CoordinateTransformation
        nameWithType: CoordinateTransformation
        qualifiedName: CoordinateTransformation
        isExternal: true
    isDefinition: true
    commentId: '!:CoordinateTransformation'
  Virgis.AppState.mapTrans*:
    name:
      CSharp:
      - id: Virgis.AppState.mapTrans*
        name: mapTrans
        nameWithType: AppState.mapTrans
        qualifiedName: Virgis.AppState.mapTrans
      VB:
      - id: Virgis.AppState.mapTrans*
        name: mapTrans
        nameWithType: AppState.mapTrans
        qualifiedName: Virgis.AppState.mapTrans
    isDefinition: true
    commentId: Overload:Virgis.AppState.mapTrans
  Virgis.AppState.initProj*:
    name:
      CSharp:
      - id: Virgis.AppState.initProj*
        name: initProj
        nameWithType: AppState.initProj
        qualifiedName: Virgis.AppState.initProj
      VB:
      - id: Virgis.AppState.initProj*
        name: initProj
        nameWithType: AppState.initProj
        qualifiedName: Virgis.AppState.initProj
    isDefinition: true
    commentId: Overload:Virgis.AppState.initProj
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.List{Component}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Component
        name: Component
        nameWithType: Component
        qualifiedName: Component
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Component
        name: Component
        nameWithType: Component
        qualifiedName: Component
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Component}
  Virgis.AppState.layers*:
    name:
      CSharp:
      - id: Virgis.AppState.layers*
        name: layers
        nameWithType: AppState.layers
        qualifiedName: Virgis.AppState.layers
      VB:
      - id: Virgis.AppState.layers*
        name: layers
        nameWithType: AppState.layers
        qualifiedName: Virgis.AppState.layers
    isDefinition: true
    commentId: Overload:Virgis.AppState.layers
  Component:
    name:
      CSharp:
      - id: Component
        name: Component
        nameWithType: Component
        qualifiedName: Component
        isExternal: true
      VB:
      - id: Component
        name: Component
        nameWithType: Component
        qualifiedName: Component
        isExternal: true
    isDefinition: true
    commentId: '!:Component'
  Virgis.AppState.addLayer*:
    name:
      CSharp:
      - id: Virgis.AppState.addLayer*
        name: addLayer
        nameWithType: AppState.addLayer
        qualifiedName: Virgis.AppState.addLayer
      VB:
      - id: Virgis.AppState.addLayer*
        name: addLayer
        nameWithType: AppState.addLayer
        qualifiedName: Virgis.AppState.addLayer
    isDefinition: true
    commentId: Overload:Virgis.AppState.addLayer
  Virgis.AppState.clearLayers*:
    name:
      CSharp:
      - id: Virgis.AppState.clearLayers*
        name: clearLayers
        nameWithType: AppState.clearLayers
        qualifiedName: Virgis.AppState.clearLayers
      VB:
      - id: Virgis.AppState.clearLayers*
        name: clearLayers
        nameWithType: AppState.clearLayers
        qualifiedName: Virgis.AppState.clearLayers
    isDefinition: true
    commentId: Overload:Virgis.AppState.clearLayers
  Camera:
    name:
      CSharp:
      - id: Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Camera
        isExternal: true
      VB:
      - id: Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Camera
        isExternal: true
    isDefinition: true
    commentId: '!:Camera'
  Virgis.AppState.mainCamera*:
    name:
      CSharp:
      - id: Virgis.AppState.mainCamera*
        name: mainCamera
        nameWithType: AppState.mainCamera
        qualifiedName: Virgis.AppState.mainCamera
      VB:
      - id: Virgis.AppState.mainCamera*
        name: mainCamera
        nameWithType: AppState.mainCamera
        qualifiedName: Virgis.AppState.mainCamera
    isDefinition: true
    commentId: Overload:Virgis.AppState.mainCamera
  Virgis.AppState.trackingSpace*:
    name:
      CSharp:
      - id: Virgis.AppState.trackingSpace*
        name: trackingSpace
        nameWithType: AppState.trackingSpace
        qualifiedName: Virgis.AppState.trackingSpace
      VB:
      - id: Virgis.AppState.trackingSpace*
        name: trackingSpace
        nameWithType: AppState.trackingSpace
        qualifiedName: Virgis.AppState.trackingSpace
    isDefinition: true
    commentId: Overload:Virgis.AppState.trackingSpace
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  Virgis.AppState.InEditSession*:
    name:
      CSharp:
      - id: Virgis.AppState.InEditSession*
        name: InEditSession
        nameWithType: AppState.InEditSession
        qualifiedName: Virgis.AppState.InEditSession
      VB:
      - id: Virgis.AppState.InEditSession*
        name: InEditSession
        nameWithType: AppState.InEditSession
        qualifiedName: Virgis.AppState.InEditSession
    isDefinition: true
    commentId: Overload:Virgis.AppState.InEditSession
  Virgis.AppState.StartEditSession*:
    name:
      CSharp:
      - id: Virgis.AppState.StartEditSession*
        name: StartEditSession
        nameWithType: AppState.StartEditSession
        qualifiedName: Virgis.AppState.StartEditSession
      VB:
      - id: Virgis.AppState.StartEditSession*
        name: StartEditSession
        nameWithType: AppState.StartEditSession
        qualifiedName: Virgis.AppState.StartEditSession
    isDefinition: true
    commentId: Overload:Virgis.AppState.StartEditSession
  Virgis.AppState.StopSaveEditSession*:
    name:
      CSharp:
      - id: Virgis.AppState.StopSaveEditSession*
        name: StopSaveEditSession
        nameWithType: AppState.StopSaveEditSession
        qualifiedName: Virgis.AppState.StopSaveEditSession
      VB:
      - id: Virgis.AppState.StopSaveEditSession*
        name: StopSaveEditSession
        nameWithType: AppState.StopSaveEditSession
        qualifiedName: Virgis.AppState.StopSaveEditSession
    isDefinition: true
    commentId: Overload:Virgis.AppState.StopSaveEditSession
  Virgis.AppState.StopDiscardEditSession*:
    name:
      CSharp:
      - id: Virgis.AppState.StopDiscardEditSession*
        name: StopDiscardEditSession
        nameWithType: AppState.StopDiscardEditSession
        qualifiedName: Virgis.AppState.StopDiscardEditSession
      VB:
      - id: Virgis.AppState.StopDiscardEditSession*
        name: StopDiscardEditSession
        nameWithType: AppState.StopDiscardEditSession
        qualifiedName: Virgis.AppState.StopDiscardEditSession
    isDefinition: true
    commentId: Overload:Virgis.AppState.StopDiscardEditSession
  Virgis.VirgisLayer:
    name:
      CSharp:
      - id: Virgis.VirgisLayer
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      VB:
      - id: Virgis.VirgisLayer
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.VirgisLayer
  Virgis.VirgisLayer._layer:
    name:
      CSharp:
      - id: Virgis.VirgisLayer._layer
        name: _layer
        nameWithType: VirgisLayer._layer
        qualifiedName: Virgis.VirgisLayer._layer
      VB:
      - id: Virgis.VirgisLayer._layer
        name: _layer
        nameWithType: VirgisLayer._layer
        qualifiedName: Virgis.VirgisLayer._layer
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: F:Virgis.VirgisLayer._layer
  Virgis.VirgisLayer.featureType:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.featureType
        name: featureType
        nameWithType: VirgisLayer.featureType
        qualifiedName: Virgis.VirgisLayer.featureType
      VB:
      - id: Virgis.VirgisLayer.featureType
        name: featureType
        nameWithType: VirgisLayer.featureType
        qualifiedName: Virgis.VirgisLayer.featureType
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: P:Virgis.VirgisLayer.featureType
  Virgis.VirgisLayer.changed:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.changed
        name: changed
        nameWithType: VirgisLayer.changed
        qualifiedName: Virgis.VirgisLayer.changed
      VB:
      - id: Virgis.VirgisLayer.changed
        name: changed
        nameWithType: VirgisLayer.changed
        qualifiedName: Virgis.VirgisLayer.changed
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: F:Virgis.VirgisLayer.changed
  Virgis.VirgisLayer._id:
    name:
      CSharp:
      - id: Virgis.VirgisLayer._id
        name: _id
        nameWithType: VirgisLayer._id
        qualifiedName: Virgis.VirgisLayer._id
      VB:
      - id: Virgis.VirgisLayer._id
        name: _id
        nameWithType: VirgisLayer._id
        qualifiedName: Virgis.VirgisLayer._id
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: F:Virgis.VirgisLayer._id
  Virgis.VirgisLayer._editable:
    name:
      CSharp:
      - id: Virgis.VirgisLayer._editable
        name: _editable
        nameWithType: VirgisLayer._editable
        qualifiedName: Virgis.VirgisLayer._editable
      VB:
      - id: Virgis.VirgisLayer._editable
        name: _editable
        nameWithType: VirgisLayer._editable
        qualifiedName: Virgis.VirgisLayer._editable
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: F:Virgis.VirgisLayer._editable
  Virgis.VirgisLayer._crs:
    name:
      CSharp:
      - id: Virgis.VirgisLayer._crs
        name: _crs
        nameWithType: VirgisLayer._crs
        qualifiedName: Virgis.VirgisLayer._crs
      VB:
      - id: Virgis.VirgisLayer._crs
        name: _crs
        nameWithType: VirgisLayer._crs
        qualifiedName: Virgis.VirgisLayer._crs
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: F:Virgis.VirgisLayer._crs
  Virgis.VirgisLayer.AddFeature(Vector3[]):
    name:
      CSharp:
      - id: Virgis.VirgisLayer.AddFeature(Vector3[])
        name: AddFeature
        nameWithType: VirgisLayer.AddFeature
        qualifiedName: Virgis.VirgisLayer.AddFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer.AddFeature(Vector3[])
        name: AddFeature
        nameWithType: VirgisLayer.AddFeature
        qualifiedName: Virgis.VirgisLayer.AddFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer.AddFeature(Vector3[])
  Virgis.VirgisLayer.Draw:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.Draw
        name: Draw
        nameWithType: VirgisLayer.Draw
        qualifiedName: Virgis.VirgisLayer.Draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer.Draw
        name: Draw
        nameWithType: VirgisLayer.Draw
        qualifiedName: Virgis.VirgisLayer.Draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer.Draw
  Virgis.VirgisLayer.CheckPoint:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.CheckPoint
        name: CheckPoint
        nameWithType: VirgisLayer.CheckPoint
        qualifiedName: Virgis.VirgisLayer.CheckPoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer.CheckPoint
        name: CheckPoint
        nameWithType: VirgisLayer.CheckPoint
        qualifiedName: Virgis.VirgisLayer.CheckPoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer.CheckPoint
  Virgis.VirgisLayer.Save:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.Save
        name: Save
        nameWithType: VirgisLayer.Save
        qualifiedName: Virgis.VirgisLayer.Save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer.Save
        name: Save
        nameWithType: VirgisLayer.Save
        qualifiedName: Virgis.VirgisLayer.Save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer.Save
  Virgis.VirgisLayer.Translate(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisLayer.Translate(Virgis.MoveArgs)
        name: Translate
        nameWithType: VirgisLayer.Translate
        qualifiedName: Virgis.VirgisLayer.Translate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer.Translate(Virgis.MoveArgs)
        name: Translate
        nameWithType: VirgisLayer.Translate
        qualifiedName: Virgis.VirgisLayer.Translate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer.Translate(Virgis.MoveArgs)
  Virgis.VirgisLayer.MoveAxis(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisLayer.MoveAxis(Virgis.MoveArgs)
        name: MoveAxis
        nameWithType: VirgisLayer.MoveAxis
        qualifiedName: Virgis.VirgisLayer.MoveAxis
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer.MoveAxis(Virgis.MoveArgs)
        name: MoveAxis
        nameWithType: VirgisLayer.MoveAxis
        qualifiedName: Virgis.VirgisLayer.MoveAxis
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer.MoveAxis(Virgis.MoveArgs)
  Virgis.VirgisLayer.MoveTo(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisLayer.MoveTo(Virgis.MoveArgs)
        name: MoveTo
        nameWithType: VirgisLayer.MoveTo
        qualifiedName: Virgis.VirgisLayer.MoveTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer.MoveTo(Virgis.MoveArgs)
        name: MoveTo
        nameWithType: VirgisLayer.MoveTo
        qualifiedName: Virgis.VirgisLayer.MoveTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer.MoveTo(Virgis.MoveArgs)
  Virgis.VirgisLayer.VertexMove(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisLayer.VertexMove(Virgis.MoveArgs)
        name: VertexMove
        nameWithType: VirgisLayer.VertexMove
        qualifiedName: Virgis.VirgisLayer.VertexMove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer.VertexMove(Virgis.MoveArgs)
        name: VertexMove
        nameWithType: VirgisLayer.VertexMove
        qualifiedName: Virgis.VirgisLayer.VertexMove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer.VertexMove(Virgis.MoveArgs)
  Virgis.VirgisLayer.Selected(Virgis.SelectionType):
    name:
      CSharp:
      - id: Virgis.VirgisLayer.Selected(Virgis.SelectionType)
        name: Selected
        nameWithType: VirgisLayer.Selected
        qualifiedName: Virgis.VirgisLayer.Selected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionType
        name: SelectionType
        nameWithType: SelectionType
        qualifiedName: Virgis.SelectionType
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer.Selected(Virgis.SelectionType)
        name: Selected
        nameWithType: VirgisLayer.Selected
        qualifiedName: Virgis.VirgisLayer.Selected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionType
        name: SelectionType
        nameWithType: SelectionType
        qualifiedName: Virgis.SelectionType
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer.Selected(Virgis.SelectionType)
  Virgis.VirgisLayer.UnSelected(Virgis.SelectionType):
    name:
      CSharp:
      - id: Virgis.VirgisLayer.UnSelected(Virgis.SelectionType)
        name: UnSelected
        nameWithType: VirgisLayer.UnSelected
        qualifiedName: Virgis.VirgisLayer.UnSelected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionType
        name: SelectionType
        nameWithType: SelectionType
        qualifiedName: Virgis.SelectionType
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer.UnSelected(Virgis.SelectionType)
        name: UnSelected
        nameWithType: VirgisLayer.UnSelected
        qualifiedName: Virgis.VirgisLayer.UnSelected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionType
        name: SelectionType
        nameWithType: SelectionType
        qualifiedName: Virgis.SelectionType
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer.UnSelected(Virgis.SelectionType)
  Virgis.VirgisLayer.GetClosest(Vector3,System.Guid[]):
    name:
      CSharp:
      - id: Virgis.VirgisLayer.GetClosest(Vector3,System.Guid[])
        name: GetClosest
        nameWithType: VirgisLayer.GetClosest
        qualifiedName: Virgis.VirgisLayer.GetClosest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer.GetClosest(Vector3,System.Guid[])
        name: GetClosest
        nameWithType: VirgisLayer.GetClosest
        qualifiedName: Virgis.VirgisLayer.GetClosest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer.GetClosest(Vector3,System.Guid[])
  Virgis.VirgisLayer.GetFeature(System.Guid):
    name:
      CSharp:
      - id: Virgis.VirgisLayer.GetFeature(System.Guid)
        name: GetFeature
        nameWithType: VirgisLayer.GetFeature
        qualifiedName: Virgis.VirgisLayer.GetFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer.GetFeature(System.Guid)
        name: GetFeature
        nameWithType: VirgisLayer.GetFeature
        qualifiedName: Virgis.VirgisLayer.GetFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer.GetFeature(System.Guid)
  Virgis.VirgisLayer.GetId:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.GetId
        name: GetId
        nameWithType: VirgisLayer.GetId
        qualifiedName: Virgis.VirgisLayer.GetId
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer.GetId
        name: GetId
        nameWithType: VirgisLayer.GetId
        qualifiedName: Virgis.VirgisLayer.GetId
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer.GetId
  Virgis.VirgisLayer.GetMetadata:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.GetMetadata
        name: GetMetadata
        nameWithType: VirgisLayer.GetMetadata
        qualifiedName: Virgis.VirgisLayer.GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer.GetMetadata
        name: GetMetadata
        nameWithType: VirgisLayer.GetMetadata
        qualifiedName: Virgis.VirgisLayer.GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer.GetMetadata
  Virgis.VirgisLayer.SetMetadata(RecordSet):
    name:
      CSharp:
      - id: Virgis.VirgisLayer.SetMetadata(RecordSet)
        name: SetMetadata
        nameWithType: VirgisLayer.SetMetadata
        qualifiedName: Virgis.VirgisLayer.SetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer.SetMetadata(RecordSet)
        name: SetMetadata
        nameWithType: VirgisLayer.SetMetadata
        qualifiedName: Virgis.VirgisLayer.SetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer.SetMetadata(RecordSet)
  Virgis.VirgisLayer.SetVisible(System.Boolean):
    name:
      CSharp:
      - id: Virgis.VirgisLayer.SetVisible(System.Boolean)
        name: SetVisible
        nameWithType: VirgisLayer.SetVisible
        qualifiedName: Virgis.VirgisLayer.SetVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer.SetVisible(System.Boolean)
        name: SetVisible
        nameWithType: VirgisLayer.SetVisible
        qualifiedName: Virgis.VirgisLayer.SetVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer.SetVisible(System.Boolean)
  Virgis.VirgisLayer._set_visible:
    name:
      CSharp:
      - id: Virgis.VirgisLayer._set_visible
        name: _set_visible
        nameWithType: VirgisLayer._set_visible
        qualifiedName: Virgis.VirgisLayer._set_visible
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer._set_visible
        name: _set_visible
        nameWithType: VirgisLayer._set_visible
        qualifiedName: Virgis.VirgisLayer._set_visible
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer._set_visible
  Virgis.VirgisLayer.IsVisible:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.IsVisible
        name: IsVisible
        nameWithType: VirgisLayer.IsVisible
        qualifiedName: Virgis.VirgisLayer.IsVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer.IsVisible
        name: IsVisible
        nameWithType: VirgisLayer.IsVisible
        qualifiedName: Virgis.VirgisLayer.IsVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer.IsVisible
  Virgis.VirgisLayer.SetEditable(System.Boolean):
    name:
      CSharp:
      - id: Virgis.VirgisLayer.SetEditable(System.Boolean)
        name: SetEditable
        nameWithType: VirgisLayer.SetEditable
        qualifiedName: Virgis.VirgisLayer.SetEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer.SetEditable(System.Boolean)
        name: SetEditable
        nameWithType: VirgisLayer.SetEditable
        qualifiedName: Virgis.VirgisLayer.SetEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer.SetEditable(System.Boolean)
  Virgis.VirgisLayer.IsEditable:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.IsEditable
        name: IsEditable
        nameWithType: VirgisLayer.IsEditable
        qualifiedName: Virgis.VirgisLayer.IsEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer.IsEditable
        name: IsEditable
        nameWithType: VirgisLayer.IsEditable
        qualifiedName: Virgis.VirgisLayer.IsEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer.IsEditable
  Virgis.VirgisLayer.SetCrs(SpatialReference):
    name:
      CSharp:
      - id: Virgis.VirgisLayer.SetCrs(SpatialReference)
        name: SetCrs
        nameWithType: VirgisLayer.SetCrs
        qualifiedName: Virgis.VirgisLayer.SetCrs
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: SpatialReference
        name: SpatialReference
        nameWithType: SpatialReference
        qualifiedName: SpatialReference
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer.SetCrs(SpatialReference)
        name: SetCrs
        nameWithType: VirgisLayer.SetCrs
        qualifiedName: Virgis.VirgisLayer.SetCrs
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: SpatialReference
        name: SpatialReference
        nameWithType: SpatialReference
        qualifiedName: SpatialReference
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer.SetCrs(SpatialReference)
  Virgis.VirgisLayer.GetCrs:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.GetCrs
        name: GetCrs
        nameWithType: VirgisLayer.GetCrs
        qualifiedName: Virgis.VirgisLayer.GetCrs
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer.GetCrs
        name: GetCrs
        nameWithType: VirgisLayer.GetCrs
        qualifiedName: Virgis.VirgisLayer.GetCrs
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer.GetCrs
  Virgis.VirgisLayer.Equals(System.Object):
    name:
      CSharp:
      - id: Virgis.VirgisLayer.Equals(System.Object)
        name: Equals
        nameWithType: VirgisLayer.Equals
        qualifiedName: Virgis.VirgisLayer.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer.Equals(System.Object)
        name: Equals
        nameWithType: VirgisLayer.Equals
        qualifiedName: Virgis.VirgisLayer.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer.Equals(System.Object)
  Virgis.VirgisLayer.GetHashCode:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.GetHashCode
        name: GetHashCode
        nameWithType: VirgisLayer.GetHashCode
        qualifiedName: Virgis.VirgisLayer.GetHashCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer.GetHashCode
        name: GetHashCode
        nameWithType: VirgisLayer.GetHashCode
        qualifiedName: Virgis.VirgisLayer.GetHashCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer.GetHashCode
  Virgis.VirgisLayer.Equals(Virgis.VirgisLayer):
    name:
      CSharp:
      - id: Virgis.VirgisLayer.Equals(Virgis.VirgisLayer)
        name: Equals
        nameWithType: VirgisLayer.Equals
        qualifiedName: Virgis.VirgisLayer.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisLayer
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer.Equals(Virgis.VirgisLayer)
        name: Equals
        nameWithType: VirgisLayer.Equals
        qualifiedName: Virgis.VirgisLayer.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisLayer
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer.Equals(Virgis.VirgisLayer)
  Virgis.VirgisLayer.GetLayer:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.GetLayer
        name: GetLayer
        nameWithType: VirgisLayer.GetLayer
        qualifiedName: Virgis.VirgisLayer.GetLayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer.GetLayer
        name: GetLayer
        nameWithType: VirgisLayer.GetLayer
        qualifiedName: Virgis.VirgisLayer.GetLayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer.GetLayer
  Virgis.IVirgisLayer:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer
        name: IVirgisLayer
        nameWithType: IVirgisLayer
        qualifiedName: Virgis.IVirgisLayer
      VB:
      - id: Virgis.IVirgisLayer
        name: IVirgisLayer
        nameWithType: IVirgisLayer
        qualifiedName: Virgis.IVirgisLayer
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.IVirgisLayer
  Virgis.IVirgisEntity:
    name:
      CSharp:
      - id: Virgis.IVirgisEntity
        name: IVirgisEntity
        nameWithType: IVirgisEntity
        qualifiedName: Virgis.IVirgisEntity
      VB:
      - id: Virgis.IVirgisEntity
        name: IVirgisEntity
        nameWithType: IVirgisEntity
        qualifiedName: Virgis.IVirgisEntity
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.IVirgisEntity
  Task`1:
    name:
      CSharp:
      - id: Task`1
        name: Task
        nameWithType: Task
        qualifiedName: Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Task`1
        name: Task
        nameWithType: Task
        qualifiedName: Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  Task{System.Boolean}:
    name:
      CSharp:
      - id: Task`1
        name: Task
        nameWithType: Task
        qualifiedName: Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Task`1
        name: Task
        nameWithType: Task
        qualifiedName: Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Task`1
    commentId: '!:Task{System.Boolean}'
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  Virgis.MapInitialize.Load*:
    name:
      CSharp:
      - id: Virgis.MapInitialize.Load*
        name: Load
        nameWithType: MapInitialize.Load
        qualifiedName: Virgis.MapInitialize.Load
      VB:
      - id: Virgis.MapInitialize.Load*
        name: Load
        nameWithType: MapInitialize.Load
        qualifiedName: Virgis.MapInitialize.Load
    isDefinition: true
    commentId: Overload:Virgis.MapInitialize.Load
  Task{Virgis.VirgisLayer}:
    name:
      CSharp:
      - id: Task`1
        name: Task
        nameWithType: Task
        qualifiedName: Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Virgis.VirgisLayer
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Task`1
        name: Task
        nameWithType: Task
        qualifiedName: Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Virgis.VirgisLayer
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Task`1
    commentId: '!:Task{Virgis.VirgisLayer}'
  RecordSet:
    name:
      CSharp:
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      VB:
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
    isDefinition: true
  Virgis.MapInitialize.createLayer*:
    name:
      CSharp:
      - id: Virgis.MapInitialize.createLayer*
        name: createLayer
        nameWithType: MapInitialize.createLayer
        qualifiedName: Virgis.MapInitialize.createLayer
      VB:
      - id: Virgis.MapInitialize.createLayer*
        name: createLayer
        nameWithType: MapInitialize.createLayer
        qualifiedName: Virgis.MapInitialize.createLayer
    isDefinition: true
    commentId: Overload:Virgis.MapInitialize.createLayer
  Virgis.MoveArgs:
    name:
      CSharp:
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      VB:
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.MoveArgs
  Virgis.MapInitialize.Add*:
    name:
      CSharp:
      - id: Virgis.MapInitialize.Add*
        name: Add
        nameWithType: MapInitialize.Add
        qualifiedName: Virgis.MapInitialize.Add
      VB:
      - id: Virgis.MapInitialize.Add*
        name: Add
        nameWithType: MapInitialize.Add
        qualifiedName: Virgis.MapInitialize.Add
    isDefinition: true
    commentId: Overload:Virgis.MapInitialize.Add
  Virgis.VirgisFeature:
    name:
      CSharp:
      - id: Virgis.VirgisFeature
        name: VirgisFeature
        nameWithType: VirgisFeature
        qualifiedName: Virgis.VirgisFeature
      VB:
      - id: Virgis.VirgisFeature
        name: VirgisFeature
        nameWithType: VirgisFeature
        qualifiedName: Virgis.VirgisFeature
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.VirgisFeature
  Vector3[]:
    name:
      CSharp:
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Virgis.VirgisLayer._addFeature(Vector3[]):
    name:
      CSharp:
      - id: Virgis.VirgisLayer._addFeature(Vector3[])
        name: _addFeature
        nameWithType: VirgisLayer._addFeature
        qualifiedName: Virgis.VirgisLayer._addFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer._addFeature(Vector3[])
        name: _addFeature
        nameWithType: VirgisLayer._addFeature
        qualifiedName: Virgis.VirgisLayer._addFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer._addFeature(Vector3[])
  Virgis.MapInitialize._addFeature*:
    name:
      CSharp:
      - id: Virgis.MapInitialize._addFeature*
        name: _addFeature
        nameWithType: MapInitialize._addFeature
        qualifiedName: Virgis.MapInitialize._addFeature
      VB:
      - id: Virgis.MapInitialize._addFeature*
        name: _addFeature
        nameWithType: MapInitialize._addFeature
        qualifiedName: Virgis.MapInitialize._addFeature
    isDefinition: true
    commentId: Overload:Virgis.MapInitialize._addFeature
  Virgis.VirgisLayer._draw:
    name:
      CSharp:
      - id: Virgis.VirgisLayer._draw
        name: _draw
        nameWithType: VirgisLayer._draw
        qualifiedName: Virgis.VirgisLayer._draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer._draw
        name: _draw
        nameWithType: VirgisLayer._draw
        qualifiedName: Virgis.VirgisLayer._draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer._draw
  Virgis.MapInitialize._draw*:
    name:
      CSharp:
      - id: Virgis.MapInitialize._draw*
        name: _draw
        nameWithType: MapInitialize._draw
        qualifiedName: Virgis.MapInitialize._draw
      VB:
      - id: Virgis.MapInitialize._draw*
        name: _draw
        nameWithType: MapInitialize._draw
        qualifiedName: Virgis.MapInitialize._draw
    isDefinition: true
    commentId: Overload:Virgis.MapInitialize._draw
  Virgis.VirgisLayer._checkpoint:
    name:
      CSharp:
      - id: Virgis.VirgisLayer._checkpoint
        name: _checkpoint
        nameWithType: VirgisLayer._checkpoint
        qualifiedName: Virgis.VirgisLayer._checkpoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer._checkpoint
        name: _checkpoint
        nameWithType: VirgisLayer._checkpoint
        qualifiedName: Virgis.VirgisLayer._checkpoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer._checkpoint
  Virgis.MapInitialize._checkpoint*:
    name:
      CSharp:
      - id: Virgis.MapInitialize._checkpoint*
        name: _checkpoint
        nameWithType: MapInitialize._checkpoint
        qualifiedName: Virgis.MapInitialize._checkpoint
      VB:
      - id: Virgis.MapInitialize._checkpoint*
        name: _checkpoint
        nameWithType: MapInitialize._checkpoint
        qualifiedName: Virgis.MapInitialize._checkpoint
    isDefinition: true
    commentId: Overload:Virgis.MapInitialize._checkpoint
  Task{RecordSet}:
    name:
      CSharp:
      - id: Task`1
        name: Task
        nameWithType: Task
        qualifiedName: Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Task`1
        name: Task
        nameWithType: Task
        qualifiedName: Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Task`1
    commentId: '!:Task{RecordSet}'
  Virgis.MapInitialize.Save*:
    name:
      CSharp:
      - id: Virgis.MapInitialize.Save*
        name: Save
        nameWithType: MapInitialize.Save
        qualifiedName: Virgis.MapInitialize.Save
      VB:
      - id: Virgis.MapInitialize.Save*
        name: Save
        nameWithType: MapInitialize.Save
        qualifiedName: Virgis.MapInitialize.Save
    isDefinition: true
    commentId: Overload:Virgis.MapInitialize.Save
  Task:
    name:
      CSharp:
      - id: Task
        name: Task
        nameWithType: Task
        qualifiedName: Task
        isExternal: true
      VB:
      - id: Task
        name: Task
        nameWithType: Task
        qualifiedName: Task
        isExternal: true
    isDefinition: true
  Virgis.VirgisLayer._save:
    name:
      CSharp:
      - id: Virgis.VirgisLayer._save
        name: _save
        nameWithType: VirgisLayer._save
        qualifiedName: Virgis.VirgisLayer._save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer._save
        name: _save
        nameWithType: VirgisLayer._save
        qualifiedName: Virgis.VirgisLayer._save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer._save
  Virgis.MapInitialize._save*:
    name:
      CSharp:
      - id: Virgis.MapInitialize._save*
        name: _save
        nameWithType: MapInitialize._save
        qualifiedName: Virgis.MapInitialize._save
      VB:
      - id: Virgis.MapInitialize._save*
        name: _save
        nameWithType: MapInitialize._save
        qualifiedName: Virgis.MapInitialize._save
    isDefinition: true
    commentId: Overload:Virgis.MapInitialize._save
  Virgis.MapInitialize._onStartEditSession*:
    name:
      CSharp:
      - id: Virgis.MapInitialize._onStartEditSession*
        name: _onStartEditSession
        nameWithType: MapInitialize._onStartEditSession
        qualifiedName: Virgis.MapInitialize._onStartEditSession
      VB:
      - id: Virgis.MapInitialize._onStartEditSession*
        name: _onStartEditSession
        nameWithType: MapInitialize._onStartEditSession
        qualifiedName: Virgis.MapInitialize._onStartEditSession
    isDefinition: true
    commentId: Overload:Virgis.MapInitialize._onStartEditSession
  Virgis.MapInitialize._onExitEditSession*:
    name:
      CSharp:
      - id: Virgis.MapInitialize._onExitEditSession*
        name: _onExitEditSession
        nameWithType: MapInitialize._onExitEditSession
        qualifiedName: Virgis.MapInitialize._onExitEditSession
      VB:
      - id: Virgis.MapInitialize._onExitEditSession*
        name: _onExitEditSession
        nameWithType: MapInitialize._onExitEditSession
        qualifiedName: Virgis.MapInitialize._onExitEditSession
    isDefinition: true
    commentId: Overload:Virgis.MapInitialize._onExitEditSession
  Virgis.VirgisLayer.GetFeatureShape:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.GetFeatureShape
        name: GetFeatureShape
        nameWithType: VirgisLayer.GetFeatureShape
        qualifiedName: Virgis.VirgisLayer.GetFeatureShape
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer.GetFeatureShape
        name: GetFeatureShape
        nameWithType: VirgisLayer.GetFeatureShape
        qualifiedName: Virgis.VirgisLayer.GetFeatureShape
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisLayer
    commentId: M:Virgis.VirgisLayer.GetFeatureShape
  Virgis.MapInitialize.GetFeatureShape*:
    name:
      CSharp:
      - id: Virgis.MapInitialize.GetFeatureShape*
        name: GetFeatureShape
        nameWithType: MapInitialize.GetFeatureShape
        qualifiedName: Virgis.MapInitialize.GetFeatureShape
      VB:
      - id: Virgis.MapInitialize.GetFeatureShape*
        name: GetFeatureShape
        nameWithType: MapInitialize.GetFeatureShape
        qualifiedName: Virgis.MapInitialize.GetFeatureShape
    isDefinition: true
    commentId: Overload:Virgis.MapInitialize.GetFeatureShape
  Virgis.MapInitialize:
    name:
      CSharp:
      - id: Virgis.MapInitialize
        name: MapInitialize
        nameWithType: MapInitialize
        qualifiedName: Virgis.MapInitialize
      VB:
      - id: Virgis.MapInitialize
        name: MapInitialize
        nameWithType: MapInitialize
        qualifiedName: Virgis.MapInitialize
    isDefinition: true
    commentId: T:Virgis.MapInitialize
  Color:
    name:
      CSharp:
      - id: Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      VB:
      - id: Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
    isDefinition: true
  Vector3:
    name:
      CSharp:
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      VB:
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
    isDefinition: true
  Virgis.DataRotator.SetColor*:
    name:
      CSharp:
      - id: Virgis.DataRotator.SetColor*
        name: SetColor
        nameWithType: DataRotator.SetColor
        qualifiedName: Virgis.DataRotator.SetColor
      VB:
      - id: Virgis.DataRotator.SetColor*
        name: SetColor
        nameWithType: DataRotator.SetColor
        qualifiedName: Virgis.DataRotator.SetColor
    isDefinition: true
    commentId: Overload:Virgis.DataRotator.SetColor
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  Virgis.DataRotator.Selected*:
    name:
      CSharp:
      - id: Virgis.DataRotator.Selected*
        name: Selected
        nameWithType: DataRotator.Selected
        qualifiedName: Virgis.DataRotator.Selected
      VB:
      - id: Virgis.DataRotator.Selected*
        name: Selected
        nameWithType: DataRotator.Selected
        qualifiedName: Virgis.DataRotator.Selected
    isDefinition: true
    commentId: Overload:Virgis.DataRotator.Selected
  Virgis.DataRotator.UnSelected*:
    name:
      CSharp:
      - id: Virgis.DataRotator.UnSelected*
        name: UnSelected
        nameWithType: DataRotator.UnSelected
        qualifiedName: Virgis.DataRotator.UnSelected
      VB:
      - id: Virgis.DataRotator.UnSelected*
        name: UnSelected
        nameWithType: DataRotator.UnSelected
        qualifiedName: Virgis.DataRotator.UnSelected
    isDefinition: true
    commentId: Overload:Virgis.DataRotator.UnSelected
  Virgis.DataRotator.Translate*:
    name:
      CSharp:
      - id: Virgis.DataRotator.Translate*
        name: Translate
        nameWithType: DataRotator.Translate
        qualifiedName: Virgis.DataRotator.Translate
      VB:
      - id: Virgis.DataRotator.Translate*
        name: Translate
        nameWithType: DataRotator.Translate
        qualifiedName: Virgis.DataRotator.Translate
    isDefinition: true
    commentId: Overload:Virgis.DataRotator.Translate
  Virgis.DataRotator:
    name:
      CSharp:
      - id: Virgis.DataRotator
        name: DataRotator
        nameWithType: DataRotator
        qualifiedName: Virgis.DataRotator
      VB:
      - id: Virgis.DataRotator
        name: DataRotator
        nameWithType: DataRotator
        qualifiedName: Virgis.DataRotator
    isDefinition: true
    commentId: T:Virgis.DataRotator
  Button:
    name:
      CSharp:
      - id: Button
        name: Button
        nameWithType: Button
        qualifiedName: Button
        isExternal: true
      VB:
      - id: Button
        name: Button
        nameWithType: Button
        qualifiedName: Button
        isExternal: true
    isDefinition: true
  Virgis.MenuFacade.Visible*:
    name:
      CSharp:
      - id: Virgis.MenuFacade.Visible*
        name: Visible
        nameWithType: MenuFacade.Visible
        qualifiedName: Virgis.MenuFacade.Visible
      VB:
      - id: Virgis.MenuFacade.Visible*
        name: Visible
        nameWithType: MenuFacade.Visible
        qualifiedName: Virgis.MenuFacade.Visible
    isDefinition: true
    commentId: Overload:Virgis.MenuFacade.Visible
  Virgis.MenuFacade.OnShowLayersButtonClicked*:
    name:
      CSharp:
      - id: Virgis.MenuFacade.OnShowLayersButtonClicked*
        name: OnShowLayersButtonClicked
        nameWithType: MenuFacade.OnShowLayersButtonClicked
        qualifiedName: Virgis.MenuFacade.OnShowLayersButtonClicked
      VB:
      - id: Virgis.MenuFacade.OnShowLayersButtonClicked*
        name: OnShowLayersButtonClicked
        nameWithType: MenuFacade.OnShowLayersButtonClicked
        qualifiedName: Virgis.MenuFacade.OnShowLayersButtonClicked
    isDefinition: true
    commentId: Overload:Virgis.MenuFacade.OnShowLayersButtonClicked
  Virgis.MenuFacade.OnStartEditButtonClicked*:
    name:
      CSharp:
      - id: Virgis.MenuFacade.OnStartEditButtonClicked*
        name: OnStartEditButtonClicked
        nameWithType: MenuFacade.OnStartEditButtonClicked
        qualifiedName: Virgis.MenuFacade.OnStartEditButtonClicked
      VB:
      - id: Virgis.MenuFacade.OnStartEditButtonClicked*
        name: OnStartEditButtonClicked
        nameWithType: MenuFacade.OnStartEditButtonClicked
        qualifiedName: Virgis.MenuFacade.OnStartEditButtonClicked
    isDefinition: true
    commentId: Overload:Virgis.MenuFacade.OnStartEditButtonClicked
  Virgis.MenuFacade.OnStopSaveEditButtonClicked*:
    name:
      CSharp:
      - id: Virgis.MenuFacade.OnStopSaveEditButtonClicked*
        name: OnStopSaveEditButtonClicked
        nameWithType: MenuFacade.OnStopSaveEditButtonClicked
        qualifiedName: Virgis.MenuFacade.OnStopSaveEditButtonClicked
      VB:
      - id: Virgis.MenuFacade.OnStopSaveEditButtonClicked*
        name: OnStopSaveEditButtonClicked
        nameWithType: MenuFacade.OnStopSaveEditButtonClicked
        qualifiedName: Virgis.MenuFacade.OnStopSaveEditButtonClicked
    isDefinition: true
    commentId: Overload:Virgis.MenuFacade.OnStopSaveEditButtonClicked
  Virgis.MenuFacade.OnStopDiscardEditButtonClicked*:
    name:
      CSharp:
      - id: Virgis.MenuFacade.OnStopDiscardEditButtonClicked*
        name: OnStopDiscardEditButtonClicked
        nameWithType: MenuFacade.OnStopDiscardEditButtonClicked
        qualifiedName: Virgis.MenuFacade.OnStopDiscardEditButtonClicked
      VB:
      - id: Virgis.MenuFacade.OnStopDiscardEditButtonClicked*
        name: OnStopDiscardEditButtonClicked
        nameWithType: MenuFacade.OnStopDiscardEditButtonClicked
        qualifiedName: Virgis.MenuFacade.OnStopDiscardEditButtonClicked
    isDefinition: true
    commentId: Overload:Virgis.MenuFacade.OnStopDiscardEditButtonClicked
  Virgis.MenuFacade.onFileClicked*:
    name:
      CSharp:
      - id: Virgis.MenuFacade.onFileClicked*
        name: onFileClicked
        nameWithType: MenuFacade.onFileClicked
        qualifiedName: Virgis.MenuFacade.onFileClicked
      VB:
      - id: Virgis.MenuFacade.onFileClicked*
        name: onFileClicked
        nameWithType: MenuFacade.onFileClicked
        qualifiedName: Virgis.MenuFacade.onFileClicked
    isDefinition: true
    commentId: Overload:Virgis.MenuFacade.onFileClicked
  Virgis.MenuFacade:
    name:
      CSharp:
      - id: Virgis.MenuFacade
        name: MenuFacade
        nameWithType: MenuFacade
        qualifiedName: Virgis.MenuFacade
      VB:
      - id: Virgis.MenuFacade
        name: MenuFacade
        nameWithType: MenuFacade
        qualifiedName: Virgis.MenuFacade
    isDefinition: true
    commentId: T:Virgis.MenuFacade
  Virgis.LayersUI.OnShowMenuButtonClicked*:
    name:
      CSharp:
      - id: Virgis.LayersUI.OnShowMenuButtonClicked*
        name: OnShowMenuButtonClicked
        nameWithType: LayersUI.OnShowMenuButtonClicked
        qualifiedName: Virgis.LayersUI.OnShowMenuButtonClicked
      VB:
      - id: Virgis.LayersUI.OnShowMenuButtonClicked*
        name: OnShowMenuButtonClicked
        nameWithType: LayersUI.OnShowMenuButtonClicked
        qualifiedName: Virgis.LayersUI.OnShowMenuButtonClicked
    isDefinition: true
    commentId: Overload:Virgis.LayersUI.OnShowMenuButtonClicked
  Virgis.LayersUI.CreateLayerPanels*:
    name:
      CSharp:
      - id: Virgis.LayersUI.CreateLayerPanels*
        name: CreateLayerPanels
        nameWithType: LayersUI.CreateLayerPanels
        qualifiedName: Virgis.LayersUI.CreateLayerPanels
      VB:
      - id: Virgis.LayersUI.CreateLayerPanels*
        name: CreateLayerPanels
        nameWithType: LayersUI.CreateLayerPanels
        qualifiedName: Virgis.LayersUI.CreateLayerPanels
    isDefinition: true
    commentId: Overload:Virgis.LayersUI.CreateLayerPanels
  Virgis.LayersUI:
    name:
      CSharp:
      - id: Virgis.LayersUI
        name: LayersUI
        nameWithType: LayersUI
        qualifiedName: Virgis.LayersUI
      VB:
      - id: Virgis.LayersUI
        name: LayersUI
        nameWithType: LayersUI
        qualifiedName: Virgis.LayersUI
    isDefinition: true
    commentId: T:Virgis.LayersUI
  Virgis.FeatureAdder.LeftTriggerPressed*:
    name:
      CSharp:
      - id: Virgis.FeatureAdder.LeftTriggerPressed*
        name: LeftTriggerPressed
        nameWithType: FeatureAdder.LeftTriggerPressed
        qualifiedName: Virgis.FeatureAdder.LeftTriggerPressed
      VB:
      - id: Virgis.FeatureAdder.LeftTriggerPressed*
        name: LeftTriggerPressed
        nameWithType: FeatureAdder.LeftTriggerPressed
        qualifiedName: Virgis.FeatureAdder.LeftTriggerPressed
    isDefinition: true
    commentId: Overload:Virgis.FeatureAdder.LeftTriggerPressed
  Virgis.FeatureAdder.LeftTriggerReleased*:
    name:
      CSharp:
      - id: Virgis.FeatureAdder.LeftTriggerReleased*
        name: LeftTriggerReleased
        nameWithType: FeatureAdder.LeftTriggerReleased
        qualifiedName: Virgis.FeatureAdder.LeftTriggerReleased
      VB:
      - id: Virgis.FeatureAdder.LeftTriggerReleased*
        name: LeftTriggerReleased
        nameWithType: FeatureAdder.LeftTriggerReleased
        qualifiedName: Virgis.FeatureAdder.LeftTriggerReleased
    isDefinition: true
    commentId: Overload:Virgis.FeatureAdder.LeftTriggerReleased
  Virgis.FeatureAdder:
    name:
      CSharp:
      - id: Virgis.FeatureAdder
        name: FeatureAdder
        nameWithType: FeatureAdder
        qualifiedName: Virgis.FeatureAdder
      VB:
      - id: Virgis.FeatureAdder
        name: FeatureAdder
        nameWithType: FeatureAdder
        qualifiedName: Virgis.FeatureAdder
    isDefinition: true
    commentId: T:Virgis.FeatureAdder
  Virgis.QuitButton.OnClick*:
    name:
      CSharp:
      - id: Virgis.QuitButton.OnClick*
        name: OnClick
        nameWithType: QuitButton.OnClick
        qualifiedName: Virgis.QuitButton.OnClick
      VB:
      - id: Virgis.QuitButton.OnClick*
        name: OnClick
        nameWithType: QuitButton.OnClick
        qualifiedName: Virgis.QuitButton.OnClick
    isDefinition: true
    commentId: Overload:Virgis.QuitButton.OnClick
  Virgis.QuitButton:
    name:
      CSharp:
      - id: Virgis.QuitButton
        name: QuitButton
        nameWithType: QuitButton
        qualifiedName: Virgis.QuitButton
      VB:
      - id: Virgis.QuitButton
        name: QuitButton
        nameWithType: QuitButton
        qualifiedName: Virgis.QuitButton
    isDefinition: true
    commentId: T:Virgis.QuitButton
  Toggle:
    name:
      CSharp:
      - id: Toggle
        name: Toggle
        nameWithType: Toggle
        qualifiedName: Toggle
        isExternal: true
      VB:
      - id: Toggle
        name: Toggle
        nameWithType: Toggle
        qualifiedName: Toggle
        isExternal: true
    isDefinition: true
  Virgis.EditModeUI.OnSnapGridToggleValueChanged*:
    name:
      CSharp:
      - id: Virgis.EditModeUI.OnSnapGridToggleValueChanged*
        name: OnSnapGridToggleValueChanged
        nameWithType: EditModeUI.OnSnapGridToggleValueChanged
        qualifiedName: Virgis.EditModeUI.OnSnapGridToggleValueChanged
      VB:
      - id: Virgis.EditModeUI.OnSnapGridToggleValueChanged*
        name: OnSnapGridToggleValueChanged
        nameWithType: EditModeUI.OnSnapGridToggleValueChanged
        qualifiedName: Virgis.EditModeUI.OnSnapGridToggleValueChanged
    isDefinition: true
    commentId: Overload:Virgis.EditModeUI.OnSnapGridToggleValueChanged
  Virgis.EditModeUI.OnSnapAnchorToggleValueChanged*:
    name:
      CSharp:
      - id: Virgis.EditModeUI.OnSnapAnchorToggleValueChanged*
        name: OnSnapAnchorToggleValueChanged
        nameWithType: EditModeUI.OnSnapAnchorToggleValueChanged
        qualifiedName: Virgis.EditModeUI.OnSnapAnchorToggleValueChanged
      VB:
      - id: Virgis.EditModeUI.OnSnapAnchorToggleValueChanged*
        name: OnSnapAnchorToggleValueChanged
        nameWithType: EditModeUI.OnSnapAnchorToggleValueChanged
        qualifiedName: Virgis.EditModeUI.OnSnapAnchorToggleValueChanged
    isDefinition: true
    commentId: Overload:Virgis.EditModeUI.OnSnapAnchorToggleValueChanged
  Virgis.EditModeUI:
    name:
      CSharp:
      - id: Virgis.EditModeUI
        name: EditModeUI
        nameWithType: EditModeUI
        qualifiedName: Virgis.EditModeUI
      VB:
      - id: Virgis.EditModeUI
        name: EditModeUI
        nameWithType: EditModeUI
        qualifiedName: Virgis.EditModeUI
    isDefinition: true
    commentId: T:Virgis.EditModeUI
  Virgis.LayerPanelEditSelectedEvent:
    name:
      CSharp:
      - id: Virgis.LayerPanelEditSelectedEvent
        name: LayerPanelEditSelectedEvent
        nameWithType: LayerPanelEditSelectedEvent
        qualifiedName: Virgis.LayerPanelEditSelectedEvent
      VB:
      - id: Virgis.LayerPanelEditSelectedEvent
        name: LayerPanelEditSelectedEvent
        nameWithType: LayerPanelEditSelectedEvent
        qualifiedName: Virgis.LayerPanelEditSelectedEvent
    isDefinition: true
    commentId: T:Virgis.LayerPanelEditSelectedEvent
  System.SerializableAttribute:
    name:
      CSharp:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        nameWithType: SerializableAttribute
        qualifiedName: System.SerializableAttribute
        isExternal: true
      VB:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        nameWithType: SerializableAttribute
        qualifiedName: System.SerializableAttribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.SerializableAttribute
  System.SerializableAttribute.#ctor:
    name:
      CSharp:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        nameWithType: SerializableAttribute.SerializableAttribute
        qualifiedName: System.SerializableAttribute.SerializableAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        nameWithType: SerializableAttribute.SerializableAttribute
        qualifiedName: System.SerializableAttribute.SerializableAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.SerializableAttribute
    commentId: M:System.SerializableAttribute.#ctor
  Virgis.LayerUIPanel.layer*:
    name:
      CSharp:
      - id: Virgis.LayerUIPanel.layer*
        name: layer
        nameWithType: LayerUIPanel.layer
        qualifiedName: Virgis.LayerUIPanel.layer
      VB:
      - id: Virgis.LayerUIPanel.layer*
        name: layer
        nameWithType: LayerUIPanel.layer
        qualifiedName: Virgis.LayerUIPanel.layer
    isDefinition: true
    commentId: Overload:Virgis.LayerUIPanel.layer
  UnityAction`2:
    name:
      CSharp:
      - id: UnityAction`2
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: UnityAction`2
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:UnityAction`2'
  UnityAction{Virgis.LayerUIPanel,System.Boolean}:
    name:
      CSharp:
      - id: UnityAction`2
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Virgis.LayerUIPanel
        name: LayerUIPanel
        nameWithType: LayerUIPanel
        qualifiedName: Virgis.LayerUIPanel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: UnityAction`2
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Virgis.LayerUIPanel
        name: LayerUIPanel
        nameWithType: LayerUIPanel
        qualifiedName: Virgis.LayerUIPanel
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityAction`2
    commentId: '!:UnityAction{Virgis.LayerUIPanel,System.Boolean}'
  Virgis.LayerUIPanel.AddEditSelectedListener*:
    name:
      CSharp:
      - id: Virgis.LayerUIPanel.AddEditSelectedListener*
        name: AddEditSelectedListener
        nameWithType: LayerUIPanel.AddEditSelectedListener
        qualifiedName: Virgis.LayerUIPanel.AddEditSelectedListener
      VB:
      - id: Virgis.LayerUIPanel.AddEditSelectedListener*
        name: AddEditSelectedListener
        nameWithType: LayerUIPanel.AddEditSelectedListener
        qualifiedName: Virgis.LayerUIPanel.AddEditSelectedListener
    isDefinition: true
    commentId: Overload:Virgis.LayerUIPanel.AddEditSelectedListener
  Virgis.LayerUIPanel:
    name:
      CSharp:
      - id: Virgis.LayerUIPanel
        name: LayerUIPanel
        nameWithType: LayerUIPanel
        qualifiedName: Virgis.LayerUIPanel
      VB:
      - id: Virgis.LayerUIPanel
        name: LayerUIPanel
        nameWithType: LayerUIPanel
        qualifiedName: Virgis.LayerUIPanel
    isDefinition: true
    commentId: T:Virgis.LayerUIPanel
  Text:
    name:
      CSharp:
      - id: Text
        name: Text
        nameWithType: Text
        qualifiedName: Text
        isExternal: true
      VB:
      - id: Text
        name: Text
        nameWithType: Text
        qualifiedName: Text
        isExternal: true
    isDefinition: true
    commentId: '!:Text'
  Virgis.InfoPanelFacade:
    name:
      CSharp:
      - id: Virgis.InfoPanelFacade
        name: InfoPanelFacade
        nameWithType: InfoPanelFacade
        qualifiedName: Virgis.InfoPanelFacade
      VB:
      - id: Virgis.InfoPanelFacade
        name: InfoPanelFacade
        nameWithType: InfoPanelFacade
        qualifiedName: Virgis.InfoPanelFacade
    isDefinition: true
    commentId: T:Virgis.InfoPanelFacade
  Virgis.StartFacade.onFileSelected*:
    name:
      CSharp:
      - id: Virgis.StartFacade.onFileSelected*
        name: onFileSelected
        nameWithType: StartFacade.onFileSelected
        qualifiedName: Virgis.StartFacade.onFileSelected
      VB:
      - id: Virgis.StartFacade.onFileSelected*
        name: onFileSelected
        nameWithType: StartFacade.onFileSelected
        qualifiedName: Virgis.StartFacade.onFileSelected
    isDefinition: true
    commentId: Overload:Virgis.StartFacade.onFileSelected
  Virgis.StartFacade:
    name:
      CSharp:
      - id: Virgis.StartFacade
        name: StartFacade
        nameWithType: StartFacade
        qualifiedName: Virgis.StartFacade
      VB:
      - id: Virgis.StartFacade
        name: StartFacade
        nameWithType: StartFacade
        qualifiedName: Virgis.StartFacade
    isDefinition: true
    commentId: T:Virgis.StartFacade
  Virgis.VirgisLayer`2:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: S
        nameWithType: S
        qualifiedName: S
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: S
        nameWithType: S
        qualifiedName: S
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.VirgisLayer`2
  Virgis.VirgisLayer{RecordSet,BakedPointCloud}:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: BakedPointCloud
        name: BakedPointCloud
        nameWithType: BakedPointCloud
        qualifiedName: BakedPointCloud
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: BakedPointCloud
        name: BakedPointCloud
        nameWithType: BakedPointCloud
        qualifiedName: BakedPointCloud
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2
    parent: Virgis
    commentId: T:Virgis.VirgisLayer{RecordSet,BakedPointCloud}
  Virgis.VirgisLayer`2.features:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.features
        name: features
        nameWithType: VirgisLayer<T, S>.features
        qualifiedName: Virgis.VirgisLayer<T, S>.features
      VB:
      - id: Virgis.VirgisLayer`2.features
        name: features
        nameWithType: VirgisLayer(Of T, S).features
        qualifiedName: Virgis.VirgisLayer(Of T, S).features
    isDefinition: true
    commentId: F:Virgis.VirgisLayer`2.features
  Virgis.VirgisLayer{RecordSet,BakedPointCloud}.features:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.features
        name: features
        nameWithType: VirgisLayer<RecordSet, BakedPointCloud>.features
        qualifiedName: Virgis.VirgisLayer<RecordSet, BakedPointCloud>.features
      VB:
      - id: Virgis.VirgisLayer`2.features
        name: features
        nameWithType: VirgisLayer(Of RecordSet, BakedPointCloud).features
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, BakedPointCloud).features
    isDefinition: false
    definition: Virgis.VirgisLayer`2.features
    parent: Virgis.VirgisLayer{RecordSet,BakedPointCloud}
    commentId: F:Virgis.VirgisLayer{RecordSet,BakedPointCloud}.features
  Virgis.VirgisLayer`2.Init(`0):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Init(`0)
        name: Init
        nameWithType: VirgisLayer<T, S>.Init
        qualifiedName: Virgis.VirgisLayer<T, S>.Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Init(`0)
        name: Init
        nameWithType: VirgisLayer(Of T, S).Init
        qualifiedName: Virgis.VirgisLayer(Of T, S).Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.Init(`0)
  Virgis.VirgisLayer{RecordSet,BakedPointCloud}.Init(RecordSet):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Init(`0)
        name: Init
        nameWithType: VirgisLayer<RecordSet, BakedPointCloud>.Init
        qualifiedName: Virgis.VirgisLayer<RecordSet, BakedPointCloud>.Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Init(`0)
        name: Init
        nameWithType: VirgisLayer(Of RecordSet, BakedPointCloud).Init
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, BakedPointCloud).Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Init(`0)
    parent: Virgis.VirgisLayer{RecordSet,BakedPointCloud}
    commentId: M:Virgis.VirgisLayer{RecordSet,BakedPointCloud}.Init(RecordSet)
  Virgis.VirgisLayer`2._init:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._init
        name: _init
        nameWithType: VirgisLayer<T, S>._init
        qualifiedName: Virgis.VirgisLayer<T, S>._init
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._init
        name: _init
        nameWithType: VirgisLayer(Of T, S)._init
        qualifiedName: Virgis.VirgisLayer(Of T, S)._init
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2._init
  Virgis.VirgisLayer{RecordSet,BakedPointCloud}._init:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._init
        name: _init
        nameWithType: VirgisLayer<RecordSet, BakedPointCloud>._init
        qualifiedName: Virgis.VirgisLayer<RecordSet, BakedPointCloud>._init
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._init
        name: _init
        nameWithType: VirgisLayer(Of RecordSet, BakedPointCloud)._init
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, BakedPointCloud)._init
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._init
    parent: Virgis.VirgisLayer{RecordSet,BakedPointCloud}
    commentId: M:Virgis.VirgisLayer{RecordSet,BakedPointCloud}._init
  Virgis.VirgisLayer`2.GetMetadata:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetMetadata
        name: GetMetadata
        nameWithType: VirgisLayer<T, S>.GetMetadata
        qualifiedName: Virgis.VirgisLayer<T, S>.GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetMetadata
        name: GetMetadata
        nameWithType: VirgisLayer(Of T, S).GetMetadata
        qualifiedName: Virgis.VirgisLayer(Of T, S).GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.GetMetadata
  Virgis.VirgisLayer{RecordSet,BakedPointCloud}.GetMetadata:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetMetadata
        name: GetMetadata
        nameWithType: VirgisLayer<RecordSet, BakedPointCloud>.GetMetadata
        qualifiedName: Virgis.VirgisLayer<RecordSet, BakedPointCloud>.GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetMetadata
        name: GetMetadata
        nameWithType: VirgisLayer(Of RecordSet, BakedPointCloud).GetMetadata
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, BakedPointCloud).GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetMetadata
    parent: Virgis.VirgisLayer{RecordSet,BakedPointCloud}
    commentId: M:Virgis.VirgisLayer{RecordSet,BakedPointCloud}.GetMetadata
  Virgis.VirgisLayer`2.SetMetadata(`0):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.SetMetadata(`0)
        name: SetMetadata
        nameWithType: VirgisLayer<T, S>.SetMetadata
        qualifiedName: Virgis.VirgisLayer<T, S>.SetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.SetMetadata(`0)
        name: SetMetadata
        nameWithType: VirgisLayer(Of T, S).SetMetadata
        qualifiedName: Virgis.VirgisLayer(Of T, S).SetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.SetMetadata(`0)
  Virgis.VirgisLayer{RecordSet,BakedPointCloud}.SetMetadata(RecordSet):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.SetMetadata(`0)
        name: SetMetadata
        nameWithType: VirgisLayer<RecordSet, BakedPointCloud>.SetMetadata
        qualifiedName: Virgis.VirgisLayer<RecordSet, BakedPointCloud>.SetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.SetMetadata(`0)
        name: SetMetadata
        nameWithType: VirgisLayer(Of RecordSet, BakedPointCloud).SetMetadata
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, BakedPointCloud).SetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.SetMetadata(`0)
    parent: Virgis.VirgisLayer{RecordSet,BakedPointCloud}
    commentId: M:Virgis.VirgisLayer{RecordSet,BakedPointCloud}.SetMetadata(RecordSet)
  Virgis.VirgisLayer`2.SetFeatures(`1):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.SetFeatures(`1)
        name: SetFeatures
        nameWithType: VirgisLayer<T, S>.SetFeatures
        qualifiedName: Virgis.VirgisLayer<T, S>.SetFeatures
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: S
        nameWithType: S
        qualifiedName: S
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.SetFeatures(`1)
        name: SetFeatures
        nameWithType: VirgisLayer(Of T, S).SetFeatures
        qualifiedName: Virgis.VirgisLayer(Of T, S).SetFeatures
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: S
        nameWithType: S
        qualifiedName: S
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.SetFeatures(`1)
  Virgis.VirgisLayer{RecordSet,BakedPointCloud}.SetFeatures(BakedPointCloud):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.SetFeatures(`1)
        name: SetFeatures
        nameWithType: VirgisLayer<RecordSet, BakedPointCloud>.SetFeatures
        qualifiedName: Virgis.VirgisLayer<RecordSet, BakedPointCloud>.SetFeatures
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: BakedPointCloud
        name: BakedPointCloud
        nameWithType: BakedPointCloud
        qualifiedName: BakedPointCloud
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.SetFeatures(`1)
        name: SetFeatures
        nameWithType: VirgisLayer(Of RecordSet, BakedPointCloud).SetFeatures
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, BakedPointCloud).SetFeatures
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: BakedPointCloud
        name: BakedPointCloud
        nameWithType: BakedPointCloud
        qualifiedName: BakedPointCloud
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.SetFeatures(`1)
    parent: Virgis.VirgisLayer{RecordSet,BakedPointCloud}
    commentId: M:Virgis.VirgisLayer{RecordSet,BakedPointCloud}.SetFeatures(BakedPointCloud)
  Virgis.VirgisLayer`2.Equals(System.Object):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Equals(System.Object)
        name: Equals
        nameWithType: VirgisLayer<T, S>.Equals
        qualifiedName: Virgis.VirgisLayer<T, S>.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Equals(System.Object)
        name: Equals
        nameWithType: VirgisLayer(Of T, S).Equals
        qualifiedName: Virgis.VirgisLayer(Of T, S).Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.Equals(System.Object)
  Virgis.VirgisLayer{RecordSet,BakedPointCloud}.Equals(System.Object):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Equals(System.Object)
        name: Equals
        nameWithType: VirgisLayer<RecordSet, BakedPointCloud>.Equals
        qualifiedName: Virgis.VirgisLayer<RecordSet, BakedPointCloud>.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Equals(System.Object)
        name: Equals
        nameWithType: VirgisLayer(Of RecordSet, BakedPointCloud).Equals
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, BakedPointCloud).Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Equals(System.Object)
    parent: Virgis.VirgisLayer{RecordSet,BakedPointCloud}
    commentId: M:Virgis.VirgisLayer{RecordSet,BakedPointCloud}.Equals(System.Object)
  Virgis.VirgisLayer`2.GetHashCode:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetHashCode
        name: GetHashCode
        nameWithType: VirgisLayer<T, S>.GetHashCode
        qualifiedName: Virgis.VirgisLayer<T, S>.GetHashCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetHashCode
        name: GetHashCode
        nameWithType: VirgisLayer(Of T, S).GetHashCode
        qualifiedName: Virgis.VirgisLayer(Of T, S).GetHashCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.GetHashCode
  Virgis.VirgisLayer{RecordSet,BakedPointCloud}.GetHashCode:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetHashCode
        name: GetHashCode
        nameWithType: VirgisLayer<RecordSet, BakedPointCloud>.GetHashCode
        qualifiedName: Virgis.VirgisLayer<RecordSet, BakedPointCloud>.GetHashCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetHashCode
        name: GetHashCode
        nameWithType: VirgisLayer(Of RecordSet, BakedPointCloud).GetHashCode
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, BakedPointCloud).GetHashCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetHashCode
    parent: Virgis.VirgisLayer{RecordSet,BakedPointCloud}
    commentId: M:Virgis.VirgisLayer{RecordSet,BakedPointCloud}.GetHashCode
  Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1}):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
        name: Equals
        nameWithType: VirgisLayer<T, S>.Equals
        qualifiedName: Virgis.VirgisLayer<T, S>.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: S
        nameWithType: S
        qualifiedName: S
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
        name: Equals
        nameWithType: VirgisLayer(Of T, S).Equals
        qualifiedName: Virgis.VirgisLayer(Of T, S).Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: S
        nameWithType: S
        qualifiedName: S
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
  Virgis.VirgisLayer{RecordSet,BakedPointCloud}.Equals(Virgis.VirgisLayer{RecordSet,BakedPointCloud}):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
        name: Equals
        nameWithType: VirgisLayer<RecordSet, BakedPointCloud>.Equals
        qualifiedName: Virgis.VirgisLayer<RecordSet, BakedPointCloud>.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: BakedPointCloud
        name: BakedPointCloud
        nameWithType: BakedPointCloud
        qualifiedName: BakedPointCloud
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
        name: Equals
        nameWithType: VirgisLayer(Of RecordSet, BakedPointCloud).Equals
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, BakedPointCloud).Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: BakedPointCloud
        name: BakedPointCloud
        nameWithType: BakedPointCloud
        qualifiedName: BakedPointCloud
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
    parent: Virgis.VirgisLayer{RecordSet,BakedPointCloud}
    commentId: M:Virgis.VirgisLayer{RecordSet,BakedPointCloud}.Equals(Virgis.VirgisLayer{RecordSet,BakedPointCloud})
  Material:
    name:
      CSharp:
      - id: Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      VB:
      - id: Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
    isDefinition: true
  System.Collections.Generic.List{GameObject}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{GameObject}
  Virgis.PointCloudLayer._init*:
    name:
      CSharp:
      - id: Virgis.PointCloudLayer._init*
        name: _init
        nameWithType: PointCloudLayer._init
        qualifiedName: Virgis.PointCloudLayer._init
      VB:
      - id: Virgis.PointCloudLayer._init*
        name: _init
        nameWithType: PointCloudLayer._init
        qualifiedName: Virgis.PointCloudLayer._init
    isDefinition: true
    commentId: Overload:Virgis.PointCloudLayer._init
  Virgis.PointCloudLayer._addFeature*:
    name:
      CSharp:
      - id: Virgis.PointCloudLayer._addFeature*
        name: _addFeature
        nameWithType: PointCloudLayer._addFeature
        qualifiedName: Virgis.PointCloudLayer._addFeature
      VB:
      - id: Virgis.PointCloudLayer._addFeature*
        name: _addFeature
        nameWithType: PointCloudLayer._addFeature
        qualifiedName: Virgis.PointCloudLayer._addFeature
    isDefinition: true
    commentId: Overload:Virgis.PointCloudLayer._addFeature
  Virgis.PointCloudLayer._draw*:
    name:
      CSharp:
      - id: Virgis.PointCloudLayer._draw*
        name: _draw
        nameWithType: PointCloudLayer._draw
        qualifiedName: Virgis.PointCloudLayer._draw
      VB:
      - id: Virgis.PointCloudLayer._draw*
        name: _draw
        nameWithType: PointCloudLayer._draw
        qualifiedName: Virgis.PointCloudLayer._draw
    isDefinition: true
    commentId: Overload:Virgis.PointCloudLayer._draw
  Virgis.PointCloudLayer._set_visible*:
    name:
      CSharp:
      - id: Virgis.PointCloudLayer._set_visible*
        name: _set_visible
        nameWithType: PointCloudLayer._set_visible
        qualifiedName: Virgis.PointCloudLayer._set_visible
      VB:
      - id: Virgis.PointCloudLayer._set_visible*
        name: _set_visible
        nameWithType: PointCloudLayer._set_visible
        qualifiedName: Virgis.PointCloudLayer._set_visible
    isDefinition: true
    commentId: Overload:Virgis.PointCloudLayer._set_visible
  Virgis.PointCloudLayer.Translate*:
    name:
      CSharp:
      - id: Virgis.PointCloudLayer.Translate*
        name: Translate
        nameWithType: PointCloudLayer.Translate
        qualifiedName: Virgis.PointCloudLayer.Translate
      VB:
      - id: Virgis.PointCloudLayer.Translate*
        name: Translate
        nameWithType: PointCloudLayer.Translate
        qualifiedName: Virgis.PointCloudLayer.Translate
    isDefinition: true
    commentId: Overload:Virgis.PointCloudLayer.Translate
  Virgis.PointCloudLayer.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.PointCloudLayer.MoveAxis*
        name: MoveAxis
        nameWithType: PointCloudLayer.MoveAxis
        qualifiedName: Virgis.PointCloudLayer.MoveAxis
      VB:
      - id: Virgis.PointCloudLayer.MoveAxis*
        name: MoveAxis
        nameWithType: PointCloudLayer.MoveAxis
        qualifiedName: Virgis.PointCloudLayer.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.PointCloudLayer.MoveAxis
  Virgis.PointCloudLayer._checkpoint*:
    name:
      CSharp:
      - id: Virgis.PointCloudLayer._checkpoint*
        name: _checkpoint
        nameWithType: PointCloudLayer._checkpoint
        qualifiedName: Virgis.PointCloudLayer._checkpoint
      VB:
      - id: Virgis.PointCloudLayer._checkpoint*
        name: _checkpoint
        nameWithType: PointCloudLayer._checkpoint
        qualifiedName: Virgis.PointCloudLayer._checkpoint
    isDefinition: true
    commentId: Overload:Virgis.PointCloudLayer._checkpoint
  Virgis.PointCloudLayer._save*:
    name:
      CSharp:
      - id: Virgis.PointCloudLayer._save*
        name: _save
        nameWithType: PointCloudLayer._save
        qualifiedName: Virgis.PointCloudLayer._save
      VB:
      - id: Virgis.PointCloudLayer._save*
        name: _save
        nameWithType: PointCloudLayer._save
        qualifiedName: Virgis.PointCloudLayer._save
    isDefinition: true
    commentId: Overload:Virgis.PointCloudLayer._save
  Virgis.PointCloudLayer:
    name:
      CSharp:
      - id: Virgis.PointCloudLayer
        name: PointCloudLayer
        nameWithType: PointCloudLayer
        qualifiedName: Virgis.PointCloudLayer
      VB:
      - id: Virgis.PointCloudLayer
        name: PointCloudLayer
        nameWithType: PointCloudLayer
        qualifiedName: Virgis.PointCloudLayer
    isDefinition: true
    commentId: T:Virgis.PointCloudLayer
  Virgis.RasterLayer._init*:
    name:
      CSharp:
      - id: Virgis.RasterLayer._init*
        name: _init
        nameWithType: RasterLayer._init
        qualifiedName: Virgis.RasterLayer._init
      VB:
      - id: Virgis.RasterLayer._init*
        name: _init
        nameWithType: RasterLayer._init
        qualifiedName: Virgis.RasterLayer._init
    isDefinition: true
    commentId: Overload:Virgis.RasterLayer._init
  Virgis.RasterLayer._addFeature*:
    name:
      CSharp:
      - id: Virgis.RasterLayer._addFeature*
        name: _addFeature
        nameWithType: RasterLayer._addFeature
        qualifiedName: Virgis.RasterLayer._addFeature
      VB:
      - id: Virgis.RasterLayer._addFeature*
        name: _addFeature
        nameWithType: RasterLayer._addFeature
        qualifiedName: Virgis.RasterLayer._addFeature
    isDefinition: true
    commentId: Overload:Virgis.RasterLayer._addFeature
  Virgis.RasterLayer._draw*:
    name:
      CSharp:
      - id: Virgis.RasterLayer._draw*
        name: _draw
        nameWithType: RasterLayer._draw
        qualifiedName: Virgis.RasterLayer._draw
      VB:
      - id: Virgis.RasterLayer._draw*
        name: _draw
        nameWithType: RasterLayer._draw
        qualifiedName: Virgis.RasterLayer._draw
    isDefinition: true
    commentId: Overload:Virgis.RasterLayer._draw
  Virgis.RasterLayer._set_visible*:
    name:
      CSharp:
      - id: Virgis.RasterLayer._set_visible*
        name: _set_visible
        nameWithType: RasterLayer._set_visible
        qualifiedName: Virgis.RasterLayer._set_visible
      VB:
      - id: Virgis.RasterLayer._set_visible*
        name: _set_visible
        nameWithType: RasterLayer._set_visible
        qualifiedName: Virgis.RasterLayer._set_visible
    isDefinition: true
    commentId: Overload:Virgis.RasterLayer._set_visible
  Virgis.RasterLayer.Translate*:
    name:
      CSharp:
      - id: Virgis.RasterLayer.Translate*
        name: Translate
        nameWithType: RasterLayer.Translate
        qualifiedName: Virgis.RasterLayer.Translate
      VB:
      - id: Virgis.RasterLayer.Translate*
        name: Translate
        nameWithType: RasterLayer.Translate
        qualifiedName: Virgis.RasterLayer.Translate
    isDefinition: true
    commentId: Overload:Virgis.RasterLayer.Translate
  Virgis.RasterLayer.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.RasterLayer.MoveAxis*
        name: MoveAxis
        nameWithType: RasterLayer.MoveAxis
        qualifiedName: Virgis.RasterLayer.MoveAxis
      VB:
      - id: Virgis.RasterLayer.MoveAxis*
        name: MoveAxis
        nameWithType: RasterLayer.MoveAxis
        qualifiedName: Virgis.RasterLayer.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.RasterLayer.MoveAxis
  Virgis.RasterLayer._checkpoint*:
    name:
      CSharp:
      - id: Virgis.RasterLayer._checkpoint*
        name: _checkpoint
        nameWithType: RasterLayer._checkpoint
        qualifiedName: Virgis.RasterLayer._checkpoint
      VB:
      - id: Virgis.RasterLayer._checkpoint*
        name: _checkpoint
        nameWithType: RasterLayer._checkpoint
        qualifiedName: Virgis.RasterLayer._checkpoint
    isDefinition: true
    commentId: Overload:Virgis.RasterLayer._checkpoint
  Virgis.RasterLayer._save*:
    name:
      CSharp:
      - id: Virgis.RasterLayer._save*
        name: _save
        nameWithType: RasterLayer._save
        qualifiedName: Virgis.RasterLayer._save
      VB:
      - id: Virgis.RasterLayer._save*
        name: _save
        nameWithType: RasterLayer._save
        qualifiedName: Virgis.RasterLayer._save
    isDefinition: true
    commentId: Overload:Virgis.RasterLayer._save
  Virgis.RasterLayer:
    name:
      CSharp:
      - id: Virgis.RasterLayer
        name: RasterLayer
        nameWithType: RasterLayer
        qualifiedName: Virgis.RasterLayer
      VB:
      - id: Virgis.RasterLayer
        name: RasterLayer
        nameWithType: RasterLayer
        qualifiedName: Virgis.RasterLayer
    isDefinition: true
    commentId: T:Virgis.RasterLayer
  Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: DMesh3
        name: DMesh3
        nameWithType: DMesh3
        qualifiedName: DMesh3
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: DMesh3
        name: DMesh3
        nameWithType: DMesh3
        qualifiedName: DMesh3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2
    parent: Virgis
    commentId: T:Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}
  Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.features:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.features
        name: features
        nameWithType: VirgisLayer<RecordSet, List<DMesh3>>.features
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Collections.Generic.List<DMesh3>>.features
      VB:
      - id: Virgis.VirgisLayer`2.features
        name: features
        nameWithType: VirgisLayer(Of RecordSet, List(Of DMesh3)).features
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Collections.Generic.List(Of DMesh3)).features
    isDefinition: false
    definition: Virgis.VirgisLayer`2.features
    parent: Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}
    commentId: F:Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.features
  Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.Init(RecordSet):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Init(`0)
        name: Init
        nameWithType: VirgisLayer<RecordSet, List<DMesh3>>.Init
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Collections.Generic.List<DMesh3>>.Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Init(`0)
        name: Init
        nameWithType: VirgisLayer(Of RecordSet, List(Of DMesh3)).Init
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Collections.Generic.List(Of DMesh3)).Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Init(`0)
    parent: Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.Init(RecordSet)
  Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}._init:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._init
        name: _init
        nameWithType: VirgisLayer<RecordSet, List<DMesh3>>._init
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Collections.Generic.List<DMesh3>>._init
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._init
        name: _init
        nameWithType: VirgisLayer(Of RecordSet, List(Of DMesh3))._init
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Collections.Generic.List(Of DMesh3))._init
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._init
    parent: Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}._init
  Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.GetMetadata:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetMetadata
        name: GetMetadata
        nameWithType: VirgisLayer<RecordSet, List<DMesh3>>.GetMetadata
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Collections.Generic.List<DMesh3>>.GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetMetadata
        name: GetMetadata
        nameWithType: VirgisLayer(Of RecordSet, List(Of DMesh3)).GetMetadata
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Collections.Generic.List(Of DMesh3)).GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetMetadata
    parent: Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.GetMetadata
  Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.SetMetadata(RecordSet):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.SetMetadata(`0)
        name: SetMetadata
        nameWithType: VirgisLayer<RecordSet, List<DMesh3>>.SetMetadata
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Collections.Generic.List<DMesh3>>.SetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.SetMetadata(`0)
        name: SetMetadata
        nameWithType: VirgisLayer(Of RecordSet, List(Of DMesh3)).SetMetadata
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Collections.Generic.List(Of DMesh3)).SetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.SetMetadata(`0)
    parent: Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.SetMetadata(RecordSet)
  Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.SetFeatures(System.Collections.Generic.List{DMesh3}):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.SetFeatures(`1)
        name: SetFeatures
        nameWithType: VirgisLayer<RecordSet, List<DMesh3>>.SetFeatures
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Collections.Generic.List<DMesh3>>.SetFeatures
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: DMesh3
        name: DMesh3
        nameWithType: DMesh3
        qualifiedName: DMesh3
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.SetFeatures(`1)
        name: SetFeatures
        nameWithType: VirgisLayer(Of RecordSet, List(Of DMesh3)).SetFeatures
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Collections.Generic.List(Of DMesh3)).SetFeatures
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: DMesh3
        name: DMesh3
        nameWithType: DMesh3
        qualifiedName: DMesh3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.SetFeatures(`1)
    parent: Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.SetFeatures(System.Collections.Generic.List{DMesh3})
  Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.Equals(System.Object):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Equals(System.Object)
        name: Equals
        nameWithType: VirgisLayer<RecordSet, List<DMesh3>>.Equals
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Collections.Generic.List<DMesh3>>.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Equals(System.Object)
        name: Equals
        nameWithType: VirgisLayer(Of RecordSet, List(Of DMesh3)).Equals
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Collections.Generic.List(Of DMesh3)).Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Equals(System.Object)
    parent: Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.Equals(System.Object)
  Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.GetHashCode:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetHashCode
        name: GetHashCode
        nameWithType: VirgisLayer<RecordSet, List<DMesh3>>.GetHashCode
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Collections.Generic.List<DMesh3>>.GetHashCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetHashCode
        name: GetHashCode
        nameWithType: VirgisLayer(Of RecordSet, List(Of DMesh3)).GetHashCode
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Collections.Generic.List(Of DMesh3)).GetHashCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetHashCode
    parent: Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.GetHashCode
  ? Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.Equals(Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}})
  : name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
        name: Equals
        nameWithType: VirgisLayer<RecordSet, List<DMesh3>>.Equals
        qualifiedName: Virgis.VirgisLayer<RecordSet, System.Collections.Generic.List<DMesh3>>.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: DMesh3
        name: DMesh3
        nameWithType: DMesh3
        qualifiedName: DMesh3
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
        name: Equals
        nameWithType: VirgisLayer(Of RecordSet, List(Of DMesh3)).Equals
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, System.Collections.Generic.List(Of DMesh3)).Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: DMesh3
        name: DMesh3
        nameWithType: DMesh3
        qualifiedName: DMesh3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
    parent: Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}
    commentId: M:Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}}.Equals(Virgis.VirgisLayer{RecordSet,System.Collections.Generic.List{DMesh3}})
  Virgis.MeshLayer._init*:
    name:
      CSharp:
      - id: Virgis.MeshLayer._init*
        name: _init
        nameWithType: MeshLayer._init
        qualifiedName: Virgis.MeshLayer._init
      VB:
      - id: Virgis.MeshLayer._init*
        name: _init
        nameWithType: MeshLayer._init
        qualifiedName: Virgis.MeshLayer._init
    isDefinition: true
    commentId: Overload:Virgis.MeshLayer._init
  Virgis.MeshLayer._addFeature*:
    name:
      CSharp:
      - id: Virgis.MeshLayer._addFeature*
        name: _addFeature
        nameWithType: MeshLayer._addFeature
        qualifiedName: Virgis.MeshLayer._addFeature
      VB:
      - id: Virgis.MeshLayer._addFeature*
        name: _addFeature
        nameWithType: MeshLayer._addFeature
        qualifiedName: Virgis.MeshLayer._addFeature
    isDefinition: true
    commentId: Overload:Virgis.MeshLayer._addFeature
  Virgis.MeshLayer._draw*:
    name:
      CSharp:
      - id: Virgis.MeshLayer._draw*
        name: _draw
        nameWithType: MeshLayer._draw
        qualifiedName: Virgis.MeshLayer._draw
      VB:
      - id: Virgis.MeshLayer._draw*
        name: _draw
        nameWithType: MeshLayer._draw
        qualifiedName: Virgis.MeshLayer._draw
    isDefinition: true
    commentId: Overload:Virgis.MeshLayer._draw
  Virgis.MeshLayer.Translate*:
    name:
      CSharp:
      - id: Virgis.MeshLayer.Translate*
        name: Translate
        nameWithType: MeshLayer.Translate
        qualifiedName: Virgis.MeshLayer.Translate
      VB:
      - id: Virgis.MeshLayer.Translate*
        name: Translate
        nameWithType: MeshLayer.Translate
        qualifiedName: Virgis.MeshLayer.Translate
    isDefinition: true
    commentId: Overload:Virgis.MeshLayer.Translate
  Virgis.MeshLayer.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.MeshLayer.MoveAxis*
        name: MoveAxis
        nameWithType: MeshLayer.MoveAxis
        qualifiedName: Virgis.MeshLayer.MoveAxis
      VB:
      - id: Virgis.MeshLayer.MoveAxis*
        name: MoveAxis
        nameWithType: MeshLayer.MoveAxis
        qualifiedName: Virgis.MeshLayer.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.MeshLayer.MoveAxis
  Virgis.MeshLayer._checkpoint*:
    name:
      CSharp:
      - id: Virgis.MeshLayer._checkpoint*
        name: _checkpoint
        nameWithType: MeshLayer._checkpoint
        qualifiedName: Virgis.MeshLayer._checkpoint
      VB:
      - id: Virgis.MeshLayer._checkpoint*
        name: _checkpoint
        nameWithType: MeshLayer._checkpoint
        qualifiedName: Virgis.MeshLayer._checkpoint
    isDefinition: true
    commentId: Overload:Virgis.MeshLayer._checkpoint
  Virgis.MeshLayer._save*:
    name:
      CSharp:
      - id: Virgis.MeshLayer._save*
        name: _save
        nameWithType: MeshLayer._save
        qualifiedName: Virgis.MeshLayer._save
      VB:
      - id: Virgis.MeshLayer._save*
        name: _save
        nameWithType: MeshLayer._save
        qualifiedName: Virgis.MeshLayer._save
    isDefinition: true
    commentId: Overload:Virgis.MeshLayer._save
  Virgis.MeshLayer:
    name:
      CSharp:
      - id: Virgis.MeshLayer
        name: MeshLayer
        nameWithType: MeshLayer
        qualifiedName: Virgis.MeshLayer
      VB:
      - id: Virgis.MeshLayer
        name: MeshLayer
        nameWithType: MeshLayer
        qualifiedName: Virgis.MeshLayer
    isDefinition: true
    commentId: T:Virgis.MeshLayer
  Virgis.VirgisLayer{RecordSet,Layer}:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Layer
        name: Layer
        nameWithType: Layer
        qualifiedName: Layer
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Layer
        name: Layer
        nameWithType: Layer
        qualifiedName: Layer
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2
    parent: Virgis
    commentId: T:Virgis.VirgisLayer{RecordSet,Layer}
  Virgis.VirgisLayer{RecordSet,Layer}.features:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.features
        name: features
        nameWithType: VirgisLayer<RecordSet, Layer>.features
        qualifiedName: Virgis.VirgisLayer<RecordSet, Layer>.features
      VB:
      - id: Virgis.VirgisLayer`2.features
        name: features
        nameWithType: VirgisLayer(Of RecordSet, Layer).features
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Layer).features
    isDefinition: false
    definition: Virgis.VirgisLayer`2.features
    parent: Virgis.VirgisLayer{RecordSet,Layer}
    commentId: F:Virgis.VirgisLayer{RecordSet,Layer}.features
  Virgis.VirgisLayer{RecordSet,Layer}.Init(RecordSet):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Init(`0)
        name: Init
        nameWithType: VirgisLayer<RecordSet, Layer>.Init
        qualifiedName: Virgis.VirgisLayer<RecordSet, Layer>.Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Init(`0)
        name: Init
        nameWithType: VirgisLayer(Of RecordSet, Layer).Init
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Layer).Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Init(`0)
    parent: Virgis.VirgisLayer{RecordSet,Layer}
    commentId: M:Virgis.VirgisLayer{RecordSet,Layer}.Init(RecordSet)
  Virgis.VirgisLayer{RecordSet,Layer}._init:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._init
        name: _init
        nameWithType: VirgisLayer<RecordSet, Layer>._init
        qualifiedName: Virgis.VirgisLayer<RecordSet, Layer>._init
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._init
        name: _init
        nameWithType: VirgisLayer(Of RecordSet, Layer)._init
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Layer)._init
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._init
    parent: Virgis.VirgisLayer{RecordSet,Layer}
    commentId: M:Virgis.VirgisLayer{RecordSet,Layer}._init
  Virgis.VirgisLayer{RecordSet,Layer}.GetMetadata:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetMetadata
        name: GetMetadata
        nameWithType: VirgisLayer<RecordSet, Layer>.GetMetadata
        qualifiedName: Virgis.VirgisLayer<RecordSet, Layer>.GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetMetadata
        name: GetMetadata
        nameWithType: VirgisLayer(Of RecordSet, Layer).GetMetadata
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Layer).GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetMetadata
    parent: Virgis.VirgisLayer{RecordSet,Layer}
    commentId: M:Virgis.VirgisLayer{RecordSet,Layer}.GetMetadata
  Virgis.VirgisLayer{RecordSet,Layer}.SetMetadata(RecordSet):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.SetMetadata(`0)
        name: SetMetadata
        nameWithType: VirgisLayer<RecordSet, Layer>.SetMetadata
        qualifiedName: Virgis.VirgisLayer<RecordSet, Layer>.SetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.SetMetadata(`0)
        name: SetMetadata
        nameWithType: VirgisLayer(Of RecordSet, Layer).SetMetadata
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Layer).SetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.SetMetadata(`0)
    parent: Virgis.VirgisLayer{RecordSet,Layer}
    commentId: M:Virgis.VirgisLayer{RecordSet,Layer}.SetMetadata(RecordSet)
  Virgis.VirgisLayer{RecordSet,Layer}.SetFeatures(Layer):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.SetFeatures(`1)
        name: SetFeatures
        nameWithType: VirgisLayer<RecordSet, Layer>.SetFeatures
        qualifiedName: Virgis.VirgisLayer<RecordSet, Layer>.SetFeatures
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Layer
        name: Layer
        nameWithType: Layer
        qualifiedName: Layer
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.SetFeatures(`1)
        name: SetFeatures
        nameWithType: VirgisLayer(Of RecordSet, Layer).SetFeatures
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Layer).SetFeatures
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Layer
        name: Layer
        nameWithType: Layer
        qualifiedName: Layer
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.SetFeatures(`1)
    parent: Virgis.VirgisLayer{RecordSet,Layer}
    commentId: M:Virgis.VirgisLayer{RecordSet,Layer}.SetFeatures(Layer)
  Virgis.VirgisLayer{RecordSet,Layer}.Equals(System.Object):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Equals(System.Object)
        name: Equals
        nameWithType: VirgisLayer<RecordSet, Layer>.Equals
        qualifiedName: Virgis.VirgisLayer<RecordSet, Layer>.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Equals(System.Object)
        name: Equals
        nameWithType: VirgisLayer(Of RecordSet, Layer).Equals
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Layer).Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Equals(System.Object)
    parent: Virgis.VirgisLayer{RecordSet,Layer}
    commentId: M:Virgis.VirgisLayer{RecordSet,Layer}.Equals(System.Object)
  Virgis.VirgisLayer{RecordSet,Layer}.GetHashCode:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetHashCode
        name: GetHashCode
        nameWithType: VirgisLayer<RecordSet, Layer>.GetHashCode
        qualifiedName: Virgis.VirgisLayer<RecordSet, Layer>.GetHashCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetHashCode
        name: GetHashCode
        nameWithType: VirgisLayer(Of RecordSet, Layer).GetHashCode
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Layer).GetHashCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetHashCode
    parent: Virgis.VirgisLayer{RecordSet,Layer}
    commentId: M:Virgis.VirgisLayer{RecordSet,Layer}.GetHashCode
  Virgis.VirgisLayer{RecordSet,Layer}.Equals(Virgis.VirgisLayer{RecordSet,Layer}):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
        name: Equals
        nameWithType: VirgisLayer<RecordSet, Layer>.Equals
        qualifiedName: Virgis.VirgisLayer<RecordSet, Layer>.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Layer
        name: Layer
        nameWithType: Layer
        qualifiedName: Layer
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
        name: Equals
        nameWithType: VirgisLayer(Of RecordSet, Layer).Equals
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Layer).Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Layer
        name: Layer
        nameWithType: Layer
        qualifiedName: Layer
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
    parent: Virgis.VirgisLayer{RecordSet,Layer}
    commentId: M:Virgis.VirgisLayer{RecordSet,Layer}.Equals(Virgis.VirgisLayer{RecordSet,Layer})
  Virgis.PolygonLayer._init*:
    name:
      CSharp:
      - id: Virgis.PolygonLayer._init*
        name: _init
        nameWithType: PolygonLayer._init
        qualifiedName: Virgis.PolygonLayer._init
      VB:
      - id: Virgis.PolygonLayer._init*
        name: _init
        nameWithType: PolygonLayer._init
        qualifiedName: Virgis.PolygonLayer._init
    isDefinition: true
    commentId: Overload:Virgis.PolygonLayer._init
  Virgis.PolygonLayer._addFeature*:
    name:
      CSharp:
      - id: Virgis.PolygonLayer._addFeature*
        name: _addFeature
        nameWithType: PolygonLayer._addFeature
        qualifiedName: Virgis.PolygonLayer._addFeature
      VB:
      - id: Virgis.PolygonLayer._addFeature*
        name: _addFeature
        nameWithType: PolygonLayer._addFeature
        qualifiedName: Virgis.PolygonLayer._addFeature
    isDefinition: true
    commentId: Overload:Virgis.PolygonLayer._addFeature
  Virgis.PolygonLayer._draw*:
    name:
      CSharp:
      - id: Virgis.PolygonLayer._draw*
        name: _draw
        nameWithType: PolygonLayer._draw
        qualifiedName: Virgis.PolygonLayer._draw
      VB:
      - id: Virgis.PolygonLayer._draw*
        name: _draw
        nameWithType: PolygonLayer._draw
        qualifiedName: Virgis.PolygonLayer._draw
    isDefinition: true
    commentId: Overload:Virgis.PolygonLayer._draw
  Geometry:
    name:
      CSharp:
      - id: Geometry
        name: Geometry
        nameWithType: Geometry
        qualifiedName: Geometry
        isExternal: true
      VB:
      - id: Geometry
        name: Geometry
        nameWithType: Geometry
        qualifiedName: Geometry
        isExternal: true
    isDefinition: true
  Feature:
    name:
      CSharp:
      - id: Feature
        name: Feature
        nameWithType: Feature
        qualifiedName: Feature
        isExternal: true
      VB:
      - id: Feature
        name: Feature
        nameWithType: Feature
        qualifiedName: Feature
        isExternal: true
    isDefinition: true
  Virgis.PolygonLayer._drawFeature*:
    name:
      CSharp:
      - id: Virgis.PolygonLayer._drawFeature*
        name: _drawFeature
        nameWithType: PolygonLayer._drawFeature
        qualifiedName: Virgis.PolygonLayer._drawFeature
      VB:
      - id: Virgis.PolygonLayer._drawFeature*
        name: _drawFeature
        nameWithType: PolygonLayer._drawFeature
        qualifiedName: Virgis.PolygonLayer._drawFeature
    isDefinition: true
    commentId: Overload:Virgis.PolygonLayer._drawFeature
  Virgis.PolygonLayer._checkpoint*:
    name:
      CSharp:
      - id: Virgis.PolygonLayer._checkpoint*
        name: _checkpoint
        nameWithType: PolygonLayer._checkpoint
        qualifiedName: Virgis.PolygonLayer._checkpoint
      VB:
      - id: Virgis.PolygonLayer._checkpoint*
        name: _checkpoint
        nameWithType: PolygonLayer._checkpoint
        qualifiedName: Virgis.PolygonLayer._checkpoint
    isDefinition: true
    commentId: Overload:Virgis.PolygonLayer._checkpoint
  Virgis.PolygonLayer._save*:
    name:
      CSharp:
      - id: Virgis.PolygonLayer._save*
        name: _save
        nameWithType: PolygonLayer._save
        qualifiedName: Virgis.PolygonLayer._save
      VB:
      - id: Virgis.PolygonLayer._save*
        name: _save
        nameWithType: PolygonLayer._save
        qualifiedName: Virgis.PolygonLayer._save
    isDefinition: true
    commentId: Overload:Virgis.PolygonLayer._save
  Virgis.PolygonLayer.GetFeatureShape*:
    name:
      CSharp:
      - id: Virgis.PolygonLayer.GetFeatureShape*
        name: GetFeatureShape
        nameWithType: PolygonLayer.GetFeatureShape
        qualifiedName: Virgis.PolygonLayer.GetFeatureShape
      VB:
      - id: Virgis.PolygonLayer.GetFeatureShape*
        name: GetFeatureShape
        nameWithType: PolygonLayer.GetFeatureShape
        qualifiedName: Virgis.PolygonLayer.GetFeatureShape
    isDefinition: true
    commentId: Overload:Virgis.PolygonLayer.GetFeatureShape
  Virgis.PolygonLayer.Translate*:
    name:
      CSharp:
      - id: Virgis.PolygonLayer.Translate*
        name: Translate
        nameWithType: PolygonLayer.Translate
        qualifiedName: Virgis.PolygonLayer.Translate
      VB:
      - id: Virgis.PolygonLayer.Translate*
        name: Translate
        nameWithType: PolygonLayer.Translate
        qualifiedName: Virgis.PolygonLayer.Translate
    isDefinition: true
    commentId: Overload:Virgis.PolygonLayer.Translate
  Virgis.PolygonLayer.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.PolygonLayer.MoveAxis*
        name: MoveAxis
        nameWithType: PolygonLayer.MoveAxis
        qualifiedName: Virgis.PolygonLayer.MoveAxis
      VB:
      - id: Virgis.PolygonLayer.MoveAxis*
        name: MoveAxis
        nameWithType: PolygonLayer.MoveAxis
        qualifiedName: Virgis.PolygonLayer.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.PolygonLayer.MoveAxis
  Virgis.PolygonLayer:
    name:
      CSharp:
      - id: Virgis.PolygonLayer
        name: PolygonLayer
        nameWithType: PolygonLayer
        qualifiedName: Virgis.PolygonLayer
      VB:
      - id: Virgis.PolygonLayer
        name: PolygonLayer
        nameWithType: PolygonLayer
        qualifiedName: Virgis.PolygonLayer
    isDefinition: true
    commentId: T:Virgis.PolygonLayer
  Virgis.PointLayer._init*:
    name:
      CSharp:
      - id: Virgis.PointLayer._init*
        name: _init
        nameWithType: PointLayer._init
        qualifiedName: Virgis.PointLayer._init
      VB:
      - id: Virgis.PointLayer._init*
        name: _init
        nameWithType: PointLayer._init
        qualifiedName: Virgis.PointLayer._init
    isDefinition: true
    commentId: Overload:Virgis.PointLayer._init
  Virgis.PointLayer._addFeature*:
    name:
      CSharp:
      - id: Virgis.PointLayer._addFeature*
        name: _addFeature
        nameWithType: PointLayer._addFeature
        qualifiedName: Virgis.PointLayer._addFeature
      VB:
      - id: Virgis.PointLayer._addFeature*
        name: _addFeature
        nameWithType: PointLayer._addFeature
        qualifiedName: Virgis.PointLayer._addFeature
    isDefinition: true
    commentId: Overload:Virgis.PointLayer._addFeature
  Virgis.PointLayer._draw*:
    name:
      CSharp:
      - id: Virgis.PointLayer._draw*
        name: _draw
        nameWithType: PointLayer._draw
        qualifiedName: Virgis.PointLayer._draw
      VB:
      - id: Virgis.PointLayer._draw*
        name: _draw
        nameWithType: PointLayer._draw
        qualifiedName: Virgis.PointLayer._draw
    isDefinition: true
    commentId: Overload:Virgis.PointLayer._draw
  Virgis.PointLayer._drawFeature*:
    name:
      CSharp:
      - id: Virgis.PointLayer._drawFeature*
        name: _drawFeature
        nameWithType: PointLayer._drawFeature
        qualifiedName: Virgis.PointLayer._drawFeature
      VB:
      - id: Virgis.PointLayer._drawFeature*
        name: _drawFeature
        nameWithType: PointLayer._drawFeature
        qualifiedName: Virgis.PointLayer._drawFeature
    isDefinition: true
    commentId: Overload:Virgis.PointLayer._drawFeature
  Virgis.PointLayer._checkpoint*:
    name:
      CSharp:
      - id: Virgis.PointLayer._checkpoint*
        name: _checkpoint
        nameWithType: PointLayer._checkpoint
        qualifiedName: Virgis.PointLayer._checkpoint
      VB:
      - id: Virgis.PointLayer._checkpoint*
        name: _checkpoint
        nameWithType: PointLayer._checkpoint
        qualifiedName: Virgis.PointLayer._checkpoint
    isDefinition: true
    commentId: Overload:Virgis.PointLayer._checkpoint
  Virgis.PointLayer._save*:
    name:
      CSharp:
      - id: Virgis.PointLayer._save*
        name: _save
        nameWithType: PointLayer._save
        qualifiedName: Virgis.PointLayer._save
      VB:
      - id: Virgis.PointLayer._save*
        name: _save
        nameWithType: PointLayer._save
        qualifiedName: Virgis.PointLayer._save
    isDefinition: true
    commentId: Overload:Virgis.PointLayer._save
  Virgis.PointLayer.GetFeatureShape*:
    name:
      CSharp:
      - id: Virgis.PointLayer.GetFeatureShape*
        name: GetFeatureShape
        nameWithType: PointLayer.GetFeatureShape
        qualifiedName: Virgis.PointLayer.GetFeatureShape
      VB:
      - id: Virgis.PointLayer.GetFeatureShape*
        name: GetFeatureShape
        nameWithType: PointLayer.GetFeatureShape
        qualifiedName: Virgis.PointLayer.GetFeatureShape
    isDefinition: true
    commentId: Overload:Virgis.PointLayer.GetFeatureShape
  Virgis.PointLayer.Translate*:
    name:
      CSharp:
      - id: Virgis.PointLayer.Translate*
        name: Translate
        nameWithType: PointLayer.Translate
        qualifiedName: Virgis.PointLayer.Translate
      VB:
      - id: Virgis.PointLayer.Translate*
        name: Translate
        nameWithType: PointLayer.Translate
        qualifiedName: Virgis.PointLayer.Translate
    isDefinition: true
    commentId: Overload:Virgis.PointLayer.Translate
  Virgis.PointLayer.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.PointLayer.MoveAxis*
        name: MoveAxis
        nameWithType: PointLayer.MoveAxis
        qualifiedName: Virgis.PointLayer.MoveAxis
      VB:
      - id: Virgis.PointLayer.MoveAxis*
        name: MoveAxis
        nameWithType: PointLayer.MoveAxis
        qualifiedName: Virgis.PointLayer.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.PointLayer.MoveAxis
  Virgis.PointLayer.RemoveVertex*:
    name:
      CSharp:
      - id: Virgis.PointLayer.RemoveVertex*
        name: RemoveVertex
        nameWithType: PointLayer.RemoveVertex
        qualifiedName: Virgis.PointLayer.RemoveVertex
      VB:
      - id: Virgis.PointLayer.RemoveVertex*
        name: RemoveVertex
        nameWithType: PointLayer.RemoveVertex
        qualifiedName: Virgis.PointLayer.RemoveVertex
    isDefinition: true
    commentId: Overload:Virgis.PointLayer.RemoveVertex
  Virgis.PointLayer:
    name:
      CSharp:
      - id: Virgis.PointLayer
        name: PointLayer
        nameWithType: PointLayer
        qualifiedName: Virgis.PointLayer
      VB:
      - id: Virgis.PointLayer
        name: PointLayer
        nameWithType: PointLayer
        qualifiedName: Virgis.PointLayer
    isDefinition: true
    commentId: T:Virgis.PointLayer
  Virgis.ContainerLayer._addFeature*:
    name:
      CSharp:
      - id: Virgis.ContainerLayer._addFeature*
        name: _addFeature
        nameWithType: ContainerLayer._addFeature
        qualifiedName: Virgis.ContainerLayer._addFeature
      VB:
      - id: Virgis.ContainerLayer._addFeature*
        name: _addFeature
        nameWithType: ContainerLayer._addFeature
        qualifiedName: Virgis.ContainerLayer._addFeature
    isDefinition: true
    commentId: Overload:Virgis.ContainerLayer._addFeature
  Virgis.ContainerLayer._checkpoint*:
    name:
      CSharp:
      - id: Virgis.ContainerLayer._checkpoint*
        name: _checkpoint
        nameWithType: ContainerLayer._checkpoint
        qualifiedName: Virgis.ContainerLayer._checkpoint
      VB:
      - id: Virgis.ContainerLayer._checkpoint*
        name: _checkpoint
        nameWithType: ContainerLayer._checkpoint
        qualifiedName: Virgis.ContainerLayer._checkpoint
    isDefinition: true
    commentId: Overload:Virgis.ContainerLayer._checkpoint
  Virgis.ContainerLayer._draw*:
    name:
      CSharp:
      - id: Virgis.ContainerLayer._draw*
        name: _draw
        nameWithType: ContainerLayer._draw
        qualifiedName: Virgis.ContainerLayer._draw
      VB:
      - id: Virgis.ContainerLayer._draw*
        name: _draw
        nameWithType: ContainerLayer._draw
        qualifiedName: Virgis.ContainerLayer._draw
    isDefinition: true
    commentId: Overload:Virgis.ContainerLayer._draw
  Virgis.ContainerLayer._save*:
    name:
      CSharp:
      - id: Virgis.ContainerLayer._save*
        name: _save
        nameWithType: ContainerLayer._save
        qualifiedName: Virgis.ContainerLayer._save
      VB:
      - id: Virgis.ContainerLayer._save*
        name: _save
        nameWithType: ContainerLayer._save
        qualifiedName: Virgis.ContainerLayer._save
    isDefinition: true
    commentId: Overload:Virgis.ContainerLayer._save
  Virgis.ContainerLayer:
    name:
      CSharp:
      - id: Virgis.ContainerLayer
        name: ContainerLayer
        nameWithType: ContainerLayer
        qualifiedName: Virgis.ContainerLayer
      VB:
      - id: Virgis.ContainerLayer
        name: ContainerLayer
        nameWithType: ContainerLayer
        qualifiedName: Virgis.ContainerLayer
    isDefinition: true
    commentId: T:Virgis.ContainerLayer
  Virgis.VirgisLayer{RecordSet,Layer[]}:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Layer
        name: Layer
        nameWithType: Layer
        qualifiedName: Layer
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Layer
        name: Layer
        nameWithType: Layer
        qualifiedName: Layer
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2
    parent: Virgis
    commentId: T:Virgis.VirgisLayer{RecordSet,Layer[]}
  Virgis.VirgisLayer{RecordSet,Layer[]}.features:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.features
        name: features
        nameWithType: VirgisLayer<RecordSet, Layer[]>.features
        qualifiedName: Virgis.VirgisLayer<RecordSet, Layer[]>.features
      VB:
      - id: Virgis.VirgisLayer`2.features
        name: features
        nameWithType: VirgisLayer(Of RecordSet, Layer()).features
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Layer()).features
    isDefinition: false
    definition: Virgis.VirgisLayer`2.features
    parent: Virgis.VirgisLayer{RecordSet,Layer[]}
    commentId: F:Virgis.VirgisLayer{RecordSet,Layer[]}.features
  Virgis.VirgisLayer{RecordSet,Layer[]}.Init(RecordSet):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Init(`0)
        name: Init
        nameWithType: VirgisLayer<RecordSet, Layer[]>.Init
        qualifiedName: Virgis.VirgisLayer<RecordSet, Layer[]>.Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Init(`0)
        name: Init
        nameWithType: VirgisLayer(Of RecordSet, Layer()).Init
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Layer()).Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Init(`0)
    parent: Virgis.VirgisLayer{RecordSet,Layer[]}
    commentId: M:Virgis.VirgisLayer{RecordSet,Layer[]}.Init(RecordSet)
  Virgis.VirgisLayer{RecordSet,Layer[]}._init:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._init
        name: _init
        nameWithType: VirgisLayer<RecordSet, Layer[]>._init
        qualifiedName: Virgis.VirgisLayer<RecordSet, Layer[]>._init
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2._init
        name: _init
        nameWithType: VirgisLayer(Of RecordSet, Layer())._init
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Layer())._init
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2._init
    parent: Virgis.VirgisLayer{RecordSet,Layer[]}
    commentId: M:Virgis.VirgisLayer{RecordSet,Layer[]}._init
  Virgis.VirgisLayer{RecordSet,Layer[]}.GetMetadata:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetMetadata
        name: GetMetadata
        nameWithType: VirgisLayer<RecordSet, Layer[]>.GetMetadata
        qualifiedName: Virgis.VirgisLayer<RecordSet, Layer[]>.GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetMetadata
        name: GetMetadata
        nameWithType: VirgisLayer(Of RecordSet, Layer()).GetMetadata
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Layer()).GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetMetadata
    parent: Virgis.VirgisLayer{RecordSet,Layer[]}
    commentId: M:Virgis.VirgisLayer{RecordSet,Layer[]}.GetMetadata
  Virgis.VirgisLayer{RecordSet,Layer[]}.SetMetadata(RecordSet):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.SetMetadata(`0)
        name: SetMetadata
        nameWithType: VirgisLayer<RecordSet, Layer[]>.SetMetadata
        qualifiedName: Virgis.VirgisLayer<RecordSet, Layer[]>.SetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.SetMetadata(`0)
        name: SetMetadata
        nameWithType: VirgisLayer(Of RecordSet, Layer()).SetMetadata
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Layer()).SetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.SetMetadata(`0)
    parent: Virgis.VirgisLayer{RecordSet,Layer[]}
    commentId: M:Virgis.VirgisLayer{RecordSet,Layer[]}.SetMetadata(RecordSet)
  Virgis.VirgisLayer{RecordSet,Layer[]}.SetFeatures(Layer[]):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.SetFeatures(`1)
        name: SetFeatures
        nameWithType: VirgisLayer<RecordSet, Layer[]>.SetFeatures
        qualifiedName: Virgis.VirgisLayer<RecordSet, Layer[]>.SetFeatures
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Layer
        name: Layer
        nameWithType: Layer
        qualifiedName: Layer
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.SetFeatures(`1)
        name: SetFeatures
        nameWithType: VirgisLayer(Of RecordSet, Layer()).SetFeatures
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Layer()).SetFeatures
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Layer
        name: Layer
        nameWithType: Layer
        qualifiedName: Layer
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.SetFeatures(`1)
    parent: Virgis.VirgisLayer{RecordSet,Layer[]}
    commentId: M:Virgis.VirgisLayer{RecordSet,Layer[]}.SetFeatures(Layer[])
  Virgis.VirgisLayer{RecordSet,Layer[]}.Equals(System.Object):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Equals(System.Object)
        name: Equals
        nameWithType: VirgisLayer<RecordSet, Layer[]>.Equals
        qualifiedName: Virgis.VirgisLayer<RecordSet, Layer[]>.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Equals(System.Object)
        name: Equals
        nameWithType: VirgisLayer(Of RecordSet, Layer()).Equals
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Layer()).Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Equals(System.Object)
    parent: Virgis.VirgisLayer{RecordSet,Layer[]}
    commentId: M:Virgis.VirgisLayer{RecordSet,Layer[]}.Equals(System.Object)
  Virgis.VirgisLayer{RecordSet,Layer[]}.GetHashCode:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetHashCode
        name: GetHashCode
        nameWithType: VirgisLayer<RecordSet, Layer[]>.GetHashCode
        qualifiedName: Virgis.VirgisLayer<RecordSet, Layer[]>.GetHashCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.GetHashCode
        name: GetHashCode
        nameWithType: VirgisLayer(Of RecordSet, Layer()).GetHashCode
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Layer()).GetHashCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.GetHashCode
    parent: Virgis.VirgisLayer{RecordSet,Layer[]}
    commentId: M:Virgis.VirgisLayer{RecordSet,Layer[]}.GetHashCode
  Virgis.VirgisLayer{RecordSet,Layer[]}.Equals(Virgis.VirgisLayer{RecordSet,Layer[]}):
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
        name: Equals
        nameWithType: VirgisLayer<RecordSet, Layer[]>.Equals
        qualifiedName: Virgis.VirgisLayer<RecordSet, Layer[]>.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Layer
        name: Layer
        nameWithType: Layer
        qualifiedName: Layer
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
        name: Equals
        nameWithType: VirgisLayer(Of RecordSet, Layer()).Equals
        qualifiedName: Virgis.VirgisLayer(Of RecordSet, Layer()).Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Layer
        name: Layer
        nameWithType: Layer
        qualifiedName: Layer
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
    parent: Virgis.VirgisLayer{RecordSet,Layer[]}
    commentId: M:Virgis.VirgisLayer{RecordSet,Layer[]}.Equals(Virgis.VirgisLayer{RecordSet,Layer[]})
  Virgis.OgrLayer._init*:
    name:
      CSharp:
      - id: Virgis.OgrLayer._init*
        name: _init
        nameWithType: OgrLayer._init
        qualifiedName: Virgis.OgrLayer._init
      VB:
      - id: Virgis.OgrLayer._init*
        name: _init
        nameWithType: OgrLayer._init
        qualifiedName: Virgis.OgrLayer._init
    isDefinition: true
    commentId: Overload:Virgis.OgrLayer._init
  Virgis.OgrLayer._addFeature*:
    name:
      CSharp:
      - id: Virgis.OgrLayer._addFeature*
        name: _addFeature
        nameWithType: OgrLayer._addFeature
        qualifiedName: Virgis.OgrLayer._addFeature
      VB:
      - id: Virgis.OgrLayer._addFeature*
        name: _addFeature
        nameWithType: OgrLayer._addFeature
        qualifiedName: Virgis.OgrLayer._addFeature
    isDefinition: true
    commentId: Overload:Virgis.OgrLayer._addFeature
  Virgis.OgrLayer._draw*:
    name:
      CSharp:
      - id: Virgis.OgrLayer._draw*
        name: _draw
        nameWithType: OgrLayer._draw
        qualifiedName: Virgis.OgrLayer._draw
      VB:
      - id: Virgis.OgrLayer._draw*
        name: _draw
        nameWithType: OgrLayer._draw
        qualifiedName: Virgis.OgrLayer._draw
    isDefinition: true
    commentId: Overload:Virgis.OgrLayer._draw
  Virgis.OgrLayer._checkpoint*:
    name:
      CSharp:
      - id: Virgis.OgrLayer._checkpoint*
        name: _checkpoint
        nameWithType: OgrLayer._checkpoint
        qualifiedName: Virgis.OgrLayer._checkpoint
      VB:
      - id: Virgis.OgrLayer._checkpoint*
        name: _checkpoint
        nameWithType: OgrLayer._checkpoint
        qualifiedName: Virgis.OgrLayer._checkpoint
    isDefinition: true
    commentId: Overload:Virgis.OgrLayer._checkpoint
  Virgis.OgrLayer._save*:
    name:
      CSharp:
      - id: Virgis.OgrLayer._save*
        name: _save
        nameWithType: OgrLayer._save
        qualifiedName: Virgis.OgrLayer._save
      VB:
      - id: Virgis.OgrLayer._save*
        name: _save
        nameWithType: OgrLayer._save
        qualifiedName: Virgis.OgrLayer._save
    isDefinition: true
    commentId: Overload:Virgis.OgrLayer._save
  Virgis.OgrLayer:
    name:
      CSharp:
      - id: Virgis.OgrLayer
        name: OgrLayer
        nameWithType: OgrLayer
        qualifiedName: Virgis.OgrLayer
      VB:
      - id: Virgis.OgrLayer
        name: OgrLayer
        nameWithType: OgrLayer
        qualifiedName: Virgis.OgrLayer
    isDefinition: true
    commentId: T:Virgis.OgrLayer
  Virgis.MdalLayer._init*:
    name:
      CSharp:
      - id: Virgis.MdalLayer._init*
        name: _init
        nameWithType: MdalLayer._init
        qualifiedName: Virgis.MdalLayer._init
      VB:
      - id: Virgis.MdalLayer._init*
        name: _init
        nameWithType: MdalLayer._init
        qualifiedName: Virgis.MdalLayer._init
    isDefinition: true
    commentId: Overload:Virgis.MdalLayer._init
  Virgis.MdalLayer._addFeature*:
    name:
      CSharp:
      - id: Virgis.MdalLayer._addFeature*
        name: _addFeature
        nameWithType: MdalLayer._addFeature
        qualifiedName: Virgis.MdalLayer._addFeature
      VB:
      - id: Virgis.MdalLayer._addFeature*
        name: _addFeature
        nameWithType: MdalLayer._addFeature
        qualifiedName: Virgis.MdalLayer._addFeature
    isDefinition: true
    commentId: Overload:Virgis.MdalLayer._addFeature
  Virgis.MdalLayer._draw*:
    name:
      CSharp:
      - id: Virgis.MdalLayer._draw*
        name: _draw
        nameWithType: MdalLayer._draw
        qualifiedName: Virgis.MdalLayer._draw
      VB:
      - id: Virgis.MdalLayer._draw*
        name: _draw
        nameWithType: MdalLayer._draw
        qualifiedName: Virgis.MdalLayer._draw
    isDefinition: true
    commentId: Overload:Virgis.MdalLayer._draw
  Virgis.MdalLayer.Translate*:
    name:
      CSharp:
      - id: Virgis.MdalLayer.Translate*
        name: Translate
        nameWithType: MdalLayer.Translate
        qualifiedName: Virgis.MdalLayer.Translate
      VB:
      - id: Virgis.MdalLayer.Translate*
        name: Translate
        nameWithType: MdalLayer.Translate
        qualifiedName: Virgis.MdalLayer.Translate
    isDefinition: true
    commentId: Overload:Virgis.MdalLayer.Translate
  Virgis.MdalLayer.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.MdalLayer.MoveAxis*
        name: MoveAxis
        nameWithType: MdalLayer.MoveAxis
        qualifiedName: Virgis.MdalLayer.MoveAxis
      VB:
      - id: Virgis.MdalLayer.MoveAxis*
        name: MoveAxis
        nameWithType: MdalLayer.MoveAxis
        qualifiedName: Virgis.MdalLayer.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.MdalLayer.MoveAxis
  Virgis.MdalLayer._checkpoint*:
    name:
      CSharp:
      - id: Virgis.MdalLayer._checkpoint*
        name: _checkpoint
        nameWithType: MdalLayer._checkpoint
        qualifiedName: Virgis.MdalLayer._checkpoint
      VB:
      - id: Virgis.MdalLayer._checkpoint*
        name: _checkpoint
        nameWithType: MdalLayer._checkpoint
        qualifiedName: Virgis.MdalLayer._checkpoint
    isDefinition: true
    commentId: Overload:Virgis.MdalLayer._checkpoint
  Virgis.MdalLayer._save*:
    name:
      CSharp:
      - id: Virgis.MdalLayer._save*
        name: _save
        nameWithType: MdalLayer._save
        qualifiedName: Virgis.MdalLayer._save
      VB:
      - id: Virgis.MdalLayer._save*
        name: _save
        nameWithType: MdalLayer._save
        qualifiedName: Virgis.MdalLayer._save
    isDefinition: true
    commentId: Overload:Virgis.MdalLayer._save
  Virgis.MdalLayer:
    name:
      CSharp:
      - id: Virgis.MdalLayer
        name: MdalLayer
        nameWithType: MdalLayer
        qualifiedName: Virgis.MdalLayer
      VB:
      - id: Virgis.MdalLayer
        name: MdalLayer
        nameWithType: MdalLayer
        qualifiedName: Virgis.MdalLayer
    isDefinition: true
    commentId: T:Virgis.MdalLayer
  Virgis.DemLayer._init*:
    name:
      CSharp:
      - id: Virgis.DemLayer._init*
        name: _init
        nameWithType: DemLayer._init
        qualifiedName: Virgis.DemLayer._init
      VB:
      - id: Virgis.DemLayer._init*
        name: _init
        nameWithType: DemLayer._init
        qualifiedName: Virgis.DemLayer._init
    isDefinition: true
    commentId: Overload:Virgis.DemLayer._init
  Virgis.DemLayer._addFeature*:
    name:
      CSharp:
      - id: Virgis.DemLayer._addFeature*
        name: _addFeature
        nameWithType: DemLayer._addFeature
        qualifiedName: Virgis.DemLayer._addFeature
      VB:
      - id: Virgis.DemLayer._addFeature*
        name: _addFeature
        nameWithType: DemLayer._addFeature
        qualifiedName: Virgis.DemLayer._addFeature
    isDefinition: true
    commentId: Overload:Virgis.DemLayer._addFeature
  Virgis.DemLayer._draw*:
    name:
      CSharp:
      - id: Virgis.DemLayer._draw*
        name: _draw
        nameWithType: DemLayer._draw
        qualifiedName: Virgis.DemLayer._draw
      VB:
      - id: Virgis.DemLayer._draw*
        name: _draw
        nameWithType: DemLayer._draw
        qualifiedName: Virgis.DemLayer._draw
    isDefinition: true
    commentId: Overload:Virgis.DemLayer._draw
  Virgis.DemLayer._set_visible*:
    name:
      CSharp:
      - id: Virgis.DemLayer._set_visible*
        name: _set_visible
        nameWithType: DemLayer._set_visible
        qualifiedName: Virgis.DemLayer._set_visible
      VB:
      - id: Virgis.DemLayer._set_visible*
        name: _set_visible
        nameWithType: DemLayer._set_visible
        qualifiedName: Virgis.DemLayer._set_visible
    isDefinition: true
    commentId: Overload:Virgis.DemLayer._set_visible
  Virgis.DemLayer.Translate*:
    name:
      CSharp:
      - id: Virgis.DemLayer.Translate*
        name: Translate
        nameWithType: DemLayer.Translate
        qualifiedName: Virgis.DemLayer.Translate
      VB:
      - id: Virgis.DemLayer.Translate*
        name: Translate
        nameWithType: DemLayer.Translate
        qualifiedName: Virgis.DemLayer.Translate
    isDefinition: true
    commentId: Overload:Virgis.DemLayer.Translate
  Virgis.DemLayer.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.DemLayer.MoveAxis*
        name: MoveAxis
        nameWithType: DemLayer.MoveAxis
        qualifiedName: Virgis.DemLayer.MoveAxis
      VB:
      - id: Virgis.DemLayer.MoveAxis*
        name: MoveAxis
        nameWithType: DemLayer.MoveAxis
        qualifiedName: Virgis.DemLayer.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.DemLayer.MoveAxis
  Virgis.DemLayer._checkpoint*:
    name:
      CSharp:
      - id: Virgis.DemLayer._checkpoint*
        name: _checkpoint
        nameWithType: DemLayer._checkpoint
        qualifiedName: Virgis.DemLayer._checkpoint
      VB:
      - id: Virgis.DemLayer._checkpoint*
        name: _checkpoint
        nameWithType: DemLayer._checkpoint
        qualifiedName: Virgis.DemLayer._checkpoint
    isDefinition: true
    commentId: Overload:Virgis.DemLayer._checkpoint
  Virgis.DemLayer._save*:
    name:
      CSharp:
      - id: Virgis.DemLayer._save*
        name: _save
        nameWithType: DemLayer._save
        qualifiedName: Virgis.DemLayer._save
      VB:
      - id: Virgis.DemLayer._save*
        name: _save
        nameWithType: DemLayer._save
        qualifiedName: Virgis.DemLayer._save
    isDefinition: true
    commentId: Overload:Virgis.DemLayer._save
  Virgis.DemLayer:
    name:
      CSharp:
      - id: Virgis.DemLayer
        name: DemLayer
        nameWithType: DemLayer
        qualifiedName: Virgis.DemLayer
      VB:
      - id: Virgis.DemLayer
        name: DemLayer
        nameWithType: DemLayer
        qualifiedName: Virgis.DemLayer
    isDefinition: true
    commentId: T:Virgis.DemLayer
  Virgis.LineLayer._init*:
    name:
      CSharp:
      - id: Virgis.LineLayer._init*
        name: _init
        nameWithType: LineLayer._init
        qualifiedName: Virgis.LineLayer._init
      VB:
      - id: Virgis.LineLayer._init*
        name: _init
        nameWithType: LineLayer._init
        qualifiedName: Virgis.LineLayer._init
    isDefinition: true
    commentId: Overload:Virgis.LineLayer._init
  Virgis.LineLayer._addFeature*:
    name:
      CSharp:
      - id: Virgis.LineLayer._addFeature*
        name: _addFeature
        nameWithType: LineLayer._addFeature
        qualifiedName: Virgis.LineLayer._addFeature
      VB:
      - id: Virgis.LineLayer._addFeature*
        name: _addFeature
        nameWithType: LineLayer._addFeature
        qualifiedName: Virgis.LineLayer._addFeature
    isDefinition: true
    commentId: Overload:Virgis.LineLayer._addFeature
  Virgis.LineLayer._draw*:
    name:
      CSharp:
      - id: Virgis.LineLayer._draw*
        name: _draw
        nameWithType: LineLayer._draw
        qualifiedName: Virgis.LineLayer._draw
      VB:
      - id: Virgis.LineLayer._draw*
        name: _draw
        nameWithType: LineLayer._draw
        qualifiedName: Virgis.LineLayer._draw
    isDefinition: true
    commentId: Overload:Virgis.LineLayer._draw
  Virgis.LineLayer._drawFeature*:
    name:
      CSharp:
      - id: Virgis.LineLayer._drawFeature*
        name: _drawFeature
        nameWithType: LineLayer._drawFeature
        qualifiedName: Virgis.LineLayer._drawFeature
      VB:
      - id: Virgis.LineLayer._drawFeature*
        name: _drawFeature
        nameWithType: LineLayer._drawFeature
        qualifiedName: Virgis.LineLayer._drawFeature
    isDefinition: true
    commentId: Overload:Virgis.LineLayer._drawFeature
  Virgis.LineLayer._checkpoint*:
    name:
      CSharp:
      - id: Virgis.LineLayer._checkpoint*
        name: _checkpoint
        nameWithType: LineLayer._checkpoint
        qualifiedName: Virgis.LineLayer._checkpoint
      VB:
      - id: Virgis.LineLayer._checkpoint*
        name: _checkpoint
        nameWithType: LineLayer._checkpoint
        qualifiedName: Virgis.LineLayer._checkpoint
    isDefinition: true
    commentId: Overload:Virgis.LineLayer._checkpoint
  Virgis.LineLayer._save*:
    name:
      CSharp:
      - id: Virgis.LineLayer._save*
        name: _save
        nameWithType: LineLayer._save
        qualifiedName: Virgis.LineLayer._save
      VB:
      - id: Virgis.LineLayer._save*
        name: _save
        nameWithType: LineLayer._save
        qualifiedName: Virgis.LineLayer._save
    isDefinition: true
    commentId: Overload:Virgis.LineLayer._save
  Virgis.LineLayer.GetFeatureShape*:
    name:
      CSharp:
      - id: Virgis.LineLayer.GetFeatureShape*
        name: GetFeatureShape
        nameWithType: LineLayer.GetFeatureShape
        qualifiedName: Virgis.LineLayer.GetFeatureShape
      VB:
      - id: Virgis.LineLayer.GetFeatureShape*
        name: GetFeatureShape
        nameWithType: LineLayer.GetFeatureShape
        qualifiedName: Virgis.LineLayer.GetFeatureShape
    isDefinition: true
    commentId: Overload:Virgis.LineLayer.GetFeatureShape
  Virgis.LineLayer.Translate*:
    name:
      CSharp:
      - id: Virgis.LineLayer.Translate*
        name: Translate
        nameWithType: LineLayer.Translate
        qualifiedName: Virgis.LineLayer.Translate
      VB:
      - id: Virgis.LineLayer.Translate*
        name: Translate
        nameWithType: LineLayer.Translate
        qualifiedName: Virgis.LineLayer.Translate
    isDefinition: true
    commentId: Overload:Virgis.LineLayer.Translate
  Virgis.LineLayer.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.LineLayer.MoveAxis*
        name: MoveAxis
        nameWithType: LineLayer.MoveAxis
        qualifiedName: Virgis.LineLayer.MoveAxis
      VB:
      - id: Virgis.LineLayer.MoveAxis*
        name: MoveAxis
        nameWithType: LineLayer.MoveAxis
        qualifiedName: Virgis.LineLayer.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.LineLayer.MoveAxis
  Virgis.LineLayer:
    name:
      CSharp:
      - id: Virgis.LineLayer
        name: LineLayer
        nameWithType: LineLayer
        qualifiedName: Virgis.LineLayer
      VB:
      - id: Virgis.LineLayer
        name: LineLayer
        nameWithType: LineLayer
        qualifiedName: Virgis.LineLayer
    isDefinition: true
    commentId: T:Virgis.LineLayer
  Virgis.GraphLayer._init*:
    name:
      CSharp:
      - id: Virgis.GraphLayer._init*
        name: _init
        nameWithType: GraphLayer._init
        qualifiedName: Virgis.GraphLayer._init
      VB:
      - id: Virgis.GraphLayer._init*
        name: _init
        nameWithType: GraphLayer._init
        qualifiedName: Virgis.GraphLayer._init
    isDefinition: true
    commentId: Overload:Virgis.GraphLayer._init
  Virgis.GraphLayer._addFeature*:
    name:
      CSharp:
      - id: Virgis.GraphLayer._addFeature*
        name: _addFeature
        nameWithType: GraphLayer._addFeature
        qualifiedName: Virgis.GraphLayer._addFeature
      VB:
      - id: Virgis.GraphLayer._addFeature*
        name: _addFeature
        nameWithType: GraphLayer._addFeature
        qualifiedName: Virgis.GraphLayer._addFeature
    isDefinition: true
    commentId: Overload:Virgis.GraphLayer._addFeature
  Virgis.GraphLayer._draw*:
    name:
      CSharp:
      - id: Virgis.GraphLayer._draw*
        name: _draw
        nameWithType: GraphLayer._draw
        qualifiedName: Virgis.GraphLayer._draw
      VB:
      - id: Virgis.GraphLayer._draw*
        name: _draw
        nameWithType: GraphLayer._draw
        qualifiedName: Virgis.GraphLayer._draw
    isDefinition: true
    commentId: Overload:Virgis.GraphLayer._draw
  Virgis.GraphLayer._checkpoint*:
    name:
      CSharp:
      - id: Virgis.GraphLayer._checkpoint*
        name: _checkpoint
        nameWithType: GraphLayer._checkpoint
        qualifiedName: Virgis.GraphLayer._checkpoint
      VB:
      - id: Virgis.GraphLayer._checkpoint*
        name: _checkpoint
        nameWithType: GraphLayer._checkpoint
        qualifiedName: Virgis.GraphLayer._checkpoint
    isDefinition: true
    commentId: Overload:Virgis.GraphLayer._checkpoint
  Virgis.GraphLayer._save*:
    name:
      CSharp:
      - id: Virgis.GraphLayer._save*
        name: _save
        nameWithType: GraphLayer._save
        qualifiedName: Virgis.GraphLayer._save
      VB:
      - id: Virgis.GraphLayer._save*
        name: _save
        nameWithType: GraphLayer._save
        qualifiedName: Virgis.GraphLayer._save
    isDefinition: true
    commentId: Overload:Virgis.GraphLayer._save
  Virgis.GraphLayer:
    name:
      CSharp:
      - id: Virgis.GraphLayer
        name: GraphLayer
        nameWithType: GraphLayer
        qualifiedName: Virgis.GraphLayer
      VB:
      - id: Virgis.GraphLayer
        name: GraphLayer
        nameWithType: GraphLayer
        qualifiedName: Virgis.GraphLayer
    isDefinition: true
    commentId: T:Virgis.GraphLayer
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Collections.Generic.List{Layer}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Layer
        name: Layer
        nameWithType: Layer
        qualifiedName: Layer
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Layer
        name: Layer
        nameWithType: Layer
        qualifiedName: Layer
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Layer}
  Virgis.OgrReader.GetLayers*:
    name:
      CSharp:
      - id: Virgis.OgrReader.GetLayers*
        name: GetLayers
        nameWithType: OgrReader.GetLayers
        qualifiedName: Virgis.OgrReader.GetLayers
      VB:
      - id: Virgis.OgrReader.GetLayers*
        name: GetLayers
        nameWithType: OgrReader.GetLayers
        qualifiedName: Virgis.OgrReader.GetLayers
    isDefinition: true
    commentId: Overload:Virgis.OgrReader.GetLayers
  Virgis.OgrReader.Load*:
    name:
      CSharp:
      - id: Virgis.OgrReader.Load*
        name: Load
        nameWithType: OgrReader.Load
        qualifiedName: Virgis.OgrReader.Load
      VB:
      - id: Virgis.OgrReader.Load*
        name: Load
        nameWithType: OgrReader.Load
        qualifiedName: Virgis.OgrReader.Load
    isDefinition: true
    commentId: Overload:Virgis.OgrReader.Load
  Virgis.OgrReader.LoadWfs*:
    name:
      CSharp:
      - id: Virgis.OgrReader.LoadWfs*
        name: LoadWfs
        nameWithType: OgrReader.LoadWfs
        qualifiedName: Virgis.OgrReader.LoadWfs
      VB:
      - id: Virgis.OgrReader.LoadWfs*
        name: LoadWfs
        nameWithType: OgrReader.LoadWfs
        qualifiedName: Virgis.OgrReader.LoadWfs
    isDefinition: true
    commentId: Overload:Virgis.OgrReader.LoadWfs
  wkbGeometryType:
    name:
      CSharp:
      - id: wkbGeometryType
        name: wkbGeometryType
        nameWithType: wkbGeometryType
        qualifiedName: wkbGeometryType
        isExternal: true
      VB:
      - id: wkbGeometryType
        name: wkbGeometryType
        nameWithType: wkbGeometryType
        qualifiedName: wkbGeometryType
        isExternal: true
    isDefinition: true
    commentId: '!:wkbGeometryType'
  Virgis.OgrReader.Flatten*:
    name:
      CSharp:
      - id: Virgis.OgrReader.Flatten*
        name: Flatten
        nameWithType: OgrReader.Flatten
        qualifiedName: Virgis.OgrReader.Flatten
      VB:
      - id: Virgis.OgrReader.Flatten*
        name: Flatten
        nameWithType: OgrReader.Flatten
        qualifiedName: Virgis.OgrReader.Flatten
    isDefinition: true
    commentId: Overload:Virgis.OgrReader.Flatten
  Layer:
    name:
      CSharp:
      - id: Layer
        name: Layer
        nameWithType: Layer
        qualifiedName: Layer
        isExternal: true
      VB:
      - id: Layer
        name: Layer
        nameWithType: Layer
        qualifiedName: Layer
        isExternal: true
    isDefinition: true
    commentId: '!:Layer'
  Virgis.OgrReader.getSR*:
    name:
      CSharp:
      - id: Virgis.OgrReader.getSR*
        name: getSR
        nameWithType: OgrReader.getSR
        qualifiedName: Virgis.OgrReader.getSR
      VB:
      - id: Virgis.OgrReader.getSR*
        name: getSR
        nameWithType: OgrReader.getSR
        qualifiedName: Virgis.OgrReader.getSR
    isDefinition: true
    commentId: Overload:Virgis.OgrReader.getSR
  Virgis.OgrReader:
    name:
      CSharp:
      - id: Virgis.OgrReader
        name: OgrReader
        nameWithType: OgrReader
        qualifiedName: Virgis.OgrReader
      VB:
      - id: Virgis.OgrReader
        name: OgrReader
        nameWithType: OgrReader
        qualifiedName: Virgis.OgrReader
    isDefinition: true
    commentId: T:Virgis.OgrReader
  Virgis.ProjectJsonReader.Load*:
    name:
      CSharp:
      - id: Virgis.ProjectJsonReader.Load*
        name: Load
        nameWithType: ProjectJsonReader.Load
        qualifiedName: Virgis.ProjectJsonReader.Load
      VB:
      - id: Virgis.ProjectJsonReader.Load*
        name: Load
        nameWithType: ProjectJsonReader.Load
        qualifiedName: Virgis.ProjectJsonReader.Load
    isDefinition: true
    commentId: Overload:Virgis.ProjectJsonReader.Load
  Virgis.ProjectJsonReader.GetProject*:
    name:
      CSharp:
      - id: Virgis.ProjectJsonReader.GetProject*
        name: GetProject
        nameWithType: ProjectJsonReader.GetProject
        qualifiedName: Virgis.ProjectJsonReader.GetProject
      VB:
      - id: Virgis.ProjectJsonReader.GetProject*
        name: GetProject
        nameWithType: ProjectJsonReader.GetProject
        qualifiedName: Virgis.ProjectJsonReader.GetProject
    isDefinition: true
    commentId: Overload:Virgis.ProjectJsonReader.GetProject
  Virgis.ProjectJsonReader.Save*:
    name:
      CSharp:
      - id: Virgis.ProjectJsonReader.Save*
        name: Save
        nameWithType: ProjectJsonReader.Save
        qualifiedName: Virgis.ProjectJsonReader.Save
      VB:
      - id: Virgis.ProjectJsonReader.Save*
        name: Save
        nameWithType: ProjectJsonReader.Save
        qualifiedName: Virgis.ProjectJsonReader.Save
    isDefinition: true
    commentId: Overload:Virgis.ProjectJsonReader.Save
  Virgis.ProjectJsonReader.SetProject*:
    name:
      CSharp:
      - id: Virgis.ProjectJsonReader.SetProject*
        name: SetProject
        nameWithType: ProjectJsonReader.SetProject
        qualifiedName: Virgis.ProjectJsonReader.SetProject
      VB:
      - id: Virgis.ProjectJsonReader.SetProject*
        name: SetProject
        nameWithType: ProjectJsonReader.SetProject
        qualifiedName: Virgis.ProjectJsonReader.SetProject
    isDefinition: true
    commentId: Overload:Virgis.ProjectJsonReader.SetProject
  Virgis.ProjectJsonReader:
    name:
      CSharp:
      - id: Virgis.ProjectJsonReader
        name: ProjectJsonReader
        nameWithType: ProjectJsonReader
        qualifiedName: Virgis.ProjectJsonReader
      VB:
      - id: Virgis.ProjectJsonReader
        name: ProjectJsonReader
        nameWithType: ProjectJsonReader
        qualifiedName: Virgis.ProjectJsonReader
    isDefinition: true
    commentId: T:Virgis.ProjectJsonReader
  Task{Texture2D}:
    name:
      CSharp:
      - id: Task`1
        name: Task
        nameWithType: Task
        qualifiedName: Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Texture2D
        name: Texture2D
        nameWithType: Texture2D
        qualifiedName: Texture2D
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Task`1
        name: Task
        nameWithType: Task
        qualifiedName: Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Texture2D
        name: Texture2D
        nameWithType: Texture2D
        qualifiedName: Texture2D
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Task`1
    commentId: '!:Task{Texture2D}'
  Uri:
    name:
      CSharp:
      - id: Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: Uri
        isExternal: true
      VB:
      - id: Uri
        name: Uri
        nameWithType: Uri
        qualifiedName: Uri
        isExternal: true
    isDefinition: true
    commentId: '!:Uri'
  Virgis.TextureImage.Get*:
    name:
      CSharp:
      - id: Virgis.TextureImage.Get*
        name: Get
        nameWithType: TextureImage.Get
        qualifiedName: Virgis.TextureImage.Get
      VB:
      - id: Virgis.TextureImage.Get*
        name: Get
        nameWithType: TextureImage.Get
        qualifiedName: Virgis.TextureImage.Get
    isDefinition: true
    commentId: Overload:Virgis.TextureImage.Get
  Virgis.TextureImage:
    name:
      CSharp:
      - id: Virgis.TextureImage
        name: TextureImage
        nameWithType: TextureImage
        qualifiedName: Virgis.TextureImage
      VB:
      - id: Virgis.TextureImage
        name: TextureImage
        nameWithType: TextureImage
        qualifiedName: Virgis.TextureImage
    isDefinition: true
    commentId: T:Virgis.TextureImage
  Virgis.Datashape:
    name:
      CSharp:
      - id: Virgis.Datashape
        name: Datashape
        nameWithType: Datashape
        qualifiedName: Virgis.Datashape
      VB:
      - id: Virgis.Datashape
        name: Datashape
        nameWithType: Datashape
        qualifiedName: Virgis.Datashape
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.Datashape
  Virgis.Datashape.BlockMove:
    name:
      CSharp:
      - id: Virgis.Datashape.BlockMove
        name: BlockMove
        nameWithType: Datashape.BlockMove
        qualifiedName: Virgis.Datashape.BlockMove
      VB:
      - id: Virgis.Datashape.BlockMove
        name: BlockMove
        nameWithType: Datashape.BlockMove
        qualifiedName: Virgis.Datashape.BlockMove
    isDefinition: true
    parent: Virgis.Datashape
    commentId: F:Virgis.Datashape.BlockMove
  Virgis.Datashape.shapePrefab:
    name:
      CSharp:
      - id: Virgis.Datashape.shapePrefab
        name: shapePrefab
        nameWithType: Datashape.shapePrefab
        qualifiedName: Virgis.Datashape.shapePrefab
      VB:
      - id: Virgis.Datashape.shapePrefab
        name: shapePrefab
        nameWithType: Datashape.shapePrefab
        qualifiedName: Virgis.Datashape.shapePrefab
    isDefinition: true
    parent: Virgis.Datashape
    commentId: F:Virgis.Datashape.shapePrefab
  Virgis.Datashape.Shape:
    name:
      CSharp:
      - id: Virgis.Datashape.Shape
        name: Shape
        nameWithType: Datashape.Shape
        qualifiedName: Virgis.Datashape.Shape
      VB:
      - id: Virgis.Datashape.Shape
        name: Shape
        nameWithType: Datashape.Shape
        qualifiedName: Virgis.Datashape.Shape
    isDefinition: true
    parent: Virgis.Datashape
    commentId: F:Virgis.Datashape.Shape
  Virgis.Datashape.VertexTable:
    name:
      CSharp:
      - id: Virgis.Datashape.VertexTable
        name: VertexTable
        nameWithType: Datashape.VertexTable
        qualifiedName: Virgis.Datashape.VertexTable
      VB:
      - id: Virgis.Datashape.VertexTable
        name: VertexTable
        nameWithType: Datashape.VertexTable
        qualifiedName: Virgis.Datashape.VertexTable
    isDefinition: true
    parent: Virgis.Datashape
    commentId: F:Virgis.Datashape.VertexTable
  Virgis.Datashape.lines:
    name:
      CSharp:
      - id: Virgis.Datashape.lines
        name: lines
        nameWithType: Datashape.lines
        qualifiedName: Virgis.Datashape.lines
      VB:
      - id: Virgis.Datashape.lines
        name: lines
        nameWithType: Datashape.lines
        qualifiedName: Virgis.Datashape.lines
    isDefinition: true
    parent: Virgis.Datashape
    commentId: F:Virgis.Datashape.lines
  Virgis.Datashape.Polygon:
    name:
      CSharp:
      - id: Virgis.Datashape.Polygon
        name: Polygon
        nameWithType: Datashape.Polygon
        qualifiedName: Virgis.Datashape.Polygon
      VB:
      - id: Virgis.Datashape.Polygon
        name: Polygon
        nameWithType: Datashape.Polygon
        qualifiedName: Virgis.Datashape.Polygon
    isDefinition: true
    parent: Virgis.Datashape
    commentId: F:Virgis.Datashape.Polygon
  Virgis.Datashape.scaleX:
    name:
      CSharp:
      - id: Virgis.Datashape.scaleX
        name: scaleX
        nameWithType: Datashape.scaleX
        qualifiedName: Virgis.Datashape.scaleX
      VB:
      - id: Virgis.Datashape.scaleX
        name: scaleX
        nameWithType: Datashape.scaleX
        qualifiedName: Virgis.Datashape.scaleX
    isDefinition: true
    parent: Virgis.Datashape
    commentId: F:Virgis.Datashape.scaleX
  Virgis.Datashape.scaleY:
    name:
      CSharp:
      - id: Virgis.Datashape.scaleY
        name: scaleY
        nameWithType: Datashape.scaleY
        qualifiedName: Virgis.Datashape.scaleY
      VB:
      - id: Virgis.Datashape.scaleY
        name: scaleY
        nameWithType: Datashape.scaleY
        qualifiedName: Virgis.Datashape.scaleY
    isDefinition: true
    parent: Virgis.Datashape
    commentId: F:Virgis.Datashape.scaleY
  Virgis.Datashape.Selected(Virgis.SelectionType):
    name:
      CSharp:
      - id: Virgis.Datashape.Selected(Virgis.SelectionType)
        name: Selected
        nameWithType: Datashape.Selected
        qualifiedName: Virgis.Datashape.Selected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionType
        name: SelectionType
        nameWithType: SelectionType
        qualifiedName: Virgis.SelectionType
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.Datashape.Selected(Virgis.SelectionType)
        name: Selected
        nameWithType: Datashape.Selected
        qualifiedName: Virgis.Datashape.Selected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionType
        name: SelectionType
        nameWithType: SelectionType
        qualifiedName: Virgis.SelectionType
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.Datashape
    commentId: M:Virgis.Datashape.Selected(Virgis.SelectionType)
  Virgis.Datashape.UnSelected(Virgis.SelectionType):
    name:
      CSharp:
      - id: Virgis.Datashape.UnSelected(Virgis.SelectionType)
        name: UnSelected
        nameWithType: Datashape.UnSelected
        qualifiedName: Virgis.Datashape.UnSelected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionType
        name: SelectionType
        nameWithType: SelectionType
        qualifiedName: Virgis.SelectionType
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.Datashape.UnSelected(Virgis.SelectionType)
        name: UnSelected
        nameWithType: Datashape.UnSelected
        qualifiedName: Virgis.Datashape.UnSelected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionType
        name: SelectionType
        nameWithType: SelectionType
        qualifiedName: Virgis.SelectionType
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.Datashape
    commentId: M:Virgis.Datashape.UnSelected(Virgis.SelectionType)
  Virgis.Datashape._redraw:
    name:
      CSharp:
      - id: Virgis.Datashape._redraw
        name: _redraw
        nameWithType: Datashape._redraw
        qualifiedName: Virgis.Datashape._redraw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.Datashape._redraw
        name: _redraw
        nameWithType: Datashape._redraw
        qualifiedName: Virgis.Datashape._redraw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.Datashape
    commentId: M:Virgis.Datashape._redraw
  Virgis.Datashape.AddVertex(Vector3):
    name:
      CSharp:
      - id: Virgis.Datashape.AddVertex(Vector3)
        name: AddVertex
        nameWithType: Datashape.AddVertex
        qualifiedName: Virgis.Datashape.AddVertex
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.Datashape.AddVertex(Vector3)
        name: AddVertex
        nameWithType: Datashape.AddVertex
        qualifiedName: Virgis.Datashape.AddVertex
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.Datashape
    commentId: M:Virgis.Datashape.AddVertex(Vector3)
  Virgis.Datashape.RemoveVertex(Virgis.VirgisFeature):
    name:
      CSharp:
      - id: Virgis.Datashape.RemoveVertex(Virgis.VirgisFeature)
        name: RemoveVertex
        nameWithType: Datashape.RemoveVertex
        qualifiedName: Virgis.Datashape.RemoveVertex
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisFeature
        name: VirgisFeature
        nameWithType: VirgisFeature
        qualifiedName: Virgis.VirgisFeature
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.Datashape.RemoveVertex(Virgis.VirgisFeature)
        name: RemoveVertex
        nameWithType: Datashape.RemoveVertex
        qualifiedName: Virgis.Datashape.RemoveVertex
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisFeature
        name: VirgisFeature
        nameWithType: VirgisFeature
        qualifiedName: Virgis.VirgisFeature
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.Datashape
    commentId: M:Virgis.Datashape.RemoveVertex(Virgis.VirgisFeature)
  Virgis.Datashape.BuildUVs(Vector3[]):
    name:
      CSharp:
      - id: Virgis.Datashape.BuildUVs(Vector3[])
        name: BuildUVs
        nameWithType: Datashape.BuildUVs
        qualifiedName: Virgis.Datashape.BuildUVs
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.Datashape.BuildUVs(Vector3[])
        name: BuildUVs
        nameWithType: Datashape.BuildUVs
        qualifiedName: Virgis.Datashape.BuildUVs
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.Datashape
    commentId: M:Virgis.Datashape.BuildUVs(Vector3[])
  Virgis.Datashape.GetVertexes:
    name:
      CSharp:
      - id: Virgis.Datashape.GetVertexes
        name: GetVertexes
        nameWithType: Datashape.GetVertexes
        qualifiedName: Virgis.Datashape.GetVertexes
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.Datashape.GetVertexes
        name: GetVertexes
        nameWithType: Datashape.GetVertexes
        qualifiedName: Virgis.Datashape.GetVertexes
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.Datashape
    commentId: M:Virgis.Datashape.GetVertexes
  Virgis.VirgisFeature.mainMat:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.mainMat
        name: mainMat
        nameWithType: VirgisFeature.mainMat
        qualifiedName: Virgis.VirgisFeature.mainMat
      VB:
      - id: Virgis.VirgisFeature.mainMat
        name: mainMat
        nameWithType: VirgisFeature.mainMat
        qualifiedName: Virgis.VirgisFeature.mainMat
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: F:Virgis.VirgisFeature.mainMat
  Virgis.VirgisFeature.selectedMat:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.selectedMat
        name: selectedMat
        nameWithType: VirgisFeature.selectedMat
        qualifiedName: Virgis.VirgisFeature.selectedMat
      VB:
      - id: Virgis.VirgisFeature.selectedMat
        name: selectedMat
        nameWithType: VirgisFeature.selectedMat
        qualifiedName: Virgis.VirgisFeature.selectedMat
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: F:Virgis.VirgisFeature.selectedMat
  Virgis.VirgisFeature.label:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.label
        name: label
        nameWithType: VirgisFeature.label
        qualifiedName: Virgis.VirgisFeature.label
      VB:
      - id: Virgis.VirgisFeature.label
        name: label
        nameWithType: VirgisFeature.label
        qualifiedName: Virgis.VirgisFeature.label
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: F:Virgis.VirgisFeature.label
  Virgis.VirgisFeature.feature:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.feature
        name: feature
        nameWithType: VirgisFeature.feature
        qualifiedName: Virgis.VirgisFeature.feature
      VB:
      - id: Virgis.VirgisFeature.feature
        name: feature
        nameWithType: VirgisFeature.feature
        qualifiedName: Virgis.VirgisFeature.feature
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: F:Virgis.VirgisFeature.feature
  Virgis.VirgisFeature.SetMaterial(Material,Material):
    name:
      CSharp:
      - id: Virgis.VirgisFeature.SetMaterial(Material,Material)
        name: SetMaterial
        nameWithType: VirgisFeature.SetMaterial
        qualifiedName: Virgis.VirgisFeature.SetMaterial
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.SetMaterial(Material,Material)
        name: SetMaterial
        nameWithType: VirgisFeature.SetMaterial
        qualifiedName: Virgis.VirgisFeature.SetMaterial
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.SetMaterial(Material,Material)
  Virgis.VirgisFeature.GetClosest(Vector3,System.Guid[]):
    name:
      CSharp:
      - id: Virgis.VirgisFeature.GetClosest(Vector3,System.Guid[])
        name: GetClosest
        nameWithType: VirgisFeature.GetClosest
        qualifiedName: Virgis.VirgisFeature.GetClosest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.GetClosest(Vector3,System.Guid[])
        name: GetClosest
        nameWithType: VirgisFeature.GetClosest
        qualifiedName: Virgis.VirgisFeature.GetClosest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.GetClosest(Vector3,System.Guid[])
  Virgis.VirgisFeature.GetGeometry``1:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.GetGeometry``1
        name: GetGeometry<T>
        nameWithType: VirgisFeature.GetGeometry<T>
        qualifiedName: Virgis.VirgisFeature.GetGeometry<T>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.GetGeometry``1
        name: GetGeometry(Of T)
        nameWithType: VirgisFeature.GetGeometry(Of T)
        qualifiedName: Virgis.VirgisFeature.GetGeometry(Of T)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.GetGeometry``1
  Virgis.VirgisFeature.GetId:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.GetId
        name: GetId
        nameWithType: VirgisFeature.GetId
        qualifiedName: Virgis.VirgisFeature.GetId
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.GetId
        name: GetId
        nameWithType: VirgisFeature.GetId
        qualifiedName: Virgis.VirgisFeature.GetId
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.GetId
  Virgis.VirgisFeature.Equals(System.Object):
    name:
      CSharp:
      - id: Virgis.VirgisFeature.Equals(System.Object)
        name: Equals
        nameWithType: VirgisFeature.Equals
        qualifiedName: Virgis.VirgisFeature.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.Equals(System.Object)
        name: Equals
        nameWithType: VirgisFeature.Equals
        qualifiedName: Virgis.VirgisFeature.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.Equals(System.Object)
  Virgis.VirgisFeature.GetHashCode:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.GetHashCode
        name: GetHashCode
        nameWithType: VirgisFeature.GetHashCode
        qualifiedName: Virgis.VirgisFeature.GetHashCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.GetHashCode
        name: GetHashCode
        nameWithType: VirgisFeature.GetHashCode
        qualifiedName: Virgis.VirgisFeature.GetHashCode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.GetHashCode
  Virgis.VirgisFeature.Equals(Virgis.VirgisFeature):
    name:
      CSharp:
      - id: Virgis.VirgisFeature.Equals(Virgis.VirgisFeature)
        name: Equals
        nameWithType: VirgisFeature.Equals
        qualifiedName: Virgis.VirgisFeature.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisFeature
        name: VirgisFeature
        nameWithType: VirgisFeature
        qualifiedName: Virgis.VirgisFeature
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.Equals(Virgis.VirgisFeature)
        name: Equals
        nameWithType: VirgisFeature.Equals
        qualifiedName: Virgis.VirgisFeature.Equals
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisFeature
        name: VirgisFeature
        nameWithType: VirgisFeature
        qualifiedName: Virgis.VirgisFeature
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.Equals(Virgis.VirgisFeature)
  Virgis.VirgisFeature.Hover:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.Hover
        name: Hover
        nameWithType: VirgisFeature.Hover
        qualifiedName: Virgis.VirgisFeature.Hover
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.Hover
        name: Hover
        nameWithType: VirgisFeature.Hover
        qualifiedName: Virgis.VirgisFeature.Hover
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.Hover
  Virgis.VirgisFeature.UnHover:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.UnHover
        name: UnHover
        nameWithType: VirgisFeature.UnHover
        qualifiedName: Virgis.VirgisFeature.UnHover
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.UnHover
        name: UnHover
        nameWithType: VirgisFeature.UnHover
        qualifiedName: Virgis.VirgisFeature.UnHover
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.UnHover
  Virgis.VirgisFeature.GetLayer:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.GetLayer
        name: GetLayer
        nameWithType: VirgisFeature.GetLayer
        qualifiedName: Virgis.VirgisFeature.GetLayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.GetLayer
        name: GetLayer
        nameWithType: VirgisFeature.GetLayer
        qualifiedName: Virgis.VirgisFeature.GetLayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.GetLayer
  Virgis.IVirgisFeature:
    name:
      CSharp:
      - id: Virgis.IVirgisFeature
        name: IVirgisFeature
        nameWithType: IVirgisFeature
        qualifiedName: Virgis.IVirgisFeature
      VB:
      - id: Virgis.IVirgisFeature
        name: IVirgisFeature
        nameWithType: IVirgisFeature
        qualifiedName: Virgis.IVirgisFeature
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.IVirgisFeature
  Virgis.VirgisFeature.VertexMove(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisFeature.VertexMove(Virgis.MoveArgs)
        name: VertexMove
        nameWithType: VirgisFeature.VertexMove
        qualifiedName: Virgis.VirgisFeature.VertexMove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.VertexMove(Virgis.MoveArgs)
        name: VertexMove
        nameWithType: VirgisFeature.VertexMove
        qualifiedName: Virgis.VirgisFeature.VertexMove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.VertexMove(Virgis.MoveArgs)
  Virgis.Datapolygon.VertexMove*:
    name:
      CSharp:
      - id: Virgis.Datapolygon.VertexMove*
        name: VertexMove
        nameWithType: Datapolygon.VertexMove
        qualifiedName: Virgis.Datapolygon.VertexMove
      VB:
      - id: Virgis.Datapolygon.VertexMove*
        name: VertexMove
        nameWithType: Datapolygon.VertexMove
        qualifiedName: Virgis.Datapolygon.VertexMove
    isDefinition: true
    commentId: Overload:Virgis.Datapolygon.VertexMove
  Virgis.VirgisFeature.Translate(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisFeature.Translate(Virgis.MoveArgs)
        name: Translate
        nameWithType: VirgisFeature.Translate
        qualifiedName: Virgis.VirgisFeature.Translate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.Translate(Virgis.MoveArgs)
        name: Translate
        nameWithType: VirgisFeature.Translate
        qualifiedName: Virgis.VirgisFeature.Translate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.Translate(Virgis.MoveArgs)
  Virgis.Datapolygon.Translate*:
    name:
      CSharp:
      - id: Virgis.Datapolygon.Translate*
        name: Translate
        nameWithType: Datapolygon.Translate
        qualifiedName: Virgis.Datapolygon.Translate
      VB:
      - id: Virgis.Datapolygon.Translate*
        name: Translate
        nameWithType: Datapolygon.Translate
        qualifiedName: Virgis.Datapolygon.Translate
    isDefinition: true
    commentId: Overload:Virgis.Datapolygon.Translate
  Virgis.VirgisFeature.MoveAxis(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisFeature.MoveAxis(Virgis.MoveArgs)
        name: MoveAxis
        nameWithType: VirgisFeature.MoveAxis
        qualifiedName: Virgis.VirgisFeature.MoveAxis
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.MoveAxis(Virgis.MoveArgs)
        name: MoveAxis
        nameWithType: VirgisFeature.MoveAxis
        qualifiedName: Virgis.VirgisFeature.MoveAxis
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.MoveAxis(Virgis.MoveArgs)
  Virgis.Datapolygon.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.Datapolygon.MoveAxis*
        name: MoveAxis
        nameWithType: Datapolygon.MoveAxis
        qualifiedName: Virgis.Datapolygon.MoveAxis
      VB:
      - id: Virgis.Datapolygon.MoveAxis*
        name: MoveAxis
        nameWithType: Datapolygon.MoveAxis
        qualifiedName: Virgis.Datapolygon.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.Datapolygon.MoveAxis
  Virgis.Datashape.MoveTo(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.Datashape.MoveTo(Virgis.MoveArgs)
        name: MoveTo
        nameWithType: Datashape.MoveTo
        qualifiedName: Virgis.Datashape.MoveTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.Datashape.MoveTo(Virgis.MoveArgs)
        name: MoveTo
        nameWithType: Datashape.MoveTo
        qualifiedName: Virgis.Datashape.MoveTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.Datashape
    commentId: M:Virgis.Datashape.MoveTo(Virgis.MoveArgs)
  Virgis.Datapolygon.MoveTo*:
    name:
      CSharp:
      - id: Virgis.Datapolygon.MoveTo*
        name: MoveTo
        nameWithType: Datapolygon.MoveTo
        qualifiedName: Virgis.Datapolygon.MoveTo
      VB:
      - id: Virgis.Datapolygon.MoveTo*
        name: MoveTo
        nameWithType: Datapolygon.MoveTo
        qualifiedName: Virgis.Datapolygon.MoveTo
    isDefinition: true
    commentId: Overload:Virgis.Datapolygon.MoveTo
  System.Collections.Generic.List{Virgis.Dataline}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Virgis.Dataline
        name: Dataline
        nameWithType: Dataline
        qualifiedName: Virgis.Dataline
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Virgis.Dataline
        name: Dataline
        nameWithType: Dataline
        qualifiedName: Virgis.Dataline
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Virgis.Dataline}
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  Virgis.Datapolygon.Draw*:
    name:
      CSharp:
      - id: Virgis.Datapolygon.Draw*
        name: Draw
        nameWithType: Datapolygon.Draw
        qualifiedName: Virgis.Datapolygon.Draw
      VB:
      - id: Virgis.Datapolygon.Draw*
        name: Draw
        nameWithType: Datapolygon.Draw
        qualifiedName: Virgis.Datapolygon.Draw
    isDefinition: true
    commentId: Overload:Virgis.Datapolygon.Draw
  Virgis.Datapolygon.ShapeMoveVertex*:
    name:
      CSharp:
      - id: Virgis.Datapolygon.ShapeMoveVertex*
        name: ShapeMoveVertex
        nameWithType: Datapolygon.ShapeMoveVertex
        qualifiedName: Virgis.Datapolygon.ShapeMoveVertex
      VB:
      - id: Virgis.Datapolygon.ShapeMoveVertex*
        name: ShapeMoveVertex
        nameWithType: Datapolygon.ShapeMoveVertex
        qualifiedName: Virgis.Datapolygon.ShapeMoveVertex
    isDefinition: true
    commentId: Overload:Virgis.Datapolygon.ShapeMoveVertex
  System.Collections.Generic.Dictionary`2:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.Dictionary`2
  System.Collections.Generic.Dictionary{System.String,System.Object}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  Virgis.Datashape.GetMetadata:
    name:
      CSharp:
      - id: Virgis.Datashape.GetMetadata
        name: GetMetadata
        nameWithType: Datashape.GetMetadata
        qualifiedName: Virgis.Datashape.GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.Datashape.GetMetadata
        name: GetMetadata
        nameWithType: Datashape.GetMetadata
        qualifiedName: Virgis.Datashape.GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.Datashape
    commentId: M:Virgis.Datashape.GetMetadata
  Virgis.Datapolygon.GetMetadata*:
    name:
      CSharp:
      - id: Virgis.Datapolygon.GetMetadata*
        name: GetMetadata
        nameWithType: Datapolygon.GetMetadata
        qualifiedName: Virgis.Datapolygon.GetMetadata
      VB:
      - id: Virgis.Datapolygon.GetMetadata*
        name: GetMetadata
        nameWithType: Datapolygon.GetMetadata
        qualifiedName: Virgis.Datapolygon.GetMetadata
    isDefinition: true
    commentId: Overload:Virgis.Datapolygon.GetMetadata
  Virgis.Datashape.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object}):
    name:
      CSharp:
      - id: Virgis.Datashape.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
        name: SetMetadata
        nameWithType: Datashape.SetMetadata
        qualifiedName: Virgis.Datashape.SetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.Datashape.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
        name: SetMetadata
        nameWithType: Datashape.SetMetadata
        qualifiedName: Virgis.Datashape.SetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.Datashape
    commentId: M:Virgis.Datashape.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
  Virgis.Datapolygon.SetMetadata*:
    name:
      CSharp:
      - id: Virgis.Datapolygon.SetMetadata*
        name: SetMetadata
        nameWithType: Datapolygon.SetMetadata
        qualifiedName: Virgis.Datapolygon.SetMetadata
      VB:
      - id: Virgis.Datapolygon.SetMetadata*
        name: SetMetadata
        nameWithType: Datapolygon.SetMetadata
        qualifiedName: Virgis.Datapolygon.SetMetadata
    isDefinition: true
    commentId: Overload:Virgis.Datapolygon.SetMetadata
  Virgis.Datapolygon:
    name:
      CSharp:
      - id: Virgis.Datapolygon
        name: Datapolygon
        nameWithType: Datapolygon
        qualifiedName: Virgis.Datapolygon
      VB:
      - id: Virgis.Datapolygon
        name: Datapolygon
        nameWithType: Datapolygon
        qualifiedName: Virgis.Datapolygon
    isDefinition: true
    commentId: T:Virgis.Datapolygon
  System.Collections.Generic.List{Virgis.VertexLookup}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Virgis.VertexLookup
        name: VertexLookup
        nameWithType: VertexLookup
        qualifiedName: Virgis.VertexLookup
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Virgis.VertexLookup
        name: VertexLookup
        nameWithType: VertexLookup
        qualifiedName: Virgis.VertexLookup
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Virgis.VertexLookup}
  System.Collections.Generic.List{DCurve3}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: DCurve3
        name: DCurve3
        nameWithType: DCurve3
        qualifiedName: DCurve3
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: DCurve3
        name: DCurve3
        nameWithType: DCurve3
        qualifiedName: DCurve3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{DCurve3}
  Virgis.SelectionType:
    name:
      CSharp:
      - id: Virgis.SelectionType
        name: SelectionType
        nameWithType: SelectionType
        qualifiedName: Virgis.SelectionType
      VB:
      - id: Virgis.SelectionType
        name: SelectionType
        nameWithType: SelectionType
        qualifiedName: Virgis.SelectionType
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.SelectionType
  Virgis.VirgisFeature.Selected(Virgis.SelectionType):
    name:
      CSharp:
      - id: Virgis.VirgisFeature.Selected(Virgis.SelectionType)
        name: Selected
        nameWithType: VirgisFeature.Selected
        qualifiedName: Virgis.VirgisFeature.Selected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionType
        name: SelectionType
        nameWithType: SelectionType
        qualifiedName: Virgis.SelectionType
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.Selected(Virgis.SelectionType)
        name: Selected
        nameWithType: VirgisFeature.Selected
        qualifiedName: Virgis.VirgisFeature.Selected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionType
        name: SelectionType
        nameWithType: SelectionType
        qualifiedName: Virgis.SelectionType
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.Selected(Virgis.SelectionType)
  Virgis.Datashape.Selected*:
    name:
      CSharp:
      - id: Virgis.Datashape.Selected*
        name: Selected
        nameWithType: Datashape.Selected
        qualifiedName: Virgis.Datashape.Selected
      VB:
      - id: Virgis.Datashape.Selected*
        name: Selected
        nameWithType: Datashape.Selected
        qualifiedName: Virgis.Datashape.Selected
    isDefinition: true
    commentId: Overload:Virgis.Datashape.Selected
  Virgis.VirgisFeature.UnSelected(Virgis.SelectionType):
    name:
      CSharp:
      - id: Virgis.VirgisFeature.UnSelected(Virgis.SelectionType)
        name: UnSelected
        nameWithType: VirgisFeature.UnSelected
        qualifiedName: Virgis.VirgisFeature.UnSelected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionType
        name: SelectionType
        nameWithType: SelectionType
        qualifiedName: Virgis.SelectionType
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.UnSelected(Virgis.SelectionType)
        name: UnSelected
        nameWithType: VirgisFeature.UnSelected
        qualifiedName: Virgis.VirgisFeature.UnSelected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionType
        name: SelectionType
        nameWithType: SelectionType
        qualifiedName: Virgis.SelectionType
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.UnSelected(Virgis.SelectionType)
  Virgis.Datashape.UnSelected*:
    name:
      CSharp:
      - id: Virgis.Datashape.UnSelected*
        name: UnSelected
        nameWithType: Datashape.UnSelected
        qualifiedName: Virgis.Datashape.UnSelected
      VB:
      - id: Virgis.Datashape.UnSelected*
        name: UnSelected
        nameWithType: Datashape.UnSelected
        qualifiedName: Virgis.Datashape.UnSelected
    isDefinition: true
    commentId: Overload:Virgis.Datashape.UnSelected
  Virgis.VirgisFeature.MoveTo(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.VirgisFeature.MoveTo(Virgis.MoveArgs)
        name: MoveTo
        nameWithType: VirgisFeature.MoveTo
        qualifiedName: Virgis.VirgisFeature.MoveTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.MoveTo(Virgis.MoveArgs)
        name: MoveTo
        nameWithType: VirgisFeature.MoveTo
        qualifiedName: Virgis.VirgisFeature.MoveTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.MoveTo(Virgis.MoveArgs)
  Virgis.Datashape.MoveTo*:
    name:
      CSharp:
      - id: Virgis.Datashape.MoveTo*
        name: MoveTo
        nameWithType: Datashape.MoveTo
        qualifiedName: Virgis.Datashape.MoveTo
      VB:
      - id: Virgis.Datashape.MoveTo*
        name: MoveTo
        nameWithType: Datashape.MoveTo
        qualifiedName: Virgis.Datashape.MoveTo
    isDefinition: true
    commentId: Overload:Virgis.Datashape.MoveTo
  Virgis.Datashape._redraw*:
    name:
      CSharp:
      - id: Virgis.Datashape._redraw*
        name: _redraw
        nameWithType: Datashape._redraw
        qualifiedName: Virgis.Datashape._redraw
      VB:
      - id: Virgis.Datashape._redraw*
        name: _redraw
        nameWithType: Datashape._redraw
        qualifiedName: Virgis.Datashape._redraw
    isDefinition: true
    commentId: Overload:Virgis.Datashape._redraw
  Virgis.VirgisFeature.AddVertex(Vector3):
    name:
      CSharp:
      - id: Virgis.VirgisFeature.AddVertex(Vector3)
        name: AddVertex
        nameWithType: VirgisFeature.AddVertex
        qualifiedName: Virgis.VirgisFeature.AddVertex
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.AddVertex(Vector3)
        name: AddVertex
        nameWithType: VirgisFeature.AddVertex
        qualifiedName: Virgis.VirgisFeature.AddVertex
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.AddVertex(Vector3)
  Virgis.Datashape.AddVertex*:
    name:
      CSharp:
      - id: Virgis.Datashape.AddVertex*
        name: AddVertex
        nameWithType: Datashape.AddVertex
        qualifiedName: Virgis.Datashape.AddVertex
      VB:
      - id: Virgis.Datashape.AddVertex*
        name: AddVertex
        nameWithType: Datashape.AddVertex
        qualifiedName: Virgis.Datashape.AddVertex
    isDefinition: true
    commentId: Overload:Virgis.Datashape.AddVertex
  Virgis.VirgisFeature.RemoveVertex(Virgis.VirgisFeature):
    name:
      CSharp:
      - id: Virgis.VirgisFeature.RemoveVertex(Virgis.VirgisFeature)
        name: RemoveVertex
        nameWithType: VirgisFeature.RemoveVertex
        qualifiedName: Virgis.VirgisFeature.RemoveVertex
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisFeature
        name: VirgisFeature
        nameWithType: VirgisFeature
        qualifiedName: Virgis.VirgisFeature
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.RemoveVertex(Virgis.VirgisFeature)
        name: RemoveVertex
        nameWithType: VirgisFeature.RemoveVertex
        qualifiedName: Virgis.VirgisFeature.RemoveVertex
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisFeature
        name: VirgisFeature
        nameWithType: VirgisFeature
        qualifiedName: Virgis.VirgisFeature
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.RemoveVertex(Virgis.VirgisFeature)
  Virgis.Datashape.RemoveVertex*:
    name:
      CSharp:
      - id: Virgis.Datashape.RemoveVertex*
        name: RemoveVertex
        nameWithType: Datashape.RemoveVertex
        qualifiedName: Virgis.Datashape.RemoveVertex
      VB:
      - id: Virgis.Datashape.RemoveVertex*
        name: RemoveVertex
        nameWithType: Datashape.RemoveVertex
        qualifiedName: Virgis.Datashape.RemoveVertex
    isDefinition: true
    commentId: Overload:Virgis.Datashape.RemoveVertex
  Vector2[]:
    name:
      CSharp:
      - id: Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Virgis.Datashape.BuildUVs*:
    name:
      CSharp:
      - id: Virgis.Datashape.BuildUVs*
        name: BuildUVs
        nameWithType: Datashape.BuildUVs
        qualifiedName: Virgis.Datashape.BuildUVs
      VB:
      - id: Virgis.Datashape.BuildUVs*
        name: BuildUVs
        nameWithType: Datashape.BuildUVs
        qualifiedName: Virgis.Datashape.BuildUVs
    isDefinition: true
    commentId: Overload:Virgis.Datashape.BuildUVs
  Virgis.Datapoint[]:
    name:
      CSharp:
      - id: Virgis.Datapoint
        name: Datapoint
        nameWithType: Datapoint
        qualifiedName: Virgis.Datapoint
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Virgis.Datapoint
        name: Datapoint
        nameWithType: Datapoint
        qualifiedName: Virgis.Datapoint
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Virgis.Datashape.GetVertexes*:
    name:
      CSharp:
      - id: Virgis.Datashape.GetVertexes*
        name: GetVertexes
        nameWithType: Datashape.GetVertexes
        qualifiedName: Virgis.Datashape.GetVertexes
      VB:
      - id: Virgis.Datashape.GetVertexes*
        name: GetVertexes
        nameWithType: Datashape.GetVertexes
        qualifiedName: Virgis.Datashape.GetVertexes
    isDefinition: true
    commentId: Overload:Virgis.Datashape.GetVertexes
  Virgis.VirgisFeature.GetMetadata:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.GetMetadata
        name: GetMetadata
        nameWithType: VirgisFeature.GetMetadata
        qualifiedName: Virgis.VirgisFeature.GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.GetMetadata
        name: GetMetadata
        nameWithType: VirgisFeature.GetMetadata
        qualifiedName: Virgis.VirgisFeature.GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.GetMetadata
  Virgis.Datashape.GetMetadata*:
    name:
      CSharp:
      - id: Virgis.Datashape.GetMetadata*
        name: GetMetadata
        nameWithType: Datashape.GetMetadata
        qualifiedName: Virgis.Datashape.GetMetadata
      VB:
      - id: Virgis.Datashape.GetMetadata*
        name: GetMetadata
        nameWithType: Datashape.GetMetadata
        qualifiedName: Virgis.Datashape.GetMetadata
    isDefinition: true
    commentId: Overload:Virgis.Datashape.GetMetadata
  Virgis.VirgisFeature.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object}):
    name:
      CSharp:
      - id: Virgis.VirgisFeature.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
        name: SetMetadata
        nameWithType: VirgisFeature.SetMetadata
        qualifiedName: Virgis.VirgisFeature.SetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.VirgisFeature.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
        name: SetMetadata
        nameWithType: VirgisFeature.SetMetadata
        qualifiedName: Virgis.VirgisFeature.SetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.VirgisFeature
    commentId: M:Virgis.VirgisFeature.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
  Virgis.Datashape.SetMetadata*:
    name:
      CSharp:
      - id: Virgis.Datashape.SetMetadata*
        name: SetMetadata
        nameWithType: Datashape.SetMetadata
        qualifiedName: Virgis.Datashape.SetMetadata
      VB:
      - id: Virgis.Datashape.SetMetadata*
        name: SetMetadata
        nameWithType: Datashape.SetMetadata
        qualifiedName: Virgis.Datashape.SetMetadata
    isDefinition: true
    commentId: Overload:Virgis.Datashape.SetMetadata
  Virgis.Datapoint.Selected*:
    name:
      CSharp:
      - id: Virgis.Datapoint.Selected*
        name: Selected
        nameWithType: Datapoint.Selected
        qualifiedName: Virgis.Datapoint.Selected
      VB:
      - id: Virgis.Datapoint.Selected*
        name: Selected
        nameWithType: Datapoint.Selected
        qualifiedName: Virgis.Datapoint.Selected
    isDefinition: true
    commentId: Overload:Virgis.Datapoint.Selected
  Virgis.Datapoint.UnSelected*:
    name:
      CSharp:
      - id: Virgis.Datapoint.UnSelected*
        name: UnSelected
        nameWithType: Datapoint.UnSelected
        qualifiedName: Virgis.Datapoint.UnSelected
      VB:
      - id: Virgis.Datapoint.UnSelected*
        name: UnSelected
        nameWithType: Datapoint.UnSelected
        qualifiedName: Virgis.Datapoint.UnSelected
    isDefinition: true
    commentId: Overload:Virgis.Datapoint.UnSelected
  Virgis.Datapoint.SetMaterial*:
    name:
      CSharp:
      - id: Virgis.Datapoint.SetMaterial*
        name: SetMaterial
        nameWithType: Datapoint.SetMaterial
        qualifiedName: Virgis.Datapoint.SetMaterial
      VB:
      - id: Virgis.Datapoint.SetMaterial*
        name: SetMaterial
        nameWithType: Datapoint.SetMaterial
        qualifiedName: Virgis.Datapoint.SetMaterial
    isDefinition: true
    commentId: Overload:Virgis.Datapoint.SetMaterial
  Virgis.Datapoint.MoveTo*:
    name:
      CSharp:
      - id: Virgis.Datapoint.MoveTo*
        name: MoveTo
        nameWithType: Datapoint.MoveTo
        qualifiedName: Virgis.Datapoint.MoveTo
      VB:
      - id: Virgis.Datapoint.MoveTo*
        name: MoveTo
        nameWithType: Datapoint.MoveTo
        qualifiedName: Virgis.Datapoint.MoveTo
    isDefinition: true
    commentId: Overload:Virgis.Datapoint.MoveTo
  Virgis.Datapoint.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.Datapoint.MoveAxis*
        name: MoveAxis
        nameWithType: Datapoint.MoveAxis
        qualifiedName: Virgis.Datapoint.MoveAxis
      VB:
      - id: Virgis.Datapoint.MoveAxis*
        name: MoveAxis
        nameWithType: Datapoint.MoveAxis
        qualifiedName: Virgis.Datapoint.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.Datapoint.MoveAxis
  System.Guid[]:
    name:
      CSharp:
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Virgis.Datapoint.GetClosest*:
    name:
      CSharp:
      - id: Virgis.Datapoint.GetClosest*
        name: GetClosest
        nameWithType: Datapoint.GetClosest
        qualifiedName: Virgis.Datapoint.GetClosest
      VB:
      - id: Virgis.Datapoint.GetClosest*
        name: GetClosest
        nameWithType: Datapoint.GetClosest
        qualifiedName: Virgis.Datapoint.GetClosest
    isDefinition: true
    commentId: Overload:Virgis.Datapoint.GetClosest
  Virgis.Datapoint.Delete*:
    name:
      CSharp:
      - id: Virgis.Datapoint.Delete*
        name: Delete
        nameWithType: Datapoint.Delete
        qualifiedName: Virgis.Datapoint.Delete
      VB:
      - id: Virgis.Datapoint.Delete*
        name: Delete
        nameWithType: Datapoint.Delete
        qualifiedName: Virgis.Datapoint.Delete
    isDefinition: true
    commentId: Overload:Virgis.Datapoint.Delete
  Virgis.Datapoint.GetMetadata*:
    name:
      CSharp:
      - id: Virgis.Datapoint.GetMetadata*
        name: GetMetadata
        nameWithType: Datapoint.GetMetadata
        qualifiedName: Virgis.Datapoint.GetMetadata
      VB:
      - id: Virgis.Datapoint.GetMetadata*
        name: GetMetadata
        nameWithType: Datapoint.GetMetadata
        qualifiedName: Virgis.Datapoint.GetMetadata
    isDefinition: true
    commentId: Overload:Virgis.Datapoint.GetMetadata
  Virgis.Datapoint.SetMetadata*:
    name:
      CSharp:
      - id: Virgis.Datapoint.SetMetadata*
        name: SetMetadata
        nameWithType: Datapoint.SetMetadata
        qualifiedName: Virgis.Datapoint.SetMetadata
      VB:
      - id: Virgis.Datapoint.SetMetadata*
        name: SetMetadata
        nameWithType: Datapoint.SetMetadata
        qualifiedName: Virgis.Datapoint.SetMetadata
    isDefinition: true
    commentId: Overload:Virgis.Datapoint.SetMetadata
  Virgis.Datapoint:
    name:
      CSharp:
      - id: Virgis.Datapoint
        name: Datapoint
        nameWithType: Datapoint
        qualifiedName: Virgis.Datapoint
      VB:
      - id: Virgis.Datapoint
        name: Datapoint
        nameWithType: Datapoint
        qualifiedName: Virgis.Datapoint
    isDefinition: true
    commentId: T:Virgis.Datapoint
  Virgis.Dataplane.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.Dataplane.MoveAxis*
        name: MoveAxis
        nameWithType: Dataplane.MoveAxis
        qualifiedName: Virgis.Dataplane.MoveAxis
      VB:
      - id: Virgis.Dataplane.MoveAxis*
        name: MoveAxis
        nameWithType: Dataplane.MoveAxis
        qualifiedName: Virgis.Dataplane.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.Dataplane.MoveAxis
  Virgis.Dataplane.MoveTo*:
    name:
      CSharp:
      - id: Virgis.Dataplane.MoveTo*
        name: MoveTo
        nameWithType: Dataplane.MoveTo
        qualifiedName: Virgis.Dataplane.MoveTo
      VB:
      - id: Virgis.Dataplane.MoveTo*
        name: MoveTo
        nameWithType: Dataplane.MoveTo
        qualifiedName: Virgis.Dataplane.MoveTo
    isDefinition: true
    commentId: Overload:Virgis.Dataplane.MoveTo
  Virgis.Dataplane.Draw*:
    name:
      CSharp:
      - id: Virgis.Dataplane.Draw*
        name: Draw
        nameWithType: Dataplane.Draw
        qualifiedName: Virgis.Dataplane.Draw
      VB:
      - id: Virgis.Dataplane.Draw*
        name: Draw
        nameWithType: Dataplane.Draw
        qualifiedName: Virgis.Dataplane.Draw
    isDefinition: true
    commentId: Overload:Virgis.Dataplane.Draw
  Virgis.Dataplane.GetMetadata*:
    name:
      CSharp:
      - id: Virgis.Dataplane.GetMetadata*
        name: GetMetadata
        nameWithType: Dataplane.GetMetadata
        qualifiedName: Virgis.Dataplane.GetMetadata
      VB:
      - id: Virgis.Dataplane.GetMetadata*
        name: GetMetadata
        nameWithType: Dataplane.GetMetadata
        qualifiedName: Virgis.Dataplane.GetMetadata
    isDefinition: true
    commentId: Overload:Virgis.Dataplane.GetMetadata
  Virgis.Dataplane.SetMetadata*:
    name:
      CSharp:
      - id: Virgis.Dataplane.SetMetadata*
        name: SetMetadata
        nameWithType: Dataplane.SetMetadata
        qualifiedName: Virgis.Dataplane.SetMetadata
      VB:
      - id: Virgis.Dataplane.SetMetadata*
        name: SetMetadata
        nameWithType: Dataplane.SetMetadata
        qualifiedName: Virgis.Dataplane.SetMetadata
    isDefinition: true
    commentId: Overload:Virgis.Dataplane.SetMetadata
  Virgis.Dataplane:
    name:
      CSharp:
      - id: Virgis.Dataplane
        name: Dataplane
        nameWithType: Dataplane
        qualifiedName: Virgis.Dataplane
      VB:
      - id: Virgis.Dataplane
        name: Dataplane
        nameWithType: Dataplane
        qualifiedName: Virgis.Dataplane
    isDefinition: true
    commentId: T:Virgis.Dataplane
  Virgis.LineSegment.Draw*:
    name:
      CSharp:
      - id: Virgis.LineSegment.Draw*
        name: Draw
        nameWithType: LineSegment.Draw
        qualifiedName: Virgis.LineSegment.Draw
      VB:
      - id: Virgis.LineSegment.Draw*
        name: Draw
        nameWithType: LineSegment.Draw
        qualifiedName: Virgis.LineSegment.Draw
    isDefinition: true
    commentId: Overload:Virgis.LineSegment.Draw
  Virgis.LineSegment.Selected*:
    name:
      CSharp:
      - id: Virgis.LineSegment.Selected*
        name: Selected
        nameWithType: LineSegment.Selected
        qualifiedName: Virgis.LineSegment.Selected
      VB:
      - id: Virgis.LineSegment.Selected*
        name: Selected
        nameWithType: LineSegment.Selected
        qualifiedName: Virgis.LineSegment.Selected
    isDefinition: true
    commentId: Overload:Virgis.LineSegment.Selected
  Virgis.LineSegment.UnSelected*:
    name:
      CSharp:
      - id: Virgis.LineSegment.UnSelected*
        name: UnSelected
        nameWithType: LineSegment.UnSelected
        qualifiedName: Virgis.LineSegment.UnSelected
      VB:
      - id: Virgis.LineSegment.UnSelected*
        name: UnSelected
        nameWithType: LineSegment.UnSelected
        qualifiedName: Virgis.LineSegment.UnSelected
    isDefinition: true
    commentId: Overload:Virgis.LineSegment.UnSelected
  Virgis.LineSegment.SetMaterial*:
    name:
      CSharp:
      - id: Virgis.LineSegment.SetMaterial*
        name: SetMaterial
        nameWithType: LineSegment.SetMaterial
        qualifiedName: Virgis.LineSegment.SetMaterial
      VB:
      - id: Virgis.LineSegment.SetMaterial*
        name: SetMaterial
        nameWithType: LineSegment.SetMaterial
        qualifiedName: Virgis.LineSegment.SetMaterial
    isDefinition: true
    commentId: Overload:Virgis.LineSegment.SetMaterial
  Virgis.LineSegment.MoveStart*:
    name:
      CSharp:
      - id: Virgis.LineSegment.MoveStart*
        name: MoveStart
        nameWithType: LineSegment.MoveStart
        qualifiedName: Virgis.LineSegment.MoveStart
      VB:
      - id: Virgis.LineSegment.MoveStart*
        name: MoveStart
        nameWithType: LineSegment.MoveStart
        qualifiedName: Virgis.LineSegment.MoveStart
    isDefinition: true
    commentId: Overload:Virgis.LineSegment.MoveStart
  Virgis.LineSegment.MoveEnd*:
    name:
      CSharp:
      - id: Virgis.LineSegment.MoveEnd*
        name: MoveEnd
        nameWithType: LineSegment.MoveEnd
        qualifiedName: Virgis.LineSegment.MoveEnd
      VB:
      - id: Virgis.LineSegment.MoveEnd*
        name: MoveEnd
        nameWithType: LineSegment.MoveEnd
        qualifiedName: Virgis.LineSegment.MoveEnd
    isDefinition: true
    commentId: Overload:Virgis.LineSegment.MoveEnd
  Virgis.LineSegment.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.LineSegment.MoveAxis*
        name: MoveAxis
        nameWithType: LineSegment.MoveAxis
        qualifiedName: Virgis.LineSegment.MoveAxis
      VB:
      - id: Virgis.LineSegment.MoveAxis*
        name: MoveAxis
        nameWithType: LineSegment.MoveAxis
        qualifiedName: Virgis.LineSegment.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.LineSegment.MoveAxis
  Virgis.LineSegment.MoveTo*:
    name:
      CSharp:
      - id: Virgis.LineSegment.MoveTo*
        name: MoveTo
        nameWithType: LineSegment.MoveTo
        qualifiedName: Virgis.LineSegment.MoveTo
      VB:
      - id: Virgis.LineSegment.MoveTo*
        name: MoveTo
        nameWithType: LineSegment.MoveTo
        qualifiedName: Virgis.LineSegment.MoveTo
    isDefinition: true
    commentId: Overload:Virgis.LineSegment.MoveTo
  Virgis.LineSegment.AddVertex*:
    name:
      CSharp:
      - id: Virgis.LineSegment.AddVertex*
        name: AddVertex
        nameWithType: LineSegment.AddVertex
        qualifiedName: Virgis.LineSegment.AddVertex
      VB:
      - id: Virgis.LineSegment.AddVertex*
        name: AddVertex
        nameWithType: LineSegment.AddVertex
        qualifiedName: Virgis.LineSegment.AddVertex
    isDefinition: true
    commentId: Overload:Virgis.LineSegment.AddVertex
  Virgis.LineSegment.Delete*:
    name:
      CSharp:
      - id: Virgis.LineSegment.Delete*
        name: Delete
        nameWithType: LineSegment.Delete
        qualifiedName: Virgis.LineSegment.Delete
      VB:
      - id: Virgis.LineSegment.Delete*
        name: Delete
        nameWithType: LineSegment.Delete
        qualifiedName: Virgis.LineSegment.Delete
    isDefinition: true
    commentId: Overload:Virgis.LineSegment.Delete
  Virgis.LineSegment.GetMetadata*:
    name:
      CSharp:
      - id: Virgis.LineSegment.GetMetadata*
        name: GetMetadata
        nameWithType: LineSegment.GetMetadata
        qualifiedName: Virgis.LineSegment.GetMetadata
      VB:
      - id: Virgis.LineSegment.GetMetadata*
        name: GetMetadata
        nameWithType: LineSegment.GetMetadata
        qualifiedName: Virgis.LineSegment.GetMetadata
    isDefinition: true
    commentId: Overload:Virgis.LineSegment.GetMetadata
  Virgis.LineSegment.SetMetadata*:
    name:
      CSharp:
      - id: Virgis.LineSegment.SetMetadata*
        name: SetMetadata
        nameWithType: LineSegment.SetMetadata
        qualifiedName: Virgis.LineSegment.SetMetadata
      VB:
      - id: Virgis.LineSegment.SetMetadata*
        name: SetMetadata
        nameWithType: LineSegment.SetMetadata
        qualifiedName: Virgis.LineSegment.SetMetadata
    isDefinition: true
    commentId: Overload:Virgis.LineSegment.SetMetadata
  Virgis.LineSegment:
    name:
      CSharp:
      - id: Virgis.LineSegment
        name: LineSegment
        nameWithType: LineSegment
        qualifiedName: Virgis.LineSegment
      VB:
      - id: Virgis.LineSegment
        name: LineSegment
        nameWithType: LineSegment
        qualifiedName: Virgis.LineSegment
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.LineSegment
  DCurve3:
    name:
      CSharp:
      - id: DCurve3
        name: DCurve3
        nameWithType: DCurve3
        qualifiedName: DCurve3
        isExternal: true
      VB:
      - id: DCurve3
        name: DCurve3
        nameWithType: DCurve3
        qualifiedName: DCurve3
        isExternal: true
    isDefinition: true
  Virgis.Dataline.VertexMove*:
    name:
      CSharp:
      - id: Virgis.Dataline.VertexMove*
        name: VertexMove
        nameWithType: Dataline.VertexMove
        qualifiedName: Virgis.Dataline.VertexMove
      VB:
      - id: Virgis.Dataline.VertexMove*
        name: VertexMove
        nameWithType: Dataline.VertexMove
        qualifiedName: Virgis.Dataline.VertexMove
    isDefinition: true
    commentId: Overload:Virgis.Dataline.VertexMove
  Virgis.Dataline.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.Dataline.MoveAxis*
        name: MoveAxis
        nameWithType: Dataline.MoveAxis
        qualifiedName: Virgis.Dataline.MoveAxis
      VB:
      - id: Virgis.Dataline.MoveAxis*
        name: MoveAxis
        nameWithType: Dataline.MoveAxis
        qualifiedName: Virgis.Dataline.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.Dataline.MoveAxis
  Virgis.Dataline.MoveAxisAction*:
    name:
      CSharp:
      - id: Virgis.Dataline.MoveAxisAction*
        name: MoveAxisAction
        nameWithType: Dataline.MoveAxisAction
        qualifiedName: Virgis.Dataline.MoveAxisAction
      VB:
      - id: Virgis.Dataline.MoveAxisAction*
        name: MoveAxisAction
        nameWithType: Dataline.MoveAxisAction
        qualifiedName: Virgis.Dataline.MoveAxisAction
    isDefinition: true
    commentId: Overload:Virgis.Dataline.MoveAxisAction
  System.Collections.Generic.Dictionary{System.String,Unit}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Unit
        name: Unit
        nameWithType: Unit
        qualifiedName: Unit
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Unit
        name: Unit
        nameWithType: Unit
        qualifiedName: Unit
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,Unit}
  Virgis.Dataline.Draw*:
    name:
      CSharp:
      - id: Virgis.Dataline.Draw*
        name: Draw
        nameWithType: Dataline.Draw
        qualifiedName: Virgis.Dataline.Draw
      VB:
      - id: Virgis.Dataline.Draw*
        name: Draw
        nameWithType: Dataline.Draw
        qualifiedName: Virgis.Dataline.Draw
    isDefinition: true
    commentId: Overload:Virgis.Dataline.Draw
  Virgis.Dataline.MakeLinearRing*:
    name:
      CSharp:
      - id: Virgis.Dataline.MakeLinearRing*
        name: MakeLinearRing
        nameWithType: Dataline.MakeLinearRing
        qualifiedName: Virgis.Dataline.MakeLinearRing
      VB:
      - id: Virgis.Dataline.MakeLinearRing*
        name: MakeLinearRing
        nameWithType: Dataline.MakeLinearRing
        qualifiedName: Virgis.Dataline.MakeLinearRing
    isDefinition: true
    commentId: Overload:Virgis.Dataline.MakeLinearRing
  Virgis.Dataline.GetVertexPositions*:
    name:
      CSharp:
      - id: Virgis.Dataline.GetVertexPositions*
        name: GetVertexPositions
        nameWithType: Dataline.GetVertexPositions
        qualifiedName: Virgis.Dataline.GetVertexPositions
      VB:
      - id: Virgis.Dataline.GetVertexPositions*
        name: GetVertexPositions
        nameWithType: Dataline.GetVertexPositions
        qualifiedName: Virgis.Dataline.GetVertexPositions
    isDefinition: true
    commentId: Overload:Virgis.Dataline.GetVertexPositions
  Virgis.Dataline.GetVertexes*:
    name:
      CSharp:
      - id: Virgis.Dataline.GetVertexes*
        name: GetVertexes
        nameWithType: Dataline.GetVertexes
        qualifiedName: Virgis.Dataline.GetVertexes
      VB:
      - id: Virgis.Dataline.GetVertexes*
        name: GetVertexes
        nameWithType: Dataline.GetVertexes
        qualifiedName: Virgis.Dataline.GetVertexes
    isDefinition: true
    commentId: Overload:Virgis.Dataline.GetVertexes
  Virgis.Dataline.Selected*:
    name:
      CSharp:
      - id: Virgis.Dataline.Selected*
        name: Selected
        nameWithType: Dataline.Selected
        qualifiedName: Virgis.Dataline.Selected
      VB:
      - id: Virgis.Dataline.Selected*
        name: Selected
        nameWithType: Dataline.Selected
        qualifiedName: Virgis.Dataline.Selected
    isDefinition: true
    commentId: Overload:Virgis.Dataline.Selected
  Virgis.Dataline.UnSelected*:
    name:
      CSharp:
      - id: Virgis.Dataline.UnSelected*
        name: UnSelected
        nameWithType: Dataline.UnSelected
        qualifiedName: Virgis.Dataline.UnSelected
      VB:
      - id: Virgis.Dataline.UnSelected*
        name: UnSelected
        nameWithType: Dataline.UnSelected
        qualifiedName: Virgis.Dataline.UnSelected
    isDefinition: true
    commentId: Overload:Virgis.Dataline.UnSelected
  Virgis.Dataline.Translate*:
    name:
      CSharp:
      - id: Virgis.Dataline.Translate*
        name: Translate
        nameWithType: Dataline.Translate
        qualifiedName: Virgis.Dataline.Translate
      VB:
      - id: Virgis.Dataline.Translate*
        name: Translate
        nameWithType: Dataline.Translate
        qualifiedName: Virgis.Dataline.Translate
    isDefinition: true
    commentId: Overload:Virgis.Dataline.Translate
  Virgis.Dataline.MoveTo*:
    name:
      CSharp:
      - id: Virgis.Dataline.MoveTo*
        name: MoveTo
        nameWithType: Dataline.MoveTo
        qualifiedName: Virgis.Dataline.MoveTo
      VB:
      - id: Virgis.Dataline.MoveTo*
        name: MoveTo
        nameWithType: Dataline.MoveTo
        qualifiedName: Virgis.Dataline.MoveTo
    isDefinition: true
    commentId: Overload:Virgis.Dataline.MoveTo
  Virgis.Dataline.AddVertex*:
    name:
      CSharp:
      - id: Virgis.Dataline.AddVertex*
        name: AddVertex
        nameWithType: Dataline.AddVertex
        qualifiedName: Virgis.Dataline.AddVertex
      VB:
      - id: Virgis.Dataline.AddVertex*
        name: AddVertex
        nameWithType: Dataline.AddVertex
        qualifiedName: Virgis.Dataline.AddVertex
    isDefinition: true
    commentId: Overload:Virgis.Dataline.AddVertex
  Virgis.Dataline.RemoveVertex*:
    name:
      CSharp:
      - id: Virgis.Dataline.RemoveVertex*
        name: RemoveVertex
        nameWithType: Dataline.RemoveVertex
        qualifiedName: Virgis.Dataline.RemoveVertex
      VB:
      - id: Virgis.Dataline.RemoveVertex*
        name: RemoveVertex
        nameWithType: Dataline.RemoveVertex
        qualifiedName: Virgis.Dataline.RemoveVertex
    isDefinition: true
    commentId: Overload:Virgis.Dataline.RemoveVertex
  Virgis.Dataline.GetMetadata*:
    name:
      CSharp:
      - id: Virgis.Dataline.GetMetadata*
        name: GetMetadata
        nameWithType: Dataline.GetMetadata
        qualifiedName: Virgis.Dataline.GetMetadata
      VB:
      - id: Virgis.Dataline.GetMetadata*
        name: GetMetadata
        nameWithType: Dataline.GetMetadata
        qualifiedName: Virgis.Dataline.GetMetadata
    isDefinition: true
    commentId: Overload:Virgis.Dataline.GetMetadata
  Virgis.Dataline.SetMetadata*:
    name:
      CSharp:
      - id: Virgis.Dataline.SetMetadata*
        name: SetMetadata
        nameWithType: Dataline.SetMetadata
        qualifiedName: Virgis.Dataline.SetMetadata
      VB:
      - id: Virgis.Dataline.SetMetadata*
        name: SetMetadata
        nameWithType: Dataline.SetMetadata
        qualifiedName: Virgis.Dataline.SetMetadata
    isDefinition: true
    commentId: Overload:Virgis.Dataline.SetMetadata
  Virgis.Dataline:
    name:
      CSharp:
      - id: Virgis.Dataline
        name: Dataline
        nameWithType: Dataline
        qualifiedName: Virgis.Dataline
      VB:
      - id: Virgis.Dataline
        name: Dataline
        nameWithType: Dataline
        qualifiedName: Virgis.Dataline
    isDefinition: true
    commentId: T:Virgis.Dataline
  Virgis.ProjectChange.Set*:
    name:
      CSharp:
      - id: Virgis.ProjectChange.Set*
        name: Set
        nameWithType: ProjectChange.Set
        qualifiedName: Virgis.ProjectChange.Set
      VB:
      - id: Virgis.ProjectChange.Set*
        name: Set
        nameWithType: ProjectChange.Set
        qualifiedName: Virgis.ProjectChange.Set
    isDefinition: true
    commentId: Overload:Virgis.ProjectChange.Set
  Virgis.ProjectChange.Complete*:
    name:
      CSharp:
      - id: Virgis.ProjectChange.Complete*
        name: Complete
        nameWithType: ProjectChange.Complete
        qualifiedName: Virgis.ProjectChange.Complete
      VB:
      - id: Virgis.ProjectChange.Complete*
        name: Complete
        nameWithType: ProjectChange.Complete
        qualifiedName: Virgis.ProjectChange.Complete
    isDefinition: true
    commentId: Overload:Virgis.ProjectChange.Complete
  Virgis.ProjectChange.Get*:
    name:
      CSharp:
      - id: Virgis.ProjectChange.Get*
        name: Get
        nameWithType: ProjectChange.Get
        qualifiedName: Virgis.ProjectChange.Get
      VB:
      - id: Virgis.ProjectChange.Get*
        name: Get
        nameWithType: ProjectChange.Get
        qualifiedName: Virgis.ProjectChange.Get
    isDefinition: true
    commentId: Overload:Virgis.ProjectChange.Get
  System.IObservable`1:
    name:
      CSharp:
      - id: System.IObservable`1
        name: IObservable
        nameWithType: IObservable
        qualifiedName: System.IObservable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.IObservable`1
        name: IObservable
        nameWithType: IObservable
        qualifiedName: System.IObservable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.IObservable`1
  System.IObservable{GisProject}:
    name:
      CSharp:
      - id: System.IObservable`1
        name: IObservable
        nameWithType: IObservable
        qualifiedName: System.IObservable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GisProject
        name: GisProject
        nameWithType: GisProject
        qualifiedName: GisProject
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.IObservable`1
        name: IObservable
        nameWithType: IObservable
        qualifiedName: System.IObservable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GisProject
        name: GisProject
        nameWithType: GisProject
        qualifiedName: GisProject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.IObservable`1
    parent: System
    commentId: T:System.IObservable{GisProject}
  Virgis.ProjectChange.Event*:
    name:
      CSharp:
      - id: Virgis.ProjectChange.Event*
        name: Event
        nameWithType: ProjectChange.Event
        qualifiedName: Virgis.ProjectChange.Event
      VB:
      - id: Virgis.ProjectChange.Event*
        name: Event
        nameWithType: ProjectChange.Event
        qualifiedName: Virgis.ProjectChange.Event
    isDefinition: true
    commentId: Overload:Virgis.ProjectChange.Event
  System.IObservable{System.Single}:
    name:
      CSharp:
      - id: System.IObservable`1
        name: IObservable
        nameWithType: IObservable
        qualifiedName: System.IObservable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.IObservable`1
        name: IObservable
        nameWithType: IObservable
        qualifiedName: System.IObservable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.IObservable`1
    parent: System
    commentId: T:System.IObservable{System.Single}
  Virgis.ZoomEvent.Event*:
    name:
      CSharp:
      - id: Virgis.ZoomEvent.Event*
        name: Event
        nameWithType: ZoomEvent.Event
        qualifiedName: Virgis.ZoomEvent.Event
      VB:
      - id: Virgis.ZoomEvent.Event*
        name: Event
        nameWithType: ZoomEvent.Event
        qualifiedName: Virgis.ZoomEvent.Event
    isDefinition: true
    commentId: Overload:Virgis.ZoomEvent.Event
  Virgis.ZoomEvent.Set*:
    name:
      CSharp:
      - id: Virgis.ZoomEvent.Set*
        name: Set
        nameWithType: ZoomEvent.Set
        qualifiedName: Virgis.ZoomEvent.Set
      VB:
      - id: Virgis.ZoomEvent.Set*
        name: Set
        nameWithType: ZoomEvent.Set
        qualifiedName: Virgis.ZoomEvent.Set
    isDefinition: true
    commentId: Overload:Virgis.ZoomEvent.Set
  Virgis.ZoomEvent.Get*:
    name:
      CSharp:
      - id: Virgis.ZoomEvent.Get*
        name: Get
        nameWithType: ZoomEvent.Get
        qualifiedName: Virgis.ZoomEvent.Get
      VB:
      - id: Virgis.ZoomEvent.Get*
        name: Get
        nameWithType: ZoomEvent.Get
        qualifiedName: Virgis.ZoomEvent.Get
    isDefinition: true
    commentId: Overload:Virgis.ZoomEvent.Get
  Virgis.OrientEvent.Set*:
    name:
      CSharp:
      - id: Virgis.OrientEvent.Set*
        name: Set
        nameWithType: OrientEvent.Set
        qualifiedName: Virgis.OrientEvent.Set
      VB:
      - id: Virgis.OrientEvent.Set*
        name: Set
        nameWithType: OrientEvent.Set
        qualifiedName: Virgis.OrientEvent.Set
    isDefinition: true
    commentId: Overload:Virgis.OrientEvent.Set
  System.IObservable{Vector3}:
    name:
      CSharp:
      - id: System.IObservable`1
        name: IObservable
        nameWithType: IObservable
        qualifiedName: System.IObservable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.IObservable`1
        name: IObservable
        nameWithType: IObservable
        qualifiedName: System.IObservable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.IObservable`1
    parent: System
    commentId: T:System.IObservable{Vector3}
  Virgis.OrientEvent.Event*:
    name:
      CSharp:
      - id: Virgis.OrientEvent.Event*
        name: Event
        nameWithType: OrientEvent.Event
        qualifiedName: Virgis.OrientEvent.Event
      VB:
      - id: Virgis.OrientEvent.Event*
        name: Event
        nameWithType: OrientEvent.Event
        qualifiedName: Virgis.OrientEvent.Event
    isDefinition: true
    commentId: Overload:Virgis.OrientEvent.Event
  Virgis.ButtonStatus.isLhTrigger*:
    name:
      CSharp:
      - id: Virgis.ButtonStatus.isLhTrigger*
        name: isLhTrigger
        nameWithType: ButtonStatus.isLhTrigger
        qualifiedName: Virgis.ButtonStatus.isLhTrigger
      VB:
      - id: Virgis.ButtonStatus.isLhTrigger*
        name: isLhTrigger
        nameWithType: ButtonStatus.isLhTrigger
        qualifiedName: Virgis.ButtonStatus.isLhTrigger
    isDefinition: true
    commentId: Overload:Virgis.ButtonStatus.isLhTrigger
  Virgis.ButtonStatus.isRhTrigger*:
    name:
      CSharp:
      - id: Virgis.ButtonStatus.isRhTrigger*
        name: isRhTrigger
        nameWithType: ButtonStatus.isRhTrigger
        qualifiedName: Virgis.ButtonStatus.isRhTrigger
      VB:
      - id: Virgis.ButtonStatus.isRhTrigger*
        name: isRhTrigger
        nameWithType: ButtonStatus.isRhTrigger
        qualifiedName: Virgis.ButtonStatus.isRhTrigger
    isDefinition: true
    commentId: Overload:Virgis.ButtonStatus.isRhTrigger
  Virgis.ButtonStatus.isLhGrip*:
    name:
      CSharp:
      - id: Virgis.ButtonStatus.isLhGrip*
        name: isLhGrip
        nameWithType: ButtonStatus.isLhGrip
        qualifiedName: Virgis.ButtonStatus.isLhGrip
      VB:
      - id: Virgis.ButtonStatus.isLhGrip*
        name: isLhGrip
        nameWithType: ButtonStatus.isLhGrip
        qualifiedName: Virgis.ButtonStatus.isLhGrip
    isDefinition: true
    commentId: Overload:Virgis.ButtonStatus.isLhGrip
  Virgis.ButtonStatus.isRhGrip*:
    name:
      CSharp:
      - id: Virgis.ButtonStatus.isRhGrip*
        name: isRhGrip
        nameWithType: ButtonStatus.isRhGrip
        qualifiedName: Virgis.ButtonStatus.isRhGrip
      VB:
      - id: Virgis.ButtonStatus.isRhGrip*
        name: isRhGrip
        nameWithType: ButtonStatus.isRhGrip
        qualifiedName: Virgis.ButtonStatus.isRhGrip
    isDefinition: true
    commentId: Overload:Virgis.ButtonStatus.isRhGrip
  Virgis.ButtonStatus.isAxisEdit*:
    name:
      CSharp:
      - id: Virgis.ButtonStatus.isAxisEdit*
        name: isAxisEdit
        nameWithType: ButtonStatus.isAxisEdit
        qualifiedName: Virgis.ButtonStatus.isAxisEdit
      VB:
      - id: Virgis.ButtonStatus.isAxisEdit*
        name: isAxisEdit
        nameWithType: ButtonStatus.isAxisEdit
        qualifiedName: Virgis.ButtonStatus.isAxisEdit
    isDefinition: true
    commentId: Overload:Virgis.ButtonStatus.isAxisEdit
  Virgis.ButtonStatus.SelectionType*:
    name:
      CSharp:
      - id: Virgis.ButtonStatus.SelectionType*
        name: SelectionType
        nameWithType: ButtonStatus.SelectionType
        qualifiedName: Virgis.ButtonStatus.SelectionType
      VB:
      - id: Virgis.ButtonStatus.SelectionType*
        name: SelectionType
        nameWithType: ButtonStatus.SelectionType
        qualifiedName: Virgis.ButtonStatus.SelectionType
    isDefinition: true
    commentId: Overload:Virgis.ButtonStatus.SelectionType
  System.IObservable{Virgis.ButtonStatus}:
    name:
      CSharp:
      - id: System.IObservable`1
        name: IObservable
        nameWithType: IObservable
        qualifiedName: System.IObservable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Virgis.ButtonStatus
        name: ButtonStatus
        nameWithType: ButtonStatus
        qualifiedName: Virgis.ButtonStatus
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.IObservable`1
        name: IObservable
        nameWithType: IObservable
        qualifiedName: System.IObservable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Virgis.ButtonStatus
        name: ButtonStatus
        nameWithType: ButtonStatus
        qualifiedName: Virgis.ButtonStatus
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.IObservable`1
    parent: System
    commentId: T:System.IObservable{Virgis.ButtonStatus}
  Virgis.ButtonStatus.Event*:
    name:
      CSharp:
      - id: Virgis.ButtonStatus.Event*
        name: Event
        nameWithType: ButtonStatus.Event
        qualifiedName: Virgis.ButtonStatus.Event
      VB:
      - id: Virgis.ButtonStatus.Event*
        name: Event
        nameWithType: ButtonStatus.Event
        qualifiedName: Virgis.ButtonStatus.Event
    isDefinition: true
    commentId: Overload:Virgis.ButtonStatus.Event
  Virgis.EditSession.#ctor*:
    name:
      CSharp:
      - id: Virgis.EditSession.#ctor*
        name: EditSession
        nameWithType: EditSession.EditSession
        qualifiedName: Virgis.EditSession.EditSession
      VB:
      - id: Virgis.EditSession.#ctor*
        name: EditSession
        nameWithType: EditSession.EditSession
        qualifiedName: Virgis.EditSession.EditSession
    isDefinition: true
    commentId: Overload:Virgis.EditSession.#ctor
  Virgis.EditSession.editableLayer*:
    name:
      CSharp:
      - id: Virgis.EditSession.editableLayer*
        name: editableLayer
        nameWithType: EditSession.editableLayer
        qualifiedName: Virgis.EditSession.editableLayer
      VB:
      - id: Virgis.EditSession.editableLayer*
        name: editableLayer
        nameWithType: EditSession.editableLayer
        qualifiedName: Virgis.EditSession.editableLayer
    isDefinition: true
    commentId: Overload:Virgis.EditSession.editableLayer
  Virgis.EditSession.IsActive*:
    name:
      CSharp:
      - id: Virgis.EditSession.IsActive*
        name: IsActive
        nameWithType: EditSession.IsActive
        qualifiedName: Virgis.EditSession.IsActive
      VB:
      - id: Virgis.EditSession.IsActive*
        name: IsActive
        nameWithType: EditSession.IsActive
        qualifiedName: Virgis.EditSession.IsActive
    isDefinition: true
    commentId: Overload:Virgis.EditSession.IsActive
  Virgis.EditSession.Start*:
    name:
      CSharp:
      - id: Virgis.EditSession.Start*
        name: Start
        nameWithType: EditSession.Start
        qualifiedName: Virgis.EditSession.Start
      VB:
      - id: Virgis.EditSession.Start*
        name: Start
        nameWithType: EditSession.Start
        qualifiedName: Virgis.EditSession.Start
    isDefinition: true
    commentId: Overload:Virgis.EditSession.Start
  Virgis.EditSession.StopAndSave*:
    name:
      CSharp:
      - id: Virgis.EditSession.StopAndSave*
        name: StopAndSave
        nameWithType: EditSession.StopAndSave
        qualifiedName: Virgis.EditSession.StopAndSave
      VB:
      - id: Virgis.EditSession.StopAndSave*
        name: StopAndSave
        nameWithType: EditSession.StopAndSave
        qualifiedName: Virgis.EditSession.StopAndSave
    isDefinition: true
    commentId: Overload:Virgis.EditSession.StopAndSave
  Virgis.EditSession.StopAndDiscard*:
    name:
      CSharp:
      - id: Virgis.EditSession.StopAndDiscard*
        name: StopAndDiscard
        nameWithType: EditSession.StopAndDiscard
        qualifiedName: Virgis.EditSession.StopAndDiscard
      VB:
      - id: Virgis.EditSession.StopAndDiscard*
        name: StopAndDiscard
        nameWithType: EditSession.StopAndDiscard
        qualifiedName: Virgis.EditSession.StopAndDiscard
    isDefinition: true
    commentId: Overload:Virgis.EditSession.StopAndDiscard
  Virgis.EditSession.EditMode:
    name:
      CSharp:
      - id: Virgis.EditSession.EditMode
        name: EditSession.EditMode
        nameWithType: EditSession.EditMode
        qualifiedName: Virgis.EditSession.EditMode
      VB:
      - id: Virgis.EditSession.EditMode
        name: EditSession.EditMode
        nameWithType: EditSession.EditMode
        qualifiedName: Virgis.EditSession.EditMode
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.EditSession.EditMode
  Virgis.EditSession.mode*:
    name:
      CSharp:
      - id: Virgis.EditSession.mode*
        name: mode
        nameWithType: EditSession.mode
        qualifiedName: Virgis.EditSession.mode
      VB:
      - id: Virgis.EditSession.mode*
        name: mode
        nameWithType: EditSession.mode
        qualifiedName: Virgis.EditSession.mode
    isDefinition: true
    commentId: Overload:Virgis.EditSession.mode
  System.IObservable{System.Boolean}:
    name:
      CSharp:
      - id: System.IObservable`1
        name: IObservable
        nameWithType: IObservable
        qualifiedName: System.IObservable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.IObservable`1
        name: IObservable
        nameWithType: IObservable
        qualifiedName: System.IObservable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.IObservable`1
    parent: System
    commentId: T:System.IObservable{System.Boolean}
  Virgis.EditSession.StartEvent*:
    name:
      CSharp:
      - id: Virgis.EditSession.StartEvent*
        name: StartEvent
        nameWithType: EditSession.StartEvent
        qualifiedName: Virgis.EditSession.StartEvent
      VB:
      - id: Virgis.EditSession.StartEvent*
        name: StartEvent
        nameWithType: EditSession.StartEvent
        qualifiedName: Virgis.EditSession.StartEvent
    isDefinition: true
    commentId: Overload:Virgis.EditSession.StartEvent
  Virgis.EditSession.EndEvent*:
    name:
      CSharp:
      - id: Virgis.EditSession.EndEvent*
        name: EndEvent
        nameWithType: EditSession.EndEvent
        qualifiedName: Virgis.EditSession.EndEvent
      VB:
      - id: Virgis.EditSession.EndEvent*
        name: EndEvent
        nameWithType: EditSession.EndEvent
        qualifiedName: Virgis.EditSession.EndEvent
    isDefinition: true
    commentId: Overload:Virgis.EditSession.EndEvent
  System.IObservable{Virgis.IVirgisLayer}:
    name:
      CSharp:
      - id: System.IObservable`1
        name: IObservable
        nameWithType: IObservable
        qualifiedName: System.IObservable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Virgis.IVirgisLayer
        name: IVirgisLayer
        nameWithType: IVirgisLayer
        qualifiedName: Virgis.IVirgisLayer
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.IObservable`1
        name: IObservable
        nameWithType: IObservable
        qualifiedName: System.IObservable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Virgis.IVirgisLayer
        name: IVirgisLayer
        nameWithType: IVirgisLayer
        qualifiedName: Virgis.IVirgisLayer
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.IObservable`1
    parent: System
    commentId: T:System.IObservable{Virgis.IVirgisLayer}
  Virgis.EditSession.ChangeLayerEvent*:
    name:
      CSharp:
      - id: Virgis.EditSession.ChangeLayerEvent*
        name: ChangeLayerEvent
        nameWithType: EditSession.ChangeLayerEvent
        qualifiedName: Virgis.EditSession.ChangeLayerEvent
      VB:
      - id: Virgis.EditSession.ChangeLayerEvent*
        name: ChangeLayerEvent
        nameWithType: EditSession.ChangeLayerEvent
        qualifiedName: Virgis.EditSession.ChangeLayerEvent
    isDefinition: true
    commentId: Overload:Virgis.EditSession.ChangeLayerEvent
  Virgis.InfoEvent.Set*:
    name:
      CSharp:
      - id: Virgis.InfoEvent.Set*
        name: Set
        nameWithType: InfoEvent.Set
        qualifiedName: Virgis.InfoEvent.Set
      VB:
      - id: Virgis.InfoEvent.Set*
        name: Set
        nameWithType: InfoEvent.Set
        qualifiedName: Virgis.InfoEvent.Set
    isDefinition: true
    commentId: Overload:Virgis.InfoEvent.Set
  System.IObservable{System.String}:
    name:
      CSharp:
      - id: System.IObservable`1
        name: IObservable
        nameWithType: IObservable
        qualifiedName: System.IObservable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.IObservable`1
        name: IObservable
        nameWithType: IObservable
        qualifiedName: System.IObservable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.IObservable`1
    parent: System
    commentId: T:System.IObservable{System.String}
  Virgis.InfoEvent.Event*:
    name:
      CSharp:
      - id: Virgis.InfoEvent.Event*
        name: Event
        nameWithType: InfoEvent.Event
        qualifiedName: Virgis.InfoEvent.Event
      VB:
      - id: Virgis.InfoEvent.Event*
        name: Event
        nameWithType: InfoEvent.Event
        qualifiedName: Virgis.InfoEvent.Event
    isDefinition: true
    commentId: Overload:Virgis.InfoEvent.Event
  System.ValueType:
    name:
      CSharp:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
      VB:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ValueType
  System.ValueType.Equals(System.Object):
    name:
      CSharp:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.Equals(System.Object)
  System.ValueType.GetHashCode:
    name:
      CSharp:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.GetHashCode
  System.ValueType.ToString:
    name:
      CSharp:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.ToString
  System.Guid:
    name:
      CSharp:
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      VB:
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Guid
  Quaternion:
    name:
      CSharp:
      - id: Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: Quaternion
        isExternal: true
      VB:
      - id: Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: Quaternion
        isExternal: true
    isDefinition: true
    commentId: '!:Quaternion'
  Virgis.FeatureType:
    name:
      CSharp:
      - id: Virgis.FeatureType
        name: FeatureType
        nameWithType: FeatureType
        qualifiedName: Virgis.FeatureType
      VB:
      - id: Virgis.FeatureType
        name: FeatureType
        nameWithType: FeatureType
        qualifiedName: Virgis.FeatureType
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.FeatureType
  LayerMask:
    name:
      CSharp:
      - id: LayerMask
        name: LayerMask
        nameWithType: LayerMask
        qualifiedName: LayerMask
        isExternal: true
      VB:
      - id: LayerMask
        name: LayerMask
        nameWithType: LayerMask
        qualifiedName: LayerMask
        isExternal: true
    isDefinition: true
  Virgis.UnityLayers.POINT*:
    name:
      CSharp:
      - id: Virgis.UnityLayers.POINT*
        name: POINT
        nameWithType: UnityLayers.POINT
        qualifiedName: Virgis.UnityLayers.POINT
      VB:
      - id: Virgis.UnityLayers.POINT*
        name: POINT
        nameWithType: UnityLayers.POINT
        qualifiedName: Virgis.UnityLayers.POINT
    isDefinition: true
    commentId: Overload:Virgis.UnityLayers.POINT
  Virgis.UnityLayers.LINE*:
    name:
      CSharp:
      - id: Virgis.UnityLayers.LINE*
        name: LINE
        nameWithType: UnityLayers.LINE
        qualifiedName: Virgis.UnityLayers.LINE
      VB:
      - id: Virgis.UnityLayers.LINE*
        name: LINE
        nameWithType: UnityLayers.LINE
        qualifiedName: Virgis.UnityLayers.LINE
    isDefinition: true
    commentId: Overload:Virgis.UnityLayers.LINE
  Virgis.UnityLayers.SHAPE*:
    name:
      CSharp:
      - id: Virgis.UnityLayers.SHAPE*
        name: SHAPE
        nameWithType: UnityLayers.SHAPE
        qualifiedName: Virgis.UnityLayers.SHAPE
      VB:
      - id: Virgis.UnityLayers.SHAPE*
        name: SHAPE
        nameWithType: UnityLayers.SHAPE
        qualifiedName: Virgis.UnityLayers.SHAPE
    isDefinition: true
    commentId: Overload:Virgis.UnityLayers.SHAPE
  Virgis.UnityLayers.MESH*:
    name:
      CSharp:
      - id: Virgis.UnityLayers.MESH*
        name: MESH
        nameWithType: UnityLayers.MESH
        qualifiedName: Virgis.UnityLayers.MESH
      VB:
      - id: Virgis.UnityLayers.MESH*
        name: MESH
        nameWithType: UnityLayers.MESH
        qualifiedName: Virgis.UnityLayers.MESH
    isDefinition: true
    commentId: Overload:Virgis.UnityLayers.MESH
  Virgis.UnityLayers:
    name:
      CSharp:
      - id: Virgis.UnityLayers
        name: UnityLayers
        nameWithType: UnityLayers
        qualifiedName: Virgis.UnityLayers
      VB:
      - id: Virgis.UnityLayers
        name: UnityLayers
        nameWithType: UnityLayers
        qualifiedName: Virgis.UnityLayers
    isDefinition: true
    commentId: T:Virgis.UnityLayers
  Virgis.DcurveExtensions.Vector3*:
    name:
      CSharp:
      - id: Virgis.DcurveExtensions.Vector3*
        name: Vector3
        nameWithType: DcurveExtensions.Vector3
        qualifiedName: Virgis.DcurveExtensions.Vector3
      VB:
      - id: Virgis.DcurveExtensions.Vector3*
        name: Vector3
        nameWithType: DcurveExtensions.Vector3
        qualifiedName: Virgis.DcurveExtensions.Vector3
    isDefinition: true
    commentId: Overload:Virgis.DcurveExtensions.Vector3
  Virgis.DcurveExtensions.FromGeometry*:
    name:
      CSharp:
      - id: Virgis.DcurveExtensions.FromGeometry*
        name: FromGeometry
        nameWithType: DcurveExtensions.FromGeometry
        qualifiedName: Virgis.DcurveExtensions.FromGeometry
      VB:
      - id: Virgis.DcurveExtensions.FromGeometry*
        name: FromGeometry
        nameWithType: DcurveExtensions.FromGeometry
        qualifiedName: Virgis.DcurveExtensions.FromGeometry
    isDefinition: true
    commentId: Overload:Virgis.DcurveExtensions.FromGeometry
  Virgis.DcurveExtensions.ToWorld*:
    name:
      CSharp:
      - id: Virgis.DcurveExtensions.ToWorld*
        name: ToWorld
        nameWithType: DcurveExtensions.ToWorld
        qualifiedName: Virgis.DcurveExtensions.ToWorld
      VB:
      - id: Virgis.DcurveExtensions.ToWorld*
        name: ToWorld
        nameWithType: DcurveExtensions.ToWorld
        qualifiedName: Virgis.DcurveExtensions.ToWorld
    isDefinition: true
    commentId: Overload:Virgis.DcurveExtensions.ToWorld
  Virgis.DcurveExtensions.WorldCenter*:
    name:
      CSharp:
      - id: Virgis.DcurveExtensions.WorldCenter*
        name: WorldCenter
        nameWithType: DcurveExtensions.WorldCenter
        qualifiedName: Virgis.DcurveExtensions.WorldCenter
      VB:
      - id: Virgis.DcurveExtensions.WorldCenter*
        name: WorldCenter
        nameWithType: DcurveExtensions.WorldCenter
        qualifiedName: Virgis.DcurveExtensions.WorldCenter
    isDefinition: true
    commentId: Overload:Virgis.DcurveExtensions.WorldCenter
  Vector3d:
    name:
      CSharp:
      - id: Vector3d
        name: Vector3d
        nameWithType: Vector3d
        qualifiedName: Vector3d
        isExternal: true
      VB:
      - id: Vector3d
        name: Vector3d
        nameWithType: Vector3d
        qualifiedName: Vector3d
        isExternal: true
    isDefinition: true
  Virgis.DcurveExtensions.Center*:
    name:
      CSharp:
      - id: Virgis.DcurveExtensions.Center*
        name: Center
        nameWithType: DcurveExtensions.Center
        qualifiedName: Virgis.DcurveExtensions.Center
      VB:
      - id: Virgis.DcurveExtensions.Center*
        name: Center
        nameWithType: DcurveExtensions.Center
        qualifiedName: Virgis.DcurveExtensions.Center
    isDefinition: true
    commentId: Overload:Virgis.DcurveExtensions.Center
  Virgis.DcurveExtensions.CenterMark*:
    name:
      CSharp:
      - id: Virgis.DcurveExtensions.CenterMark*
        name: CenterMark
        nameWithType: DcurveExtensions.CenterMark
        qualifiedName: Virgis.DcurveExtensions.CenterMark
      VB:
      - id: Virgis.DcurveExtensions.CenterMark*
        name: CenterMark
        nameWithType: DcurveExtensions.CenterMark
        qualifiedName: Virgis.DcurveExtensions.CenterMark
    isDefinition: true
    commentId: Overload:Virgis.DcurveExtensions.CenterMark
  Virgis.DcurveExtensions.NearestSegment*:
    name:
      CSharp:
      - id: Virgis.DcurveExtensions.NearestSegment*
        name: NearestSegment
        nameWithType: DcurveExtensions.NearestSegment
        qualifiedName: Virgis.DcurveExtensions.NearestSegment
      VB:
      - id: Virgis.DcurveExtensions.NearestSegment*
        name: NearestSegment
        nameWithType: DcurveExtensions.NearestSegment
        qualifiedName: Virgis.DcurveExtensions.NearestSegment
    isDefinition: true
    commentId: Overload:Virgis.DcurveExtensions.NearestSegment
  System.Collections.Generic.List{Vector3d}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Vector3d
        name: Vector3d
        nameWithType: Vector3d
        qualifiedName: Vector3d
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Vector3d
        name: Vector3d
        nameWithType: Vector3d
        qualifiedName: Vector3d
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Vector3d}
  Virgis.DcurveExtensions.AllVertexItr*:
    name:
      CSharp:
      - id: Virgis.DcurveExtensions.AllVertexItr*
        name: AllVertexItr
        nameWithType: DcurveExtensions.AllVertexItr
        qualifiedName: Virgis.DcurveExtensions.AllVertexItr
      VB:
      - id: Virgis.DcurveExtensions.AllVertexItr*
        name: AllVertexItr
        nameWithType: DcurveExtensions.AllVertexItr
        qualifiedName: Virgis.DcurveExtensions.AllVertexItr
    isDefinition: true
    commentId: Overload:Virgis.DcurveExtensions.AllVertexItr
  Virgis.DcurveExtensions:
    name:
      CSharp:
      - id: Virgis.DcurveExtensions
        name: DcurveExtensions
        nameWithType: DcurveExtensions
        qualifiedName: Virgis.DcurveExtensions
      VB:
      - id: Virgis.DcurveExtensions
        name: DcurveExtensions
        nameWithType: DcurveExtensions
        qualifiedName: Virgis.DcurveExtensions
    isDefinition: true
    commentId: T:Virgis.DcurveExtensions
  Virgis.GeometryExtensions.TransformWorld*:
    name:
      CSharp:
      - id: Virgis.GeometryExtensions.TransformWorld*
        name: TransformWorld
        nameWithType: GeometryExtensions.TransformWorld
        qualifiedName: Virgis.GeometryExtensions.TransformWorld
      VB:
      - id: Virgis.GeometryExtensions.TransformWorld*
        name: TransformWorld
        nameWithType: GeometryExtensions.TransformWorld
        qualifiedName: Virgis.GeometryExtensions.TransformWorld
    isDefinition: true
    commentId: Overload:Virgis.GeometryExtensions.TransformWorld
  Virgis.GeometryExtensions.Vector3*:
    name:
      CSharp:
      - id: Virgis.GeometryExtensions.Vector3*
        name: Vector3
        nameWithType: GeometryExtensions.Vector3
        qualifiedName: Virgis.GeometryExtensions.Vector3
      VB:
      - id: Virgis.GeometryExtensions.Vector3*
        name: Vector3
        nameWithType: GeometryExtensions.Vector3
        qualifiedName: Virgis.GeometryExtensions.Vector3
    isDefinition: true
    commentId: Overload:Virgis.GeometryExtensions.Vector3
  Virgis.GeometryExtensions:
    name:
      CSharp:
      - id: Virgis.GeometryExtensions
        name: GeometryExtensions
        nameWithType: GeometryExtensions
        qualifiedName: Virgis.GeometryExtensions
      VB:
      - id: Virgis.GeometryExtensions
        name: GeometryExtensions
        nameWithType: GeometryExtensions
        qualifiedName: Virgis.GeometryExtensions
    isDefinition: true
    commentId: T:Virgis.GeometryExtensions
  GeneralPolygon2d:
    name:
      CSharp:
      - id: GeneralPolygon2d
        name: GeneralPolygon2d
        nameWithType: GeneralPolygon2d
        qualifiedName: GeneralPolygon2d
        isExternal: true
      VB:
      - id: GeneralPolygon2d
        name: GeneralPolygon2d
        nameWithType: GeneralPolygon2d
        qualifiedName: GeneralPolygon2d
        isExternal: true
    isDefinition: true
  Frame3f:
    name:
      CSharp:
      - id: Frame3f
        name: Frame3f
        nameWithType: Frame3f
        qualifiedName: Frame3f
        isExternal: true
      VB:
      - id: Frame3f
        name: Frame3f
        nameWithType: Frame3f
        qualifiedName: Frame3f
        isExternal: true
    isDefinition: true
    commentId: '!:Frame3f'
  Virgis.PolygonExtensions.ToPolygon*:
    name:
      CSharp:
      - id: Virgis.PolygonExtensions.ToPolygon*
        name: ToPolygon
        nameWithType: PolygonExtensions.ToPolygon
        qualifiedName: Virgis.PolygonExtensions.ToPolygon
      VB:
      - id: Virgis.PolygonExtensions.ToPolygon*
        name: ToPolygon
        nameWithType: PolygonExtensions.ToPolygon
        qualifiedName: Virgis.PolygonExtensions.ToPolygon
    isDefinition: true
    commentId: Overload:Virgis.PolygonExtensions.ToPolygon
  Segment2d:
    name:
      CSharp:
      - id: Segment2d
        name: Segment2d
        nameWithType: Segment2d
        qualifiedName: Segment2d
        isExternal: true
      VB:
      - id: Segment2d
        name: Segment2d
        nameWithType: Segment2d
        qualifiedName: Segment2d
        isExternal: true
    isDefinition: true
  Virgis.PolygonExtensions.IsOutside*:
    name:
      CSharp:
      - id: Virgis.PolygonExtensions.IsOutside*
        name: IsOutside
        nameWithType: PolygonExtensions.IsOutside
        qualifiedName: Virgis.PolygonExtensions.IsOutside
      VB:
      - id: Virgis.PolygonExtensions.IsOutside*
        name: IsOutside
        nameWithType: PolygonExtensions.IsOutside
        qualifiedName: Virgis.PolygonExtensions.IsOutside
    isDefinition: true
    commentId: Overload:Virgis.PolygonExtensions.IsOutside
  Polygon2d:
    name:
      CSharp:
      - id: Polygon2d
        name: Polygon2d
        nameWithType: Polygon2d
        qualifiedName: Polygon2d
        isExternal: true
      VB:
      - id: Polygon2d
        name: Polygon2d
        nameWithType: Polygon2d
        qualifiedName: Polygon2d
        isExternal: true
    isDefinition: true
  Virgis.PolygonExtensions.BiContains*:
    name:
      CSharp:
      - id: Virgis.PolygonExtensions.BiContains*
        name: BiContains
        nameWithType: PolygonExtensions.BiContains
        qualifiedName: Virgis.PolygonExtensions.BiContains
      VB:
      - id: Virgis.PolygonExtensions.BiContains*
        name: BiContains
        nameWithType: PolygonExtensions.BiContains
        qualifiedName: Virgis.PolygonExtensions.BiContains
    isDefinition: true
    commentId: Overload:Virgis.PolygonExtensions.BiContains
  Virgis.PolygonExtensions.IsMember*:
    name:
      CSharp:
      - id: Virgis.PolygonExtensions.IsMember*
        name: IsMember
        nameWithType: PolygonExtensions.IsMember
        qualifiedName: Virgis.PolygonExtensions.IsMember
      VB:
      - id: Virgis.PolygonExtensions.IsMember*
        name: IsMember
        nameWithType: PolygonExtensions.IsMember
        qualifiedName: Virgis.PolygonExtensions.IsMember
    isDefinition: true
    commentId: Overload:Virgis.PolygonExtensions.IsMember
  Virgis.PolygonExtensions:
    name:
      CSharp:
      - id: Virgis.PolygonExtensions
        name: PolygonExtensions
        nameWithType: PolygonExtensions
        qualifiedName: Virgis.PolygonExtensions
      VB:
      - id: Virgis.PolygonExtensions
        name: PolygonExtensions
        nameWithType: PolygonExtensions
        qualifiedName: Virgis.PolygonExtensions
    isDefinition: true
    commentId: T:Virgis.PolygonExtensions
  IPoint[]:
    name:
      CSharp:
      - id: IPoint
        name: IPoint
        nameWithType: IPoint
        qualifiedName: IPoint
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: IPoint
        name: IPoint
        nameWithType: IPoint
        qualifiedName: IPoint
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  System.Collections.Generic.IEnumerable`1:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.IEnumerable`1
  System.Collections.Generic.IEnumerable{Vector2d}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Vector2d
        name: Vector2d
        nameWithType: Vector2d
        qualifiedName: Vector2d
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Vector2d
        name: Vector2d
        nameWithType: Vector2d
        qualifiedName: Vector2d
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{Vector2d}
  Virgis.DelaunatorExtensions.ToPoints*:
    name:
      CSharp:
      - id: Virgis.DelaunatorExtensions.ToPoints*
        name: ToPoints
        nameWithType: DelaunatorExtensions.ToPoints
        qualifiedName: Virgis.DelaunatorExtensions.ToPoints
      VB:
      - id: Virgis.DelaunatorExtensions.ToPoints*
        name: ToPoints
        nameWithType: DelaunatorExtensions.ToPoints
        qualifiedName: Virgis.DelaunatorExtensions.ToPoints
    isDefinition: true
    commentId: Overload:Virgis.DelaunatorExtensions.ToPoints
  Vector2d[]:
    name:
      CSharp:
      - id: Vector2d
        name: Vector2d
        nameWithType: Vector2d
        qualifiedName: Vector2d
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Vector2d
        name: Vector2d
        nameWithType: Vector2d
        qualifiedName: Vector2d
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  System.Collections.Generic.IEnumerable{IPoint}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IPoint
        name: IPoint
        nameWithType: IPoint
        qualifiedName: IPoint
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IPoint
        name: IPoint
        nameWithType: IPoint
        qualifiedName: IPoint
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{IPoint}
  Virgis.DelaunatorExtensions.ToVectors2d*:
    name:
      CSharp:
      - id: Virgis.DelaunatorExtensions.ToVectors2d*
        name: ToVectors2d
        nameWithType: DelaunatorExtensions.ToVectors2d
        qualifiedName: Virgis.DelaunatorExtensions.ToVectors2d
      VB:
      - id: Virgis.DelaunatorExtensions.ToVectors2d*
        name: ToVectors2d
        nameWithType: DelaunatorExtensions.ToVectors2d
        qualifiedName: Virgis.DelaunatorExtensions.ToVectors2d
    isDefinition: true
    commentId: Overload:Virgis.DelaunatorExtensions.ToVectors2d
  Vector2d:
    name:
      CSharp:
      - id: Vector2d
        name: Vector2d
        nameWithType: Vector2d
        qualifiedName: Vector2d
        isExternal: true
      VB:
      - id: Vector2d
        name: Vector2d
        nameWithType: Vector2d
        qualifiedName: Vector2d
        isExternal: true
    isDefinition: true
  IPoint:
    name:
      CSharp:
      - id: IPoint
        name: IPoint
        nameWithType: IPoint
        qualifiedName: IPoint
        isExternal: true
      VB:
      - id: IPoint
        name: IPoint
        nameWithType: IPoint
        qualifiedName: IPoint
        isExternal: true
    isDefinition: true
    commentId: '!:IPoint'
  Virgis.DelaunatorExtensions.ToVector2d*:
    name:
      CSharp:
      - id: Virgis.DelaunatorExtensions.ToVector2d*
        name: ToVector2d
        nameWithType: DelaunatorExtensions.ToVector2d
        qualifiedName: Virgis.DelaunatorExtensions.ToVector2d
      VB:
      - id: Virgis.DelaunatorExtensions.ToVector2d*
        name: ToVector2d
        nameWithType: DelaunatorExtensions.ToVector2d
        qualifiedName: Virgis.DelaunatorExtensions.ToVector2d
    isDefinition: true
    commentId: Overload:Virgis.DelaunatorExtensions.ToVector2d
  ITriangle:
    name:
      CSharp:
      - id: ITriangle
        name: ITriangle
        nameWithType: ITriangle
        qualifiedName: ITriangle
        isExternal: true
      VB:
      - id: ITriangle
        name: ITriangle
        nameWithType: ITriangle
        qualifiedName: ITriangle
        isExternal: true
    isDefinition: true
    commentId: '!:ITriangle'
  Virgis.DelaunatorExtensions.CetIncenter*:
    name:
      CSharp:
      - id: Virgis.DelaunatorExtensions.CetIncenter*
        name: CetIncenter
        nameWithType: DelaunatorExtensions.CetIncenter
        qualifiedName: Virgis.DelaunatorExtensions.CetIncenter
      VB:
      - id: Virgis.DelaunatorExtensions.CetIncenter*
        name: CetIncenter
        nameWithType: DelaunatorExtensions.CetIncenter
        qualifiedName: Virgis.DelaunatorExtensions.CetIncenter
    isDefinition: true
    commentId: Overload:Virgis.DelaunatorExtensions.CetIncenter
  Virgis.DelaunatorExtensions:
    name:
      CSharp:
      - id: Virgis.DelaunatorExtensions
        name: DelaunatorExtensions
        nameWithType: DelaunatorExtensions
        qualifiedName: Virgis.DelaunatorExtensions
      VB:
      - id: Virgis.DelaunatorExtensions
        name: DelaunatorExtensions
        nameWithType: DelaunatorExtensions
        qualifiedName: Virgis.DelaunatorExtensions
    isDefinition: true
    commentId: T:Virgis.DelaunatorExtensions
  Virgis.Segment2dExtensions.BiEquals*:
    name:
      CSharp:
      - id: Virgis.Segment2dExtensions.BiEquals*
        name: BiEquals
        nameWithType: Segment2dExtensions.BiEquals
        qualifiedName: Virgis.Segment2dExtensions.BiEquals
      VB:
      - id: Virgis.Segment2dExtensions.BiEquals*
        name: BiEquals
        nameWithType: Segment2dExtensions.BiEquals
        qualifiedName: Virgis.Segment2dExtensions.BiEquals
    isDefinition: true
    commentId: Overload:Virgis.Segment2dExtensions.BiEquals
  Virgis.Segment2dExtensions:
    name:
      CSharp:
      - id: Virgis.Segment2dExtensions
        name: Segment2dExtensions
        nameWithType: Segment2dExtensions
        qualifiedName: Virgis.Segment2dExtensions
      VB:
      - id: Virgis.Segment2dExtensions
        name: Segment2dExtensions
        nameWithType: Segment2dExtensions
        qualifiedName: Virgis.Segment2dExtensions
    isDefinition: true
    commentId: T:Virgis.Segment2dExtensions
  Mesh:
    name:
      CSharp:
      - id: Mesh
        name: Mesh
        nameWithType: Mesh
        qualifiedName: Mesh
        isExternal: true
      VB:
      - id: Mesh
        name: Mesh
        nameWithType: Mesh
        qualifiedName: Mesh
        isExternal: true
    isDefinition: true
    commentId: '!:Mesh'
  DMesh3:
    name:
      CSharp:
      - id: DMesh3
        name: DMesh3
        nameWithType: DMesh3
        qualifiedName: DMesh3
        isExternal: true
      VB:
      - id: DMesh3
        name: DMesh3
        nameWithType: DMesh3
        qualifiedName: DMesh3
        isExternal: true
    isDefinition: true
  Virgis.MeshExtensions.ToMesh*:
    name:
      CSharp:
      - id: Virgis.MeshExtensions.ToMesh*
        name: ToMesh
        nameWithType: MeshExtensions.ToMesh
        qualifiedName: Virgis.MeshExtensions.ToMesh
      VB:
      - id: Virgis.MeshExtensions.ToMesh*
        name: ToMesh
        nameWithType: MeshExtensions.ToMesh
        qualifiedName: Virgis.MeshExtensions.ToMesh
    isDefinition: true
    commentId: Overload:Virgis.MeshExtensions.ToMesh
  Virgis.MeshExtensions.Transform*:
    name:
      CSharp:
      - id: Virgis.MeshExtensions.Transform*
        name: Transform
        nameWithType: MeshExtensions.Transform
        qualifiedName: Virgis.MeshExtensions.Transform
      VB:
      - id: Virgis.MeshExtensions.Transform*
        name: Transform
        nameWithType: MeshExtensions.Transform
        qualifiedName: Virgis.MeshExtensions.Transform
    isDefinition: true
    commentId: Overload:Virgis.MeshExtensions.Transform
  Virgis.MeshExtensions.CalculateUVs*:
    name:
      CSharp:
      - id: Virgis.MeshExtensions.CalculateUVs*
        name: CalculateUVs
        nameWithType: MeshExtensions.CalculateUVs
        qualifiedName: Virgis.MeshExtensions.CalculateUVs
      VB:
      - id: Virgis.MeshExtensions.CalculateUVs*
        name: CalculateUVs
        nameWithType: MeshExtensions.CalculateUVs
        qualifiedName: Virgis.MeshExtensions.CalculateUVs
    isDefinition: true
    commentId: Overload:Virgis.MeshExtensions.CalculateUVs
  Virgis.MeshExtensions:
    name:
      CSharp:
      - id: Virgis.MeshExtensions
        name: MeshExtensions
        nameWithType: MeshExtensions
        qualifiedName: Virgis.MeshExtensions
      VB:
      - id: Virgis.MeshExtensions
        name: MeshExtensions
        nameWithType: MeshExtensions
        qualifiedName: Virgis.MeshExtensions
    isDefinition: true
    commentId: T:Virgis.MeshExtensions
  Virgis.VirgisVectorExtensions.Round*:
    name:
      CSharp:
      - id: Virgis.VirgisVectorExtensions.Round*
        name: Round
        nameWithType: VirgisVectorExtensions.Round
        qualifiedName: Virgis.VirgisVectorExtensions.Round
      VB:
      - id: Virgis.VirgisVectorExtensions.Round*
        name: Round
        nameWithType: VirgisVectorExtensions.Round
        qualifiedName: Virgis.VirgisVectorExtensions.Round
    isDefinition: true
    commentId: Overload:Virgis.VirgisVectorExtensions.Round
  Virgis.VirgisVectorExtensions:
    name:
      CSharp:
      - id: Virgis.VirgisVectorExtensions
        name: VirgisVectorExtensions
        nameWithType: VirgisVectorExtensions
        qualifiedName: Virgis.VirgisVectorExtensions
      VB:
      - id: Virgis.VirgisVectorExtensions
        name: VirgisVectorExtensions
        nameWithType: VirgisVectorExtensions
        qualifiedName: Virgis.VirgisVectorExtensions
    isDefinition: true
    commentId: T:Virgis.VirgisVectorExtensions
  Virgis.FeatureExtensions.ContainsKey*:
    name:
      CSharp:
      - id: Virgis.FeatureExtensions.ContainsKey*
        name: ContainsKey
        nameWithType: FeatureExtensions.ContainsKey
        qualifiedName: Virgis.FeatureExtensions.ContainsKey
      VB:
      - id: Virgis.FeatureExtensions.ContainsKey*
        name: ContainsKey
        nameWithType: FeatureExtensions.ContainsKey
        qualifiedName: Virgis.FeatureExtensions.ContainsKey
    isDefinition: true
    commentId: Overload:Virgis.FeatureExtensions.ContainsKey
  Virgis.FeatureExtensions.Get*:
    name:
      CSharp:
      - id: Virgis.FeatureExtensions.Get*
        name: Get
        nameWithType: FeatureExtensions.Get
        qualifiedName: Virgis.FeatureExtensions.Get
      VB:
      - id: Virgis.FeatureExtensions.Get*
        name: Get
        nameWithType: FeatureExtensions.Get
        qualifiedName: Virgis.FeatureExtensions.Get
    isDefinition: true
    commentId: Overload:Virgis.FeatureExtensions.Get
  Virgis.FeatureExtensions.GetAll*:
    name:
      CSharp:
      - id: Virgis.FeatureExtensions.GetAll*
        name: GetAll
        nameWithType: FeatureExtensions.GetAll
        qualifiedName: Virgis.FeatureExtensions.GetAll
      VB:
      - id: Virgis.FeatureExtensions.GetAll*
        name: GetAll
        nameWithType: FeatureExtensions.GetAll
        qualifiedName: Virgis.FeatureExtensions.GetAll
    isDefinition: true
    commentId: Overload:Virgis.FeatureExtensions.GetAll
  System.Double:
    name:
      CSharp:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      VB:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Double
  Virgis.FeatureExtensions.Set*:
    name:
      CSharp:
      - id: Virgis.FeatureExtensions.Set*
        name: Set
        nameWithType: FeatureExtensions.Set
        qualifiedName: Virgis.FeatureExtensions.Set
      VB:
      - id: Virgis.FeatureExtensions.Set*
        name: Set
        nameWithType: FeatureExtensions.Set
        qualifiedName: Virgis.FeatureExtensions.Set
    isDefinition: true
    commentId: Overload:Virgis.FeatureExtensions.Set
  Virgis.FeatureExtensions:
    name:
      CSharp:
      - id: Virgis.FeatureExtensions
        name: FeatureExtensions
        nameWithType: FeatureExtensions
        qualifiedName: Virgis.FeatureExtensions
      VB:
      - id: Virgis.FeatureExtensions
        name: FeatureExtensions
        nameWithType: FeatureExtensions
        qualifiedName: Virgis.FeatureExtensions
    isDefinition: true
    commentId: T:Virgis.FeatureExtensions
  Virgis.VertexLookup.Equals*:
    name:
      CSharp:
      - id: Virgis.VertexLookup.Equals*
        name: Equals
        nameWithType: VertexLookup.Equals
        qualifiedName: Virgis.VertexLookup.Equals
      VB:
      - id: Virgis.VertexLookup.Equals*
        name: Equals
        nameWithType: VertexLookup.Equals
        qualifiedName: Virgis.VertexLookup.Equals
    isDefinition: true
    commentId: Overload:Virgis.VertexLookup.Equals
  Virgis.VertexLookup.GetHashCode*:
    name:
      CSharp:
      - id: Virgis.VertexLookup.GetHashCode*
        name: GetHashCode
        nameWithType: VertexLookup.GetHashCode
        qualifiedName: Virgis.VertexLookup.GetHashCode
      VB:
      - id: Virgis.VertexLookup.GetHashCode*
        name: GetHashCode
        nameWithType: VertexLookup.GetHashCode
        qualifiedName: Virgis.VertexLookup.GetHashCode
    isDefinition: true
    commentId: Overload:Virgis.VertexLookup.GetHashCode
  Virgis.VertexLookup:
    name:
      CSharp:
      - id: Virgis.VertexLookup
        name: VertexLookup
        nameWithType: VertexLookup
        qualifiedName: Virgis.VertexLookup
      VB:
      - id: Virgis.VertexLookup
        name: VertexLookup
        nameWithType: VertexLookup
        qualifiedName: Virgis.VertexLookup
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.VertexLookup
  Virgis.VertexLookup.CompareTo*:
    name:
      CSharp:
      - id: Virgis.VertexLookup.CompareTo*
        name: CompareTo
        nameWithType: VertexLookup.CompareTo
        qualifiedName: Virgis.VertexLookup.CompareTo
      VB:
      - id: Virgis.VertexLookup.CompareTo*
        name: CompareTo
        nameWithType: VertexLookup.CompareTo
        qualifiedName: Virgis.VertexLookup.CompareTo
    isDefinition: true
    commentId: Overload:Virgis.VertexLookup.CompareTo
  Virgis.IVirgisEntity.Selected*:
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.Selected*
        name: Selected
        nameWithType: IVirgisEntity.Selected
        qualifiedName: Virgis.IVirgisEntity.Selected
      VB:
      - id: Virgis.IVirgisEntity.Selected*
        name: Selected
        nameWithType: IVirgisEntity.Selected
        qualifiedName: Virgis.IVirgisEntity.Selected
    isDefinition: true
    commentId: Overload:Virgis.IVirgisEntity.Selected
  Virgis.IVirgisEntity.UnSelected*:
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.UnSelected*
        name: UnSelected
        nameWithType: IVirgisEntity.UnSelected
        qualifiedName: Virgis.IVirgisEntity.UnSelected
      VB:
      - id: Virgis.IVirgisEntity.UnSelected*
        name: UnSelected
        nameWithType: IVirgisEntity.UnSelected
        qualifiedName: Virgis.IVirgisEntity.UnSelected
    isDefinition: true
    commentId: Overload:Virgis.IVirgisEntity.UnSelected
  Virgis.IVirgisEntity.GetId*:
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.GetId*
        name: GetId
        nameWithType: IVirgisEntity.GetId
        qualifiedName: Virgis.IVirgisEntity.GetId
      VB:
      - id: Virgis.IVirgisEntity.GetId*
        name: GetId
        nameWithType: IVirgisEntity.GetId
        qualifiedName: Virgis.IVirgisEntity.GetId
    isDefinition: true
    commentId: Overload:Virgis.IVirgisEntity.GetId
  Virgis.IVirgisEntity.GetClosest*:
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.GetClosest*
        name: GetClosest
        nameWithType: IVirgisEntity.GetClosest
        qualifiedName: Virgis.IVirgisEntity.GetClosest
      VB:
      - id: Virgis.IVirgisEntity.GetClosest*
        name: GetClosest
        nameWithType: IVirgisEntity.GetClosest
        qualifiedName: Virgis.IVirgisEntity.GetClosest
    isDefinition: true
    commentId: Overload:Virgis.IVirgisEntity.GetClosest
  Virgis.IVirgisEntity.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.MoveAxis*
        name: MoveAxis
        nameWithType: IVirgisEntity.MoveAxis
        qualifiedName: Virgis.IVirgisEntity.MoveAxis
      VB:
      - id: Virgis.IVirgisEntity.MoveAxis*
        name: MoveAxis
        nameWithType: IVirgisEntity.MoveAxis
        qualifiedName: Virgis.IVirgisEntity.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.IVirgisEntity.MoveAxis
  Virgis.IVirgisEntity.Translate*:
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.Translate*
        name: Translate
        nameWithType: IVirgisEntity.Translate
        qualifiedName: Virgis.IVirgisEntity.Translate
      VB:
      - id: Virgis.IVirgisEntity.Translate*
        name: Translate
        nameWithType: IVirgisEntity.Translate
        qualifiedName: Virgis.IVirgisEntity.Translate
    isDefinition: true
    commentId: Overload:Virgis.IVirgisEntity.Translate
  Virgis.IVirgisEntity.MoveTo*:
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.MoveTo*
        name: MoveTo
        nameWithType: IVirgisEntity.MoveTo
        qualifiedName: Virgis.IVirgisEntity.MoveTo
      VB:
      - id: Virgis.IVirgisEntity.MoveTo*
        name: MoveTo
        nameWithType: IVirgisEntity.MoveTo
        qualifiedName: Virgis.IVirgisEntity.MoveTo
    isDefinition: true
    commentId: Overload:Virgis.IVirgisEntity.MoveTo
  Virgis.IVirgisEntity.VertexMove*:
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.VertexMove*
        name: VertexMove
        nameWithType: IVirgisEntity.VertexMove
        qualifiedName: Virgis.IVirgisEntity.VertexMove
      VB:
      - id: Virgis.IVirgisEntity.VertexMove*
        name: VertexMove
        nameWithType: IVirgisEntity.VertexMove
        qualifiedName: Virgis.IVirgisEntity.VertexMove
    isDefinition: true
    commentId: Overload:Virgis.IVirgisEntity.VertexMove
  Virgis.IVirgisEntity.GetLayer*:
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.GetLayer*
        name: GetLayer
        nameWithType: IVirgisEntity.GetLayer
        qualifiedName: Virgis.IVirgisEntity.GetLayer
      VB:
      - id: Virgis.IVirgisEntity.GetLayer*
        name: GetLayer
        nameWithType: IVirgisEntity.GetLayer
        qualifiedName: Virgis.IVirgisEntity.GetLayer
    isDefinition: true
    commentId: Overload:Virgis.IVirgisEntity.GetLayer
  Virgis.IVirgisEntity.Selected(Virgis.SelectionType):
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.Selected(Virgis.SelectionType)
        name: Selected
        nameWithType: IVirgisEntity.Selected
        qualifiedName: Virgis.IVirgisEntity.Selected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionType
        name: SelectionType
        nameWithType: SelectionType
        qualifiedName: Virgis.SelectionType
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisEntity.Selected(Virgis.SelectionType)
        name: Selected
        nameWithType: IVirgisEntity.Selected
        qualifiedName: Virgis.IVirgisEntity.Selected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionType
        name: SelectionType
        nameWithType: SelectionType
        qualifiedName: Virgis.SelectionType
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisEntity
    commentId: M:Virgis.IVirgisEntity.Selected(Virgis.SelectionType)
  Virgis.IVirgisEntity.UnSelected(Virgis.SelectionType):
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.UnSelected(Virgis.SelectionType)
        name: UnSelected
        nameWithType: IVirgisEntity.UnSelected
        qualifiedName: Virgis.IVirgisEntity.UnSelected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionType
        name: SelectionType
        nameWithType: SelectionType
        qualifiedName: Virgis.SelectionType
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisEntity.UnSelected(Virgis.SelectionType)
        name: UnSelected
        nameWithType: IVirgisEntity.UnSelected
        qualifiedName: Virgis.IVirgisEntity.UnSelected
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.SelectionType
        name: SelectionType
        nameWithType: SelectionType
        qualifiedName: Virgis.SelectionType
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisEntity
    commentId: M:Virgis.IVirgisEntity.UnSelected(Virgis.SelectionType)
  Virgis.IVirgisEntity.GetId:
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.GetId
        name: GetId
        nameWithType: IVirgisEntity.GetId
        qualifiedName: Virgis.IVirgisEntity.GetId
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisEntity.GetId
        name: GetId
        nameWithType: IVirgisEntity.GetId
        qualifiedName: Virgis.IVirgisEntity.GetId
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisEntity
    commentId: M:Virgis.IVirgisEntity.GetId
  Virgis.IVirgisEntity.GetClosest(Vector3,System.Guid[]):
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.GetClosest(Vector3,System.Guid[])
        name: GetClosest
        nameWithType: IVirgisEntity.GetClosest
        qualifiedName: Virgis.IVirgisEntity.GetClosest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisEntity.GetClosest(Vector3,System.Guid[])
        name: GetClosest
        nameWithType: IVirgisEntity.GetClosest
        qualifiedName: Virgis.IVirgisEntity.GetClosest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisEntity
    commentId: M:Virgis.IVirgisEntity.GetClosest(Vector3,System.Guid[])
  Virgis.IVirgisEntity.MoveAxis(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.MoveAxis(Virgis.MoveArgs)
        name: MoveAxis
        nameWithType: IVirgisEntity.MoveAxis
        qualifiedName: Virgis.IVirgisEntity.MoveAxis
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisEntity.MoveAxis(Virgis.MoveArgs)
        name: MoveAxis
        nameWithType: IVirgisEntity.MoveAxis
        qualifiedName: Virgis.IVirgisEntity.MoveAxis
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisEntity
    commentId: M:Virgis.IVirgisEntity.MoveAxis(Virgis.MoveArgs)
  Virgis.IVirgisEntity.Translate(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.Translate(Virgis.MoveArgs)
        name: Translate
        nameWithType: IVirgisEntity.Translate
        qualifiedName: Virgis.IVirgisEntity.Translate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisEntity.Translate(Virgis.MoveArgs)
        name: Translate
        nameWithType: IVirgisEntity.Translate
        qualifiedName: Virgis.IVirgisEntity.Translate
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisEntity
    commentId: M:Virgis.IVirgisEntity.Translate(Virgis.MoveArgs)
  Virgis.IVirgisEntity.MoveTo(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.MoveTo(Virgis.MoveArgs)
        name: MoveTo
        nameWithType: IVirgisEntity.MoveTo
        qualifiedName: Virgis.IVirgisEntity.MoveTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisEntity.MoveTo(Virgis.MoveArgs)
        name: MoveTo
        nameWithType: IVirgisEntity.MoveTo
        qualifiedName: Virgis.IVirgisEntity.MoveTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisEntity
    commentId: M:Virgis.IVirgisEntity.MoveTo(Virgis.MoveArgs)
  Virgis.IVirgisEntity.VertexMove(Virgis.MoveArgs):
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.VertexMove(Virgis.MoveArgs)
        name: VertexMove
        nameWithType: IVirgisEntity.VertexMove
        qualifiedName: Virgis.IVirgisEntity.VertexMove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisEntity.VertexMove(Virgis.MoveArgs)
        name: VertexMove
        nameWithType: IVirgisEntity.VertexMove
        qualifiedName: Virgis.IVirgisEntity.VertexMove
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.MoveArgs
        name: MoveArgs
        nameWithType: MoveArgs
        qualifiedName: Virgis.MoveArgs
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisEntity
    commentId: M:Virgis.IVirgisEntity.VertexMove(Virgis.MoveArgs)
  Virgis.IVirgisEntity.GetLayer:
    name:
      CSharp:
      - id: Virgis.IVirgisEntity.GetLayer
        name: GetLayer
        nameWithType: IVirgisEntity.GetLayer
        qualifiedName: Virgis.IVirgisEntity.GetLayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisEntity.GetLayer
        name: GetLayer
        nameWithType: IVirgisEntity.GetLayer
        qualifiedName: Virgis.IVirgisEntity.GetLayer
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisEntity
    commentId: M:Virgis.IVirgisEntity.GetLayer
  Virgis.IVirgisFeature.SetMaterial*:
    name:
      CSharp:
      - id: Virgis.IVirgisFeature.SetMaterial*
        name: SetMaterial
        nameWithType: IVirgisFeature.SetMaterial
        qualifiedName: Virgis.IVirgisFeature.SetMaterial
      VB:
      - id: Virgis.IVirgisFeature.SetMaterial*
        name: SetMaterial
        nameWithType: IVirgisFeature.SetMaterial
        qualifiedName: Virgis.IVirgisFeature.SetMaterial
    isDefinition: true
    commentId: Overload:Virgis.IVirgisFeature.SetMaterial
  Virgis.IVirgisFeature.AddVertex*:
    name:
      CSharp:
      - id: Virgis.IVirgisFeature.AddVertex*
        name: AddVertex
        nameWithType: IVirgisFeature.AddVertex
        qualifiedName: Virgis.IVirgisFeature.AddVertex
      VB:
      - id: Virgis.IVirgisFeature.AddVertex*
        name: AddVertex
        nameWithType: IVirgisFeature.AddVertex
        qualifiedName: Virgis.IVirgisFeature.AddVertex
    isDefinition: true
    commentId: Overload:Virgis.IVirgisFeature.AddVertex
  Virgis.IVirgisFeature.RemoveVertex*:
    name:
      CSharp:
      - id: Virgis.IVirgisFeature.RemoveVertex*
        name: RemoveVertex
        nameWithType: IVirgisFeature.RemoveVertex
        qualifiedName: Virgis.IVirgisFeature.RemoveVertex
      VB:
      - id: Virgis.IVirgisFeature.RemoveVertex*
        name: RemoveVertex
        nameWithType: IVirgisFeature.RemoveVertex
        qualifiedName: Virgis.IVirgisFeature.RemoveVertex
    isDefinition: true
    commentId: Overload:Virgis.IVirgisFeature.RemoveVertex
  T:
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: true
  '{T}':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: false
    definition: T
    commentId: '!:T'
  Virgis.IVirgisFeature.GetGeometry*:
    name:
      CSharp:
      - id: Virgis.IVirgisFeature.GetGeometry*
        name: GetGeometry
        nameWithType: IVirgisFeature.GetGeometry
        qualifiedName: Virgis.IVirgisFeature.GetGeometry
      VB:
      - id: Virgis.IVirgisFeature.GetGeometry*
        name: GetGeometry
        nameWithType: IVirgisFeature.GetGeometry
        qualifiedName: Virgis.IVirgisFeature.GetGeometry
    isDefinition: true
    commentId: Overload:Virgis.IVirgisFeature.GetGeometry
  Virgis.IVirgisFeature.GetMetadata*:
    name:
      CSharp:
      - id: Virgis.IVirgisFeature.GetMetadata*
        name: GetMetadata
        nameWithType: IVirgisFeature.GetMetadata
        qualifiedName: Virgis.IVirgisFeature.GetMetadata
      VB:
      - id: Virgis.IVirgisFeature.GetMetadata*
        name: GetMetadata
        nameWithType: IVirgisFeature.GetMetadata
        qualifiedName: Virgis.IVirgisFeature.GetMetadata
    isDefinition: true
    commentId: Overload:Virgis.IVirgisFeature.GetMetadata
  Virgis.IVirgisFeature.SetMetadata*:
    name:
      CSharp:
      - id: Virgis.IVirgisFeature.SetMetadata*
        name: SetMetadata
        nameWithType: IVirgisFeature.SetMetadata
        qualifiedName: Virgis.IVirgisFeature.SetMetadata
      VB:
      - id: Virgis.IVirgisFeature.SetMetadata*
        name: SetMetadata
        nameWithType: IVirgisFeature.SetMetadata
        qualifiedName: Virgis.IVirgisFeature.SetMetadata
    isDefinition: true
    commentId: Overload:Virgis.IVirgisFeature.SetMetadata
  Virgis.IVirgisFeature.Hover*:
    name:
      CSharp:
      - id: Virgis.IVirgisFeature.Hover*
        name: Hover
        nameWithType: IVirgisFeature.Hover
        qualifiedName: Virgis.IVirgisFeature.Hover
      VB:
      - id: Virgis.IVirgisFeature.Hover*
        name: Hover
        nameWithType: IVirgisFeature.Hover
        qualifiedName: Virgis.IVirgisFeature.Hover
    isDefinition: true
    commentId: Overload:Virgis.IVirgisFeature.Hover
  Virgis.IVirgisFeature.UnHover*:
    name:
      CSharp:
      - id: Virgis.IVirgisFeature.UnHover*
        name: UnHover
        nameWithType: IVirgisFeature.UnHover
        qualifiedName: Virgis.IVirgisFeature.UnHover
      VB:
      - id: Virgis.IVirgisFeature.UnHover*
        name: UnHover
        nameWithType: IVirgisFeature.UnHover
        qualifiedName: Virgis.IVirgisFeature.UnHover
    isDefinition: true
    commentId: Overload:Virgis.IVirgisFeature.UnHover
  Transform:
    name:
      CSharp:
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      VB:
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
    isDefinition: true
    commentId: '!:Transform'
  Virgis.VirgisFeature.SetMaterial*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.SetMaterial*
        name: SetMaterial
        nameWithType: VirgisFeature.SetMaterial
        qualifiedName: Virgis.VirgisFeature.SetMaterial
      VB:
      - id: Virgis.VirgisFeature.SetMaterial*
        name: SetMaterial
        nameWithType: VirgisFeature.SetMaterial
        qualifiedName: Virgis.VirgisFeature.SetMaterial
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.SetMaterial
  Virgis.IVirgisFeature.SetMaterial(Material,Material):
    name:
      CSharp:
      - id: Virgis.IVirgisFeature.SetMaterial(Material,Material)
        name: SetMaterial
        nameWithType: IVirgisFeature.SetMaterial
        qualifiedName: Virgis.IVirgisFeature.SetMaterial
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisFeature.SetMaterial(Material,Material)
        name: SetMaterial
        nameWithType: IVirgisFeature.SetMaterial
        qualifiedName: Virgis.IVirgisFeature.SetMaterial
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisFeature
    commentId: M:Virgis.IVirgisFeature.SetMaterial(Material,Material)
  Virgis.VirgisFeature.Selected*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.Selected*
        name: Selected
        nameWithType: VirgisFeature.Selected
        qualifiedName: Virgis.VirgisFeature.Selected
      VB:
      - id: Virgis.VirgisFeature.Selected*
        name: Selected
        nameWithType: VirgisFeature.Selected
        qualifiedName: Virgis.VirgisFeature.Selected
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.Selected
  Virgis.VirgisFeature.UnSelected*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.UnSelected*
        name: UnSelected
        nameWithType: VirgisFeature.UnSelected
        qualifiedName: Virgis.VirgisFeature.UnSelected
      VB:
      - id: Virgis.VirgisFeature.UnSelected*
        name: UnSelected
        nameWithType: VirgisFeature.UnSelected
        qualifiedName: Virgis.VirgisFeature.UnSelected
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.UnSelected
  Virgis.VirgisFeature.MoveTo*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.MoveTo*
        name: MoveTo
        nameWithType: VirgisFeature.MoveTo
        qualifiedName: Virgis.VirgisFeature.MoveTo
      VB:
      - id: Virgis.VirgisFeature.MoveTo*
        name: MoveTo
        nameWithType: VirgisFeature.MoveTo
        qualifiedName: Virgis.VirgisFeature.MoveTo
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.MoveTo
  Virgis.VirgisFeature.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.MoveAxis*
        name: MoveAxis
        nameWithType: VirgisFeature.MoveAxis
        qualifiedName: Virgis.VirgisFeature.MoveAxis
      VB:
      - id: Virgis.VirgisFeature.MoveAxis*
        name: MoveAxis
        nameWithType: VirgisFeature.MoveAxis
        qualifiedName: Virgis.VirgisFeature.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.MoveAxis
  Virgis.VirgisFeature.Translate*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.Translate*
        name: Translate
        nameWithType: VirgisFeature.Translate
        qualifiedName: Virgis.VirgisFeature.Translate
      VB:
      - id: Virgis.VirgisFeature.Translate*
        name: Translate
        nameWithType: VirgisFeature.Translate
        qualifiedName: Virgis.VirgisFeature.Translate
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.Translate
  Virgis.VirgisFeature.VertexMove*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.VertexMove*
        name: VertexMove
        nameWithType: VirgisFeature.VertexMove
        qualifiedName: Virgis.VirgisFeature.VertexMove
      VB:
      - id: Virgis.VirgisFeature.VertexMove*
        name: VertexMove
        nameWithType: VirgisFeature.VertexMove
        qualifiedName: Virgis.VirgisFeature.VertexMove
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.VertexMove
  Virgis.VirgisFeature.GetClosest*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.GetClosest*
        name: GetClosest
        nameWithType: VirgisFeature.GetClosest
        qualifiedName: Virgis.VirgisFeature.GetClosest
      VB:
      - id: Virgis.VirgisFeature.GetClosest*
        name: GetClosest
        nameWithType: VirgisFeature.GetClosest
        qualifiedName: Virgis.VirgisFeature.GetClosest
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.GetClosest
  Virgis.VirgisFeature.AddVertex*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.AddVertex*
        name: AddVertex
        nameWithType: VirgisFeature.AddVertex
        qualifiedName: Virgis.VirgisFeature.AddVertex
      VB:
      - id: Virgis.VirgisFeature.AddVertex*
        name: AddVertex
        nameWithType: VirgisFeature.AddVertex
        qualifiedName: Virgis.VirgisFeature.AddVertex
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.AddVertex
  Virgis.IVirgisFeature.AddVertex(Vector3):
    name:
      CSharp:
      - id: Virgis.IVirgisFeature.AddVertex(Vector3)
        name: AddVertex
        nameWithType: IVirgisFeature.AddVertex
        qualifiedName: Virgis.IVirgisFeature.AddVertex
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisFeature.AddVertex(Vector3)
        name: AddVertex
        nameWithType: IVirgisFeature.AddVertex
        qualifiedName: Virgis.IVirgisFeature.AddVertex
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisFeature
    commentId: M:Virgis.IVirgisFeature.AddVertex(Vector3)
  Virgis.VirgisFeature.RemoveVertex*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.RemoveVertex*
        name: RemoveVertex
        nameWithType: VirgisFeature.RemoveVertex
        qualifiedName: Virgis.VirgisFeature.RemoveVertex
      VB:
      - id: Virgis.VirgisFeature.RemoveVertex*
        name: RemoveVertex
        nameWithType: VirgisFeature.RemoveVertex
        qualifiedName: Virgis.VirgisFeature.RemoveVertex
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.RemoveVertex
  Virgis.IVirgisFeature.RemoveVertex(Virgis.VirgisFeature):
    name:
      CSharp:
      - id: Virgis.IVirgisFeature.RemoveVertex(Virgis.VirgisFeature)
        name: RemoveVertex
        nameWithType: IVirgisFeature.RemoveVertex
        qualifiedName: Virgis.IVirgisFeature.RemoveVertex
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisFeature
        name: VirgisFeature
        nameWithType: VirgisFeature
        qualifiedName: Virgis.VirgisFeature
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisFeature.RemoveVertex(Virgis.VirgisFeature)
        name: RemoveVertex
        nameWithType: IVirgisFeature.RemoveVertex
        qualifiedName: Virgis.IVirgisFeature.RemoveVertex
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Virgis.VirgisFeature
        name: VirgisFeature
        nameWithType: VirgisFeature
        qualifiedName: Virgis.VirgisFeature
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisFeature
    commentId: M:Virgis.IVirgisFeature.RemoveVertex(Virgis.VirgisFeature)
  Virgis.VirgisFeature.GetGeometry*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.GetGeometry*
        name: GetGeometry
        nameWithType: VirgisFeature.GetGeometry
        qualifiedName: Virgis.VirgisFeature.GetGeometry
      VB:
      - id: Virgis.VirgisFeature.GetGeometry*
        name: GetGeometry
        nameWithType: VirgisFeature.GetGeometry
        qualifiedName: Virgis.VirgisFeature.GetGeometry
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.GetGeometry
  Virgis.IVirgisFeature.GetGeometry``1:
    name:
      CSharp:
      - id: Virgis.IVirgisFeature.GetGeometry``1
        name: GetGeometry<T>
        nameWithType: IVirgisFeature.GetGeometry<T>
        qualifiedName: Virgis.IVirgisFeature.GetGeometry<T>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisFeature.GetGeometry``1
        name: GetGeometry(Of T)
        nameWithType: IVirgisFeature.GetGeometry(Of T)
        qualifiedName: Virgis.IVirgisFeature.GetGeometry(Of T)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisFeature
    commentId: M:Virgis.IVirgisFeature.GetGeometry``1
  Virgis.VirgisFeature.GetId*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.GetId*
        name: GetId
        nameWithType: VirgisFeature.GetId
        qualifiedName: Virgis.VirgisFeature.GetId
      VB:
      - id: Virgis.VirgisFeature.GetId*
        name: GetId
        nameWithType: VirgisFeature.GetId
        qualifiedName: Virgis.VirgisFeature.GetId
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.GetId
  Virgis.VirgisFeature.GetMetadata*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.GetMetadata*
        name: GetMetadata
        nameWithType: VirgisFeature.GetMetadata
        qualifiedName: Virgis.VirgisFeature.GetMetadata
      VB:
      - id: Virgis.VirgisFeature.GetMetadata*
        name: GetMetadata
        nameWithType: VirgisFeature.GetMetadata
        qualifiedName: Virgis.VirgisFeature.GetMetadata
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.GetMetadata
  Virgis.IVirgisFeature.GetMetadata:
    name:
      CSharp:
      - id: Virgis.IVirgisFeature.GetMetadata
        name: GetMetadata
        nameWithType: IVirgisFeature.GetMetadata
        qualifiedName: Virgis.IVirgisFeature.GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisFeature.GetMetadata
        name: GetMetadata
        nameWithType: IVirgisFeature.GetMetadata
        qualifiedName: Virgis.IVirgisFeature.GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisFeature
    commentId: M:Virgis.IVirgisFeature.GetMetadata
  Virgis.VirgisFeature.SetMetadata*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.SetMetadata*
        name: SetMetadata
        nameWithType: VirgisFeature.SetMetadata
        qualifiedName: Virgis.VirgisFeature.SetMetadata
      VB:
      - id: Virgis.VirgisFeature.SetMetadata*
        name: SetMetadata
        nameWithType: VirgisFeature.SetMetadata
        qualifiedName: Virgis.VirgisFeature.SetMetadata
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.SetMetadata
  Virgis.IVirgisFeature.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object}):
    name:
      CSharp:
      - id: Virgis.IVirgisFeature.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
        name: SetMetadata
        nameWithType: IVirgisFeature.SetMetadata
        qualifiedName: Virgis.IVirgisFeature.SetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisFeature.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
        name: SetMetadata
        nameWithType: IVirgisFeature.SetMetadata
        qualifiedName: Virgis.IVirgisFeature.SetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisFeature
    commentId: M:Virgis.IVirgisFeature.SetMetadata(System.Collections.Generic.Dictionary{System.String,System.Object})
  Virgis.VirgisFeature.Equals*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.Equals*
        name: Equals
        nameWithType: VirgisFeature.Equals
        qualifiedName: Virgis.VirgisFeature.Equals
      VB:
      - id: Virgis.VirgisFeature.Equals*
        name: Equals
        nameWithType: VirgisFeature.Equals
        qualifiedName: Virgis.VirgisFeature.Equals
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.Equals
  Virgis.VirgisFeature.GetHashCode*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.GetHashCode*
        name: GetHashCode
        nameWithType: VirgisFeature.GetHashCode
        qualifiedName: Virgis.VirgisFeature.GetHashCode
      VB:
      - id: Virgis.VirgisFeature.GetHashCode*
        name: GetHashCode
        nameWithType: VirgisFeature.GetHashCode
        qualifiedName: Virgis.VirgisFeature.GetHashCode
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.GetHashCode
  Virgis.VirgisFeature.Hover*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.Hover*
        name: Hover
        nameWithType: VirgisFeature.Hover
        qualifiedName: Virgis.VirgisFeature.Hover
      VB:
      - id: Virgis.VirgisFeature.Hover*
        name: Hover
        nameWithType: VirgisFeature.Hover
        qualifiedName: Virgis.VirgisFeature.Hover
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.Hover
  Virgis.IVirgisFeature.Hover:
    name:
      CSharp:
      - id: Virgis.IVirgisFeature.Hover
        name: Hover
        nameWithType: IVirgisFeature.Hover
        qualifiedName: Virgis.IVirgisFeature.Hover
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisFeature.Hover
        name: Hover
        nameWithType: IVirgisFeature.Hover
        qualifiedName: Virgis.IVirgisFeature.Hover
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisFeature
    commentId: M:Virgis.IVirgisFeature.Hover
  Virgis.VirgisFeature.UnHover*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.UnHover*
        name: UnHover
        nameWithType: VirgisFeature.UnHover
        qualifiedName: Virgis.VirgisFeature.UnHover
      VB:
      - id: Virgis.VirgisFeature.UnHover*
        name: UnHover
        nameWithType: VirgisFeature.UnHover
        qualifiedName: Virgis.VirgisFeature.UnHover
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.UnHover
  Virgis.IVirgisFeature.UnHover:
    name:
      CSharp:
      - id: Virgis.IVirgisFeature.UnHover
        name: UnHover
        nameWithType: IVirgisFeature.UnHover
        qualifiedName: Virgis.IVirgisFeature.UnHover
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisFeature.UnHover
        name: UnHover
        nameWithType: IVirgisFeature.UnHover
        qualifiedName: Virgis.IVirgisFeature.UnHover
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisFeature
    commentId: M:Virgis.IVirgisFeature.UnHover
  Virgis.VirgisFeature.GetLayer*:
    name:
      CSharp:
      - id: Virgis.VirgisFeature.GetLayer*
        name: GetLayer
        nameWithType: VirgisFeature.GetLayer
        qualifiedName: Virgis.VirgisFeature.GetLayer
      VB:
      - id: Virgis.VirgisFeature.GetLayer*
        name: GetLayer
        nameWithType: VirgisFeature.GetLayer
        qualifiedName: Virgis.VirgisFeature.GetLayer
    isDefinition: true
    commentId: Overload:Virgis.VirgisFeature.GetLayer
  Virgis.IVirgisLayer.featureType*:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.featureType*
        name: featureType
        nameWithType: IVirgisLayer.featureType
        qualifiedName: Virgis.IVirgisLayer.featureType
      VB:
      - id: Virgis.IVirgisLayer.featureType*
        name: featureType
        nameWithType: IVirgisLayer.featureType
        qualifiedName: Virgis.IVirgisLayer.featureType
    isDefinition: true
    commentId: Overload:Virgis.IVirgisLayer.featureType
  Virgis.IVirgisLayer.AddFeature*:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.AddFeature*
        name: AddFeature
        nameWithType: IVirgisLayer.AddFeature
        qualifiedName: Virgis.IVirgisLayer.AddFeature
      VB:
      - id: Virgis.IVirgisLayer.AddFeature*
        name: AddFeature
        nameWithType: IVirgisLayer.AddFeature
        qualifiedName: Virgis.IVirgisLayer.AddFeature
    isDefinition: true
    commentId: Overload:Virgis.IVirgisLayer.AddFeature
  Virgis.IVirgisLayer.Draw*:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.Draw*
        name: Draw
        nameWithType: IVirgisLayer.Draw
        qualifiedName: Virgis.IVirgisLayer.Draw
      VB:
      - id: Virgis.IVirgisLayer.Draw*
        name: Draw
        nameWithType: IVirgisLayer.Draw
        qualifiedName: Virgis.IVirgisLayer.Draw
    isDefinition: true
    commentId: Overload:Virgis.IVirgisLayer.Draw
  Virgis.IVirgisLayer.CheckPoint*:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.CheckPoint*
        name: CheckPoint
        nameWithType: IVirgisLayer.CheckPoint
        qualifiedName: Virgis.IVirgisLayer.CheckPoint
      VB:
      - id: Virgis.IVirgisLayer.CheckPoint*
        name: CheckPoint
        nameWithType: IVirgisLayer.CheckPoint
        qualifiedName: Virgis.IVirgisLayer.CheckPoint
    isDefinition: true
    commentId: Overload:Virgis.IVirgisLayer.CheckPoint
  Virgis.IVirgisLayer.Save*:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.Save*
        name: Save
        nameWithType: IVirgisLayer.Save
        qualifiedName: Virgis.IVirgisLayer.Save
      VB:
      - id: Virgis.IVirgisLayer.Save*
        name: Save
        nameWithType: IVirgisLayer.Save
        qualifiedName: Virgis.IVirgisLayer.Save
    isDefinition: true
    commentId: Overload:Virgis.IVirgisLayer.Save
  Virgis.IVirgisLayer.GetFeature*:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.GetFeature*
        name: GetFeature
        nameWithType: IVirgisLayer.GetFeature
        qualifiedName: Virgis.IVirgisLayer.GetFeature
      VB:
      - id: Virgis.IVirgisLayer.GetFeature*
        name: GetFeature
        nameWithType: IVirgisLayer.GetFeature
        qualifiedName: Virgis.IVirgisLayer.GetFeature
    isDefinition: true
    commentId: Overload:Virgis.IVirgisLayer.GetFeature
  Virgis.IVirgisLayer.GetFeatureShape*:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.GetFeatureShape*
        name: GetFeatureShape
        nameWithType: IVirgisLayer.GetFeatureShape
        qualifiedName: Virgis.IVirgisLayer.GetFeatureShape
      VB:
      - id: Virgis.IVirgisLayer.GetFeatureShape*
        name: GetFeatureShape
        nameWithType: IVirgisLayer.GetFeatureShape
        qualifiedName: Virgis.IVirgisLayer.GetFeatureShape
    isDefinition: true
    commentId: Overload:Virgis.IVirgisLayer.GetFeatureShape
  Virgis.IVirgisLayer.GetMetadata*:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.GetMetadata*
        name: GetMetadata
        nameWithType: IVirgisLayer.GetMetadata
        qualifiedName: Virgis.IVirgisLayer.GetMetadata
      VB:
      - id: Virgis.IVirgisLayer.GetMetadata*
        name: GetMetadata
        nameWithType: IVirgisLayer.GetMetadata
        qualifiedName: Virgis.IVirgisLayer.GetMetadata
    isDefinition: true
    commentId: Overload:Virgis.IVirgisLayer.GetMetadata
  Virgis.IVirgisLayer.SetMetadata*:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.SetMetadata*
        name: SetMetadata
        nameWithType: IVirgisLayer.SetMetadata
        qualifiedName: Virgis.IVirgisLayer.SetMetadata
      VB:
      - id: Virgis.IVirgisLayer.SetMetadata*
        name: SetMetadata
        nameWithType: IVirgisLayer.SetMetadata
        qualifiedName: Virgis.IVirgisLayer.SetMetadata
    isDefinition: true
    commentId: Overload:Virgis.IVirgisLayer.SetMetadata
  Virgis.IVirgisLayer.SetVisible*:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.SetVisible*
        name: SetVisible
        nameWithType: IVirgisLayer.SetVisible
        qualifiedName: Virgis.IVirgisLayer.SetVisible
      VB:
      - id: Virgis.IVirgisLayer.SetVisible*
        name: SetVisible
        nameWithType: IVirgisLayer.SetVisible
        qualifiedName: Virgis.IVirgisLayer.SetVisible
    isDefinition: true
    commentId: Overload:Virgis.IVirgisLayer.SetVisible
  Virgis.IVirgisLayer.IsVisible*:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.IsVisible*
        name: IsVisible
        nameWithType: IVirgisLayer.IsVisible
        qualifiedName: Virgis.IVirgisLayer.IsVisible
      VB:
      - id: Virgis.IVirgisLayer.IsVisible*
        name: IsVisible
        nameWithType: IVirgisLayer.IsVisible
        qualifiedName: Virgis.IVirgisLayer.IsVisible
    isDefinition: true
    commentId: Overload:Virgis.IVirgisLayer.IsVisible
  Virgis.IVirgisLayer.SetEditable*:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.SetEditable*
        name: SetEditable
        nameWithType: IVirgisLayer.SetEditable
        qualifiedName: Virgis.IVirgisLayer.SetEditable
      VB:
      - id: Virgis.IVirgisLayer.SetEditable*
        name: SetEditable
        nameWithType: IVirgisLayer.SetEditable
        qualifiedName: Virgis.IVirgisLayer.SetEditable
    isDefinition: true
    commentId: Overload:Virgis.IVirgisLayer.SetEditable
  Virgis.IVirgisLayer.IsEditable*:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.IsEditable*
        name: IsEditable
        nameWithType: IVirgisLayer.IsEditable
        qualifiedName: Virgis.IVirgisLayer.IsEditable
      VB:
      - id: Virgis.IVirgisLayer.IsEditable*
        name: IsEditable
        nameWithType: IVirgisLayer.IsEditable
        qualifiedName: Virgis.IVirgisLayer.IsEditable
    isDefinition: true
    commentId: Overload:Virgis.IVirgisLayer.IsEditable
  Virgis.VirgisLayer.featureType*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.featureType*
        name: featureType
        nameWithType: VirgisLayer.featureType
        qualifiedName: Virgis.VirgisLayer.featureType
      VB:
      - id: Virgis.VirgisLayer.featureType*
        name: featureType
        nameWithType: VirgisLayer.featureType
        qualifiedName: Virgis.VirgisLayer.featureType
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer.featureType
  Virgis.IVirgisLayer.featureType:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.featureType
        name: featureType
        nameWithType: IVirgisLayer.featureType
        qualifiedName: Virgis.IVirgisLayer.featureType
      VB:
      - id: Virgis.IVirgisLayer.featureType
        name: featureType
        nameWithType: IVirgisLayer.featureType
        qualifiedName: Virgis.IVirgisLayer.featureType
    isDefinition: true
    parent: Virgis.IVirgisLayer
    commentId: P:Virgis.IVirgisLayer.featureType
  Virgis.VirgisLayer.AddFeature*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.AddFeature*
        name: AddFeature
        nameWithType: VirgisLayer.AddFeature
        qualifiedName: Virgis.VirgisLayer.AddFeature
      VB:
      - id: Virgis.VirgisLayer.AddFeature*
        name: AddFeature
        nameWithType: VirgisLayer.AddFeature
        qualifiedName: Virgis.VirgisLayer.AddFeature
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer.AddFeature
  Virgis.IVirgisLayer.AddFeature(Vector3[]):
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.AddFeature(Vector3[])
        name: AddFeature
        nameWithType: IVirgisLayer.AddFeature
        qualifiedName: Virgis.IVirgisLayer.AddFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisLayer.AddFeature(Vector3[])
        name: AddFeature
        nameWithType: IVirgisLayer.AddFeature
        qualifiedName: Virgis.IVirgisLayer.AddFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisLayer
    commentId: M:Virgis.IVirgisLayer.AddFeature(Vector3[])
  Virgis.VirgisLayer._addFeature*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer._addFeature*
        name: _addFeature
        nameWithType: VirgisLayer._addFeature
        qualifiedName: Virgis.VirgisLayer._addFeature
      VB:
      - id: Virgis.VirgisLayer._addFeature*
        name: _addFeature
        nameWithType: VirgisLayer._addFeature
        qualifiedName: Virgis.VirgisLayer._addFeature
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer._addFeature
  Virgis.VirgisLayer.Draw*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.Draw*
        name: Draw
        nameWithType: VirgisLayer.Draw
        qualifiedName: Virgis.VirgisLayer.Draw
      VB:
      - id: Virgis.VirgisLayer.Draw*
        name: Draw
        nameWithType: VirgisLayer.Draw
        qualifiedName: Virgis.VirgisLayer.Draw
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer.Draw
  Virgis.IVirgisLayer.Draw:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.Draw
        name: Draw
        nameWithType: IVirgisLayer.Draw
        qualifiedName: Virgis.IVirgisLayer.Draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisLayer.Draw
        name: Draw
        nameWithType: IVirgisLayer.Draw
        qualifiedName: Virgis.IVirgisLayer.Draw
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisLayer
    commentId: M:Virgis.IVirgisLayer.Draw
  Virgis.VirgisLayer._draw*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer._draw*
        name: _draw
        nameWithType: VirgisLayer._draw
        qualifiedName: Virgis.VirgisLayer._draw
      VB:
      - id: Virgis.VirgisLayer._draw*
        name: _draw
        nameWithType: VirgisLayer._draw
        qualifiedName: Virgis.VirgisLayer._draw
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer._draw
  Virgis.VirgisLayer.CheckPoint*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.CheckPoint*
        name: CheckPoint
        nameWithType: VirgisLayer.CheckPoint
        qualifiedName: Virgis.VirgisLayer.CheckPoint
      VB:
      - id: Virgis.VirgisLayer.CheckPoint*
        name: CheckPoint
        nameWithType: VirgisLayer.CheckPoint
        qualifiedName: Virgis.VirgisLayer.CheckPoint
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer.CheckPoint
  Virgis.IVirgisLayer.CheckPoint:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.CheckPoint
        name: CheckPoint
        nameWithType: IVirgisLayer.CheckPoint
        qualifiedName: Virgis.IVirgisLayer.CheckPoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisLayer.CheckPoint
        name: CheckPoint
        nameWithType: IVirgisLayer.CheckPoint
        qualifiedName: Virgis.IVirgisLayer.CheckPoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisLayer
    commentId: M:Virgis.IVirgisLayer.CheckPoint
  Virgis.VirgisLayer._checkpoint*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer._checkpoint*
        name: _checkpoint
        nameWithType: VirgisLayer._checkpoint
        qualifiedName: Virgis.VirgisLayer._checkpoint
      VB:
      - id: Virgis.VirgisLayer._checkpoint*
        name: _checkpoint
        nameWithType: VirgisLayer._checkpoint
        qualifiedName: Virgis.VirgisLayer._checkpoint
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer._checkpoint
  Virgis.VirgisLayer.Save*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.Save*
        name: Save
        nameWithType: VirgisLayer.Save
        qualifiedName: Virgis.VirgisLayer.Save
      VB:
      - id: Virgis.VirgisLayer.Save*
        name: Save
        nameWithType: VirgisLayer.Save
        qualifiedName: Virgis.VirgisLayer.Save
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer.Save
  Virgis.IVirgisLayer.Save:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.Save
        name: Save
        nameWithType: IVirgisLayer.Save
        qualifiedName: Virgis.IVirgisLayer.Save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisLayer.Save
        name: Save
        nameWithType: IVirgisLayer.Save
        qualifiedName: Virgis.IVirgisLayer.Save
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisLayer
    commentId: M:Virgis.IVirgisLayer.Save
  Virgis.VirgisLayer._save*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer._save*
        name: _save
        nameWithType: VirgisLayer._save
        qualifiedName: Virgis.VirgisLayer._save
      VB:
      - id: Virgis.VirgisLayer._save*
        name: _save
        nameWithType: VirgisLayer._save
        qualifiedName: Virgis.VirgisLayer._save
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer._save
  Virgis.VirgisLayer.Translate*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.Translate*
        name: Translate
        nameWithType: VirgisLayer.Translate
        qualifiedName: Virgis.VirgisLayer.Translate
      VB:
      - id: Virgis.VirgisLayer.Translate*
        name: Translate
        nameWithType: VirgisLayer.Translate
        qualifiedName: Virgis.VirgisLayer.Translate
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer.Translate
  Virgis.VirgisLayer.MoveAxis*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.MoveAxis*
        name: MoveAxis
        nameWithType: VirgisLayer.MoveAxis
        qualifiedName: Virgis.VirgisLayer.MoveAxis
      VB:
      - id: Virgis.VirgisLayer.MoveAxis*
        name: MoveAxis
        nameWithType: VirgisLayer.MoveAxis
        qualifiedName: Virgis.VirgisLayer.MoveAxis
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer.MoveAxis
  Virgis.VirgisLayer.MoveTo*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.MoveTo*
        name: MoveTo
        nameWithType: VirgisLayer.MoveTo
        qualifiedName: Virgis.VirgisLayer.MoveTo
      VB:
      - id: Virgis.VirgisLayer.MoveTo*
        name: MoveTo
        nameWithType: VirgisLayer.MoveTo
        qualifiedName: Virgis.VirgisLayer.MoveTo
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer.MoveTo
  Virgis.VirgisLayer.VertexMove*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.VertexMove*
        name: VertexMove
        nameWithType: VirgisLayer.VertexMove
        qualifiedName: Virgis.VirgisLayer.VertexMove
      VB:
      - id: Virgis.VirgisLayer.VertexMove*
        name: VertexMove
        nameWithType: VirgisLayer.VertexMove
        qualifiedName: Virgis.VirgisLayer.VertexMove
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer.VertexMove
  Virgis.VirgisLayer.Selected*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.Selected*
        name: Selected
        nameWithType: VirgisLayer.Selected
        qualifiedName: Virgis.VirgisLayer.Selected
      VB:
      - id: Virgis.VirgisLayer.Selected*
        name: Selected
        nameWithType: VirgisLayer.Selected
        qualifiedName: Virgis.VirgisLayer.Selected
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer.Selected
  Virgis.VirgisLayer.UnSelected*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.UnSelected*
        name: UnSelected
        nameWithType: VirgisLayer.UnSelected
        qualifiedName: Virgis.VirgisLayer.UnSelected
      VB:
      - id: Virgis.VirgisLayer.UnSelected*
        name: UnSelected
        nameWithType: VirgisLayer.UnSelected
        qualifiedName: Virgis.VirgisLayer.UnSelected
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer.UnSelected
  Virgis.VirgisLayer.GetClosest*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.GetClosest*
        name: GetClosest
        nameWithType: VirgisLayer.GetClosest
        qualifiedName: Virgis.VirgisLayer.GetClosest
      VB:
      - id: Virgis.VirgisLayer.GetClosest*
        name: GetClosest
        nameWithType: VirgisLayer.GetClosest
        qualifiedName: Virgis.VirgisLayer.GetClosest
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer.GetClosest
  Virgis.VirgisLayer.GetFeature*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.GetFeature*
        name: GetFeature
        nameWithType: VirgisLayer.GetFeature
        qualifiedName: Virgis.VirgisLayer.GetFeature
      VB:
      - id: Virgis.VirgisLayer.GetFeature*
        name: GetFeature
        nameWithType: VirgisLayer.GetFeature
        qualifiedName: Virgis.VirgisLayer.GetFeature
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer.GetFeature
  Virgis.IVirgisLayer.GetFeature(System.Guid):
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.GetFeature(System.Guid)
        name: GetFeature
        nameWithType: IVirgisLayer.GetFeature
        qualifiedName: Virgis.IVirgisLayer.GetFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisLayer.GetFeature(System.Guid)
        name: GetFeature
        nameWithType: IVirgisLayer.GetFeature
        qualifiedName: Virgis.IVirgisLayer.GetFeature
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Guid
        name: Guid
        nameWithType: Guid
        qualifiedName: System.Guid
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisLayer
    commentId: M:Virgis.IVirgisLayer.GetFeature(System.Guid)
  Virgis.VirgisLayer.GetId*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.GetId*
        name: GetId
        nameWithType: VirgisLayer.GetId
        qualifiedName: Virgis.VirgisLayer.GetId
      VB:
      - id: Virgis.VirgisLayer.GetId*
        name: GetId
        nameWithType: VirgisLayer.GetId
        qualifiedName: Virgis.VirgisLayer.GetId
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer.GetId
  Virgis.VirgisLayer.GetMetadata*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.GetMetadata*
        name: GetMetadata
        nameWithType: VirgisLayer.GetMetadata
        qualifiedName: Virgis.VirgisLayer.GetMetadata
      VB:
      - id: Virgis.VirgisLayer.GetMetadata*
        name: GetMetadata
        nameWithType: VirgisLayer.GetMetadata
        qualifiedName: Virgis.VirgisLayer.GetMetadata
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer.GetMetadata
  Virgis.IVirgisLayer.GetMetadata:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.GetMetadata
        name: GetMetadata
        nameWithType: IVirgisLayer.GetMetadata
        qualifiedName: Virgis.IVirgisLayer.GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisLayer.GetMetadata
        name: GetMetadata
        nameWithType: IVirgisLayer.GetMetadata
        qualifiedName: Virgis.IVirgisLayer.GetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisLayer
    commentId: M:Virgis.IVirgisLayer.GetMetadata
  Virgis.VirgisLayer.SetMetadata*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.SetMetadata*
        name: SetMetadata
        nameWithType: VirgisLayer.SetMetadata
        qualifiedName: Virgis.VirgisLayer.SetMetadata
      VB:
      - id: Virgis.VirgisLayer.SetMetadata*
        name: SetMetadata
        nameWithType: VirgisLayer.SetMetadata
        qualifiedName: Virgis.VirgisLayer.SetMetadata
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer.SetMetadata
  Virgis.IVirgisLayer.SetMetadata(RecordSet):
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.SetMetadata(RecordSet)
        name: SetMetadata
        nameWithType: IVirgisLayer.SetMetadata
        qualifiedName: Virgis.IVirgisLayer.SetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisLayer.SetMetadata(RecordSet)
        name: SetMetadata
        nameWithType: IVirgisLayer.SetMetadata
        qualifiedName: Virgis.IVirgisLayer.SetMetadata
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RecordSet
        name: RecordSet
        nameWithType: RecordSet
        qualifiedName: RecordSet
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisLayer
    commentId: M:Virgis.IVirgisLayer.SetMetadata(RecordSet)
  Virgis.VirgisLayer.GetFeatureShape*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.GetFeatureShape*
        name: GetFeatureShape
        nameWithType: VirgisLayer.GetFeatureShape
        qualifiedName: Virgis.VirgisLayer.GetFeatureShape
      VB:
      - id: Virgis.VirgisLayer.GetFeatureShape*
        name: GetFeatureShape
        nameWithType: VirgisLayer.GetFeatureShape
        qualifiedName: Virgis.VirgisLayer.GetFeatureShape
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer.GetFeatureShape
  Virgis.IVirgisLayer.GetFeatureShape:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.GetFeatureShape
        name: GetFeatureShape
        nameWithType: IVirgisLayer.GetFeatureShape
        qualifiedName: Virgis.IVirgisLayer.GetFeatureShape
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisLayer.GetFeatureShape
        name: GetFeatureShape
        nameWithType: IVirgisLayer.GetFeatureShape
        qualifiedName: Virgis.IVirgisLayer.GetFeatureShape
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisLayer
    commentId: M:Virgis.IVirgisLayer.GetFeatureShape
  Virgis.VirgisLayer.SetVisible*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.SetVisible*
        name: SetVisible
        nameWithType: VirgisLayer.SetVisible
        qualifiedName: Virgis.VirgisLayer.SetVisible
      VB:
      - id: Virgis.VirgisLayer.SetVisible*
        name: SetVisible
        nameWithType: VirgisLayer.SetVisible
        qualifiedName: Virgis.VirgisLayer.SetVisible
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer.SetVisible
  Virgis.IVirgisLayer.SetVisible(System.Boolean):
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.SetVisible(System.Boolean)
        name: SetVisible
        nameWithType: IVirgisLayer.SetVisible
        qualifiedName: Virgis.IVirgisLayer.SetVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisLayer.SetVisible(System.Boolean)
        name: SetVisible
        nameWithType: IVirgisLayer.SetVisible
        qualifiedName: Virgis.IVirgisLayer.SetVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisLayer
    commentId: M:Virgis.IVirgisLayer.SetVisible(System.Boolean)
  Virgis.VirgisLayer._set_visible*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer._set_visible*
        name: _set_visible
        nameWithType: VirgisLayer._set_visible
        qualifiedName: Virgis.VirgisLayer._set_visible
      VB:
      - id: Virgis.VirgisLayer._set_visible*
        name: _set_visible
        nameWithType: VirgisLayer._set_visible
        qualifiedName: Virgis.VirgisLayer._set_visible
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer._set_visible
  Virgis.VirgisLayer.IsVisible*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.IsVisible*
        name: IsVisible
        nameWithType: VirgisLayer.IsVisible
        qualifiedName: Virgis.VirgisLayer.IsVisible
      VB:
      - id: Virgis.VirgisLayer.IsVisible*
        name: IsVisible
        nameWithType: VirgisLayer.IsVisible
        qualifiedName: Virgis.VirgisLayer.IsVisible
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer.IsVisible
  Virgis.IVirgisLayer.IsVisible:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.IsVisible
        name: IsVisible
        nameWithType: IVirgisLayer.IsVisible
        qualifiedName: Virgis.IVirgisLayer.IsVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisLayer.IsVisible
        name: IsVisible
        nameWithType: IVirgisLayer.IsVisible
        qualifiedName: Virgis.IVirgisLayer.IsVisible
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisLayer
    commentId: M:Virgis.IVirgisLayer.IsVisible
  Virgis.VirgisLayer.SetEditable*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.SetEditable*
        name: SetEditable
        nameWithType: VirgisLayer.SetEditable
        qualifiedName: Virgis.VirgisLayer.SetEditable
      VB:
      - id: Virgis.VirgisLayer.SetEditable*
        name: SetEditable
        nameWithType: VirgisLayer.SetEditable
        qualifiedName: Virgis.VirgisLayer.SetEditable
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer.SetEditable
  Virgis.IVirgisLayer.SetEditable(System.Boolean):
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.SetEditable(System.Boolean)
        name: SetEditable
        nameWithType: IVirgisLayer.SetEditable
        qualifiedName: Virgis.IVirgisLayer.SetEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisLayer.SetEditable(System.Boolean)
        name: SetEditable
        nameWithType: IVirgisLayer.SetEditable
        qualifiedName: Virgis.IVirgisLayer.SetEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisLayer
    commentId: M:Virgis.IVirgisLayer.SetEditable(System.Boolean)
  Virgis.VirgisLayer.IsEditable*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.IsEditable*
        name: IsEditable
        nameWithType: VirgisLayer.IsEditable
        qualifiedName: Virgis.VirgisLayer.IsEditable
      VB:
      - id: Virgis.VirgisLayer.IsEditable*
        name: IsEditable
        nameWithType: VirgisLayer.IsEditable
        qualifiedName: Virgis.VirgisLayer.IsEditable
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer.IsEditable
  Virgis.IVirgisLayer.IsEditable:
    name:
      CSharp:
      - id: Virgis.IVirgisLayer.IsEditable
        name: IsEditable
        nameWithType: IVirgisLayer.IsEditable
        qualifiedName: Virgis.IVirgisLayer.IsEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Virgis.IVirgisLayer.IsEditable
        name: IsEditable
        nameWithType: IVirgisLayer.IsEditable
        qualifiedName: Virgis.IVirgisLayer.IsEditable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis.IVirgisLayer
    commentId: M:Virgis.IVirgisLayer.IsEditable
  Virgis.VirgisLayer.SetCrs*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.SetCrs*
        name: SetCrs
        nameWithType: VirgisLayer.SetCrs
        qualifiedName: Virgis.VirgisLayer.SetCrs
      VB:
      - id: Virgis.VirgisLayer.SetCrs*
        name: SetCrs
        nameWithType: VirgisLayer.SetCrs
        qualifiedName: Virgis.VirgisLayer.SetCrs
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer.SetCrs
  Virgis.VirgisLayer.GetCrs*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.GetCrs*
        name: GetCrs
        nameWithType: VirgisLayer.GetCrs
        qualifiedName: Virgis.VirgisLayer.GetCrs
      VB:
      - id: Virgis.VirgisLayer.GetCrs*
        name: GetCrs
        nameWithType: VirgisLayer.GetCrs
        qualifiedName: Virgis.VirgisLayer.GetCrs
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer.GetCrs
  Virgis.VirgisLayer.Equals*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.Equals*
        name: Equals
        nameWithType: VirgisLayer.Equals
        qualifiedName: Virgis.VirgisLayer.Equals
      VB:
      - id: Virgis.VirgisLayer.Equals*
        name: Equals
        nameWithType: VirgisLayer.Equals
        qualifiedName: Virgis.VirgisLayer.Equals
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer.Equals
  Virgis.VirgisLayer.GetHashCode*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.GetHashCode*
        name: GetHashCode
        nameWithType: VirgisLayer.GetHashCode
        qualifiedName: Virgis.VirgisLayer.GetHashCode
      VB:
      - id: Virgis.VirgisLayer.GetHashCode*
        name: GetHashCode
        nameWithType: VirgisLayer.GetHashCode
        qualifiedName: Virgis.VirgisLayer.GetHashCode
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer.GetHashCode
  Virgis.VirgisLayer.GetLayer*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer.GetLayer*
        name: GetLayer
        nameWithType: VirgisLayer.GetLayer
        qualifiedName: Virgis.VirgisLayer.GetLayer
      VB:
      - id: Virgis.VirgisLayer.GetLayer*
        name: GetLayer
        nameWithType: VirgisLayer.GetLayer
        qualifiedName: Virgis.VirgisLayer.GetLayer
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer.GetLayer
  S:
    name:
      CSharp:
      - name: S
        nameWithType: S
        qualifiedName: S
      VB:
      - name: S
        nameWithType: S
        qualifiedName: S
    isDefinition: true
  '{S}':
    name:
      CSharp:
      - name: S
        nameWithType: S
        qualifiedName: S
      VB:
      - name: S
        nameWithType: S
        qualifiedName: S
    isDefinition: false
    definition: S
    commentId: '!:S'
  Task{Virgis.VirgisLayer`2}:
    name:
      CSharp:
      - id: Task`1
        name: Task
        nameWithType: Task
        qualifiedName: Task
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: S
        nameWithType: S
        qualifiedName: S
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Task`1
        name: Task
        nameWithType: Task
        qualifiedName: Task
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Virgis.VirgisLayer`2
        name: VirgisLayer
        nameWithType: VirgisLayer
        qualifiedName: Virgis.VirgisLayer
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: S
        nameWithType: S
        qualifiedName: S
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Task`1
    commentId: '!:Task{Virgis.VirgisLayer`2}'
  Virgis.VirgisLayer`2.Init*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Init*
        name: Init
        nameWithType: VirgisLayer<T, S>.Init
        qualifiedName: Virgis.VirgisLayer<T, S>.Init
      VB:
      - id: Virgis.VirgisLayer`2.Init*
        name: Init
        nameWithType: VirgisLayer(Of T, S).Init
        qualifiedName: Virgis.VirgisLayer(Of T, S).Init
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.Init
  Virgis.VirgisLayer`2._init*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2._init*
        name: _init
        nameWithType: VirgisLayer<T, S>._init
        qualifiedName: Virgis.VirgisLayer<T, S>._init
      VB:
      - id: Virgis.VirgisLayer`2._init*
        name: _init
        nameWithType: VirgisLayer(Of T, S)._init
        qualifiedName: Virgis.VirgisLayer(Of T, S)._init
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2._init
  Virgis.VirgisLayer`2.GetMetadata*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetMetadata*
        name: GetMetadata
        nameWithType: VirgisLayer<T, S>.GetMetadata
        qualifiedName: Virgis.VirgisLayer<T, S>.GetMetadata
      VB:
      - id: Virgis.VirgisLayer`2.GetMetadata*
        name: GetMetadata
        nameWithType: VirgisLayer(Of T, S).GetMetadata
        qualifiedName: Virgis.VirgisLayer(Of T, S).GetMetadata
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.GetMetadata
  Virgis.VirgisLayer`2.SetMetadata*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.SetMetadata*
        name: SetMetadata
        nameWithType: VirgisLayer<T, S>.SetMetadata
        qualifiedName: Virgis.VirgisLayer<T, S>.SetMetadata
      VB:
      - id: Virgis.VirgisLayer`2.SetMetadata*
        name: SetMetadata
        nameWithType: VirgisLayer(Of T, S).SetMetadata
        qualifiedName: Virgis.VirgisLayer(Of T, S).SetMetadata
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.SetMetadata
  Virgis.VirgisLayer`2.SetFeatures*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.SetFeatures*
        name: SetFeatures
        nameWithType: VirgisLayer<T, S>.SetFeatures
        qualifiedName: Virgis.VirgisLayer<T, S>.SetFeatures
      VB:
      - id: Virgis.VirgisLayer`2.SetFeatures*
        name: SetFeatures
        nameWithType: VirgisLayer(Of T, S).SetFeatures
        qualifiedName: Virgis.VirgisLayer(Of T, S).SetFeatures
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.SetFeatures
  Virgis.VirgisLayer`2.Equals*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.Equals*
        name: Equals
        nameWithType: VirgisLayer<T, S>.Equals
        qualifiedName: Virgis.VirgisLayer<T, S>.Equals
      VB:
      - id: Virgis.VirgisLayer`2.Equals*
        name: Equals
        nameWithType: VirgisLayer(Of T, S).Equals
        qualifiedName: Virgis.VirgisLayer(Of T, S).Equals
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.Equals
  Virgis.VirgisLayer`2.GetHashCode*:
    name:
      CSharp:
      - id: Virgis.VirgisLayer`2.GetHashCode*
        name: GetHashCode
        nameWithType: VirgisLayer<T, S>.GetHashCode
        qualifiedName: Virgis.VirgisLayer<T, S>.GetHashCode
      VB:
      - id: Virgis.VirgisLayer`2.GetHashCode*
        name: GetHashCode
        nameWithType: VirgisLayer(Of T, S).GetHashCode
        qualifiedName: Virgis.VirgisLayer(Of T, S).GetHashCode
    isDefinition: true
    commentId: Overload:Virgis.VirgisLayer`2.GetHashCode
  System.Collections.Generic.IEnumerable{{T}}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{`0}
  System.Collections:
    name:
      CSharp:
      - name: System.Collections
        nameWithType: System.Collections
        qualifiedName: System.Collections
        isExternal: true
      VB:
      - name: System.Collections
        nameWithType: System.Collections
        qualifiedName: System.Collections
    isDefinition: true
    commentId: N:System.Collections
  System.Collections.IEnumerable:
    name:
      CSharp:
      - id: System.Collections.IEnumerable
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.IEnumerable
        isExternal: true
      VB:
      - id: System.Collections.IEnumerable
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.IEnumerable
        isExternal: true
    isDefinition: true
    parent: System.Collections
    commentId: T:System.Collections.IEnumerable
  System.Collections.Generic.IEnumerable:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      VB:
      - id: System.Collections.Generic.IEnumerable
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
    isDefinition: true
    commentId: '!:System.Collections.Generic.IEnumerable'
  Virgis.KdTree`1.KdNode:
    name:
      CSharp:
      - id: Virgis.KdTree`1.KdNode
        name: KdTree.KdNode
        nameWithType: KdTree.KdNode
        qualifiedName: Virgis.KdTree.KdNode
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Virgis.KdTree`1.KdNode
        name: KdTree.KdNode
        nameWithType: KdTree.KdNode
        qualifiedName: Virgis.KdTree.KdNode
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.KdTree`1.KdNode
  Virgis.KdTree`1.KdNode[]:
    name:
      CSharp:
      - id: Virgis.KdTree`1.KdNode
        name: KdTree.KdNode
        nameWithType: KdTree.KdNode
        qualifiedName: Virgis.KdTree.KdNode
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Virgis.KdTree`1.KdNode
        name: KdTree.KdNode
        nameWithType: KdTree.KdNode
        qualifiedName: Virgis.KdTree.KdNode
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Virgis.KdTree`1.Count*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.Count*
        name: Count
        nameWithType: KdTree<T>.Count
        qualifiedName: Virgis.KdTree<T>.Count
      VB:
      - id: Virgis.KdTree`1.Count*
        name: Count
        nameWithType: KdTree(Of T).Count
        qualifiedName: Virgis.KdTree(Of T).Count
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.Count
  Virgis.KdTree`1.IsReadOnly*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.IsReadOnly*
        name: IsReadOnly
        nameWithType: KdTree<T>.IsReadOnly
        qualifiedName: Virgis.KdTree<T>.IsReadOnly
      VB:
      - id: Virgis.KdTree`1.IsReadOnly*
        name: IsReadOnly
        nameWithType: KdTree(Of T).IsReadOnly
        qualifiedName: Virgis.KdTree(Of T).IsReadOnly
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.IsReadOnly
  Virgis.KdTree`1.AverageSearchLength*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.AverageSearchLength*
        name: AverageSearchLength
        nameWithType: KdTree<T>.AverageSearchLength
        qualifiedName: Virgis.KdTree<T>.AverageSearchLength
      VB:
      - id: Virgis.KdTree`1.AverageSearchLength*
        name: AverageSearchLength
        nameWithType: KdTree(Of T).AverageSearchLength
        qualifiedName: Virgis.KdTree(Of T).AverageSearchLength
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.AverageSearchLength
  Virgis.KdTree`1.AverageSearchDeep*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.AverageSearchDeep*
        name: AverageSearchDeep
        nameWithType: KdTree<T>.AverageSearchDeep
        qualifiedName: Virgis.KdTree<T>.AverageSearchDeep
      VB:
      - id: Virgis.KdTree`1.AverageSearchDeep*
        name: AverageSearchDeep
        nameWithType: KdTree(Of T).AverageSearchDeep
        qualifiedName: Virgis.KdTree(Of T).AverageSearchDeep
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.AverageSearchDeep
  Virgis.KdTree`1.#ctor*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.#ctor*
        name: KdTree
        nameWithType: KdTree<T>.KdTree
        qualifiedName: Virgis.KdTree<T>.KdTree
      VB:
      - id: Virgis.KdTree`1.#ctor*
        name: KdTree
        nameWithType: KdTree(Of T).KdTree
        qualifiedName: Virgis.KdTree(Of T).KdTree
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.#ctor
  Virgis.KdTree`1.Item*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.Item*
        name: Item
        nameWithType: KdTree<T>.Item
        qualifiedName: Virgis.KdTree<T>.Item
      VB:
      - id: Virgis.KdTree`1.Item*
        name: Item
        nameWithType: KdTree(Of T).Item
        qualifiedName: Virgis.KdTree(Of T).Item
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.Item
  Virgis.KdTree`1.Add*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.Add*
        name: Add
        nameWithType: KdTree<T>.Add
        qualifiedName: Virgis.KdTree<T>.Add
      VB:
      - id: Virgis.KdTree`1.Add*
        name: Add
        nameWithType: KdTree(Of T).Add
        qualifiedName: Virgis.KdTree(Of T).Add
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.Add
  System.Collections.Generic.List{{T}}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{`0}
  Virgis.KdTree`1.AddAll*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.AddAll*
        name: AddAll
        nameWithType: KdTree<T>.AddAll
        qualifiedName: Virgis.KdTree<T>.AddAll
      VB:
      - id: Virgis.KdTree`1.AddAll*
        name: AddAll
        nameWithType: KdTree(Of T).AddAll
        qualifiedName: Virgis.KdTree(Of T).AddAll
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.AddAll
  Virgis.KdTree`1:
    name:
      CSharp:
      - id: Virgis.KdTree`1
        name: KdTree
        nameWithType: KdTree
        qualifiedName: Virgis.KdTree
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Virgis.KdTree`1
        name: KdTree
        nameWithType: KdTree
        qualifiedName: Virgis.KdTree
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Virgis
    commentId: T:Virgis.KdTree`1
  System.Predicate`1:
    name:
      CSharp:
      - id: System.Predicate`1
        name: Predicate
        nameWithType: Predicate
        qualifiedName: System.Predicate
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Predicate`1
        name: Predicate
        nameWithType: Predicate
        qualifiedName: System.Predicate
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Predicate`1
  System.Predicate{{T}}:
    name:
      CSharp:
      - id: System.Predicate`1
        name: Predicate
        nameWithType: Predicate
        qualifiedName: System.Predicate
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Predicate`1
        name: Predicate
        nameWithType: Predicate
        qualifiedName: System.Predicate
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Predicate`1
    parent: System
    commentId: T:System.Predicate{`0}
  Virgis.KdTree`1.FindAll*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.FindAll*
        name: FindAll
        nameWithType: KdTree<T>.FindAll
        qualifiedName: Virgis.KdTree<T>.FindAll
      VB:
      - id: Virgis.KdTree`1.FindAll*
        name: FindAll
        nameWithType: KdTree(Of T).FindAll
        qualifiedName: Virgis.KdTree(Of T).FindAll
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.FindAll
  Virgis.KdTree`1.Find*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.Find*
        name: Find
        nameWithType: KdTree<T>.Find
        qualifiedName: Virgis.KdTree<T>.Find
      VB:
      - id: Virgis.KdTree`1.Find*
        name: Find
        nameWithType: KdTree(Of T).Find
        qualifiedName: Virgis.KdTree(Of T).Find
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.Find
  Virgis.KdTree`1.RemoveAt*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.RemoveAt*
        name: RemoveAt
        nameWithType: KdTree<T>.RemoveAt
        qualifiedName: Virgis.KdTree<T>.RemoveAt
      VB:
      - id: Virgis.KdTree`1.RemoveAt*
        name: RemoveAt
        nameWithType: KdTree(Of T).RemoveAt
        qualifiedName: Virgis.KdTree(Of T).RemoveAt
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.RemoveAt
  Virgis.KdTree`1.RemoveAll*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.RemoveAll*
        name: RemoveAll
        nameWithType: KdTree<T>.RemoveAll
        qualifiedName: Virgis.KdTree<T>.RemoveAll
      VB:
      - id: Virgis.KdTree`1.RemoveAll*
        name: RemoveAll
        nameWithType: KdTree(Of T).RemoveAll
        qualifiedName: Virgis.KdTree(Of T).RemoveAll
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.RemoveAll
  Virgis.KdTree`1.CountAll*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.CountAll*
        name: CountAll
        nameWithType: KdTree<T>.CountAll
        qualifiedName: Virgis.KdTree<T>.CountAll
      VB:
      - id: Virgis.KdTree`1.CountAll*
        name: CountAll
        nameWithType: KdTree(Of T).CountAll
        qualifiedName: Virgis.KdTree(Of T).CountAll
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.CountAll
  Virgis.KdTree`1.Clear*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.Clear*
        name: Clear
        nameWithType: KdTree<T>.Clear
        qualifiedName: Virgis.KdTree<T>.Clear
      VB:
      - id: Virgis.KdTree`1.Clear*
        name: Clear
        nameWithType: KdTree(Of T).Clear
        qualifiedName: Virgis.KdTree(Of T).Clear
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.Clear
  Virgis.KdTree`1.UpdatePositions*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.UpdatePositions*
        name: UpdatePositions
        nameWithType: KdTree<T>.UpdatePositions
        qualifiedName: Virgis.KdTree<T>.UpdatePositions
      VB:
      - id: Virgis.KdTree`1.UpdatePositions*
        name: UpdatePositions
        nameWithType: KdTree(Of T).UpdatePositions
        qualifiedName: Virgis.KdTree(Of T).UpdatePositions
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.UpdatePositions
  System.Collections.Generic.IEnumerator`1:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.Generic.IEnumerator
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.Generic.IEnumerator
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.IEnumerator`1
  System.Collections.Generic.IEnumerator{{T}}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.Generic.IEnumerator
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.Generic.IEnumerator
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerator`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerator{`0}
  Virgis.KdTree`1.GetEnumerator*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.GetEnumerator*
        name: GetEnumerator
        nameWithType: KdTree<T>.GetEnumerator
        qualifiedName: Virgis.KdTree<T>.GetEnumerator
      VB:
      - id: Virgis.KdTree`1.GetEnumerator*
        name: GetEnumerator
        nameWithType: KdTree(Of T).GetEnumerator
        qualifiedName: Virgis.KdTree(Of T).GetEnumerator
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.GetEnumerator
  System.Collections.Generic.IEnumerable`1.GetEnumerator:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1.GetEnumerator
        name: GetEnumerator
        nameWithType: IEnumerable<T>.GetEnumerator
        qualifiedName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IEnumerable`1.GetEnumerator
        name: GetEnumerator
        nameWithType: IEnumerable(Of T).GetEnumerator
        qualifiedName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  System.Collections.Generic.IEnumerable{{T}}.GetEnumerator:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1.GetEnumerator
        name: GetEnumerator
        nameWithType: IEnumerable<T>.GetEnumerator
        qualifiedName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IEnumerable`1.GetEnumerator
        name: GetEnumerator
        nameWithType: IEnumerable(Of T).GetEnumerator
        qualifiedName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
    parent: System.Collections.Generic.IEnumerable{{T}}
    commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  Virgis.KdTree`1.ToList*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.ToList*
        name: ToList
        nameWithType: KdTree<T>.ToList
        qualifiedName: Virgis.KdTree<T>.ToList
      VB:
      - id: Virgis.KdTree`1.ToList*
        name: ToList
        nameWithType: KdTree(Of T).ToList
        qualifiedName: Virgis.KdTree(Of T).ToList
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.ToList
  Virgis.KdTree`1._distance*:
    name:
      CSharp:
      - id: Virgis.KdTree`1._distance*
        name: _distance
        nameWithType: KdTree<T>._distance
        qualifiedName: Virgis.KdTree<T>._distance
      VB:
      - id: Virgis.KdTree`1._distance*
        name: _distance
        nameWithType: KdTree(Of T)._distance
        qualifiedName: Virgis.KdTree(Of T)._distance
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1._distance
  Virgis.KdTree`1._getSplitValue*:
    name:
      CSharp:
      - id: Virgis.KdTree`1._getSplitValue*
        name: _getSplitValue
        nameWithType: KdTree<T>._getSplitValue
        qualifiedName: Virgis.KdTree<T>._getSplitValue
      VB:
      - id: Virgis.KdTree`1._getSplitValue*
        name: _getSplitValue
        nameWithType: KdTree(Of T)._getSplitValue
        qualifiedName: Virgis.KdTree(Of T)._getSplitValue
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1._getSplitValue
  Virgis.KdTree`1.FindClosest*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.FindClosest*
        name: FindClosest
        nameWithType: KdTree<T>.FindClosest
        qualifiedName: Virgis.KdTree<T>.FindClosest
      VB:
      - id: Virgis.KdTree`1.FindClosest*
        name: FindClosest
        nameWithType: KdTree(Of T).FindClosest
        qualifiedName: Virgis.KdTree(Of T).FindClosest
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.FindClosest
  Virgis.KdTree`1.FindClose*:
    name:
      CSharp:
      - id: Virgis.KdTree`1.FindClose*
        name: FindClose
        nameWithType: KdTree<T>.FindClose
        qualifiedName: Virgis.KdTree<T>.FindClose
      VB:
      - id: Virgis.KdTree`1.FindClose*
        name: FindClose
        nameWithType: KdTree(Of T).FindClose
        qualifiedName: Virgis.KdTree(Of T).FindClose
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1.FindClose
  Virgis.KdTree`1._findClosest*:
    name:
      CSharp:
      - id: Virgis.KdTree`1._findClosest*
        name: _findClosest
        nameWithType: KdTree<T>._findClosest
        qualifiedName: Virgis.KdTree<T>._findClosest
      VB:
      - id: Virgis.KdTree`1._findClosest*
        name: _findClosest
        nameWithType: KdTree(Of T)._findClosest
        qualifiedName: Virgis.KdTree(Of T)._findClosest
    isDefinition: true
    commentId: Overload:Virgis.KdTree`1._findClosest
  IPosition:
    name:
      CSharp:
      - id: IPosition
        name: IPosition
        nameWithType: IPosition
        qualifiedName: IPosition
        isExternal: true
      VB:
      - id: IPosition
        name: IPosition
        nameWithType: IPosition
        qualifiedName: IPosition
        isExternal: true
    isDefinition: true
  ICRSObject:
    name:
      CSharp:
      - id: ICRSObject
        name: ICRSObject
        nameWithType: ICRSObject
        qualifiedName: ICRSObject
        isExternal: true
      VB:
      - id: ICRSObject
        name: ICRSObject
        nameWithType: ICRSObject
        qualifiedName: ICRSObject
        isExternal: true
    isDefinition: true
  Virgis.Vector3ExtensionMethods.ToPosition*:
    name:
      CSharp:
      - id: Virgis.Vector3ExtensionMethods.ToPosition*
        name: ToPosition
        nameWithType: Vector3ExtensionMethods.ToPosition
        qualifiedName: Virgis.Vector3ExtensionMethods.ToPosition
      VB:
      - id: Virgis.Vector3ExtensionMethods.ToPosition*
        name: ToPosition
        nameWithType: Vector3ExtensionMethods.ToPosition
        qualifiedName: Virgis.Vector3ExtensionMethods.ToPosition
    isDefinition: true
    commentId: Overload:Virgis.Vector3ExtensionMethods.ToPosition
  Virgis.Vector3ExtensionMethods.ToGeometry*:
    name:
      CSharp:
      - id: Virgis.Vector3ExtensionMethods.ToGeometry*
        name: ToGeometry
        nameWithType: Vector3ExtensionMethods.ToGeometry
        qualifiedName: Virgis.Vector3ExtensionMethods.ToGeometry
      VB:
      - id: Virgis.Vector3ExtensionMethods.ToGeometry*
        name: ToGeometry
        nameWithType: Vector3ExtensionMethods.ToGeometry
        qualifiedName: Virgis.Vector3ExtensionMethods.ToGeometry
    isDefinition: true
    commentId: Overload:Virgis.Vector3ExtensionMethods.ToGeometry
  Point:
    name:
      CSharp:
      - id: Point
        name: Point
        nameWithType: Point
        qualifiedName: Point
        isExternal: true
      VB:
      - id: Point
        name: Point
        nameWithType: Point
        qualifiedName: Point
        isExternal: true
    isDefinition: true
  Virgis.Vector3ExtensionMethods.ToPoint*:
    name:
      CSharp:
      - id: Virgis.Vector3ExtensionMethods.ToPoint*
        name: ToPoint
        nameWithType: Vector3ExtensionMethods.ToPoint
        qualifiedName: Virgis.Vector3ExtensionMethods.ToPoint
      VB:
      - id: Virgis.Vector3ExtensionMethods.ToPoint*
        name: ToPoint
        nameWithType: Vector3ExtensionMethods.ToPoint
        qualifiedName: Virgis.Vector3ExtensionMethods.ToPoint
    isDefinition: true
    commentId: Overload:Virgis.Vector3ExtensionMethods.ToPoint
  Virgis.Vector3ExtensionMethods:
    name:
      CSharp:
      - id: Virgis.Vector3ExtensionMethods
        name: Vector3ExtensionMethods
        nameWithType: Vector3ExtensionMethods
        qualifiedName: Virgis.Vector3ExtensionMethods
      VB:
      - id: Virgis.Vector3ExtensionMethods
        name: Vector3ExtensionMethods
        nameWithType: Vector3ExtensionMethods
        qualifiedName: Virgis.Vector3ExtensionMethods
    isDefinition: true
    commentId: T:Virgis.Vector3ExtensionMethods
  Virgis.PointExtensionsMethods.ToVector3*:
    name:
      CSharp:
      - id: Virgis.PointExtensionsMethods.ToVector3*
        name: ToVector3
        nameWithType: PointExtensionsMethods.ToVector3
        qualifiedName: Virgis.PointExtensionsMethods.ToVector3
      VB:
      - id: Virgis.PointExtensionsMethods.ToVector3*
        name: ToVector3
        nameWithType: PointExtensionsMethods.ToVector3
        qualifiedName: Virgis.PointExtensionsMethods.ToVector3
    isDefinition: true
    commentId: Overload:Virgis.PointExtensionsMethods.ToVector3
  Virgis.PointExtensionsMethods.ToGeometry*:
    name:
      CSharp:
      - id: Virgis.PointExtensionsMethods.ToGeometry*
        name: ToGeometry
        nameWithType: PointExtensionsMethods.ToGeometry
        qualifiedName: Virgis.PointExtensionsMethods.ToGeometry
      VB:
      - id: Virgis.PointExtensionsMethods.ToGeometry*
        name: ToGeometry
        nameWithType: PointExtensionsMethods.ToGeometry
        qualifiedName: Virgis.PointExtensionsMethods.ToGeometry
    isDefinition: true
    commentId: Overload:Virgis.PointExtensionsMethods.ToGeometry
  Virgis.PointExtensionsMethods:
    name:
      CSharp:
      - id: Virgis.PointExtensionsMethods
        name: PointExtensionsMethods
        nameWithType: PointExtensionsMethods
        qualifiedName: Virgis.PointExtensionsMethods
      VB:
      - id: Virgis.PointExtensionsMethods
        name: PointExtensionsMethods
        nameWithType: PointExtensionsMethods
        qualifiedName: Virgis.PointExtensionsMethods
    isDefinition: true
    commentId: T:Virgis.PointExtensionsMethods
  Vector2:
    name:
      CSharp:
      - id: Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      VB:
      - id: Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
    isDefinition: true
    commentId: '!:Vector2'
  Virgis.PositionExtensionMethods.Vector2*:
    name:
      CSharp:
      - id: Virgis.PositionExtensionMethods.Vector2*
        name: Vector2
        nameWithType: PositionExtensionMethods.Vector2
        qualifiedName: Virgis.PositionExtensionMethods.Vector2
      VB:
      - id: Virgis.PositionExtensionMethods.Vector2*
        name: Vector2
        nameWithType: PositionExtensionMethods.Vector2
        qualifiedName: Virgis.PositionExtensionMethods.Vector2
    isDefinition: true
    commentId: Overload:Virgis.PositionExtensionMethods.Vector2
  Virgis.PositionExtensionMethods.Vector3*:
    name:
      CSharp:
      - id: Virgis.PositionExtensionMethods.Vector3*
        name: Vector3
        nameWithType: PositionExtensionMethods.Vector3
        qualifiedName: Virgis.PositionExtensionMethods.Vector3
      VB:
      - id: Virgis.PositionExtensionMethods.Vector3*
        name: Vector3
        nameWithType: PositionExtensionMethods.Vector3
        qualifiedName: Virgis.PositionExtensionMethods.Vector3
    isDefinition: true
    commentId: Overload:Virgis.PositionExtensionMethods.Vector3
  Virgis.PositionExtensionMethods.ToGeometry*:
    name:
      CSharp:
      - id: Virgis.PositionExtensionMethods.ToGeometry*
        name: ToGeometry
        nameWithType: PositionExtensionMethods.ToGeometry
        qualifiedName: Virgis.PositionExtensionMethods.ToGeometry
      VB:
      - id: Virgis.PositionExtensionMethods.ToGeometry*
        name: ToGeometry
        nameWithType: PositionExtensionMethods.ToGeometry
        qualifiedName: Virgis.PositionExtensionMethods.ToGeometry
    isDefinition: true
    commentId: Overload:Virgis.PositionExtensionMethods.ToGeometry
  Virgis.PositionExtensionMethods:
    name:
      CSharp:
      - id: Virgis.PositionExtensionMethods
        name: PositionExtensionMethods
        nameWithType: PositionExtensionMethods
        qualifiedName: Virgis.PositionExtensionMethods
      VB:
      - id: Virgis.PositionExtensionMethods
        name: PositionExtensionMethods
        nameWithType: PositionExtensionMethods
        qualifiedName: Virgis.PositionExtensionMethods
    isDefinition: true
    commentId: T:Virgis.PositionExtensionMethods
  Position:
    name:
      CSharp:
      - id: Position
        name: Position
        nameWithType: Position
        qualifiedName: Position
        isExternal: true
      VB:
      - id: Position
        name: Position
        nameWithType: Position
        qualifiedName: Position
        isExternal: true
    isDefinition: true
    commentId: '!:Position'
  LineString:
    name:
      CSharp:
      - id: LineString
        name: LineString
        nameWithType: LineString
        qualifiedName: LineString
        isExternal: true
      VB:
      - id: LineString
        name: LineString
        nameWithType: LineString
        qualifiedName: LineString
        isExternal: true
    isDefinition: true
  Virgis.LineExtensionMethods.Point*:
    name:
      CSharp:
      - id: Virgis.LineExtensionMethods.Point*
        name: Point
        nameWithType: LineExtensionMethods.Point
        qualifiedName: Virgis.LineExtensionMethods.Point
      VB:
      - id: Virgis.LineExtensionMethods.Point*
        name: Point
        nameWithType: LineExtensionMethods.Point
        qualifiedName: Virgis.LineExtensionMethods.Point
    isDefinition: true
    commentId: Overload:Virgis.LineExtensionMethods.Point
  Position[]:
    name:
      CSharp:
      - id: Position
        name: Position
        nameWithType: Position
        qualifiedName: Position
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Position
        name: Position
        nameWithType: Position
        qualifiedName: Position
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Virgis.LineExtensionMethods.Points*:
    name:
      CSharp:
      - id: Virgis.LineExtensionMethods.Points*
        name: Points
        nameWithType: LineExtensionMethods.Points
        qualifiedName: Virgis.LineExtensionMethods.Points
      VB:
      - id: Virgis.LineExtensionMethods.Points*
        name: Points
        nameWithType: LineExtensionMethods.Points
        qualifiedName: Virgis.LineExtensionMethods.Points
    isDefinition: true
    commentId: Overload:Virgis.LineExtensionMethods.Points
  Virgis.LineExtensionMethods.Vector3*:
    name:
      CSharp:
      - id: Virgis.LineExtensionMethods.Vector3*
        name: Vector3
        nameWithType: LineExtensionMethods.Vector3
        qualifiedName: Virgis.LineExtensionMethods.Vector3
      VB:
      - id: Virgis.LineExtensionMethods.Vector3*
        name: Vector3
        nameWithType: LineExtensionMethods.Vector3
        qualifiedName: Virgis.LineExtensionMethods.Vector3
    isDefinition: true
    commentId: Overload:Virgis.LineExtensionMethods.Vector3
  Virgis.LineExtensionMethods.ToGeometry*:
    name:
      CSharp:
      - id: Virgis.LineExtensionMethods.ToGeometry*
        name: ToGeometry
        nameWithType: LineExtensionMethods.ToGeometry
        qualifiedName: Virgis.LineExtensionMethods.ToGeometry
      VB:
      - id: Virgis.LineExtensionMethods.ToGeometry*
        name: ToGeometry
        nameWithType: LineExtensionMethods.ToGeometry
        qualifiedName: Virgis.LineExtensionMethods.ToGeometry
    isDefinition: true
    commentId: Overload:Virgis.LineExtensionMethods.ToGeometry
  Virgis.LineExtensionMethods:
    name:
      CSharp:
      - id: Virgis.LineExtensionMethods
        name: LineExtensionMethods
        nameWithType: LineExtensionMethods
        qualifiedName: Virgis.LineExtensionMethods
      VB:
      - id: Virgis.LineExtensionMethods
        name: LineExtensionMethods
        nameWithType: LineExtensionMethods
        qualifiedName: Virgis.LineExtensionMethods
    isDefinition: true
    commentId: T:Virgis.LineExtensionMethods

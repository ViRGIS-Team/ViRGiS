### YamlMime:ManagedReference
items:
- uid: g3.Vector4d
  commentId: T:g3.Vector4d
  id: Vector4d
  parent: g3
  children:
  - g3.Vector4d.#ctor(g3.Vector4d)
  - g3.Vector4d.#ctor(System.Double)
  - g3.Vector4d.#ctor(System.Double,System.Double,System.Double,System.Double)
  - g3.Vector4d.#ctor(System.Double[])
  - g3.Vector4d.AngleD(g3.Vector4d)
  - g3.Vector4d.AngleD(g3.Vector4d,g3.Vector4d)
  - g3.Vector4d.AngleR(g3.Vector4d)
  - g3.Vector4d.AngleR(g3.Vector4d,g3.Vector4d)
  - g3.Vector4d.CompareTo(g3.Vector4d)
  - g3.Vector4d.Distance(g3.Vector4d)
  - g3.Vector4d.Distance(g3.Vector4d@)
  - g3.Vector4d.DistanceSquared(g3.Vector4d)
  - g3.Vector4d.DistanceSquared(g3.Vector4d@)
  - g3.Vector4d.Dot(g3.Vector4d)
  - g3.Vector4d.Dot(g3.Vector4d,g3.Vector4d)
  - g3.Vector4d.Dot(g3.Vector4d@)
  - g3.Vector4d.EpsilonEqual(g3.Vector4d,System.Double)
  - g3.Vector4d.Equals(g3.Vector4d)
  - g3.Vector4d.Equals(System.Object)
  - g3.Vector4d.GetHashCode
  - g3.Vector4d.IsFinite
  - g3.Vector4d.IsNormalized
  - g3.Vector4d.Item(System.Int32)
  - g3.Vector4d.Length
  - g3.Vector4d.LengthL1
  - g3.Vector4d.LengthSquared
  - g3.Vector4d.Normalize(System.Double)
  - g3.Vector4d.Normalized
  - g3.Vector4d.One
  - g3.Vector4d.op_Addition(g3.Vector4d,g3.Vector4d)
  - g3.Vector4d.op_Addition(g3.Vector4d,System.Double)
  - g3.Vector4d.op_Division(g3.Vector4d,g3.Vector4d)
  - g3.Vector4d.op_Division(g3.Vector4d,System.Double)
  - g3.Vector4d.op_Division(System.Double,g3.Vector4d)
  - g3.Vector4d.op_Equality(g3.Vector4d,g3.Vector4d)
  - g3.Vector4d.op_Inequality(g3.Vector4d,g3.Vector4d)
  - g3.Vector4d.op_Multiply(g3.Vector4d,g3.Vector4d)
  - g3.Vector4d.op_Multiply(g3.Vector4d,System.Double)
  - g3.Vector4d.op_Multiply(System.Double,g3.Vector4d)
  - g3.Vector4d.op_Subtraction(g3.Vector4d,g3.Vector4d)
  - g3.Vector4d.op_Subtraction(g3.Vector4d,System.Double)
  - g3.Vector4d.op_UnaryNegation(g3.Vector4d)
  - g3.Vector4d.Round(System.Int32)
  - g3.Vector4d.ToString
  - g3.Vector4d.ToString(System.String)
  - g3.Vector4d.w
  - g3.Vector4d.x
  - g3.Vector4d.y
  - g3.Vector4d.z
  - g3.Vector4d.Zero
  langs:
  - csharp
  - vb
  name: Vector4d
  nameWithType: Vector4d
  fullName: g3.Vector4d
  type: Struct
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Vector4d
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 10
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: 'public struct Vector4d : IComparable<Vector4d>, IEquatable<Vector4d>'
    content.vb: >-
      Public Structure Vector4d
          Implements IComparable(Of Vector4d), IEquatable(Of Vector4d)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: g3.Vector4d.x
  commentId: F:g3.Vector4d.x
  id: x
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: x
  nameWithType: Vector4d.x
  fullName: g3.Vector4d.x
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: x
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 12
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double x
    return:
      type: System.Double
    content.vb: Public x As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector4d.y
  commentId: F:g3.Vector4d.y
  id: y
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: y
  nameWithType: Vector4d.y
  fullName: g3.Vector4d.y
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: y
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 13
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double y
    return:
      type: System.Double
    content.vb: Public y As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector4d.z
  commentId: F:g3.Vector4d.z
  id: z
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: z
  nameWithType: Vector4d.z
  fullName: g3.Vector4d.z
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: z
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 14
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double z
    return:
      type: System.Double
    content.vb: Public z As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector4d.w
  commentId: F:g3.Vector4d.w
  id: w
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: w
  nameWithType: Vector4d.w
  fullName: g3.Vector4d.w
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: w
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 15
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double w
    return:
      type: System.Double
    content.vb: Public w As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector4d.#ctor(System.Double)
  commentId: M:g3.Vector4d.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Vector4d(Double)
  nameWithType: Vector4d.Vector4d(Double)
  fullName: g3.Vector4d.Vector4d(System.Double)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 17
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector4d(double f)
    parameters:
    - id: f
      type: System.Double
    content.vb: Public Sub New(f As Double)
  overload: g3.Vector4d.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector4d.#ctor(System.Double,System.Double,System.Double,System.Double)
  commentId: M:g3.Vector4d.#ctor(System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double,System.Double)'
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Vector4d(Double, Double, Double, Double)
  nameWithType: Vector4d.Vector4d(Double, Double, Double, Double)
  fullName: g3.Vector4d.Vector4d(System.Double, System.Double, System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 18
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector4d(double x, double y, double z, double w)
    parameters:
    - id: x
      type: System.Double
    - id: y
      type: System.Double
    - id: z
      type: System.Double
    - id: w
      type: System.Double
    content.vb: Public Sub New(x As Double, y As Double, z As Double, w As Double)
  overload: g3.Vector4d.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector4d.#ctor(System.Double[])
  commentId: M:g3.Vector4d.#ctor(System.Double[])
  id: '#ctor(System.Double[])'
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Vector4d(Double[])
  nameWithType: Vector4d.Vector4d(Double[])
  fullName: g3.Vector4d.Vector4d(System.Double[])
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 19
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector4d(double[] v2)
    parameters:
    - id: v2
      type: System.Double[]
    content.vb: Public Sub New(v2 As Double())
  overload: g3.Vector4d.#ctor*
  nameWithType.vb: Vector4d.Vector4d(Double())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.Vector4d.Vector4d(System.Double())
  name.vb: Vector4d(Double())
- uid: g3.Vector4d.#ctor(g3.Vector4d)
  commentId: M:g3.Vector4d.#ctor(g3.Vector4d)
  id: '#ctor(g3.Vector4d)'
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Vector4d(Vector4d)
  nameWithType: Vector4d.Vector4d(Vector4d)
  fullName: g3.Vector4d.Vector4d(g3.Vector4d)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 20
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector4d(Vector4d copy)
    parameters:
    - id: copy
      type: g3.Vector4d
    content.vb: Public Sub New(copy As Vector4d)
  overload: g3.Vector4d.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector4d.Zero
  commentId: F:g3.Vector4d.Zero
  id: Zero
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: Vector4d.Zero
  fullName: g3.Vector4d.Zero
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Zero
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 22
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static readonly Vector4d Zero
    return:
      type: g3.Vector4d
    content.vb: Public Shared ReadOnly Zero As Vector4d
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: g3.Vector4d.One
  commentId: F:g3.Vector4d.One
  id: One
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: One
  nameWithType: Vector4d.One
  fullName: g3.Vector4d.One
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: One
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 23
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static readonly Vector4d One
    return:
      type: g3.Vector4d
    content.vb: Public Shared ReadOnly One As Vector4d
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: g3.Vector4d.Item(System.Int32)
  commentId: P:g3.Vector4d.Item(System.Int32)
  id: Item(System.Int32)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: Vector4d.Item[Int32]
  fullName: g3.Vector4d.Item[System.Int32]
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: this[]
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 25
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double this[int key] { get; set; }
    parameters:
    - id: key
      type: System.Int32
    return:
      type: System.Double
    content.vb: Public Property Item(key As Integer) As Double
  overload: g3.Vector4d.Item*
  nameWithType.vb: Vector4d.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: g3.Vector4d.Item(System.Int32)
  name.vb: Item(Int32)
- uid: g3.Vector4d.LengthSquared
  commentId: P:g3.Vector4d.LengthSquared
  id: LengthSquared
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: LengthSquared
  nameWithType: Vector4d.LengthSquared
  fullName: g3.Vector4d.LengthSquared
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: LengthSquared
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 34
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double LengthSquared { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property LengthSquared As Double
  overload: g3.Vector4d.LengthSquared*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector4d.Length
  commentId: P:g3.Vector4d.Length
  id: Length
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: Vector4d.Length
  fullName: g3.Vector4d.Length
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Length
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 38
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double Length { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Length As Double
  overload: g3.Vector4d.Length*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector4d.LengthL1
  commentId: P:g3.Vector4d.LengthL1
  id: LengthL1
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: LengthL1
  nameWithType: Vector4d.LengthL1
  fullName: g3.Vector4d.LengthL1
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: LengthL1
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 43
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double LengthL1 { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property LengthL1 As Double
  overload: g3.Vector4d.LengthL1*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector4d.Normalize(System.Double)
  commentId: M:g3.Vector4d.Normalize(System.Double)
  id: Normalize(System.Double)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Normalize(Double)
  nameWithType: Vector4d.Normalize(Double)
  fullName: g3.Vector4d.Normalize(System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Normalize
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 49
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double Normalize(double epsilon = 2.2204460492503131E-16)
    parameters:
    - id: epsilon
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Function Normalize(epsilon As Double = 2.2204460492503131E-16) As Double
  overload: g3.Vector4d.Normalize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector4d.Normalized
  commentId: P:g3.Vector4d.Normalized
  id: Normalized
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Normalized
  nameWithType: Vector4d.Normalized
  fullName: g3.Vector4d.Normalized
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Normalized
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 64
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector4d Normalized { get; }
    parameters: []
    return:
      type: g3.Vector4d
    content.vb: Public ReadOnly Property Normalized As Vector4d
  overload: g3.Vector4d.Normalized*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector4d.IsNormalized
  commentId: P:g3.Vector4d.IsNormalized
  id: IsNormalized
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: IsNormalized
  nameWithType: Vector4d.IsNormalized
  fullName: g3.Vector4d.IsNormalized
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IsNormalized
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 75
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool IsNormalized { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNormalized As Boolean
  overload: g3.Vector4d.IsNormalized*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector4d.IsFinite
  commentId: P:g3.Vector4d.IsFinite
  id: IsFinite
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: IsFinite
  nameWithType: Vector4d.IsFinite
  fullName: g3.Vector4d.IsFinite
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IsFinite
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 80
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool IsFinite { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFinite As Boolean
  overload: g3.Vector4d.IsFinite*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector4d.Round(System.Int32)
  commentId: M:g3.Vector4d.Round(System.Int32)
  id: Round(System.Int32)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Round(Int32)
  nameWithType: Vector4d.Round(Int32)
  fullName: g3.Vector4d.Round(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Round
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 85
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Round(int nDecimals)
    parameters:
    - id: nDecimals
      type: System.Int32
    content.vb: Public Sub Round(nDecimals As Integer)
  overload: g3.Vector4d.Round*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector4d.Dot(g3.Vector4d)
  commentId: M:g3.Vector4d.Dot(g3.Vector4d)
  id: Dot(g3.Vector4d)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Dot(Vector4d)
  nameWithType: Vector4d.Dot(Vector4d)
  fullName: g3.Vector4d.Dot(g3.Vector4d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Dot
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 93
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double Dot(Vector4d v2)
    parameters:
    - id: v2
      type: g3.Vector4d
    return:
      type: System.Double
    content.vb: Public Function Dot(v2 As Vector4d) As Double
  overload: g3.Vector4d.Dot*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector4d.Dot(g3.Vector4d@)
  commentId: M:g3.Vector4d.Dot(g3.Vector4d@)
  id: Dot(g3.Vector4d@)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Dot(ref Vector4d)
  nameWithType: Vector4d.Dot(ref Vector4d)
  fullName: g3.Vector4d.Dot(ref g3.Vector4d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Dot
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 96
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double Dot(ref Vector4d v2)
    parameters:
    - id: v2
      type: g3.Vector4d
    return:
      type: System.Double
    content.vb: Public Function Dot(ByRef v2 As Vector4d) As Double
  overload: g3.Vector4d.Dot*
  nameWithType.vb: Vector4d.Dot(ByRef Vector4d)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.Vector4d.Dot(ByRef g3.Vector4d)
  name.vb: Dot(ByRef Vector4d)
- uid: g3.Vector4d.Dot(g3.Vector4d,g3.Vector4d)
  commentId: M:g3.Vector4d.Dot(g3.Vector4d,g3.Vector4d)
  id: Dot(g3.Vector4d,g3.Vector4d)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Dot(Vector4d, Vector4d)
  nameWithType: Vector4d.Dot(Vector4d, Vector4d)
  fullName: g3.Vector4d.Dot(g3.Vector4d, g3.Vector4d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Dot
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 100
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double Dot(Vector4d v1, Vector4d v2)
    parameters:
    - id: v1
      type: g3.Vector4d
    - id: v2
      type: g3.Vector4d
    return:
      type: System.Double
    content.vb: Public Shared Function Dot(v1 As Vector4d, v2 As Vector4d) As Double
  overload: g3.Vector4d.Dot*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector4d.AngleD(g3.Vector4d)
  commentId: M:g3.Vector4d.AngleD(g3.Vector4d)
  id: AngleD(g3.Vector4d)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: AngleD(Vector4d)
  nameWithType: Vector4d.AngleD(Vector4d)
  fullName: g3.Vector4d.AngleD(g3.Vector4d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AngleD
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 105
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double AngleD(Vector4d v2)
    parameters:
    - id: v2
      type: g3.Vector4d
    return:
      type: System.Double
    content.vb: Public Function AngleD(v2 As Vector4d) As Double
  overload: g3.Vector4d.AngleD*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector4d.AngleD(g3.Vector4d,g3.Vector4d)
  commentId: M:g3.Vector4d.AngleD(g3.Vector4d,g3.Vector4d)
  id: AngleD(g3.Vector4d,g3.Vector4d)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: AngleD(Vector4d, Vector4d)
  nameWithType: Vector4d.AngleD(Vector4d, Vector4d)
  fullName: g3.Vector4d.AngleD(g3.Vector4d, g3.Vector4d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AngleD
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 110
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double AngleD(Vector4d v1, Vector4d v2)
    parameters:
    - id: v1
      type: g3.Vector4d
    - id: v2
      type: g3.Vector4d
    return:
      type: System.Double
    content.vb: Public Shared Function AngleD(v1 As Vector4d, v2 As Vector4d) As Double
  overload: g3.Vector4d.AngleD*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector4d.AngleR(g3.Vector4d)
  commentId: M:g3.Vector4d.AngleR(g3.Vector4d)
  id: AngleR(g3.Vector4d)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: AngleR(Vector4d)
  nameWithType: Vector4d.AngleR(Vector4d)
  fullName: g3.Vector4d.AngleR(g3.Vector4d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AngleR
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 114
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double AngleR(Vector4d v2)
    parameters:
    - id: v2
      type: g3.Vector4d
    return:
      type: System.Double
    content.vb: Public Function AngleR(v2 As Vector4d) As Double
  overload: g3.Vector4d.AngleR*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector4d.AngleR(g3.Vector4d,g3.Vector4d)
  commentId: M:g3.Vector4d.AngleR(g3.Vector4d,g3.Vector4d)
  id: AngleR(g3.Vector4d,g3.Vector4d)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: AngleR(Vector4d, Vector4d)
  nameWithType: Vector4d.AngleR(Vector4d, Vector4d)
  fullName: g3.Vector4d.AngleR(g3.Vector4d, g3.Vector4d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AngleR
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 119
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double AngleR(Vector4d v1, Vector4d v2)
    parameters:
    - id: v1
      type: g3.Vector4d
    - id: v2
      type: g3.Vector4d
    return:
      type: System.Double
    content.vb: Public Shared Function AngleR(v1 As Vector4d, v2 As Vector4d) As Double
  overload: g3.Vector4d.AngleR*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector4d.DistanceSquared(g3.Vector4d)
  commentId: M:g3.Vector4d.DistanceSquared(g3.Vector4d)
  id: DistanceSquared(g3.Vector4d)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: DistanceSquared(Vector4d)
  nameWithType: Vector4d.DistanceSquared(Vector4d)
  fullName: g3.Vector4d.DistanceSquared(g3.Vector4d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: DistanceSquared
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 124
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double DistanceSquared(Vector4d v2)
    parameters:
    - id: v2
      type: g3.Vector4d
    return:
      type: System.Double
    content.vb: Public Function DistanceSquared(v2 As Vector4d) As Double
  overload: g3.Vector4d.DistanceSquared*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector4d.DistanceSquared(g3.Vector4d@)
  commentId: M:g3.Vector4d.DistanceSquared(g3.Vector4d@)
  id: DistanceSquared(g3.Vector4d@)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: DistanceSquared(ref Vector4d)
  nameWithType: Vector4d.DistanceSquared(ref Vector4d)
  fullName: g3.Vector4d.DistanceSquared(ref g3.Vector4d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: DistanceSquared
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 128
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double DistanceSquared(ref Vector4d v2)
    parameters:
    - id: v2
      type: g3.Vector4d
    return:
      type: System.Double
    content.vb: Public Function DistanceSquared(ByRef v2 As Vector4d) As Double
  overload: g3.Vector4d.DistanceSquared*
  nameWithType.vb: Vector4d.DistanceSquared(ByRef Vector4d)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.Vector4d.DistanceSquared(ByRef g3.Vector4d)
  name.vb: DistanceSquared(ByRef Vector4d)
- uid: g3.Vector4d.Distance(g3.Vector4d)
  commentId: M:g3.Vector4d.Distance(g3.Vector4d)
  id: Distance(g3.Vector4d)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Distance(Vector4d)
  nameWithType: Vector4d.Distance(Vector4d)
  fullName: g3.Vector4d.Distance(g3.Vector4d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Distance
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 133
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double Distance(Vector4d v2)
    parameters:
    - id: v2
      type: g3.Vector4d
    return:
      type: System.Double
    content.vb: Public Function Distance(v2 As Vector4d) As Double
  overload: g3.Vector4d.Distance*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector4d.Distance(g3.Vector4d@)
  commentId: M:g3.Vector4d.Distance(g3.Vector4d@)
  id: Distance(g3.Vector4d@)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Distance(ref Vector4d)
  nameWithType: Vector4d.Distance(ref Vector4d)
  fullName: g3.Vector4d.Distance(ref g3.Vector4d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Distance
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 137
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double Distance(ref Vector4d v2)
    parameters:
    - id: v2
      type: g3.Vector4d
    return:
      type: System.Double
    content.vb: Public Function Distance(ByRef v2 As Vector4d) As Double
  overload: g3.Vector4d.Distance*
  nameWithType.vb: Vector4d.Distance(ByRef Vector4d)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.Vector4d.Distance(ByRef g3.Vector4d)
  name.vb: Distance(ByRef Vector4d)
- uid: g3.Vector4d.op_UnaryNegation(g3.Vector4d)
  commentId: M:g3.Vector4d.op_UnaryNegation(g3.Vector4d)
  id: op_UnaryNegation(g3.Vector4d)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: UnaryNegation(Vector4d)
  nameWithType: Vector4d.UnaryNegation(Vector4d)
  fullName: g3.Vector4d.UnaryNegation(g3.Vector4d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_UnaryNegation
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 143
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector4d operator -(Vector4d v)
    parameters:
    - id: v
      type: g3.Vector4d
    return:
      type: g3.Vector4d
    content.vb: Public Shared Operator -(v As Vector4d) As Vector4d
  overload: g3.Vector4d.op_UnaryNegation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector4d.op_Multiply(System.Double,g3.Vector4d)
  commentId: M:g3.Vector4d.op_Multiply(System.Double,g3.Vector4d)
  id: op_Multiply(System.Double,g3.Vector4d)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Multiply(Double, Vector4d)
  nameWithType: Vector4d.Multiply(Double, Vector4d)
  fullName: g3.Vector4d.Multiply(System.Double, g3.Vector4d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Multiply
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 148
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector4d operator *(double f, Vector4d v)
    parameters:
    - id: f
      type: System.Double
    - id: v
      type: g3.Vector4d
    return:
      type: g3.Vector4d
    content.vb: Public Shared Operator *(f As Double, v As Vector4d) As Vector4d
  overload: g3.Vector4d.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector4d.op_Multiply(g3.Vector4d,System.Double)
  commentId: M:g3.Vector4d.op_Multiply(g3.Vector4d,System.Double)
  id: op_Multiply(g3.Vector4d,System.Double)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Multiply(Vector4d, Double)
  nameWithType: Vector4d.Multiply(Vector4d, Double)
  fullName: g3.Vector4d.Multiply(g3.Vector4d, System.Double)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Multiply
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 152
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector4d operator *(Vector4d v, double f)
    parameters:
    - id: v
      type: g3.Vector4d
    - id: f
      type: System.Double
    return:
      type: g3.Vector4d
    content.vb: Public Shared Operator *(v As Vector4d, f As Double) As Vector4d
  overload: g3.Vector4d.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector4d.op_Division(g3.Vector4d,System.Double)
  commentId: M:g3.Vector4d.op_Division(g3.Vector4d,System.Double)
  id: op_Division(g3.Vector4d,System.Double)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Division(Vector4d, Double)
  nameWithType: Vector4d.Division(Vector4d, Double)
  fullName: g3.Vector4d.Division(g3.Vector4d, System.Double)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Division
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 156
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector4d operator /(Vector4d v, double f)
    parameters:
    - id: v
      type: g3.Vector4d
    - id: f
      type: System.Double
    return:
      type: g3.Vector4d
    content.vb: Public Shared Operator /(v As Vector4d, f As Double) As Vector4d
  overload: g3.Vector4d.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector4d.op_Division(System.Double,g3.Vector4d)
  commentId: M:g3.Vector4d.op_Division(System.Double,g3.Vector4d)
  id: op_Division(System.Double,g3.Vector4d)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Division(Double, Vector4d)
  nameWithType: Vector4d.Division(Double, Vector4d)
  fullName: g3.Vector4d.Division(System.Double, g3.Vector4d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Division
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 160
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector4d operator /(double f, Vector4d v)
    parameters:
    - id: f
      type: System.Double
    - id: v
      type: g3.Vector4d
    return:
      type: g3.Vector4d
    content.vb: Public Shared Operator /(f As Double, v As Vector4d) As Vector4d
  overload: g3.Vector4d.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector4d.op_Multiply(g3.Vector4d,g3.Vector4d)
  commentId: M:g3.Vector4d.op_Multiply(g3.Vector4d,g3.Vector4d)
  id: op_Multiply(g3.Vector4d,g3.Vector4d)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Multiply(Vector4d, Vector4d)
  nameWithType: Vector4d.Multiply(Vector4d, Vector4d)
  fullName: g3.Vector4d.Multiply(g3.Vector4d, g3.Vector4d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Multiply
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 165
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector4d operator *(Vector4d a, Vector4d b)
    parameters:
    - id: a
      type: g3.Vector4d
    - id: b
      type: g3.Vector4d
    return:
      type: g3.Vector4d
    content.vb: Public Shared Operator *(a As Vector4d, b As Vector4d) As Vector4d
  overload: g3.Vector4d.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector4d.op_Division(g3.Vector4d,g3.Vector4d)
  commentId: M:g3.Vector4d.op_Division(g3.Vector4d,g3.Vector4d)
  id: op_Division(g3.Vector4d,g3.Vector4d)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Division(Vector4d, Vector4d)
  nameWithType: Vector4d.Division(Vector4d, Vector4d)
  fullName: g3.Vector4d.Division(g3.Vector4d, g3.Vector4d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Division
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 169
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector4d operator /(Vector4d a, Vector4d b)
    parameters:
    - id: a
      type: g3.Vector4d
    - id: b
      type: g3.Vector4d
    return:
      type: g3.Vector4d
    content.vb: Public Shared Operator /(a As Vector4d, b As Vector4d) As Vector4d
  overload: g3.Vector4d.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector4d.op_Addition(g3.Vector4d,g3.Vector4d)
  commentId: M:g3.Vector4d.op_Addition(g3.Vector4d,g3.Vector4d)
  id: op_Addition(g3.Vector4d,g3.Vector4d)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Addition(Vector4d, Vector4d)
  nameWithType: Vector4d.Addition(Vector4d, Vector4d)
  fullName: g3.Vector4d.Addition(g3.Vector4d, g3.Vector4d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Addition
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 175
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector4d operator +(Vector4d v0, Vector4d v1)
    parameters:
    - id: v0
      type: g3.Vector4d
    - id: v1
      type: g3.Vector4d
    return:
      type: g3.Vector4d
    content.vb: Public Shared Operator +(v0 As Vector4d, v1 As Vector4d) As Vector4d
  overload: g3.Vector4d.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector4d.op_Addition(g3.Vector4d,System.Double)
  commentId: M:g3.Vector4d.op_Addition(g3.Vector4d,System.Double)
  id: op_Addition(g3.Vector4d,System.Double)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Addition(Vector4d, Double)
  nameWithType: Vector4d.Addition(Vector4d, Double)
  fullName: g3.Vector4d.Addition(g3.Vector4d, System.Double)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Addition
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 179
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector4d operator +(Vector4d v0, double f)
    parameters:
    - id: v0
      type: g3.Vector4d
    - id: f
      type: System.Double
    return:
      type: g3.Vector4d
    content.vb: Public Shared Operator +(v0 As Vector4d, f As Double) As Vector4d
  overload: g3.Vector4d.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector4d.op_Subtraction(g3.Vector4d,g3.Vector4d)
  commentId: M:g3.Vector4d.op_Subtraction(g3.Vector4d,g3.Vector4d)
  id: op_Subtraction(g3.Vector4d,g3.Vector4d)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Subtraction(Vector4d, Vector4d)
  nameWithType: Vector4d.Subtraction(Vector4d, Vector4d)
  fullName: g3.Vector4d.Subtraction(g3.Vector4d, g3.Vector4d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Subtraction
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 184
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector4d operator -(Vector4d v0, Vector4d v1)
    parameters:
    - id: v0
      type: g3.Vector4d
    - id: v1
      type: g3.Vector4d
    return:
      type: g3.Vector4d
    content.vb: Public Shared Operator -(v0 As Vector4d, v1 As Vector4d) As Vector4d
  overload: g3.Vector4d.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector4d.op_Subtraction(g3.Vector4d,System.Double)
  commentId: M:g3.Vector4d.op_Subtraction(g3.Vector4d,System.Double)
  id: op_Subtraction(g3.Vector4d,System.Double)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Subtraction(Vector4d, Double)
  nameWithType: Vector4d.Subtraction(Vector4d, Double)
  fullName: g3.Vector4d.Subtraction(g3.Vector4d, System.Double)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Subtraction
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 188
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector4d operator -(Vector4d v0, double f)
    parameters:
    - id: v0
      type: g3.Vector4d
    - id: f
      type: System.Double
    return:
      type: g3.Vector4d
    content.vb: Public Shared Operator -(v0 As Vector4d, f As Double) As Vector4d
  overload: g3.Vector4d.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector4d.op_Equality(g3.Vector4d,g3.Vector4d)
  commentId: M:g3.Vector4d.op_Equality(g3.Vector4d,g3.Vector4d)
  id: op_Equality(g3.Vector4d,g3.Vector4d)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Equality(Vector4d, Vector4d)
  nameWithType: Vector4d.Equality(Vector4d, Vector4d)
  fullName: g3.Vector4d.Equality(g3.Vector4d, g3.Vector4d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Equality
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 195
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static bool operator ==(Vector4d a, Vector4d b)
    parameters:
    - id: a
      type: g3.Vector4d
    - id: b
      type: g3.Vector4d
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(a As Vector4d, b As Vector4d) As Boolean
  overload: g3.Vector4d.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector4d.op_Inequality(g3.Vector4d,g3.Vector4d)
  commentId: M:g3.Vector4d.op_Inequality(g3.Vector4d,g3.Vector4d)
  id: op_Inequality(g3.Vector4d,g3.Vector4d)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Inequality(Vector4d, Vector4d)
  nameWithType: Vector4d.Inequality(Vector4d, Vector4d)
  fullName: g3.Vector4d.Inequality(g3.Vector4d, g3.Vector4d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Inequality
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 199
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static bool operator !=(Vector4d a, Vector4d b)
    parameters:
    - id: a
      type: g3.Vector4d
    - id: b
      type: g3.Vector4d
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(a As Vector4d, b As Vector4d) As Boolean
  overload: g3.Vector4d.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector4d.Equals(System.Object)
  commentId: M:g3.Vector4d.Equals(System.Object)
  id: Equals(System.Object)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Vector4d.Equals(Object)
  fullName: g3.Vector4d.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Equals
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 203
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: g3.Vector4d.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: g3.Vector4d.GetHashCode
  commentId: M:g3.Vector4d.GetHashCode
  id: GetHashCode
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Vector4d.GetHashCode()
  fullName: g3.Vector4d.GetHashCode()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GetHashCode
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 207
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: g3.Vector4d.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: g3.Vector4d.CompareTo(g3.Vector4d)
  commentId: M:g3.Vector4d.CompareTo(g3.Vector4d)
  id: CompareTo(g3.Vector4d)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: CompareTo(Vector4d)
  nameWithType: Vector4d.CompareTo(Vector4d)
  fullName: g3.Vector4d.CompareTo(g3.Vector4d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: CompareTo
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 220
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int CompareTo(Vector4d other)
    parameters:
    - id: other
      type: g3.Vector4d
    return:
      type: System.Int32
    content.vb: Public Function CompareTo(other As Vector4d) As Integer
  overload: g3.Vector4d.CompareTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector4d.Equals(g3.Vector4d)
  commentId: M:g3.Vector4d.Equals(g3.Vector4d)
  id: Equals(g3.Vector4d)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: Equals(Vector4d)
  nameWithType: Vector4d.Equals(Vector4d)
  fullName: g3.Vector4d.Equals(g3.Vector4d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Equals
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 232
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool Equals(Vector4d other)
    parameters:
    - id: other
      type: g3.Vector4d
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Vector4d) As Boolean
  overload: g3.Vector4d.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector4d.EpsilonEqual(g3.Vector4d,System.Double)
  commentId: M:g3.Vector4d.EpsilonEqual(g3.Vector4d,System.Double)
  id: EpsilonEqual(g3.Vector4d,System.Double)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: EpsilonEqual(Vector4d, Double)
  nameWithType: Vector4d.EpsilonEqual(Vector4d, Double)
  fullName: g3.Vector4d.EpsilonEqual(g3.Vector4d, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: EpsilonEqual
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 238
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool EpsilonEqual(Vector4d v2, double epsilon)
    parameters:
    - id: v2
      type: g3.Vector4d
    - id: epsilon
      type: System.Double
    return:
      type: System.Boolean
    content.vb: Public Function EpsilonEqual(v2 As Vector4d, epsilon As Double) As Boolean
  overload: g3.Vector4d.EpsilonEqual*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector4d.ToString
  commentId: M:g3.Vector4d.ToString
  id: ToString
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Vector4d.ToString()
  fullName: g3.Vector4d.ToString()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ToString
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 247
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: g3.Vector4d.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: g3.Vector4d.ToString(System.String)
  commentId: M:g3.Vector4d.ToString(System.String)
  id: ToString(System.String)
  parent: g3.Vector4d
  langs:
  - csharp
  - vb
  name: ToString(String)
  nameWithType: Vector4d.ToString(String)
  fullName: g3.Vector4d.ToString(System.String)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector4d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ToString
    path: ../Assets/geometry3Sharp/math/Vector4d.cs
    startLine: 250
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public string ToString(string fmt)
    parameters:
    - id: fmt
      type: System.String
    return:
      type: System.String
    content.vb: Public Function ToString(fmt As String) As String
  overload: g3.Vector4d.ToString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: g3.Vector4d.#ctor*
  commentId: Overload:g3.Vector4d.#ctor
  name: Vector4d
  nameWithType: Vector4d.Vector4d
  fullName: g3.Vector4d.Vector4d
- uid: System.Double[]
  isExternal: true
  name: Double[]
  nameWithType: Double[]
  fullName: System.Double[]
  nameWithType.vb: Double()
  fullName.vb: System.Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: g3.Vector4d
  commentId: T:g3.Vector4d
  parent: g3
  name: Vector4d
  nameWithType: Vector4d
  fullName: g3.Vector4d
- uid: g3.Vector4d.Item*
  commentId: Overload:g3.Vector4d.Item
  name: Item
  nameWithType: Vector4d.Item
  fullName: g3.Vector4d.Item
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: g3.Vector4d.LengthSquared*
  commentId: Overload:g3.Vector4d.LengthSquared
  name: LengthSquared
  nameWithType: Vector4d.LengthSquared
  fullName: g3.Vector4d.LengthSquared
- uid: g3.Vector4d.Length*
  commentId: Overload:g3.Vector4d.Length
  name: Length
  nameWithType: Vector4d.Length
  fullName: g3.Vector4d.Length
- uid: g3.Vector4d.LengthL1*
  commentId: Overload:g3.Vector4d.LengthL1
  name: LengthL1
  nameWithType: Vector4d.LengthL1
  fullName: g3.Vector4d.LengthL1
- uid: g3.Vector4d.Normalize*
  commentId: Overload:g3.Vector4d.Normalize
  name: Normalize
  nameWithType: Vector4d.Normalize
  fullName: g3.Vector4d.Normalize
- uid: g3.Vector4d.Normalized*
  commentId: Overload:g3.Vector4d.Normalized
  name: Normalized
  nameWithType: Vector4d.Normalized
  fullName: g3.Vector4d.Normalized
- uid: g3.Vector4d.IsNormalized*
  commentId: Overload:g3.Vector4d.IsNormalized
  name: IsNormalized
  nameWithType: Vector4d.IsNormalized
  fullName: g3.Vector4d.IsNormalized
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: g3.Vector4d.IsFinite*
  commentId: Overload:g3.Vector4d.IsFinite
  name: IsFinite
  nameWithType: Vector4d.IsFinite
  fullName: g3.Vector4d.IsFinite
- uid: g3.Vector4d.Round*
  commentId: Overload:g3.Vector4d.Round
  name: Round
  nameWithType: Vector4d.Round
  fullName: g3.Vector4d.Round
- uid: g3.Vector4d.Dot*
  commentId: Overload:g3.Vector4d.Dot
  name: Dot
  nameWithType: Vector4d.Dot
  fullName: g3.Vector4d.Dot
- uid: g3.Vector4d.AngleD*
  commentId: Overload:g3.Vector4d.AngleD
  name: AngleD
  nameWithType: Vector4d.AngleD
  fullName: g3.Vector4d.AngleD
- uid: g3.Vector4d.AngleR*
  commentId: Overload:g3.Vector4d.AngleR
  name: AngleR
  nameWithType: Vector4d.AngleR
  fullName: g3.Vector4d.AngleR
- uid: g3.Vector4d.DistanceSquared*
  commentId: Overload:g3.Vector4d.DistanceSquared
  name: DistanceSquared
  nameWithType: Vector4d.DistanceSquared
  fullName: g3.Vector4d.DistanceSquared
- uid: g3.Vector4d.Distance*
  commentId: Overload:g3.Vector4d.Distance
  name: Distance
  nameWithType: Vector4d.Distance
  fullName: g3.Vector4d.Distance
- uid: g3.Vector4d.op_UnaryNegation*
  commentId: Overload:g3.Vector4d.op_UnaryNegation
  name: UnaryNegation
  nameWithType: Vector4d.UnaryNegation
  fullName: g3.Vector4d.UnaryNegation
- uid: g3.Vector4d.op_Multiply*
  commentId: Overload:g3.Vector4d.op_Multiply
  name: Multiply
  nameWithType: Vector4d.Multiply
  fullName: g3.Vector4d.Multiply
- uid: g3.Vector4d.op_Division*
  commentId: Overload:g3.Vector4d.op_Division
  name: Division
  nameWithType: Vector4d.Division
  fullName: g3.Vector4d.Division
- uid: g3.Vector4d.op_Addition*
  commentId: Overload:g3.Vector4d.op_Addition
  name: Addition
  nameWithType: Vector4d.Addition
  fullName: g3.Vector4d.Addition
- uid: g3.Vector4d.op_Subtraction*
  commentId: Overload:g3.Vector4d.op_Subtraction
  name: Subtraction
  nameWithType: Vector4d.Subtraction
  fullName: g3.Vector4d.Subtraction
- uid: g3.Vector4d.op_Equality*
  commentId: Overload:g3.Vector4d.op_Equality
  name: Equality
  nameWithType: Vector4d.Equality
  fullName: g3.Vector4d.Equality
- uid: g3.Vector4d.op_Inequality*
  commentId: Overload:g3.Vector4d.op_Inequality
  name: Inequality
  nameWithType: Vector4d.Inequality
  fullName: g3.Vector4d.Inequality
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.Vector4d.Equals*
  commentId: Overload:g3.Vector4d.Equals
  name: Equals
  nameWithType: Vector4d.Equals
  fullName: g3.Vector4d.Equals
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.Vector4d.GetHashCode*
  commentId: Overload:g3.Vector4d.GetHashCode
  name: GetHashCode
  nameWithType: Vector4d.GetHashCode
  fullName: g3.Vector4d.GetHashCode
- uid: g3.Vector4d.CompareTo*
  commentId: Overload:g3.Vector4d.CompareTo
  name: CompareTo
  nameWithType: Vector4d.CompareTo
  fullName: g3.Vector4d.CompareTo
- uid: g3.Vector4d.EpsilonEqual*
  commentId: Overload:g3.Vector4d.EpsilonEqual
  name: EpsilonEqual
  nameWithType: Vector4d.EpsilonEqual
  fullName: g3.Vector4d.EpsilonEqual
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.Vector4d.ToString*
  commentId: Overload:g3.Vector4d.ToString
  name: ToString
  nameWithType: Vector4d.ToString
  fullName: g3.Vector4d.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

### YamlMime:ManagedReference
items:
- uid: g3.PackedSparseMatrix
  commentId: T:g3.PackedSparseMatrix
  id: PackedSparseMatrix
  parent: g3
  children:
  - g3.PackedSparseMatrix.#ctor(g3.DVector{g3.matrix_entry},System.Int32,System.Int32,System.Boolean)
  - g3.PackedSparseMatrix.#ctor(g3.PackedSparseMatrix)
  - g3.PackedSparseMatrix.#ctor(g3.SymmetricSparseMatrix,System.Boolean)
  - g3.PackedSparseMatrix.Columns
  - g3.PackedSparseMatrix.DotColumnVector(System.Int32,System.Double[],System.Int32,System.Int32)
  - g3.PackedSparseMatrix.DotRowAllColumns(System.Int32,System.Double[],System.Int32[],g3.PackedSparseMatrix)
  - g3.PackedSparseMatrix.DotRowColumn(System.Int32,System.Int32,g3.PackedSparseMatrix)
  - g3.PackedSparseMatrix.DotRows(System.Int32,System.Int32,System.Int32)
  - g3.PackedSparseMatrix.DotRowSelf(System.Int32)
  - g3.PackedSparseMatrix.DotRowVector(System.Int32,System.Double[],System.Int32)
  - g3.PackedSparseMatrix.FrobeniusNorm
  - g3.PackedSparseMatrix.FromDense(g3.DenseMatrix,System.Boolean)
  - g3.PackedSparseMatrix.IsSymmetric
  - g3.PackedSparseMatrix.Item(System.Int32,System.Int32)
  - g3.PackedSparseMatrix.MatrixInfo(System.Boolean)
  - g3.PackedSparseMatrix.MaxNorm
  - g3.PackedSparseMatrix.Multiply(System.Double[],System.Double[])
  - g3.PackedSparseMatrix.Multiply_Parallel(System.Double[],System.Double[])
  - g3.PackedSparseMatrix.Multiply_Parallel_3(System.Double[][],System.Double[][])
  - g3.PackedSparseMatrix.NonZeroIndicesByRow(System.Boolean)
  - g3.PackedSparseMatrix.NonZeroIndicesForRow(System.Int32,System.Boolean)
  - g3.PackedSparseMatrix.NonZerosRange(System.Int32)
  - g3.PackedSparseMatrix.NumNonZeros
  - g3.PackedSparseMatrix.Rows
  - g3.PackedSparseMatrix.Sort(System.Boolean)
  - g3.PackedSparseMatrix.Sorted
  - g3.PackedSparseMatrix.Square
  - g3.PackedSparseMatrix.StorageMode
  - g3.PackedSparseMatrix.Trace
  langs:
  - csharp
  - vb
  name: PackedSparseMatrix
  nameWithType: PackedSparseMatrix
  fullName: g3.PackedSparseMatrix
  type: Class
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: PackedSparseMatrix
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 20
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nThis is a sparse matrix where each row is an array of (column,value) pairs\nThis is more efficient for Matrix*Vector multiply.\n"
  example: []
  syntax:
    content: public class PackedSparseMatrix
    content.vb: Public Class PackedSparseMatrix
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: g3.PackedSparseMatrix.Rows
  commentId: F:g3.PackedSparseMatrix.Rows
  id: Rows
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: Rows
  nameWithType: PackedSparseMatrix.Rows
  fullName: g3.PackedSparseMatrix.Rows
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Rows
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 27
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public PackedSparseMatrix.nonzero[][] Rows
    return:
      type: g3.PackedSparseMatrix.nonzero[][]
    content.vb: Public Rows As PackedSparseMatrix.nonzero()()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.PackedSparseMatrix.Columns
  commentId: F:g3.PackedSparseMatrix.Columns
  id: Columns
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: Columns
  nameWithType: PackedSparseMatrix.Columns
  fullName: g3.PackedSparseMatrix.Columns
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Columns
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 29
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int Columns
    return:
      type: System.Int32
    content.vb: Public Columns As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.PackedSparseMatrix.Sorted
  commentId: F:g3.PackedSparseMatrix.Sorted
  id: Sorted
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: Sorted
  nameWithType: PackedSparseMatrix.Sorted
  fullName: g3.PackedSparseMatrix.Sorted
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Sorted
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 30
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool Sorted
    return:
      type: System.Boolean
    content.vb: Public Sorted As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.PackedSparseMatrix.NumNonZeros
  commentId: F:g3.PackedSparseMatrix.NumNonZeros
  id: NumNonZeros
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: NumNonZeros
  nameWithType: PackedSparseMatrix.NumNonZeros
  fullName: g3.PackedSparseMatrix.NumNonZeros
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: NumNonZeros
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 31
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int NumNonZeros
    return:
      type: System.Int32
    content.vb: Public NumNonZeros As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.PackedSparseMatrix.StorageMode
  commentId: F:g3.PackedSparseMatrix.StorageMode
  id: StorageMode
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: StorageMode
  nameWithType: PackedSparseMatrix.StorageMode
  fullName: g3.PackedSparseMatrix.StorageMode
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: StorageMode
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 37
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public PackedSparseMatrix.StorageModes StorageMode
    return:
      type: g3.PackedSparseMatrix.StorageModes
    content.vb: Public StorageMode As PackedSparseMatrix.StorageModes
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.PackedSparseMatrix.IsSymmetric
  commentId: F:g3.PackedSparseMatrix.IsSymmetric
  id: IsSymmetric
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: IsSymmetric
  nameWithType: PackedSparseMatrix.IsSymmetric
  fullName: g3.PackedSparseMatrix.IsSymmetric
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IsSymmetric
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 40
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool IsSymmetric
    return:
      type: System.Boolean
    content.vb: Public IsSymmetric As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.PackedSparseMatrix.#ctor(g3.PackedSparseMatrix)
  commentId: M:g3.PackedSparseMatrix.#ctor(g3.PackedSparseMatrix)
  id: '#ctor(g3.PackedSparseMatrix)'
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: PackedSparseMatrix(PackedSparseMatrix)
  nameWithType: PackedSparseMatrix.PackedSparseMatrix(PackedSparseMatrix)
  fullName: g3.PackedSparseMatrix.PackedSparseMatrix(g3.PackedSparseMatrix)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 43
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public PackedSparseMatrix(PackedSparseMatrix copy)
    parameters:
    - id: copy
      type: g3.PackedSparseMatrix
    content.vb: Public Sub New(copy As PackedSparseMatrix)
  overload: g3.PackedSparseMatrix.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.PackedSparseMatrix.#ctor(g3.SymmetricSparseMatrix,System.Boolean)
  commentId: M:g3.PackedSparseMatrix.#ctor(g3.SymmetricSparseMatrix,System.Boolean)
  id: '#ctor(g3.SymmetricSparseMatrix,System.Boolean)'
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: PackedSparseMatrix(SymmetricSparseMatrix, Boolean)
  nameWithType: PackedSparseMatrix.PackedSparseMatrix(SymmetricSparseMatrix, Boolean)
  fullName: g3.PackedSparseMatrix.PackedSparseMatrix(g3.SymmetricSparseMatrix, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 59
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public PackedSparseMatrix(SymmetricSparseMatrix m, bool bTranspose = false)
    parameters:
    - id: m
      type: g3.SymmetricSparseMatrix
    - id: bTranspose
      type: System.Boolean
    content.vb: Public Sub New(m As SymmetricSparseMatrix, bTranspose As Boolean = False)
  overload: g3.PackedSparseMatrix.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.PackedSparseMatrix.#ctor(g3.DVector{g3.matrix_entry},System.Int32,System.Int32,System.Boolean)
  commentId: M:g3.PackedSparseMatrix.#ctor(g3.DVector{g3.matrix_entry},System.Int32,System.Int32,System.Boolean)
  id: '#ctor(g3.DVector{g3.matrix_entry},System.Int32,System.Int32,System.Boolean)'
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: PackedSparseMatrix(DVector<matrix_entry>, Int32, Int32, Boolean)
  nameWithType: PackedSparseMatrix.PackedSparseMatrix(DVector<matrix_entry>, Int32, Int32, Boolean)
  fullName: g3.PackedSparseMatrix.PackedSparseMatrix(g3.DVector<g3.matrix_entry>, System.Int32, System.Int32, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 107
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public PackedSparseMatrix(DVector<matrix_entry> entries, int numRows, int numCols, bool bSymmetric = true)
    parameters:
    - id: entries
      type: g3.DVector{g3.matrix_entry}
    - id: numRows
      type: System.Int32
    - id: numCols
      type: System.Int32
    - id: bSymmetric
      type: System.Boolean
    content.vb: Public Sub New(entries As DVector(Of matrix_entry), numRows As Integer, numCols As Integer, bSymmetric As Boolean = True)
  overload: g3.PackedSparseMatrix.#ctor*
  nameWithType.vb: PackedSparseMatrix.PackedSparseMatrix(DVector(Of matrix_entry), Int32, Int32, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.PackedSparseMatrix.PackedSparseMatrix(g3.DVector(Of g3.matrix_entry), System.Int32, System.Int32, System.Boolean)
  name.vb: PackedSparseMatrix(DVector(Of matrix_entry), Int32, Int32, Boolean)
- uid: g3.PackedSparseMatrix.FromDense(g3.DenseMatrix,System.Boolean)
  commentId: M:g3.PackedSparseMatrix.FromDense(g3.DenseMatrix,System.Boolean)
  id: FromDense(g3.DenseMatrix,System.Boolean)
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: FromDense(DenseMatrix, Boolean)
  nameWithType: PackedSparseMatrix.FromDense(DenseMatrix, Boolean)
  fullName: g3.PackedSparseMatrix.FromDense(g3.DenseMatrix, System.Boolean)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: FromDense
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 150
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static PackedSparseMatrix FromDense(DenseMatrix m, bool bSymmetric)
    parameters:
    - id: m
      type: g3.DenseMatrix
    - id: bSymmetric
      type: System.Boolean
    return:
      type: g3.PackedSparseMatrix
    content.vb: Public Shared Function FromDense(m As DenseMatrix, bSymmetric As Boolean) As PackedSparseMatrix
  overload: g3.PackedSparseMatrix.FromDense*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.PackedSparseMatrix.Item(System.Int32,System.Int32)
  commentId: P:g3.PackedSparseMatrix.Item(System.Int32,System.Int32)
  id: Item(System.Int32,System.Int32)
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: Item[Int32, Int32]
  nameWithType: PackedSparseMatrix.Item[Int32, Int32]
  fullName: g3.PackedSparseMatrix.Item[System.Int32, System.Int32]
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: this[]
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 167
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double this[int r, int c] { get; set; }
    parameters:
    - id: r
      type: System.Int32
    - id: c
      type: System.Int32
    return:
      type: System.Double
    content.vb: Public Property Item(r As Integer, c As Integer) As Double
  overload: g3.PackedSparseMatrix.Item*
  nameWithType.vb: PackedSparseMatrix.Item(Int32, Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: g3.PackedSparseMatrix.Item(System.Int32, System.Int32)
  name.vb: Item(Int32, Int32)
- uid: g3.PackedSparseMatrix.Sort(System.Boolean)
  commentId: M:g3.PackedSparseMatrix.Sort(System.Boolean)
  id: Sort(System.Boolean)
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: Sort(Boolean)
  nameWithType: PackedSparseMatrix.Sort(Boolean)
  fullName: g3.PackedSparseMatrix.Sort(System.Boolean)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Sort
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 194
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nsort each row\n"
  example: []
  syntax:
    content: public void Sort(bool bParallel = true)
    parameters:
    - id: bParallel
      type: System.Boolean
    content.vb: Public Sub Sort(bParallel As Boolean = True)
  overload: g3.PackedSparseMatrix.Sort*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.PackedSparseMatrix.NonZerosRange(System.Int32)
  commentId: M:g3.PackedSparseMatrix.NonZerosRange(System.Int32)
  id: NonZerosRange(System.Int32)
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: NonZerosRange(Int32)
  nameWithType: PackedSparseMatrix.NonZerosRange(Int32)
  fullName: g3.PackedSparseMatrix.NonZerosRange(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: NonZerosRange
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 213
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nFor row r, find interval that nonzeros lie in\n"
  example: []
  syntax:
    content: public Interval1i NonZerosRange(int r)
    parameters:
    - id: r
      type: System.Int32
    return:
      type: g3.Interval1i
    content.vb: Public Function NonZerosRange(r As Integer) As Interval1i
  overload: g3.PackedSparseMatrix.NonZerosRange*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.PackedSparseMatrix.NonZeroIndicesByRow(System.Boolean)
  commentId: M:g3.PackedSparseMatrix.NonZeroIndicesByRow(System.Boolean)
  id: NonZeroIndicesByRow(System.Boolean)
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: NonZeroIndicesByRow(Boolean)
  nameWithType: PackedSparseMatrix.NonZeroIndicesByRow(Boolean)
  fullName: g3.PackedSparseMatrix.NonZeroIndicesByRow(System.Boolean)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: NonZeroIndicesByRow
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 229
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IEnumerable<Vector2i> NonZeroIndicesByRow(bool bWantSorted = true)
    parameters:
    - id: bWantSorted
      type: System.Boolean
    return:
      type: System.Collections.Generic.IEnumerable{g3.Vector2i}
    content.vb: Public Function NonZeroIndicesByRow(bWantSorted As Boolean = True) As IEnumerable(Of Vector2i)
  overload: g3.PackedSparseMatrix.NonZeroIndicesByRow*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.PackedSparseMatrix.NonZeroIndicesForRow(System.Int32,System.Boolean)
  commentId: M:g3.PackedSparseMatrix.NonZeroIndicesForRow(System.Int32,System.Boolean)
  id: NonZeroIndicesForRow(System.Int32,System.Boolean)
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: NonZeroIndicesForRow(Int32, Boolean)
  nameWithType: PackedSparseMatrix.NonZeroIndicesForRow(Int32, Boolean)
  fullName: g3.PackedSparseMatrix.NonZeroIndicesForRow(System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: NonZeroIndicesForRow
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 243
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IEnumerable<Vector2i> NonZeroIndicesForRow(int r, bool bWantSorted = true)
    parameters:
    - id: r
      type: System.Int32
    - id: bWantSorted
      type: System.Boolean
    return:
      type: System.Collections.Generic.IEnumerable{g3.Vector2i}
    content.vb: Public Function NonZeroIndicesForRow(r As Integer, bWantSorted As Boolean = True) As IEnumerable(Of Vector2i)
  overload: g3.PackedSparseMatrix.NonZeroIndicesForRow*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.PackedSparseMatrix.Multiply(System.Double[],System.Double[])
  commentId: M:g3.PackedSparseMatrix.Multiply(System.Double[],System.Double[])
  id: Multiply(System.Double[],System.Double[])
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: Multiply(Double[], Double[])
  nameWithType: PackedSparseMatrix.Multiply(Double[], Double[])
  fullName: g3.PackedSparseMatrix.Multiply(System.Double[], System.Double[])
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Multiply
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 254
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Multiply(double[] X, double[] Result)
    parameters:
    - id: X
      type: System.Double[]
    - id: Result
      type: System.Double[]
    content.vb: Public Sub Multiply(X As Double(), Result As Double())
  overload: g3.PackedSparseMatrix.Multiply*
  nameWithType.vb: PackedSparseMatrix.Multiply(Double(), Double())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.PackedSparseMatrix.Multiply(System.Double(), System.Double())
  name.vb: Multiply(Double(), Double())
- uid: g3.PackedSparseMatrix.Multiply_Parallel(System.Double[],System.Double[])
  commentId: M:g3.PackedSparseMatrix.Multiply_Parallel(System.Double[],System.Double[])
  id: Multiply_Parallel(System.Double[],System.Double[])
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: Multiply_Parallel(Double[], Double[])
  nameWithType: PackedSparseMatrix.Multiply_Parallel(Double[], Double[])
  fullName: g3.PackedSparseMatrix.Multiply_Parallel(System.Double[], System.Double[])
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Multiply_Parallel
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 268
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Multiply_Parallel(double[] X, double[] Result)
    parameters:
    - id: X
      type: System.Double[]
    - id: Result
      type: System.Double[]
    content.vb: Public Sub Multiply_Parallel(X As Double(), Result As Double())
  overload: g3.PackedSparseMatrix.Multiply_Parallel*
  nameWithType.vb: PackedSparseMatrix.Multiply_Parallel(Double(), Double())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.PackedSparseMatrix.Multiply_Parallel(System.Double(), System.Double())
  name.vb: Multiply_Parallel(Double(), Double())
- uid: g3.PackedSparseMatrix.Multiply_Parallel_3(System.Double[][],System.Double[][])
  commentId: M:g3.PackedSparseMatrix.Multiply_Parallel_3(System.Double[][],System.Double[][])
  id: Multiply_Parallel_3(System.Double[][],System.Double[][])
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: Multiply_Parallel_3(Double[][], Double[][])
  nameWithType: PackedSparseMatrix.Multiply_Parallel_3(Double[][], Double[][])
  fullName: g3.PackedSparseMatrix.Multiply_Parallel_3(System.Double[][], System.Double[][])
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Multiply_Parallel_3
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 286
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nHardcoded variant for 3 RHS vectors, much faster\n"
  example: []
  syntax:
    content: public void Multiply_Parallel_3(double[][] X, double[][] Result)
    parameters:
    - id: X
      type: System.Double[][]
    - id: Result
      type: System.Double[][]
    content.vb: Public Sub Multiply_Parallel_3(X As Double()(), Result As Double()())
  overload: g3.PackedSparseMatrix.Multiply_Parallel_3*
  nameWithType.vb: PackedSparseMatrix.Multiply_Parallel_3(Double()(), Double()())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.PackedSparseMatrix.Multiply_Parallel_3(System.Double()(), System.Double()())
  name.vb: Multiply_Parallel_3(Double()(), Double()())
- uid: g3.PackedSparseMatrix.DotRowColumn(System.Int32,System.Int32,g3.PackedSparseMatrix)
  commentId: M:g3.PackedSparseMatrix.DotRowColumn(System.Int32,System.Int32,g3.PackedSparseMatrix)
  id: DotRowColumn(System.Int32,System.Int32,g3.PackedSparseMatrix)
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: DotRowColumn(Int32, Int32, PackedSparseMatrix)
  nameWithType: PackedSparseMatrix.DotRowColumn(Int32, Int32, PackedSparseMatrix)
  fullName: g3.PackedSparseMatrix.DotRowColumn(System.Int32, System.Int32, g3.PackedSparseMatrix)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: DotRowColumn
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 310
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nCompute dot product of this.row[r] and M.col[c], where the\ncolumn is stored as MTranspose.row[c]\n"
  example: []
  syntax:
    content: public double DotRowColumn(int r, int c, PackedSparseMatrix MTranspose)
    parameters:
    - id: r
      type: System.Int32
    - id: c
      type: System.Int32
    - id: MTranspose
      type: g3.PackedSparseMatrix
    return:
      type: System.Double
    content.vb: Public Function DotRowColumn(r As Integer, c As Integer, MTranspose As PackedSparseMatrix) As Double
  overload: g3.PackedSparseMatrix.DotRowColumn*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.PackedSparseMatrix.DotRowSelf(System.Int32)
  commentId: M:g3.PackedSparseMatrix.DotRowSelf(System.Int32)
  id: DotRowSelf(System.Int32)
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: DotRowSelf(Int32)
  nameWithType: PackedSparseMatrix.DotRowSelf(Int32)
  fullName: g3.PackedSparseMatrix.DotRowSelf(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: DotRowSelf
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 352
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nDot product of this.row[r] with itself\n"
  example: []
  syntax:
    content: public double DotRowSelf(int r)
    parameters:
    - id: r
      type: System.Int32
    return:
      type: System.Double
    content.vb: Public Function DotRowSelf(r As Integer) As Double
  overload: g3.PackedSparseMatrix.DotRowSelf*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.PackedSparseMatrix.DotRowAllColumns(System.Int32,System.Double[],System.Int32[],g3.PackedSparseMatrix)
  commentId: M:g3.PackedSparseMatrix.DotRowAllColumns(System.Int32,System.Double[],System.Int32[],g3.PackedSparseMatrix)
  id: DotRowAllColumns(System.Int32,System.Double[],System.Int32[],g3.PackedSparseMatrix)
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: DotRowAllColumns(Int32, Double[], Int32[], PackedSparseMatrix)
  nameWithType: PackedSparseMatrix.DotRowAllColumns(Int32, Double[], Int32[], PackedSparseMatrix)
  fullName: g3.PackedSparseMatrix.DotRowAllColumns(System.Int32, System.Double[], System.Int32[], g3.PackedSparseMatrix)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: DotRowAllColumns
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 370
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nCompute dot product of this.row[r] with all columns of M,\nwhere columns are stored in MTranspose rows.\nIn theory more efficient than doing DotRowColumn(r,c) for each c, \nhowever so far the difference is negligible...perhaps because\nthere are quite a few more branches in the inner loop\n"
  example: []
  syntax:
    content: public void DotRowAllColumns(int r, double[] sums, int[] col_indices, PackedSparseMatrix MTranspose)
    parameters:
    - id: r
      type: System.Int32
    - id: sums
      type: System.Double[]
    - id: col_indices
      type: System.Int32[]
    - id: MTranspose
      type: g3.PackedSparseMatrix
    content.vb: Public Sub DotRowAllColumns(r As Integer, sums As Double(), col_indices As Integer(), MTranspose As PackedSparseMatrix)
  overload: g3.PackedSparseMatrix.DotRowAllColumns*
  nameWithType.vb: PackedSparseMatrix.DotRowAllColumns(Int32, Double(), Int32(), PackedSparseMatrix)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.PackedSparseMatrix.DotRowAllColumns(System.Int32, System.Double(), System.Int32(), g3.PackedSparseMatrix)
  name.vb: DotRowAllColumns(Int32, Double(), Int32(), PackedSparseMatrix)
- uid: g3.PackedSparseMatrix.DotRows(System.Int32,System.Int32,System.Int32)
  commentId: M:g3.PackedSparseMatrix.DotRows(System.Int32,System.Int32,System.Int32)
  id: DotRows(System.Int32,System.Int32,System.Int32)
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: DotRows(Int32, Int32, Int32)
  nameWithType: PackedSparseMatrix.DotRows(Int32, Int32, Int32)
  fullName: g3.PackedSparseMatrix.DotRows(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: DotRows
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 412
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nCompute dot product of this.row[r1] and this.row[r2], up to N elements\n"
  example: []
  syntax:
    content: public double DotRows(int r1, int r2, int MaxCol = 2147483647)
    parameters:
    - id: r1
      type: System.Int32
    - id: r2
      type: System.Int32
    - id: MaxCol
      type: System.Int32
    return:
      type: System.Double
    content.vb: Public Function DotRows(r1 As Integer, r2 As Integer, MaxCol As Integer = 2147483647) As Double
  overload: g3.PackedSparseMatrix.DotRows*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.PackedSparseMatrix.DotRowVector(System.Int32,System.Double[],System.Int32)
  commentId: M:g3.PackedSparseMatrix.DotRowVector(System.Int32,System.Double[],System.Int32)
  id: DotRowVector(System.Int32,System.Double[],System.Int32)
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: DotRowVector(Int32, Double[], Int32)
  nameWithType: PackedSparseMatrix.DotRowVector(Int32, Double[], Int32)
  fullName: g3.PackedSparseMatrix.DotRowVector(System.Int32, System.Double[], System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: DotRowVector
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 458
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nCompute dot product of this.row[r] and vec, up to N elements\n"
  example: []
  syntax:
    content: public double DotRowVector(int r, double[] vec, int MaxCol = 2147483647)
    parameters:
    - id: r
      type: System.Int32
    - id: vec
      type: System.Double[]
    - id: MaxCol
      type: System.Int32
    return:
      type: System.Double
    content.vb: Public Function DotRowVector(r As Integer, vec As Double(), MaxCol As Integer = 2147483647) As Double
  overload: g3.PackedSparseMatrix.DotRowVector*
  nameWithType.vb: PackedSparseMatrix.DotRowVector(Int32, Double(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.PackedSparseMatrix.DotRowVector(System.Int32, System.Double(), System.Int32)
  name.vb: DotRowVector(Int32, Double(), Int32)
- uid: g3.PackedSparseMatrix.DotColumnVector(System.Int32,System.Double[],System.Int32,System.Int32)
  commentId: M:g3.PackedSparseMatrix.DotColumnVector(System.Int32,System.Double[],System.Int32,System.Int32)
  id: DotColumnVector(System.Int32,System.Double[],System.Int32,System.Int32)
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: DotColumnVector(Int32, Double[], Int32, Int32)
  nameWithType: PackedSparseMatrix.DotColumnVector(Int32, Double[], Int32, Int32)
  fullName: g3.PackedSparseMatrix.DotColumnVector(System.Int32, System.Double[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: DotColumnVector
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 483
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nCompute dot product of this.row[r1] and this.row[r2], up to N elements\n"
  example: []
  syntax:
    content: public double DotColumnVector(int c, double[] vec, int start_row = 0, int end_row = 2147483647)
    parameters:
    - id: c
      type: System.Int32
    - id: vec
      type: System.Double[]
    - id: start_row
      type: System.Int32
    - id: end_row
      type: System.Int32
    return:
      type: System.Double
    content.vb: Public Function DotColumnVector(c As Integer, vec As Double(), start_row As Integer = 0, end_row As Integer = 2147483647) As Double
  overload: g3.PackedSparseMatrix.DotColumnVector*
  nameWithType.vb: PackedSparseMatrix.DotColumnVector(Int32, Double(), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.PackedSparseMatrix.DotColumnVector(System.Int32, System.Double(), System.Int32, System.Int32)
  name.vb: DotColumnVector(Int32, Double(), Int32, Int32)
- uid: g3.PackedSparseMatrix.Square
  commentId: M:g3.PackedSparseMatrix.Square
  id: Square
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: Square()
  nameWithType: PackedSparseMatrix.Square()
  fullName: g3.PackedSparseMatrix.Square()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Square
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 520
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public PackedSparseMatrix Square()
    return:
      type: g3.PackedSparseMatrix
    content.vb: Public Function Square As PackedSparseMatrix
  overload: g3.PackedSparseMatrix.Square*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.PackedSparseMatrix.FrobeniusNorm
  commentId: P:g3.PackedSparseMatrix.FrobeniusNorm
  id: FrobeniusNorm
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: FrobeniusNorm
  nameWithType: PackedSparseMatrix.FrobeniusNorm
  fullName: g3.PackedSparseMatrix.FrobeniusNorm
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: FrobeniusNorm
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 567
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double FrobeniusNorm { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property FrobeniusNorm As Double
  overload: g3.PackedSparseMatrix.FrobeniusNorm*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.PackedSparseMatrix.MaxNorm
  commentId: P:g3.PackedSparseMatrix.MaxNorm
  id: MaxNorm
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: MaxNorm
  nameWithType: PackedSparseMatrix.MaxNorm
  fullName: g3.PackedSparseMatrix.MaxNorm
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: MaxNorm
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 580
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double MaxNorm { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property MaxNorm As Double
  overload: g3.PackedSparseMatrix.MaxNorm*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.PackedSparseMatrix.Trace
  commentId: P:g3.PackedSparseMatrix.Trace
  id: Trace
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: Trace
  nameWithType: PackedSparseMatrix.Trace
  fullName: g3.PackedSparseMatrix.Trace
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Trace
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 595
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double Trace { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Trace As Double
  overload: g3.PackedSparseMatrix.Trace*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.PackedSparseMatrix.MatrixInfo(System.Boolean)
  commentId: M:g3.PackedSparseMatrix.MatrixInfo(System.Boolean)
  id: MatrixInfo(System.Boolean)
  parent: g3.PackedSparseMatrix
  langs:
  - csharp
  - vb
  name: MatrixInfo(Boolean)
  nameWithType: PackedSparseMatrix.MatrixInfo(Boolean)
  fullName: g3.PackedSparseMatrix.MatrixInfo(System.Boolean)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: MatrixInfo
    path: ../Assets/geometry3Sharp/solvers/PackedSparseMatrix.cs
    startLine: 612
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public string MatrixInfo(bool bExtended = false)
    parameters:
    - id: bExtended
      type: System.Boolean
    return:
      type: System.String
    content.vb: Public Function MatrixInfo(bExtended As Boolean = False) As String
  overload: g3.PackedSparseMatrix.MatrixInfo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: g3.PackedSparseMatrix.nonzero[][]
  isExternal: true
  name: PackedSparseMatrix.nonzero[][]
  nameWithType: PackedSparseMatrix.nonzero[][]
  fullName: g3.PackedSparseMatrix.nonzero[][]
  nameWithType.vb: PackedSparseMatrix.nonzero()()
  fullName.vb: g3.PackedSparseMatrix.nonzero()()
  name.vb: PackedSparseMatrix.nonzero()()
  spec.csharp:
  - uid: g3.PackedSparseMatrix.nonzero
    name: PackedSparseMatrix.nonzero
    nameWithType: PackedSparseMatrix.nonzero
    fullName: g3.PackedSparseMatrix.nonzero
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: g3.PackedSparseMatrix.nonzero
    name: PackedSparseMatrix.nonzero
    nameWithType: PackedSparseMatrix.nonzero
    fullName: g3.PackedSparseMatrix.nonzero
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: g3.PackedSparseMatrix.StorageModes
  commentId: T:g3.PackedSparseMatrix.StorageModes
  parent: g3
  name: PackedSparseMatrix.StorageModes
  nameWithType: PackedSparseMatrix.StorageModes
  fullName: g3.PackedSparseMatrix.StorageModes
- uid: g3.PackedSparseMatrix.#ctor*
  commentId: Overload:g3.PackedSparseMatrix.#ctor
  name: PackedSparseMatrix
  nameWithType: PackedSparseMatrix.PackedSparseMatrix
  fullName: g3.PackedSparseMatrix.PackedSparseMatrix
- uid: g3.PackedSparseMatrix
  commentId: T:g3.PackedSparseMatrix
  parent: g3
  name: PackedSparseMatrix
  nameWithType: PackedSparseMatrix
  fullName: g3.PackedSparseMatrix
- uid: g3.SymmetricSparseMatrix
  commentId: T:g3.SymmetricSparseMatrix
  parent: g3
  name: SymmetricSparseMatrix
  nameWithType: SymmetricSparseMatrix
  fullName: g3.SymmetricSparseMatrix
- uid: g3.DVector{g3.matrix_entry}
  commentId: T:g3.DVector{g3.matrix_entry}
  parent: g3
  definition: g3.DVector`1
  name: DVector<matrix_entry>
  nameWithType: DVector<matrix_entry>
  fullName: g3.DVector<g3.matrix_entry>
  nameWithType.vb: DVector(Of matrix_entry)
  fullName.vb: g3.DVector(Of g3.matrix_entry)
  name.vb: DVector(Of matrix_entry)
  spec.csharp:
  - uid: g3.DVector`1
    name: DVector
    nameWithType: DVector
    fullName: g3.DVector
  - name: <
    nameWithType: <
    fullName: <
  - uid: g3.matrix_entry
    name: matrix_entry
    nameWithType: matrix_entry
    fullName: g3.matrix_entry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: g3.DVector`1
    name: DVector
    nameWithType: DVector
    fullName: g3.DVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: g3.matrix_entry
    name: matrix_entry
    nameWithType: matrix_entry
    fullName: g3.matrix_entry
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.DVector`1
  commentId: T:g3.DVector`1
  parent: g3
  name: DVector<T>
  nameWithType: DVector<T>
  fullName: g3.DVector<T>
  nameWithType.vb: DVector(Of T)
  fullName.vb: g3.DVector(Of T)
  name.vb: DVector(Of T)
  spec.csharp:
  - uid: g3.DVector`1
    name: DVector
    nameWithType: DVector
    fullName: g3.DVector
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: g3.DVector`1
    name: DVector
    nameWithType: DVector
    fullName: g3.DVector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.PackedSparseMatrix.FromDense*
  commentId: Overload:g3.PackedSparseMatrix.FromDense
  name: FromDense
  nameWithType: PackedSparseMatrix.FromDense
  fullName: g3.PackedSparseMatrix.FromDense
- uid: g3.DenseMatrix
  commentId: T:g3.DenseMatrix
  parent: g3
  name: DenseMatrix
  nameWithType: DenseMatrix
  fullName: g3.DenseMatrix
- uid: g3.PackedSparseMatrix.Item*
  commentId: Overload:g3.PackedSparseMatrix.Item
  name: Item
  nameWithType: PackedSparseMatrix.Item
  fullName: g3.PackedSparseMatrix.Item
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: g3.PackedSparseMatrix.Sort*
  commentId: Overload:g3.PackedSparseMatrix.Sort
  name: Sort
  nameWithType: PackedSparseMatrix.Sort
  fullName: g3.PackedSparseMatrix.Sort
- uid: g3.PackedSparseMatrix.NonZerosRange*
  commentId: Overload:g3.PackedSparseMatrix.NonZerosRange
  name: NonZerosRange
  nameWithType: PackedSparseMatrix.NonZerosRange
  fullName: g3.PackedSparseMatrix.NonZerosRange
- uid: g3.Interval1i
  commentId: T:g3.Interval1i
  parent: g3
  name: Interval1i
  nameWithType: Interval1i
  fullName: g3.Interval1i
- uid: g3.PackedSparseMatrix.NonZeroIndicesByRow*
  commentId: Overload:g3.PackedSparseMatrix.NonZeroIndicesByRow
  name: NonZeroIndicesByRow
  nameWithType: PackedSparseMatrix.NonZeroIndicesByRow
  fullName: g3.PackedSparseMatrix.NonZeroIndicesByRow
- uid: System.Collections.Generic.IEnumerable{g3.Vector2i}
  commentId: T:System.Collections.Generic.IEnumerable{g3.Vector2i}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Vector2i>
  nameWithType: IEnumerable<Vector2i>
  fullName: System.Collections.Generic.IEnumerable<g3.Vector2i>
  nameWithType.vb: IEnumerable(Of Vector2i)
  fullName.vb: System.Collections.Generic.IEnumerable(Of g3.Vector2i)
  name.vb: IEnumerable(Of Vector2i)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: g3.Vector2i
    name: Vector2i
    nameWithType: Vector2i
    fullName: g3.Vector2i
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: g3.Vector2i
    name: Vector2i
    nameWithType: Vector2i
    fullName: g3.Vector2i
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: g3.PackedSparseMatrix.NonZeroIndicesForRow*
  commentId: Overload:g3.PackedSparseMatrix.NonZeroIndicesForRow
  name: NonZeroIndicesForRow
  nameWithType: PackedSparseMatrix.NonZeroIndicesForRow
  fullName: g3.PackedSparseMatrix.NonZeroIndicesForRow
- uid: g3.PackedSparseMatrix.Multiply*
  commentId: Overload:g3.PackedSparseMatrix.Multiply
  name: Multiply
  nameWithType: PackedSparseMatrix.Multiply
  fullName: g3.PackedSparseMatrix.Multiply
- uid: System.Double[]
  isExternal: true
  name: Double[]
  nameWithType: Double[]
  fullName: System.Double[]
  nameWithType.vb: Double()
  fullName.vb: System.Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: g3.PackedSparseMatrix.Multiply_Parallel*
  commentId: Overload:g3.PackedSparseMatrix.Multiply_Parallel
  name: Multiply_Parallel
  nameWithType: PackedSparseMatrix.Multiply_Parallel
  fullName: g3.PackedSparseMatrix.Multiply_Parallel
- uid: g3.PackedSparseMatrix.Multiply_Parallel_3*
  commentId: Overload:g3.PackedSparseMatrix.Multiply_Parallel_3
  name: Multiply_Parallel_3
  nameWithType: PackedSparseMatrix.Multiply_Parallel_3
  fullName: g3.PackedSparseMatrix.Multiply_Parallel_3
- uid: System.Double[][]
  isExternal: true
  name: Double[][]
  nameWithType: Double[][]
  fullName: System.Double[][]
  nameWithType.vb: Double()()
  fullName.vb: System.Double()()
  name.vb: Double()()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: g3.PackedSparseMatrix.DotRowColumn*
  commentId: Overload:g3.PackedSparseMatrix.DotRowColumn
  name: DotRowColumn
  nameWithType: PackedSparseMatrix.DotRowColumn
  fullName: g3.PackedSparseMatrix.DotRowColumn
- uid: g3.PackedSparseMatrix.DotRowSelf*
  commentId: Overload:g3.PackedSparseMatrix.DotRowSelf
  name: DotRowSelf
  nameWithType: PackedSparseMatrix.DotRowSelf
  fullName: g3.PackedSparseMatrix.DotRowSelf
- uid: g3.PackedSparseMatrix.DotRowAllColumns*
  commentId: Overload:g3.PackedSparseMatrix.DotRowAllColumns
  name: DotRowAllColumns
  nameWithType: PackedSparseMatrix.DotRowAllColumns
  fullName: g3.PackedSparseMatrix.DotRowAllColumns
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: g3.PackedSparseMatrix.DotRows*
  commentId: Overload:g3.PackedSparseMatrix.DotRows
  name: DotRows
  nameWithType: PackedSparseMatrix.DotRows
  fullName: g3.PackedSparseMatrix.DotRows
- uid: g3.PackedSparseMatrix.DotRowVector*
  commentId: Overload:g3.PackedSparseMatrix.DotRowVector
  name: DotRowVector
  nameWithType: PackedSparseMatrix.DotRowVector
  fullName: g3.PackedSparseMatrix.DotRowVector
- uid: g3.PackedSparseMatrix.DotColumnVector*
  commentId: Overload:g3.PackedSparseMatrix.DotColumnVector
  name: DotColumnVector
  nameWithType: PackedSparseMatrix.DotColumnVector
  fullName: g3.PackedSparseMatrix.DotColumnVector
- uid: g3.PackedSparseMatrix.Square*
  commentId: Overload:g3.PackedSparseMatrix.Square
  name: Square
  nameWithType: PackedSparseMatrix.Square
  fullName: g3.PackedSparseMatrix.Square
- uid: g3.PackedSparseMatrix.FrobeniusNorm*
  commentId: Overload:g3.PackedSparseMatrix.FrobeniusNorm
  name: FrobeniusNorm
  nameWithType: PackedSparseMatrix.FrobeniusNorm
  fullName: g3.PackedSparseMatrix.FrobeniusNorm
- uid: g3.PackedSparseMatrix.MaxNorm*
  commentId: Overload:g3.PackedSparseMatrix.MaxNorm
  name: MaxNorm
  nameWithType: PackedSparseMatrix.MaxNorm
  fullName: g3.PackedSparseMatrix.MaxNorm
- uid: g3.PackedSparseMatrix.Trace*
  commentId: Overload:g3.PackedSparseMatrix.Trace
  name: Trace
  nameWithType: PackedSparseMatrix.Trace
  fullName: g3.PackedSparseMatrix.Trace
- uid: g3.PackedSparseMatrix.MatrixInfo*
  commentId: Overload:g3.PackedSparseMatrix.MatrixInfo
  name: MatrixInfo
  nameWithType: PackedSparseMatrix.MatrixInfo
  fullName: g3.PackedSparseMatrix.MatrixInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

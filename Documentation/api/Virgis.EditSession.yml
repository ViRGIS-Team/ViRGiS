### YamlMime:ManagedReference
items:
- uid: Virgis.EditSession
  commentId: T:Virgis.EditSession
  id: EditSession
  parent: Virgis
  children:
  - Virgis.EditSession.#ctor
  - Virgis.EditSession.AddEditableLayerChangedListener(UnityEngine.Events.UnityAction{Virgis.IVirgisLayer})
  - Virgis.EditSession.AddEndEditSessionListener(UnityEngine.Events.UnityAction{System.Boolean})
  - Virgis.EditSession.AddStartEditSessionListener(UnityEngine.Events.UnityAction)
  - Virgis.EditSession.editableLayer
  - Virgis.EditSession.IsActive
  - Virgis.EditSession.mode
  - Virgis.EditSession.Start
  - Virgis.EditSession.StopAndDiscard
  - Virgis.EditSession.StopAndSave
  langs:
  - csharp
  - vb
  name: EditSession
  nameWithType: EditSession
  fullName: Virgis.EditSession
  type: Class
  source:
    remote:
      path: Assets/Scripts/EditSession.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: EditSession
    path: ../Assets/Scripts/EditSession.cs
    startLine: 22
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public class EditSession
    content.vb: Public Class EditSession
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Virgis.EditSession.#ctor
  commentId: M:Virgis.EditSession.#ctor
  id: '#ctor'
  parent: Virgis.EditSession
  langs:
  - csharp
  - vb
  name: EditSession()
  nameWithType: EditSession.EditSession()
  fullName: Virgis.EditSession.EditSession()
  type: Constructor
  source:
    remote:
      path: Assets/Scripts/EditSession.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/Scripts/EditSession.cs
    startLine: 34
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public EditSession()
    content.vb: Public Sub New
  overload: Virgis.EditSession.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.EditSession.editableLayer
  commentId: P:Virgis.EditSession.editableLayer
  id: editableLayer
  parent: Virgis.EditSession
  langs:
  - csharp
  - vb
  name: editableLayer
  nameWithType: EditSession.editableLayer
  fullName: Virgis.EditSession.editableLayer
  type: Property
  source:
    remote:
      path: Assets/Scripts/EditSession.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: editableLayer
    path: ../Assets/Scripts/EditSession.cs
    startLine: 42
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public IVirgisLayer editableLayer { get; set; }
    parameters: []
    return:
      type: Virgis.IVirgisLayer
    content.vb: Public Property editableLayer As IVirgisLayer
  overload: Virgis.EditSession.editableLayer*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Virgis.EditSession.IsActive
  commentId: M:Virgis.EditSession.IsActive
  id: IsActive
  parent: Virgis.EditSession
  langs:
  - csharp
  - vb
  name: IsActive()
  nameWithType: EditSession.IsActive()
  fullName: Virgis.EditSession.IsActive()
  type: Method
  source:
    remote:
      path: Assets/Scripts/EditSession.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IsActive
    path: ../Assets/Scripts/EditSession.cs
    startLine: 52
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public bool IsActive()
    return:
      type: System.Boolean
    content.vb: Public Function IsActive As Boolean
  overload: Virgis.EditSession.IsActive*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.EditSession.Start
  commentId: M:Virgis.EditSession.Start
  id: Start
  parent: Virgis.EditSession
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: EditSession.Start()
  fullName: Virgis.EditSession.Start()
  type: Method
  source:
    remote:
      path: Assets/Scripts/EditSession.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Start
    path: ../Assets/Scripts/EditSession.cs
    startLine: 56
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: Virgis.EditSession.Start*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.EditSession.StopAndSave
  commentId: M:Virgis.EditSession.StopAndSave
  id: StopAndSave
  parent: Virgis.EditSession
  langs:
  - csharp
  - vb
  name: StopAndSave()
  nameWithType: EditSession.StopAndSave()
  fullName: Virgis.EditSession.StopAndSave()
  type: Method
  source:
    remote:
      path: Assets/Scripts/EditSession.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: StopAndSave
    path: ../Assets/Scripts/EditSession.cs
    startLine: 63
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public void StopAndSave()
    content.vb: Public Sub StopAndSave
  overload: Virgis.EditSession.StopAndSave*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.EditSession.StopAndDiscard
  commentId: M:Virgis.EditSession.StopAndDiscard
  id: StopAndDiscard
  parent: Virgis.EditSession
  langs:
  - csharp
  - vb
  name: StopAndDiscard()
  nameWithType: EditSession.StopAndDiscard()
  fullName: Virgis.EditSession.StopAndDiscard()
  type: Method
  source:
    remote:
      path: Assets/Scripts/EditSession.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: StopAndDiscard
    path: ../Assets/Scripts/EditSession.cs
    startLine: 70
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public void StopAndDiscard()
    content.vb: Public Sub StopAndDiscard
  overload: Virgis.EditSession.StopAndDiscard*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.EditSession.AddStartEditSessionListener(UnityEngine.Events.UnityAction)
  commentId: M:Virgis.EditSession.AddStartEditSessionListener(UnityEngine.Events.UnityAction)
  id: AddStartEditSessionListener(UnityEngine.Events.UnityAction)
  parent: Virgis.EditSession
  langs:
  - csharp
  - vb
  name: AddStartEditSessionListener(UnityAction)
  nameWithType: EditSession.AddStartEditSessionListener(UnityAction)
  fullName: Virgis.EditSession.AddStartEditSessionListener(UnityEngine.Events.UnityAction)
  type: Method
  source:
    remote:
      path: Assets/Scripts/EditSession.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AddStartEditSessionListener
    path: ../Assets/Scripts/EditSession.cs
    startLine: 77
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public void AddStartEditSessionListener(UnityAction action)
    parameters:
    - id: action
      type: UnityEngine.Events.UnityAction
    content.vb: Public Sub AddStartEditSessionListener(action As UnityAction)
  overload: Virgis.EditSession.AddStartEditSessionListener*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.EditSession.AddEndEditSessionListener(UnityEngine.Events.UnityAction{System.Boolean})
  commentId: M:Virgis.EditSession.AddEndEditSessionListener(UnityEngine.Events.UnityAction{System.Boolean})
  id: AddEndEditSessionListener(UnityEngine.Events.UnityAction{System.Boolean})
  parent: Virgis.EditSession
  langs:
  - csharp
  - vb
  name: AddEndEditSessionListener(UnityAction<Boolean>)
  nameWithType: EditSession.AddEndEditSessionListener(UnityAction<Boolean>)
  fullName: Virgis.EditSession.AddEndEditSessionListener(UnityEngine.Events.UnityAction<System.Boolean>)
  type: Method
  source:
    remote:
      path: Assets/Scripts/EditSession.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AddEndEditSessionListener
    path: ../Assets/Scripts/EditSession.cs
    startLine: 81
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public void AddEndEditSessionListener(UnityAction<bool> action)
    parameters:
    - id: action
      type: UnityEngine.Events.UnityAction{System.Boolean}
    content.vb: Public Sub AddEndEditSessionListener(action As UnityAction(Of Boolean))
  overload: Virgis.EditSession.AddEndEditSessionListener*
  nameWithType.vb: EditSession.AddEndEditSessionListener(UnityAction(Of Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Virgis.EditSession.AddEndEditSessionListener(UnityEngine.Events.UnityAction(Of System.Boolean))
  name.vb: AddEndEditSessionListener(UnityAction(Of Boolean))
- uid: Virgis.EditSession.AddEditableLayerChangedListener(UnityEngine.Events.UnityAction{Virgis.IVirgisLayer})
  commentId: M:Virgis.EditSession.AddEditableLayerChangedListener(UnityEngine.Events.UnityAction{Virgis.IVirgisLayer})
  id: AddEditableLayerChangedListener(UnityEngine.Events.UnityAction{Virgis.IVirgisLayer})
  parent: Virgis.EditSession
  langs:
  - csharp
  - vb
  name: AddEditableLayerChangedListener(UnityAction<IVirgisLayer>)
  nameWithType: EditSession.AddEditableLayerChangedListener(UnityAction<IVirgisLayer>)
  fullName: Virgis.EditSession.AddEditableLayerChangedListener(UnityEngine.Events.UnityAction<Virgis.IVirgisLayer>)
  type: Method
  source:
    remote:
      path: Assets/Scripts/EditSession.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AddEditableLayerChangedListener
    path: ../Assets/Scripts/EditSession.cs
    startLine: 85
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public void AddEditableLayerChangedListener(UnityAction<IVirgisLayer> action)
    parameters:
    - id: action
      type: UnityEngine.Events.UnityAction{Virgis.IVirgisLayer}
    content.vb: Public Sub AddEditableLayerChangedListener(action As UnityAction(Of IVirgisLayer))
  overload: Virgis.EditSession.AddEditableLayerChangedListener*
  nameWithType.vb: EditSession.AddEditableLayerChangedListener(UnityAction(Of IVirgisLayer))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Virgis.EditSession.AddEditableLayerChangedListener(UnityEngine.Events.UnityAction(Of Virgis.IVirgisLayer))
  name.vb: AddEditableLayerChangedListener(UnityAction(Of IVirgisLayer))
- uid: Virgis.EditSession.mode
  commentId: P:Virgis.EditSession.mode
  id: mode
  parent: Virgis.EditSession
  langs:
  - csharp
  - vb
  name: mode
  nameWithType: EditSession.mode
  fullName: Virgis.EditSession.mode
  type: Property
  source:
    remote:
      path: Assets/Scripts/EditSession.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: mode
    path: ../Assets/Scripts/EditSession.cs
    startLine: 89
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public EditSession.EditMode mode { get; set; }
    parameters: []
    return:
      type: Virgis.EditSession.EditMode
    content.vb: Public Property mode As EditSession.EditMode
  overload: Virgis.EditSession.mode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Virgis
  commentId: N:Virgis
  name: Virgis
  nameWithType: Virgis
  fullName: Virgis
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Virgis.EditSession.#ctor*
  commentId: Overload:Virgis.EditSession.#ctor
  name: EditSession
  nameWithType: EditSession.EditSession
  fullName: Virgis.EditSession.EditSession
- uid: Virgis.EditSession.editableLayer*
  commentId: Overload:Virgis.EditSession.editableLayer
  name: editableLayer
  nameWithType: EditSession.editableLayer
  fullName: Virgis.EditSession.editableLayer
- uid: Virgis.IVirgisLayer
  commentId: T:Virgis.IVirgisLayer
  parent: Virgis
  name: IVirgisLayer
  nameWithType: IVirgisLayer
  fullName: Virgis.IVirgisLayer
- uid: Virgis.EditSession.IsActive*
  commentId: Overload:Virgis.EditSession.IsActive
  name: IsActive
  nameWithType: EditSession.IsActive
  fullName: Virgis.EditSession.IsActive
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Virgis.EditSession.Start*
  commentId: Overload:Virgis.EditSession.Start
  name: Start
  nameWithType: EditSession.Start
  fullName: Virgis.EditSession.Start
- uid: Virgis.EditSession.StopAndSave*
  commentId: Overload:Virgis.EditSession.StopAndSave
  name: StopAndSave
  nameWithType: EditSession.StopAndSave
  fullName: Virgis.EditSession.StopAndSave
- uid: Virgis.EditSession.StopAndDiscard*
  commentId: Overload:Virgis.EditSession.StopAndDiscard
  name: StopAndDiscard
  nameWithType: EditSession.StopAndDiscard
  fullName: Virgis.EditSession.StopAndDiscard
- uid: Virgis.EditSession.AddStartEditSessionListener*
  commentId: Overload:Virgis.EditSession.AddStartEditSessionListener
  name: AddStartEditSessionListener
  nameWithType: EditSession.AddStartEditSessionListener
  fullName: Virgis.EditSession.AddStartEditSessionListener
- uid: UnityEngine.Events.UnityAction
  commentId: T:UnityEngine.Events.UnityAction
  parent: UnityEngine.Events
  isExternal: true
  name: UnityAction
  nameWithType: UnityAction
  fullName: UnityEngine.Events.UnityAction
- uid: UnityEngine.Events
  commentId: N:UnityEngine.Events
  isExternal: true
  name: UnityEngine.Events
  nameWithType: UnityEngine.Events
  fullName: UnityEngine.Events
- uid: Virgis.EditSession.AddEndEditSessionListener*
  commentId: Overload:Virgis.EditSession.AddEndEditSessionListener
  name: AddEndEditSessionListener
  nameWithType: EditSession.AddEndEditSessionListener
  fullName: Virgis.EditSession.AddEndEditSessionListener
- uid: UnityEngine.Events.UnityAction{System.Boolean}
  commentId: T:UnityEngine.Events.UnityAction{System.Boolean}
  parent: UnityEngine.Events
  definition: UnityEngine.Events.UnityAction`1
  name: UnityAction<Boolean>
  nameWithType: UnityAction<Boolean>
  fullName: UnityEngine.Events.UnityAction<System.Boolean>
  nameWithType.vb: UnityAction(Of Boolean)
  fullName.vb: UnityEngine.Events.UnityAction(Of System.Boolean)
  name.vb: UnityAction(Of Boolean)
  spec.csharp:
  - uid: UnityEngine.Events.UnityAction`1
    name: UnityAction
    nameWithType: UnityAction
    fullName: UnityEngine.Events.UnityAction
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityAction`1
    name: UnityAction
    nameWithType: UnityAction
    fullName: UnityEngine.Events.UnityAction
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Events.UnityAction`1
  commentId: T:UnityEngine.Events.UnityAction`1
  isExternal: true
  name: UnityAction<T0>
  nameWithType: UnityAction<T0>
  fullName: UnityEngine.Events.UnityAction<T0>
  nameWithType.vb: UnityAction(Of T0)
  fullName.vb: UnityEngine.Events.UnityAction(Of T0)
  name.vb: UnityAction(Of T0)
  spec.csharp:
  - uid: UnityEngine.Events.UnityAction`1
    name: UnityAction
    nameWithType: UnityAction
    fullName: UnityEngine.Events.UnityAction
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T0
    nameWithType: T0
    fullName: T0
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityAction`1
    name: UnityAction
    nameWithType: UnityAction
    fullName: UnityEngine.Events.UnityAction
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T0
    nameWithType: T0
    fullName: T0
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.EditSession.AddEditableLayerChangedListener*
  commentId: Overload:Virgis.EditSession.AddEditableLayerChangedListener
  name: AddEditableLayerChangedListener
  nameWithType: EditSession.AddEditableLayerChangedListener
  fullName: Virgis.EditSession.AddEditableLayerChangedListener
- uid: UnityEngine.Events.UnityAction{Virgis.IVirgisLayer}
  commentId: T:UnityEngine.Events.UnityAction{Virgis.IVirgisLayer}
  parent: UnityEngine.Events
  definition: UnityEngine.Events.UnityAction`1
  name: UnityAction<IVirgisLayer>
  nameWithType: UnityAction<IVirgisLayer>
  fullName: UnityEngine.Events.UnityAction<Virgis.IVirgisLayer>
  nameWithType.vb: UnityAction(Of IVirgisLayer)
  fullName.vb: UnityEngine.Events.UnityAction(Of Virgis.IVirgisLayer)
  name.vb: UnityAction(Of IVirgisLayer)
  spec.csharp:
  - uid: UnityEngine.Events.UnityAction`1
    name: UnityAction
    nameWithType: UnityAction
    fullName: UnityEngine.Events.UnityAction
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Virgis.IVirgisLayer
    name: IVirgisLayer
    nameWithType: IVirgisLayer
    fullName: Virgis.IVirgisLayer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityAction`1
    name: UnityAction
    nameWithType: UnityAction
    fullName: UnityEngine.Events.UnityAction
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Virgis.IVirgisLayer
    name: IVirgisLayer
    nameWithType: IVirgisLayer
    fullName: Virgis.IVirgisLayer
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.EditSession.mode*
  commentId: Overload:Virgis.EditSession.mode
  name: mode
  nameWithType: EditSession.mode
  fullName: Virgis.EditSession.mode
- uid: Virgis.EditSession.EditMode
  commentId: T:Virgis.EditSession.EditMode
  parent: Virgis
  name: EditSession.EditMode
  nameWithType: EditSession.EditMode
  fullName: Virgis.EditSession.EditMode

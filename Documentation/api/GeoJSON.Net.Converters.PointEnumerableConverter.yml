### YamlMime:ManagedReference
items:
- uid: GeoJSON.Net.Converters.PointEnumerableConverter
  commentId: T:GeoJSON.Net.Converters.PointEnumerableConverter
  id: PointEnumerableConverter
  parent: GeoJSON.Net.Converters
  children:
  - GeoJSON.Net.Converters.PointEnumerableConverter.CanConvert(System.Type)
  - GeoJSON.Net.Converters.PointEnumerableConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  - GeoJSON.Net.Converters.PointEnumerableConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  langs:
  - csharp
  - vb
  name: PointEnumerableConverter
  nameWithType: PointEnumerableConverter
  fullName: GeoJSON.Net.Converters.PointEnumerableConverter
  type: Class
  source:
    remote:
      path: Assets/GeoJSON.Net/Converters/PointEnumerableConverter.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: PointEnumerableConverter
    path: ../Assets/GeoJSON.Net/Converters/PointEnumerableConverter.cs
    startLine: 14
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.Converters
  summary: "\nConverter to read and write the <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref> type.\n"
  example: []
  syntax:
    content: 'public class PointEnumerableConverter : JsonConverter'
    content.vb: >-
      Public Class PointEnumerableConverter
          Inherits JsonConverter
  inheritance:
  - System.Object
  - Newtonsoft.Json.JsonConverter
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: GeoJSON.Net.Converters.PointEnumerableConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:GeoJSON.Net.Converters.PointEnumerableConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  id: WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: GeoJSON.Net.Converters.PointEnumerableConverter
  langs:
  - csharp
  - vb
  name: WriteJson(JsonWriter, Object, JsonSerializer)
  nameWithType: PointEnumerableConverter.WriteJson(JsonWriter, Object, JsonSerializer)
  fullName: GeoJSON.Net.Converters.PointEnumerableConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer)
  type: Method
  source:
    remote:
      path: Assets/GeoJSON.Net/Converters/PointEnumerableConverter.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: WriteJson
    path: ../Assets/GeoJSON.Net/Converters/PointEnumerableConverter.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.Converters
  example: []
  syntax:
    content: public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
    parameters:
    - id: writer
      type: Newtonsoft.Json.JsonWriter
    - id: value
      type: System.Object
    - id: serializer
      type: Newtonsoft.Json.JsonSerializer
    content.vb: Public Overrides Sub WriteJson(writer As JsonWriter, value As Object, serializer As JsonSerializer)
  overridden: Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  overload: GeoJSON.Net.Converters.PointEnumerableConverter.WriteJson*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GeoJSON.Net.Converters.PointEnumerableConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:GeoJSON.Net.Converters.PointEnumerableConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  id: ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: GeoJSON.Net.Converters.PointEnumerableConverter
  langs:
  - csharp
  - vb
  name: ReadJson(JsonReader, Type, Object, JsonSerializer)
  nameWithType: PointEnumerableConverter.ReadJson(JsonReader, Type, Object, JsonSerializer)
  fullName: GeoJSON.Net.Converters.PointEnumerableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer)
  type: Method
  source:
    remote:
      path: Assets/GeoJSON.Net/Converters/PointEnumerableConverter.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ReadJson
    path: ../Assets/GeoJSON.Net/Converters/PointEnumerableConverter.cs
    startLine: 36
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.Converters
  example: []
  syntax:
    content: public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
    parameters:
    - id: reader
      type: Newtonsoft.Json.JsonReader
    - id: objectType
      type: System.Type
    - id: existingValue
      type: System.Object
    - id: serializer
      type: Newtonsoft.Json.JsonSerializer
    return:
      type: System.Object
    content.vb: Public Overrides Function ReadJson(reader As JsonReader, objectType As Type, existingValue As Object, serializer As JsonSerializer) As Object
  overridden: Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  overload: GeoJSON.Net.Converters.PointEnumerableConverter.ReadJson*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GeoJSON.Net.Converters.PointEnumerableConverter.CanConvert(System.Type)
  commentId: M:GeoJSON.Net.Converters.PointEnumerableConverter.CanConvert(System.Type)
  id: CanConvert(System.Type)
  parent: GeoJSON.Net.Converters.PointEnumerableConverter
  langs:
  - csharp
  - vb
  name: CanConvert(Type)
  nameWithType: PointEnumerableConverter.CanConvert(Type)
  fullName: GeoJSON.Net.Converters.PointEnumerableConverter.CanConvert(System.Type)
  type: Method
  source:
    remote:
      path: Assets/GeoJSON.Net/Converters/PointEnumerableConverter.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: CanConvert
    path: ../Assets/GeoJSON.Net/Converters/PointEnumerableConverter.cs
    startLine: 43
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.Converters
  example: []
  syntax:
    content: public override bool CanConvert(Type objectType)
    parameters:
    - id: objectType
      type: System.Type
    return:
      type: System.Boolean
    content.vb: Public Overrides Function CanConvert(objectType As Type) As Boolean
  overridden: Newtonsoft.Json.JsonConverter.CanConvert(System.Type)
  overload: GeoJSON.Net.Converters.PointEnumerableConverter.CanConvert*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: GeoJSON.Net.Converters
  commentId: N:GeoJSON.Net.Converters
  name: GeoJSON.Net.Converters
  nameWithType: GeoJSON.Net.Converters
  fullName: GeoJSON.Net.Converters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Newtonsoft.Json.JsonConverter
  commentId: T:Newtonsoft.Json.JsonConverter
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonConverter
  nameWithType: JsonConverter
  fullName: Newtonsoft.Json.JsonConverter
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: true
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
- uid: Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  name: WriteJson(JsonWriter, Object, JsonSerializer)
  nameWithType: JsonConverter.WriteJson(JsonWriter, Object, JsonSerializer)
  fullName: Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    nameWithType: JsonConverter.WriteJson
    fullName: Newtonsoft.Json.JsonConverter.WriteJson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    nameWithType: JsonWriter
    fullName: Newtonsoft.Json.JsonWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    nameWithType: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)
    name: WriteJson
    nameWithType: JsonConverter.WriteJson
    fullName: Newtonsoft.Json.JsonConverter.WriteJson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonWriter
    name: JsonWriter
    nameWithType: JsonWriter
    fullName: Newtonsoft.Json.JsonWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    nameWithType: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GeoJSON.Net.Converters.PointEnumerableConverter.WriteJson*
  commentId: Overload:GeoJSON.Net.Converters.PointEnumerableConverter.WriteJson
  name: WriteJson
  nameWithType: PointEnumerableConverter.WriteJson
  fullName: GeoJSON.Net.Converters.PointEnumerableConverter.WriteJson
- uid: Newtonsoft.Json.JsonWriter
  commentId: T:Newtonsoft.Json.JsonWriter
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonWriter
  nameWithType: JsonWriter
  fullName: Newtonsoft.Json.JsonWriter
- uid: Newtonsoft.Json.JsonSerializer
  commentId: T:Newtonsoft.Json.JsonSerializer
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: Newtonsoft.Json.JsonSerializer
- uid: Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  commentId: M:Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  name: ReadJson(JsonReader, Type, Object, JsonSerializer)
  nameWithType: JsonConverter.ReadJson(JsonReader, Type, Object, JsonSerializer)
  fullName: Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    nameWithType: JsonConverter.ReadJson
    fullName: Newtonsoft.Json.JsonConverter.ReadJson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    nameWithType: JsonReader
    fullName: Newtonsoft.Json.JsonReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    nameWithType: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)
    name: ReadJson
    nameWithType: JsonConverter.ReadJson
    fullName: Newtonsoft.Json.JsonConverter.ReadJson
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.JsonReader
    name: JsonReader
    nameWithType: JsonReader
    fullName: Newtonsoft.Json.JsonReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializer
    name: JsonSerializer
    nameWithType: JsonSerializer
    fullName: Newtonsoft.Json.JsonSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GeoJSON.Net.Converters.PointEnumerableConverter.ReadJson*
  commentId: Overload:GeoJSON.Net.Converters.PointEnumerableConverter.ReadJson
  name: ReadJson
  nameWithType: PointEnumerableConverter.ReadJson
  fullName: GeoJSON.Net.Converters.PointEnumerableConverter.ReadJson
- uid: Newtonsoft.Json.JsonReader
  commentId: T:Newtonsoft.Json.JsonReader
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonReader
  nameWithType: JsonReader
  fullName: Newtonsoft.Json.JsonReader
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Newtonsoft.Json.JsonConverter.CanConvert(System.Type)
  commentId: M:Newtonsoft.Json.JsonConverter.CanConvert(System.Type)
  parent: Newtonsoft.Json.JsonConverter
  isExternal: true
  name: CanConvert(Type)
  nameWithType: JsonConverter.CanConvert(Type)
  fullName: Newtonsoft.Json.JsonConverter.CanConvert(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.JsonConverter.CanConvert(System.Type)
    name: CanConvert
    nameWithType: JsonConverter.CanConvert
    fullName: Newtonsoft.Json.JsonConverter.CanConvert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.JsonConverter.CanConvert(System.Type)
    name: CanConvert
    nameWithType: JsonConverter.CanConvert
    fullName: Newtonsoft.Json.JsonConverter.CanConvert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GeoJSON.Net.Converters.PointEnumerableConverter.CanConvert*
  commentId: Overload:GeoJSON.Net.Converters.PointEnumerableConverter.CanConvert
  name: CanConvert
  nameWithType: PointEnumerableConverter.CanConvert
  fullName: GeoJSON.Net.Converters.PointEnumerableConverter.CanConvert
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean

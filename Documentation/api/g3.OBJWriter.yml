### YamlMime:ManagedReference
items:
- uid: g3.OBJWriter
  commentId: T:g3.OBJWriter
  id: OBJWriter
  parent: g3
  children:
  - g3.OBJWriter.CloseStreamF
  - g3.OBJWriter.GroupNameF
  - g3.OBJWriter.GroupNamePrefix
  - g3.OBJWriter.OpenStreamF
  - g3.OBJWriter.set_current_material(System.IO.TextWriter,System.Int32,g3.WriteMesh,System.Int32@)
  - g3.OBJWriter.Write(System.IO.BinaryWriter,System.Collections.Generic.List{g3.WriteMesh},g3.WriteOptions)
  - g3.OBJWriter.Write(System.IO.TextWriter,System.Collections.Generic.List{g3.WriteMesh},g3.WriteOptions)
  langs:
  - csharp
  - vb
  name: OBJWriter
  nameWithType: OBJWriter
  fullName: g3.OBJWriter
  type: Class
  source:
    remote:
      path: Assets/geometry3Sharp/io/OBJWriter.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: OBJWriter
    path: ../Assets/geometry3Sharp/io/OBJWriter.cs
    startLine: 15
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\ngradientspace OBJ writer\n\n[TODO] if mesh has groups, usemtl lines will not be written (see TODO below)\n[TODO] options to preserve vertex and triangle indices\n\n"
  example: []
  syntax:
    content: 'public class OBJWriter : IMeshWriter'
    content.vb: >-
      Public Class OBJWriter
          Implements IMeshWriter
  inheritance:
  - System.Object
  implements:
  - g3.IMeshWriter
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: g3.OBJWriter.OpenStreamF
  commentId: F:g3.OBJWriter.OpenStreamF
  id: OpenStreamF
  parent: g3.OBJWriter
  langs:
  - csharp
  - vb
  name: OpenStreamF
  nameWithType: OBJWriter.OpenStreamF
  fullName: g3.OBJWriter.OpenStreamF
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/io/OBJWriter.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: OpenStreamF
    path: ../Assets/geometry3Sharp/io/OBJWriter.cs
    startLine: 18
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Func<string, Stream> OpenStreamF
    return:
      type: System.Func{System.String,System.IO.Stream}
    content.vb: Public OpenStreamF As Func(Of String, Stream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.OBJWriter.CloseStreamF
  commentId: F:g3.OBJWriter.CloseStreamF
  id: CloseStreamF
  parent: g3.OBJWriter
  langs:
  - csharp
  - vb
  name: CloseStreamF
  nameWithType: OBJWriter.CloseStreamF
  fullName: g3.OBJWriter.CloseStreamF
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/io/OBJWriter.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: CloseStreamF
    path: ../Assets/geometry3Sharp/io/OBJWriter.cs
    startLine: 21
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Action<Stream> CloseStreamF
    return:
      type: System.Action{System.IO.Stream}
    content.vb: Public CloseStreamF As Action(Of Stream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.OBJWriter.GroupNamePrefix
  commentId: F:g3.OBJWriter.GroupNamePrefix
  id: GroupNamePrefix
  parent: g3.OBJWriter
  langs:
  - csharp
  - vb
  name: GroupNamePrefix
  nameWithType: OBJWriter.GroupNamePrefix
  fullName: g3.OBJWriter.GroupNamePrefix
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/io/OBJWriter.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GroupNamePrefix
    path: ../Assets/geometry3Sharp/io/OBJWriter.cs
    startLine: 25
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public string GroupNamePrefix
    return:
      type: System.String
    content.vb: Public GroupNamePrefix As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.OBJWriter.GroupNameF
  commentId: F:g3.OBJWriter.GroupNameF
  id: GroupNameF
  parent: g3.OBJWriter
  langs:
  - csharp
  - vb
  name: GroupNameF
  nameWithType: OBJWriter.GroupNameF
  fullName: g3.OBJWriter.GroupNameF
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/io/OBJWriter.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GroupNameF
    path: ../Assets/geometry3Sharp/io/OBJWriter.cs
    startLine: 26
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Func<int, string> GroupNameF
    return:
      type: System.Func{System.Int32,System.String}
    content.vb: Public GroupNameF As Func(Of Integer, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.OBJWriter.Write(System.IO.BinaryWriter,System.Collections.Generic.List{g3.WriteMesh},g3.WriteOptions)
  commentId: M:g3.OBJWriter.Write(System.IO.BinaryWriter,System.Collections.Generic.List{g3.WriteMesh},g3.WriteOptions)
  id: Write(System.IO.BinaryWriter,System.Collections.Generic.List{g3.WriteMesh},g3.WriteOptions)
  parent: g3.OBJWriter
  langs:
  - csharp
  - vb
  name: Write(BinaryWriter, List<WriteMesh>, WriteOptions)
  nameWithType: OBJWriter.Write(BinaryWriter, List<WriteMesh>, WriteOptions)
  fullName: g3.OBJWriter.Write(System.IO.BinaryWriter, System.Collections.Generic.List<g3.WriteMesh>, g3.WriteOptions)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/io/OBJWriter.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Write
    path: ../Assets/geometry3Sharp/io/OBJWriter.cs
    startLine: 28
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IOWriteResult Write(BinaryWriter writer, List<WriteMesh> vMeshes, WriteOptions options)
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
    - id: vMeshes
      type: System.Collections.Generic.List{g3.WriteMesh}
    - id: options
      type: g3.WriteOptions
    return:
      type: g3.IOWriteResult
    content.vb: Public Function Write(writer As BinaryWriter, vMeshes As List(Of WriteMesh), options As WriteOptions) As IOWriteResult
  overload: g3.OBJWriter.Write*
  implements:
  - g3.IMeshWriter.Write(System.IO.BinaryWriter,System.Collections.Generic.List{g3.WriteMesh},g3.WriteOptions)
  nameWithType.vb: OBJWriter.Write(BinaryWriter, List(Of WriteMesh), WriteOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.OBJWriter.Write(System.IO.BinaryWriter, System.Collections.Generic.List(Of g3.WriteMesh), g3.WriteOptions)
  name.vb: Write(BinaryWriter, List(Of WriteMesh), WriteOptions)
- uid: g3.OBJWriter.Write(System.IO.TextWriter,System.Collections.Generic.List{g3.WriteMesh},g3.WriteOptions)
  commentId: M:g3.OBJWriter.Write(System.IO.TextWriter,System.Collections.Generic.List{g3.WriteMesh},g3.WriteOptions)
  id: Write(System.IO.TextWriter,System.Collections.Generic.List{g3.WriteMesh},g3.WriteOptions)
  parent: g3.OBJWriter
  langs:
  - csharp
  - vb
  name: Write(TextWriter, List<WriteMesh>, WriteOptions)
  nameWithType: OBJWriter.Write(TextWriter, List<WriteMesh>, WriteOptions)
  fullName: g3.OBJWriter.Write(System.IO.TextWriter, System.Collections.Generic.List<g3.WriteMesh>, g3.WriteOptions)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/io/OBJWriter.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Write
    path: ../Assets/geometry3Sharp/io/OBJWriter.cs
    startLine: 34
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IOWriteResult Write(TextWriter writer, List<WriteMesh> vMeshes, WriteOptions options)
    parameters:
    - id: writer
      type: System.IO.TextWriter
    - id: vMeshes
      type: System.Collections.Generic.List{g3.WriteMesh}
    - id: options
      type: g3.WriteOptions
    return:
      type: g3.IOWriteResult
    content.vb: Public Function Write(writer As TextWriter, vMeshes As List(Of WriteMesh), options As WriteOptions) As IOWriteResult
  overload: g3.OBJWriter.Write*
  implements:
  - g3.IMeshWriter.Write(System.IO.TextWriter,System.Collections.Generic.List{g3.WriteMesh},g3.WriteOptions)
  nameWithType.vb: OBJWriter.Write(TextWriter, List(Of WriteMesh), WriteOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.OBJWriter.Write(System.IO.TextWriter, System.Collections.Generic.List(Of g3.WriteMesh), g3.WriteOptions)
  name.vb: Write(TextWriter, List(Of WriteMesh), WriteOptions)
- uid: g3.OBJWriter.set_current_material(System.IO.TextWriter,System.Int32,g3.WriteMesh,System.Int32@)
  commentId: M:g3.OBJWriter.set_current_material(System.IO.TextWriter,System.Int32,g3.WriteMesh,System.Int32@)
  id: set_current_material(System.IO.TextWriter,System.Int32,g3.WriteMesh,System.Int32@)
  parent: g3.OBJWriter
  langs:
  - csharp
  - vb
  name: set_current_material(TextWriter, Int32, WriteMesh, ref Int32)
  nameWithType: OBJWriter.set_current_material(TextWriter, Int32, WriteMesh, ref Int32)
  fullName: g3.OBJWriter.set_current_material(System.IO.TextWriter, System.Int32, g3.WriteMesh, ref System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/io/OBJWriter.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: set_current_material
    path: ../Assets/geometry3Sharp/io/OBJWriter.cs
    startLine: 216
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void set_current_material(TextWriter writer, int ti, WriteMesh mesh, ref int cur_material)
    parameters:
    - id: writer
      type: System.IO.TextWriter
    - id: ti
      type: System.Int32
    - id: mesh
      type: g3.WriteMesh
    - id: cur_material
      type: System.Int32
    content.vb: Public Sub set_current_material(writer As TextWriter, ti As Integer, mesh As WriteMesh, ByRef cur_material As Integer)
  overload: g3.OBJWriter.set_current_material*
  nameWithType.vb: OBJWriter.set_current_material(TextWriter, Int32, WriteMesh, ByRef Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.OBJWriter.set_current_material(System.IO.TextWriter, System.Int32, g3.WriteMesh, ByRef System.Int32)
  name.vb: set_current_material(TextWriter, Int32, WriteMesh, ByRef Int32)
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: g3.IMeshWriter
  commentId: T:g3.IMeshWriter
  parent: g3
  name: IMeshWriter
  nameWithType: IMeshWriter
  fullName: g3.IMeshWriter
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Func{System.String,System.IO.Stream}
  commentId: T:System.Func{System.String,System.IO.Stream}
  parent: System
  definition: System.Func`2
  name: Func<String, Stream>
  nameWithType: Func<String, Stream>
  fullName: System.Func<System.String, System.IO.Stream>
  nameWithType.vb: Func(Of String, Stream)
  fullName.vb: System.Func(Of System.String, System.IO.Stream)
  name.vb: Func(Of String, Stream)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{System.IO.Stream}
  commentId: T:System.Action{System.IO.Stream}
  parent: System
  definition: System.Action`1
  name: Action<Stream>
  nameWithType: Action<Stream>
  fullName: System.Action<System.IO.Stream>
  nameWithType.vb: Action(Of Stream)
  fullName.vb: System.Action(Of System.IO.Stream)
  name.vb: Action(Of Stream)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{System.Int32,System.String}
  commentId: T:System.Func{System.Int32,System.String}
  parent: System
  definition: System.Func`2
  name: Func<Int32, String>
  nameWithType: Func<Int32, String>
  fullName: System.Func<System.Int32, System.String>
  nameWithType.vb: Func(Of Int32, String)
  fullName.vb: System.Func(Of System.Int32, System.String)
  name.vb: Func(Of Int32, String)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.OBJWriter.Write*
  commentId: Overload:g3.OBJWriter.Write
  name: Write
  nameWithType: OBJWriter.Write
  fullName: g3.OBJWriter.Write
- uid: g3.IMeshWriter.Write(System.IO.BinaryWriter,System.Collections.Generic.List{g3.WriteMesh},g3.WriteOptions)
  commentId: M:g3.IMeshWriter.Write(System.IO.BinaryWriter,System.Collections.Generic.List{g3.WriteMesh},g3.WriteOptions)
  parent: g3.IMeshWriter
  isExternal: true
  name: Write(BinaryWriter, List<WriteMesh>, WriteOptions)
  nameWithType: IMeshWriter.Write(BinaryWriter, List<WriteMesh>, WriteOptions)
  fullName: g3.IMeshWriter.Write(System.IO.BinaryWriter, System.Collections.Generic.List<g3.WriteMesh>, g3.WriteOptions)
  nameWithType.vb: IMeshWriter.Write(BinaryWriter, List(Of WriteMesh), WriteOptions)
  fullName.vb: g3.IMeshWriter.Write(System.IO.BinaryWriter, System.Collections.Generic.List(Of g3.WriteMesh), g3.WriteOptions)
  name.vb: Write(BinaryWriter, List(Of WriteMesh), WriteOptions)
  spec.csharp:
  - uid: g3.IMeshWriter.Write(System.IO.BinaryWriter,System.Collections.Generic.List{g3.WriteMesh},g3.WriteOptions)
    name: Write
    nameWithType: IMeshWriter.Write
    fullName: g3.IMeshWriter.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.BinaryWriter
    name: BinaryWriter
    nameWithType: BinaryWriter
    fullName: System.IO.BinaryWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: g3.WriteMesh
    name: WriteMesh
    nameWithType: WriteMesh
    fullName: g3.WriteMesh
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: g3.WriteOptions
    name: WriteOptions
    nameWithType: WriteOptions
    fullName: g3.WriteOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: g3.IMeshWriter.Write(System.IO.BinaryWriter,System.Collections.Generic.List{g3.WriteMesh},g3.WriteOptions)
    name: Write
    nameWithType: IMeshWriter.Write
    fullName: g3.IMeshWriter.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.BinaryWriter
    name: BinaryWriter
    nameWithType: BinaryWriter
    fullName: System.IO.BinaryWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: g3.WriteMesh
    name: WriteMesh
    nameWithType: WriteMesh
    fullName: g3.WriteMesh
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: g3.WriteOptions
    name: WriteOptions
    nameWithType: WriteOptions
    fullName: g3.WriteOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.BinaryWriter
  commentId: T:System.IO.BinaryWriter
  parent: System.IO
  isExternal: true
  name: BinaryWriter
  nameWithType: BinaryWriter
  fullName: System.IO.BinaryWriter
- uid: System.Collections.Generic.List{g3.WriteMesh}
  commentId: T:System.Collections.Generic.List{g3.WriteMesh}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<WriteMesh>
  nameWithType: List<WriteMesh>
  fullName: System.Collections.Generic.List<g3.WriteMesh>
  nameWithType.vb: List(Of WriteMesh)
  fullName.vb: System.Collections.Generic.List(Of g3.WriteMesh)
  name.vb: List(Of WriteMesh)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: g3.WriteMesh
    name: WriteMesh
    nameWithType: WriteMesh
    fullName: g3.WriteMesh
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: g3.WriteMesh
    name: WriteMesh
    nameWithType: WriteMesh
    fullName: g3.WriteMesh
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.WriteOptions
  commentId: T:g3.WriteOptions
  parent: g3
  name: WriteOptions
  nameWithType: WriteOptions
  fullName: g3.WriteOptions
- uid: g3.IOWriteResult
  commentId: T:g3.IOWriteResult
  parent: g3
  name: IOWriteResult
  nameWithType: IOWriteResult
  fullName: g3.IOWriteResult
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: g3.IMeshWriter.Write(System.IO.TextWriter,System.Collections.Generic.List{g3.WriteMesh},g3.WriteOptions)
  commentId: M:g3.IMeshWriter.Write(System.IO.TextWriter,System.Collections.Generic.List{g3.WriteMesh},g3.WriteOptions)
  parent: g3.IMeshWriter
  isExternal: true
  name: Write(TextWriter, List<WriteMesh>, WriteOptions)
  nameWithType: IMeshWriter.Write(TextWriter, List<WriteMesh>, WriteOptions)
  fullName: g3.IMeshWriter.Write(System.IO.TextWriter, System.Collections.Generic.List<g3.WriteMesh>, g3.WriteOptions)
  nameWithType.vb: IMeshWriter.Write(TextWriter, List(Of WriteMesh), WriteOptions)
  fullName.vb: g3.IMeshWriter.Write(System.IO.TextWriter, System.Collections.Generic.List(Of g3.WriteMesh), g3.WriteOptions)
  name.vb: Write(TextWriter, List(Of WriteMesh), WriteOptions)
  spec.csharp:
  - uid: g3.IMeshWriter.Write(System.IO.TextWriter,System.Collections.Generic.List{g3.WriteMesh},g3.WriteOptions)
    name: Write
    nameWithType: IMeshWriter.Write
    fullName: g3.IMeshWriter.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: g3.WriteMesh
    name: WriteMesh
    nameWithType: WriteMesh
    fullName: g3.WriteMesh
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: g3.WriteOptions
    name: WriteOptions
    nameWithType: WriteOptions
    fullName: g3.WriteOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: g3.IMeshWriter.Write(System.IO.TextWriter,System.Collections.Generic.List{g3.WriteMesh},g3.WriteOptions)
    name: Write
    nameWithType: IMeshWriter.Write
    fullName: g3.IMeshWriter.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: g3.WriteMesh
    name: WriteMesh
    nameWithType: WriteMesh
    fullName: g3.WriteMesh
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: g3.WriteOptions
    name: WriteOptions
    nameWithType: WriteOptions
    fullName: g3.WriteOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: g3.OBJWriter.set_current_material*
  commentId: Overload:g3.OBJWriter.set_current_material
  name: set_current_material
  nameWithType: OBJWriter.set_current_material
  fullName: g3.OBJWriter.set_current_material
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: g3.WriteMesh
  commentId: T:g3.WriteMesh
  parent: g3
  name: WriteMesh
  nameWithType: WriteMesh
  fullName: g3.WriteMesh

### YamlMime:ManagedReference
items:
- uid: g3.Quaternionf
  commentId: T:g3.Quaternionf
  id: Quaternionf
  parent: g3
  children:
  - g3.Quaternionf.#ctor(g3.Matrix3f)
  - g3.Quaternionf.#ctor(g3.Quaternionf)
  - g3.Quaternionf.#ctor(g3.Quaternionf,g3.Quaternionf,System.Single)
  - g3.Quaternionf.#ctor(g3.Vector3f,g3.Vector3f)
  - g3.Quaternionf.#ctor(g3.Vector3f,System.Single)
  - g3.Quaternionf.#ctor(System.Single,System.Single,System.Single,System.Single)
  - g3.Quaternionf.#ctor(System.Single[])
  - g3.Quaternionf.AxisAngleD(g3.Vector3f,System.Single)
  - g3.Quaternionf.AxisAngleR(g3.Vector3f,System.Single)
  - g3.Quaternionf.AxisX
  - g3.Quaternionf.AxisY
  - g3.Quaternionf.AxisZ
  - g3.Quaternionf.CompareTo(g3.Quaternionf)
  - g3.Quaternionf.Dot(g3.Quaternionf)
  - g3.Quaternionf.EpsilonEqual(g3.Quaternionf,System.Single)
  - g3.Quaternionf.Equals(g3.Quaternionf)
  - g3.Quaternionf.Equals(System.Object)
  - g3.Quaternionf.FromTo(g3.Vector3f,g3.Vector3f)
  - g3.Quaternionf.FromToConstrained(g3.Vector3f,g3.Vector3f,g3.Vector3f)
  - g3.Quaternionf.GetHashCode
  - g3.Quaternionf.Identity
  - g3.Quaternionf.Inverse
  - g3.Quaternionf.Inverse(g3.Quaternionf)
  - g3.Quaternionf.InverseMultiply(g3.Vector3d@)
  - g3.Quaternionf.InverseMultiply(g3.Vector3f@)
  - g3.Quaternionf.Item(System.Int32)
  - g3.Quaternionf.Length
  - g3.Quaternionf.LengthSquared
  - g3.Quaternionf.Normalize(System.Single)
  - g3.Quaternionf.Normalized
  - g3.Quaternionf.op_Equality(g3.Quaternionf,g3.Quaternionf)
  - g3.Quaternionf.op_Inequality(g3.Quaternionf,g3.Quaternionf)
  - g3.Quaternionf.op_Multiply(g3.Quaternionf,g3.Quaternionf)
  - g3.Quaternionf.op_Multiply(g3.Quaternionf,g3.Vector3d)
  - g3.Quaternionf.op_Multiply(g3.Quaternionf,g3.Vector3f)
  - g3.Quaternionf.op_Subtraction(g3.Quaternionf,g3.Quaternionf)
  - g3.Quaternionf.SetAxisAngleD(g3.Vector3f,System.Single)
  - g3.Quaternionf.SetFromRotationMatrix(g3.Matrix3f)
  - g3.Quaternionf.SetFromTo(g3.Vector3f,g3.Vector3f)
  - g3.Quaternionf.SetToSlerp(g3.Quaternionf,g3.Quaternionf,System.Single)
  - g3.Quaternionf.Slerp(g3.Quaternionf,g3.Quaternionf,System.Single)
  - g3.Quaternionf.ToRotationMatrix
  - g3.Quaternionf.ToString
  - g3.Quaternionf.ToString(System.String)
  - g3.Quaternionf.w
  - g3.Quaternionf.x
  - g3.Quaternionf.y
  - g3.Quaternionf.z
  - g3.Quaternionf.Zero
  langs:
  - csharp
  - vb
  name: Quaternionf
  nameWithType: Quaternionf
  fullName: g3.Quaternionf
  type: Struct
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Quaternionf
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 10
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: 'public struct Quaternionf : IComparable<Quaternionf>, IEquatable<Quaternionf>'
    content.vb: >-
      Public Structure Quaternionf
          Implements IComparable(Of Quaternionf), IEquatable(Of Quaternionf)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: g3.Quaternionf.x
  commentId: F:g3.Quaternionf.x
  id: x
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: x
  nameWithType: Quaternionf.x
  fullName: g3.Quaternionf.x
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: x
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 13
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public float x
    return:
      type: System.Single
    content.vb: Public x As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Quaternionf.y
  commentId: F:g3.Quaternionf.y
  id: y
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: y
  nameWithType: Quaternionf.y
  fullName: g3.Quaternionf.y
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: y
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 13
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public float y
    return:
      type: System.Single
    content.vb: Public y As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Quaternionf.z
  commentId: F:g3.Quaternionf.z
  id: z
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: z
  nameWithType: Quaternionf.z
  fullName: g3.Quaternionf.z
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: z
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 13
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public float z
    return:
      type: System.Single
    content.vb: Public z As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Quaternionf.w
  commentId: F:g3.Quaternionf.w
  id: w
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: w
  nameWithType: Quaternionf.w
  fullName: g3.Quaternionf.w
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: w
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 13
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public float w
    return:
      type: System.Single
    content.vb: Public w As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Quaternionf.#ctor(System.Single,System.Single,System.Single,System.Single)
  commentId: M:g3.Quaternionf.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: Quaternionf(Single, Single, Single, Single)
  nameWithType: Quaternionf.Quaternionf(Single, Single, Single, Single)
  fullName: g3.Quaternionf.Quaternionf(System.Single, System.Single, System.Single, System.Single)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 15
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Quaternionf(float x, float y, float z, float w)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    - id: z
      type: System.Single
    - id: w
      type: System.Single
    content.vb: Public Sub New(x As Single, y As Single, z As Single, w As Single)
  overload: g3.Quaternionf.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Quaternionf.#ctor(System.Single[])
  commentId: M:g3.Quaternionf.#ctor(System.Single[])
  id: '#ctor(System.Single[])'
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: Quaternionf(Single[])
  nameWithType: Quaternionf.Quaternionf(Single[])
  fullName: g3.Quaternionf.Quaternionf(System.Single[])
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 16
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Quaternionf(float[] v2)
    parameters:
    - id: v2
      type: System.Single[]
    content.vb: Public Sub New(v2 As Single())
  overload: g3.Quaternionf.#ctor*
  nameWithType.vb: Quaternionf.Quaternionf(Single())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.Quaternionf.Quaternionf(System.Single())
  name.vb: Quaternionf(Single())
- uid: g3.Quaternionf.#ctor(g3.Quaternionf)
  commentId: M:g3.Quaternionf.#ctor(g3.Quaternionf)
  id: '#ctor(g3.Quaternionf)'
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: Quaternionf(Quaternionf)
  nameWithType: Quaternionf.Quaternionf(Quaternionf)
  fullName: g3.Quaternionf.Quaternionf(g3.Quaternionf)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 17
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Quaternionf(Quaternionf q2)
    parameters:
    - id: q2
      type: g3.Quaternionf
    content.vb: Public Sub New(q2 As Quaternionf)
  overload: g3.Quaternionf.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Quaternionf.#ctor(g3.Vector3f,System.Single)
  commentId: M:g3.Quaternionf.#ctor(g3.Vector3f,System.Single)
  id: '#ctor(g3.Vector3f,System.Single)'
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: Quaternionf(Vector3f, Single)
  nameWithType: Quaternionf.Quaternionf(Vector3f, Single)
  fullName: g3.Quaternionf.Quaternionf(g3.Vector3f, System.Single)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 19
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Quaternionf(Vector3f axis, float AngleDeg)
    parameters:
    - id: axis
      type: g3.Vector3f
    - id: AngleDeg
      type: System.Single
    content.vb: Public Sub New(axis As Vector3f, AngleDeg As Single)
  overload: g3.Quaternionf.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Quaternionf.#ctor(g3.Vector3f,g3.Vector3f)
  commentId: M:g3.Quaternionf.#ctor(g3.Vector3f,g3.Vector3f)
  id: '#ctor(g3.Vector3f,g3.Vector3f)'
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: Quaternionf(Vector3f, Vector3f)
  nameWithType: Quaternionf.Quaternionf(Vector3f, Vector3f)
  fullName: g3.Quaternionf.Quaternionf(g3.Vector3f, g3.Vector3f)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 23
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Quaternionf(Vector3f vFrom, Vector3f vTo)
    parameters:
    - id: vFrom
      type: g3.Vector3f
    - id: vTo
      type: g3.Vector3f
    content.vb: Public Sub New(vFrom As Vector3f, vTo As Vector3f)
  overload: g3.Quaternionf.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Quaternionf.#ctor(g3.Quaternionf,g3.Quaternionf,System.Single)
  commentId: M:g3.Quaternionf.#ctor(g3.Quaternionf,g3.Quaternionf,System.Single)
  id: '#ctor(g3.Quaternionf,g3.Quaternionf,System.Single)'
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: Quaternionf(Quaternionf, Quaternionf, Single)
  nameWithType: Quaternionf.Quaternionf(Quaternionf, Quaternionf, Single)
  fullName: g3.Quaternionf.Quaternionf(g3.Quaternionf, g3.Quaternionf, System.Single)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 27
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Quaternionf(Quaternionf p, Quaternionf q, float t)
    parameters:
    - id: p
      type: g3.Quaternionf
    - id: q
      type: g3.Quaternionf
    - id: t
      type: System.Single
    content.vb: Public Sub New(p As Quaternionf, q As Quaternionf, t As Single)
  overload: g3.Quaternionf.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Quaternionf.#ctor(g3.Matrix3f)
  commentId: M:g3.Quaternionf.#ctor(g3.Matrix3f)
  id: '#ctor(g3.Matrix3f)'
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: Quaternionf(Matrix3f)
  nameWithType: Quaternionf.Quaternionf(Matrix3f)
  fullName: g3.Quaternionf.Quaternionf(g3.Matrix3f)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 31
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Quaternionf(Matrix3f mat)
    parameters:
    - id: mat
      type: g3.Matrix3f
    content.vb: Public Sub New(mat As Matrix3f)
  overload: g3.Quaternionf.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Quaternionf.Zero
  commentId: F:g3.Quaternionf.Zero
  id: Zero
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: Quaternionf.Zero
  fullName: g3.Quaternionf.Zero
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Zero
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 36
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static readonly Quaternionf Zero
    return:
      type: g3.Quaternionf
    content.vb: Public Shared ReadOnly Zero As Quaternionf
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: g3.Quaternionf.Identity
  commentId: F:g3.Quaternionf.Identity
  id: Identity
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: Identity
  nameWithType: Quaternionf.Identity
  fullName: g3.Quaternionf.Identity
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Identity
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 37
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static readonly Quaternionf Identity
    return:
      type: g3.Quaternionf
    content.vb: Public Shared ReadOnly Identity As Quaternionf
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: g3.Quaternionf.Item(System.Int32)
  commentId: P:g3.Quaternionf.Item(System.Int32)
  id: Item(System.Int32)
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: Quaternionf.Item[Int32]
  fullName: g3.Quaternionf.Item[System.Int32]
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: this[]
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 39
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public float this[int key] { get; set; }
    parameters:
    - id: key
      type: System.Int32
    return:
      type: System.Single
    content.vb: Public Property Item(key As Integer) As Single
  overload: g3.Quaternionf.Item*
  nameWithType.vb: Quaternionf.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: g3.Quaternionf.Item(System.Int32)
  name.vb: Item(Int32)
- uid: g3.Quaternionf.LengthSquared
  commentId: P:g3.Quaternionf.LengthSquared
  id: LengthSquared
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: LengthSquared
  nameWithType: Quaternionf.LengthSquared
  fullName: g3.Quaternionf.LengthSquared
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: LengthSquared
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 46
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public float LengthSquared { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property LengthSquared As Single
  overload: g3.Quaternionf.LengthSquared*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Quaternionf.Length
  commentId: P:g3.Quaternionf.Length
  id: Length
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: Quaternionf.Length
  fullName: g3.Quaternionf.Length
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Length
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 49
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public float Length { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Length As Single
  overload: g3.Quaternionf.Length*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Quaternionf.Normalize(System.Single)
  commentId: M:g3.Quaternionf.Normalize(System.Single)
  id: Normalize(System.Single)
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: Normalize(Single)
  nameWithType: Quaternionf.Normalize(Single)
  fullName: g3.Quaternionf.Normalize(System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Normalize
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 53
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public float Normalize(float epsilon = 0F)
    parameters:
    - id: epsilon
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Function Normalize(epsilon As Single = 0F) As Single
  overload: g3.Quaternionf.Normalize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Quaternionf.Normalized
  commentId: P:g3.Quaternionf.Normalized
  id: Normalized
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: Normalized
  nameWithType: Quaternionf.Normalized
  fullName: g3.Quaternionf.Normalized
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Normalized
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 67
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Quaternionf Normalized { get; }
    parameters: []
    return:
      type: g3.Quaternionf
    content.vb: Public ReadOnly Property Normalized As Quaternionf
  overload: g3.Quaternionf.Normalized*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Quaternionf.Dot(g3.Quaternionf)
  commentId: M:g3.Quaternionf.Dot(g3.Quaternionf)
  id: Dot(g3.Quaternionf)
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: Dot(Quaternionf)
  nameWithType: Quaternionf.Dot(Quaternionf)
  fullName: g3.Quaternionf.Dot(g3.Quaternionf)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Dot
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 71
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public float Dot(Quaternionf q2)
    parameters:
    - id: q2
      type: g3.Quaternionf
    return:
      type: System.Single
    content.vb: Public Function Dot(q2 As Quaternionf) As Single
  overload: g3.Quaternionf.Dot*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Quaternionf.op_Multiply(g3.Quaternionf,g3.Quaternionf)
  commentId: M:g3.Quaternionf.op_Multiply(g3.Quaternionf,g3.Quaternionf)
  id: op_Multiply(g3.Quaternionf,g3.Quaternionf)
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: Multiply(Quaternionf, Quaternionf)
  nameWithType: Quaternionf.Multiply(Quaternionf, Quaternionf)
  fullName: g3.Quaternionf.Multiply(g3.Quaternionf, g3.Quaternionf)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Multiply
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 78
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Quaternionf operator *(Quaternionf a, Quaternionf b)
    parameters:
    - id: a
      type: g3.Quaternionf
    - id: b
      type: g3.Quaternionf
    return:
      type: g3.Quaternionf
    content.vb: Public Shared Operator *(a As Quaternionf, b As Quaternionf) As Quaternionf
  overload: g3.Quaternionf.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Quaternionf.op_Subtraction(g3.Quaternionf,g3.Quaternionf)
  commentId: M:g3.Quaternionf.op_Subtraction(g3.Quaternionf,g3.Quaternionf)
  id: op_Subtraction(g3.Quaternionf,g3.Quaternionf)
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: Subtraction(Quaternionf, Quaternionf)
  nameWithType: Quaternionf.Subtraction(Quaternionf, Quaternionf)
  fullName: g3.Quaternionf.Subtraction(g3.Quaternionf, g3.Quaternionf)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Subtraction
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 88
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Quaternionf operator -(Quaternionf q1, Quaternionf q2)
    parameters:
    - id: q1
      type: g3.Quaternionf
    - id: q2
      type: g3.Quaternionf
    return:
      type: g3.Quaternionf
    content.vb: Public Shared Operator -(q1 As Quaternionf, q2 As Quaternionf) As Quaternionf
  overload: g3.Quaternionf.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Quaternionf.op_Multiply(g3.Quaternionf,g3.Vector3f)
  commentId: M:g3.Quaternionf.op_Multiply(g3.Quaternionf,g3.Vector3f)
  id: op_Multiply(g3.Quaternionf,g3.Vector3f)
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: Multiply(Quaternionf, Vector3f)
  nameWithType: Quaternionf.Multiply(Quaternionf, Vector3f)
  fullName: g3.Quaternionf.Multiply(g3.Quaternionf, g3.Vector3f)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Multiply
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 92
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector3f operator *(Quaternionf q, Vector3f v)
    parameters:
    - id: q
      type: g3.Quaternionf
    - id: v
      type: g3.Vector3f
    return:
      type: g3.Vector3f
    content.vb: Public Shared Operator *(q As Quaternionf, v As Vector3f) As Vector3f
  overload: g3.Quaternionf.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Quaternionf.op_Multiply(g3.Quaternionf,g3.Vector3d)
  commentId: M:g3.Quaternionf.op_Multiply(g3.Quaternionf,g3.Vector3d)
  id: op_Multiply(g3.Quaternionf,g3.Vector3d)
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: Multiply(Quaternionf, Vector3d)
  nameWithType: Quaternionf.Multiply(Quaternionf, Vector3d)
  fullName: g3.Quaternionf.Multiply(g3.Quaternionf, g3.Vector3d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Multiply
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 106
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector3d operator *(Quaternionf q, Vector3d v)
    parameters:
    - id: q
      type: g3.Quaternionf
    - id: v
      type: g3.Vector3d
    return:
      type: g3.Vector3d
    content.vb: Public Shared Operator *(q As Quaternionf, v As Vector3d) As Vector3d
  overload: g3.Quaternionf.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Quaternionf.InverseMultiply(g3.Vector3f@)
  commentId: M:g3.Quaternionf.InverseMultiply(g3.Vector3f@)
  id: InverseMultiply(g3.Vector3f@)
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: InverseMultiply(ref Vector3f)
  nameWithType: Quaternionf.InverseMultiply(ref Vector3f)
  fullName: g3.Quaternionf.InverseMultiply(ref g3.Vector3f)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: InverseMultiply
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 122
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: 'Inverse() * v '
  example: []
  syntax:
    content: public Vector3f InverseMultiply(ref Vector3f v)
    parameters:
    - id: v
      type: g3.Vector3f
    return:
      type: g3.Vector3f
    content.vb: Public Function InverseMultiply(ByRef v As Vector3f) As Vector3f
  overload: g3.Quaternionf.InverseMultiply*
  nameWithType.vb: Quaternionf.InverseMultiply(ByRef Vector3f)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.Quaternionf.InverseMultiply(ByRef g3.Vector3f)
  name.vb: InverseMultiply(ByRef Vector3f)
- uid: g3.Quaternionf.InverseMultiply(g3.Vector3d@)
  commentId: M:g3.Quaternionf.InverseMultiply(g3.Vector3d@)
  id: InverseMultiply(g3.Vector3d@)
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: InverseMultiply(ref Vector3d)
  nameWithType: Quaternionf.InverseMultiply(ref Vector3d)
  fullName: g3.Quaternionf.InverseMultiply(ref g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: InverseMultiply
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 142
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: 'Inverse() * v '
  example: []
  syntax:
    content: public Vector3d InverseMultiply(ref Vector3d v)
    parameters:
    - id: v
      type: g3.Vector3d
    return:
      type: g3.Vector3d
    content.vb: Public Function InverseMultiply(ByRef v As Vector3d) As Vector3d
  overload: g3.Quaternionf.InverseMultiply*
  nameWithType.vb: Quaternionf.InverseMultiply(ByRef Vector3d)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.Quaternionf.InverseMultiply(ByRef g3.Vector3d)
  name.vb: InverseMultiply(ByRef Vector3d)
- uid: g3.Quaternionf.AxisX
  commentId: P:g3.Quaternionf.AxisX
  id: AxisX
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: AxisX
  nameWithType: Quaternionf.AxisX
  fullName: g3.Quaternionf.AxisX
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AxisX
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 164
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector3f AxisX { get; }
    parameters: []
    return:
      type: g3.Vector3f
    content.vb: Public ReadOnly Property AxisX As Vector3f
  overload: g3.Quaternionf.AxisX*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Quaternionf.AxisY
  commentId: P:g3.Quaternionf.AxisY
  id: AxisY
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: AxisY
  nameWithType: Quaternionf.AxisY
  fullName: g3.Quaternionf.AxisY
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AxisY
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 173
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector3f AxisY { get; }
    parameters: []
    return:
      type: g3.Vector3f
    content.vb: Public ReadOnly Property AxisY As Vector3f
  overload: g3.Quaternionf.AxisY*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Quaternionf.AxisZ
  commentId: P:g3.Quaternionf.AxisZ
  id: AxisZ
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: AxisZ
  nameWithType: Quaternionf.AxisZ
  fullName: g3.Quaternionf.AxisZ
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AxisZ
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 181
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector3f AxisZ { get; }
    parameters: []
    return:
      type: g3.Vector3f
    content.vb: Public ReadOnly Property AxisZ As Vector3f
  overload: g3.Quaternionf.AxisZ*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Quaternionf.Inverse
  commentId: M:g3.Quaternionf.Inverse
  id: Inverse
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: Inverse()
  nameWithType: Quaternionf.Inverse()
  fullName: g3.Quaternionf.Inverse()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Inverse
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 192
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Quaternionf Inverse()
    return:
      type: g3.Quaternionf
    content.vb: Public Function Inverse As Quaternionf
  overload: g3.Quaternionf.Inverse*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Quaternionf.Inverse(g3.Quaternionf)
  commentId: M:g3.Quaternionf.Inverse(g3.Quaternionf)
  id: Inverse(g3.Quaternionf)
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: Inverse(Quaternionf)
  nameWithType: Quaternionf.Inverse(Quaternionf)
  fullName: g3.Quaternionf.Inverse(g3.Quaternionf)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Inverse
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 201
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Quaternionf Inverse(Quaternionf q)
    parameters:
    - id: q
      type: g3.Quaternionf
    return:
      type: g3.Quaternionf
    content.vb: Public Shared Function Inverse(q As Quaternionf) As Quaternionf
  overload: g3.Quaternionf.Inverse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Quaternionf.ToRotationMatrix
  commentId: M:g3.Quaternionf.ToRotationMatrix
  id: ToRotationMatrix
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: ToRotationMatrix()
  nameWithType: Quaternionf.ToRotationMatrix()
  fullName: g3.Quaternionf.ToRotationMatrix()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ToRotationMatrix
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 207
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Matrix3f ToRotationMatrix()
    return:
      type: g3.Matrix3f
    content.vb: Public Function ToRotationMatrix As Matrix3f
  overload: g3.Quaternionf.ToRotationMatrix*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Quaternionf.SetAxisAngleD(g3.Vector3f,System.Single)
  commentId: M:g3.Quaternionf.SetAxisAngleD(g3.Vector3f,System.Single)
  id: SetAxisAngleD(g3.Vector3f,System.Single)
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: SetAxisAngleD(Vector3f, Single)
  nameWithType: Quaternionf.SetAxisAngleD(Vector3f, Single)
  fullName: g3.Quaternionf.SetAxisAngleD(g3.Vector3f, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: SetAxisAngleD
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 222
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void SetAxisAngleD(Vector3f axis, float AngleDeg)
    parameters:
    - id: axis
      type: g3.Vector3f
    - id: AngleDeg
      type: System.Single
    content.vb: Public Sub SetAxisAngleD(axis As Vector3f, AngleDeg As Single)
  overload: g3.Quaternionf.SetAxisAngleD*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Quaternionf.AxisAngleD(g3.Vector3f,System.Single)
  commentId: M:g3.Quaternionf.AxisAngleD(g3.Vector3f,System.Single)
  id: AxisAngleD(g3.Vector3f,System.Single)
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: AxisAngleD(Vector3f, Single)
  nameWithType: Quaternionf.AxisAngleD(Vector3f, Single)
  fullName: g3.Quaternionf.AxisAngleD(g3.Vector3f, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AxisAngleD
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 231
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Quaternionf AxisAngleD(Vector3f axis, float angleDeg)
    parameters:
    - id: axis
      type: g3.Vector3f
    - id: angleDeg
      type: System.Single
    return:
      type: g3.Quaternionf
    content.vb: Public Shared Function AxisAngleD(axis As Vector3f, angleDeg As Single) As Quaternionf
  overload: g3.Quaternionf.AxisAngleD*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Quaternionf.AxisAngleR(g3.Vector3f,System.Single)
  commentId: M:g3.Quaternionf.AxisAngleR(g3.Vector3f,System.Single)
  id: AxisAngleR(g3.Vector3f,System.Single)
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: AxisAngleR(Vector3f, Single)
  nameWithType: Quaternionf.AxisAngleR(Vector3f, Single)
  fullName: g3.Quaternionf.AxisAngleR(g3.Vector3f, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AxisAngleR
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 234
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Quaternionf AxisAngleR(Vector3f axis, float angleRad)
    parameters:
    - id: axis
      type: g3.Vector3f
    - id: angleRad
      type: System.Single
    return:
      type: g3.Quaternionf
    content.vb: Public Shared Function AxisAngleR(axis As Vector3f, angleRad As Single) As Quaternionf
  overload: g3.Quaternionf.AxisAngleR*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Quaternionf.SetFromTo(g3.Vector3f,g3.Vector3f)
  commentId: M:g3.Quaternionf.SetFromTo(g3.Vector3f,g3.Vector3f)
  id: SetFromTo(g3.Vector3f,g3.Vector3f)
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: SetFromTo(Vector3f, Vector3f)
  nameWithType: Quaternionf.SetFromTo(Vector3f, Vector3f)
  fullName: g3.Quaternionf.SetFromTo(g3.Vector3f, g3.Vector3f)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: SetFromTo
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 239
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void SetFromTo(Vector3f vFrom, Vector3f vTo)
    parameters:
    - id: vFrom
      type: g3.Vector3f
    - id: vTo
      type: g3.Vector3f
    content.vb: Public Sub SetFromTo(vFrom As Vector3f, vTo As Vector3f)
  overload: g3.Quaternionf.SetFromTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Quaternionf.FromTo(g3.Vector3f,g3.Vector3f)
  commentId: M:g3.Quaternionf.FromTo(g3.Vector3f,g3.Vector3f)
  id: FromTo(g3.Vector3f,g3.Vector3f)
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: FromTo(Vector3f, Vector3f)
  nameWithType: Quaternionf.FromTo(Vector3f, Vector3f)
  fullName: g3.Quaternionf.FromTo(g3.Vector3f, g3.Vector3f)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: FromTo
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 272
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Quaternionf FromTo(Vector3f vFrom, Vector3f vTo)
    parameters:
    - id: vFrom
      type: g3.Vector3f
    - id: vTo
      type: g3.Vector3f
    return:
      type: g3.Quaternionf
    content.vb: Public Shared Function FromTo(vFrom As Vector3f, vTo As Vector3f) As Quaternionf
  overload: g3.Quaternionf.FromTo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Quaternionf.FromToConstrained(g3.Vector3f,g3.Vector3f,g3.Vector3f)
  commentId: M:g3.Quaternionf.FromToConstrained(g3.Vector3f,g3.Vector3f,g3.Vector3f)
  id: FromToConstrained(g3.Vector3f,g3.Vector3f,g3.Vector3f)
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: FromToConstrained(Vector3f, Vector3f, Vector3f)
  nameWithType: Quaternionf.FromToConstrained(Vector3f, Vector3f, Vector3f)
  fullName: g3.Quaternionf.FromToConstrained(g3.Vector3f, g3.Vector3f, g3.Vector3f)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: FromToConstrained
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 275
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Quaternionf FromToConstrained(Vector3f vFrom, Vector3f vTo, Vector3f vAround)
    parameters:
    - id: vFrom
      type: g3.Vector3f
    - id: vTo
      type: g3.Vector3f
    - id: vAround
      type: g3.Vector3f
    return:
      type: g3.Quaternionf
    content.vb: Public Shared Function FromToConstrained(vFrom As Vector3f, vTo As Vector3f, vAround As Vector3f) As Quaternionf
  overload: g3.Quaternionf.FromToConstrained*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Quaternionf.SetToSlerp(g3.Quaternionf,g3.Quaternionf,System.Single)
  commentId: M:g3.Quaternionf.SetToSlerp(g3.Quaternionf,g3.Quaternionf,System.Single)
  id: SetToSlerp(g3.Quaternionf,g3.Quaternionf,System.Single)
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: SetToSlerp(Quaternionf, Quaternionf, Single)
  nameWithType: Quaternionf.SetToSlerp(Quaternionf, Quaternionf, Single)
  fullName: g3.Quaternionf.SetToSlerp(g3.Quaternionf, g3.Quaternionf, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: SetToSlerp
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 282
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void SetToSlerp(Quaternionf p, Quaternionf q, float t)
    parameters:
    - id: p
      type: g3.Quaternionf
    - id: q
      type: g3.Quaternionf
    - id: t
      type: System.Single
    content.vb: Public Sub SetToSlerp(p As Quaternionf, q As Quaternionf, t As Single)
  overload: g3.Quaternionf.SetToSlerp*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Quaternionf.Slerp(g3.Quaternionf,g3.Quaternionf,System.Single)
  commentId: M:g3.Quaternionf.Slerp(g3.Quaternionf,g3.Quaternionf,System.Single)
  id: Slerp(g3.Quaternionf,g3.Quaternionf,System.Single)
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: Slerp(Quaternionf, Quaternionf, Single)
  nameWithType: Quaternionf.Slerp(Quaternionf, Quaternionf, Single)
  fullName: g3.Quaternionf.Slerp(g3.Quaternionf, g3.Quaternionf, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Slerp
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 303
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Quaternionf Slerp(Quaternionf p, Quaternionf q, float t)
    parameters:
    - id: p
      type: g3.Quaternionf
    - id: q
      type: g3.Quaternionf
    - id: t
      type: System.Single
    return:
      type: g3.Quaternionf
    content.vb: Public Shared Function Slerp(p As Quaternionf, q As Quaternionf, t As Single) As Quaternionf
  overload: g3.Quaternionf.Slerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Quaternionf.SetFromRotationMatrix(g3.Matrix3f)
  commentId: M:g3.Quaternionf.SetFromRotationMatrix(g3.Matrix3f)
  id: SetFromRotationMatrix(g3.Matrix3f)
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: SetFromRotationMatrix(Matrix3f)
  nameWithType: Quaternionf.SetFromRotationMatrix(Matrix3f)
  fullName: g3.Quaternionf.SetFromRotationMatrix(g3.Matrix3f)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: SetFromRotationMatrix
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 309
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void SetFromRotationMatrix(Matrix3f rot)
    parameters:
    - id: rot
      type: g3.Matrix3f
    content.vb: Public Sub SetFromRotationMatrix(rot As Matrix3f)
  overload: g3.Quaternionf.SetFromRotationMatrix*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Quaternionf.op_Equality(g3.Quaternionf,g3.Quaternionf)
  commentId: M:g3.Quaternionf.op_Equality(g3.Quaternionf,g3.Quaternionf)
  id: op_Equality(g3.Quaternionf,g3.Quaternionf)
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: Equality(Quaternionf, Quaternionf)
  nameWithType: Quaternionf.Equality(Quaternionf, Quaternionf)
  fullName: g3.Quaternionf.Equality(g3.Quaternionf, g3.Quaternionf)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Equality
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 355
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static bool operator ==(Quaternionf a, Quaternionf b)
    parameters:
    - id: a
      type: g3.Quaternionf
    - id: b
      type: g3.Quaternionf
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(a As Quaternionf, b As Quaternionf) As Boolean
  overload: g3.Quaternionf.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Quaternionf.op_Inequality(g3.Quaternionf,g3.Quaternionf)
  commentId: M:g3.Quaternionf.op_Inequality(g3.Quaternionf,g3.Quaternionf)
  id: op_Inequality(g3.Quaternionf,g3.Quaternionf)
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: Inequality(Quaternionf, Quaternionf)
  nameWithType: Quaternionf.Inequality(Quaternionf, Quaternionf)
  fullName: g3.Quaternionf.Inequality(g3.Quaternionf, g3.Quaternionf)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Inequality
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 359
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static bool operator !=(Quaternionf a, Quaternionf b)
    parameters:
    - id: a
      type: g3.Quaternionf
    - id: b
      type: g3.Quaternionf
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(a As Quaternionf, b As Quaternionf) As Boolean
  overload: g3.Quaternionf.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Quaternionf.Equals(System.Object)
  commentId: M:g3.Quaternionf.Equals(System.Object)
  id: Equals(System.Object)
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Quaternionf.Equals(Object)
  fullName: g3.Quaternionf.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Equals
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 363
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: g3.Quaternionf.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: g3.Quaternionf.GetHashCode
  commentId: M:g3.Quaternionf.GetHashCode
  id: GetHashCode
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Quaternionf.GetHashCode()
  fullName: g3.Quaternionf.GetHashCode()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GetHashCode
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 367
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: g3.Quaternionf.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: g3.Quaternionf.CompareTo(g3.Quaternionf)
  commentId: M:g3.Quaternionf.CompareTo(g3.Quaternionf)
  id: CompareTo(g3.Quaternionf)
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: CompareTo(Quaternionf)
  nameWithType: Quaternionf.CompareTo(Quaternionf)
  fullName: g3.Quaternionf.CompareTo(g3.Quaternionf)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: CompareTo
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 380
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int CompareTo(Quaternionf other)
    parameters:
    - id: other
      type: g3.Quaternionf
    return:
      type: System.Int32
    content.vb: Public Function CompareTo(other As Quaternionf) As Integer
  overload: g3.Quaternionf.CompareTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Quaternionf.Equals(g3.Quaternionf)
  commentId: M:g3.Quaternionf.Equals(g3.Quaternionf)
  id: Equals(g3.Quaternionf)
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: Equals(Quaternionf)
  nameWithType: Quaternionf.Equals(Quaternionf)
  fullName: g3.Quaternionf.Equals(g3.Quaternionf)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Equals
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 392
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool Equals(Quaternionf other)
    parameters:
    - id: other
      type: g3.Quaternionf
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Quaternionf) As Boolean
  overload: g3.Quaternionf.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Quaternionf.EpsilonEqual(g3.Quaternionf,System.Single)
  commentId: M:g3.Quaternionf.EpsilonEqual(g3.Quaternionf,System.Single)
  id: EpsilonEqual(g3.Quaternionf,System.Single)
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: EpsilonEqual(Quaternionf, Single)
  nameWithType: Quaternionf.EpsilonEqual(Quaternionf, Single)
  fullName: g3.Quaternionf.EpsilonEqual(g3.Quaternionf, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: EpsilonEqual
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 401
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool EpsilonEqual(Quaternionf q2, float epsilon)
    parameters:
    - id: q2
      type: g3.Quaternionf
    - id: epsilon
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function EpsilonEqual(q2 As Quaternionf, epsilon As Single) As Boolean
  overload: g3.Quaternionf.EpsilonEqual*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Quaternionf.ToString
  commentId: M:g3.Quaternionf.ToString
  id: ToString
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Quaternionf.ToString()
  fullName: g3.Quaternionf.ToString()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ToString
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 409
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: g3.Quaternionf.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: g3.Quaternionf.ToString(System.String)
  commentId: M:g3.Quaternionf.ToString(System.String)
  id: ToString(System.String)
  parent: g3.Quaternionf
  langs:
  - csharp
  - vb
  name: ToString(String)
  nameWithType: Quaternionf.ToString(String)
  fullName: g3.Quaternionf.ToString(System.String)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Quaternionf.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ToString
    path: ../Assets/geometry3Sharp/math/Quaternionf.cs
    startLine: 412
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public string ToString(string fmt)
    parameters:
    - id: fmt
      type: System.String
    return:
      type: System.String
    content.vb: Public Function ToString(fmt As String) As String
  overload: g3.Quaternionf.ToString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: g3.Quaternionf.#ctor*
  commentId: Overload:g3.Quaternionf.#ctor
  name: Quaternionf
  nameWithType: Quaternionf.Quaternionf
  fullName: g3.Quaternionf.Quaternionf
- uid: System.Single[]
  isExternal: true
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: g3.Quaternionf
  commentId: T:g3.Quaternionf
  parent: g3
  name: Quaternionf
  nameWithType: Quaternionf
  fullName: g3.Quaternionf
- uid: g3.Vector3f
  commentId: T:g3.Vector3f
  parent: g3
  name: Vector3f
  nameWithType: Vector3f
  fullName: g3.Vector3f
- uid: g3.Matrix3f
  commentId: T:g3.Matrix3f
  parent: g3
  name: Matrix3f
  nameWithType: Matrix3f
  fullName: g3.Matrix3f
- uid: g3.Quaternionf.Item*
  commentId: Overload:g3.Quaternionf.Item
  name: Item
  nameWithType: Quaternionf.Item
  fullName: g3.Quaternionf.Item
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: g3.Quaternionf.LengthSquared*
  commentId: Overload:g3.Quaternionf.LengthSquared
  name: LengthSquared
  nameWithType: Quaternionf.LengthSquared
  fullName: g3.Quaternionf.LengthSquared
- uid: g3.Quaternionf.Length*
  commentId: Overload:g3.Quaternionf.Length
  name: Length
  nameWithType: Quaternionf.Length
  fullName: g3.Quaternionf.Length
- uid: g3.Quaternionf.Normalize*
  commentId: Overload:g3.Quaternionf.Normalize
  name: Normalize
  nameWithType: Quaternionf.Normalize
  fullName: g3.Quaternionf.Normalize
- uid: g3.Quaternionf.Normalized*
  commentId: Overload:g3.Quaternionf.Normalized
  name: Normalized
  nameWithType: Quaternionf.Normalized
  fullName: g3.Quaternionf.Normalized
- uid: g3.Quaternionf.Dot*
  commentId: Overload:g3.Quaternionf.Dot
  name: Dot
  nameWithType: Quaternionf.Dot
  fullName: g3.Quaternionf.Dot
- uid: g3.Quaternionf.op_Multiply*
  commentId: Overload:g3.Quaternionf.op_Multiply
  name: Multiply
  nameWithType: Quaternionf.Multiply
  fullName: g3.Quaternionf.Multiply
- uid: g3.Quaternionf.op_Subtraction*
  commentId: Overload:g3.Quaternionf.op_Subtraction
  name: Subtraction
  nameWithType: Quaternionf.Subtraction
  fullName: g3.Quaternionf.Subtraction
- uid: g3.Vector3d
  commentId: T:g3.Vector3d
  parent: g3
  name: Vector3d
  nameWithType: Vector3d
  fullName: g3.Vector3d
- uid: g3.Quaternionf.InverseMultiply*
  commentId: Overload:g3.Quaternionf.InverseMultiply
  name: InverseMultiply
  nameWithType: Quaternionf.InverseMultiply
  fullName: g3.Quaternionf.InverseMultiply
- uid: g3.Quaternionf.AxisX*
  commentId: Overload:g3.Quaternionf.AxisX
  name: AxisX
  nameWithType: Quaternionf.AxisX
  fullName: g3.Quaternionf.AxisX
- uid: g3.Quaternionf.AxisY*
  commentId: Overload:g3.Quaternionf.AxisY
  name: AxisY
  nameWithType: Quaternionf.AxisY
  fullName: g3.Quaternionf.AxisY
- uid: g3.Quaternionf.AxisZ*
  commentId: Overload:g3.Quaternionf.AxisZ
  name: AxisZ
  nameWithType: Quaternionf.AxisZ
  fullName: g3.Quaternionf.AxisZ
- uid: g3.Quaternionf.Inverse*
  commentId: Overload:g3.Quaternionf.Inverse
  name: Inverse
  nameWithType: Quaternionf.Inverse
  fullName: g3.Quaternionf.Inverse
- uid: g3.Quaternionf.ToRotationMatrix*
  commentId: Overload:g3.Quaternionf.ToRotationMatrix
  name: ToRotationMatrix
  nameWithType: Quaternionf.ToRotationMatrix
  fullName: g3.Quaternionf.ToRotationMatrix
- uid: g3.Quaternionf.SetAxisAngleD*
  commentId: Overload:g3.Quaternionf.SetAxisAngleD
  name: SetAxisAngleD
  nameWithType: Quaternionf.SetAxisAngleD
  fullName: g3.Quaternionf.SetAxisAngleD
- uid: g3.Quaternionf.AxisAngleD*
  commentId: Overload:g3.Quaternionf.AxisAngleD
  name: AxisAngleD
  nameWithType: Quaternionf.AxisAngleD
  fullName: g3.Quaternionf.AxisAngleD
- uid: g3.Quaternionf.AxisAngleR*
  commentId: Overload:g3.Quaternionf.AxisAngleR
  name: AxisAngleR
  nameWithType: Quaternionf.AxisAngleR
  fullName: g3.Quaternionf.AxisAngleR
- uid: g3.Quaternionf.SetFromTo*
  commentId: Overload:g3.Quaternionf.SetFromTo
  name: SetFromTo
  nameWithType: Quaternionf.SetFromTo
  fullName: g3.Quaternionf.SetFromTo
- uid: g3.Quaternionf.FromTo*
  commentId: Overload:g3.Quaternionf.FromTo
  name: FromTo
  nameWithType: Quaternionf.FromTo
  fullName: g3.Quaternionf.FromTo
- uid: g3.Quaternionf.FromToConstrained*
  commentId: Overload:g3.Quaternionf.FromToConstrained
  name: FromToConstrained
  nameWithType: Quaternionf.FromToConstrained
  fullName: g3.Quaternionf.FromToConstrained
- uid: g3.Quaternionf.SetToSlerp*
  commentId: Overload:g3.Quaternionf.SetToSlerp
  name: SetToSlerp
  nameWithType: Quaternionf.SetToSlerp
  fullName: g3.Quaternionf.SetToSlerp
- uid: g3.Quaternionf.Slerp*
  commentId: Overload:g3.Quaternionf.Slerp
  name: Slerp
  nameWithType: Quaternionf.Slerp
  fullName: g3.Quaternionf.Slerp
- uid: g3.Quaternionf.SetFromRotationMatrix*
  commentId: Overload:g3.Quaternionf.SetFromRotationMatrix
  name: SetFromRotationMatrix
  nameWithType: Quaternionf.SetFromRotationMatrix
  fullName: g3.Quaternionf.SetFromRotationMatrix
- uid: g3.Quaternionf.op_Equality*
  commentId: Overload:g3.Quaternionf.op_Equality
  name: Equality
  nameWithType: Quaternionf.Equality
  fullName: g3.Quaternionf.Equality
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: g3.Quaternionf.op_Inequality*
  commentId: Overload:g3.Quaternionf.op_Inequality
  name: Inequality
  nameWithType: Quaternionf.Inequality
  fullName: g3.Quaternionf.Inequality
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.Quaternionf.Equals*
  commentId: Overload:g3.Quaternionf.Equals
  name: Equals
  nameWithType: Quaternionf.Equals
  fullName: g3.Quaternionf.Equals
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.Quaternionf.GetHashCode*
  commentId: Overload:g3.Quaternionf.GetHashCode
  name: GetHashCode
  nameWithType: Quaternionf.GetHashCode
  fullName: g3.Quaternionf.GetHashCode
- uid: g3.Quaternionf.CompareTo*
  commentId: Overload:g3.Quaternionf.CompareTo
  name: CompareTo
  nameWithType: Quaternionf.CompareTo
  fullName: g3.Quaternionf.CompareTo
- uid: g3.Quaternionf.EpsilonEqual*
  commentId: Overload:g3.Quaternionf.EpsilonEqual
  name: EpsilonEqual
  nameWithType: Quaternionf.EpsilonEqual
  fullName: g3.Quaternionf.EpsilonEqual
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.Quaternionf.ToString*
  commentId: Overload:g3.Quaternionf.ToString
  name: ToString
  nameWithType: Quaternionf.ToString
  fullName: g3.Quaternionf.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

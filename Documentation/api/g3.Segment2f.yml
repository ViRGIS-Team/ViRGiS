### YamlMime:ManagedReference
items:
- uid: g3.Segment2f
  commentId: T:g3.Segment2f
  id: Segment2f
  parent: g3
  children:
  - g3.Segment2f.#ctor(g3.Vector2f,g3.Vector2f)
  - g3.Segment2f.#ctor(g3.Vector2f,g3.Vector2f,System.Single)
  - g3.Segment2f.Center
  - g3.Segment2f.Direction
  - g3.Segment2f.DistanceSquared(g3.Vector2f)
  - g3.Segment2f.Extent
  - g3.Segment2f.FastDistanceSquared(g3.Vector2f@,g3.Vector2f@,g3.Vector2f@)
  - g3.Segment2f.Length
  - g3.Segment2f.NearestPoint(g3.Vector2f)
  - g3.Segment2f.P0
  - g3.Segment2f.P1
  - g3.Segment2f.PointAt(System.Single)
  - g3.Segment2f.PointBetween(System.Single)
  - g3.Segment2f.Project(g3.Vector2f)
  langs:
  - csharp
  - vb
  name: Segment2f
  nameWithType: Segment2f
  fullName: g3.Segment2f
  type: Struct
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Segment2f
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 259
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public struct Segment2f
    content.vb: Public Structure Segment2f
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: g3.Segment2f.Center
  commentId: F:g3.Segment2f.Center
  id: Center
  parent: g3.Segment2f
  langs:
  - csharp
  - vb
  name: Center
  nameWithType: Segment2f.Center
  fullName: g3.Segment2f.Center
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Center
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 262
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2f Center
    return:
      type: g3.Vector2f
    content.vb: Public Center As Vector2f
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Segment2f.Direction
  commentId: F:g3.Segment2f.Direction
  id: Direction
  parent: g3.Segment2f
  langs:
  - csharp
  - vb
  name: Direction
  nameWithType: Segment2f.Direction
  fullName: g3.Segment2f.Direction
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Direction
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 263
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2f Direction
    return:
      type: g3.Vector2f
    content.vb: Public Direction As Vector2f
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Segment2f.Extent
  commentId: F:g3.Segment2f.Extent
  id: Extent
  parent: g3.Segment2f
  langs:
  - csharp
  - vb
  name: Extent
  nameWithType: Segment2f.Extent
  fullName: g3.Segment2f.Extent
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Extent
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 264
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public float Extent
    return:
      type: System.Single
    content.vb: Public Extent As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Segment2f.#ctor(g3.Vector2f,g3.Vector2f)
  commentId: M:g3.Segment2f.#ctor(g3.Vector2f,g3.Vector2f)
  id: '#ctor(g3.Vector2f,g3.Vector2f)'
  parent: g3.Segment2f
  langs:
  - csharp
  - vb
  name: Segment2f(Vector2f, Vector2f)
  nameWithType: Segment2f.Segment2f(Vector2f, Vector2f)
  fullName: g3.Segment2f.Segment2f(g3.Vector2f, g3.Vector2f)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 266
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Segment2f(Vector2f p0, Vector2f p1)
    parameters:
    - id: p0
      type: g3.Vector2f
    - id: p1
      type: g3.Vector2f
    content.vb: Public Sub New(p0 As Vector2f, p1 As Vector2f)
  overload: g3.Segment2f.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Segment2f.#ctor(g3.Vector2f,g3.Vector2f,System.Single)
  commentId: M:g3.Segment2f.#ctor(g3.Vector2f,g3.Vector2f,System.Single)
  id: '#ctor(g3.Vector2f,g3.Vector2f,System.Single)'
  parent: g3.Segment2f
  langs:
  - csharp
  - vb
  name: Segment2f(Vector2f, Vector2f, Single)
  nameWithType: Segment2f.Segment2f(Vector2f, Vector2f, Single)
  fullName: g3.Segment2f.Segment2f(g3.Vector2f, g3.Vector2f, System.Single)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 273
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Segment2f(Vector2f center, Vector2f direction, float extent)
    parameters:
    - id: center
      type: g3.Vector2f
    - id: direction
      type: g3.Vector2f
    - id: extent
      type: System.Single
    content.vb: Public Sub New(center As Vector2f, direction As Vector2f, extent As Single)
  overload: g3.Segment2f.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Segment2f.P0
  commentId: P:g3.Segment2f.P0
  id: P0
  parent: g3.Segment2f
  langs:
  - csharp
  - vb
  name: P0
  nameWithType: Segment2f.P0
  fullName: g3.Segment2f.P0
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: P0
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 278
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2f P0 { get; set; }
    parameters: []
    return:
      type: g3.Vector2f
    content.vb: Public Property P0 As Vector2f
  overload: g3.Segment2f.P0*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: g3.Segment2f.P1
  commentId: P:g3.Segment2f.P1
  id: P1
  parent: g3.Segment2f
  langs:
  - csharp
  - vb
  name: P1
  nameWithType: Segment2f.P1
  fullName: g3.Segment2f.P1
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: P1
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 283
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2f P1 { get; set; }
    parameters: []
    return:
      type: g3.Vector2f
    content.vb: Public Property P1 As Vector2f
  overload: g3.Segment2f.P1*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: g3.Segment2f.Length
  commentId: P:g3.Segment2f.Length
  id: Length
  parent: g3.Segment2f
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: Segment2f.Length
  fullName: g3.Segment2f.Length
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Length
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 288
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public float Length { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Length As Single
  overload: g3.Segment2f.Length*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Segment2f.PointAt(System.Single)
  commentId: M:g3.Segment2f.PointAt(System.Single)
  id: PointAt(System.Single)
  parent: g3.Segment2f
  langs:
  - csharp
  - vb
  name: PointAt(Single)
  nameWithType: Segment2f.PointAt(Single)
  fullName: g3.Segment2f.PointAt(System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: PointAt
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 294
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2f PointAt(float d)
    parameters:
    - id: d
      type: System.Single
    return:
      type: g3.Vector2f
    content.vb: Public Function PointAt(d As Single) As Vector2f
  overload: g3.Segment2f.PointAt*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Segment2f.PointBetween(System.Single)
  commentId: M:g3.Segment2f.PointBetween(System.Single)
  id: PointBetween(System.Single)
  parent: g3.Segment2f
  langs:
  - csharp
  - vb
  name: PointBetween(Single)
  nameWithType: Segment2f.PointBetween(Single)
  fullName: g3.Segment2f.PointBetween(System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: PointBetween
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 299
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2f PointBetween(float t)
    parameters:
    - id: t
      type: System.Single
    return:
      type: g3.Vector2f
    content.vb: Public Function PointBetween(t As Single) As Vector2f
  overload: g3.Segment2f.PointBetween*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Segment2f.DistanceSquared(g3.Vector2f)
  commentId: M:g3.Segment2f.DistanceSquared(g3.Vector2f)
  id: DistanceSquared(g3.Vector2f)
  parent: g3.Segment2f
  langs:
  - csharp
  - vb
  name: DistanceSquared(Vector2f)
  nameWithType: Segment2f.DistanceSquared(Vector2f)
  fullName: g3.Segment2f.DistanceSquared(g3.Vector2f)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: DistanceSquared
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 303
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public float DistanceSquared(Vector2f p)
    parameters:
    - id: p
      type: g3.Vector2f
    return:
      type: System.Single
    content.vb: Public Function DistanceSquared(p As Vector2f) As Single
  overload: g3.Segment2f.DistanceSquared*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Segment2f.NearestPoint(g3.Vector2f)
  commentId: M:g3.Segment2f.NearestPoint(g3.Vector2f)
  id: NearestPoint(g3.Vector2f)
  parent: g3.Segment2f
  langs:
  - csharp
  - vb
  name: NearestPoint(Vector2f)
  nameWithType: Segment2f.NearestPoint(Vector2f)
  fullName: g3.Segment2f.NearestPoint(g3.Vector2f)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: NearestPoint
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 314
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2f NearestPoint(Vector2f p)
    parameters:
    - id: p
      type: g3.Vector2f
    return:
      type: g3.Vector2f
    content.vb: Public Function NearestPoint(p As Vector2f) As Vector2f
  overload: g3.Segment2f.NearestPoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Segment2f.Project(g3.Vector2f)
  commentId: M:g3.Segment2f.Project(g3.Vector2f)
  id: Project(g3.Vector2f)
  parent: g3.Segment2f
  langs:
  - csharp
  - vb
  name: Project(Vector2f)
  nameWithType: Segment2f.Project(Vector2f)
  fullName: g3.Segment2f.Project(g3.Vector2f)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Project
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 324
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public float Project(Vector2f p)
    parameters:
    - id: p
      type: g3.Vector2f
    return:
      type: System.Single
    content.vb: Public Function Project(p As Vector2f) As Single
  overload: g3.Segment2f.Project*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Segment2f.FastDistanceSquared(g3.Vector2f@,g3.Vector2f@,g3.Vector2f@)
  commentId: M:g3.Segment2f.FastDistanceSquared(g3.Vector2f@,g3.Vector2f@,g3.Vector2f@)
  id: FastDistanceSquared(g3.Vector2f@,g3.Vector2f@,g3.Vector2f@)
  parent: g3.Segment2f
  langs:
  - csharp
  - vb
  name: FastDistanceSquared(ref Vector2f, ref Vector2f, ref Vector2f)
  nameWithType: Segment2f.FastDistanceSquared(ref Vector2f, ref Vector2f, ref Vector2f)
  fullName: g3.Segment2f.FastDistanceSquared(ref g3.Vector2f, ref g3.Vector2f, ref g3.Vector2f)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: FastDistanceSquared
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 344
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\ndistance from pt to segment (a,b), with no square roots\n"
  example: []
  syntax:
    content: public static float FastDistanceSquared(ref Vector2f a, ref Vector2f b, ref Vector2f pt)
    parameters:
    - id: a
      type: g3.Vector2f
    - id: b
      type: g3.Vector2f
    - id: pt
      type: g3.Vector2f
    return:
      type: System.Single
    content.vb: Public Shared Function FastDistanceSquared(ByRef a As Vector2f, ByRef b As Vector2f, ByRef pt As Vector2f) As Single
  overload: g3.Segment2f.FastDistanceSquared*
  nameWithType.vb: Segment2f.FastDistanceSquared(ByRef Vector2f, ByRef Vector2f, ByRef Vector2f)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.Segment2f.FastDistanceSquared(ByRef g3.Vector2f, ByRef g3.Vector2f, ByRef g3.Vector2f)
  name.vb: FastDistanceSquared(ByRef Vector2f, ByRef Vector2f, ByRef Vector2f)
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: g3.Vector2f
  commentId: T:g3.Vector2f
  parent: g3
  name: Vector2f
  nameWithType: Vector2f
  fullName: g3.Vector2f
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: g3.Segment2f.#ctor*
  commentId: Overload:g3.Segment2f.#ctor
  name: Segment2f
  nameWithType: Segment2f.Segment2f
  fullName: g3.Segment2f.Segment2f
- uid: g3.Segment2f.P0*
  commentId: Overload:g3.Segment2f.P0
  name: P0
  nameWithType: Segment2f.P0
  fullName: g3.Segment2f.P0
- uid: g3.Segment2f.P1*
  commentId: Overload:g3.Segment2f.P1
  name: P1
  nameWithType: Segment2f.P1
  fullName: g3.Segment2f.P1
- uid: g3.Segment2f.Length*
  commentId: Overload:g3.Segment2f.Length
  name: Length
  nameWithType: Segment2f.Length
  fullName: g3.Segment2f.Length
- uid: g3.Segment2f.PointAt*
  commentId: Overload:g3.Segment2f.PointAt
  name: PointAt
  nameWithType: Segment2f.PointAt
  fullName: g3.Segment2f.PointAt
- uid: g3.Segment2f.PointBetween*
  commentId: Overload:g3.Segment2f.PointBetween
  name: PointBetween
  nameWithType: Segment2f.PointBetween
  fullName: g3.Segment2f.PointBetween
- uid: g3.Segment2f.DistanceSquared*
  commentId: Overload:g3.Segment2f.DistanceSquared
  name: DistanceSquared
  nameWithType: Segment2f.DistanceSquared
  fullName: g3.Segment2f.DistanceSquared
- uid: g3.Segment2f.NearestPoint*
  commentId: Overload:g3.Segment2f.NearestPoint
  name: NearestPoint
  nameWithType: Segment2f.NearestPoint
  fullName: g3.Segment2f.NearestPoint
- uid: g3.Segment2f.Project*
  commentId: Overload:g3.Segment2f.Project
  name: Project
  nameWithType: Segment2f.Project
  fullName: g3.Segment2f.Project
- uid: g3.Segment2f.FastDistanceSquared*
  commentId: Overload:g3.Segment2f.FastDistanceSquared
  name: FastDistanceSquared
  nameWithType: Segment2f.FastDistanceSquared
  fullName: g3.Segment2f.FastDistanceSquared

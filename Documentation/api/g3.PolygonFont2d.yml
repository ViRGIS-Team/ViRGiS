### YamlMime:ManagedReference
items:
- uid: g3.PolygonFont2d
  commentId: T:g3.PolygonFont2d
  id: PolygonFont2d
  parent: g3
  children:
  - g3.PolygonFont2d.#ctor
  - g3.PolygonFont2d.AddCharacter(System.String,g3.GeneralPolygon2d[])
  - g3.PolygonFont2d.Characters
  - g3.PolygonFont2d.GetCharacter(System.Char)
  - g3.PolygonFont2d.GetCharacter(System.String)
  - g3.PolygonFont2d.GetCharacterBounds(System.Char)
  - g3.PolygonFont2d.HasCharacter(System.Char)
  - g3.PolygonFont2d.MaxBounds
  - g3.PolygonFont2d.ReadFont(System.IO.Stream)
  - g3.PolygonFont2d.ReadFont(System.String)
  - g3.PolygonFont2d.Restore(g3.PolygonFont2d,System.IO.BinaryReader)
  - g3.PolygonFont2d.Store(g3.PolygonFont2d,System.IO.BinaryWriter)
  langs:
  - csharp
  - vb
  name: PolygonFont2d
  nameWithType: PolygonFont2d
  fullName: g3.PolygonFont2d
  type: Class
  source:
    remote:
      path: Assets/geometry3Sharp/curve/PolygonFont2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: PolygonFont2d
    path: ../Assets/geometry3Sharp/curve/PolygonFont2d.cs
    startLine: 13
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nThis class represents an outline font, where the outline is composed of polygons.\nEach font is a list of GeneralPolygon2D objects, so each outline may have 1 or more holes.\n(In fact, the mapping is [string,list_of_gpolygons], so you can actually keep entire strings together if desired)\n"
  example: []
  syntax:
    content: public class PolygonFont2d
    content.vb: Public Class PolygonFont2d
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: g3.PolygonFont2d.Characters
  commentId: F:g3.PolygonFont2d.Characters
  id: Characters
  parent: g3.PolygonFont2d
  langs:
  - csharp
  - vb
  name: Characters
  nameWithType: PolygonFont2d.Characters
  fullName: g3.PolygonFont2d.Characters
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/curve/PolygonFont2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Characters
    path: ../Assets/geometry3Sharp/curve/PolygonFont2d.cs
    startLine: 21
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Dictionary<string, PolygonFont2d.CharacterInfo> Characters
    return:
      type: System.Collections.Generic.Dictionary{System.String,g3.PolygonFont2d.CharacterInfo}
    content.vb: Public Characters As Dictionary(Of String, PolygonFont2d.CharacterInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.PolygonFont2d.MaxBounds
  commentId: F:g3.PolygonFont2d.MaxBounds
  id: MaxBounds
  parent: g3.PolygonFont2d
  langs:
  - csharp
  - vb
  name: MaxBounds
  nameWithType: PolygonFont2d.MaxBounds
  fullName: g3.PolygonFont2d.MaxBounds
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/curve/PolygonFont2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: MaxBounds
    path: ../Assets/geometry3Sharp/curve/PolygonFont2d.cs
    startLine: 22
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public AxisAlignedBox2d MaxBounds
    return:
      type: g3.AxisAlignedBox2d
    content.vb: Public MaxBounds As AxisAlignedBox2d
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.PolygonFont2d.#ctor
  commentId: M:g3.PolygonFont2d.#ctor
  id: '#ctor'
  parent: g3.PolygonFont2d
  langs:
  - csharp
  - vb
  name: PolygonFont2d()
  nameWithType: PolygonFont2d.PolygonFont2d()
  fullName: g3.PolygonFont2d.PolygonFont2d()
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/curve/PolygonFont2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/curve/PolygonFont2d.cs
    startLine: 25
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public PolygonFont2d()
    content.vb: Public Sub New
  overload: g3.PolygonFont2d.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.PolygonFont2d.AddCharacter(System.String,g3.GeneralPolygon2d[])
  commentId: M:g3.PolygonFont2d.AddCharacter(System.String,g3.GeneralPolygon2d[])
  id: AddCharacter(System.String,g3.GeneralPolygon2d[])
  parent: g3.PolygonFont2d
  langs:
  - csharp
  - vb
  name: AddCharacter(String, GeneralPolygon2d[])
  nameWithType: PolygonFont2d.AddCharacter(String, GeneralPolygon2d[])
  fullName: g3.PolygonFont2d.AddCharacter(System.String, g3.GeneralPolygon2d[])
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/PolygonFont2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AddCharacter
    path: ../Assets/geometry3Sharp/curve/PolygonFont2d.cs
    startLine: 32
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void AddCharacter(string s, GeneralPolygon2d[] polygons)
    parameters:
    - id: s
      type: System.String
    - id: polygons
      type: g3.GeneralPolygon2d[]
    content.vb: Public Sub AddCharacter(s As String, polygons As GeneralPolygon2d())
  overload: g3.PolygonFont2d.AddCharacter*
  nameWithType.vb: PolygonFont2d.AddCharacter(String, GeneralPolygon2d())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.PolygonFont2d.AddCharacter(System.String, g3.GeneralPolygon2d())
  name.vb: AddCharacter(String, GeneralPolygon2d())
- uid: g3.PolygonFont2d.GetCharacter(System.Char)
  commentId: M:g3.PolygonFont2d.GetCharacter(System.Char)
  id: GetCharacter(System.Char)
  parent: g3.PolygonFont2d
  langs:
  - csharp
  - vb
  name: GetCharacter(Char)
  nameWithType: PolygonFont2d.GetCharacter(Char)
  fullName: g3.PolygonFont2d.GetCharacter(System.Char)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/PolygonFont2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GetCharacter
    path: ../Assets/geometry3Sharp/curve/PolygonFont2d.cs
    startLine: 45
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public List<GeneralPolygon2d> GetCharacter(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Collections.Generic.List{g3.GeneralPolygon2d}
    content.vb: Public Function GetCharacter(c As Char) As List(Of GeneralPolygon2d)
  overload: g3.PolygonFont2d.GetCharacter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.PolygonFont2d.GetCharacter(System.String)
  commentId: M:g3.PolygonFont2d.GetCharacter(System.String)
  id: GetCharacter(System.String)
  parent: g3.PolygonFont2d
  langs:
  - csharp
  - vb
  name: GetCharacter(String)
  nameWithType: PolygonFont2d.GetCharacter(String)
  fullName: g3.PolygonFont2d.GetCharacter(System.String)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/PolygonFont2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GetCharacter
    path: ../Assets/geometry3Sharp/curve/PolygonFont2d.cs
    startLine: 52
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public List<GeneralPolygon2d> GetCharacter(string s)
    parameters:
    - id: s
      type: System.String
    return:
      type: System.Collections.Generic.List{g3.GeneralPolygon2d}
    content.vb: Public Function GetCharacter(s As String) As List(Of GeneralPolygon2d)
  overload: g3.PolygonFont2d.GetCharacter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.PolygonFont2d.GetCharacterBounds(System.Char)
  commentId: M:g3.PolygonFont2d.GetCharacterBounds(System.Char)
  id: GetCharacterBounds(System.Char)
  parent: g3.PolygonFont2d
  langs:
  - csharp
  - vb
  name: GetCharacterBounds(Char)
  nameWithType: PolygonFont2d.GetCharacterBounds(Char)
  fullName: g3.PolygonFont2d.GetCharacterBounds(System.Char)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/PolygonFont2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GetCharacterBounds
    path: ../Assets/geometry3Sharp/curve/PolygonFont2d.cs
    startLine: 59
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public AxisAlignedBox2d GetCharacterBounds(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: g3.AxisAlignedBox2d
    content.vb: Public Function GetCharacterBounds(c As Char) As AxisAlignedBox2d
  overload: g3.PolygonFont2d.GetCharacterBounds*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.PolygonFont2d.HasCharacter(System.Char)
  commentId: M:g3.PolygonFont2d.HasCharacter(System.Char)
  id: HasCharacter(System.Char)
  parent: g3.PolygonFont2d
  langs:
  - csharp
  - vb
  name: HasCharacter(Char)
  nameWithType: PolygonFont2d.HasCharacter(Char)
  fullName: g3.PolygonFont2d.HasCharacter(System.Char)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/PolygonFont2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: HasCharacter
    path: ../Assets/geometry3Sharp/curve/PolygonFont2d.cs
    startLine: 67
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool HasCharacter(char c)
    parameters:
    - id: c
      type: System.Char
    return:
      type: System.Boolean
    content.vb: Public Function HasCharacter(c As Char) As Boolean
  overload: g3.PolygonFont2d.HasCharacter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.PolygonFont2d.Store(g3.PolygonFont2d,System.IO.BinaryWriter)
  commentId: M:g3.PolygonFont2d.Store(g3.PolygonFont2d,System.IO.BinaryWriter)
  id: Store(g3.PolygonFont2d,System.IO.BinaryWriter)
  parent: g3.PolygonFont2d
  langs:
  - csharp
  - vb
  name: Store(PolygonFont2d, BinaryWriter)
  nameWithType: PolygonFont2d.Store(PolygonFont2d, BinaryWriter)
  fullName: g3.PolygonFont2d.Store(g3.PolygonFont2d, System.IO.BinaryWriter)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/PolygonFont2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Store
    path: ../Assets/geometry3Sharp/curve/PolygonFont2d.cs
    startLine: 86
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static void Store(PolygonFont2d font, BinaryWriter writer)
    parameters:
    - id: font
      type: g3.PolygonFont2d
    - id: writer
      type: System.IO.BinaryWriter
    content.vb: Public Shared Sub Store(font As PolygonFont2d, writer As BinaryWriter)
  overload: g3.PolygonFont2d.Store*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.PolygonFont2d.ReadFont(System.String)
  commentId: M:g3.PolygonFont2d.ReadFont(System.String)
  id: ReadFont(System.String)
  parent: g3.PolygonFont2d
  langs:
  - csharp
  - vb
  name: ReadFont(String)
  nameWithType: PolygonFont2d.ReadFont(String)
  fullName: g3.PolygonFont2d.ReadFont(System.String)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/PolygonFont2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ReadFont
    path: ../Assets/geometry3Sharp/curve/PolygonFont2d.cs
    startLine: 105
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static PolygonFont2d ReadFont(string filename)
    parameters:
    - id: filename
      type: System.String
    return:
      type: g3.PolygonFont2d
    content.vb: Public Shared Function ReadFont(filename As String) As PolygonFont2d
  overload: g3.PolygonFont2d.ReadFont*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.PolygonFont2d.ReadFont(System.IO.Stream)
  commentId: M:g3.PolygonFont2d.ReadFont(System.IO.Stream)
  id: ReadFont(System.IO.Stream)
  parent: g3.PolygonFont2d
  langs:
  - csharp
  - vb
  name: ReadFont(Stream)
  nameWithType: PolygonFont2d.ReadFont(Stream)
  fullName: g3.PolygonFont2d.ReadFont(System.IO.Stream)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/PolygonFont2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ReadFont
    path: ../Assets/geometry3Sharp/curve/PolygonFont2d.cs
    startLine: 114
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static PolygonFont2d ReadFont(Stream s)
    parameters:
    - id: s
      type: System.IO.Stream
    return:
      type: g3.PolygonFont2d
    content.vb: Public Shared Function ReadFont(s As Stream) As PolygonFont2d
  overload: g3.PolygonFont2d.ReadFont*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.PolygonFont2d.Restore(g3.PolygonFont2d,System.IO.BinaryReader)
  commentId: M:g3.PolygonFont2d.Restore(g3.PolygonFont2d,System.IO.BinaryReader)
  id: Restore(g3.PolygonFont2d,System.IO.BinaryReader)
  parent: g3.PolygonFont2d
  langs:
  - csharp
  - vb
  name: Restore(PolygonFont2d, BinaryReader)
  nameWithType: PolygonFont2d.Restore(PolygonFont2d, BinaryReader)
  fullName: g3.PolygonFont2d.Restore(g3.PolygonFont2d, System.IO.BinaryReader)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/PolygonFont2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Restore
    path: ../Assets/geometry3Sharp/curve/PolygonFont2d.cs
    startLine: 123
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static void Restore(PolygonFont2d font, BinaryReader reader)
    parameters:
    - id: font
      type: g3.PolygonFont2d
    - id: reader
      type: System.IO.BinaryReader
    content.vb: Public Shared Sub Restore(font As PolygonFont2d, reader As BinaryReader)
  overload: g3.PolygonFont2d.Restore*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.Dictionary{System.String,g3.PolygonFont2d.CharacterInfo}
  commentId: T:System.Collections.Generic.Dictionary{System.String,g3.PolygonFont2d.CharacterInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, PolygonFont2d.CharacterInfo>
  nameWithType: Dictionary<String, PolygonFont2d.CharacterInfo>
  fullName: System.Collections.Generic.Dictionary<System.String, g3.PolygonFont2d.CharacterInfo>
  nameWithType.vb: Dictionary(Of String, PolygonFont2d.CharacterInfo)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, g3.PolygonFont2d.CharacterInfo)
  name.vb: Dictionary(Of String, PolygonFont2d.CharacterInfo)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: g3.PolygonFont2d.CharacterInfo
    name: PolygonFont2d.CharacterInfo
    nameWithType: PolygonFont2d.CharacterInfo
    fullName: g3.PolygonFont2d.CharacterInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: g3.PolygonFont2d.CharacterInfo
    name: PolygonFont2d.CharacterInfo
    nameWithType: PolygonFont2d.CharacterInfo
    fullName: g3.PolygonFont2d.CharacterInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: g3.AxisAlignedBox2d
  commentId: T:g3.AxisAlignedBox2d
  parent: g3
  name: AxisAlignedBox2d
  nameWithType: AxisAlignedBox2d
  fullName: g3.AxisAlignedBox2d
- uid: g3.PolygonFont2d.#ctor*
  commentId: Overload:g3.PolygonFont2d.#ctor
  name: PolygonFont2d
  nameWithType: PolygonFont2d.PolygonFont2d
  fullName: g3.PolygonFont2d.PolygonFont2d
- uid: g3.PolygonFont2d.AddCharacter*
  commentId: Overload:g3.PolygonFont2d.AddCharacter
  name: AddCharacter
  nameWithType: PolygonFont2d.AddCharacter
  fullName: g3.PolygonFont2d.AddCharacter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: g3.GeneralPolygon2d[]
  isExternal: true
  name: GeneralPolygon2d[]
  nameWithType: GeneralPolygon2d[]
  fullName: g3.GeneralPolygon2d[]
  nameWithType.vb: GeneralPolygon2d()
  fullName.vb: g3.GeneralPolygon2d()
  name.vb: GeneralPolygon2d()
  spec.csharp:
  - uid: g3.GeneralPolygon2d
    name: GeneralPolygon2d
    nameWithType: GeneralPolygon2d
    fullName: g3.GeneralPolygon2d
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: g3.GeneralPolygon2d
    name: GeneralPolygon2d
    nameWithType: GeneralPolygon2d
    fullName: g3.GeneralPolygon2d
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: g3.PolygonFont2d.GetCharacter*
  commentId: Overload:g3.PolygonFont2d.GetCharacter
  name: GetCharacter
  nameWithType: PolygonFont2d.GetCharacter
  fullName: g3.PolygonFont2d.GetCharacter
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Collections.Generic.List{g3.GeneralPolygon2d}
  commentId: T:System.Collections.Generic.List{g3.GeneralPolygon2d}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<GeneralPolygon2d>
  nameWithType: List<GeneralPolygon2d>
  fullName: System.Collections.Generic.List<g3.GeneralPolygon2d>
  nameWithType.vb: List(Of GeneralPolygon2d)
  fullName.vb: System.Collections.Generic.List(Of g3.GeneralPolygon2d)
  name.vb: List(Of GeneralPolygon2d)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: g3.GeneralPolygon2d
    name: GeneralPolygon2d
    nameWithType: GeneralPolygon2d
    fullName: g3.GeneralPolygon2d
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: g3.GeneralPolygon2d
    name: GeneralPolygon2d
    nameWithType: GeneralPolygon2d
    fullName: g3.GeneralPolygon2d
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.PolygonFont2d.GetCharacterBounds*
  commentId: Overload:g3.PolygonFont2d.GetCharacterBounds
  name: GetCharacterBounds
  nameWithType: PolygonFont2d.GetCharacterBounds
  fullName: g3.PolygonFont2d.GetCharacterBounds
- uid: g3.PolygonFont2d.HasCharacter*
  commentId: Overload:g3.PolygonFont2d.HasCharacter
  name: HasCharacter
  nameWithType: PolygonFont2d.HasCharacter
  fullName: g3.PolygonFont2d.HasCharacter
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: g3.PolygonFont2d.Store*
  commentId: Overload:g3.PolygonFont2d.Store
  name: Store
  nameWithType: PolygonFont2d.Store
  fullName: g3.PolygonFont2d.Store
- uid: g3.PolygonFont2d
  commentId: T:g3.PolygonFont2d
  parent: g3
  name: PolygonFont2d
  nameWithType: PolygonFont2d
  fullName: g3.PolygonFont2d
- uid: System.IO.BinaryWriter
  commentId: T:System.IO.BinaryWriter
  parent: System.IO
  isExternal: true
  name: BinaryWriter
  nameWithType: BinaryWriter
  fullName: System.IO.BinaryWriter
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: g3.PolygonFont2d.ReadFont*
  commentId: Overload:g3.PolygonFont2d.ReadFont
  name: ReadFont
  nameWithType: PolygonFont2d.ReadFont
  fullName: g3.PolygonFont2d.ReadFont
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: g3.PolygonFont2d.Restore*
  commentId: Overload:g3.PolygonFont2d.Restore
  name: Restore
  nameWithType: PolygonFont2d.Restore
  fullName: g3.PolygonFont2d.Restore
- uid: System.IO.BinaryReader
  commentId: T:System.IO.BinaryReader
  parent: System.IO
  isExternal: true
  name: BinaryReader
  nameWithType: BinaryReader
  fullName: System.IO.BinaryReader

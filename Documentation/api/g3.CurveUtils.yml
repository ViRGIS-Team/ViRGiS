### YamlMime:ManagedReference
items:
- uid: g3.CurveUtils
  commentId: T:g3.CurveUtils
  id: CurveUtils
  parent: g3
  children:
  - g3.CurveUtils.ArcLength(g3.Vector3d[],System.Boolean)
  - g3.CurveUtils.ArcLength(System.Collections.Generic.IEnumerable{g3.Vector3d})
  - g3.CurveUtils.ArcLength(System.Collections.Generic.List{g3.Vector3d},System.Boolean)
  - g3.CurveUtils.FindClosestRayIntersection(g3.ISampledCurve3d,System.Double,g3.Ray3d,System.Double@)
  - g3.CurveUtils.FindNearestIndex(g3.ISampledCurve3d,g3.Vector3d)
  - g3.CurveUtils.GetTangent(System.Collections.Generic.List{g3.Vector3d},System.Int32,System.Boolean)
  - g3.CurveUtils.InPlaceSmooth(System.Collections.Generic.IList{g3.Vector3d},System.Double,System.Int32,System.Boolean)
  - g3.CurveUtils.InPlaceSmooth(System.Collections.Generic.IList{g3.Vector3d},System.Int32,System.Int32,System.Double,System.Int32,System.Boolean)
  - g3.CurveUtils.IterativeSmooth(System.Collections.Generic.IList{g3.Vector3d},System.Double,System.Int32,System.Boolean)
  - g3.CurveUtils.IterativeSmooth(System.Collections.Generic.IList{g3.Vector3d},System.Int32,System.Int32,System.Double,System.Int32,System.Boolean,g3.Vector3d[])
  langs:
  - csharp
  - vb
  name: CurveUtils
  nameWithType: CurveUtils
  fullName: g3.CurveUtils
  type: Class
  source:
    remote:
      path: Assets/geometry3Sharp/curve/CurveUtils.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: CurveUtils
    path: ../Assets/geometry3Sharp/curve/CurveUtils.cs
    startLine: 7
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public class CurveUtils
    content.vb: Public Class CurveUtils
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: g3.CurveUtils.GetTangent(System.Collections.Generic.List{g3.Vector3d},System.Int32,System.Boolean)
  commentId: M:g3.CurveUtils.GetTangent(System.Collections.Generic.List{g3.Vector3d},System.Int32,System.Boolean)
  id: GetTangent(System.Collections.Generic.List{g3.Vector3d},System.Int32,System.Boolean)
  parent: g3.CurveUtils
  langs:
  - csharp
  - vb
  name: GetTangent(List<Vector3d>, Int32, Boolean)
  nameWithType: CurveUtils.GetTangent(List<Vector3d>, Int32, Boolean)
  fullName: g3.CurveUtils.GetTangent(System.Collections.Generic.List<g3.Vector3d>, System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/CurveUtils.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GetTangent
    path: ../Assets/geometry3Sharp/curve/CurveUtils.cs
    startLine: 10
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector3d GetTangent(List<Vector3d> vertices, int i, bool bLoop = false)
    parameters:
    - id: vertices
      type: System.Collections.Generic.List{g3.Vector3d}
    - id: i
      type: System.Int32
    - id: bLoop
      type: System.Boolean
    return:
      type: g3.Vector3d
    content.vb: Public Shared Function GetTangent(vertices As List(Of Vector3d), i As Integer, bLoop As Boolean = False) As Vector3d
  overload: g3.CurveUtils.GetTangent*
  nameWithType.vb: CurveUtils.GetTangent(List(Of Vector3d), Int32, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.CurveUtils.GetTangent(System.Collections.Generic.List(Of g3.Vector3d), System.Int32, System.Boolean)
  name.vb: GetTangent(List(Of Vector3d), Int32, Boolean)
- uid: g3.CurveUtils.ArcLength(System.Collections.Generic.List{g3.Vector3d},System.Boolean)
  commentId: M:g3.CurveUtils.ArcLength(System.Collections.Generic.List{g3.Vector3d},System.Boolean)
  id: ArcLength(System.Collections.Generic.List{g3.Vector3d},System.Boolean)
  parent: g3.CurveUtils
  langs:
  - csharp
  - vb
  name: ArcLength(List<Vector3d>, Boolean)
  nameWithType: CurveUtils.ArcLength(List<Vector3d>, Boolean)
  fullName: g3.CurveUtils.ArcLength(System.Collections.Generic.List<g3.Vector3d>, System.Boolean)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/CurveUtils.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ArcLength
    path: ../Assets/geometry3Sharp/curve/CurveUtils.cs
    startLine: 29
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double ArcLength(List<Vector3d> vertices, bool bLoop = false)
    parameters:
    - id: vertices
      type: System.Collections.Generic.List{g3.Vector3d}
    - id: bLoop
      type: System.Boolean
    return:
      type: System.Double
    content.vb: Public Shared Function ArcLength(vertices As List(Of Vector3d), bLoop As Boolean = False) As Double
  overload: g3.CurveUtils.ArcLength*
  nameWithType.vb: CurveUtils.ArcLength(List(Of Vector3d), Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.CurveUtils.ArcLength(System.Collections.Generic.List(Of g3.Vector3d), System.Boolean)
  name.vb: ArcLength(List(Of Vector3d), Boolean)
- uid: g3.CurveUtils.ArcLength(g3.Vector3d[],System.Boolean)
  commentId: M:g3.CurveUtils.ArcLength(g3.Vector3d[],System.Boolean)
  id: ArcLength(g3.Vector3d[],System.Boolean)
  parent: g3.CurveUtils
  langs:
  - csharp
  - vb
  name: ArcLength(Vector3d[], Boolean)
  nameWithType: CurveUtils.ArcLength(Vector3d[], Boolean)
  fullName: g3.CurveUtils.ArcLength(g3.Vector3d[], System.Boolean)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/CurveUtils.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ArcLength
    path: ../Assets/geometry3Sharp/curve/CurveUtils.cs
    startLine: 38
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double ArcLength(Vector3d[] vertices, bool bLoop = false)
    parameters:
    - id: vertices
      type: g3.Vector3d[]
    - id: bLoop
      type: System.Boolean
    return:
      type: System.Double
    content.vb: Public Shared Function ArcLength(vertices As Vector3d(), bLoop As Boolean = False) As Double
  overload: g3.CurveUtils.ArcLength*
  nameWithType.vb: CurveUtils.ArcLength(Vector3d(), Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.CurveUtils.ArcLength(g3.Vector3d(), System.Boolean)
  name.vb: ArcLength(Vector3d(), Boolean)
- uid: g3.CurveUtils.ArcLength(System.Collections.Generic.IEnumerable{g3.Vector3d})
  commentId: M:g3.CurveUtils.ArcLength(System.Collections.Generic.IEnumerable{g3.Vector3d})
  id: ArcLength(System.Collections.Generic.IEnumerable{g3.Vector3d})
  parent: g3.CurveUtils
  langs:
  - csharp
  - vb
  name: ArcLength(IEnumerable<Vector3d>)
  nameWithType: CurveUtils.ArcLength(IEnumerable<Vector3d>)
  fullName: g3.CurveUtils.ArcLength(System.Collections.Generic.IEnumerable<g3.Vector3d>)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/CurveUtils.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ArcLength
    path: ../Assets/geometry3Sharp/curve/CurveUtils.cs
    startLine: 46
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double ArcLength(IEnumerable<Vector3d> vertices)
    parameters:
    - id: vertices
      type: System.Collections.Generic.IEnumerable{g3.Vector3d}
    return:
      type: System.Double
    content.vb: Public Shared Function ArcLength(vertices As IEnumerable(Of Vector3d)) As Double
  overload: g3.CurveUtils.ArcLength*
  nameWithType.vb: CurveUtils.ArcLength(IEnumerable(Of Vector3d))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.CurveUtils.ArcLength(System.Collections.Generic.IEnumerable(Of g3.Vector3d))
  name.vb: ArcLength(IEnumerable(Of Vector3d))
- uid: g3.CurveUtils.FindNearestIndex(g3.ISampledCurve3d,g3.Vector3d)
  commentId: M:g3.CurveUtils.FindNearestIndex(g3.ISampledCurve3d,g3.Vector3d)
  id: FindNearestIndex(g3.ISampledCurve3d,g3.Vector3d)
  parent: g3.CurveUtils
  langs:
  - csharp
  - vb
  name: FindNearestIndex(ISampledCurve3d, Vector3d)
  nameWithType: CurveUtils.FindNearestIndex(ISampledCurve3d, Vector3d)
  fullName: g3.CurveUtils.FindNearestIndex(g3.ISampledCurve3d, g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/CurveUtils.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: FindNearestIndex
    path: ../Assets/geometry3Sharp/curve/CurveUtils.cs
    startLine: 60
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static int FindNearestIndex(ISampledCurve3d c, Vector3d v)
    parameters:
    - id: c
      type: g3.ISampledCurve3d
    - id: v
      type: g3.Vector3d
    return:
      type: System.Int32
    content.vb: Public Shared Function FindNearestIndex(c As ISampledCurve3d, v As Vector3d) As Integer
  overload: g3.CurveUtils.FindNearestIndex*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.CurveUtils.FindClosestRayIntersection(g3.ISampledCurve3d,System.Double,g3.Ray3d,System.Double@)
  commentId: M:g3.CurveUtils.FindClosestRayIntersection(g3.ISampledCurve3d,System.Double,g3.Ray3d,System.Double@)
  id: FindClosestRayIntersection(g3.ISampledCurve3d,System.Double,g3.Ray3d,System.Double@)
  parent: g3.CurveUtils
  langs:
  - csharp
  - vb
  name: FindClosestRayIntersection(ISampledCurve3d, Double, Ray3d, out Double)
  nameWithType: CurveUtils.FindClosestRayIntersection(ISampledCurve3d, Double, Ray3d, out Double)
  fullName: g3.CurveUtils.FindClosestRayIntersection(g3.ISampledCurve3d, System.Double, g3.Ray3d, out System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/CurveUtils.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: FindClosestRayIntersection
    path: ../Assets/geometry3Sharp/curve/CurveUtils.cs
    startLine: 77
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static bool FindClosestRayIntersection(ISampledCurve3d c, double segRadius, Ray3d ray, out double minRayT)
    parameters:
    - id: c
      type: g3.ISampledCurve3d
    - id: segRadius
      type: System.Double
    - id: ray
      type: g3.Ray3d
    - id: minRayT
      type: System.Double
    return:
      type: System.Boolean
    content.vb: Public Shared Function FindClosestRayIntersection(c As ISampledCurve3d, segRadius As Double, ray As Ray3d, ByRef minRayT As Double) As Boolean
  overload: g3.CurveUtils.FindClosestRayIntersection*
  nameWithType.vb: CurveUtils.FindClosestRayIntersection(ISampledCurve3d, Double, Ray3d, ByRef Double)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.CurveUtils.FindClosestRayIntersection(g3.ISampledCurve3d, System.Double, g3.Ray3d, ByRef System.Double)
  name.vb: FindClosestRayIntersection(ISampledCurve3d, Double, Ray3d, ByRef Double)
- uid: g3.CurveUtils.InPlaceSmooth(System.Collections.Generic.IList{g3.Vector3d},System.Double,System.Int32,System.Boolean)
  commentId: M:g3.CurveUtils.InPlaceSmooth(System.Collections.Generic.IList{g3.Vector3d},System.Double,System.Int32,System.Boolean)
  id: InPlaceSmooth(System.Collections.Generic.IList{g3.Vector3d},System.Double,System.Int32,System.Boolean)
  parent: g3.CurveUtils
  langs:
  - csharp
  - vb
  name: InPlaceSmooth(IList<Vector3d>, Double, Int32, Boolean)
  nameWithType: CurveUtils.InPlaceSmooth(IList<Vector3d>, Double, Int32, Boolean)
  fullName: g3.CurveUtils.InPlaceSmooth(System.Collections.Generic.IList<g3.Vector3d>, System.Double, System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/CurveUtils.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: InPlaceSmooth
    path: ../Assets/geometry3Sharp/curve/CurveUtils.cs
    startLine: 112
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nsmooth set of vertices in-place (will not produce a symmetric result, but does not require extra buffer)\n"
  example: []
  syntax:
    content: public static void InPlaceSmooth(IList<Vector3d> vertices, double alpha, int nIterations, bool bClosed)
    parameters:
    - id: vertices
      type: System.Collections.Generic.IList{g3.Vector3d}
    - id: alpha
      type: System.Double
    - id: nIterations
      type: System.Int32
    - id: bClosed
      type: System.Boolean
    content.vb: Public Shared Sub InPlaceSmooth(vertices As IList(Of Vector3d), alpha As Double, nIterations As Integer, bClosed As Boolean)
  overload: g3.CurveUtils.InPlaceSmooth*
  nameWithType.vb: CurveUtils.InPlaceSmooth(IList(Of Vector3d), Double, Int32, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.CurveUtils.InPlaceSmooth(System.Collections.Generic.IList(Of g3.Vector3d), System.Double, System.Int32, System.Boolean)
  name.vb: InPlaceSmooth(IList(Of Vector3d), Double, Int32, Boolean)
- uid: g3.CurveUtils.InPlaceSmooth(System.Collections.Generic.IList{g3.Vector3d},System.Int32,System.Int32,System.Double,System.Int32,System.Boolean)
  commentId: M:g3.CurveUtils.InPlaceSmooth(System.Collections.Generic.IList{g3.Vector3d},System.Int32,System.Int32,System.Double,System.Int32,System.Boolean)
  id: InPlaceSmooth(System.Collections.Generic.IList{g3.Vector3d},System.Int32,System.Int32,System.Double,System.Int32,System.Boolean)
  parent: g3.CurveUtils
  langs:
  - csharp
  - vb
  name: InPlaceSmooth(IList<Vector3d>, Int32, Int32, Double, Int32, Boolean)
  nameWithType: CurveUtils.InPlaceSmooth(IList<Vector3d>, Int32, Int32, Double, Int32, Boolean)
  fullName: g3.CurveUtils.InPlaceSmooth(System.Collections.Generic.IList<g3.Vector3d>, System.Int32, System.Int32, System.Double, System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/CurveUtils.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: InPlaceSmooth
    path: ../Assets/geometry3Sharp/curve/CurveUtils.cs
    startLine: 119
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nsmooth set of vertices in-place (will not produce a symmetric result, but does not require extra buffer)\n"
  example: []
  syntax:
    content: public static void InPlaceSmooth(IList<Vector3d> vertices, int iStart, int iEnd, double alpha, int nIterations, bool bClosed)
    parameters:
    - id: vertices
      type: System.Collections.Generic.IList{g3.Vector3d}
    - id: iStart
      type: System.Int32
    - id: iEnd
      type: System.Int32
    - id: alpha
      type: System.Double
    - id: nIterations
      type: System.Int32
    - id: bClosed
      type: System.Boolean
    content.vb: Public Shared Sub InPlaceSmooth(vertices As IList(Of Vector3d), iStart As Integer, iEnd As Integer, alpha As Double, nIterations As Integer, bClosed As Boolean)
  overload: g3.CurveUtils.InPlaceSmooth*
  nameWithType.vb: CurveUtils.InPlaceSmooth(IList(Of Vector3d), Int32, Int32, Double, Int32, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.CurveUtils.InPlaceSmooth(System.Collections.Generic.IList(Of g3.Vector3d), System.Int32, System.Int32, System.Double, System.Int32, System.Boolean)
  name.vb: InPlaceSmooth(IList(Of Vector3d), Int32, Int32, Double, Int32, Boolean)
- uid: g3.CurveUtils.IterativeSmooth(System.Collections.Generic.IList{g3.Vector3d},System.Double,System.Int32,System.Boolean)
  commentId: M:g3.CurveUtils.IterativeSmooth(System.Collections.Generic.IList{g3.Vector3d},System.Double,System.Int32,System.Boolean)
  id: IterativeSmooth(System.Collections.Generic.IList{g3.Vector3d},System.Double,System.Int32,System.Boolean)
  parent: g3.CurveUtils
  langs:
  - csharp
  - vb
  name: IterativeSmooth(IList<Vector3d>, Double, Int32, Boolean)
  nameWithType: CurveUtils.IterativeSmooth(IList<Vector3d>, Double, Int32, Boolean)
  fullName: g3.CurveUtils.IterativeSmooth(System.Collections.Generic.IList<g3.Vector3d>, System.Double, System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/CurveUtils.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IterativeSmooth
    path: ../Assets/geometry3Sharp/curve/CurveUtils.cs
    startLine: 151
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nsmooth set of vertices using extra buffer\n"
  example: []
  syntax:
    content: public static void IterativeSmooth(IList<Vector3d> vertices, double alpha, int nIterations, bool bClosed)
    parameters:
    - id: vertices
      type: System.Collections.Generic.IList{g3.Vector3d}
    - id: alpha
      type: System.Double
    - id: nIterations
      type: System.Int32
    - id: bClosed
      type: System.Boolean
    content.vb: Public Shared Sub IterativeSmooth(vertices As IList(Of Vector3d), alpha As Double, nIterations As Integer, bClosed As Boolean)
  overload: g3.CurveUtils.IterativeSmooth*
  nameWithType.vb: CurveUtils.IterativeSmooth(IList(Of Vector3d), Double, Int32, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.CurveUtils.IterativeSmooth(System.Collections.Generic.IList(Of g3.Vector3d), System.Double, System.Int32, System.Boolean)
  name.vb: IterativeSmooth(IList(Of Vector3d), Double, Int32, Boolean)
- uid: g3.CurveUtils.IterativeSmooth(System.Collections.Generic.IList{g3.Vector3d},System.Int32,System.Int32,System.Double,System.Int32,System.Boolean,g3.Vector3d[])
  commentId: M:g3.CurveUtils.IterativeSmooth(System.Collections.Generic.IList{g3.Vector3d},System.Int32,System.Int32,System.Double,System.Int32,System.Boolean,g3.Vector3d[])
  id: IterativeSmooth(System.Collections.Generic.IList{g3.Vector3d},System.Int32,System.Int32,System.Double,System.Int32,System.Boolean,g3.Vector3d[])
  parent: g3.CurveUtils
  langs:
  - csharp
  - vb
  name: IterativeSmooth(IList<Vector3d>, Int32, Int32, Double, Int32, Boolean, Vector3d[])
  nameWithType: CurveUtils.IterativeSmooth(IList<Vector3d>, Int32, Int32, Double, Int32, Boolean, Vector3d[])
  fullName: g3.CurveUtils.IterativeSmooth(System.Collections.Generic.IList<g3.Vector3d>, System.Int32, System.Int32, System.Double, System.Int32, System.Boolean, g3.Vector3d[])
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/CurveUtils.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IterativeSmooth
    path: ../Assets/geometry3Sharp/curve/CurveUtils.cs
    startLine: 158
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nsmooth set of vertices using extra buffer\n"
  example: []
  syntax:
    content: public static void IterativeSmooth(IList<Vector3d> vertices, int iStart, int iEnd, double alpha, int nIterations, bool bClosed, Vector3d[] buffer = null)
    parameters:
    - id: vertices
      type: System.Collections.Generic.IList{g3.Vector3d}
    - id: iStart
      type: System.Int32
    - id: iEnd
      type: System.Int32
    - id: alpha
      type: System.Double
    - id: nIterations
      type: System.Int32
    - id: bClosed
      type: System.Boolean
    - id: buffer
      type: g3.Vector3d[]
    content.vb: Public Shared Sub IterativeSmooth(vertices As IList(Of Vector3d), iStart As Integer, iEnd As Integer, alpha As Double, nIterations As Integer, bClosed As Boolean, buffer As Vector3d() = Nothing)
  overload: g3.CurveUtils.IterativeSmooth*
  nameWithType.vb: CurveUtils.IterativeSmooth(IList(Of Vector3d), Int32, Int32, Double, Int32, Boolean, Vector3d())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.CurveUtils.IterativeSmooth(System.Collections.Generic.IList(Of g3.Vector3d), System.Int32, System.Int32, System.Double, System.Int32, System.Boolean, g3.Vector3d())
  name.vb: IterativeSmooth(IList(Of Vector3d), Int32, Int32, Double, Int32, Boolean, Vector3d())
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: g3.CurveUtils.GetTangent*
  commentId: Overload:g3.CurveUtils.GetTangent
  name: GetTangent
  nameWithType: CurveUtils.GetTangent
  fullName: g3.CurveUtils.GetTangent
- uid: System.Collections.Generic.List{g3.Vector3d}
  commentId: T:System.Collections.Generic.List{g3.Vector3d}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Vector3d>
  nameWithType: List<Vector3d>
  fullName: System.Collections.Generic.List<g3.Vector3d>
  nameWithType.vb: List(Of Vector3d)
  fullName.vb: System.Collections.Generic.List(Of g3.Vector3d)
  name.vb: List(Of Vector3d)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: g3.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: g3.Vector3d
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: g3.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: g3.Vector3d
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: g3.Vector3d
  commentId: T:g3.Vector3d
  parent: g3
  name: Vector3d
  nameWithType: Vector3d
  fullName: g3.Vector3d
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: g3.CurveUtils.ArcLength*
  commentId: Overload:g3.CurveUtils.ArcLength
  name: ArcLength
  nameWithType: CurveUtils.ArcLength
  fullName: g3.CurveUtils.ArcLength
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: g3.Vector3d[]
  isExternal: true
  name: Vector3d[]
  nameWithType: Vector3d[]
  fullName: g3.Vector3d[]
  nameWithType.vb: Vector3d()
  fullName.vb: g3.Vector3d()
  name.vb: Vector3d()
  spec.csharp:
  - uid: g3.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: g3.Vector3d
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: g3.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: g3.Vector3d
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerable{g3.Vector3d}
  commentId: T:System.Collections.Generic.IEnumerable{g3.Vector3d}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Vector3d>
  nameWithType: IEnumerable<Vector3d>
  fullName: System.Collections.Generic.IEnumerable<g3.Vector3d>
  nameWithType.vb: IEnumerable(Of Vector3d)
  fullName.vb: System.Collections.Generic.IEnumerable(Of g3.Vector3d)
  name.vb: IEnumerable(Of Vector3d)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: g3.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: g3.Vector3d
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: g3.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: g3.Vector3d
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.CurveUtils.FindNearestIndex*
  commentId: Overload:g3.CurveUtils.FindNearestIndex
  name: FindNearestIndex
  nameWithType: CurveUtils.FindNearestIndex
  fullName: g3.CurveUtils.FindNearestIndex
- uid: g3.ISampledCurve3d
  commentId: T:g3.ISampledCurve3d
  parent: g3
  name: ISampledCurve3d
  nameWithType: ISampledCurve3d
  fullName: g3.ISampledCurve3d
- uid: g3.CurveUtils.FindClosestRayIntersection*
  commentId: Overload:g3.CurveUtils.FindClosestRayIntersection
  name: FindClosestRayIntersection
  nameWithType: CurveUtils.FindClosestRayIntersection
  fullName: g3.CurveUtils.FindClosestRayIntersection
- uid: g3.Ray3d
  commentId: T:g3.Ray3d
  parent: g3
  name: Ray3d
  nameWithType: Ray3d
  fullName: g3.Ray3d
- uid: g3.CurveUtils.InPlaceSmooth*
  commentId: Overload:g3.CurveUtils.InPlaceSmooth
  name: InPlaceSmooth
  nameWithType: CurveUtils.InPlaceSmooth
  fullName: g3.CurveUtils.InPlaceSmooth
- uid: System.Collections.Generic.IList{g3.Vector3d}
  commentId: T:System.Collections.Generic.IList{g3.Vector3d}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Vector3d>
  nameWithType: IList<Vector3d>
  fullName: System.Collections.Generic.IList<g3.Vector3d>
  nameWithType.vb: IList(Of Vector3d)
  fullName.vb: System.Collections.Generic.IList(Of g3.Vector3d)
  name.vb: IList(Of Vector3d)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: g3.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: g3.Vector3d
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: g3.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: g3.Vector3d
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.CurveUtils.IterativeSmooth*
  commentId: Overload:g3.CurveUtils.IterativeSmooth
  name: IterativeSmooth
  nameWithType: CurveUtils.IterativeSmooth
  fullName: g3.CurveUtils.IterativeSmooth

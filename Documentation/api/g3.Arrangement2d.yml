### YamlMime:ManagedReference
items:
- uid: g3.Arrangement2d
  commentId: T:g3.Arrangement2d
  id: Arrangement2d
  parent: g3
  children:
  - g3.Arrangement2d.#ctor(g3.AxisAlignedBox2d)
  - g3.Arrangement2d.ConnectOpenBoundaries(System.Double)
  - g3.Arrangement2d.find_existing_vertex(g3.Vector2d)
  - g3.Arrangement2d.find_intersecting_edges(g3.Vector2d@,g3.Vector2d@,System.Collections.Generic.List{g3.Arrangement2d.Intersection},System.Double)
  - g3.Arrangement2d.find_nearest_boundary_vertex(g3.Vector2d,System.Double,System.Int32)
  - g3.Arrangement2d.find_nearest_vertex(g3.Vector2d,System.Double,System.Int32)
  - g3.Arrangement2d.Graph
  - g3.Arrangement2d.Insert(g3.Polygon2d,System.Int32)
  - g3.Arrangement2d.Insert(g3.PolyLine2d,System.Int32)
  - g3.Arrangement2d.Insert(g3.Segment2d,System.Int32)
  - g3.Arrangement2d.Insert(g3.Vector2d,g3.Vector2d,System.Int32)
  - g3.Arrangement2d.insert_segment(g3.Vector2d,g3.Vector2d,System.Int32,System.Double)
  - g3.Arrangement2d.insert_segment(g3.Vector2d@,g3.Vector2d@,System.Int32,System.Double)
  - g3.Arrangement2d.PointHash
  - g3.Arrangement2d.split_segment_at_t(System.Int32,System.Double,System.Double)
  - g3.Arrangement2d.VertexSnapTol
  langs:
  - csharp
  - vb
  name: Arrangement2d
  nameWithType: Arrangement2d
  fullName: g3.Arrangement2d
  type: Class
  source:
    remote:
      path: Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Arrangement2d
    path: ../Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
    startLine: 20
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nArrangement2d constructs a planar arrangement of a set of 2D line segments.\nWhen a segment is inserted, existing edges are split, and the inserted\nsegment becomes multiple graph edges. So, the resulting DGraph2 should\nnot have any edges that intersect.\n\nCalculations are performed in double-precision, so there is no guarantee\nof correctness. \n\n\n[TODO] multi-level segment has to accelerate find_intersecting_edges()\n[TODO] maybe smarter handling\n\n"
  example: []
  syntax:
    content: public class Arrangement2d
    content.vb: Public Class Arrangement2d
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: g3.Arrangement2d.Graph
  commentId: F:g3.Arrangement2d.Graph
  id: Graph
  parent: g3.Arrangement2d
  langs:
  - csharp
  - vb
  name: Graph
  nameWithType: Arrangement2d.Graph
  fullName: g3.Arrangement2d.Graph
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Graph
    path: ../Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
    startLine: 23
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public DGraph2 Graph
    return:
      type: g3.DGraph2
    content.vb: Public Graph As DGraph2
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Arrangement2d.PointHash
  commentId: F:g3.Arrangement2d.PointHash
  id: PointHash
  parent: g3.Arrangement2d
  langs:
  - csharp
  - vb
  name: PointHash
  nameWithType: Arrangement2d.PointHash
  fullName: g3.Arrangement2d.PointHash
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: PointHash
    path: ../Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
    startLine: 26
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public PointHashGrid2d<int> PointHash
    return:
      type: g3.PointHashGrid2d{System.Int32}
    content.vb: Public PointHash As PointHashGrid2d(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Arrangement2d.VertexSnapTol
  commentId: F:g3.Arrangement2d.VertexSnapTol
  id: VertexSnapTol
  parent: g3.Arrangement2d
  langs:
  - csharp
  - vb
  name: VertexSnapTol
  nameWithType: Arrangement2d.VertexSnapTol
  fullName: g3.Arrangement2d.VertexSnapTol
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: VertexSnapTol
    path: ../Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
    startLine: 29
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double VertexSnapTol
    return:
      type: System.Double
    content.vb: Public VertexSnapTol As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Arrangement2d.#ctor(g3.AxisAlignedBox2d)
  commentId: M:g3.Arrangement2d.#ctor(g3.AxisAlignedBox2d)
  id: '#ctor(g3.AxisAlignedBox2d)'
  parent: g3.Arrangement2d
  langs:
  - csharp
  - vb
  name: Arrangement2d(AxisAlignedBox2d)
  nameWithType: Arrangement2d.Arrangement2d(AxisAlignedBox2d)
  fullName: g3.Arrangement2d.Arrangement2d(g3.AxisAlignedBox2d)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
    startLine: 32
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Arrangement2d(AxisAlignedBox2d boundsHint)
    parameters:
    - id: boundsHint
      type: g3.AxisAlignedBox2d
    content.vb: Public Sub New(boundsHint As AxisAlignedBox2d)
  overload: g3.Arrangement2d.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Arrangement2d.Insert(g3.Vector2d,g3.Vector2d,System.Int32)
  commentId: M:g3.Arrangement2d.Insert(g3.Vector2d,g3.Vector2d,System.Int32)
  id: Insert(g3.Vector2d,g3.Vector2d,System.Int32)
  parent: g3.Arrangement2d
  langs:
  - csharp
  - vb
  name: Insert(Vector2d, Vector2d, Int32)
  nameWithType: Arrangement2d.Insert(Vector2d, Vector2d, Int32)
  fullName: g3.Arrangement2d.Insert(g3.Vector2d, g3.Vector2d, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Insert
    path: ../Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
    startLine: 45
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\ninsert segment [a,b] into the arrangement\n"
  example: []
  syntax:
    content: public void Insert(Vector2d a, Vector2d b, int gid = -1)
    parameters:
    - id: a
      type: g3.Vector2d
    - id: b
      type: g3.Vector2d
    - id: gid
      type: System.Int32
    content.vb: Public Sub Insert(a As Vector2d, b As Vector2d, gid As Integer = -1)
  overload: g3.Arrangement2d.Insert*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Arrangement2d.Insert(g3.Segment2d,System.Int32)
  commentId: M:g3.Arrangement2d.Insert(g3.Segment2d,System.Int32)
  id: Insert(g3.Segment2d,System.Int32)
  parent: g3.Arrangement2d
  langs:
  - csharp
  - vb
  name: Insert(Segment2d, Int32)
  nameWithType: Arrangement2d.Insert(Segment2d, Int32)
  fullName: g3.Arrangement2d.Insert(g3.Segment2d, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Insert
    path: ../Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
    startLine: 53
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\ninsert segment into the arrangement\n"
  example: []
  syntax:
    content: public void Insert(Segment2d segment, int gid = -1)
    parameters:
    - id: segment
      type: g3.Segment2d
    - id: gid
      type: System.Int32
    content.vb: Public Sub Insert(segment As Segment2d, gid As Integer = -1)
  overload: g3.Arrangement2d.Insert*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Arrangement2d.Insert(g3.PolyLine2d,System.Int32)
  commentId: M:g3.Arrangement2d.Insert(g3.PolyLine2d,System.Int32)
  id: Insert(g3.PolyLine2d,System.Int32)
  parent: g3.Arrangement2d
  langs:
  - csharp
  - vb
  name: Insert(PolyLine2d, Int32)
  nameWithType: Arrangement2d.Insert(PolyLine2d, Int32)
  fullName: g3.Arrangement2d.Insert(g3.PolyLine2d, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Insert
    path: ../Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
    startLine: 61
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nsequentially insert segments of polyline\n"
  example: []
  syntax:
    content: public void Insert(PolyLine2d pline, int gid = -1)
    parameters:
    - id: pline
      type: g3.PolyLine2d
    - id: gid
      type: System.Int32
    content.vb: Public Sub Insert(pline As PolyLine2d, gid As Integer = -1)
  overload: g3.Arrangement2d.Insert*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Arrangement2d.Insert(g3.Polygon2d,System.Int32)
  commentId: M:g3.Arrangement2d.Insert(g3.Polygon2d,System.Int32)
  id: Insert(g3.Polygon2d,System.Int32)
  parent: g3.Arrangement2d
  langs:
  - csharp
  - vb
  name: Insert(Polygon2d, Int32)
  nameWithType: Arrangement2d.Insert(Polygon2d, Int32)
  fullName: g3.Arrangement2d.Insert(g3.Polygon2d, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Insert
    path: ../Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
    startLine: 74
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nsequentially insert segments of polygon\n"
  example: []
  syntax:
    content: public void Insert(Polygon2d poly, int gid = -1)
    parameters:
    - id: poly
      type: g3.Polygon2d
    - id: gid
      type: System.Int32
    content.vb: Public Sub Insert(poly As Polygon2d, gid As Integer = -1)
  overload: g3.Arrangement2d.Insert*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Arrangement2d.ConnectOpenBoundaries(System.Double)
  commentId: M:g3.Arrangement2d.ConnectOpenBoundaries(System.Double)
  id: ConnectOpenBoundaries(System.Double)
  parent: g3.Arrangement2d
  langs:
  - csharp
  - vb
  name: ConnectOpenBoundaries(Double)
  nameWithType: Arrangement2d.ConnectOpenBoundaries(Double)
  fullName: g3.Arrangement2d.ConnectOpenBoundaries(System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ConnectOpenBoundaries
    path: ../Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
    startLine: 95
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nconnect open boundary vertices within distThresh, by inserting new segments\n"
  example: []
  syntax:
    content: public void ConnectOpenBoundaries(double distThresh)
    parameters:
    - id: distThresh
      type: System.Double
    content.vb: Public Sub ConnectOpenBoundaries(distThresh As Double)
  overload: g3.Arrangement2d.ConnectOpenBoundaries*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Arrangement2d.insert_segment(g3.Vector2d@,g3.Vector2d@,System.Int32,System.Double)
  commentId: M:g3.Arrangement2d.insert_segment(g3.Vector2d@,g3.Vector2d@,System.Int32,System.Double)
  id: insert_segment(g3.Vector2d@,g3.Vector2d@,System.Int32,System.Double)
  parent: g3.Arrangement2d
  langs:
  - csharp
  - vb
  name: insert_segment(ref Vector2d, ref Vector2d, Int32, Double)
  nameWithType: Arrangement2d.insert_segment(ref Vector2d, ref Vector2d, Int32, Double)
  fullName: g3.Arrangement2d.insert_segment(ref g3.Vector2d, ref g3.Vector2d, System.Int32, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: insert_segment
    path: ../Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
    startLine: 126
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\ninsert edge [a,b] into the arrangement, splitting existing edges as necessary\n"
  example: []
  syntax:
    content: protected bool insert_segment(ref Vector2d a, ref Vector2d b, int gid = -1, double tol = 0)
    parameters:
    - id: a
      type: g3.Vector2d
    - id: b
      type: g3.Vector2d
    - id: gid
      type: System.Int32
    - id: tol
      type: System.Double
    return:
      type: System.Boolean
    content.vb: Protected Function insert_segment(ByRef a As Vector2d, ByRef b As Vector2d, gid As Integer = -1, tol As Double = 0) As Boolean
  overload: g3.Arrangement2d.insert_segment*
  nameWithType.vb: Arrangement2d.insert_segment(ByRef Vector2d, ByRef Vector2d, Int32, Double)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: g3.Arrangement2d.insert_segment(ByRef g3.Vector2d, ByRef g3.Vector2d, System.Int32, System.Double)
  name.vb: insert_segment(ByRef Vector2d, ByRef Vector2d, Int32, Double)
- uid: g3.Arrangement2d.insert_segment(g3.Vector2d,g3.Vector2d,System.Int32,System.Double)
  commentId: M:g3.Arrangement2d.insert_segment(g3.Vector2d,g3.Vector2d,System.Int32,System.Double)
  id: insert_segment(g3.Vector2d,g3.Vector2d,System.Int32,System.Double)
  parent: g3.Arrangement2d
  langs:
  - csharp
  - vb
  name: insert_segment(Vector2d, Vector2d, Int32, Double)
  nameWithType: Arrangement2d.insert_segment(Vector2d, Vector2d, Int32, Double)
  fullName: g3.Arrangement2d.insert_segment(g3.Vector2d, g3.Vector2d, System.Int32, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: insert_segment
    path: ../Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
    startLine: 218
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: protected bool insert_segment(Vector2d a, Vector2d b, int gid = -1, double tol = 0)
    parameters:
    - id: a
      type: g3.Vector2d
    - id: b
      type: g3.Vector2d
    - id: gid
      type: System.Int32
    - id: tol
      type: System.Double
    return:
      type: System.Boolean
    content.vb: Protected Function insert_segment(a As Vector2d, b As Vector2d, gid As Integer = -1, tol As Double = 0) As Boolean
  overload: g3.Arrangement2d.insert_segment*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: g3.Arrangement2d.split_segment_at_t(System.Int32,System.Double,System.Double)
  commentId: M:g3.Arrangement2d.split_segment_at_t(System.Int32,System.Double,System.Double)
  id: split_segment_at_t(System.Int32,System.Double,System.Double)
  parent: g3.Arrangement2d
  langs:
  - csharp
  - vb
  name: split_segment_at_t(Int32, Double, Double)
  nameWithType: Arrangement2d.split_segment_at_t(Int32, Double, Double)
  fullName: g3.Arrangement2d.split_segment_at_t(System.Int32, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: split_segment_at_t
    path: ../Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
    startLine: 229
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\ninsert new point into segment eid at parameter value t\nIf t is within tol of endpoint of segment, we use that instead.\n"
  example: []
  syntax:
    content: protected Index2i split_segment_at_t(int eid, double t, double tol)
    parameters:
    - id: eid
      type: System.Int32
    - id: t
      type: System.Double
    - id: tol
      type: System.Double
    return:
      type: g3.Index2i
    content.vb: Protected Function split_segment_at_t(eid As Integer, t As Double, tol As Double) As Index2i
  overload: g3.Arrangement2d.split_segment_at_t*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: g3.Arrangement2d.find_existing_vertex(g3.Vector2d)
  commentId: M:g3.Arrangement2d.find_existing_vertex(g3.Vector2d)
  id: find_existing_vertex(g3.Vector2d)
  parent: g3.Arrangement2d
  langs:
  - csharp
  - vb
  name: find_existing_vertex(Vector2d)
  nameWithType: Arrangement2d.find_existing_vertex(Vector2d)
  fullName: g3.Arrangement2d.find_existing_vertex(g3.Vector2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: find_existing_vertex
    path: ../Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
    startLine: 258
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nfind existing vertex at point, if it exists\n"
  example: []
  syntax:
    content: protected int find_existing_vertex(Vector2d pt)
    parameters:
    - id: pt
      type: g3.Vector2d
    return:
      type: System.Int32
    content.vb: Protected Function find_existing_vertex(pt As Vector2d) As Integer
  overload: g3.Arrangement2d.find_existing_vertex*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: g3.Arrangement2d.find_nearest_vertex(g3.Vector2d,System.Double,System.Int32)
  commentId: M:g3.Arrangement2d.find_nearest_vertex(g3.Vector2d,System.Double,System.Int32)
  id: find_nearest_vertex(g3.Vector2d,System.Double,System.Int32)
  parent: g3.Arrangement2d
  langs:
  - csharp
  - vb
  name: find_nearest_vertex(Vector2d, Double, Int32)
  nameWithType: Arrangement2d.find_nearest_vertex(Vector2d, Double, Int32)
  fullName: g3.Arrangement2d.find_nearest_vertex(g3.Vector2d, System.Double, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: find_nearest_vertex
    path: ../Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
    startLine: 265
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nfind closest vertex, within searchRadius\n"
  example: []
  syntax:
    content: protected int find_nearest_vertex(Vector2d pt, double searchRadius, int ignore_vid = -1)
    parameters:
    - id: pt
      type: g3.Vector2d
    - id: searchRadius
      type: System.Double
    - id: ignore_vid
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Protected Function find_nearest_vertex(pt As Vector2d, searchRadius As Double, ignore_vid As Integer = -1) As Integer
  overload: g3.Arrangement2d.find_nearest_vertex*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: g3.Arrangement2d.find_nearest_boundary_vertex(g3.Vector2d,System.Double,System.Int32)
  commentId: M:g3.Arrangement2d.find_nearest_boundary_vertex(g3.Vector2d,System.Double,System.Int32)
  id: find_nearest_boundary_vertex(g3.Vector2d,System.Double,System.Int32)
  parent: g3.Arrangement2d
  langs:
  - csharp
  - vb
  name: find_nearest_boundary_vertex(Vector2d, Double, Int32)
  nameWithType: Arrangement2d.find_nearest_boundary_vertex(Vector2d, Double, Int32)
  fullName: g3.Arrangement2d.find_nearest_boundary_vertex(g3.Vector2d, System.Double, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: find_nearest_boundary_vertex
    path: ../Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
    startLine: 283
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nfind nearest boundary vertex, within searchRadius\n"
  example: []
  syntax:
    content: protected int find_nearest_boundary_vertex(Vector2d pt, double searchRadius, int ignore_vid = -1)
    parameters:
    - id: pt
      type: g3.Vector2d
    - id: searchRadius
      type: System.Double
    - id: ignore_vid
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Protected Function find_nearest_boundary_vertex(pt As Vector2d, searchRadius As Double, ignore_vid As Integer = -1) As Integer
  overload: g3.Arrangement2d.find_nearest_boundary_vertex*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: g3.Arrangement2d.find_intersecting_edges(g3.Vector2d@,g3.Vector2d@,System.Collections.Generic.List{g3.Arrangement2d.Intersection},System.Double)
  commentId: M:g3.Arrangement2d.find_intersecting_edges(g3.Vector2d@,g3.Vector2d@,System.Collections.Generic.List{g3.Arrangement2d.Intersection},System.Double)
  id: find_intersecting_edges(g3.Vector2d@,g3.Vector2d@,System.Collections.Generic.List{g3.Arrangement2d.Intersection},System.Double)
  parent: g3.Arrangement2d
  langs:
  - csharp
  - vb
  name: find_intersecting_edges(ref Vector2d, ref Vector2d, List<Arrangement2d.Intersection>, Double)
  nameWithType: Arrangement2d.find_intersecting_edges(ref Vector2d, ref Vector2d, List<Arrangement2d.Intersection>, Double)
  fullName: g3.Arrangement2d.find_intersecting_edges(ref g3.Vector2d, ref g3.Vector2d, System.Collections.Generic.List<g3.Arrangement2d.Intersection>, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: find_intersecting_edges
    path: ../Assets/geometry3Sharp/comp_geom/Arrangement2d.cs
    startLine: 307
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nfind set of edges in graph that intersect with edge [a,b]\n"
  example: []
  syntax:
    content: protected bool find_intersecting_edges(ref Vector2d a, ref Vector2d b, List<Arrangement2d.Intersection> hits, double tol = 0)
    parameters:
    - id: a
      type: g3.Vector2d
    - id: b
      type: g3.Vector2d
    - id: hits
      type: System.Collections.Generic.List{g3.Arrangement2d.Intersection}
    - id: tol
      type: System.Double
    return:
      type: System.Boolean
    content.vb: Protected Function find_intersecting_edges(ByRef a As Vector2d, ByRef b As Vector2d, hits As List(Of Arrangement2d.Intersection), tol As Double = 0) As Boolean
  overload: g3.Arrangement2d.find_intersecting_edges*
  nameWithType.vb: Arrangement2d.find_intersecting_edges(ByRef Vector2d, ByRef Vector2d, List(Of Arrangement2d.Intersection), Double)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: g3.Arrangement2d.find_intersecting_edges(ByRef g3.Vector2d, ByRef g3.Vector2d, System.Collections.Generic.List(Of g3.Arrangement2d.Intersection), System.Double)
  name.vb: find_intersecting_edges(ByRef Vector2d, ByRef Vector2d, List(Of Arrangement2d.Intersection), Double)
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: g3.DGraph2
  commentId: T:g3.DGraph2
  parent: g3
  name: DGraph2
  nameWithType: DGraph2
  fullName: g3.DGraph2
- uid: g3.PointHashGrid2d{System.Int32}
  commentId: T:g3.PointHashGrid2d{System.Int32}
  parent: g3
  definition: g3.PointHashGrid2d`1
  name: PointHashGrid2d<Int32>
  nameWithType: PointHashGrid2d<Int32>
  fullName: g3.PointHashGrid2d<System.Int32>
  nameWithType.vb: PointHashGrid2d(Of Int32)
  fullName.vb: g3.PointHashGrid2d(Of System.Int32)
  name.vb: PointHashGrid2d(Of Int32)
  spec.csharp:
  - uid: g3.PointHashGrid2d`1
    name: PointHashGrid2d
    nameWithType: PointHashGrid2d
    fullName: g3.PointHashGrid2d
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: g3.PointHashGrid2d`1
    name: PointHashGrid2d
    nameWithType: PointHashGrid2d
    fullName: g3.PointHashGrid2d
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.PointHashGrid2d`1
  commentId: T:g3.PointHashGrid2d`1
  name: PointHashGrid2d<T>
  nameWithType: PointHashGrid2d<T>
  fullName: g3.PointHashGrid2d<T>
  nameWithType.vb: PointHashGrid2d(Of T)
  fullName.vb: g3.PointHashGrid2d(Of T)
  name.vb: PointHashGrid2d(Of T)
  spec.csharp:
  - uid: g3.PointHashGrid2d`1
    name: PointHashGrid2d
    nameWithType: PointHashGrid2d
    fullName: g3.PointHashGrid2d
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: g3.PointHashGrid2d`1
    name: PointHashGrid2d
    nameWithType: PointHashGrid2d
    fullName: g3.PointHashGrid2d
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: g3.Arrangement2d.#ctor*
  commentId: Overload:g3.Arrangement2d.#ctor
  name: Arrangement2d
  nameWithType: Arrangement2d.Arrangement2d
  fullName: g3.Arrangement2d.Arrangement2d
- uid: g3.AxisAlignedBox2d
  commentId: T:g3.AxisAlignedBox2d
  parent: g3
  name: AxisAlignedBox2d
  nameWithType: AxisAlignedBox2d
  fullName: g3.AxisAlignedBox2d
- uid: g3.Arrangement2d.Insert*
  commentId: Overload:g3.Arrangement2d.Insert
  name: Insert
  nameWithType: Arrangement2d.Insert
  fullName: g3.Arrangement2d.Insert
- uid: g3.Vector2d
  commentId: T:g3.Vector2d
  parent: g3
  name: Vector2d
  nameWithType: Vector2d
  fullName: g3.Vector2d
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: g3.Segment2d
  commentId: T:g3.Segment2d
  parent: g3
  name: Segment2d
  nameWithType: Segment2d
  fullName: g3.Segment2d
- uid: g3.PolyLine2d
  commentId: T:g3.PolyLine2d
  parent: g3
  name: PolyLine2d
  nameWithType: PolyLine2d
  fullName: g3.PolyLine2d
- uid: g3.Polygon2d
  commentId: T:g3.Polygon2d
  parent: g3
  name: Polygon2d
  nameWithType: Polygon2d
  fullName: g3.Polygon2d
- uid: g3.Arrangement2d.ConnectOpenBoundaries*
  commentId: Overload:g3.Arrangement2d.ConnectOpenBoundaries
  name: ConnectOpenBoundaries
  nameWithType: Arrangement2d.ConnectOpenBoundaries
  fullName: g3.Arrangement2d.ConnectOpenBoundaries
- uid: g3.Arrangement2d.insert_segment*
  commentId: Overload:g3.Arrangement2d.insert_segment
  name: insert_segment
  nameWithType: Arrangement2d.insert_segment
  fullName: g3.Arrangement2d.insert_segment
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: g3.Arrangement2d.split_segment_at_t*
  commentId: Overload:g3.Arrangement2d.split_segment_at_t
  name: split_segment_at_t
  nameWithType: Arrangement2d.split_segment_at_t
  fullName: g3.Arrangement2d.split_segment_at_t
- uid: g3.Index2i
  commentId: T:g3.Index2i
  parent: g3
  name: Index2i
  nameWithType: Index2i
  fullName: g3.Index2i
- uid: g3.Arrangement2d.find_existing_vertex*
  commentId: Overload:g3.Arrangement2d.find_existing_vertex
  name: find_existing_vertex
  nameWithType: Arrangement2d.find_existing_vertex
  fullName: g3.Arrangement2d.find_existing_vertex
- uid: g3.Arrangement2d.find_nearest_vertex*
  commentId: Overload:g3.Arrangement2d.find_nearest_vertex
  name: find_nearest_vertex
  nameWithType: Arrangement2d.find_nearest_vertex
  fullName: g3.Arrangement2d.find_nearest_vertex
- uid: g3.Arrangement2d.find_nearest_boundary_vertex*
  commentId: Overload:g3.Arrangement2d.find_nearest_boundary_vertex
  name: find_nearest_boundary_vertex
  nameWithType: Arrangement2d.find_nearest_boundary_vertex
  fullName: g3.Arrangement2d.find_nearest_boundary_vertex
- uid: g3.Arrangement2d.find_intersecting_edges*
  commentId: Overload:g3.Arrangement2d.find_intersecting_edges
  name: find_intersecting_edges
  nameWithType: Arrangement2d.find_intersecting_edges
  fullName: g3.Arrangement2d.find_intersecting_edges
- uid: System.Collections.Generic.List{g3.Arrangement2d.Intersection}
  commentId: T:System.Collections.Generic.List{g3.Arrangement2d.Intersection}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Arrangement2d.Intersection>
  nameWithType: List<Arrangement2d.Intersection>
  fullName: System.Collections.Generic.List<g3.Arrangement2d.Intersection>
  nameWithType.vb: List(Of Arrangement2d.Intersection)
  fullName.vb: System.Collections.Generic.List(Of g3.Arrangement2d.Intersection)
  name.vb: List(Of Arrangement2d.Intersection)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: g3.Arrangement2d.Intersection
    name: Arrangement2d.Intersection
    nameWithType: Arrangement2d.Intersection
    fullName: g3.Arrangement2d.Intersection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: g3.Arrangement2d.Intersection
    name: Arrangement2d.Intersection
    nameWithType: Arrangement2d.Intersection
    fullName: g3.Arrangement2d.Intersection
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic

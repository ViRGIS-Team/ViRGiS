### YamlMime:ManagedReference
items:
- uid: g3.PlanarSolid2d
  commentId: T:g3.PlanarSolid2d
  id: PlanarSolid2d
  parent: g3
  children:
  - g3.PlanarSolid2d.#ctor
  - g3.PlanarSolid2d.AddHole(g3.IParametricCurve2d)
  - g3.PlanarSolid2d.Convert(System.Double,System.Double,System.Double)
  - g3.PlanarSolid2d.HasArcLength
  - g3.PlanarSolid2d.Holes
  - g3.PlanarSolid2d.Outer
  - g3.PlanarSolid2d.Perimeter
  - g3.PlanarSolid2d.SetOuter(g3.IParametricCurve2d,System.Boolean)
  langs:
  - csharp
  - vb
  name: PlanarSolid2d
  nameWithType: PlanarSolid2d
  fullName: g3.PlanarSolid2d
  type: Class
  source:
    remote:
      path: Assets/geometry3Sharp/curve/PlanarSolid2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: PlanarSolid2d
    path: ../Assets/geometry3Sharp/curve/PlanarSolid2d.cs
    startLine: 13
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public class PlanarSolid2d
    content.vb: Public Class PlanarSolid2d
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: g3.PlanarSolid2d.#ctor
  commentId: M:g3.PlanarSolid2d.#ctor
  id: '#ctor'
  parent: g3.PlanarSolid2d
  langs:
  - csharp
  - vb
  name: PlanarSolid2d()
  nameWithType: PlanarSolid2d.PlanarSolid2d()
  fullName: g3.PlanarSolid2d.PlanarSolid2d()
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/curve/PlanarSolid2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/curve/PlanarSolid2d.cs
    startLine: 21
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public PlanarSolid2d()
    content.vb: Public Sub New
  overload: g3.PlanarSolid2d.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.PlanarSolid2d.Outer
  commentId: P:g3.PlanarSolid2d.Outer
  id: Outer
  parent: g3.PlanarSolid2d
  langs:
  - csharp
  - vb
  name: Outer
  nameWithType: PlanarSolid2d.Outer
  fullName: g3.PlanarSolid2d.Outer
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/curve/PlanarSolid2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Outer
    path: ../Assets/geometry3Sharp/curve/PlanarSolid2d.cs
    startLine: 25
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IParametricCurve2d Outer { get; }
    parameters: []
    return:
      type: g3.IParametricCurve2d
    content.vb: Public ReadOnly Property Outer As IParametricCurve2d
  overload: g3.PlanarSolid2d.Outer*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.PlanarSolid2d.SetOuter(g3.IParametricCurve2d,System.Boolean)
  commentId: M:g3.PlanarSolid2d.SetOuter(g3.IParametricCurve2d,System.Boolean)
  id: SetOuter(g3.IParametricCurve2d,System.Boolean)
  parent: g3.PlanarSolid2d
  langs:
  - csharp
  - vb
  name: SetOuter(IParametricCurve2d, Boolean)
  nameWithType: PlanarSolid2d.SetOuter(IParametricCurve2d, Boolean)
  fullName: g3.PlanarSolid2d.SetOuter(g3.IParametricCurve2d, System.Boolean)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/PlanarSolid2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: SetOuter
    path: ../Assets/geometry3Sharp/curve/PlanarSolid2d.cs
    startLine: 28
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void SetOuter(IParametricCurve2d loop, bool bIsClockwise)
    parameters:
    - id: loop
      type: g3.IParametricCurve2d
    - id: bIsClockwise
      type: System.Boolean
    content.vb: Public Sub SetOuter(loop As IParametricCurve2d, bIsClockwise As Boolean)
  overload: g3.PlanarSolid2d.SetOuter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.PlanarSolid2d.AddHole(g3.IParametricCurve2d)
  commentId: M:g3.PlanarSolid2d.AddHole(g3.IParametricCurve2d)
  id: AddHole(g3.IParametricCurve2d)
  parent: g3.PlanarSolid2d
  langs:
  - csharp
  - vb
  name: AddHole(IParametricCurve2d)
  nameWithType: PlanarSolid2d.AddHole(IParametricCurve2d)
  fullName: g3.PlanarSolid2d.AddHole(g3.IParametricCurve2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/PlanarSolid2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AddHole
    path: ../Assets/geometry3Sharp/curve/PlanarSolid2d.cs
    startLine: 36
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void AddHole(IParametricCurve2d hole)
    parameters:
    - id: hole
      type: g3.IParametricCurve2d
    content.vb: Public Sub AddHole(hole As IParametricCurve2d)
  overload: g3.PlanarSolid2d.AddHole*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.PlanarSolid2d.Holes
  commentId: P:g3.PlanarSolid2d.Holes
  id: Holes
  parent: g3.PlanarSolid2d
  langs:
  - csharp
  - vb
  name: Holes
  nameWithType: PlanarSolid2d.Holes
  fullName: g3.PlanarSolid2d.Holes
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/curve/PlanarSolid2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Holes
    path: ../Assets/geometry3Sharp/curve/PlanarSolid2d.cs
    startLine: 51
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public ReadOnlyCollection<IParametricCurve2d> Holes { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{g3.IParametricCurve2d}
    content.vb: Public ReadOnly Property Holes As ReadOnlyCollection(Of IParametricCurve2d)
  overload: g3.PlanarSolid2d.Holes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.PlanarSolid2d.HasArcLength
  commentId: P:g3.PlanarSolid2d.HasArcLength
  id: HasArcLength
  parent: g3.PlanarSolid2d
  langs:
  - csharp
  - vb
  name: HasArcLength
  nameWithType: PlanarSolid2d.HasArcLength
  fullName: g3.PlanarSolid2d.HasArcLength
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/curve/PlanarSolid2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: HasArcLength
    path: ../Assets/geometry3Sharp/curve/PlanarSolid2d.cs
    startLine: 56
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool HasArcLength { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasArcLength As Boolean
  overload: g3.PlanarSolid2d.HasArcLength*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.PlanarSolid2d.Perimeter
  commentId: P:g3.PlanarSolid2d.Perimeter
  id: Perimeter
  parent: g3.PlanarSolid2d
  langs:
  - csharp
  - vb
  name: Perimeter
  nameWithType: PlanarSolid2d.Perimeter
  fullName: g3.PlanarSolid2d.Perimeter
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/curve/PlanarSolid2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Perimeter
    path: ../Assets/geometry3Sharp/curve/PlanarSolid2d.cs
    startLine: 67
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double Perimeter { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Perimeter As Double
  overload: g3.PlanarSolid2d.Perimeter*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.PlanarSolid2d.Convert(System.Double,System.Double,System.Double)
  commentId: M:g3.PlanarSolid2d.Convert(System.Double,System.Double,System.Double)
  id: Convert(System.Double,System.Double,System.Double)
  parent: g3.PlanarSolid2d
  langs:
  - csharp
  - vb
  name: Convert(Double, Double, Double)
  nameWithType: PlanarSolid2d.Convert(Double, Double, Double)
  fullName: g3.PlanarSolid2d.Convert(System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/PlanarSolid2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Convert
    path: ../Assets/geometry3Sharp/curve/PlanarSolid2d.cs
    startLine: 83
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nResample parametric solid into polygonal solid\n"
  example: []
  syntax:
    content: public GeneralPolygon2d Convert(double fSpacingLength, double fSpacingT, double fDeviationTolerance)
    parameters:
    - id: fSpacingLength
      type: System.Double
    - id: fSpacingT
      type: System.Double
    - id: fDeviationTolerance
      type: System.Double
    return:
      type: g3.GeneralPolygon2d
    content.vb: Public Function Convert(fSpacingLength As Double, fSpacingT As Double, fDeviationTolerance As Double) As GeneralPolygon2d
  overload: g3.PlanarSolid2d.Convert*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: g3.PlanarSolid2d.#ctor*
  commentId: Overload:g3.PlanarSolid2d.#ctor
  name: PlanarSolid2d
  nameWithType: PlanarSolid2d.PlanarSolid2d
  fullName: g3.PlanarSolid2d.PlanarSolid2d
- uid: g3.PlanarSolid2d.Outer*
  commentId: Overload:g3.PlanarSolid2d.Outer
  name: Outer
  nameWithType: PlanarSolid2d.Outer
  fullName: g3.PlanarSolid2d.Outer
- uid: g3.IParametricCurve2d
  commentId: T:g3.IParametricCurve2d
  parent: g3
  name: IParametricCurve2d
  nameWithType: IParametricCurve2d
  fullName: g3.IParametricCurve2d
- uid: g3.PlanarSolid2d.SetOuter*
  commentId: Overload:g3.PlanarSolid2d.SetOuter
  name: SetOuter
  nameWithType: PlanarSolid2d.SetOuter
  fullName: g3.PlanarSolid2d.SetOuter
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: g3.PlanarSolid2d.AddHole*
  commentId: Overload:g3.PlanarSolid2d.AddHole
  name: AddHole
  nameWithType: PlanarSolid2d.AddHole
  fullName: g3.PlanarSolid2d.AddHole
- uid: g3.PlanarSolid2d.Holes*
  commentId: Overload:g3.PlanarSolid2d.Holes
  name: Holes
  nameWithType: PlanarSolid2d.Holes
  fullName: g3.PlanarSolid2d.Holes
- uid: System.Collections.ObjectModel.ReadOnlyCollection{g3.IParametricCurve2d}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{g3.IParametricCurve2d}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<IParametricCurve2d>
  nameWithType: ReadOnlyCollection<IParametricCurve2d>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<g3.IParametricCurve2d>
  nameWithType.vb: ReadOnlyCollection(Of IParametricCurve2d)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of g3.IParametricCurve2d)
  name.vb: ReadOnlyCollection(Of IParametricCurve2d)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: g3.IParametricCurve2d
    name: IParametricCurve2d
    nameWithType: IParametricCurve2d
    fullName: g3.IParametricCurve2d
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: g3.IParametricCurve2d
    name: IParametricCurve2d
    nameWithType: IParametricCurve2d
    fullName: g3.IParametricCurve2d
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: g3.PlanarSolid2d.HasArcLength*
  commentId: Overload:g3.PlanarSolid2d.HasArcLength
  name: HasArcLength
  nameWithType: PlanarSolid2d.HasArcLength
  fullName: g3.PlanarSolid2d.HasArcLength
- uid: g3.PlanarSolid2d.Perimeter*
  commentId: Overload:g3.PlanarSolid2d.Perimeter
  name: Perimeter
  nameWithType: PlanarSolid2d.Perimeter
  fullName: g3.PlanarSolid2d.Perimeter
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: g3.PlanarSolid2d.Convert*
  commentId: Overload:g3.PlanarSolid2d.Convert
  name: Convert
  nameWithType: PlanarSolid2d.Convert
  fullName: g3.PlanarSolid2d.Convert
- uid: g3.GeneralPolygon2d
  commentId: T:g3.GeneralPolygon2d
  parent: g3
  name: GeneralPolygon2d
  nameWithType: GeneralPolygon2d
  fullName: g3.GeneralPolygon2d

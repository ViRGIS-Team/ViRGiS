### YamlMime:ManagedReference
items:
- uid: g3.Segment2d
  commentId: T:g3.Segment2d
  id: Segment2d
  parent: g3
  children:
  - g3.Segment2d.#ctor(g3.Vector2d,g3.Vector2d)
  - g3.Segment2d.#ctor(g3.Vector2d,g3.Vector2d,System.Double)
  - g3.Segment2d.ArcLength
  - g3.Segment2d.Center
  - g3.Segment2d.Clone
  - g3.Segment2d.Direction
  - g3.Segment2d.DistanceSquared(g3.Vector2d)
  - g3.Segment2d.DistanceSquared(g3.Vector2d,System.Double@)
  - g3.Segment2d.Endpoint(System.Int32)
  - g3.Segment2d.Extent
  - g3.Segment2d.FastDistanceSquared(g3.Vector2d@,g3.Vector2d@,g3.Vector2d@)
  - g3.Segment2d.HasArcLength
  - g3.Segment2d.Intersects(g3.Segment2d,System.Double,System.Double)
  - g3.Segment2d.Intersects(g3.Segment2d@,System.Double,System.Double)
  - g3.Segment2d.IsClosed
  - g3.Segment2d.IsTransformable
  - g3.Segment2d.Length
  - g3.Segment2d.NearestPoint(g3.Vector2d)
  - g3.Segment2d.P0
  - g3.Segment2d.P1
  - g3.Segment2d.ParamLength
  - g3.Segment2d.PointAt(System.Double)
  - g3.Segment2d.PointBetween(System.Double)
  - g3.Segment2d.Project(g3.Vector2d)
  - g3.Segment2d.Reverse
  - g3.Segment2d.SampleArcLength(System.Double)
  - g3.Segment2d.SampleT(System.Double)
  - g3.Segment2d.TangentT(System.Double)
  - g3.Segment2d.Transform(g3.ITransform2)
  - g3.Segment2d.WhichSide(g3.Vector2d,System.Double)
  - g3.Segment2d.WhichSide(g3.Vector2d@,g3.Vector2d@,g3.Vector2d@,System.Double)
  langs:
  - csharp
  - vb
  name: Segment2d
  nameWithType: Segment2d
  fullName: g3.Segment2d
  type: Struct
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Segment2d
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 7
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: 'public struct Segment2d : IParametricCurve2d'
    content.vb: >-
      Public Structure Segment2d
          Implements IParametricCurve2d
  implements:
  - g3.IParametricCurve2d
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: g3.Segment2d.Center
  commentId: F:g3.Segment2d.Center
  id: Center
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: Center
  nameWithType: Segment2d.Center
  fullName: g3.Segment2d.Center
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Center
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 10
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2d Center
    return:
      type: g3.Vector2d
    content.vb: Public Center As Vector2d
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Segment2d.Direction
  commentId: F:g3.Segment2d.Direction
  id: Direction
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: Direction
  nameWithType: Segment2d.Direction
  fullName: g3.Segment2d.Direction
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Direction
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 11
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2d Direction
    return:
      type: g3.Vector2d
    content.vb: Public Direction As Vector2d
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Segment2d.Extent
  commentId: F:g3.Segment2d.Extent
  id: Extent
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: Extent
  nameWithType: Segment2d.Extent
  fullName: g3.Segment2d.Extent
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Extent
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 12
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double Extent
    return:
      type: System.Double
    content.vb: Public Extent As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Segment2d.#ctor(g3.Vector2d,g3.Vector2d)
  commentId: M:g3.Segment2d.#ctor(g3.Vector2d,g3.Vector2d)
  id: '#ctor(g3.Vector2d,g3.Vector2d)'
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: Segment2d(Vector2d, Vector2d)
  nameWithType: Segment2d.Segment2d(Vector2d, Vector2d)
  fullName: g3.Segment2d.Segment2d(g3.Vector2d, g3.Vector2d)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 14
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Segment2d(Vector2d p0, Vector2d p1)
    parameters:
    - id: p0
      type: g3.Vector2d
    - id: p1
      type: g3.Vector2d
    content.vb: Public Sub New(p0 As Vector2d, p1 As Vector2d)
  overload: g3.Segment2d.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Segment2d.#ctor(g3.Vector2d,g3.Vector2d,System.Double)
  commentId: M:g3.Segment2d.#ctor(g3.Vector2d,g3.Vector2d,System.Double)
  id: '#ctor(g3.Vector2d,g3.Vector2d,System.Double)'
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: Segment2d(Vector2d, Vector2d, Double)
  nameWithType: Segment2d.Segment2d(Vector2d, Vector2d, Double)
  fullName: g3.Segment2d.Segment2d(g3.Vector2d, g3.Vector2d, System.Double)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 21
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Segment2d(Vector2d center, Vector2d direction, double extent)
    parameters:
    - id: center
      type: g3.Vector2d
    - id: direction
      type: g3.Vector2d
    - id: extent
      type: System.Double
    content.vb: Public Sub New(center As Vector2d, direction As Vector2d, extent As Double)
  overload: g3.Segment2d.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Segment2d.P0
  commentId: P:g3.Segment2d.P0
  id: P0
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: P0
  nameWithType: Segment2d.P0
  fullName: g3.Segment2d.P0
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: P0
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 26
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2d P0 { get; set; }
    parameters: []
    return:
      type: g3.Vector2d
    content.vb: Public Property P0 As Vector2d
  overload: g3.Segment2d.P0*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: g3.Segment2d.P1
  commentId: P:g3.Segment2d.P1
  id: P1
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: P1
  nameWithType: Segment2d.P1
  fullName: g3.Segment2d.P1
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: P1
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 31
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2d P1 { get; set; }
    parameters: []
    return:
      type: g3.Vector2d
    content.vb: Public Property P1 As Vector2d
  overload: g3.Segment2d.P1*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: g3.Segment2d.Length
  commentId: P:g3.Segment2d.Length
  id: Length
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: Segment2d.Length
  fullName: g3.Segment2d.Length
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Length
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 36
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double Length { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Length As Double
  overload: g3.Segment2d.Length*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Segment2d.Endpoint(System.Int32)
  commentId: M:g3.Segment2d.Endpoint(System.Int32)
  id: Endpoint(System.Int32)
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: Endpoint(Int32)
  nameWithType: Segment2d.Endpoint(Int32)
  fullName: g3.Segment2d.Endpoint(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Endpoint
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 40
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2d Endpoint(int i)
    parameters:
    - id: i
      type: System.Int32
    return:
      type: g3.Vector2d
    content.vb: Public Function Endpoint(i As Integer) As Vector2d
  overload: g3.Segment2d.Endpoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Segment2d.PointAt(System.Double)
  commentId: M:g3.Segment2d.PointAt(System.Double)
  id: PointAt(System.Double)
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: PointAt(Double)
  nameWithType: Segment2d.PointAt(Double)
  fullName: g3.Segment2d.PointAt(System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: PointAt
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 45
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2d PointAt(double d)
    parameters:
    - id: d
      type: System.Double
    return:
      type: g3.Vector2d
    content.vb: Public Function PointAt(d As Double) As Vector2d
  overload: g3.Segment2d.PointAt*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Segment2d.PointBetween(System.Double)
  commentId: M:g3.Segment2d.PointBetween(System.Double)
  id: PointBetween(System.Double)
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: PointBetween(Double)
  nameWithType: Segment2d.PointBetween(Double)
  fullName: g3.Segment2d.PointBetween(System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: PointBetween
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 50
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2d PointBetween(double t)
    parameters:
    - id: t
      type: System.Double
    return:
      type: g3.Vector2d
    content.vb: Public Function PointBetween(t As Double) As Vector2d
  overload: g3.Segment2d.PointBetween*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Segment2d.DistanceSquared(g3.Vector2d)
  commentId: M:g3.Segment2d.DistanceSquared(g3.Vector2d)
  id: DistanceSquared(g3.Vector2d)
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: DistanceSquared(Vector2d)
  nameWithType: Segment2d.DistanceSquared(Vector2d)
  fullName: g3.Segment2d.DistanceSquared(g3.Vector2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: DistanceSquared
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 54
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double DistanceSquared(Vector2d p)
    parameters:
    - id: p
      type: g3.Vector2d
    return:
      type: System.Double
    content.vb: Public Function DistanceSquared(p As Vector2d) As Double
  overload: g3.Segment2d.DistanceSquared*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Segment2d.DistanceSquared(g3.Vector2d,System.Double@)
  commentId: M:g3.Segment2d.DistanceSquared(g3.Vector2d,System.Double@)
  id: DistanceSquared(g3.Vector2d,System.Double@)
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: DistanceSquared(Vector2d, out Double)
  nameWithType: Segment2d.DistanceSquared(Vector2d, out Double)
  fullName: g3.Segment2d.DistanceSquared(g3.Vector2d, out System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: DistanceSquared
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 64
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double DistanceSquared(Vector2d p, out double t)
    parameters:
    - id: p
      type: g3.Vector2d
    - id: t
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Function DistanceSquared(p As Vector2d, ByRef t As Double) As Double
  overload: g3.Segment2d.DistanceSquared*
  nameWithType.vb: Segment2d.DistanceSquared(Vector2d, ByRef Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.Segment2d.DistanceSquared(g3.Vector2d, ByRef System.Double)
  name.vb: DistanceSquared(Vector2d, ByRef Double)
- uid: g3.Segment2d.NearestPoint(g3.Vector2d)
  commentId: M:g3.Segment2d.NearestPoint(g3.Vector2d)
  id: NearestPoint(g3.Vector2d)
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: NearestPoint(Vector2d)
  nameWithType: Segment2d.NearestPoint(Vector2d)
  fullName: g3.Segment2d.NearestPoint(g3.Vector2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: NearestPoint
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 78
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2d NearestPoint(Vector2d p)
    parameters:
    - id: p
      type: g3.Vector2d
    return:
      type: g3.Vector2d
    content.vb: Public Function NearestPoint(p As Vector2d) As Vector2d
  overload: g3.Segment2d.NearestPoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Segment2d.Project(g3.Vector2d)
  commentId: M:g3.Segment2d.Project(g3.Vector2d)
  id: Project(g3.Vector2d)
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: Project(Vector2d)
  nameWithType: Segment2d.Project(Vector2d)
  fullName: g3.Segment2d.Project(g3.Vector2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Project
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 88
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double Project(Vector2d p)
    parameters:
    - id: p
      type: g3.Vector2d
    return:
      type: System.Double
    content.vb: Public Function Project(p As Vector2d) As Double
  overload: g3.Segment2d.Project*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Segment2d.WhichSide(g3.Vector2d,System.Double)
  commentId: M:g3.Segment2d.WhichSide(g3.Vector2d,System.Double)
  id: WhichSide(g3.Vector2d,System.Double)
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: WhichSide(Vector2d, Double)
  nameWithType: Segment2d.WhichSide(Vector2d, Double)
  fullName: g3.Segment2d.WhichSide(g3.Vector2d, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: WhichSide
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 109
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nReturns:\n+1, on right of line\n-1, on left of line\n0, on the line\n"
  example: []
  syntax:
    content: public int WhichSide(Vector2d test, double tol = 0)
    parameters:
    - id: test
      type: g3.Vector2d
    - id: tol
      type: System.Double
    return:
      type: System.Int32
    content.vb: Public Function WhichSide(test As Vector2d, tol As Double = 0) As Integer
  overload: g3.Segment2d.WhichSide*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Segment2d.IsClosed
  commentId: P:g3.Segment2d.IsClosed
  id: IsClosed
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: IsClosed
  nameWithType: Segment2d.IsClosed
  fullName: g3.Segment2d.IsClosed
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IsClosed
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 126
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool IsClosed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsClosed As Boolean
  overload: g3.Segment2d.IsClosed*
  implements:
  - g3.IParametricCurve2d.IsClosed
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Segment2d.ParamLength
  commentId: P:g3.Segment2d.ParamLength
  id: ParamLength
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: ParamLength
  nameWithType: Segment2d.ParamLength
  fullName: g3.Segment2d.ParamLength
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ParamLength
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 128
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double ParamLength { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property ParamLength As Double
  overload: g3.Segment2d.ParamLength*
  implements:
  - g3.IParametricCurve2d.ParamLength
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Segment2d.SampleT(System.Double)
  commentId: M:g3.Segment2d.SampleT(System.Double)
  id: SampleT(System.Double)
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: SampleT(Double)
  nameWithType: Segment2d.SampleT(Double)
  fullName: g3.Segment2d.SampleT(System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: SampleT
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 131
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2d SampleT(double t)
    parameters:
    - id: t
      type: System.Double
    return:
      type: g3.Vector2d
    content.vb: Public Function SampleT(t As Double) As Vector2d
  overload: g3.Segment2d.SampleT*
  implements:
  - g3.IParametricCurve2d.SampleT(System.Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Segment2d.TangentT(System.Double)
  commentId: M:g3.Segment2d.TangentT(System.Double)
  id: TangentT(System.Double)
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: TangentT(Double)
  nameWithType: Segment2d.TangentT(Double)
  fullName: g3.Segment2d.TangentT(System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: TangentT
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 135
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2d TangentT(double t)
    parameters:
    - id: t
      type: System.Double
    return:
      type: g3.Vector2d
    content.vb: Public Function TangentT(t As Double) As Vector2d
  overload: g3.Segment2d.TangentT*
  implements:
  - g3.IParametricCurve2d.TangentT(System.Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Segment2d.HasArcLength
  commentId: P:g3.Segment2d.HasArcLength
  id: HasArcLength
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: HasArcLength
  nameWithType: Segment2d.HasArcLength
  fullName: g3.Segment2d.HasArcLength
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: HasArcLength
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 139
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool HasArcLength { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasArcLength As Boolean
  overload: g3.Segment2d.HasArcLength*
  implements:
  - g3.IParametricCurve2d.HasArcLength
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Segment2d.ArcLength
  commentId: P:g3.Segment2d.ArcLength
  id: ArcLength
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: ArcLength
  nameWithType: Segment2d.ArcLength
  fullName: g3.Segment2d.ArcLength
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ArcLength
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 140
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double ArcLength { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property ArcLength As Double
  overload: g3.Segment2d.ArcLength*
  implements:
  - g3.IParametricCurve2d.ArcLength
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Segment2d.SampleArcLength(System.Double)
  commentId: M:g3.Segment2d.SampleArcLength(System.Double)
  id: SampleArcLength(System.Double)
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: SampleArcLength(Double)
  nameWithType: Segment2d.SampleArcLength(Double)
  fullName: g3.Segment2d.SampleArcLength(System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: SampleArcLength
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 142
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2d SampleArcLength(double a)
    parameters:
    - id: a
      type: System.Double
    return:
      type: g3.Vector2d
    content.vb: Public Function SampleArcLength(a As Double) As Vector2d
  overload: g3.Segment2d.SampleArcLength*
  implements:
  - g3.IParametricCurve2d.SampleArcLength(System.Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Segment2d.Reverse
  commentId: M:g3.Segment2d.Reverse
  id: Reverse
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: Reverse()
  nameWithType: Segment2d.Reverse()
  fullName: g3.Segment2d.Reverse()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Reverse
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 146
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Reverse()
    content.vb: Public Sub Reverse
  overload: g3.Segment2d.Reverse*
  implements:
  - g3.IParametricCurve2d.Reverse
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Segment2d.Clone
  commentId: M:g3.Segment2d.Clone
  id: Clone
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: Segment2d.Clone()
  fullName: g3.Segment2d.Clone()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Clone
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 150
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IParametricCurve2d Clone()
    return:
      type: g3.IParametricCurve2d
    content.vb: Public Function Clone As IParametricCurve2d
  overload: g3.Segment2d.Clone*
  implements:
  - g3.IParametricCurve2d.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Segment2d.IsTransformable
  commentId: P:g3.Segment2d.IsTransformable
  id: IsTransformable
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: IsTransformable
  nameWithType: Segment2d.IsTransformable
  fullName: g3.Segment2d.IsTransformable
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IsTransformable
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 154
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool IsTransformable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTransformable As Boolean
  overload: g3.Segment2d.IsTransformable*
  implements:
  - g3.IParametricCurve2d.IsTransformable
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Segment2d.Transform(g3.ITransform2)
  commentId: M:g3.Segment2d.Transform(g3.ITransform2)
  id: Transform(g3.ITransform2)
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: Transform(ITransform2)
  nameWithType: Segment2d.Transform(ITransform2)
  fullName: g3.Segment2d.Transform(g3.ITransform2)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Transform
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 155
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Transform(ITransform2 xform)
    parameters:
    - id: xform
      type: g3.ITransform2
    content.vb: Public Sub Transform(xform As ITransform2)
  overload: g3.Segment2d.Transform*
  implements:
  - g3.IParametricCurve2d.Transform(g3.ITransform2)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Segment2d.FastDistanceSquared(g3.Vector2d@,g3.Vector2d@,g3.Vector2d@)
  commentId: M:g3.Segment2d.FastDistanceSquared(g3.Vector2d@,g3.Vector2d@,g3.Vector2d@)
  id: FastDistanceSquared(g3.Vector2d@,g3.Vector2d@,g3.Vector2d@)
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: FastDistanceSquared(ref Vector2d, ref Vector2d, ref Vector2d)
  nameWithType: Segment2d.FastDistanceSquared(ref Vector2d, ref Vector2d, ref Vector2d)
  fullName: g3.Segment2d.FastDistanceSquared(ref g3.Vector2d, ref g3.Vector2d, ref g3.Vector2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: FastDistanceSquared
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 167
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\ndistance from pt to segment (a,b), with no square roots\n"
  example: []
  syntax:
    content: public static double FastDistanceSquared(ref Vector2d a, ref Vector2d b, ref Vector2d pt)
    parameters:
    - id: a
      type: g3.Vector2d
    - id: b
      type: g3.Vector2d
    - id: pt
      type: g3.Vector2d
    return:
      type: System.Double
    content.vb: Public Shared Function FastDistanceSquared(ByRef a As Vector2d, ByRef b As Vector2d, ByRef pt As Vector2d) As Double
  overload: g3.Segment2d.FastDistanceSquared*
  nameWithType.vb: Segment2d.FastDistanceSquared(ByRef Vector2d, ByRef Vector2d, ByRef Vector2d)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.Segment2d.FastDistanceSquared(ByRef g3.Vector2d, ByRef g3.Vector2d, ByRef g3.Vector2d)
  name.vb: FastDistanceSquared(ByRef Vector2d, ByRef Vector2d, ByRef Vector2d)
- uid: g3.Segment2d.WhichSide(g3.Vector2d@,g3.Vector2d@,g3.Vector2d@,System.Double)
  commentId: M:g3.Segment2d.WhichSide(g3.Vector2d@,g3.Vector2d@,g3.Vector2d@,System.Double)
  id: WhichSide(g3.Vector2d@,g3.Vector2d@,g3.Vector2d@,System.Double)
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: WhichSide(ref Vector2d, ref Vector2d, ref Vector2d, Double)
  nameWithType: Segment2d.WhichSide(ref Vector2d, ref Vector2d, ref Vector2d, Double)
  fullName: g3.Segment2d.WhichSide(ref g3.Vector2d, ref g3.Vector2d, ref g3.Vector2d, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: WhichSide
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 195
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nReturns:\n+1, on right of line\n-1, on left of line\n0, on the line\n"
  example: []
  syntax:
    content: public static int WhichSide(ref Vector2d a, ref Vector2d b, ref Vector2d test, double tol = 0)
    parameters:
    - id: a
      type: g3.Vector2d
    - id: b
      type: g3.Vector2d
    - id: test
      type: g3.Vector2d
    - id: tol
      type: System.Double
    return:
      type: System.Int32
    content.vb: Public Shared Function WhichSide(ByRef a As Vector2d, ByRef b As Vector2d, ByRef test As Vector2d, tol As Double = 0) As Integer
  overload: g3.Segment2d.WhichSide*
  nameWithType.vb: Segment2d.WhichSide(ByRef Vector2d, ByRef Vector2d, ByRef Vector2d, Double)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.Segment2d.WhichSide(ByRef g3.Vector2d, ByRef g3.Vector2d, ByRef g3.Vector2d, System.Double)
  name.vb: WhichSide(ByRef Vector2d, ByRef Vector2d, ByRef Vector2d, Double)
- uid: g3.Segment2d.Intersects(g3.Segment2d@,System.Double,System.Double)
  commentId: M:g3.Segment2d.Intersects(g3.Segment2d@,System.Double,System.Double)
  id: Intersects(g3.Segment2d@,System.Double,System.Double)
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: Intersects(ref Segment2d, Double, Double)
  nameWithType: Segment2d.Intersects(ref Segment2d, Double, Double)
  fullName: g3.Segment2d.Intersects(ref g3.Segment2d, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Intersects
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 212
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nTest if segments intersect. Returns true for parallel-line overlaps.\nReturns same result as IntrSegment2Segment2.\n"
  example: []
  syntax:
    content: public bool Intersects(ref Segment2d seg2, double dotThresh = 4.94065645841247E-324, double intervalThresh = 0)
    parameters:
    - id: seg2
      type: g3.Segment2d
    - id: dotThresh
      type: System.Double
    - id: intervalThresh
      type: System.Double
    return:
      type: System.Boolean
    content.vb: Public Function Intersects(ByRef seg2 As Segment2d, dotThresh As Double = 4.94065645841247E-324, intervalThresh As Double = 0) As Boolean
  overload: g3.Segment2d.Intersects*
  nameWithType.vb: Segment2d.Intersects(ByRef Segment2d, Double, Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.Segment2d.Intersects(ByRef g3.Segment2d, System.Double, System.Double)
  name.vb: Intersects(ByRef Segment2d, Double, Double)
- uid: g3.Segment2d.Intersects(g3.Segment2d,System.Double,System.Double)
  commentId: M:g3.Segment2d.Intersects(g3.Segment2d,System.Double,System.Double)
  id: Intersects(g3.Segment2d,System.Double,System.Double)
  parent: g3.Segment2d
  langs:
  - csharp
  - vb
  name: Intersects(Segment2d, Double, Double)
  nameWithType: Segment2d.Intersects(Segment2d, Double, Double)
  fullName: g3.Segment2d.Intersects(g3.Segment2d, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Intersects
    path: ../Assets/geometry3Sharp/math/Segment2.cs
    startLine: 246
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool Intersects(Segment2d seg2, double dotThresh = 4.94065645841247E-324, double intervalThresh = 0)
    parameters:
    - id: seg2
      type: g3.Segment2d
    - id: dotThresh
      type: System.Double
    - id: intervalThresh
      type: System.Double
    return:
      type: System.Boolean
    content.vb: Public Function Intersects(seg2 As Segment2d, dotThresh As Double = 4.94065645841247E-324, intervalThresh As Double = 0) As Boolean
  overload: g3.Segment2d.Intersects*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: g3.IParametricCurve2d
  commentId: T:g3.IParametricCurve2d
  parent: g3
  name: IParametricCurve2d
  nameWithType: IParametricCurve2d
  fullName: g3.IParametricCurve2d
- uid: g3.Vector2d
  commentId: T:g3.Vector2d
  parent: g3
  name: Vector2d
  nameWithType: Vector2d
  fullName: g3.Vector2d
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: g3.Segment2d.#ctor*
  commentId: Overload:g3.Segment2d.#ctor
  name: Segment2d
  nameWithType: Segment2d.Segment2d
  fullName: g3.Segment2d.Segment2d
- uid: g3.Segment2d.P0*
  commentId: Overload:g3.Segment2d.P0
  name: P0
  nameWithType: Segment2d.P0
  fullName: g3.Segment2d.P0
- uid: g3.Segment2d.P1*
  commentId: Overload:g3.Segment2d.P1
  name: P1
  nameWithType: Segment2d.P1
  fullName: g3.Segment2d.P1
- uid: g3.Segment2d.Length*
  commentId: Overload:g3.Segment2d.Length
  name: Length
  nameWithType: Segment2d.Length
  fullName: g3.Segment2d.Length
- uid: g3.Segment2d.Endpoint*
  commentId: Overload:g3.Segment2d.Endpoint
  name: Endpoint
  nameWithType: Segment2d.Endpoint
  fullName: g3.Segment2d.Endpoint
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: g3.Segment2d.PointAt*
  commentId: Overload:g3.Segment2d.PointAt
  name: PointAt
  nameWithType: Segment2d.PointAt
  fullName: g3.Segment2d.PointAt
- uid: g3.Segment2d.PointBetween*
  commentId: Overload:g3.Segment2d.PointBetween
  name: PointBetween
  nameWithType: Segment2d.PointBetween
  fullName: g3.Segment2d.PointBetween
- uid: g3.Segment2d.DistanceSquared*
  commentId: Overload:g3.Segment2d.DistanceSquared
  name: DistanceSquared
  nameWithType: Segment2d.DistanceSquared
  fullName: g3.Segment2d.DistanceSquared
- uid: g3.Segment2d.NearestPoint*
  commentId: Overload:g3.Segment2d.NearestPoint
  name: NearestPoint
  nameWithType: Segment2d.NearestPoint
  fullName: g3.Segment2d.NearestPoint
- uid: g3.Segment2d.Project*
  commentId: Overload:g3.Segment2d.Project
  name: Project
  nameWithType: Segment2d.Project
  fullName: g3.Segment2d.Project
- uid: g3.Segment2d.WhichSide*
  commentId: Overload:g3.Segment2d.WhichSide
  name: WhichSide
  nameWithType: Segment2d.WhichSide
  fullName: g3.Segment2d.WhichSide
- uid: g3.Segment2d.IsClosed*
  commentId: Overload:g3.Segment2d.IsClosed
  name: IsClosed
  nameWithType: Segment2d.IsClosed
  fullName: g3.Segment2d.IsClosed
- uid: g3.IParametricCurve2d.IsClosed
  commentId: P:g3.IParametricCurve2d.IsClosed
  parent: g3.IParametricCurve2d
  name: IsClosed
  nameWithType: IParametricCurve2d.IsClosed
  fullName: g3.IParametricCurve2d.IsClosed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: g3.Segment2d.ParamLength*
  commentId: Overload:g3.Segment2d.ParamLength
  name: ParamLength
  nameWithType: Segment2d.ParamLength
  fullName: g3.Segment2d.ParamLength
- uid: g3.IParametricCurve2d.ParamLength
  commentId: P:g3.IParametricCurve2d.ParamLength
  parent: g3.IParametricCurve2d
  name: ParamLength
  nameWithType: IParametricCurve2d.ParamLength
  fullName: g3.IParametricCurve2d.ParamLength
- uid: g3.Segment2d.SampleT*
  commentId: Overload:g3.Segment2d.SampleT
  name: SampleT
  nameWithType: Segment2d.SampleT
  fullName: g3.Segment2d.SampleT
- uid: g3.IParametricCurve2d.SampleT(System.Double)
  commentId: M:g3.IParametricCurve2d.SampleT(System.Double)
  parent: g3.IParametricCurve2d
  isExternal: true
  name: SampleT(Double)
  nameWithType: IParametricCurve2d.SampleT(Double)
  fullName: g3.IParametricCurve2d.SampleT(System.Double)
  spec.csharp:
  - uid: g3.IParametricCurve2d.SampleT(System.Double)
    name: SampleT
    nameWithType: IParametricCurve2d.SampleT
    fullName: g3.IParametricCurve2d.SampleT
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: g3.IParametricCurve2d.SampleT(System.Double)
    name: SampleT
    nameWithType: IParametricCurve2d.SampleT
    fullName: g3.IParametricCurve2d.SampleT
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.Segment2d.TangentT*
  commentId: Overload:g3.Segment2d.TangentT
  name: TangentT
  nameWithType: Segment2d.TangentT
  fullName: g3.Segment2d.TangentT
- uid: g3.IParametricCurve2d.TangentT(System.Double)
  commentId: M:g3.IParametricCurve2d.TangentT(System.Double)
  parent: g3.IParametricCurve2d
  isExternal: true
  name: TangentT(Double)
  nameWithType: IParametricCurve2d.TangentT(Double)
  fullName: g3.IParametricCurve2d.TangentT(System.Double)
  spec.csharp:
  - uid: g3.IParametricCurve2d.TangentT(System.Double)
    name: TangentT
    nameWithType: IParametricCurve2d.TangentT
    fullName: g3.IParametricCurve2d.TangentT
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: g3.IParametricCurve2d.TangentT(System.Double)
    name: TangentT
    nameWithType: IParametricCurve2d.TangentT
    fullName: g3.IParametricCurve2d.TangentT
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.Segment2d.HasArcLength*
  commentId: Overload:g3.Segment2d.HasArcLength
  name: HasArcLength
  nameWithType: Segment2d.HasArcLength
  fullName: g3.Segment2d.HasArcLength
- uid: g3.IParametricCurve2d.HasArcLength
  commentId: P:g3.IParametricCurve2d.HasArcLength
  parent: g3.IParametricCurve2d
  name: HasArcLength
  nameWithType: IParametricCurve2d.HasArcLength
  fullName: g3.IParametricCurve2d.HasArcLength
- uid: g3.Segment2d.ArcLength*
  commentId: Overload:g3.Segment2d.ArcLength
  name: ArcLength
  nameWithType: Segment2d.ArcLength
  fullName: g3.Segment2d.ArcLength
- uid: g3.IParametricCurve2d.ArcLength
  commentId: P:g3.IParametricCurve2d.ArcLength
  parent: g3.IParametricCurve2d
  name: ArcLength
  nameWithType: IParametricCurve2d.ArcLength
  fullName: g3.IParametricCurve2d.ArcLength
- uid: g3.Segment2d.SampleArcLength*
  commentId: Overload:g3.Segment2d.SampleArcLength
  name: SampleArcLength
  nameWithType: Segment2d.SampleArcLength
  fullName: g3.Segment2d.SampleArcLength
- uid: g3.IParametricCurve2d.SampleArcLength(System.Double)
  commentId: M:g3.IParametricCurve2d.SampleArcLength(System.Double)
  parent: g3.IParametricCurve2d
  isExternal: true
  name: SampleArcLength(Double)
  nameWithType: IParametricCurve2d.SampleArcLength(Double)
  fullName: g3.IParametricCurve2d.SampleArcLength(System.Double)
  spec.csharp:
  - uid: g3.IParametricCurve2d.SampleArcLength(System.Double)
    name: SampleArcLength
    nameWithType: IParametricCurve2d.SampleArcLength
    fullName: g3.IParametricCurve2d.SampleArcLength
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: g3.IParametricCurve2d.SampleArcLength(System.Double)
    name: SampleArcLength
    nameWithType: IParametricCurve2d.SampleArcLength
    fullName: g3.IParametricCurve2d.SampleArcLength
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.Segment2d.Reverse*
  commentId: Overload:g3.Segment2d.Reverse
  name: Reverse
  nameWithType: Segment2d.Reverse
  fullName: g3.Segment2d.Reverse
- uid: g3.IParametricCurve2d.Reverse
  commentId: M:g3.IParametricCurve2d.Reverse
  parent: g3.IParametricCurve2d
  name: Reverse()
  nameWithType: IParametricCurve2d.Reverse()
  fullName: g3.IParametricCurve2d.Reverse()
  spec.csharp:
  - uid: g3.IParametricCurve2d.Reverse
    name: Reverse
    nameWithType: IParametricCurve2d.Reverse
    fullName: g3.IParametricCurve2d.Reverse
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: g3.IParametricCurve2d.Reverse
    name: Reverse
    nameWithType: IParametricCurve2d.Reverse
    fullName: g3.IParametricCurve2d.Reverse
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.Segment2d.Clone*
  commentId: Overload:g3.Segment2d.Clone
  name: Clone
  nameWithType: Segment2d.Clone
  fullName: g3.Segment2d.Clone
- uid: g3.IParametricCurve2d.Clone
  commentId: M:g3.IParametricCurve2d.Clone
  parent: g3.IParametricCurve2d
  name: Clone()
  nameWithType: IParametricCurve2d.Clone()
  fullName: g3.IParametricCurve2d.Clone()
  spec.csharp:
  - uid: g3.IParametricCurve2d.Clone
    name: Clone
    nameWithType: IParametricCurve2d.Clone
    fullName: g3.IParametricCurve2d.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: g3.IParametricCurve2d.Clone
    name: Clone
    nameWithType: IParametricCurve2d.Clone
    fullName: g3.IParametricCurve2d.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.Segment2d.IsTransformable*
  commentId: Overload:g3.Segment2d.IsTransformable
  name: IsTransformable
  nameWithType: Segment2d.IsTransformable
  fullName: g3.Segment2d.IsTransformable
- uid: g3.IParametricCurve2d.IsTransformable
  commentId: P:g3.IParametricCurve2d.IsTransformable
  parent: g3.IParametricCurve2d
  name: IsTransformable
  nameWithType: IParametricCurve2d.IsTransformable
  fullName: g3.IParametricCurve2d.IsTransformable
- uid: g3.Segment2d.Transform*
  commentId: Overload:g3.Segment2d.Transform
  name: Transform
  nameWithType: Segment2d.Transform
  fullName: g3.Segment2d.Transform
- uid: g3.IParametricCurve2d.Transform(g3.ITransform2)
  commentId: M:g3.IParametricCurve2d.Transform(g3.ITransform2)
  parent: g3.IParametricCurve2d
  name: Transform(ITransform2)
  nameWithType: IParametricCurve2d.Transform(ITransform2)
  fullName: g3.IParametricCurve2d.Transform(g3.ITransform2)
  spec.csharp:
  - uid: g3.IParametricCurve2d.Transform(g3.ITransform2)
    name: Transform
    nameWithType: IParametricCurve2d.Transform
    fullName: g3.IParametricCurve2d.Transform
  - name: (
    nameWithType: (
    fullName: (
  - uid: g3.ITransform2
    name: ITransform2
    nameWithType: ITransform2
    fullName: g3.ITransform2
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: g3.IParametricCurve2d.Transform(g3.ITransform2)
    name: Transform
    nameWithType: IParametricCurve2d.Transform
    fullName: g3.IParametricCurve2d.Transform
  - name: (
    nameWithType: (
    fullName: (
  - uid: g3.ITransform2
    name: ITransform2
    nameWithType: ITransform2
    fullName: g3.ITransform2
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.ITransform2
  commentId: T:g3.ITransform2
  parent: g3
  name: ITransform2
  nameWithType: ITransform2
  fullName: g3.ITransform2
- uid: g3.Segment2d.FastDistanceSquared*
  commentId: Overload:g3.Segment2d.FastDistanceSquared
  name: FastDistanceSquared
  nameWithType: Segment2d.FastDistanceSquared
  fullName: g3.Segment2d.FastDistanceSquared
- uid: g3.Segment2d.Intersects*
  commentId: Overload:g3.Segment2d.Intersects
  name: Intersects
  nameWithType: Segment2d.Intersects
  fullName: g3.Segment2d.Intersects
- uid: g3.Segment2d
  commentId: T:g3.Segment2d
  parent: g3
  name: Segment2d
  nameWithType: Segment2d
  fullName: g3.Segment2d

### YamlMime:ManagedReference
items:
- uid: g3.BiGrid3`1
  commentId: T:g3.BiGrid3`1
  id: BiGrid3`1
  parent: g3
  children:
  - g3.BiGrid3`1.#ctor(`0)
  - g3.BiGrid3`1.AllocatedBlocks
  - g3.BiGrid3`1.BlockGrid
  - g3.BiGrid3`1.BlockSize
  - g3.BiGrid3`1.Indexer
  - g3.BiGrid3`1.Update(g3.Index3i,System.Action{`0,g3.Vector3i})
  langs:
  - csharp
  - vb
  name: BiGrid3<BlockType>
  nameWithType: BiGrid3<BlockType>
  fullName: g3.BiGrid3<BlockType>
  type: Class
  source:
    remote:
      path: Assets/geometry3Sharp/spatial/BiGrid3.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: BiGrid3
    path: ../Assets/geometry3Sharp/spatial/BiGrid3.cs
    startLine: 13
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nBiGrid3 is a two-level multiresolution grid data structure. You provide\nexemplar object that implements suitable interfaces, and the class\nautomatically generates necessary data structures. \nFunctions to act on parent/child grids are in-progress...\n"
  example: []
  syntax:
    content: >-
      public class BiGrid3<BlockType>
          where BlockType : class, IGridElement3, IFixedGrid3
    typeParameters:
    - id: BlockType
    content.vb: Public Class BiGrid3(Of BlockType As {Class, IGridElement3, IFixedGrid3})
  inheritance:
  - System.Object
  nameWithType.vb: BiGrid3(Of BlockType)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: g3.BiGrid3(Of BlockType)
  name.vb: BiGrid3(Of BlockType)
- uid: g3.BiGrid3`1.BlockSize
  commentId: P:g3.BiGrid3`1.BlockSize
  id: BlockSize
  parent: g3.BiGrid3`1
  langs:
  - csharp
  - vb
  name: BlockSize
  nameWithType: BiGrid3<BlockType>.BlockSize
  fullName: g3.BiGrid3<BlockType>.BlockSize
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/spatial/BiGrid3.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: BlockSize
    path: ../Assets/geometry3Sharp/spatial/BiGrid3.cs
    startLine: 18
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector3i BlockSize { get; }
    parameters: []
    return:
      type: g3.Vector3i
    content.vb: Public ReadOnly Property BlockSize As Vector3i
  overload: g3.BiGrid3`1.BlockSize*
  nameWithType.vb: BiGrid3(Of BlockType).BlockSize
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: g3.BiGrid3(Of BlockType).BlockSize
- uid: g3.BiGrid3`1.Indexer
  commentId: P:g3.BiGrid3`1.Indexer
  id: Indexer
  parent: g3.BiGrid3`1
  langs:
  - csharp
  - vb
  name: Indexer
  nameWithType: BiGrid3<BlockType>.Indexer
  fullName: g3.BiGrid3<BlockType>.Indexer
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/spatial/BiGrid3.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Indexer
    path: ../Assets/geometry3Sharp/spatial/BiGrid3.cs
    startLine: 21
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public MultigridIndexer3 Indexer { get; }
    parameters: []
    return:
      type: g3.MultigridIndexer3
    content.vb: Public ReadOnly Property Indexer As MultigridIndexer3
  overload: g3.BiGrid3`1.Indexer*
  nameWithType.vb: BiGrid3(Of BlockType).Indexer
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: g3.BiGrid3(Of BlockType).Indexer
- uid: g3.BiGrid3`1.BlockGrid
  commentId: P:g3.BiGrid3`1.BlockGrid
  id: BlockGrid
  parent: g3.BiGrid3`1
  langs:
  - csharp
  - vb
  name: BlockGrid
  nameWithType: BiGrid3<BlockType>.BlockGrid
  fullName: g3.BiGrid3<BlockType>.BlockGrid
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/spatial/BiGrid3.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: BlockGrid
    path: ../Assets/geometry3Sharp/spatial/BiGrid3.cs
    startLine: 27
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public DSparseGrid3<BlockType> BlockGrid { get; }
    parameters: []
    return:
      type: g3.DSparseGrid3{{BlockType}}
    content.vb: Public ReadOnly Property BlockGrid As DSparseGrid3(Of BlockType)
  overload: g3.BiGrid3`1.BlockGrid*
  nameWithType.vb: BiGrid3(Of BlockType).BlockGrid
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: g3.BiGrid3(Of BlockType).BlockGrid
- uid: g3.BiGrid3`1.#ctor(`0)
  commentId: M:g3.BiGrid3`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: g3.BiGrid3`1
  langs:
  - csharp
  - vb
  name: BiGrid3(BlockType)
  nameWithType: BiGrid3<BlockType>.BiGrid3(BlockType)
  fullName: g3.BiGrid3<BlockType>.BiGrid3(BlockType)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/spatial/BiGrid3.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/spatial/BiGrid3.cs
    startLine: 32
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public BiGrid3(BlockType exemplar)
    parameters:
    - id: exemplar
      type: '{BlockType}'
    content.vb: Public Sub New(exemplar As BlockType)
  overload: g3.BiGrid3`1.#ctor*
  nameWithType.vb: BiGrid3(Of BlockType).BiGrid3(BlockType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.BiGrid3(Of BlockType).BiGrid3(BlockType)
- uid: g3.BiGrid3`1.Update(g3.Index3i,System.Action{`0,g3.Vector3i})
  commentId: M:g3.BiGrid3`1.Update(g3.Index3i,System.Action{`0,g3.Vector3i})
  id: Update(g3.Index3i,System.Action{`0,g3.Vector3i})
  parent: g3.BiGrid3`1
  langs:
  - csharp
  - vb
  name: Update(Index3i, Action<BlockType, Vector3i>)
  nameWithType: BiGrid3<BlockType>.Update(Index3i, Action<BlockType, Vector3i>)
  fullName: g3.BiGrid3<BlockType>.Update(g3.Index3i, System.Action<BlockType, g3.Vector3i>)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/spatial/BiGrid3.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Update
    path: ../Assets/geometry3Sharp/spatial/BiGrid3.cs
    startLine: 43
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nmap index into correct block and let client update that block at the correct local index\n"
  example: []
  syntax:
    content: public void Update(Index3i index, Action<BlockType, Vector3i> UpdateF)
    parameters:
    - id: index
      type: g3.Index3i
    - id: UpdateF
      type: System.Action{{BlockType},g3.Vector3i}
    content.vb: Public Sub Update(index As Index3i, UpdateF As Action(Of BlockType, Vector3i))
  overload: g3.BiGrid3`1.Update*
  nameWithType.vb: BiGrid3(Of BlockType).Update(Index3i, Action(Of BlockType, Vector3i))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.BiGrid3(Of BlockType).Update(g3.Index3i, System.Action(Of BlockType, g3.Vector3i))
  name.vb: Update(Index3i, Action(Of BlockType, Vector3i))
- uid: g3.BiGrid3`1.AllocatedBlocks
  commentId: M:g3.BiGrid3`1.AllocatedBlocks
  id: AllocatedBlocks
  parent: g3.BiGrid3`1
  langs:
  - csharp
  - vb
  name: AllocatedBlocks()
  nameWithType: BiGrid3<BlockType>.AllocatedBlocks()
  fullName: g3.BiGrid3<BlockType>.AllocatedBlocks()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/spatial/BiGrid3.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AllocatedBlocks
    path: ../Assets/geometry3Sharp/spatial/BiGrid3.cs
    startLine: 52
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IEnumerable<KeyValuePair<Vector3i, BlockType>> AllocatedBlocks()
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{g3.Vector3i,{BlockType}}}
    content.vb: Public Function AllocatedBlocks As IEnumerable(Of KeyValuePair(Of Vector3i, BlockType))
  overload: g3.BiGrid3`1.AllocatedBlocks*
  nameWithType.vb: BiGrid3(Of BlockType).AllocatedBlocks()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.BiGrid3(Of BlockType).AllocatedBlocks()
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: g3.BiGrid3`1.BlockSize*
  commentId: Overload:g3.BiGrid3`1.BlockSize
  name: BlockSize
  nameWithType: BiGrid3<BlockType>.BlockSize
  fullName: g3.BiGrid3<BlockType>.BlockSize
  nameWithType.vb: BiGrid3(Of BlockType).BlockSize
  fullName.vb: g3.BiGrid3(Of BlockType).BlockSize
- uid: g3.Vector3i
  commentId: T:g3.Vector3i
  parent: g3
  name: Vector3i
  nameWithType: Vector3i
  fullName: g3.Vector3i
- uid: g3.BiGrid3`1.Indexer*
  commentId: Overload:g3.BiGrid3`1.Indexer
  name: Indexer
  nameWithType: BiGrid3<BlockType>.Indexer
  fullName: g3.BiGrid3<BlockType>.Indexer
  nameWithType.vb: BiGrid3(Of BlockType).Indexer
  fullName.vb: g3.BiGrid3(Of BlockType).Indexer
- uid: g3.MultigridIndexer3
  commentId: T:g3.MultigridIndexer3
  parent: g3
  name: MultigridIndexer3
  nameWithType: MultigridIndexer3
  fullName: g3.MultigridIndexer3
- uid: g3.BiGrid3`1.BlockGrid*
  commentId: Overload:g3.BiGrid3`1.BlockGrid
  name: BlockGrid
  nameWithType: BiGrid3<BlockType>.BlockGrid
  fullName: g3.BiGrid3<BlockType>.BlockGrid
  nameWithType.vb: BiGrid3(Of BlockType).BlockGrid
  fullName.vb: g3.BiGrid3(Of BlockType).BlockGrid
- uid: g3.DSparseGrid3{{BlockType}}
  commentId: T:g3.DSparseGrid3{`0}
  parent: g3
  definition: g3.DSparseGrid3`1
  name: DSparseGrid3<BlockType>
  nameWithType: DSparseGrid3<BlockType>
  fullName: g3.DSparseGrid3<BlockType>
  nameWithType.vb: DSparseGrid3(Of BlockType)
  fullName.vb: g3.DSparseGrid3(Of BlockType)
  name.vb: DSparseGrid3(Of BlockType)
  spec.csharp:
  - uid: g3.DSparseGrid3`1
    name: DSparseGrid3
    nameWithType: DSparseGrid3
    fullName: g3.DSparseGrid3
  - name: <
    nameWithType: <
    fullName: <
  - name: BlockType
    nameWithType: BlockType
    fullName: BlockType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: g3.DSparseGrid3`1
    name: DSparseGrid3
    nameWithType: DSparseGrid3
    fullName: g3.DSparseGrid3
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: BlockType
    nameWithType: BlockType
    fullName: BlockType
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.DSparseGrid3`1
  commentId: T:g3.DSparseGrid3`1
  name: DSparseGrid3<ElemType>
  nameWithType: DSparseGrid3<ElemType>
  fullName: g3.DSparseGrid3<ElemType>
  nameWithType.vb: DSparseGrid3(Of ElemType)
  fullName.vb: g3.DSparseGrid3(Of ElemType)
  name.vb: DSparseGrid3(Of ElemType)
  spec.csharp:
  - uid: g3.DSparseGrid3`1
    name: DSparseGrid3
    nameWithType: DSparseGrid3
    fullName: g3.DSparseGrid3
  - name: <
    nameWithType: <
    fullName: <
  - name: ElemType
    nameWithType: ElemType
    fullName: ElemType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: g3.DSparseGrid3`1
    name: DSparseGrid3
    nameWithType: DSparseGrid3
    fullName: g3.DSparseGrid3
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ElemType
    nameWithType: ElemType
    fullName: ElemType
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.BiGrid3`1.#ctor*
  commentId: Overload:g3.BiGrid3`1.#ctor
  name: BiGrid3
  nameWithType: BiGrid3<BlockType>.BiGrid3
  fullName: g3.BiGrid3<BlockType>.BiGrid3
  nameWithType.vb: BiGrid3(Of BlockType).BiGrid3
  fullName.vb: g3.BiGrid3(Of BlockType).BiGrid3
- uid: '{BlockType}'
  commentId: '!:BlockType'
  definition: BlockType
  name: BlockType
  nameWithType: BlockType
  fullName: BlockType
- uid: BlockType
  commentId: '!:BlockType'
  name: BlockType
  nameWithType: BlockType
  fullName: BlockType
- uid: g3.BiGrid3`1.Update*
  commentId: Overload:g3.BiGrid3`1.Update
  name: Update
  nameWithType: BiGrid3<BlockType>.Update
  fullName: g3.BiGrid3<BlockType>.Update
  nameWithType.vb: BiGrid3(Of BlockType).Update
  fullName.vb: g3.BiGrid3(Of BlockType).Update
- uid: g3.Index3i
  commentId: T:g3.Index3i
  parent: g3
  name: Index3i
  nameWithType: Index3i
  fullName: g3.Index3i
- uid: System.Action{{BlockType},g3.Vector3i}
  commentId: T:System.Action{`0,g3.Vector3i}
  parent: System
  definition: System.Action`2
  name: Action<BlockType, Vector3i>
  nameWithType: Action<BlockType, Vector3i>
  fullName: System.Action<BlockType, g3.Vector3i>
  nameWithType.vb: Action(Of BlockType, Vector3i)
  fullName.vb: System.Action(Of BlockType, g3.Vector3i)
  name.vb: Action(Of BlockType, Vector3i)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: BlockType
    nameWithType: BlockType
    fullName: BlockType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: g3.Vector3i
    name: Vector3i
    nameWithType: Vector3i
    fullName: g3.Vector3i
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: BlockType
    nameWithType: BlockType
    fullName: BlockType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: g3.Vector3i
    name: Vector3i
    nameWithType: Vector3i
    fullName: g3.Vector3i
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.BiGrid3`1.AllocatedBlocks*
  commentId: Overload:g3.BiGrid3`1.AllocatedBlocks
  name: AllocatedBlocks
  nameWithType: BiGrid3<BlockType>.AllocatedBlocks
  fullName: g3.BiGrid3<BlockType>.AllocatedBlocks
  nameWithType.vb: BiGrid3(Of BlockType).AllocatedBlocks
  fullName.vb: g3.BiGrid3(Of BlockType).AllocatedBlocks
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{g3.Vector3i,{BlockType}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{g3.Vector3i,`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<Vector3i, BlockType>>
  nameWithType: IEnumerable<KeyValuePair<Vector3i, BlockType>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<g3.Vector3i, BlockType>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Vector3i, BlockType))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of g3.Vector3i, BlockType))
  name.vb: IEnumerable(Of KeyValuePair(Of Vector3i, BlockType))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: g3.Vector3i
    name: Vector3i
    nameWithType: Vector3i
    fullName: g3.Vector3i
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: BlockType
    nameWithType: BlockType
    fullName: BlockType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: g3.Vector3i
    name: Vector3i
    nameWithType: Vector3i
    fullName: g3.Vector3i
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: BlockType
    nameWithType: BlockType
    fullName: BlockType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic

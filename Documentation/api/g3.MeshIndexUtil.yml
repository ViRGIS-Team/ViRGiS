### YamlMime:ManagedReference
items:
- uid: g3.MeshIndexUtil
  commentId: T:g3.MeshIndexUtil
  id: MeshIndexUtil
  parent: g3
  children:
  - g3.MeshIndexUtil.MapEdgesViaVertexMap(g3.IIndexMap,g3.DMesh3,g3.DMesh3,System.Collections.Generic.List{System.Int32})
  - g3.MeshIndexUtil.MapLoopViaVertexMap(g3.IIndexMap,g3.DMesh3,g3.DMesh3,g3.EdgeLoop)
  langs:
  - csharp
  - vb
  name: MeshIndexUtil
  nameWithType: MeshIndexUtil
  fullName: g3.MeshIndexUtil
  type: Class
  source:
    remote:
      path: Assets/geometry3Sharp/mesh/MeshIndexUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: MeshIndexUtil
    path: ../Assets/geometry3Sharp/mesh/MeshIndexUtil.cs
    startLine: 9
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nUtility functions for manipulating sets/lists of mesh indices\n"
  example: []
  syntax:
    content: public static class MeshIndexUtil
    content.vb: Public Module MeshIndexUtil
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: g3.MeshIndexUtil.MapEdgesViaVertexMap(g3.IIndexMap,g3.DMesh3,g3.DMesh3,System.Collections.Generic.List{System.Int32})
  commentId: M:g3.MeshIndexUtil.MapEdgesViaVertexMap(g3.IIndexMap,g3.DMesh3,g3.DMesh3,System.Collections.Generic.List{System.Int32})
  id: MapEdgesViaVertexMap(g3.IIndexMap,g3.DMesh3,g3.DMesh3,System.Collections.Generic.List{System.Int32})
  parent: g3.MeshIndexUtil
  langs:
  - csharp
  - vb
  name: MapEdgesViaVertexMap(IIndexMap, DMesh3, DMesh3, List<Int32>)
  nameWithType: MeshIndexUtil.MapEdgesViaVertexMap(IIndexMap, DMesh3, DMesh3, List<Int32>)
  fullName: g3.MeshIndexUtil.MapEdgesViaVertexMap(g3.IIndexMap, g3.DMesh3, g3.DMesh3, System.Collections.Generic.List<System.Int32>)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/mesh/MeshIndexUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: MapEdgesViaVertexMap
    path: ../Assets/geometry3Sharp/mesh/MeshIndexUtil.cs
    startLine: 15
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\ngiven list of edges of MeshA, and vertex map from A to B, map to list of edges on B\n"
  example: []
  syntax:
    content: public static List<int> MapEdgesViaVertexMap(IIndexMap AtoBV, DMesh3 MeshA, DMesh3 MeshB, List<int> edges)
    parameters:
    - id: AtoBV
      type: g3.IIndexMap
    - id: MeshA
      type: g3.DMesh3
    - id: MeshB
      type: g3.DMesh3
    - id: edges
      type: System.Collections.Generic.List{System.Int32}
    return:
      type: System.Collections.Generic.List{System.Int32}
    content.vb: Public Shared Function MapEdgesViaVertexMap(AtoBV As IIndexMap, MeshA As DMesh3, MeshB As DMesh3, edges As List(Of Integer)) As List(Of Integer)
  overload: g3.MeshIndexUtil.MapEdgesViaVertexMap*
  nameWithType.vb: MeshIndexUtil.MapEdgesViaVertexMap(IIndexMap, DMesh3, DMesh3, List(Of Int32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.MeshIndexUtil.MapEdgesViaVertexMap(g3.IIndexMap, g3.DMesh3, g3.DMesh3, System.Collections.Generic.List(Of System.Int32))
  name.vb: MapEdgesViaVertexMap(IIndexMap, DMesh3, DMesh3, List(Of Int32))
- uid: g3.MeshIndexUtil.MapLoopViaVertexMap(g3.IIndexMap,g3.DMesh3,g3.DMesh3,g3.EdgeLoop)
  commentId: M:g3.MeshIndexUtil.MapLoopViaVertexMap(g3.IIndexMap,g3.DMesh3,g3.DMesh3,g3.EdgeLoop)
  id: MapLoopViaVertexMap(g3.IIndexMap,g3.DMesh3,g3.DMesh3,g3.EdgeLoop)
  parent: g3.MeshIndexUtil
  langs:
  - csharp
  - vb
  name: MapLoopViaVertexMap(IIndexMap, DMesh3, DMesh3, EdgeLoop)
  nameWithType: MeshIndexUtil.MapLoopViaVertexMap(IIndexMap, DMesh3, DMesh3, EdgeLoop)
  fullName: g3.MeshIndexUtil.MapLoopViaVertexMap(g3.IIndexMap, g3.DMesh3, g3.DMesh3, g3.EdgeLoop)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/mesh/MeshIndexUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: MapLoopViaVertexMap
    path: ../Assets/geometry3Sharp/mesh/MeshIndexUtil.cs
    startLine: 36
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\ngiven EdgeLoop on MeshA, and vertex map from A to B, map to EdgeLoop on B\n"
  example: []
  syntax:
    content: public static EdgeLoop MapLoopViaVertexMap(IIndexMap AtoBV, DMesh3 MeshA, DMesh3 MeshB, EdgeLoop loopIn)
    parameters:
    - id: AtoBV
      type: g3.IIndexMap
    - id: MeshA
      type: g3.DMesh3
    - id: MeshB
      type: g3.DMesh3
    - id: loopIn
      type: g3.EdgeLoop
    return:
      type: g3.EdgeLoop
    content.vb: Public Shared Function MapLoopViaVertexMap(AtoBV As IIndexMap, MeshA As DMesh3, MeshB As DMesh3, loopIn As EdgeLoop) As EdgeLoop
  overload: g3.MeshIndexUtil.MapLoopViaVertexMap*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: g3.MeshIndexUtil.MapEdgesViaVertexMap*
  commentId: Overload:g3.MeshIndexUtil.MapEdgesViaVertexMap
  name: MapEdgesViaVertexMap
  nameWithType: MeshIndexUtil.MapEdgesViaVertexMap
  fullName: g3.MeshIndexUtil.MapEdgesViaVertexMap
- uid: g3.IIndexMap
  commentId: T:g3.IIndexMap
  parent: g3
  name: IIndexMap
  nameWithType: IIndexMap
  fullName: g3.IIndexMap
- uid: g3.DMesh3
  commentId: T:g3.DMesh3
  parent: g3
  name: DMesh3
  nameWithType: DMesh3
  fullName: g3.DMesh3
- uid: System.Collections.Generic.List{System.Int32}
  commentId: T:System.Collections.Generic.List{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Int32>
  nameWithType: List<Int32>
  fullName: System.Collections.Generic.List<System.Int32>
  nameWithType.vb: List(Of Int32)
  fullName.vb: System.Collections.Generic.List(Of System.Int32)
  name.vb: List(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: g3.MeshIndexUtil.MapLoopViaVertexMap*
  commentId: Overload:g3.MeshIndexUtil.MapLoopViaVertexMap
  name: MapLoopViaVertexMap
  nameWithType: MeshIndexUtil.MapLoopViaVertexMap
  fullName: g3.MeshIndexUtil.MapLoopViaVertexMap
- uid: g3.EdgeLoop
  commentId: T:g3.EdgeLoop
  parent: g3
  name: EdgeLoop
  nameWithType: EdgeLoop
  fullName: g3.EdgeLoop

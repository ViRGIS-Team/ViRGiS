### YamlMime:ManagedReference
items:
- uid: g3.DijkstraGraphDistance
  commentId: T:g3.DijkstraGraphDistance
  id: DijkstraGraphDistance
  parent: g3
  children:
  - g3.DijkstraGraphDistance.#ctor(System.Int32,System.Boolean,System.Func{System.Int32,System.Boolean},System.Func{System.Int32,System.Int32,System.Single},System.Func{System.Int32,System.Collections.Generic.IEnumerable{System.Int32}},System.Collections.Generic.IEnumerable{g3.Vector2d})
  - g3.DijkstraGraphDistance.AddSeed(System.Int32,System.Single)
  - g3.DijkstraGraphDistance.Compute
  - g3.DijkstraGraphDistance.Compute_Dense
  - g3.DijkstraGraphDistance.Compute_Sparse
  - g3.DijkstraGraphDistance.ComputeToMaxDistance(System.Single)
  - g3.DijkstraGraphDistance.ComputeToMaxDistance_Dense(System.Single)
  - g3.DijkstraGraphDistance.ComputeToMaxDistance_Sparse(System.Single)
  - g3.DijkstraGraphDistance.ComputeToNode(System.Func{System.Int32,System.Boolean},System.Single)
  - g3.DijkstraGraphDistance.ComputeToNode(System.Int32,System.Single)
  - g3.DijkstraGraphDistance.ComputeToNode_Dense(System.Func{System.Int32,System.Boolean},System.Single)
  - g3.DijkstraGraphDistance.ComputeToNode_Dense(System.Int32,System.Single)
  - g3.DijkstraGraphDistance.ComputeToNode_Sparse(System.Func{System.Int32,System.Boolean},System.Single)
  - g3.DijkstraGraphDistance.ComputeToNode_Sparse(System.Int32,System.Single)
  - g3.DijkstraGraphDistance.GetDistance(System.Int32)
  - g3.DijkstraGraphDistance.GetOrder
  - g3.DijkstraGraphDistance.GetPathToSeed(System.Int32,System.Collections.Generic.List{System.Int32})
  - g3.DijkstraGraphDistance.InvalidValue
  - g3.DijkstraGraphDistance.IsSeed(System.Int32)
  - g3.DijkstraGraphDistance.MaxDistance
  - g3.DijkstraGraphDistance.MeshTriangles(g3.DMesh3,System.Boolean)
  - g3.DijkstraGraphDistance.MeshVertices(g3.DMesh3,System.Boolean)
  - g3.DijkstraGraphDistance.Reset
  - g3.DijkstraGraphDistance.TrackOrder
  langs:
  - csharp
  - vb
  name: DijkstraGraphDistance
  nameWithType: DijkstraGraphDistance
  fullName: g3.DijkstraGraphDistance
  type: Class
  source:
    remote:
      path: Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: DijkstraGraphDistance
    path: ../Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
    startLine: 19
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nCompute Dijkstra shortest-path algorithm on a graph. \nComputation is index-based, but can use sparse data\nstructures if the index space will be sparse.\n\nConstruction is somewhat complicated, but see shortcut static\nmethods at end of file for common construction cases:\n- MeshVertices(mesh) - compute on vertices of mesh\n- MeshVertices(mesh) - compute on vertices of mesh\n\n"
  example: []
  syntax:
    content: public class DijkstraGraphDistance
    content.vb: Public Class DijkstraGraphDistance
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: g3.DijkstraGraphDistance.InvalidValue
  commentId: F:g3.DijkstraGraphDistance.InvalidValue
  id: InvalidValue
  parent: g3.DijkstraGraphDistance
  langs:
  - csharp
  - vb
  name: InvalidValue
  nameWithType: DijkstraGraphDistance.InvalidValue
  fullName: g3.DijkstraGraphDistance.InvalidValue
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: InvalidValue
    path: ../Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
    startLine: 21
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public const float InvalidValue = 3.40282347E+38F
    return:
      type: System.Single
    content.vb: Public Const InvalidValue As Single = 3.40282347E+38F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: g3.DijkstraGraphDistance.TrackOrder
  commentId: F:g3.DijkstraGraphDistance.TrackOrder
  id: TrackOrder
  parent: g3.DijkstraGraphDistance
  langs:
  - csharp
  - vb
  name: TrackOrder
  nameWithType: DijkstraGraphDistance.TrackOrder
  fullName: g3.DijkstraGraphDistance.TrackOrder
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: TrackOrder
    path: ../Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
    startLine: 26
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nif you enable this, then you can call GetOrder()\n"
  example: []
  syntax:
    content: public bool TrackOrder
    return:
      type: System.Boolean
    content.vb: Public TrackOrder As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.DijkstraGraphDistance.#ctor(System.Int32,System.Boolean,System.Func{System.Int32,System.Boolean},System.Func{System.Int32,System.Int32,System.Single},System.Func{System.Int32,System.Collections.Generic.IEnumerable{System.Int32}},System.Collections.Generic.IEnumerable{g3.Vector2d})
  commentId: M:g3.DijkstraGraphDistance.#ctor(System.Int32,System.Boolean,System.Func{System.Int32,System.Boolean},System.Func{System.Int32,System.Int32,System.Single},System.Func{System.Int32,System.Collections.Generic.IEnumerable{System.Int32}},System.Collections.Generic.IEnumerable{g3.Vector2d})
  id: '#ctor(System.Int32,System.Boolean,System.Func{System.Int32,System.Boolean},System.Func{System.Int32,System.Int32,System.Single},System.Func{System.Int32,System.Collections.Generic.IEnumerable{System.Int32}},System.Collections.Generic.IEnumerable{g3.Vector2d})'
  parent: g3.DijkstraGraphDistance
  langs:
  - csharp
  - vb
  name: DijkstraGraphDistance(Int32, Boolean, Func<Int32, Boolean>, Func<Int32, Int32, Single>, Func<Int32, IEnumerable<Int32>>, IEnumerable<Vector2d>)
  nameWithType: DijkstraGraphDistance.DijkstraGraphDistance(Int32, Boolean, Func<Int32, Boolean>, Func<Int32, Int32, Single>, Func<Int32, IEnumerable<Int32>>, IEnumerable<Vector2d>)
  fullName: g3.DijkstraGraphDistance.DijkstraGraphDistance(System.Int32, System.Boolean, System.Func<System.Int32, System.Boolean>, System.Func<System.Int32, System.Int32, System.Single>, System.Func<System.Int32, System.Collections.Generic.IEnumerable<System.Int32>>, System.Collections.Generic.IEnumerable<g3.Vector2d>)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
    startLine: 90
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nConstructor configures the graph as well. Graph is not specified\nexplicitly, is provided via functions, for maximum flexibility.\n\nnMaxID: maximum ID that will be added. \nbSparse: is ID space large but sparse? this will save memory\nnodeFilterF: restrict to a subset of nodes (eg if you want to filter neighbours but not change neighboursF\nnodeDistanceF: must return (symmetric) distance between two nodes a and b\nneighboursF: return enumeration of neighbours of a\nseeds: although Vector2d, are actually pairs (id, seedvalue)   (or use AddSeed later)\n"
  example: []
  syntax:
    content: public DijkstraGraphDistance(int nMaxID, bool bSparse, Func<int, bool> nodeFilterF, Func<int, int, float> nodeDistanceF, Func<int, IEnumerable<int>> neighboursF, IEnumerable<Vector2d> seeds = null)
    parameters:
    - id: nMaxID
      type: System.Int32
    - id: bSparse
      type: System.Boolean
    - id: nodeFilterF
      type: System.Func{System.Int32,System.Boolean}
    - id: nodeDistanceF
      type: System.Func{System.Int32,System.Int32,System.Single}
    - id: neighboursF
      type: System.Func{System.Int32,System.Collections.Generic.IEnumerable{System.Int32}}
    - id: seeds
      type: System.Collections.Generic.IEnumerable{g3.Vector2d}
    content.vb: Public Sub New(nMaxID As Integer, bSparse As Boolean, nodeFilterF As Func(Of Integer, Boolean), nodeDistanceF As Func(Of Integer, Integer, Single), neighboursF As Func(Of Integer, IEnumerable(Of Integer)), seeds As IEnumerable(Of Vector2d) = Nothing)
  overload: g3.DijkstraGraphDistance.#ctor*
  nameWithType.vb: DijkstraGraphDistance.DijkstraGraphDistance(Int32, Boolean, Func(Of Int32, Boolean), Func(Of Int32, Int32, Single), Func(Of Int32, IEnumerable(Of Int32)), IEnumerable(Of Vector2d))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.DijkstraGraphDistance.DijkstraGraphDistance(System.Int32, System.Boolean, System.Func(Of System.Int32, System.Boolean), System.Func(Of System.Int32, System.Int32, System.Single), System.Func(Of System.Int32, System.Collections.Generic.IEnumerable(Of System.Int32)), System.Collections.Generic.IEnumerable(Of g3.Vector2d))
  name.vb: DijkstraGraphDistance(Int32, Boolean, Func(Of Int32, Boolean), Func(Of Int32, Int32, Single), Func(Of Int32, IEnumerable(Of Int32)), IEnumerable(Of Vector2d))
- uid: g3.DijkstraGraphDistance.MeshVertices(g3.DMesh3,System.Boolean)
  commentId: M:g3.DijkstraGraphDistance.MeshVertices(g3.DMesh3,System.Boolean)
  id: MeshVertices(g3.DMesh3,System.Boolean)
  parent: g3.DijkstraGraphDistance
  langs:
  - csharp
  - vb
  name: MeshVertices(DMesh3, Boolean)
  nameWithType: DijkstraGraphDistance.MeshVertices(DMesh3, Boolean)
  fullName: g3.DijkstraGraphDistance.MeshVertices(g3.DMesh3, System.Boolean)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: MeshVertices
    path: ../Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
    startLine: 123
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nshortcut to construct graph for mesh vertices\n"
  example: []
  syntax:
    content: public static DijkstraGraphDistance MeshVertices(DMesh3 mesh, bool bSparse = false)
    parameters:
    - id: mesh
      type: g3.DMesh3
    - id: bSparse
      type: System.Boolean
    return:
      type: g3.DijkstraGraphDistance
    content.vb: Public Shared Function MeshVertices(mesh As DMesh3, bSparse As Boolean = False) As DijkstraGraphDistance
  overload: g3.DijkstraGraphDistance.MeshVertices*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.DijkstraGraphDistance.MeshTriangles(g3.DMesh3,System.Boolean)
  commentId: M:g3.DijkstraGraphDistance.MeshTriangles(g3.DMesh3,System.Boolean)
  id: MeshTriangles(g3.DMesh3,System.Boolean)
  parent: g3.DijkstraGraphDistance
  langs:
  - csharp
  - vb
  name: MeshTriangles(DMesh3, Boolean)
  nameWithType: DijkstraGraphDistance.MeshTriangles(DMesh3, Boolean)
  fullName: g3.DijkstraGraphDistance.MeshTriangles(g3.DMesh3, System.Boolean)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: MeshTriangles
    path: ../Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
    startLine: 141
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nshortcut to construct graph for mesh triangles\n"
  example: []
  syntax:
    content: public static DijkstraGraphDistance MeshTriangles(DMesh3 mesh, bool bSparse = false)
    parameters:
    - id: mesh
      type: g3.DMesh3
    - id: bSparse
      type: System.Boolean
    return:
      type: g3.DijkstraGraphDistance
    content.vb: Public Shared Function MeshTriangles(mesh As DMesh3, bSparse As Boolean = False) As DijkstraGraphDistance
  overload: g3.DijkstraGraphDistance.MeshTriangles*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.DijkstraGraphDistance.Reset
  commentId: M:g3.DijkstraGraphDistance.Reset
  id: Reset
  parent: g3.DijkstraGraphDistance
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: DijkstraGraphDistance.Reset()
  fullName: g3.DijkstraGraphDistance.Reset()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Reset
    path: ../Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
    startLine: 161
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nreset internal data structures/etc\n"
  example: []
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  overload: g3.DijkstraGraphDistance.Reset*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.DijkstraGraphDistance.AddSeed(System.Int32,System.Single)
  commentId: M:g3.DijkstraGraphDistance.AddSeed(System.Int32,System.Single)
  id: AddSeed(System.Int32,System.Single)
  parent: g3.DijkstraGraphDistance
  langs:
  - csharp
  - vb
  name: AddSeed(Int32, Single)
  nameWithType: DijkstraGraphDistance.AddSeed(Int32, Single)
  fullName: g3.DijkstraGraphDistance.AddSeed(System.Int32, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AddSeed
    path: ../Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
    startLine: 181
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nAdd seed point as id/distance pair\n"
  example: []
  syntax:
    content: public void AddSeed(int id, float seed_dist)
    parameters:
    - id: id
      type: System.Int32
    - id: seed_dist
      type: System.Single
    content.vb: Public Sub AddSeed(id As Integer, seed_dist As Single)
  overload: g3.DijkstraGraphDistance.AddSeed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.DijkstraGraphDistance.IsSeed(System.Int32)
  commentId: M:g3.DijkstraGraphDistance.IsSeed(System.Int32)
  id: IsSeed(System.Int32)
  parent: g3.DijkstraGraphDistance
  langs:
  - csharp
  - vb
  name: IsSeed(Int32)
  nameWithType: DijkstraGraphDistance.IsSeed(Int32)
  fullName: g3.DijkstraGraphDistance.IsSeed(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IsSeed
    path: ../Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
    startLine: 193
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool IsSeed(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function IsSeed(id As Integer) As Boolean
  overload: g3.DijkstraGraphDistance.IsSeed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.DijkstraGraphDistance.Compute
  commentId: M:g3.DijkstraGraphDistance.Compute
  id: Compute
  parent: g3.DijkstraGraphDistance
  langs:
  - csharp
  - vb
  name: Compute()
  nameWithType: DijkstraGraphDistance.Compute()
  fullName: g3.DijkstraGraphDistance.Compute()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Compute
    path: ../Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
    startLine: 202
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nCompute distances from seeds to all other ids.\n"
  example: []
  syntax:
    content: public void Compute()
    content.vb: Public Sub Compute
  overload: g3.DijkstraGraphDistance.Compute*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.DijkstraGraphDistance.Compute_Sparse
  commentId: M:g3.DijkstraGraphDistance.Compute_Sparse
  id: Compute_Sparse
  parent: g3.DijkstraGraphDistance
  langs:
  - csharp
  - vb
  name: Compute_Sparse()
  nameWithType: DijkstraGraphDistance.Compute_Sparse()
  fullName: g3.DijkstraGraphDistance.Compute_Sparse()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Compute_Sparse
    path: ../Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
    startLine: 212
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: protected void Compute_Sparse()
    content.vb: Protected Sub Compute_Sparse
  overload: g3.DijkstraGraphDistance.Compute_Sparse*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: g3.DijkstraGraphDistance.Compute_Dense
  commentId: M:g3.DijkstraGraphDistance.Compute_Dense
  id: Compute_Dense
  parent: g3.DijkstraGraphDistance
  langs:
  - csharp
  - vb
  name: Compute_Dense()
  nameWithType: DijkstraGraphDistance.Compute_Dense()
  fullName: g3.DijkstraGraphDistance.Compute_Dense()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Compute_Dense
    path: ../Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
    startLine: 223
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: protected void Compute_Dense()
    content.vb: Protected Sub Compute_Dense
  overload: g3.DijkstraGraphDistance.Compute_Dense*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: g3.DijkstraGraphDistance.ComputeToMaxDistance(System.Single)
  commentId: M:g3.DijkstraGraphDistance.ComputeToMaxDistance(System.Single)
  id: ComputeToMaxDistance(System.Single)
  parent: g3.DijkstraGraphDistance
  langs:
  - csharp
  - vb
  name: ComputeToMaxDistance(Single)
  nameWithType: DijkstraGraphDistance.ComputeToMaxDistance(Single)
  fullName: g3.DijkstraGraphDistance.ComputeToMaxDistance(System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ComputeToMaxDistance
    path: ../Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
    startLine: 244
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nCompute distances that are less/equal to fMaxDistance from the seeds\nTerminates early, so Queue may not be empty\n"
  example: []
  syntax:
    content: public void ComputeToMaxDistance(float fMaxDistance)
    parameters:
    - id: fMaxDistance
      type: System.Single
    content.vb: Public Sub ComputeToMaxDistance(fMaxDistance As Single)
  overload: g3.DijkstraGraphDistance.ComputeToMaxDistance*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.DijkstraGraphDistance.ComputeToMaxDistance_Sparse(System.Single)
  commentId: M:g3.DijkstraGraphDistance.ComputeToMaxDistance_Sparse(System.Single)
  id: ComputeToMaxDistance_Sparse(System.Single)
  parent: g3.DijkstraGraphDistance
  langs:
  - csharp
  - vb
  name: ComputeToMaxDistance_Sparse(Single)
  nameWithType: DijkstraGraphDistance.ComputeToMaxDistance_Sparse(Single)
  fullName: g3.DijkstraGraphDistance.ComputeToMaxDistance_Sparse(System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ComputeToMaxDistance_Sparse
    path: ../Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
    startLine: 254
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: protected void ComputeToMaxDistance_Sparse(float fMaxDistance)
    parameters:
    - id: fMaxDistance
      type: System.Single
    content.vb: Protected Sub ComputeToMaxDistance_Sparse(fMaxDistance As Single)
  overload: g3.DijkstraGraphDistance.ComputeToMaxDistance_Sparse*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: g3.DijkstraGraphDistance.ComputeToMaxDistance_Dense(System.Single)
  commentId: M:g3.DijkstraGraphDistance.ComputeToMaxDistance_Dense(System.Single)
  id: ComputeToMaxDistance_Dense(System.Single)
  parent: g3.DijkstraGraphDistance
  langs:
  - csharp
  - vb
  name: ComputeToMaxDistance_Dense(Single)
  nameWithType: DijkstraGraphDistance.ComputeToMaxDistance_Dense(Single)
  fullName: g3.DijkstraGraphDistance.ComputeToMaxDistance_Dense(System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ComputeToMaxDistance_Dense
    path: ../Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
    startLine: 267
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: protected void ComputeToMaxDistance_Dense(float fMaxDistance)
    parameters:
    - id: fMaxDistance
      type: System.Single
    content.vb: Protected Sub ComputeToMaxDistance_Dense(fMaxDistance As Single)
  overload: g3.DijkstraGraphDistance.ComputeToMaxDistance_Dense*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: g3.DijkstraGraphDistance.ComputeToNode(System.Int32,System.Single)
  commentId: M:g3.DijkstraGraphDistance.ComputeToNode(System.Int32,System.Single)
  id: ComputeToNode(System.Int32,System.Single)
  parent: g3.DijkstraGraphDistance
  langs:
  - csharp
  - vb
  name: ComputeToNode(Int32, Single)
  nameWithType: DijkstraGraphDistance.ComputeToNode(Int32, Single)
  fullName: g3.DijkstraGraphDistance.ComputeToNode(System.Int32, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ComputeToNode
    path: ../Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
    startLine: 293
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nCompute distances until node_id is frozen, or (optional) max distance is reached\nTerminates early, so Queue may not be empty\n[TODO] can reimplement this w/ internal call to ComputeToNode(func) ?\n"
  example: []
  syntax:
    content: public void ComputeToNode(int node_id, float fMaxDistance = 3.40282347E+38F)
    parameters:
    - id: node_id
      type: System.Int32
    - id: fMaxDistance
      type: System.Single
    content.vb: Public Sub ComputeToNode(node_id As Integer, fMaxDistance As Single = 3.40282347E+38F)
  overload: g3.DijkstraGraphDistance.ComputeToNode*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.DijkstraGraphDistance.ComputeToNode_Sparse(System.Int32,System.Single)
  commentId: M:g3.DijkstraGraphDistance.ComputeToNode_Sparse(System.Int32,System.Single)
  id: ComputeToNode_Sparse(System.Int32,System.Single)
  parent: g3.DijkstraGraphDistance
  langs:
  - csharp
  - vb
  name: ComputeToNode_Sparse(Int32, Single)
  nameWithType: DijkstraGraphDistance.ComputeToNode_Sparse(Int32, Single)
  fullName: g3.DijkstraGraphDistance.ComputeToNode_Sparse(System.Int32, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ComputeToNode_Sparse
    path: ../Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
    startLine: 303
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: protected void ComputeToNode_Sparse(int node_id, float fMaxDistance)
    parameters:
    - id: node_id
      type: System.Int32
    - id: fMaxDistance
      type: System.Single
    content.vb: Protected Sub ComputeToNode_Sparse(node_id As Integer, fMaxDistance As Single)
  overload: g3.DijkstraGraphDistance.ComputeToNode_Sparse*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: g3.DijkstraGraphDistance.ComputeToNode_Dense(System.Int32,System.Single)
  commentId: M:g3.DijkstraGraphDistance.ComputeToNode_Dense(System.Int32,System.Single)
  id: ComputeToNode_Dense(System.Int32,System.Single)
  parent: g3.DijkstraGraphDistance
  langs:
  - csharp
  - vb
  name: ComputeToNode_Dense(Int32, Single)
  nameWithType: DijkstraGraphDistance.ComputeToNode_Dense(Int32, Single)
  fullName: g3.DijkstraGraphDistance.ComputeToNode_Dense(System.Int32, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ComputeToNode_Dense
    path: ../Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
    startLine: 318
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: protected void ComputeToNode_Dense(int node_id, float fMaxDistance)
    parameters:
    - id: node_id
      type: System.Int32
    - id: fMaxDistance
      type: System.Single
    content.vb: Protected Sub ComputeToNode_Dense(node_id As Integer, fMaxDistance As Single)
  overload: g3.DijkstraGraphDistance.ComputeToNode_Dense*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: g3.DijkstraGraphDistance.ComputeToNode(System.Func{System.Int32,System.Boolean},System.Single)
  commentId: M:g3.DijkstraGraphDistance.ComputeToNode(System.Func{System.Int32,System.Boolean},System.Single)
  id: ComputeToNode(System.Func{System.Int32,System.Boolean},System.Single)
  parent: g3.DijkstraGraphDistance
  langs:
  - csharp
  - vb
  name: ComputeToNode(Func<Int32, Boolean>, Single)
  nameWithType: DijkstraGraphDistance.ComputeToNode(Func<Int32, Boolean>, Single)
  fullName: g3.DijkstraGraphDistance.ComputeToNode(System.Func<System.Int32, System.Boolean>, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ComputeToNode
    path: ../Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
    startLine: 348
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nCompute distances until node_id is frozen, or (optional) max distance is reached\nTerminates early, so Queue may not be empty\n"
  example: []
  syntax:
    content: public int ComputeToNode(Func<int, bool> terminatingNodeF, float fMaxDistance = 3.40282347E+38F)
    parameters:
    - id: terminatingNodeF
      type: System.Func{System.Int32,System.Boolean}
    - id: fMaxDistance
      type: System.Single
    return:
      type: System.Int32
    content.vb: Public Function ComputeToNode(terminatingNodeF As Func(Of Integer, Boolean), fMaxDistance As Single = 3.40282347E+38F) As Integer
  overload: g3.DijkstraGraphDistance.ComputeToNode*
  nameWithType.vb: DijkstraGraphDistance.ComputeToNode(Func(Of Int32, Boolean), Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.DijkstraGraphDistance.ComputeToNode(System.Func(Of System.Int32, System.Boolean), System.Single)
  name.vb: ComputeToNode(Func(Of Int32, Boolean), Single)
- uid: g3.DijkstraGraphDistance.ComputeToNode_Sparse(System.Func{System.Int32,System.Boolean},System.Single)
  commentId: M:g3.DijkstraGraphDistance.ComputeToNode_Sparse(System.Func{System.Int32,System.Boolean},System.Single)
  id: ComputeToNode_Sparse(System.Func{System.Int32,System.Boolean},System.Single)
  parent: g3.DijkstraGraphDistance
  langs:
  - csharp
  - vb
  name: ComputeToNode_Sparse(Func<Int32, Boolean>, Single)
  nameWithType: DijkstraGraphDistance.ComputeToNode_Sparse(Func<Int32, Boolean>, Single)
  fullName: g3.DijkstraGraphDistance.ComputeToNode_Sparse(System.Func<System.Int32, System.Boolean>, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ComputeToNode_Sparse
    path: ../Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
    startLine: 358
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: protected int ComputeToNode_Sparse(Func<int, bool> terminatingNodeF, float fMaxDistance)
    parameters:
    - id: terminatingNodeF
      type: System.Func{System.Int32,System.Boolean}
    - id: fMaxDistance
      type: System.Single
    return:
      type: System.Int32
    content.vb: Protected Function ComputeToNode_Sparse(terminatingNodeF As Func(Of Integer, Boolean), fMaxDistance As Single) As Integer
  overload: g3.DijkstraGraphDistance.ComputeToNode_Sparse*
  nameWithType.vb: DijkstraGraphDistance.ComputeToNode_Sparse(Func(Of Int32, Boolean), Single)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: g3.DijkstraGraphDistance.ComputeToNode_Sparse(System.Func(Of System.Int32, System.Boolean), System.Single)
  name.vb: ComputeToNode_Sparse(Func(Of Int32, Boolean), Single)
- uid: g3.DijkstraGraphDistance.ComputeToNode_Dense(System.Func{System.Int32,System.Boolean},System.Single)
  commentId: M:g3.DijkstraGraphDistance.ComputeToNode_Dense(System.Func{System.Int32,System.Boolean},System.Single)
  id: ComputeToNode_Dense(System.Func{System.Int32,System.Boolean},System.Single)
  parent: g3.DijkstraGraphDistance
  langs:
  - csharp
  - vb
  name: ComputeToNode_Dense(Func<Int32, Boolean>, Single)
  nameWithType: DijkstraGraphDistance.ComputeToNode_Dense(Func<Int32, Boolean>, Single)
  fullName: g3.DijkstraGraphDistance.ComputeToNode_Dense(System.Func<System.Int32, System.Boolean>, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ComputeToNode_Dense
    path: ../Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
    startLine: 374
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: protected int ComputeToNode_Dense(Func<int, bool> terminatingNodeF, float fMaxDistance)
    parameters:
    - id: terminatingNodeF
      type: System.Func{System.Int32,System.Boolean}
    - id: fMaxDistance
      type: System.Single
    return:
      type: System.Int32
    content.vb: Protected Function ComputeToNode_Dense(terminatingNodeF As Func(Of Integer, Boolean), fMaxDistance As Single) As Integer
  overload: g3.DijkstraGraphDistance.ComputeToNode_Dense*
  nameWithType.vb: DijkstraGraphDistance.ComputeToNode_Dense(Func(Of Int32, Boolean), Single)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: g3.DijkstraGraphDistance.ComputeToNode_Dense(System.Func(Of System.Int32, System.Boolean), System.Single)
  name.vb: ComputeToNode_Dense(Func(Of Int32, Boolean), Single)
- uid: g3.DijkstraGraphDistance.MaxDistance
  commentId: P:g3.DijkstraGraphDistance.MaxDistance
  id: MaxDistance
  parent: g3.DijkstraGraphDistance
  langs:
  - csharp
  - vb
  name: MaxDistance
  nameWithType: DijkstraGraphDistance.MaxDistance
  fullName: g3.DijkstraGraphDistance.MaxDistance
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: MaxDistance
    path: ../Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
    startLine: 404
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nGet the maximum distance encountered during the Compute()\n"
  example: []
  syntax:
    content: public float MaxDistance { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property MaxDistance As Single
  overload: g3.DijkstraGraphDistance.MaxDistance*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.DijkstraGraphDistance.GetDistance(System.Int32)
  commentId: M:g3.DijkstraGraphDistance.GetDistance(System.Int32)
  id: GetDistance(System.Int32)
  parent: g3.DijkstraGraphDistance
  langs:
  - csharp
  - vb
  name: GetDistance(Int32)
  nameWithType: DijkstraGraphDistance.GetDistance(Int32)
  fullName: g3.DijkstraGraphDistance.GetDistance(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GetDistance
    path: ../Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
    startLine: 412
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nGet the computed distance at node id. returns InvalidValue if node was not computed.\n"
  example: []
  syntax:
    content: public float GetDistance(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Single
    content.vb: Public Function GetDistance(id As Integer) As Single
  overload: g3.DijkstraGraphDistance.GetDistance*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.DijkstraGraphDistance.GetOrder
  commentId: M:g3.DijkstraGraphDistance.GetOrder
  id: GetOrder
  parent: g3.DijkstraGraphDistance
  langs:
  - csharp
  - vb
  name: GetOrder()
  nameWithType: DijkstraGraphDistance.GetOrder()
  fullName: g3.DijkstraGraphDistance.GetOrder()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GetOrder
    path: ../Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
    startLine: 431
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nGet (internal) list of frozen nodes in increasing distance-order.\nRequries that TrackOrder=true before Compute call.\n"
  example: []
  syntax:
    content: public List<int> GetOrder()
    return:
      type: System.Collections.Generic.List{System.Int32}
    content.vb: Public Function GetOrder As List(Of Integer)
  overload: g3.DijkstraGraphDistance.GetOrder*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.DijkstraGraphDistance.GetPathToSeed(System.Int32,System.Collections.Generic.List{System.Int32})
  commentId: M:g3.DijkstraGraphDistance.GetPathToSeed(System.Int32,System.Collections.Generic.List{System.Int32})
  id: GetPathToSeed(System.Int32,System.Collections.Generic.List{System.Int32})
  parent: g3.DijkstraGraphDistance
  langs:
  - csharp
  - vb
  name: GetPathToSeed(Int32, List<Int32>)
  nameWithType: DijkstraGraphDistance.GetPathToSeed(Int32, List<Int32>)
  fullName: g3.DijkstraGraphDistance.GetPathToSeed(System.Int32, System.Collections.Generic.List<System.Int32>)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GetPathToSeed
    path: ../Assets/geometry3Sharp/core/DijkstraGraphDistance.cs
    startLine: 443
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nWalk from node fromv back to the (graph-)nearest seed point.\n"
  example: []
  syntax:
    content: public bool GetPathToSeed(int fromv, List<int> path)
    parameters:
    - id: fromv
      type: System.Int32
    - id: path
      type: System.Collections.Generic.List{System.Int32}
    return:
      type: System.Boolean
    content.vb: Public Function GetPathToSeed(fromv As Integer, path As List(Of Integer)) As Boolean
  overload: g3.DijkstraGraphDistance.GetPathToSeed*
  nameWithType.vb: DijkstraGraphDistance.GetPathToSeed(Int32, List(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.DijkstraGraphDistance.GetPathToSeed(System.Int32, System.Collections.Generic.List(Of System.Int32))
  name.vb: GetPathToSeed(Int32, List(Of Int32))
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: g3.DijkstraGraphDistance.#ctor*
  commentId: Overload:g3.DijkstraGraphDistance.#ctor
  name: DijkstraGraphDistance
  nameWithType: DijkstraGraphDistance.DijkstraGraphDistance
  fullName: g3.DijkstraGraphDistance.DijkstraGraphDistance
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Func{System.Int32,System.Boolean}
  commentId: T:System.Func{System.Int32,System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<Int32, Boolean>
  nameWithType: Func<Int32, Boolean>
  fullName: System.Func<System.Int32, System.Boolean>
  nameWithType.vb: Func(Of Int32, Boolean)
  fullName.vb: System.Func(Of System.Int32, System.Boolean)
  name.vb: Func(Of Int32, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.Int32,System.Int32,System.Single}
  commentId: T:System.Func{System.Int32,System.Int32,System.Single}
  parent: System
  definition: System.Func`3
  name: Func<Int32, Int32, Single>
  nameWithType: Func<Int32, Int32, Single>
  fullName: System.Func<System.Int32, System.Int32, System.Single>
  nameWithType.vb: Func(Of Int32, Int32, Single)
  fullName.vb: System.Func(Of System.Int32, System.Int32, System.Single)
  name.vb: Func(Of Int32, Int32, Single)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.Int32,System.Collections.Generic.IEnumerable{System.Int32}}
  commentId: T:System.Func{System.Int32,System.Collections.Generic.IEnumerable{System.Int32}}
  parent: System
  definition: System.Func`2
  name: Func<Int32, IEnumerable<Int32>>
  nameWithType: Func<Int32, IEnumerable<Int32>>
  fullName: System.Func<System.Int32, System.Collections.Generic.IEnumerable<System.Int32>>
  nameWithType.vb: Func(Of Int32, IEnumerable(Of Int32))
  fullName.vb: System.Func(Of System.Int32, System.Collections.Generic.IEnumerable(Of System.Int32))
  name.vb: Func(Of Int32, IEnumerable(Of Int32))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{g3.Vector2d}
  commentId: T:System.Collections.Generic.IEnumerable{g3.Vector2d}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Vector2d>
  nameWithType: IEnumerable<Vector2d>
  fullName: System.Collections.Generic.IEnumerable<g3.Vector2d>
  nameWithType.vb: IEnumerable(Of Vector2d)
  fullName.vb: System.Collections.Generic.IEnumerable(Of g3.Vector2d)
  name.vb: IEnumerable(Of Vector2d)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: g3.Vector2d
    name: Vector2d
    nameWithType: Vector2d
    fullName: g3.Vector2d
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: g3.Vector2d
    name: Vector2d
    nameWithType: Vector2d
    fullName: g3.Vector2d
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: g3.DijkstraGraphDistance.MeshVertices*
  commentId: Overload:g3.DijkstraGraphDistance.MeshVertices
  name: MeshVertices
  nameWithType: DijkstraGraphDistance.MeshVertices
  fullName: g3.DijkstraGraphDistance.MeshVertices
- uid: g3.DMesh3
  commentId: T:g3.DMesh3
  parent: g3
  name: DMesh3
  nameWithType: DMesh3
  fullName: g3.DMesh3
- uid: g3.DijkstraGraphDistance
  commentId: T:g3.DijkstraGraphDistance
  parent: g3
  name: DijkstraGraphDistance
  nameWithType: DijkstraGraphDistance
  fullName: g3.DijkstraGraphDistance
- uid: g3.DijkstraGraphDistance.MeshTriangles*
  commentId: Overload:g3.DijkstraGraphDistance.MeshTriangles
  name: MeshTriangles
  nameWithType: DijkstraGraphDistance.MeshTriangles
  fullName: g3.DijkstraGraphDistance.MeshTriangles
- uid: g3.DijkstraGraphDistance.Reset*
  commentId: Overload:g3.DijkstraGraphDistance.Reset
  name: Reset
  nameWithType: DijkstraGraphDistance.Reset
  fullName: g3.DijkstraGraphDistance.Reset
- uid: g3.DijkstraGraphDistance.AddSeed*
  commentId: Overload:g3.DijkstraGraphDistance.AddSeed
  name: AddSeed
  nameWithType: DijkstraGraphDistance.AddSeed
  fullName: g3.DijkstraGraphDistance.AddSeed
- uid: g3.DijkstraGraphDistance.IsSeed*
  commentId: Overload:g3.DijkstraGraphDistance.IsSeed
  name: IsSeed
  nameWithType: DijkstraGraphDistance.IsSeed
  fullName: g3.DijkstraGraphDistance.IsSeed
- uid: g3.DijkstraGraphDistance.Compute*
  commentId: Overload:g3.DijkstraGraphDistance.Compute
  name: Compute
  nameWithType: DijkstraGraphDistance.Compute
  fullName: g3.DijkstraGraphDistance.Compute
- uid: g3.DijkstraGraphDistance.Compute_Sparse*
  commentId: Overload:g3.DijkstraGraphDistance.Compute_Sparse
  name: Compute_Sparse
  nameWithType: DijkstraGraphDistance.Compute_Sparse
  fullName: g3.DijkstraGraphDistance.Compute_Sparse
- uid: g3.DijkstraGraphDistance.Compute_Dense*
  commentId: Overload:g3.DijkstraGraphDistance.Compute_Dense
  name: Compute_Dense
  nameWithType: DijkstraGraphDistance.Compute_Dense
  fullName: g3.DijkstraGraphDistance.Compute_Dense
- uid: g3.DijkstraGraphDistance.ComputeToMaxDistance*
  commentId: Overload:g3.DijkstraGraphDistance.ComputeToMaxDistance
  name: ComputeToMaxDistance
  nameWithType: DijkstraGraphDistance.ComputeToMaxDistance
  fullName: g3.DijkstraGraphDistance.ComputeToMaxDistance
- uid: g3.DijkstraGraphDistance.ComputeToMaxDistance_Sparse*
  commentId: Overload:g3.DijkstraGraphDistance.ComputeToMaxDistance_Sparse
  name: ComputeToMaxDistance_Sparse
  nameWithType: DijkstraGraphDistance.ComputeToMaxDistance_Sparse
  fullName: g3.DijkstraGraphDistance.ComputeToMaxDistance_Sparse
- uid: g3.DijkstraGraphDistance.ComputeToMaxDistance_Dense*
  commentId: Overload:g3.DijkstraGraphDistance.ComputeToMaxDistance_Dense
  name: ComputeToMaxDistance_Dense
  nameWithType: DijkstraGraphDistance.ComputeToMaxDistance_Dense
  fullName: g3.DijkstraGraphDistance.ComputeToMaxDistance_Dense
- uid: g3.DijkstraGraphDistance.ComputeToNode*
  commentId: Overload:g3.DijkstraGraphDistance.ComputeToNode
  name: ComputeToNode
  nameWithType: DijkstraGraphDistance.ComputeToNode
  fullName: g3.DijkstraGraphDistance.ComputeToNode
- uid: g3.DijkstraGraphDistance.ComputeToNode_Sparse*
  commentId: Overload:g3.DijkstraGraphDistance.ComputeToNode_Sparse
  name: ComputeToNode_Sparse
  nameWithType: DijkstraGraphDistance.ComputeToNode_Sparse
  fullName: g3.DijkstraGraphDistance.ComputeToNode_Sparse
- uid: g3.DijkstraGraphDistance.ComputeToNode_Dense*
  commentId: Overload:g3.DijkstraGraphDistance.ComputeToNode_Dense
  name: ComputeToNode_Dense
  nameWithType: DijkstraGraphDistance.ComputeToNode_Dense
  fullName: g3.DijkstraGraphDistance.ComputeToNode_Dense
- uid: g3.DijkstraGraphDistance.MaxDistance*
  commentId: Overload:g3.DijkstraGraphDistance.MaxDistance
  name: MaxDistance
  nameWithType: DijkstraGraphDistance.MaxDistance
  fullName: g3.DijkstraGraphDistance.MaxDistance
- uid: g3.DijkstraGraphDistance.GetDistance*
  commentId: Overload:g3.DijkstraGraphDistance.GetDistance
  name: GetDistance
  nameWithType: DijkstraGraphDistance.GetDistance
  fullName: g3.DijkstraGraphDistance.GetDistance
- uid: g3.DijkstraGraphDistance.GetOrder*
  commentId: Overload:g3.DijkstraGraphDistance.GetOrder
  name: GetOrder
  nameWithType: DijkstraGraphDistance.GetOrder
  fullName: g3.DijkstraGraphDistance.GetOrder
- uid: System.Collections.Generic.List{System.Int32}
  commentId: T:System.Collections.Generic.List{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Int32>
  nameWithType: List<Int32>
  fullName: System.Collections.Generic.List<System.Int32>
  nameWithType.vb: List(Of Int32)
  fullName.vb: System.Collections.Generic.List(Of System.Int32)
  name.vb: List(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.DijkstraGraphDistance.GetPathToSeed*
  commentId: Overload:g3.DijkstraGraphDistance.GetPathToSeed
  name: GetPathToSeed
  nameWithType: DijkstraGraphDistance.GetPathToSeed
  fullName: g3.DijkstraGraphDistance.GetPathToSeed

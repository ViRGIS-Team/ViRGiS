### YamlMime:ManagedReference
items:
- uid: g3.IndexHashSet
  commentId: T:g3.IndexHashSet
  id: IndexHashSet
  parent: g3
  children:
  - g3.IndexHashSet.Item(System.Int32)
  langs:
  - csharp
  - vb
  name: IndexHashSet
  nameWithType: IndexHashSet
  fullName: g3.IndexHashSet
  type: Class
  source:
    remote:
      path: Assets/geometry3Sharp/core/Indexing.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IndexHashSet
    path: ../Assets/geometry3Sharp/core/Indexing.cs
    startLine: 29
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: 'public class IndexHashSet : HashSet<int>, IReadOnlyCollection<int>, ISet<int>, ICollection<int>, IEnumerable<int>, IEnumerable, IDeserializationCallback, ISerializable'
    content.vb: >-
      Public Class IndexHashSet
          Inherits HashSet(Of Integer)
          Implements IReadOnlyCollection(Of Integer), ISet(Of Integer), ICollection(Of Integer), IEnumerable(Of Integer), IEnumerable, IDeserializationCallback, ISerializable
  inheritance:
  - System.Object
  - System.Collections.Generic.HashSet{System.Int32}
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: g3.IndexHashSet.Item(System.Int32)
  commentId: P:g3.IndexHashSet.Item(System.Int32)
  id: Item(System.Int32)
  parent: g3.IndexHashSet
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: IndexHashSet.Item[Int32]
  fullName: g3.IndexHashSet.Item[System.Int32]
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/core/Indexing.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: this[]
    path: ../Assets/geometry3Sharp/core/Indexing.cs
    startLine: 31
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool this[int key] { get; set; }
    parameters:
    - id: key
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Property Item(key As Integer) As Boolean
  overload: g3.IndexHashSet.Item*
  nameWithType.vb: IndexHashSet.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: g3.IndexHashSet.Item(System.Int32)
  name.vb: Item(Int32)
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.HashSet{System.Int32}
  commentId: T:System.Collections.Generic.HashSet{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<Int32>
  nameWithType: HashSet<Int32>
  fullName: System.Collections.Generic.HashSet<System.Int32>
  nameWithType.vb: HashSet(Of Int32)
  fullName.vb: System.Collections.Generic.HashSet(Of System.Int32)
  name.vb: HashSet(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: g3.IndexHashSet.Item*
  commentId: Overload:g3.IndexHashSet.Item
  name: Item
  nameWithType: IndexHashSet.Item
  fullName: g3.IndexHashSet.Item
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean

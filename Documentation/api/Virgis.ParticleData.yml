### YamlMime:ManagedReference
items:
- uid: Virgis.ParticleData
  commentId: T:Virgis.ParticleData
  id: ParticleData
  parent: Virgis
  children:
  - Virgis.ParticleData.bounds
  - Virgis.ParticleData.colors
  - Virgis.ParticleData.normals
  - Virgis.ParticleData.vertexCount
  - Virgis.ParticleData.vertices
  langs:
  - csharp
  - vb
  name: ParticleData
  nameWithType: ParticleData
  fullName: Virgis.ParticleData
  type: Class
  source:
    remote:
      path: Assets/Scripts/Basic Types/ParticleData.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: ParticleData
    path: ../Assets/Scripts/Basic Types/ParticleData.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  summary: "\nClass for holding PointCloud data as a Particle cloud\n\nNote - this extends FeatureCollection. This is a hack to allow typing. this type WILL NOT SAVE succesfully to GeoJSON as a FeatureCollection \n"
  example: []
  syntax:
    content: public class ParticleData
    content.vb: Public Class ParticleData
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Virgis.ParticleData.vertices
  commentId: F:Virgis.ParticleData.vertices
  id: vertices
  parent: Virgis.ParticleData
  langs:
  - csharp
  - vb
  name: vertices
  nameWithType: ParticleData.vertices
  fullName: Virgis.ParticleData.vertices
  type: Field
  source:
    remote:
      path: Assets/Scripts/Basic Types/ParticleData.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: vertices
    path: ../Assets/Scripts/Basic Types/ParticleData.cs
    startLine: 14
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public List<Vector3> vertices
    return:
      type: System.Collections.Generic.List{UnityEngine.Vector3}
    content.vb: Public vertices As List(Of Vector3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.ParticleData.normals
  commentId: F:Virgis.ParticleData.normals
  id: normals
  parent: Virgis.ParticleData
  langs:
  - csharp
  - vb
  name: normals
  nameWithType: ParticleData.normals
  fullName: Virgis.ParticleData.normals
  type: Field
  source:
    remote:
      path: Assets/Scripts/Basic Types/ParticleData.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: normals
    path: ../Assets/Scripts/Basic Types/ParticleData.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public List<Vector3> normals
    return:
      type: System.Collections.Generic.List{UnityEngine.Vector3}
    content.vb: Public normals As List(Of Vector3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.ParticleData.colors
  commentId: F:Virgis.ParticleData.colors
  id: colors
  parent: Virgis.ParticleData
  langs:
  - csharp
  - vb
  name: colors
  nameWithType: ParticleData.colors
  fullName: Virgis.ParticleData.colors
  type: Field
  source:
    remote:
      path: Assets/Scripts/Basic Types/ParticleData.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: colors
    path: ../Assets/Scripts/Basic Types/ParticleData.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public List<Color32> colors
    return:
      type: System.Collections.Generic.List{UnityEngine.Color32}
    content.vb: Public colors As List(Of Color32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.ParticleData.vertexCount
  commentId: F:Virgis.ParticleData.vertexCount
  id: vertexCount
  parent: Virgis.ParticleData
  langs:
  - csharp
  - vb
  name: vertexCount
  nameWithType: ParticleData.vertexCount
  fullName: Virgis.ParticleData.vertexCount
  type: Field
  source:
    remote:
      path: Assets/Scripts/Basic Types/ParticleData.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: vertexCount
    path: ../Assets/Scripts/Basic Types/ParticleData.cs
    startLine: 17
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public int vertexCount
    return:
      type: System.Int32
    content.vb: Public vertexCount As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.ParticleData.bounds
  commentId: F:Virgis.ParticleData.bounds
  id: bounds
  parent: Virgis.ParticleData
  langs:
  - csharp
  - vb
  name: bounds
  nameWithType: ParticleData.bounds
  fullName: Virgis.ParticleData.bounds
  type: Field
  source:
    remote:
      path: Assets/Scripts/Basic Types/ParticleData.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: bounds
    path: ../Assets/Scripts/Basic Types/ParticleData.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public Bounds bounds
    return:
      type: UnityEngine.Bounds
    content.vb: Public bounds As Bounds
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Virgis
  commentId: N:Virgis
  name: Virgis
  nameWithType: Virgis
  fullName: Virgis
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{UnityEngine.Vector3}
  commentId: T:System.Collections.Generic.List{UnityEngine.Vector3}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Vector3>
  nameWithType: List<Vector3>
  fullName: System.Collections.Generic.List<UnityEngine.Vector3>
  nameWithType.vb: List(Of Vector3)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Vector3)
  name.vb: List(Of Vector3)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List{UnityEngine.Color32}
  commentId: T:System.Collections.Generic.List{UnityEngine.Color32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Color32>
  nameWithType: List<Color32>
  fullName: System.Collections.Generic.List<UnityEngine.Color32>
  nameWithType.vb: List(Of Color32)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Color32)
  name.vb: List(Of Color32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Color32
    name: Color32
    nameWithType: Color32
    fullName: UnityEngine.Color32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Color32
    name: Color32
    nameWithType: Color32
    fullName: UnityEngine.Color32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: UnityEngine.Bounds
  commentId: T:UnityEngine.Bounds
  parent: UnityEngine
  isExternal: true
  name: Bounds
  nameWithType: Bounds
  fullName: UnityEngine.Bounds
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine

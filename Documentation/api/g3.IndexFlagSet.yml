### YamlMime:ManagedReference
items:
- uid: g3.IndexFlagSet
  commentId: T:g3.IndexFlagSet
  id: IndexFlagSet
  parent: g3
  children:
  - g3.IndexFlagSet.#ctor(System.Boolean,System.Int32)
  - g3.IndexFlagSet.#ctor(System.Int32,System.Int32)
  - g3.IndexFlagSet.Add(System.Int32)
  - g3.IndexFlagSet.Contains(System.Int32)
  - g3.IndexFlagSet.Count
  - g3.IndexFlagSet.GetEnumerator
  - g3.IndexFlagSet.Item(System.Int32)
  langs:
  - csharp
  - vb
  name: IndexFlagSet
  nameWithType: IndexFlagSet
  fullName: g3.IndexFlagSet
  type: Class
  source:
    remote:
      path: Assets/geometry3Sharp/core/Indexing.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IndexFlagSet
    path: ../Assets/geometry3Sharp/core/Indexing.cs
    startLine: 53
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nThis class provides a similar interface to BitArray, but can optionally\nuse a HashSet (or perhaps some other DS) if the fraction of the index space \nrequired is small\n"
  example: []
  syntax:
    content: 'public class IndexFlagSet : IEnumerable<int>, IEnumerable'
    content.vb: >-
      Public Class IndexFlagSet
          Implements IEnumerable(Of Integer), IEnumerable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: g3.IndexFlagSet.#ctor(System.Boolean,System.Int32)
  commentId: M:g3.IndexFlagSet.#ctor(System.Boolean,System.Int32)
  id: '#ctor(System.Boolean,System.Int32)'
  parent: g3.IndexFlagSet
  langs:
  - csharp
  - vb
  name: IndexFlagSet(Boolean, Int32)
  nameWithType: IndexFlagSet.IndexFlagSet(Boolean, Int32)
  fullName: g3.IndexFlagSet.IndexFlagSet(System.Boolean, System.Int32)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/core/Indexing.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/core/Indexing.cs
    startLine: 60
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IndexFlagSet(bool bForceSparse, int MaxIndex = -1)
    parameters:
    - id: bForceSparse
      type: System.Boolean
    - id: MaxIndex
      type: System.Int32
    content.vb: Public Sub New(bForceSparse As Boolean, MaxIndex As Integer = -1)
  overload: g3.IndexFlagSet.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.IndexFlagSet.#ctor(System.Int32,System.Int32)
  commentId: M:g3.IndexFlagSet.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: g3.IndexFlagSet
  langs:
  - csharp
  - vb
  name: IndexFlagSet(Int32, Int32)
  nameWithType: IndexFlagSet.IndexFlagSet(Int32, Int32)
  fullName: g3.IndexFlagSet.IndexFlagSet(System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/core/Indexing.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/core/Indexing.cs
    startLine: 70
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IndexFlagSet(int MaxIndex, int SubsetCountEst)
    parameters:
    - id: MaxIndex
      type: System.Int32
    - id: SubsetCountEst
      type: System.Int32
    content.vb: Public Sub New(MaxIndex As Integer, SubsetCountEst As Integer)
  overload: g3.IndexFlagSet.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.IndexFlagSet.Contains(System.Int32)
  commentId: M:g3.IndexFlagSet.Contains(System.Int32)
  id: Contains(System.Int32)
  parent: g3.IndexFlagSet
  langs:
  - csharp
  - vb
  name: Contains(Int32)
  nameWithType: IndexFlagSet.Contains(Int32)
  fullName: g3.IndexFlagSet.Contains(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/Indexing.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Contains
    path: ../Assets/geometry3Sharp/core/Indexing.cs
    startLine: 86
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nchecks if value i is true\n"
  example: []
  syntax:
    content: public bool Contains(int i)
    parameters:
    - id: i
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function Contains(i As Integer) As Boolean
  overload: g3.IndexFlagSet.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.IndexFlagSet.Add(System.Int32)
  commentId: M:g3.IndexFlagSet.Add(System.Int32)
  id: Add(System.Int32)
  parent: g3.IndexFlagSet
  langs:
  - csharp
  - vb
  name: Add(Int32)
  nameWithType: IndexFlagSet.Add(Int32)
  fullName: g3.IndexFlagSet.Add(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/Indexing.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Add
    path: ../Assets/geometry3Sharp/core/Indexing.cs
    startLine: 94
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nsets value i to true\n"
  example: []
  syntax:
    content: public void Add(int i)
    parameters:
    - id: i
      type: System.Int32
    content.vb: Public Sub Add(i As Integer)
  overload: g3.IndexFlagSet.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.IndexFlagSet.Count
  commentId: P:g3.IndexFlagSet.Count
  id: Count
  parent: g3.IndexFlagSet
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: IndexFlagSet.Count
  fullName: g3.IndexFlagSet.Count
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/core/Indexing.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Count
    path: ../Assets/geometry3Sharp/core/Indexing.cs
    startLine: 102
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nReturns number of true values in set\n"
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: g3.IndexFlagSet.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.IndexFlagSet.Item(System.Int32)
  commentId: P:g3.IndexFlagSet.Item(System.Int32)
  id: Item(System.Int32)
  parent: g3.IndexFlagSet
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: IndexFlagSet.Item[Int32]
  fullName: g3.IndexFlagSet.Item[System.Int32]
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/core/Indexing.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: this[]
    path: ../Assets/geometry3Sharp/core/Indexing.cs
    startLine: 112
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool this[int key] { get; set; }
    parameters:
    - id: key
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Property Item(key As Integer) As Boolean
  overload: g3.IndexFlagSet.Item*
  nameWithType.vb: IndexFlagSet.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: g3.IndexFlagSet.Item(System.Int32)
  name.vb: Item(Int32)
- uid: g3.IndexFlagSet.GetEnumerator
  commentId: M:g3.IndexFlagSet.GetEnumerator
  id: GetEnumerator
  parent: g3.IndexFlagSet
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: IndexFlagSet.GetEnumerator()
  fullName: g3.IndexFlagSet.GetEnumerator()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/Indexing.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GetEnumerator
    path: ../Assets/geometry3Sharp/core/Indexing.cs
    startLine: 138
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nenumerate over indices w/ value = true\n"
  example: []
  syntax:
    content: public IEnumerator<int> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.Int32}
    content.vb: Public Function GetEnumerator As IEnumerator(Of Integer)
  overload: g3.IndexFlagSet.GetEnumerator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: g3.IndexFlagSet.#ctor*
  commentId: Overload:g3.IndexFlagSet.#ctor
  name: IndexFlagSet
  nameWithType: IndexFlagSet.IndexFlagSet
  fullName: g3.IndexFlagSet.IndexFlagSet
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: g3.IndexFlagSet.Contains*
  commentId: Overload:g3.IndexFlagSet.Contains
  name: Contains
  nameWithType: IndexFlagSet.Contains
  fullName: g3.IndexFlagSet.Contains
- uid: g3.IndexFlagSet.Add*
  commentId: Overload:g3.IndexFlagSet.Add
  name: Add
  nameWithType: IndexFlagSet.Add
  fullName: g3.IndexFlagSet.Add
- uid: g3.IndexFlagSet.Count*
  commentId: Overload:g3.IndexFlagSet.Count
  name: Count
  nameWithType: IndexFlagSet.Count
  fullName: g3.IndexFlagSet.Count
- uid: g3.IndexFlagSet.Item*
  commentId: Overload:g3.IndexFlagSet.Item
  name: Item
  nameWithType: IndexFlagSet.Item
  fullName: g3.IndexFlagSet.Item
- uid: g3.IndexFlagSet.GetEnumerator*
  commentId: Overload:g3.IndexFlagSet.GetEnumerator
  name: GetEnumerator
  nameWithType: IndexFlagSet.GetEnumerator
  fullName: g3.IndexFlagSet.GetEnumerator
- uid: System.Collections.Generic.IEnumerator{System.Int32}
  commentId: T:System.Collections.Generic.IEnumerator{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<Int32>
  nameWithType: IEnumerator<Int32>
  fullName: System.Collections.Generic.IEnumerator<System.Int32>
  nameWithType.vb: IEnumerator(Of Int32)
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Int32)
  name.vb: IEnumerator(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic

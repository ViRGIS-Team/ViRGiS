### YamlMime:ManagedReference
items:
- uid: Virgis.DataPlotter
  commentId: T:Virgis.DataPlotter
  id: DataPlotter
  parent: Virgis
  children:
  - Virgis.DataPlotter._addFeature(UnityEngine.Vector3[])
  - Virgis.DataPlotter._checkpoint
  - Virgis.DataPlotter._draw
  - Virgis.DataPlotter._init(Project.RecordSet)
  - Virgis.DataPlotter._save
  - Virgis.DataPlotter.CubePrefab
  - Virgis.DataPlotter.CylinderPrefab
  - Virgis.DataPlotter.GetFeatureShape
  - Virgis.DataPlotter.LabelPrefab
  - Virgis.DataPlotter.MoveAxis(Virgis.MoveArgs)
  - Virgis.DataPlotter.SpherePrefab
  - Virgis.DataPlotter.Translate(Virgis.MoveArgs)
  langs:
  - csharp
  - vb
  name: DataPlotter
  nameWithType: DataPlotter
  fullName: Virgis.DataPlotter
  type: Class
  source:
    remote:
      path: Assets/Scripts/Adapters/DataPlotter.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: DataPlotter
    path: ../Assets/Scripts/Adapters/DataPlotter.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: 'public class DataPlotter : Layer<RecordSet, CSVData>, ILayer'
    content.vb: >-
      Public Class DataPlotter
          Inherits Layer(Of RecordSet, CSVData)
          Implements ILayer
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  implements:
  - Virgis.ILayer
  inheritedMembers:
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}.layer
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}.features
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}.changed
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}._id
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}._visible
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}._editable
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}.Init(Project.RecordSet)
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}._init(Project.RecordSet)
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}.AddFeature(UnityEngine.Vector3[])
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}._addFeature(UnityEngine.Vector3[])
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}.Draw
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}._draw
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}.CheckPoint
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}._checkpoint
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}.Save
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}._save
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}.Translate(Virgis.MoveArgs)
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}.MoveAxis(Virgis.MoveArgs)
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}.StartEditSession
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}.ExitEditSession(System.Boolean)
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}.Selected(Virgis.SelectionTypes)
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}.UnSelected(Virgis.SelectionTypes)
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}.GetClosest(UnityEngine.Vector3,System.Guid[])
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}.GetFeature(System.Guid)
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}.GetId
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}.GetMetadata
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}.GetFeatureShape
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}.SetVisible(System.Boolean)
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}.IsVisible
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}.SetEditable(System.Boolean)
  - Virgis.Layer{Project.RecordSet,Virgis.CSVData}.IsEditable
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Virgis.DataPlotter.SpherePrefab
  commentId: F:Virgis.DataPlotter.SpherePrefab
  id: SpherePrefab
  parent: Virgis.DataPlotter
  langs:
  - csharp
  - vb
  name: SpherePrefab
  nameWithType: DataPlotter.SpherePrefab
  fullName: Virgis.DataPlotter.SpherePrefab
  type: Field
  source:
    remote:
      path: Assets/Scripts/Adapters/DataPlotter.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: SpherePrefab
    path: ../Assets/Scripts/Adapters/DataPlotter.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public GameObject SpherePrefab
    return:
      type: UnityEngine.GameObject
    content.vb: Public SpherePrefab As GameObject
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.DataPlotter.CubePrefab
  commentId: F:Virgis.DataPlotter.CubePrefab
  id: CubePrefab
  parent: Virgis.DataPlotter
  langs:
  - csharp
  - vb
  name: CubePrefab
  nameWithType: DataPlotter.CubePrefab
  fullName: Virgis.DataPlotter.CubePrefab
  type: Field
  source:
    remote:
      path: Assets/Scripts/Adapters/DataPlotter.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: CubePrefab
    path: ../Assets/Scripts/Adapters/DataPlotter.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public GameObject CubePrefab
    return:
      type: UnityEngine.GameObject
    content.vb: Public CubePrefab As GameObject
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.DataPlotter.CylinderPrefab
  commentId: F:Virgis.DataPlotter.CylinderPrefab
  id: CylinderPrefab
  parent: Virgis.DataPlotter
  langs:
  - csharp
  - vb
  name: CylinderPrefab
  nameWithType: DataPlotter.CylinderPrefab
  fullName: Virgis.DataPlotter.CylinderPrefab
  type: Field
  source:
    remote:
      path: Assets/Scripts/Adapters/DataPlotter.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: CylinderPrefab
    path: ../Assets/Scripts/Adapters/DataPlotter.cs
    startLine: 17
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public GameObject CylinderPrefab
    return:
      type: UnityEngine.GameObject
    content.vb: Public CylinderPrefab As GameObject
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.DataPlotter.LabelPrefab
  commentId: F:Virgis.DataPlotter.LabelPrefab
  id: LabelPrefab
  parent: Virgis.DataPlotter
  langs:
  - csharp
  - vb
  name: LabelPrefab
  nameWithType: DataPlotter.LabelPrefab
  fullName: Virgis.DataPlotter.LabelPrefab
  type: Field
  source:
    remote:
      path: Assets/Scripts/Adapters/DataPlotter.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: LabelPrefab
    path: ../Assets/Scripts/Adapters/DataPlotter.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public GameObject LabelPrefab
    return:
      type: UnityEngine.GameObject
    content.vb: Public LabelPrefab As GameObject
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.DataPlotter._init(Project.RecordSet)
  commentId: M:Virgis.DataPlotter._init(Project.RecordSet)
  id: _init(Project.RecordSet)
  parent: Virgis.DataPlotter
  langs:
  - csharp
  - vb
  name: _init(RecordSet)
  nameWithType: DataPlotter._init(RecordSet)
  fullName: Virgis.DataPlotter._init(Project.RecordSet)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Adapters/DataPlotter.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: _init
    path: ../Assets/Scripts/Adapters/DataPlotter.cs
    startLine: 26
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: protected override Task _init(RecordSet layer)
    parameters:
    - id: layer
      type: Project.RecordSet
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Overrides Function _init(layer As RecordSet) As Task
  overridden: Virgis.Layer{Project.RecordSet,Virgis.CSVData}._init(Project.RecordSet)
  overload: Virgis.DataPlotter._init*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Virgis.DataPlotter._checkpoint
  commentId: M:Virgis.DataPlotter._checkpoint
  id: _checkpoint
  parent: Virgis.DataPlotter
  langs:
  - csharp
  - vb
  name: _checkpoint()
  nameWithType: DataPlotter._checkpoint()
  fullName: Virgis.DataPlotter._checkpoint()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Adapters/DataPlotter.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: _checkpoint
    path: ../Assets/Scripts/Adapters/DataPlotter.cs
    startLine: 33
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: protected override void _checkpoint()
    content.vb: Protected Overrides Sub _checkpoint
  overridden: Virgis.Layer{Project.RecordSet,Virgis.CSVData}._checkpoint
  overload: Virgis.DataPlotter._checkpoint*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Virgis.DataPlotter._draw
  commentId: M:Virgis.DataPlotter._draw
  id: _draw
  parent: Virgis.DataPlotter
  langs:
  - csharp
  - vb
  name: _draw()
  nameWithType: DataPlotter._draw()
  fullName: Virgis.DataPlotter._draw()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Adapters/DataPlotter.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: _draw
    path: ../Assets/Scripts/Adapters/DataPlotter.cs
    startLine: 37
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: protected override void _draw()
    content.vb: Protected Overrides Sub _draw
  overridden: Virgis.Layer{Project.RecordSet,Virgis.CSVData}._draw
  overload: Virgis.DataPlotter._draw*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Virgis.DataPlotter._addFeature(UnityEngine.Vector3[])
  commentId: M:Virgis.DataPlotter._addFeature(UnityEngine.Vector3[])
  id: _addFeature(UnityEngine.Vector3[])
  parent: Virgis.DataPlotter
  langs:
  - csharp
  - vb
  name: _addFeature(Vector3[])
  nameWithType: DataPlotter._addFeature(Vector3[])
  fullName: Virgis.DataPlotter._addFeature(UnityEngine.Vector3[])
  type: Method
  source:
    remote:
      path: Assets/Scripts/Adapters/DataPlotter.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: _addFeature
    path: ../Assets/Scripts/Adapters/DataPlotter.cs
    startLine: 100
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: protected override VirgisComponent _addFeature(Vector3[] geometry)
    parameters:
    - id: geometry
      type: UnityEngine.Vector3[]
    return:
      type: Virgis.VirgisComponent
    content.vb: Protected Overrides Function _addFeature(geometry As Vector3()) As VirgisComponent
  overridden: Virgis.Layer{Project.RecordSet,Virgis.CSVData}._addFeature(UnityEngine.Vector3[])
  overload: Virgis.DataPlotter._addFeature*
  nameWithType.vb: DataPlotter._addFeature(Vector3())
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Virgis.DataPlotter._addFeature(UnityEngine.Vector3())
  name.vb: _addFeature(Vector3())
- uid: Virgis.DataPlotter._save
  commentId: M:Virgis.DataPlotter._save
  id: _save
  parent: Virgis.DataPlotter
  langs:
  - csharp
  - vb
  name: _save()
  nameWithType: DataPlotter._save()
  fullName: Virgis.DataPlotter._save()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Adapters/DataPlotter.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: _save
    path: ../Assets/Scripts/Adapters/DataPlotter.cs
    startLine: 104
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: protected override void _save()
    content.vb: Protected Overrides Sub _save
  overridden: Virgis.Layer{Project.RecordSet,Virgis.CSVData}._save
  overload: Virgis.DataPlotter._save*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Virgis.DataPlotter.MoveAxis(Virgis.MoveArgs)
  commentId: M:Virgis.DataPlotter.MoveAxis(Virgis.MoveArgs)
  id: MoveAxis(Virgis.MoveArgs)
  parent: Virgis.DataPlotter
  langs:
  - csharp
  - vb
  name: MoveAxis(MoveArgs)
  nameWithType: DataPlotter.MoveAxis(MoveArgs)
  fullName: Virgis.DataPlotter.MoveAxis(Virgis.MoveArgs)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Adapters/DataPlotter.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: MoveAxis
    path: ../Assets/Scripts/Adapters/DataPlotter.cs
    startLine: 108
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public override void MoveAxis(MoveArgs args)
    parameters:
    - id: args
      type: Virgis.MoveArgs
    content.vb: Public Overrides Sub MoveAxis(args As MoveArgs)
  overridden: Virgis.Layer{Project.RecordSet,Virgis.CSVData}.MoveAxis(Virgis.MoveArgs)
  overload: Virgis.DataPlotter.MoveAxis*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Virgis.DataPlotter.Translate(Virgis.MoveArgs)
  commentId: M:Virgis.DataPlotter.Translate(Virgis.MoveArgs)
  id: Translate(Virgis.MoveArgs)
  parent: Virgis.DataPlotter
  langs:
  - csharp
  - vb
  name: Translate(MoveArgs)
  nameWithType: DataPlotter.Translate(MoveArgs)
  fullName: Virgis.DataPlotter.Translate(Virgis.MoveArgs)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Adapters/DataPlotter.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: Translate
    path: ../Assets/Scripts/Adapters/DataPlotter.cs
    startLine: 112
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public override void Translate(MoveArgs args)
    parameters:
    - id: args
      type: Virgis.MoveArgs
    content.vb: Public Overrides Sub Translate(args As MoveArgs)
  overridden: Virgis.Layer{Project.RecordSet,Virgis.CSVData}.Translate(Virgis.MoveArgs)
  overload: Virgis.DataPlotter.Translate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Virgis.DataPlotter.GetFeatureShape
  commentId: M:Virgis.DataPlotter.GetFeatureShape
  id: GetFeatureShape
  parent: Virgis.DataPlotter
  langs:
  - csharp
  - vb
  name: GetFeatureShape()
  nameWithType: DataPlotter.GetFeatureShape()
  fullName: Virgis.DataPlotter.GetFeatureShape()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Adapters/DataPlotter.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: GetFeatureShape
    path: ../Assets/Scripts/Adapters/DataPlotter.cs
    startLine: 116
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public override GameObject GetFeatureShape()
    return:
      type: UnityEngine.GameObject
    content.vb: Public Overrides Function GetFeatureShape As GameObject
  overridden: Virgis.Layer{Project.RecordSet,Virgis.CSVData}.GetFeatureShape
  overload: Virgis.DataPlotter.GetFeatureShape*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Virgis
  commentId: N:Virgis
  name: Virgis
  nameWithType: Virgis
  fullName: Virgis
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  commentId: T:Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  parent: Virgis
  definition: Virgis.Layer`2
  name: Layer<RecordSet, CSVData>
  nameWithType: Layer<RecordSet, CSVData>
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>
  nameWithType.vb: Layer(Of RecordSet, CSVData)
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData)
  name.vb: Layer(Of RecordSet, CSVData)
  spec.csharp:
  - uid: Virgis.Layer`2
    name: Layer
    nameWithType: Layer
    fullName: Virgis.Layer
  - name: <
    nameWithType: <
    fullName: <
  - uid: Project.RecordSet
    name: RecordSet
    nameWithType: RecordSet
    fullName: Project.RecordSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Virgis.CSVData
    name: CSVData
    nameWithType: CSVData
    fullName: Virgis.CSVData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Virgis.Layer`2
    name: Layer
    nameWithType: Layer
    fullName: Virgis.Layer
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Project.RecordSet
    name: RecordSet
    nameWithType: RecordSet
    fullName: Project.RecordSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Virgis.CSVData
    name: CSVData
    nameWithType: CSVData
    fullName: Virgis.CSVData
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.ILayer
  commentId: T:Virgis.ILayer
  parent: Virgis
  name: ILayer
  nameWithType: ILayer
  fullName: Virgis.ILayer
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}.layer
  commentId: F:Virgis.Layer{Project.RecordSet,Virgis.CSVData}.layer
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2.layer
  name: layer
  nameWithType: Layer<RecordSet, CSVData>.layer
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.layer
  nameWithType.vb: Layer(Of RecordSet, CSVData).layer
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).layer
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}.features
  commentId: F:Virgis.Layer{Project.RecordSet,Virgis.CSVData}.features
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2.features
  name: features
  nameWithType: Layer<RecordSet, CSVData>.features
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.features
  nameWithType.vb: Layer(Of RecordSet, CSVData).features
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).features
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}.changed
  commentId: F:Virgis.Layer{Project.RecordSet,Virgis.CSVData}.changed
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2.changed
  name: changed
  nameWithType: Layer<RecordSet, CSVData>.changed
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.changed
  nameWithType.vb: Layer(Of RecordSet, CSVData).changed
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).changed
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}._id
  commentId: F:Virgis.Layer{Project.RecordSet,Virgis.CSVData}._id
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2._id
  name: _id
  nameWithType: Layer<RecordSet, CSVData>._id
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>._id
  nameWithType.vb: Layer(Of RecordSet, CSVData)._id
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData)._id
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}._visible
  commentId: F:Virgis.Layer{Project.RecordSet,Virgis.CSVData}._visible
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2._visible
  name: _visible
  nameWithType: Layer<RecordSet, CSVData>._visible
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>._visible
  nameWithType.vb: Layer(Of RecordSet, CSVData)._visible
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData)._visible
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}._editable
  commentId: F:Virgis.Layer{Project.RecordSet,Virgis.CSVData}._editable
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2._editable
  name: _editable
  nameWithType: Layer<RecordSet, CSVData>._editable
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>._editable
  nameWithType.vb: Layer(Of RecordSet, CSVData)._editable
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData)._editable
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}.Init(Project.RecordSet)
  commentId: M:Virgis.Layer{Project.RecordSet,Virgis.CSVData}.Init(Project.RecordSet)
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2.Init(`0)
  name: Init(RecordSet)
  nameWithType: Layer<RecordSet, CSVData>.Init(RecordSet)
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.Init(Project.RecordSet)
  nameWithType.vb: Layer(Of RecordSet, CSVData).Init(RecordSet)
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).Init(Project.RecordSet)
  spec.csharp:
  - uid: Virgis.Layer`2.Init(`0)
    name: Init
    nameWithType: Layer<RecordSet, CSVData>.Init
    fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Project.RecordSet
    name: RecordSet
    nameWithType: RecordSet
    fullName: Project.RecordSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.Init(`0)
    name: Init
    nameWithType: Layer(Of RecordSet, CSVData).Init
    fullName: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Project.RecordSet
    name: RecordSet
    nameWithType: RecordSet
    fullName: Project.RecordSet
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}._init(Project.RecordSet)
  commentId: M:Virgis.Layer{Project.RecordSet,Virgis.CSVData}._init(Project.RecordSet)
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2._init(`0)
  name: _init(RecordSet)
  nameWithType: Layer<RecordSet, CSVData>._init(RecordSet)
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>._init(Project.RecordSet)
  nameWithType.vb: Layer(Of RecordSet, CSVData)._init(RecordSet)
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData)._init(Project.RecordSet)
  spec.csharp:
  - uid: Virgis.Layer`2._init(`0)
    name: _init
    nameWithType: Layer<RecordSet, CSVData>._init
    fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>._init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Project.RecordSet
    name: RecordSet
    nameWithType: RecordSet
    fullName: Project.RecordSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2._init(`0)
    name: _init
    nameWithType: Layer(Of RecordSet, CSVData)._init
    fullName: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData)._init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Project.RecordSet
    name: RecordSet
    nameWithType: RecordSet
    fullName: Project.RecordSet
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}.AddFeature(UnityEngine.Vector3[])
  commentId: M:Virgis.Layer{Project.RecordSet,Virgis.CSVData}.AddFeature(UnityEngine.Vector3[])
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2.AddFeature(UnityEngine.Vector3[])
  name: AddFeature(Vector3[])
  nameWithType: Layer<RecordSet, CSVData>.AddFeature(Vector3[])
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.AddFeature(UnityEngine.Vector3[])
  nameWithType.vb: Layer(Of RecordSet, CSVData).AddFeature(Vector3())
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).AddFeature(UnityEngine.Vector3())
  name.vb: AddFeature(Vector3())
  spec.csharp:
  - uid: Virgis.Layer`2.AddFeature(UnityEngine.Vector3[])
    name: AddFeature
    nameWithType: Layer<RecordSet, CSVData>.AddFeature
    fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.AddFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.AddFeature(UnityEngine.Vector3[])
    name: AddFeature
    nameWithType: Layer(Of RecordSet, CSVData).AddFeature
    fullName: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).AddFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}._addFeature(UnityEngine.Vector3[])
  commentId: M:Virgis.Layer{Project.RecordSet,Virgis.CSVData}._addFeature(UnityEngine.Vector3[])
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2._addFeature(UnityEngine.Vector3[])
  name: _addFeature(Vector3[])
  nameWithType: Layer<RecordSet, CSVData>._addFeature(Vector3[])
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>._addFeature(UnityEngine.Vector3[])
  nameWithType.vb: Layer(Of RecordSet, CSVData)._addFeature(Vector3())
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData)._addFeature(UnityEngine.Vector3())
  name.vb: _addFeature(Vector3())
  spec.csharp:
  - uid: Virgis.Layer`2._addFeature(UnityEngine.Vector3[])
    name: _addFeature
    nameWithType: Layer<RecordSet, CSVData>._addFeature
    fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>._addFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2._addFeature(UnityEngine.Vector3[])
    name: _addFeature
    nameWithType: Layer(Of RecordSet, CSVData)._addFeature
    fullName: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData)._addFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}.Draw
  commentId: M:Virgis.Layer{Project.RecordSet,Virgis.CSVData}.Draw
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2.Draw
  name: Draw()
  nameWithType: Layer<RecordSet, CSVData>.Draw()
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.Draw()
  nameWithType.vb: Layer(Of RecordSet, CSVData).Draw()
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).Draw()
  spec.csharp:
  - uid: Virgis.Layer`2.Draw
    name: Draw
    nameWithType: Layer<RecordSet, CSVData>.Draw
    fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.Draw
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.Draw
    name: Draw
    nameWithType: Layer(Of RecordSet, CSVData).Draw
    fullName: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).Draw
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}._draw
  commentId: M:Virgis.Layer{Project.RecordSet,Virgis.CSVData}._draw
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2._draw
  name: _draw()
  nameWithType: Layer<RecordSet, CSVData>._draw()
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>._draw()
  nameWithType.vb: Layer(Of RecordSet, CSVData)._draw()
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData)._draw()
  spec.csharp:
  - uid: Virgis.Layer`2._draw
    name: _draw
    nameWithType: Layer<RecordSet, CSVData>._draw
    fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>._draw
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2._draw
    name: _draw
    nameWithType: Layer(Of RecordSet, CSVData)._draw
    fullName: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData)._draw
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}.CheckPoint
  commentId: M:Virgis.Layer{Project.RecordSet,Virgis.CSVData}.CheckPoint
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2.CheckPoint
  name: CheckPoint()
  nameWithType: Layer<RecordSet, CSVData>.CheckPoint()
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.CheckPoint()
  nameWithType.vb: Layer(Of RecordSet, CSVData).CheckPoint()
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).CheckPoint()
  spec.csharp:
  - uid: Virgis.Layer`2.CheckPoint
    name: CheckPoint
    nameWithType: Layer<RecordSet, CSVData>.CheckPoint
    fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.CheckPoint
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.CheckPoint
    name: CheckPoint
    nameWithType: Layer(Of RecordSet, CSVData).CheckPoint
    fullName: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).CheckPoint
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}._checkpoint
  commentId: M:Virgis.Layer{Project.RecordSet,Virgis.CSVData}._checkpoint
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2._checkpoint
  name: _checkpoint()
  nameWithType: Layer<RecordSet, CSVData>._checkpoint()
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>._checkpoint()
  nameWithType.vb: Layer(Of RecordSet, CSVData)._checkpoint()
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData)._checkpoint()
  spec.csharp:
  - uid: Virgis.Layer`2._checkpoint
    name: _checkpoint
    nameWithType: Layer<RecordSet, CSVData>._checkpoint
    fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>._checkpoint
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2._checkpoint
    name: _checkpoint
    nameWithType: Layer(Of RecordSet, CSVData)._checkpoint
    fullName: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData)._checkpoint
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}.Save
  commentId: M:Virgis.Layer{Project.RecordSet,Virgis.CSVData}.Save
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2.Save
  name: Save()
  nameWithType: Layer<RecordSet, CSVData>.Save()
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.Save()
  nameWithType.vb: Layer(Of RecordSet, CSVData).Save()
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).Save()
  spec.csharp:
  - uid: Virgis.Layer`2.Save
    name: Save
    nameWithType: Layer<RecordSet, CSVData>.Save
    fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.Save
    name: Save
    nameWithType: Layer(Of RecordSet, CSVData).Save
    fullName: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}._save
  commentId: M:Virgis.Layer{Project.RecordSet,Virgis.CSVData}._save
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2._save
  name: _save()
  nameWithType: Layer<RecordSet, CSVData>._save()
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>._save()
  nameWithType.vb: Layer(Of RecordSet, CSVData)._save()
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData)._save()
  spec.csharp:
  - uid: Virgis.Layer`2._save
    name: _save
    nameWithType: Layer<RecordSet, CSVData>._save
    fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>._save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2._save
    name: _save
    nameWithType: Layer(Of RecordSet, CSVData)._save
    fullName: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData)._save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}.Translate(Virgis.MoveArgs)
  commentId: M:Virgis.Layer{Project.RecordSet,Virgis.CSVData}.Translate(Virgis.MoveArgs)
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2.Translate(Virgis.MoveArgs)
  name: Translate(MoveArgs)
  nameWithType: Layer<RecordSet, CSVData>.Translate(MoveArgs)
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.Translate(Virgis.MoveArgs)
  nameWithType.vb: Layer(Of RecordSet, CSVData).Translate(MoveArgs)
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).Translate(Virgis.MoveArgs)
  spec.csharp:
  - uid: Virgis.Layer`2.Translate(Virgis.MoveArgs)
    name: Translate
    nameWithType: Layer<RecordSet, CSVData>.Translate
    fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.Translate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.Translate(Virgis.MoveArgs)
    name: Translate
    nameWithType: Layer(Of RecordSet, CSVData).Translate
    fullName: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).Translate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}.MoveAxis(Virgis.MoveArgs)
  commentId: M:Virgis.Layer{Project.RecordSet,Virgis.CSVData}.MoveAxis(Virgis.MoveArgs)
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2.MoveAxis(Virgis.MoveArgs)
  name: MoveAxis(MoveArgs)
  nameWithType: Layer<RecordSet, CSVData>.MoveAxis(MoveArgs)
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.MoveAxis(Virgis.MoveArgs)
  nameWithType.vb: Layer(Of RecordSet, CSVData).MoveAxis(MoveArgs)
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).MoveAxis(Virgis.MoveArgs)
  spec.csharp:
  - uid: Virgis.Layer`2.MoveAxis(Virgis.MoveArgs)
    name: MoveAxis
    nameWithType: Layer<RecordSet, CSVData>.MoveAxis
    fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.MoveAxis
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.MoveAxis(Virgis.MoveArgs)
    name: MoveAxis
    nameWithType: Layer(Of RecordSet, CSVData).MoveAxis
    fullName: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).MoveAxis
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}.StartEditSession
  commentId: M:Virgis.Layer{Project.RecordSet,Virgis.CSVData}.StartEditSession
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2.StartEditSession
  name: StartEditSession()
  nameWithType: Layer<RecordSet, CSVData>.StartEditSession()
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.StartEditSession()
  nameWithType.vb: Layer(Of RecordSet, CSVData).StartEditSession()
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).StartEditSession()
  spec.csharp:
  - uid: Virgis.Layer`2.StartEditSession
    name: StartEditSession
    nameWithType: Layer<RecordSet, CSVData>.StartEditSession
    fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.StartEditSession
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.StartEditSession
    name: StartEditSession
    nameWithType: Layer(Of RecordSet, CSVData).StartEditSession
    fullName: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).StartEditSession
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}.ExitEditSession(System.Boolean)
  commentId: M:Virgis.Layer{Project.RecordSet,Virgis.CSVData}.ExitEditSession(System.Boolean)
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2.ExitEditSession(System.Boolean)
  name: ExitEditSession(Boolean)
  nameWithType: Layer<RecordSet, CSVData>.ExitEditSession(Boolean)
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.ExitEditSession(System.Boolean)
  nameWithType.vb: Layer(Of RecordSet, CSVData).ExitEditSession(Boolean)
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).ExitEditSession(System.Boolean)
  spec.csharp:
  - uid: Virgis.Layer`2.ExitEditSession(System.Boolean)
    name: ExitEditSession
    nameWithType: Layer<RecordSet, CSVData>.ExitEditSession
    fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.ExitEditSession
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.ExitEditSession(System.Boolean)
    name: ExitEditSession
    nameWithType: Layer(Of RecordSet, CSVData).ExitEditSession
    fullName: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).ExitEditSession
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}.Selected(Virgis.SelectionTypes)
  commentId: M:Virgis.Layer{Project.RecordSet,Virgis.CSVData}.Selected(Virgis.SelectionTypes)
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2.Selected(Virgis.SelectionTypes)
  name: Selected(SelectionTypes)
  nameWithType: Layer<RecordSet, CSVData>.Selected(SelectionTypes)
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.Selected(Virgis.SelectionTypes)
  nameWithType.vb: Layer(Of RecordSet, CSVData).Selected(SelectionTypes)
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).Selected(Virgis.SelectionTypes)
  spec.csharp:
  - uid: Virgis.Layer`2.Selected(Virgis.SelectionTypes)
    name: Selected
    nameWithType: Layer<RecordSet, CSVData>.Selected
    fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.Selected
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.SelectionTypes
    name: SelectionTypes
    nameWithType: SelectionTypes
    fullName: Virgis.SelectionTypes
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.Selected(Virgis.SelectionTypes)
    name: Selected
    nameWithType: Layer(Of RecordSet, CSVData).Selected
    fullName: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).Selected
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.SelectionTypes
    name: SelectionTypes
    nameWithType: SelectionTypes
    fullName: Virgis.SelectionTypes
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}.UnSelected(Virgis.SelectionTypes)
  commentId: M:Virgis.Layer{Project.RecordSet,Virgis.CSVData}.UnSelected(Virgis.SelectionTypes)
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2.UnSelected(Virgis.SelectionTypes)
  name: UnSelected(SelectionTypes)
  nameWithType: Layer<RecordSet, CSVData>.UnSelected(SelectionTypes)
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.UnSelected(Virgis.SelectionTypes)
  nameWithType.vb: Layer(Of RecordSet, CSVData).UnSelected(SelectionTypes)
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).UnSelected(Virgis.SelectionTypes)
  spec.csharp:
  - uid: Virgis.Layer`2.UnSelected(Virgis.SelectionTypes)
    name: UnSelected
    nameWithType: Layer<RecordSet, CSVData>.UnSelected
    fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.UnSelected
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.SelectionTypes
    name: SelectionTypes
    nameWithType: SelectionTypes
    fullName: Virgis.SelectionTypes
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.UnSelected(Virgis.SelectionTypes)
    name: UnSelected
    nameWithType: Layer(Of RecordSet, CSVData).UnSelected
    fullName: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).UnSelected
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.SelectionTypes
    name: SelectionTypes
    nameWithType: SelectionTypes
    fullName: Virgis.SelectionTypes
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}.GetClosest(UnityEngine.Vector3,System.Guid[])
  commentId: M:Virgis.Layer{Project.RecordSet,Virgis.CSVData}.GetClosest(UnityEngine.Vector3,System.Guid[])
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2.GetClosest(UnityEngine.Vector3,System.Guid[])
  name: GetClosest(Vector3, Guid[])
  nameWithType: Layer<RecordSet, CSVData>.GetClosest(Vector3, Guid[])
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.GetClosest(UnityEngine.Vector3, System.Guid[])
  nameWithType.vb: Layer(Of RecordSet, CSVData).GetClosest(Vector3, Guid())
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).GetClosest(UnityEngine.Vector3, System.Guid())
  name.vb: GetClosest(Vector3, Guid())
  spec.csharp:
  - uid: Virgis.Layer`2.GetClosest(UnityEngine.Vector3,System.Guid[])
    name: GetClosest
    nameWithType: Layer<RecordSet, CSVData>.GetClosest
    fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.GetClosest
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.GetClosest(UnityEngine.Vector3,System.Guid[])
    name: GetClosest
    nameWithType: Layer(Of RecordSet, CSVData).GetClosest
    fullName: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).GetClosest
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}.GetFeature(System.Guid)
  commentId: M:Virgis.Layer{Project.RecordSet,Virgis.CSVData}.GetFeature(System.Guid)
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2.GetFeature(System.Guid)
  name: GetFeature(Guid)
  nameWithType: Layer<RecordSet, CSVData>.GetFeature(Guid)
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.GetFeature(System.Guid)
  nameWithType.vb: Layer(Of RecordSet, CSVData).GetFeature(Guid)
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).GetFeature(System.Guid)
  spec.csharp:
  - uid: Virgis.Layer`2.GetFeature(System.Guid)
    name: GetFeature
    nameWithType: Layer<RecordSet, CSVData>.GetFeature
    fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.GetFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.GetFeature(System.Guid)
    name: GetFeature
    nameWithType: Layer(Of RecordSet, CSVData).GetFeature
    fullName: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).GetFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}.GetId
  commentId: M:Virgis.Layer{Project.RecordSet,Virgis.CSVData}.GetId
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2.GetId
  name: GetId()
  nameWithType: Layer<RecordSet, CSVData>.GetId()
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.GetId()
  nameWithType.vb: Layer(Of RecordSet, CSVData).GetId()
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).GetId()
  spec.csharp:
  - uid: Virgis.Layer`2.GetId
    name: GetId
    nameWithType: Layer<RecordSet, CSVData>.GetId
    fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.GetId
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.GetId
    name: GetId
    nameWithType: Layer(Of RecordSet, CSVData).GetId
    fullName: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).GetId
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}.GetMetadata
  commentId: M:Virgis.Layer{Project.RecordSet,Virgis.CSVData}.GetMetadata
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2.GetMetadata
  name: GetMetadata()
  nameWithType: Layer<RecordSet, CSVData>.GetMetadata()
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.GetMetadata()
  nameWithType.vb: Layer(Of RecordSet, CSVData).GetMetadata()
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).GetMetadata()
  spec.csharp:
  - uid: Virgis.Layer`2.GetMetadata
    name: GetMetadata
    nameWithType: Layer<RecordSet, CSVData>.GetMetadata
    fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.GetMetadata
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.GetMetadata
    name: GetMetadata
    nameWithType: Layer(Of RecordSet, CSVData).GetMetadata
    fullName: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).GetMetadata
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}.GetFeatureShape
  commentId: M:Virgis.Layer{Project.RecordSet,Virgis.CSVData}.GetFeatureShape
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2.GetFeatureShape
  name: GetFeatureShape()
  nameWithType: Layer<RecordSet, CSVData>.GetFeatureShape()
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.GetFeatureShape()
  nameWithType.vb: Layer(Of RecordSet, CSVData).GetFeatureShape()
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).GetFeatureShape()
  spec.csharp:
  - uid: Virgis.Layer`2.GetFeatureShape
    name: GetFeatureShape
    nameWithType: Layer<RecordSet, CSVData>.GetFeatureShape
    fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.GetFeatureShape
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.GetFeatureShape
    name: GetFeatureShape
    nameWithType: Layer(Of RecordSet, CSVData).GetFeatureShape
    fullName: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).GetFeatureShape
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}.SetVisible(System.Boolean)
  commentId: M:Virgis.Layer{Project.RecordSet,Virgis.CSVData}.SetVisible(System.Boolean)
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2.SetVisible(System.Boolean)
  name: SetVisible(Boolean)
  nameWithType: Layer<RecordSet, CSVData>.SetVisible(Boolean)
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.SetVisible(System.Boolean)
  nameWithType.vb: Layer(Of RecordSet, CSVData).SetVisible(Boolean)
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).SetVisible(System.Boolean)
  spec.csharp:
  - uid: Virgis.Layer`2.SetVisible(System.Boolean)
    name: SetVisible
    nameWithType: Layer<RecordSet, CSVData>.SetVisible
    fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.SetVisible
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.SetVisible(System.Boolean)
    name: SetVisible
    nameWithType: Layer(Of RecordSet, CSVData).SetVisible
    fullName: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).SetVisible
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}.IsVisible
  commentId: M:Virgis.Layer{Project.RecordSet,Virgis.CSVData}.IsVisible
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2.IsVisible
  name: IsVisible()
  nameWithType: Layer<RecordSet, CSVData>.IsVisible()
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.IsVisible()
  nameWithType.vb: Layer(Of RecordSet, CSVData).IsVisible()
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).IsVisible()
  spec.csharp:
  - uid: Virgis.Layer`2.IsVisible
    name: IsVisible
    nameWithType: Layer<RecordSet, CSVData>.IsVisible
    fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.IsVisible
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.IsVisible
    name: IsVisible
    nameWithType: Layer(Of RecordSet, CSVData).IsVisible
    fullName: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).IsVisible
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}.SetEditable(System.Boolean)
  commentId: M:Virgis.Layer{Project.RecordSet,Virgis.CSVData}.SetEditable(System.Boolean)
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2.SetEditable(System.Boolean)
  name: SetEditable(Boolean)
  nameWithType: Layer<RecordSet, CSVData>.SetEditable(Boolean)
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.SetEditable(System.Boolean)
  nameWithType.vb: Layer(Of RecordSet, CSVData).SetEditable(Boolean)
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).SetEditable(System.Boolean)
  spec.csharp:
  - uid: Virgis.Layer`2.SetEditable(System.Boolean)
    name: SetEditable
    nameWithType: Layer<RecordSet, CSVData>.SetEditable
    fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.SetEditable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.SetEditable(System.Boolean)
    name: SetEditable
    nameWithType: Layer(Of RecordSet, CSVData).SetEditable
    fullName: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).SetEditable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer{Project.RecordSet,Virgis.CSVData}.IsEditable
  commentId: M:Virgis.Layer{Project.RecordSet,Virgis.CSVData}.IsEditable
  parent: Virgis.Layer{Project.RecordSet,Virgis.CSVData}
  definition: Virgis.Layer`2.IsEditable
  name: IsEditable()
  nameWithType: Layer<RecordSet, CSVData>.IsEditable()
  fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.IsEditable()
  nameWithType.vb: Layer(Of RecordSet, CSVData).IsEditable()
  fullName.vb: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).IsEditable()
  spec.csharp:
  - uid: Virgis.Layer`2.IsEditable
    name: IsEditable
    nameWithType: Layer<RecordSet, CSVData>.IsEditable
    fullName: Virgis.Layer<Project.RecordSet, Virgis.CSVData>.IsEditable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.IsEditable
    name: IsEditable
    nameWithType: Layer(Of RecordSet, CSVData).IsEditable
    fullName: Virgis.Layer(Of Project.RecordSet, Virgis.CSVData).IsEditable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Virgis.Layer`2
  commentId: T:Virgis.Layer`2
  name: Layer<T, S>
  nameWithType: Layer<T, S>
  fullName: Virgis.Layer<T, S>
  nameWithType.vb: Layer(Of T, S)
  fullName.vb: Virgis.Layer(Of T, S)
  name.vb: Layer(Of T, S)
  spec.csharp:
  - uid: Virgis.Layer`2
    name: Layer
    nameWithType: Layer
    fullName: Virgis.Layer
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Virgis.Layer`2
    name: Layer
    nameWithType: Layer
    fullName: Virgis.Layer
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer`2.layer
  commentId: F:Virgis.Layer`2.layer
  name: layer
  nameWithType: Layer<T, S>.layer
  fullName: Virgis.Layer<T, S>.layer
  nameWithType.vb: Layer(Of T, S).layer
  fullName.vb: Virgis.Layer(Of T, S).layer
- uid: Virgis.Layer`2.features
  commentId: F:Virgis.Layer`2.features
  name: features
  nameWithType: Layer<T, S>.features
  fullName: Virgis.Layer<T, S>.features
  nameWithType.vb: Layer(Of T, S).features
  fullName.vb: Virgis.Layer(Of T, S).features
- uid: Virgis.Layer`2.changed
  commentId: F:Virgis.Layer`2.changed
  name: changed
  nameWithType: Layer<T, S>.changed
  fullName: Virgis.Layer<T, S>.changed
  nameWithType.vb: Layer(Of T, S).changed
  fullName.vb: Virgis.Layer(Of T, S).changed
- uid: Virgis.Layer`2._id
  commentId: F:Virgis.Layer`2._id
  name: _id
  nameWithType: Layer<T, S>._id
  fullName: Virgis.Layer<T, S>._id
  nameWithType.vb: Layer(Of T, S)._id
  fullName.vb: Virgis.Layer(Of T, S)._id
- uid: Virgis.Layer`2._visible
  commentId: F:Virgis.Layer`2._visible
  name: _visible
  nameWithType: Layer<T, S>._visible
  fullName: Virgis.Layer<T, S>._visible
  nameWithType.vb: Layer(Of T, S)._visible
  fullName.vb: Virgis.Layer(Of T, S)._visible
- uid: Virgis.Layer`2._editable
  commentId: F:Virgis.Layer`2._editable
  name: _editable
  nameWithType: Layer<T, S>._editable
  fullName: Virgis.Layer<T, S>._editable
  nameWithType.vb: Layer(Of T, S)._editable
  fullName.vb: Virgis.Layer(Of T, S)._editable
- uid: Virgis.Layer`2.Init(`0)
  commentId: M:Virgis.Layer`2.Init(`0)
  name: Init(T)
  nameWithType: Layer<T, S>.Init(T)
  fullName: Virgis.Layer<T, S>.Init(T)
  nameWithType.vb: Layer(Of T, S).Init(T)
  fullName.vb: Virgis.Layer(Of T, S).Init(T)
  spec.csharp:
  - uid: Virgis.Layer`2.Init(`0)
    name: Init
    nameWithType: Layer<T, S>.Init
    fullName: Virgis.Layer<T, S>.Init
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.Init(`0)
    name: Init
    nameWithType: Layer(Of T, S).Init
    fullName: Virgis.Layer(Of T, S).Init
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer`2._init(`0)
  commentId: M:Virgis.Layer`2._init(`0)
  name: _init(T)
  nameWithType: Layer<T, S>._init(T)
  fullName: Virgis.Layer<T, S>._init(T)
  nameWithType.vb: Layer(Of T, S)._init(T)
  fullName.vb: Virgis.Layer(Of T, S)._init(T)
  spec.csharp:
  - uid: Virgis.Layer`2._init(`0)
    name: _init
    nameWithType: Layer<T, S>._init
    fullName: Virgis.Layer<T, S>._init
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2._init(`0)
    name: _init
    nameWithType: Layer(Of T, S)._init
    fullName: Virgis.Layer(Of T, S)._init
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer`2.AddFeature(UnityEngine.Vector3[])
  commentId: M:Virgis.Layer`2.AddFeature(UnityEngine.Vector3[])
  isExternal: true
  name: AddFeature(Vector3[])
  nameWithType: Layer<T, S>.AddFeature(Vector3[])
  fullName: Virgis.Layer<T, S>.AddFeature(UnityEngine.Vector3[])
  nameWithType.vb: Layer(Of T, S).AddFeature(Vector3())
  fullName.vb: Virgis.Layer(Of T, S).AddFeature(UnityEngine.Vector3())
  name.vb: AddFeature(Vector3())
  spec.csharp:
  - uid: Virgis.Layer`2.AddFeature(UnityEngine.Vector3[])
    name: AddFeature
    nameWithType: Layer<T, S>.AddFeature
    fullName: Virgis.Layer<T, S>.AddFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.AddFeature(UnityEngine.Vector3[])
    name: AddFeature
    nameWithType: Layer(Of T, S).AddFeature
    fullName: Virgis.Layer(Of T, S).AddFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer`2._addFeature(UnityEngine.Vector3[])
  commentId: M:Virgis.Layer`2._addFeature(UnityEngine.Vector3[])
  isExternal: true
  name: _addFeature(Vector3[])
  nameWithType: Layer<T, S>._addFeature(Vector3[])
  fullName: Virgis.Layer<T, S>._addFeature(UnityEngine.Vector3[])
  nameWithType.vb: Layer(Of T, S)._addFeature(Vector3())
  fullName.vb: Virgis.Layer(Of T, S)._addFeature(UnityEngine.Vector3())
  name.vb: _addFeature(Vector3())
  spec.csharp:
  - uid: Virgis.Layer`2._addFeature(UnityEngine.Vector3[])
    name: _addFeature
    nameWithType: Layer<T, S>._addFeature
    fullName: Virgis.Layer<T, S>._addFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2._addFeature(UnityEngine.Vector3[])
    name: _addFeature
    nameWithType: Layer(Of T, S)._addFeature
    fullName: Virgis.Layer(Of T, S)._addFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer`2.Draw
  commentId: M:Virgis.Layer`2.Draw
  name: Draw()
  nameWithType: Layer<T, S>.Draw()
  fullName: Virgis.Layer<T, S>.Draw()
  nameWithType.vb: Layer(Of T, S).Draw()
  fullName.vb: Virgis.Layer(Of T, S).Draw()
  spec.csharp:
  - uid: Virgis.Layer`2.Draw
    name: Draw
    nameWithType: Layer<T, S>.Draw
    fullName: Virgis.Layer<T, S>.Draw
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.Draw
    name: Draw
    nameWithType: Layer(Of T, S).Draw
    fullName: Virgis.Layer(Of T, S).Draw
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer`2._draw
  commentId: M:Virgis.Layer`2._draw
  name: _draw()
  nameWithType: Layer<T, S>._draw()
  fullName: Virgis.Layer<T, S>._draw()
  nameWithType.vb: Layer(Of T, S)._draw()
  fullName.vb: Virgis.Layer(Of T, S)._draw()
  spec.csharp:
  - uid: Virgis.Layer`2._draw
    name: _draw
    nameWithType: Layer<T, S>._draw
    fullName: Virgis.Layer<T, S>._draw
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2._draw
    name: _draw
    nameWithType: Layer(Of T, S)._draw
    fullName: Virgis.Layer(Of T, S)._draw
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer`2.CheckPoint
  commentId: M:Virgis.Layer`2.CheckPoint
  name: CheckPoint()
  nameWithType: Layer<T, S>.CheckPoint()
  fullName: Virgis.Layer<T, S>.CheckPoint()
  nameWithType.vb: Layer(Of T, S).CheckPoint()
  fullName.vb: Virgis.Layer(Of T, S).CheckPoint()
  spec.csharp:
  - uid: Virgis.Layer`2.CheckPoint
    name: CheckPoint
    nameWithType: Layer<T, S>.CheckPoint
    fullName: Virgis.Layer<T, S>.CheckPoint
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.CheckPoint
    name: CheckPoint
    nameWithType: Layer(Of T, S).CheckPoint
    fullName: Virgis.Layer(Of T, S).CheckPoint
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer`2._checkpoint
  commentId: M:Virgis.Layer`2._checkpoint
  name: _checkpoint()
  nameWithType: Layer<T, S>._checkpoint()
  fullName: Virgis.Layer<T, S>._checkpoint()
  nameWithType.vb: Layer(Of T, S)._checkpoint()
  fullName.vb: Virgis.Layer(Of T, S)._checkpoint()
  spec.csharp:
  - uid: Virgis.Layer`2._checkpoint
    name: _checkpoint
    nameWithType: Layer<T, S>._checkpoint
    fullName: Virgis.Layer<T, S>._checkpoint
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2._checkpoint
    name: _checkpoint
    nameWithType: Layer(Of T, S)._checkpoint
    fullName: Virgis.Layer(Of T, S)._checkpoint
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer`2.Save
  commentId: M:Virgis.Layer`2.Save
  name: Save()
  nameWithType: Layer<T, S>.Save()
  fullName: Virgis.Layer<T, S>.Save()
  nameWithType.vb: Layer(Of T, S).Save()
  fullName.vb: Virgis.Layer(Of T, S).Save()
  spec.csharp:
  - uid: Virgis.Layer`2.Save
    name: Save
    nameWithType: Layer<T, S>.Save
    fullName: Virgis.Layer<T, S>.Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.Save
    name: Save
    nameWithType: Layer(Of T, S).Save
    fullName: Virgis.Layer(Of T, S).Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer`2._save
  commentId: M:Virgis.Layer`2._save
  name: _save()
  nameWithType: Layer<T, S>._save()
  fullName: Virgis.Layer<T, S>._save()
  nameWithType.vb: Layer(Of T, S)._save()
  fullName.vb: Virgis.Layer(Of T, S)._save()
  spec.csharp:
  - uid: Virgis.Layer`2._save
    name: _save
    nameWithType: Layer<T, S>._save
    fullName: Virgis.Layer<T, S>._save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2._save
    name: _save
    nameWithType: Layer(Of T, S)._save
    fullName: Virgis.Layer(Of T, S)._save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer`2.Translate(Virgis.MoveArgs)
  commentId: M:Virgis.Layer`2.Translate(Virgis.MoveArgs)
  name: Translate(MoveArgs)
  nameWithType: Layer<T, S>.Translate(MoveArgs)
  fullName: Virgis.Layer<T, S>.Translate(Virgis.MoveArgs)
  nameWithType.vb: Layer(Of T, S).Translate(MoveArgs)
  fullName.vb: Virgis.Layer(Of T, S).Translate(Virgis.MoveArgs)
  spec.csharp:
  - uid: Virgis.Layer`2.Translate(Virgis.MoveArgs)
    name: Translate
    nameWithType: Layer<T, S>.Translate
    fullName: Virgis.Layer<T, S>.Translate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.Translate(Virgis.MoveArgs)
    name: Translate
    nameWithType: Layer(Of T, S).Translate
    fullName: Virgis.Layer(Of T, S).Translate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer`2.MoveAxis(Virgis.MoveArgs)
  commentId: M:Virgis.Layer`2.MoveAxis(Virgis.MoveArgs)
  name: MoveAxis(MoveArgs)
  nameWithType: Layer<T, S>.MoveAxis(MoveArgs)
  fullName: Virgis.Layer<T, S>.MoveAxis(Virgis.MoveArgs)
  nameWithType.vb: Layer(Of T, S).MoveAxis(MoveArgs)
  fullName.vb: Virgis.Layer(Of T, S).MoveAxis(Virgis.MoveArgs)
  spec.csharp:
  - uid: Virgis.Layer`2.MoveAxis(Virgis.MoveArgs)
    name: MoveAxis
    nameWithType: Layer<T, S>.MoveAxis
    fullName: Virgis.Layer<T, S>.MoveAxis
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.MoveAxis(Virgis.MoveArgs)
    name: MoveAxis
    nameWithType: Layer(Of T, S).MoveAxis
    fullName: Virgis.Layer(Of T, S).MoveAxis
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer`2.StartEditSession
  commentId: M:Virgis.Layer`2.StartEditSession
  name: StartEditSession()
  nameWithType: Layer<T, S>.StartEditSession()
  fullName: Virgis.Layer<T, S>.StartEditSession()
  nameWithType.vb: Layer(Of T, S).StartEditSession()
  fullName.vb: Virgis.Layer(Of T, S).StartEditSession()
  spec.csharp:
  - uid: Virgis.Layer`2.StartEditSession
    name: StartEditSession
    nameWithType: Layer<T, S>.StartEditSession
    fullName: Virgis.Layer<T, S>.StartEditSession
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.StartEditSession
    name: StartEditSession
    nameWithType: Layer(Of T, S).StartEditSession
    fullName: Virgis.Layer(Of T, S).StartEditSession
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer`2.ExitEditSession(System.Boolean)
  commentId: M:Virgis.Layer`2.ExitEditSession(System.Boolean)
  isExternal: true
  name: ExitEditSession(Boolean)
  nameWithType: Layer<T, S>.ExitEditSession(Boolean)
  fullName: Virgis.Layer<T, S>.ExitEditSession(System.Boolean)
  nameWithType.vb: Layer(Of T, S).ExitEditSession(Boolean)
  fullName.vb: Virgis.Layer(Of T, S).ExitEditSession(System.Boolean)
  spec.csharp:
  - uid: Virgis.Layer`2.ExitEditSession(System.Boolean)
    name: ExitEditSession
    nameWithType: Layer<T, S>.ExitEditSession
    fullName: Virgis.Layer<T, S>.ExitEditSession
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.ExitEditSession(System.Boolean)
    name: ExitEditSession
    nameWithType: Layer(Of T, S).ExitEditSession
    fullName: Virgis.Layer(Of T, S).ExitEditSession
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer`2.Selected(Virgis.SelectionTypes)
  commentId: M:Virgis.Layer`2.Selected(Virgis.SelectionTypes)
  name: Selected(SelectionTypes)
  nameWithType: Layer<T, S>.Selected(SelectionTypes)
  fullName: Virgis.Layer<T, S>.Selected(Virgis.SelectionTypes)
  nameWithType.vb: Layer(Of T, S).Selected(SelectionTypes)
  fullName.vb: Virgis.Layer(Of T, S).Selected(Virgis.SelectionTypes)
  spec.csharp:
  - uid: Virgis.Layer`2.Selected(Virgis.SelectionTypes)
    name: Selected
    nameWithType: Layer<T, S>.Selected
    fullName: Virgis.Layer<T, S>.Selected
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.SelectionTypes
    name: SelectionTypes
    nameWithType: SelectionTypes
    fullName: Virgis.SelectionTypes
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.Selected(Virgis.SelectionTypes)
    name: Selected
    nameWithType: Layer(Of T, S).Selected
    fullName: Virgis.Layer(Of T, S).Selected
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.SelectionTypes
    name: SelectionTypes
    nameWithType: SelectionTypes
    fullName: Virgis.SelectionTypes
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer`2.UnSelected(Virgis.SelectionTypes)
  commentId: M:Virgis.Layer`2.UnSelected(Virgis.SelectionTypes)
  name: UnSelected(SelectionTypes)
  nameWithType: Layer<T, S>.UnSelected(SelectionTypes)
  fullName: Virgis.Layer<T, S>.UnSelected(Virgis.SelectionTypes)
  nameWithType.vb: Layer(Of T, S).UnSelected(SelectionTypes)
  fullName.vb: Virgis.Layer(Of T, S).UnSelected(Virgis.SelectionTypes)
  spec.csharp:
  - uid: Virgis.Layer`2.UnSelected(Virgis.SelectionTypes)
    name: UnSelected
    nameWithType: Layer<T, S>.UnSelected
    fullName: Virgis.Layer<T, S>.UnSelected
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.SelectionTypes
    name: SelectionTypes
    nameWithType: SelectionTypes
    fullName: Virgis.SelectionTypes
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.UnSelected(Virgis.SelectionTypes)
    name: UnSelected
    nameWithType: Layer(Of T, S).UnSelected
    fullName: Virgis.Layer(Of T, S).UnSelected
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.SelectionTypes
    name: SelectionTypes
    nameWithType: SelectionTypes
    fullName: Virgis.SelectionTypes
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer`2.GetClosest(UnityEngine.Vector3,System.Guid[])
  commentId: M:Virgis.Layer`2.GetClosest(UnityEngine.Vector3,System.Guid[])
  isExternal: true
  name: GetClosest(Vector3, Guid[])
  nameWithType: Layer<T, S>.GetClosest(Vector3, Guid[])
  fullName: Virgis.Layer<T, S>.GetClosest(UnityEngine.Vector3, System.Guid[])
  nameWithType.vb: Layer(Of T, S).GetClosest(Vector3, Guid())
  fullName.vb: Virgis.Layer(Of T, S).GetClosest(UnityEngine.Vector3, System.Guid())
  name.vb: GetClosest(Vector3, Guid())
  spec.csharp:
  - uid: Virgis.Layer`2.GetClosest(UnityEngine.Vector3,System.Guid[])
    name: GetClosest
    nameWithType: Layer<T, S>.GetClosest
    fullName: Virgis.Layer<T, S>.GetClosest
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.GetClosest(UnityEngine.Vector3,System.Guid[])
    name: GetClosest
    nameWithType: Layer(Of T, S).GetClosest
    fullName: Virgis.Layer(Of T, S).GetClosest
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer`2.GetFeature(System.Guid)
  commentId: M:Virgis.Layer`2.GetFeature(System.Guid)
  isExternal: true
  name: GetFeature(Guid)
  nameWithType: Layer<T, S>.GetFeature(Guid)
  fullName: Virgis.Layer<T, S>.GetFeature(System.Guid)
  nameWithType.vb: Layer(Of T, S).GetFeature(Guid)
  fullName.vb: Virgis.Layer(Of T, S).GetFeature(System.Guid)
  spec.csharp:
  - uid: Virgis.Layer`2.GetFeature(System.Guid)
    name: GetFeature
    nameWithType: Layer<T, S>.GetFeature
    fullName: Virgis.Layer<T, S>.GetFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.GetFeature(System.Guid)
    name: GetFeature
    nameWithType: Layer(Of T, S).GetFeature
    fullName: Virgis.Layer(Of T, S).GetFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer`2.GetId
  commentId: M:Virgis.Layer`2.GetId
  name: GetId()
  nameWithType: Layer<T, S>.GetId()
  fullName: Virgis.Layer<T, S>.GetId()
  nameWithType.vb: Layer(Of T, S).GetId()
  fullName.vb: Virgis.Layer(Of T, S).GetId()
  spec.csharp:
  - uid: Virgis.Layer`2.GetId
    name: GetId
    nameWithType: Layer<T, S>.GetId
    fullName: Virgis.Layer<T, S>.GetId
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.GetId
    name: GetId
    nameWithType: Layer(Of T, S).GetId
    fullName: Virgis.Layer(Of T, S).GetId
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer`2.GetMetadata
  commentId: M:Virgis.Layer`2.GetMetadata
  name: GetMetadata()
  nameWithType: Layer<T, S>.GetMetadata()
  fullName: Virgis.Layer<T, S>.GetMetadata()
  nameWithType.vb: Layer(Of T, S).GetMetadata()
  fullName.vb: Virgis.Layer(Of T, S).GetMetadata()
  spec.csharp:
  - uid: Virgis.Layer`2.GetMetadata
    name: GetMetadata
    nameWithType: Layer<T, S>.GetMetadata
    fullName: Virgis.Layer<T, S>.GetMetadata
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.GetMetadata
    name: GetMetadata
    nameWithType: Layer(Of T, S).GetMetadata
    fullName: Virgis.Layer(Of T, S).GetMetadata
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer`2.GetFeatureShape
  commentId: M:Virgis.Layer`2.GetFeatureShape
  name: GetFeatureShape()
  nameWithType: Layer<T, S>.GetFeatureShape()
  fullName: Virgis.Layer<T, S>.GetFeatureShape()
  nameWithType.vb: Layer(Of T, S).GetFeatureShape()
  fullName.vb: Virgis.Layer(Of T, S).GetFeatureShape()
  spec.csharp:
  - uid: Virgis.Layer`2.GetFeatureShape
    name: GetFeatureShape
    nameWithType: Layer<T, S>.GetFeatureShape
    fullName: Virgis.Layer<T, S>.GetFeatureShape
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.GetFeatureShape
    name: GetFeatureShape
    nameWithType: Layer(Of T, S).GetFeatureShape
    fullName: Virgis.Layer(Of T, S).GetFeatureShape
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer`2.SetVisible(System.Boolean)
  commentId: M:Virgis.Layer`2.SetVisible(System.Boolean)
  isExternal: true
  name: SetVisible(Boolean)
  nameWithType: Layer<T, S>.SetVisible(Boolean)
  fullName: Virgis.Layer<T, S>.SetVisible(System.Boolean)
  nameWithType.vb: Layer(Of T, S).SetVisible(Boolean)
  fullName.vb: Virgis.Layer(Of T, S).SetVisible(System.Boolean)
  spec.csharp:
  - uid: Virgis.Layer`2.SetVisible(System.Boolean)
    name: SetVisible
    nameWithType: Layer<T, S>.SetVisible
    fullName: Virgis.Layer<T, S>.SetVisible
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.SetVisible(System.Boolean)
    name: SetVisible
    nameWithType: Layer(Of T, S).SetVisible
    fullName: Virgis.Layer(Of T, S).SetVisible
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer`2.IsVisible
  commentId: M:Virgis.Layer`2.IsVisible
  name: IsVisible()
  nameWithType: Layer<T, S>.IsVisible()
  fullName: Virgis.Layer<T, S>.IsVisible()
  nameWithType.vb: Layer(Of T, S).IsVisible()
  fullName.vb: Virgis.Layer(Of T, S).IsVisible()
  spec.csharp:
  - uid: Virgis.Layer`2.IsVisible
    name: IsVisible
    nameWithType: Layer<T, S>.IsVisible
    fullName: Virgis.Layer<T, S>.IsVisible
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.IsVisible
    name: IsVisible
    nameWithType: Layer(Of T, S).IsVisible
    fullName: Virgis.Layer(Of T, S).IsVisible
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer`2.SetEditable(System.Boolean)
  commentId: M:Virgis.Layer`2.SetEditable(System.Boolean)
  isExternal: true
  name: SetEditable(Boolean)
  nameWithType: Layer<T, S>.SetEditable(Boolean)
  fullName: Virgis.Layer<T, S>.SetEditable(System.Boolean)
  nameWithType.vb: Layer(Of T, S).SetEditable(Boolean)
  fullName.vb: Virgis.Layer(Of T, S).SetEditable(System.Boolean)
  spec.csharp:
  - uid: Virgis.Layer`2.SetEditable(System.Boolean)
    name: SetEditable
    nameWithType: Layer<T, S>.SetEditable
    fullName: Virgis.Layer<T, S>.SetEditable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.SetEditable(System.Boolean)
    name: SetEditable
    nameWithType: Layer(Of T, S).SetEditable
    fullName: Virgis.Layer(Of T, S).SetEditable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.Layer`2.IsEditable
  commentId: M:Virgis.Layer`2.IsEditable
  name: IsEditable()
  nameWithType: Layer<T, S>.IsEditable()
  fullName: Virgis.Layer<T, S>.IsEditable()
  nameWithType.vb: Layer(Of T, S).IsEditable()
  fullName.vb: Virgis.Layer(Of T, S).IsEditable()
  spec.csharp:
  - uid: Virgis.Layer`2.IsEditable
    name: IsEditable
    nameWithType: Layer<T, S>.IsEditable
    fullName: Virgis.Layer<T, S>.IsEditable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.Layer`2.IsEditable
    name: IsEditable
    nameWithType: Layer(Of T, S).IsEditable
    fullName: Virgis.Layer(Of T, S).IsEditable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: Virgis.DataPlotter._init*
  commentId: Overload:Virgis.DataPlotter._init
  name: _init
  nameWithType: DataPlotter._init
  fullName: Virgis.DataPlotter._init
- uid: Project.RecordSet
  commentId: T:Project.RecordSet
  parent: Project
  name: RecordSet
  nameWithType: RecordSet
  fullName: Project.RecordSet
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Project
  commentId: N:Project
  name: Project
  nameWithType: Project
  fullName: Project
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Virgis.DataPlotter._checkpoint*
  commentId: Overload:Virgis.DataPlotter._checkpoint
  name: _checkpoint
  nameWithType: DataPlotter._checkpoint
  fullName: Virgis.DataPlotter._checkpoint
- uid: Virgis.DataPlotter._draw*
  commentId: Overload:Virgis.DataPlotter._draw
  name: _draw
  nameWithType: DataPlotter._draw
  fullName: Virgis.DataPlotter._draw
- uid: Virgis.DataPlotter._addFeature*
  commentId: Overload:Virgis.DataPlotter._addFeature
  name: _addFeature
  nameWithType: DataPlotter._addFeature
  fullName: Virgis.DataPlotter._addFeature
- uid: UnityEngine.Vector3[]
  isExternal: true
  name: Vector3[]
  nameWithType: Vector3[]
  fullName: UnityEngine.Vector3[]
  nameWithType.vb: Vector3()
  fullName.vb: UnityEngine.Vector3()
  name.vb: Vector3()
  spec.csharp:
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Virgis.VirgisComponent
  commentId: T:Virgis.VirgisComponent
  parent: Virgis
  name: VirgisComponent
  nameWithType: VirgisComponent
  fullName: Virgis.VirgisComponent
- uid: Virgis.DataPlotter._save*
  commentId: Overload:Virgis.DataPlotter._save
  name: _save
  nameWithType: DataPlotter._save
  fullName: Virgis.DataPlotter._save
- uid: Virgis.DataPlotter.MoveAxis*
  commentId: Overload:Virgis.DataPlotter.MoveAxis
  name: MoveAxis
  nameWithType: DataPlotter.MoveAxis
  fullName: Virgis.DataPlotter.MoveAxis
- uid: Virgis.MoveArgs
  commentId: T:Virgis.MoveArgs
  parent: Virgis
  name: MoveArgs
  nameWithType: MoveArgs
  fullName: Virgis.MoveArgs
- uid: Virgis.DataPlotter.Translate*
  commentId: Overload:Virgis.DataPlotter.Translate
  name: Translate
  nameWithType: DataPlotter.Translate
  fullName: Virgis.DataPlotter.Translate
- uid: Virgis.DataPlotter.GetFeatureShape*
  commentId: Overload:Virgis.DataPlotter.GetFeatureShape
  name: GetFeatureShape
  nameWithType: DataPlotter.GetFeatureShape
  fullName: Virgis.DataPlotter.GetFeatureShape

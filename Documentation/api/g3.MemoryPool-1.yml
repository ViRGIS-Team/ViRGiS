### YamlMime:ManagedReference
items:
- uid: g3.MemoryPool`1
  commentId: T:g3.MemoryPool`1
  id: MemoryPool`1
  parent: g3
  children:
  - g3.MemoryPool`1.#ctor
  - g3.MemoryPool`1.Allocate
  - g3.MemoryPool`1.FreeAll
  - g3.MemoryPool`1.Return(`0)
  - g3.MemoryPool`1.ReturnAll
  langs:
  - csharp
  - vb
  name: MemoryPool<T>
  nameWithType: MemoryPool<T>
  fullName: g3.MemoryPool<T>
  type: Class
  source:
    remote:
      path: Assets/geometry3Sharp/core/MemoryPool.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: MemoryPool
    path: ../Assets/geometry3Sharp/core/MemoryPool.cs
    startLine: 8
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nVery basic object pool class. \n"
  example: []
  syntax:
    content: >-
      public class MemoryPool<T>
          where T : class, new()
    typeParameters:
    - id: T
    content.vb: Public Class MemoryPool(Of T As {Class, New})
  inheritance:
  - System.Object
  nameWithType.vb: MemoryPool(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: g3.MemoryPool(Of T)
  name.vb: MemoryPool(Of T)
- uid: g3.MemoryPool`1.#ctor
  commentId: M:g3.MemoryPool`1.#ctor
  id: '#ctor'
  parent: g3.MemoryPool`1
  langs:
  - csharp
  - vb
  name: MemoryPool()
  nameWithType: MemoryPool<T>.MemoryPool()
  fullName: g3.MemoryPool<T>.MemoryPool()
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/core/MemoryPool.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/core/MemoryPool.cs
    startLine: 13
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public MemoryPool()
    content.vb: Public Sub New
  overload: g3.MemoryPool`1.#ctor*
  nameWithType.vb: MemoryPool(Of T).MemoryPool()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.MemoryPool(Of T).MemoryPool()
- uid: g3.MemoryPool`1.Allocate
  commentId: M:g3.MemoryPool`1.Allocate
  id: Allocate
  parent: g3.MemoryPool`1
  langs:
  - csharp
  - vb
  name: Allocate()
  nameWithType: MemoryPool<T>.Allocate()
  fullName: g3.MemoryPool<T>.Allocate()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/MemoryPool.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Allocate
    path: ../Assets/geometry3Sharp/core/MemoryPool.cs
    startLine: 19
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public T Allocate()
    return:
      type: '{T}'
    content.vb: Public Function Allocate As T
  overload: g3.MemoryPool`1.Allocate*
  nameWithType.vb: MemoryPool(Of T).Allocate()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.MemoryPool(Of T).Allocate()
- uid: g3.MemoryPool`1.Return(`0)
  commentId: M:g3.MemoryPool`1.Return(`0)
  id: Return(`0)
  parent: g3.MemoryPool`1
  langs:
  - csharp
  - vb
  name: Return(T)
  nameWithType: MemoryPool<T>.Return(T)
  fullName: g3.MemoryPool<T>.Return(T)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/MemoryPool.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Return
    path: ../Assets/geometry3Sharp/core/MemoryPool.cs
    startLine: 32
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Return(T obj)
    parameters:
    - id: obj
      type: '{T}'
    content.vb: Public Sub Return(obj As T)
  overload: g3.MemoryPool`1.Return*
  nameWithType.vb: MemoryPool(Of T).Return(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.MemoryPool(Of T).Return(T)
- uid: g3.MemoryPool`1.ReturnAll
  commentId: M:g3.MemoryPool`1.ReturnAll
  id: ReturnAll
  parent: g3.MemoryPool`1
  langs:
  - csharp
  - vb
  name: ReturnAll()
  nameWithType: MemoryPool<T>.ReturnAll()
  fullName: g3.MemoryPool<T>.ReturnAll()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/MemoryPool.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ReturnAll
    path: ../Assets/geometry3Sharp/core/MemoryPool.cs
    startLine: 37
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void ReturnAll()
    content.vb: Public Sub ReturnAll
  overload: g3.MemoryPool`1.ReturnAll*
  nameWithType.vb: MemoryPool(Of T).ReturnAll()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.MemoryPool(Of T).ReturnAll()
- uid: g3.MemoryPool`1.FreeAll
  commentId: M:g3.MemoryPool`1.FreeAll
  id: FreeAll
  parent: g3.MemoryPool`1
  langs:
  - csharp
  - vb
  name: FreeAll()
  nameWithType: MemoryPool<T>.FreeAll()
  fullName: g3.MemoryPool<T>.FreeAll()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/MemoryPool.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: FreeAll
    path: ../Assets/geometry3Sharp/core/MemoryPool.cs
    startLine: 43
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void FreeAll()
    content.vb: Public Sub FreeAll
  overload: g3.MemoryPool`1.FreeAll*
  nameWithType.vb: MemoryPool(Of T).FreeAll()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.MemoryPool(Of T).FreeAll()
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: g3.MemoryPool`1.#ctor*
  commentId: Overload:g3.MemoryPool`1.#ctor
  name: MemoryPool
  nameWithType: MemoryPool<T>.MemoryPool
  fullName: g3.MemoryPool<T>.MemoryPool
  nameWithType.vb: MemoryPool(Of T).MemoryPool
  fullName.vb: g3.MemoryPool(Of T).MemoryPool
- uid: g3.MemoryPool`1.Allocate*
  commentId: Overload:g3.MemoryPool`1.Allocate
  name: Allocate
  nameWithType: MemoryPool<T>.Allocate
  fullName: g3.MemoryPool<T>.Allocate
  nameWithType.vb: MemoryPool(Of T).Allocate
  fullName.vb: g3.MemoryPool(Of T).Allocate
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: g3.MemoryPool`1.Return*
  commentId: Overload:g3.MemoryPool`1.Return
  name: Return
  nameWithType: MemoryPool<T>.Return
  fullName: g3.MemoryPool<T>.Return
  nameWithType.vb: MemoryPool(Of T).Return
  fullName.vb: g3.MemoryPool(Of T).Return
- uid: g3.MemoryPool`1.ReturnAll*
  commentId: Overload:g3.MemoryPool`1.ReturnAll
  name: ReturnAll
  nameWithType: MemoryPool<T>.ReturnAll
  fullName: g3.MemoryPool<T>.ReturnAll
  nameWithType.vb: MemoryPool(Of T).ReturnAll
  fullName.vb: g3.MemoryPool(Of T).ReturnAll
- uid: g3.MemoryPool`1.FreeAll*
  commentId: Overload:g3.MemoryPool`1.FreeAll
  name: FreeAll
  nameWithType: MemoryPool<T>.FreeAll
  fullName: g3.MemoryPool<T>.FreeAll
  nameWithType.vb: MemoryPool(Of T).FreeAll
  fullName.vb: g3.MemoryPool(Of T).FreeAll

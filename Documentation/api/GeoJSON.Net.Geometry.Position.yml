### YamlMime:ManagedReference
items:
- uid: GeoJSON.Net.Geometry.Position
  commentId: T:GeoJSON.Net.Geometry.Position
  id: Position
  parent: GeoJSON.Net.Geometry
  children:
  - GeoJSON.Net.Geometry.Position.#ctor(System.Double,System.Double,System.Nullable{System.Double})
  - GeoJSON.Net.Geometry.Position.#ctor(System.String,System.String,System.String)
  - GeoJSON.Net.Geometry.Position.Altitude
  - GeoJSON.Net.Geometry.Position.Equals(GeoJSON.Net.Geometry.Position)
  - GeoJSON.Net.Geometry.Position.Equals(GeoJSON.Net.Geometry.Position,GeoJSON.Net.Geometry.Position)
  - GeoJSON.Net.Geometry.Position.Equals(System.Object)
  - GeoJSON.Net.Geometry.Position.GetHashCode
  - GeoJSON.Net.Geometry.Position.GetHashCode(GeoJSON.Net.Geometry.Position)
  - GeoJSON.Net.Geometry.Position.Latitude
  - GeoJSON.Net.Geometry.Position.Longitude
  - GeoJSON.Net.Geometry.Position.op_Equality(GeoJSON.Net.Geometry.Position,GeoJSON.Net.Geometry.Position)
  - GeoJSON.Net.Geometry.Position.op_Inequality(GeoJSON.Net.Geometry.Position,GeoJSON.Net.Geometry.Position)
  - GeoJSON.Net.Geometry.Position.ToString
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: Position
  fullName: GeoJSON.Net.Geometry.Position
  type: Class
  source:
    remote:
      path: Assets/GeoJSON.Net/Geometry/Position.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Position
    path: ../Assets/GeoJSON.Net/Geometry/Position.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.Geometry
  summary: "\nA position is the fundamental geometry construct, consisting of <xref href=\"GeoJSON.Net.Geometry.Position.Latitude\" data-throw-if-not-resolved=\"false\"></xref>,\n<xref href=\"GeoJSON.Net.Geometry.Position.Longitude\" data-throw-if-not-resolved=\"false\"></xref> and (optionally) <xref href=\"GeoJSON.Net.Geometry.Position.Altitude\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class Position : IPosition, IEqualityComparer<Position>, IEquatable<Position>'
    content.vb: >-
      Public Class Position
          Implements IPosition, IEqualityComparer(Of Position), IEquatable(Of Position)
  inheritance:
  - System.Object
  implements:
  - GeoJSON.Net.Geometry.IPosition
  extensionMethods:
  - GeoJSON.Net.Geometry.IPosition.Virgis.PositionExtensionMethods.Vector2d
  - GeoJSON.Net.Geometry.IPosition.Virgis.PositionExtensionMethods.Vector2
  - GeoJSON.Net.Geometry.IPosition.Virgis.PositionExtensionMethods.Point
  - GeoJSON.Net.Geometry.IPosition.Virgis.PositionExtensionMethods.Vector3
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: GeoJSON.Net.Geometry.Position.#ctor(System.Double,System.Double,System.Nullable{System.Double})
  commentId: M:GeoJSON.Net.Geometry.Position.#ctor(System.Double,System.Double,System.Nullable{System.Double})
  id: '#ctor(System.Double,System.Double,System.Nullable{System.Double})'
  parent: GeoJSON.Net.Geometry.Position
  langs:
  - csharp
  - vb
  name: Position(Double, Double, Nullable<Double>)
  nameWithType: Position.Position(Double, Double, Nullable<Double>)
  fullName: GeoJSON.Net.Geometry.Position.Position(System.Double, System.Double, System.Nullable<System.Double>)
  type: Constructor
  source:
    remote:
      path: Assets/GeoJSON.Net/Geometry/Position.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/GeoJSON.Net/Geometry/Position.cs
    startLine: 22
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.Geometry
  summary: "\nInitializes a new instance of the <xref href=\"GeoJSON.Net.Geometry.Position\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public Position(double latitude, double longitude, double? altitude = default(double? ))
    parameters:
    - id: latitude
      type: System.Double
      description: The latitude, or Y coordinate.
    - id: longitude
      type: System.Double
      description: The longitude or X coordinate.
    - id: altitude
      type: System.Nullable{System.Double}
      description: The altitude in m(eter).
    content.vb: Public Sub New(latitude As Double, longitude As Double, altitude As Double? = Nothing)
  overload: GeoJSON.Net.Geometry.Position.#ctor*
  nameWithType.vb: Position.Position(Double, Double, Nullable(Of Double))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GeoJSON.Net.Geometry.Position.Position(System.Double, System.Double, System.Nullable(Of System.Double))
  name.vb: Position(Double, Double, Nullable(Of Double))
- uid: GeoJSON.Net.Geometry.Position.#ctor(System.String,System.String,System.String)
  commentId: M:GeoJSON.Net.Geometry.Position.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: GeoJSON.Net.Geometry.Position
  langs:
  - csharp
  - vb
  name: Position(String, String, String)
  nameWithType: Position.Position(String, String, String)
  fullName: GeoJSON.Net.Geometry.Position.Position(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Assets/GeoJSON.Net/Geometry/Position.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/GeoJSON.Net/Geometry/Position.cs
    startLine: 36
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.Geometry
  summary: "\nInitializes a new instance of the <xref href=\"GeoJSON.Net.Geometry.Position\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public Position(string latitude, string longitude, string altitude = null)
    parameters:
    - id: latitude
      type: System.String
      description: The latitude, or Y coordinate e.g. &apos;38.889722&apos;.
    - id: longitude
      type: System.String
      description: The longitude, or X coordinate e.g. &apos;-77.008889&apos;.
    - id: altitude
      type: System.String
      description: The altitude in m(eters).
    content.vb: Public Sub New(latitude As String, longitude As String, altitude As String = Nothing)
  overload: GeoJSON.Net.Geometry.Position.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GeoJSON.Net.Geometry.Position.Altitude
  commentId: P:GeoJSON.Net.Geometry.Position.Altitude
  id: Altitude
  parent: GeoJSON.Net.Geometry.Position
  langs:
  - csharp
  - vb
  name: Altitude
  nameWithType: Position.Altitude
  fullName: GeoJSON.Net.Geometry.Position.Altitude
  type: Property
  source:
    remote:
      path: Assets/GeoJSON.Net/Geometry/Position.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Altitude
    path: ../Assets/GeoJSON.Net/Geometry/Position.cs
    startLine: 76
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.Geometry
  summary: "\nGets the altitude.\n"
  example: []
  syntax:
    content: public double? Altitude { get; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public ReadOnly Property Altitude As Double?
  overload: GeoJSON.Net.Geometry.Position.Altitude*
  implements:
  - GeoJSON.Net.Geometry.IPosition.Altitude
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: GeoJSON.Net.Geometry.Position.Latitude
  commentId: P:GeoJSON.Net.Geometry.Position.Latitude
  id: Latitude
  parent: GeoJSON.Net.Geometry.Position
  langs:
  - csharp
  - vb
  name: Latitude
  nameWithType: Position.Latitude
  fullName: GeoJSON.Net.Geometry.Position.Latitude
  type: Property
  source:
    remote:
      path: Assets/GeoJSON.Net/Geometry/Position.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Latitude
    path: ../Assets/GeoJSON.Net/Geometry/Position.cs
    startLine: 81
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.Geometry
  summary: "\nGets the latitude or Y coordinate\n"
  example: []
  syntax:
    content: public double Latitude { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Latitude As Double
  overload: GeoJSON.Net.Geometry.Position.Latitude*
  implements:
  - GeoJSON.Net.Geometry.IPosition.Latitude
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: GeoJSON.Net.Geometry.Position.Longitude
  commentId: P:GeoJSON.Net.Geometry.Position.Longitude
  id: Longitude
  parent: GeoJSON.Net.Geometry.Position
  langs:
  - csharp
  - vb
  name: Longitude
  nameWithType: Position.Longitude
  fullName: GeoJSON.Net.Geometry.Position.Longitude
  type: Property
  source:
    remote:
      path: Assets/GeoJSON.Net/Geometry/Position.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Longitude
    path: ../Assets/GeoJSON.Net/Geometry/Position.cs
    startLine: 86
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.Geometry
  summary: "\nGets the longitude or X coordinate\n"
  example: []
  syntax:
    content: public double Longitude { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Longitude As Double
  overload: GeoJSON.Net.Geometry.Position.Longitude*
  implements:
  - GeoJSON.Net.Geometry.IPosition.Longitude
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: GeoJSON.Net.Geometry.Position.ToString
  commentId: M:GeoJSON.Net.Geometry.Position.ToString
  id: ToString
  parent: GeoJSON.Net.Geometry.Position
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Position.ToString()
  fullName: GeoJSON.Net.Geometry.Position.ToString()
  type: Method
  source:
    remote:
      path: Assets/GeoJSON.Net/Geometry/Position.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ToString
    path: ../Assets/GeoJSON.Net/Geometry/Position.cs
    startLine: 94
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.Geometry
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance.\n"
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: GeoJSON.Net.Geometry.Position.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GeoJSON.Net.Geometry.Position.Equals(System.Object)
  commentId: M:GeoJSON.Net.Geometry.Position.Equals(System.Object)
  id: Equals(System.Object)
  parent: GeoJSON.Net.Geometry.Position
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Position.Equals(Object)
  fullName: GeoJSON.Net.Geometry.Position.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Assets/GeoJSON.Net/Geometry/Position.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Equals
    path: ../Assets/GeoJSON.Net/Geometry/Position.cs
    startLine: 106
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.Geometry
  summary: "\nDetermines whether the specified object is equal to the current object\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: GeoJSON.Net.Geometry.Position.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GeoJSON.Net.Geometry.Position.Equals(GeoJSON.Net.Geometry.Position)
  commentId: M:GeoJSON.Net.Geometry.Position.Equals(GeoJSON.Net.Geometry.Position)
  id: Equals(GeoJSON.Net.Geometry.Position)
  parent: GeoJSON.Net.Geometry.Position
  langs:
  - csharp
  - vb
  name: Equals(Position)
  nameWithType: Position.Equals(Position)
  fullName: GeoJSON.Net.Geometry.Position.Equals(GeoJSON.Net.Geometry.Position)
  type: Method
  source:
    remote:
      path: Assets/GeoJSON.Net/Geometry/Position.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Equals
    path: ../Assets/GeoJSON.Net/Geometry/Position.cs
    startLine: 114
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.Geometry
  summary: "\nDetermines whether the specified object is equal to the current object\n"
  example: []
  syntax:
    content: public bool Equals(Position other)
    parameters:
    - id: other
      type: GeoJSON.Net.Geometry.Position
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Position) As Boolean
  overload: GeoJSON.Net.Geometry.Position.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GeoJSON.Net.Geometry.Position.Equals(GeoJSON.Net.Geometry.Position,GeoJSON.Net.Geometry.Position)
  commentId: M:GeoJSON.Net.Geometry.Position.Equals(GeoJSON.Net.Geometry.Position,GeoJSON.Net.Geometry.Position)
  id: Equals(GeoJSON.Net.Geometry.Position,GeoJSON.Net.Geometry.Position)
  parent: GeoJSON.Net.Geometry.Position
  langs:
  - csharp
  - vb
  name: Equals(Position, Position)
  nameWithType: Position.Equals(Position, Position)
  fullName: GeoJSON.Net.Geometry.Position.Equals(GeoJSON.Net.Geometry.Position, GeoJSON.Net.Geometry.Position)
  type: Method
  source:
    remote:
      path: Assets/GeoJSON.Net/Geometry/Position.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Equals
    path: ../Assets/GeoJSON.Net/Geometry/Position.cs
    startLine: 122
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.Geometry
  summary: "\nDetermines whether the specified object instances are considered equal\n"
  example: []
  syntax:
    content: public bool Equals(Position left, Position right)
    parameters:
    - id: left
      type: GeoJSON.Net.Geometry.Position
    - id: right
      type: GeoJSON.Net.Geometry.Position
    return:
      type: System.Boolean
    content.vb: Public Function Equals(left As Position, right As Position) As Boolean
  overload: GeoJSON.Net.Geometry.Position.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GeoJSON.Net.Geometry.Position.op_Equality(GeoJSON.Net.Geometry.Position,GeoJSON.Net.Geometry.Position)
  commentId: M:GeoJSON.Net.Geometry.Position.op_Equality(GeoJSON.Net.Geometry.Position,GeoJSON.Net.Geometry.Position)
  id: op_Equality(GeoJSON.Net.Geometry.Position,GeoJSON.Net.Geometry.Position)
  parent: GeoJSON.Net.Geometry.Position
  langs:
  - csharp
  - vb
  name: Equality(Position, Position)
  nameWithType: Position.Equality(Position, Position)
  fullName: GeoJSON.Net.Geometry.Position.Equality(GeoJSON.Net.Geometry.Position, GeoJSON.Net.Geometry.Position)
  type: Operator
  source:
    remote:
      path: Assets/GeoJSON.Net/Geometry/Position.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Equality
    path: ../Assets/GeoJSON.Net/Geometry/Position.cs
    startLine: 131
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.Geometry
  summary: "\nDetermines whether the specified object instances are considered equal\n"
  example: []
  syntax:
    content: public static bool operator ==(Position left, Position right)
    parameters:
    - id: left
      type: GeoJSON.Net.Geometry.Position
    - id: right
      type: GeoJSON.Net.Geometry.Position
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As Position, right As Position) As Boolean
  overload: GeoJSON.Net.Geometry.Position.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GeoJSON.Net.Geometry.Position.op_Inequality(GeoJSON.Net.Geometry.Position,GeoJSON.Net.Geometry.Position)
  commentId: M:GeoJSON.Net.Geometry.Position.op_Inequality(GeoJSON.Net.Geometry.Position,GeoJSON.Net.Geometry.Position)
  id: op_Inequality(GeoJSON.Net.Geometry.Position,GeoJSON.Net.Geometry.Position)
  parent: GeoJSON.Net.Geometry.Position
  langs:
  - csharp
  - vb
  name: Inequality(Position, Position)
  nameWithType: Position.Inequality(Position, Position)
  fullName: GeoJSON.Net.Geometry.Position.Inequality(GeoJSON.Net.Geometry.Position, GeoJSON.Net.Geometry.Position)
  type: Operator
  source:
    remote:
      path: Assets/GeoJSON.Net/Geometry/Position.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Inequality
    path: ../Assets/GeoJSON.Net/Geometry/Position.cs
    startLine: 153
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.Geometry
  summary: "\nDetermines whether the specified object instances are considered equal\n"
  example: []
  syntax:
    content: public static bool operator !=(Position left, Position right)
    parameters:
    - id: left
      type: GeoJSON.Net.Geometry.Position
    - id: right
      type: GeoJSON.Net.Geometry.Position
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As Position, right As Position) As Boolean
  overload: GeoJSON.Net.Geometry.Position.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GeoJSON.Net.Geometry.Position.GetHashCode
  commentId: M:GeoJSON.Net.Geometry.Position.GetHashCode
  id: GetHashCode
  parent: GeoJSON.Net.Geometry.Position
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Position.GetHashCode()
  fullName: GeoJSON.Net.Geometry.Position.GetHashCode()
  type: Method
  source:
    remote:
      path: Assets/GeoJSON.Net/Geometry/Position.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GetHashCode
    path: ../Assets/GeoJSON.Net/Geometry/Position.cs
    startLine: 161
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.Geometry
  summary: "\nReturns the hash code for this instance\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: GeoJSON.Net.Geometry.Position.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GeoJSON.Net.Geometry.Position.GetHashCode(GeoJSON.Net.Geometry.Position)
  commentId: M:GeoJSON.Net.Geometry.Position.GetHashCode(GeoJSON.Net.Geometry.Position)
  id: GetHashCode(GeoJSON.Net.Geometry.Position)
  parent: GeoJSON.Net.Geometry.Position
  langs:
  - csharp
  - vb
  name: GetHashCode(Position)
  nameWithType: Position.GetHashCode(Position)
  fullName: GeoJSON.Net.Geometry.Position.GetHashCode(GeoJSON.Net.Geometry.Position)
  type: Method
  source:
    remote:
      path: Assets/GeoJSON.Net/Geometry/Position.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GetHashCode
    path: ../Assets/GeoJSON.Net/Geometry/Position.cs
    startLine: 172
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.Geometry
  summary: "\nReturns the hash code for the specified object\n"
  example: []
  syntax:
    content: public int GetHashCode(Position other)
    parameters:
    - id: other
      type: GeoJSON.Net.Geometry.Position
    return:
      type: System.Int32
    content.vb: Public Function GetHashCode(other As Position) As Integer
  overload: GeoJSON.Net.Geometry.Position.GetHashCode*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: GeoJSON.Net.Geometry.Position.Latitude
  commentId: P:GeoJSON.Net.Geometry.Position.Latitude
  isExternal: true
- uid: GeoJSON.Net.Geometry.Position.Longitude
  commentId: P:GeoJSON.Net.Geometry.Position.Longitude
  isExternal: true
- uid: GeoJSON.Net.Geometry.Position.Altitude
  commentId: P:GeoJSON.Net.Geometry.Position.Altitude
  isExternal: true
- uid: GeoJSON.Net.Geometry
  commentId: N:GeoJSON.Net.Geometry
  name: GeoJSON.Net.Geometry
  nameWithType: GeoJSON.Net.Geometry
  fullName: GeoJSON.Net.Geometry
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: GeoJSON.Net.Geometry.IPosition
  commentId: T:GeoJSON.Net.Geometry.IPosition
  parent: GeoJSON.Net.Geometry
  name: IPosition
  nameWithType: IPosition
  fullName: GeoJSON.Net.Geometry.IPosition
- uid: GeoJSON.Net.Geometry.IPosition.Virgis.PositionExtensionMethods.Vector2d
  commentId: M:Virgis.PositionExtensionMethods.Vector2d(GeoJSON.Net.Geometry.IPosition)
  parent: Virgis.PositionExtensionMethods
  definition: Virgis.PositionExtensionMethods.Vector2d(GeoJSON.Net.Geometry.IPosition)
  name: Vector2d()
  nameWithType: PositionExtensionMethods.Vector2d()
  fullName: Virgis.PositionExtensionMethods.Vector2d()
  spec.csharp:
  - uid: Virgis.PositionExtensionMethods.Vector2d
    name: Vector2d
    nameWithType: PositionExtensionMethods.Vector2d
    fullName: Virgis.PositionExtensionMethods.Vector2d
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.PositionExtensionMethods.Vector2d
    name: Vector2d
    nameWithType: PositionExtensionMethods.Vector2d
    fullName: Virgis.PositionExtensionMethods.Vector2d
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GeoJSON.Net.Geometry.IPosition.Virgis.PositionExtensionMethods.Vector2
  commentId: M:Virgis.PositionExtensionMethods.Vector2(GeoJSON.Net.Geometry.IPosition)
  parent: Virgis.PositionExtensionMethods
  definition: Virgis.PositionExtensionMethods.Vector2(GeoJSON.Net.Geometry.IPosition)
  name: Vector2()
  nameWithType: PositionExtensionMethods.Vector2()
  fullName: Virgis.PositionExtensionMethods.Vector2()
  spec.csharp:
  - uid: Virgis.PositionExtensionMethods.Vector2
    name: Vector2
    nameWithType: PositionExtensionMethods.Vector2
    fullName: Virgis.PositionExtensionMethods.Vector2
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.PositionExtensionMethods.Vector2
    name: Vector2
    nameWithType: PositionExtensionMethods.Vector2
    fullName: Virgis.PositionExtensionMethods.Vector2
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GeoJSON.Net.Geometry.IPosition.Virgis.PositionExtensionMethods.Point
  commentId: M:Virgis.PositionExtensionMethods.Point(GeoJSON.Net.Geometry.IPosition)
  parent: Virgis.PositionExtensionMethods
  definition: Virgis.PositionExtensionMethods.Point(GeoJSON.Net.Geometry.IPosition)
  name: Point()
  nameWithType: PositionExtensionMethods.Point()
  fullName: Virgis.PositionExtensionMethods.Point()
  spec.csharp:
  - uid: Virgis.PositionExtensionMethods.Point
    name: Point
    nameWithType: PositionExtensionMethods.Point
    fullName: Virgis.PositionExtensionMethods.Point
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.PositionExtensionMethods.Point
    name: Point
    nameWithType: PositionExtensionMethods.Point
    fullName: Virgis.PositionExtensionMethods.Point
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GeoJSON.Net.Geometry.IPosition.Virgis.PositionExtensionMethods.Vector3
  commentId: M:Virgis.PositionExtensionMethods.Vector3(GeoJSON.Net.Geometry.IPosition)
  parent: Virgis.PositionExtensionMethods
  definition: Virgis.PositionExtensionMethods.Vector3(GeoJSON.Net.Geometry.IPosition)
  name: Vector3()
  nameWithType: PositionExtensionMethods.Vector3()
  fullName: Virgis.PositionExtensionMethods.Vector3()
  spec.csharp:
  - uid: Virgis.PositionExtensionMethods.Vector3
    name: Vector3
    nameWithType: PositionExtensionMethods.Vector3
    fullName: Virgis.PositionExtensionMethods.Vector3
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.PositionExtensionMethods.Vector3
    name: Vector3
    nameWithType: PositionExtensionMethods.Vector3
    fullName: Virgis.PositionExtensionMethods.Vector3
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Virgis.PositionExtensionMethods.Vector2d(GeoJSON.Net.Geometry.IPosition)
  commentId: M:Virgis.PositionExtensionMethods.Vector2d(GeoJSON.Net.Geometry.IPosition)
  name: Vector2d(IPosition)
  nameWithType: PositionExtensionMethods.Vector2d(IPosition)
  fullName: Virgis.PositionExtensionMethods.Vector2d(GeoJSON.Net.Geometry.IPosition)
  spec.csharp:
  - uid: Virgis.PositionExtensionMethods.Vector2d(GeoJSON.Net.Geometry.IPosition)
    name: Vector2d
    nameWithType: PositionExtensionMethods.Vector2d
    fullName: Virgis.PositionExtensionMethods.Vector2d
  - name: (
    nameWithType: (
    fullName: (
  - uid: GeoJSON.Net.Geometry.IPosition
    name: IPosition
    nameWithType: IPosition
    fullName: GeoJSON.Net.Geometry.IPosition
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.PositionExtensionMethods.Vector2d(GeoJSON.Net.Geometry.IPosition)
    name: Vector2d
    nameWithType: PositionExtensionMethods.Vector2d
    fullName: Virgis.PositionExtensionMethods.Vector2d
  - name: (
    nameWithType: (
    fullName: (
  - uid: GeoJSON.Net.Geometry.IPosition
    name: IPosition
    nameWithType: IPosition
    fullName: GeoJSON.Net.Geometry.IPosition
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.PositionExtensionMethods
  commentId: T:Virgis.PositionExtensionMethods
  parent: Virgis
  name: PositionExtensionMethods
  nameWithType: PositionExtensionMethods
  fullName: Virgis.PositionExtensionMethods
- uid: Virgis.PositionExtensionMethods.Vector2(GeoJSON.Net.Geometry.IPosition)
  commentId: M:Virgis.PositionExtensionMethods.Vector2(GeoJSON.Net.Geometry.IPosition)
  name: Vector2(IPosition)
  nameWithType: PositionExtensionMethods.Vector2(IPosition)
  fullName: Virgis.PositionExtensionMethods.Vector2(GeoJSON.Net.Geometry.IPosition)
  spec.csharp:
  - uid: Virgis.PositionExtensionMethods.Vector2(GeoJSON.Net.Geometry.IPosition)
    name: Vector2
    nameWithType: PositionExtensionMethods.Vector2
    fullName: Virgis.PositionExtensionMethods.Vector2
  - name: (
    nameWithType: (
    fullName: (
  - uid: GeoJSON.Net.Geometry.IPosition
    name: IPosition
    nameWithType: IPosition
    fullName: GeoJSON.Net.Geometry.IPosition
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.PositionExtensionMethods.Vector2(GeoJSON.Net.Geometry.IPosition)
    name: Vector2
    nameWithType: PositionExtensionMethods.Vector2
    fullName: Virgis.PositionExtensionMethods.Vector2
  - name: (
    nameWithType: (
    fullName: (
  - uid: GeoJSON.Net.Geometry.IPosition
    name: IPosition
    nameWithType: IPosition
    fullName: GeoJSON.Net.Geometry.IPosition
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.PositionExtensionMethods.Point(GeoJSON.Net.Geometry.IPosition)
  commentId: M:Virgis.PositionExtensionMethods.Point(GeoJSON.Net.Geometry.IPosition)
  name: Point(IPosition)
  nameWithType: PositionExtensionMethods.Point(IPosition)
  fullName: Virgis.PositionExtensionMethods.Point(GeoJSON.Net.Geometry.IPosition)
  spec.csharp:
  - uid: Virgis.PositionExtensionMethods.Point(GeoJSON.Net.Geometry.IPosition)
    name: Point
    nameWithType: PositionExtensionMethods.Point
    fullName: Virgis.PositionExtensionMethods.Point
  - name: (
    nameWithType: (
    fullName: (
  - uid: GeoJSON.Net.Geometry.IPosition
    name: IPosition
    nameWithType: IPosition
    fullName: GeoJSON.Net.Geometry.IPosition
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.PositionExtensionMethods.Point(GeoJSON.Net.Geometry.IPosition)
    name: Point
    nameWithType: PositionExtensionMethods.Point
    fullName: Virgis.PositionExtensionMethods.Point
  - name: (
    nameWithType: (
    fullName: (
  - uid: GeoJSON.Net.Geometry.IPosition
    name: IPosition
    nameWithType: IPosition
    fullName: GeoJSON.Net.Geometry.IPosition
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.PositionExtensionMethods.Vector3(GeoJSON.Net.Geometry.IPosition)
  commentId: M:Virgis.PositionExtensionMethods.Vector3(GeoJSON.Net.Geometry.IPosition)
  name: Vector3(IPosition)
  nameWithType: PositionExtensionMethods.Vector3(IPosition)
  fullName: Virgis.PositionExtensionMethods.Vector3(GeoJSON.Net.Geometry.IPosition)
  spec.csharp:
  - uid: Virgis.PositionExtensionMethods.Vector3(GeoJSON.Net.Geometry.IPosition)
    name: Vector3
    nameWithType: PositionExtensionMethods.Vector3
    fullName: Virgis.PositionExtensionMethods.Vector3
  - name: (
    nameWithType: (
    fullName: (
  - uid: GeoJSON.Net.Geometry.IPosition
    name: IPosition
    nameWithType: IPosition
    fullName: GeoJSON.Net.Geometry.IPosition
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.PositionExtensionMethods.Vector3(GeoJSON.Net.Geometry.IPosition)
    name: Vector3
    nameWithType: PositionExtensionMethods.Vector3
    fullName: Virgis.PositionExtensionMethods.Vector3
  - name: (
    nameWithType: (
    fullName: (
  - uid: GeoJSON.Net.Geometry.IPosition
    name: IPosition
    nameWithType: IPosition
    fullName: GeoJSON.Net.Geometry.IPosition
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis
  commentId: N:Virgis
  name: Virgis
  nameWithType: Virgis
  fullName: Virgis
- uid: GeoJSON.Net.Geometry.Position
  commentId: T:GeoJSON.Net.Geometry.Position
  parent: GeoJSON.Net.Geometry
  name: Position
  nameWithType: Position
  fullName: GeoJSON.Net.Geometry.Position
- uid: GeoJSON.Net.Geometry.Position.#ctor*
  commentId: Overload:GeoJSON.Net.Geometry.Position.#ctor
  name: Position
  nameWithType: Position.Position
  fullName: GeoJSON.Net.Geometry.Position.Position
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: GeoJSON.Net.Geometry.Position.Altitude*
  commentId: Overload:GeoJSON.Net.Geometry.Position.Altitude
  name: Altitude
  nameWithType: Position.Altitude
  fullName: GeoJSON.Net.Geometry.Position.Altitude
- uid: GeoJSON.Net.Geometry.IPosition.Altitude
  commentId: P:GeoJSON.Net.Geometry.IPosition.Altitude
  parent: GeoJSON.Net.Geometry.IPosition
  name: Altitude
  nameWithType: IPosition.Altitude
  fullName: GeoJSON.Net.Geometry.IPosition.Altitude
- uid: GeoJSON.Net.Geometry.Position.Latitude*
  commentId: Overload:GeoJSON.Net.Geometry.Position.Latitude
  name: Latitude
  nameWithType: Position.Latitude
  fullName: GeoJSON.Net.Geometry.Position.Latitude
- uid: GeoJSON.Net.Geometry.IPosition.Latitude
  commentId: P:GeoJSON.Net.Geometry.IPosition.Latitude
  parent: GeoJSON.Net.Geometry.IPosition
  name: Latitude
  nameWithType: IPosition.Latitude
  fullName: GeoJSON.Net.Geometry.IPosition.Latitude
- uid: GeoJSON.Net.Geometry.Position.Longitude*
  commentId: Overload:GeoJSON.Net.Geometry.Position.Longitude
  name: Longitude
  nameWithType: Position.Longitude
  fullName: GeoJSON.Net.Geometry.Position.Longitude
- uid: GeoJSON.Net.Geometry.IPosition.Longitude
  commentId: P:GeoJSON.Net.Geometry.IPosition.Longitude
  parent: GeoJSON.Net.Geometry.IPosition
  name: Longitude
  nameWithType: IPosition.Longitude
  fullName: GeoJSON.Net.Geometry.IPosition.Longitude
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GeoJSON.Net.Geometry.Position.ToString*
  commentId: Overload:GeoJSON.Net.Geometry.Position.ToString
  name: ToString
  nameWithType: Position.ToString
  fullName: GeoJSON.Net.Geometry.Position.ToString
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GeoJSON.Net.Geometry.Position.Equals*
  commentId: Overload:GeoJSON.Net.Geometry.Position.Equals
  name: Equals
  nameWithType: Position.Equals
  fullName: GeoJSON.Net.Geometry.Position.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: GeoJSON.Net.Geometry.Position.op_Equality*
  commentId: Overload:GeoJSON.Net.Geometry.Position.op_Equality
  name: Equality
  nameWithType: Position.Equality
  fullName: GeoJSON.Net.Geometry.Position.Equality
- uid: GeoJSON.Net.Geometry.Position.op_Inequality*
  commentId: Overload:GeoJSON.Net.Geometry.Position.op_Inequality
  name: Inequality
  nameWithType: Position.Inequality
  fullName: GeoJSON.Net.Geometry.Position.Inequality
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GeoJSON.Net.Geometry.Position.GetHashCode*
  commentId: Overload:GeoJSON.Net.Geometry.Position.GetHashCode
  name: GetHashCode
  nameWithType: Position.GetHashCode
  fullName: GeoJSON.Net.Geometry.Position.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32

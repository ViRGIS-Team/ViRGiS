### YamlMime:ManagedReference
items:
- uid: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS
  commentId: T:GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS
  id: UnspecifiedCRS
  parent: GeoJSON.Net.CoordinateReferenceSystem
  children:
  - GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.Equals(GeoJSON.Net.CoordinateReferenceSystem.ICRSObject)
  - GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.Equals(System.Object)
  - GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.GetHashCode
  - GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.op_Equality(GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS,GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS)
  - GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.op_Inequality(GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS,GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS)
  - GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.Type
  langs:
  - csharp
  - vb
  name: UnspecifiedCRS
  nameWithType: UnspecifiedCRS
  fullName: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS
  type: Class
  source:
    remote:
      path: Assets/GeoJSON.Net/CoordinateReferenceSystem/UnspecifiedCRS.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: UnspecifiedCRS
    path: ../Assets/GeoJSON.Net/CoordinateReferenceSystem/UnspecifiedCRS.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.CoordinateReferenceSystem
  summary: "\nRepresents an unspecified Coordinate Reference System \ni.e. where a geojson object has a null crs\n"
  example: []
  syntax:
    content: 'public class UnspecifiedCRS : ICRSObject'
    content.vb: >-
      Public Class UnspecifiedCRS
          Implements ICRSObject
  inheritance:
  - System.Object
  implements:
  - GeoJSON.Net.CoordinateReferenceSystem.ICRSObject
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.Type
  commentId: P:GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.Type
  id: Type
  parent: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: UnspecifiedCRS.Type
  fullName: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.Type
  type: Property
  source:
    remote:
      path: Assets/GeoJSON.Net/CoordinateReferenceSystem/UnspecifiedCRS.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Type
    path: ../Assets/GeoJSON.Net/CoordinateReferenceSystem/UnspecifiedCRS.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.CoordinateReferenceSystem
  summary: "\nGets the CRS type.\n"
  example: []
  syntax:
    content: public CRSType Type { get; }
    parameters: []
    return:
      type: GeoJSON.Net.CoordinateReferenceSystem.CRSType
    content.vb: Public ReadOnly Property Type As CRSType
  overload: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.Type*
  implements:
  - GeoJSON.Net.CoordinateReferenceSystem.ICRSObject.Type
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.Equals(System.Object)
  commentId: M:GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.Equals(System.Object)
  id: Equals(System.Object)
  parent: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: UnspecifiedCRS.Equals(Object)
  fullName: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Assets/GeoJSON.Net/CoordinateReferenceSystem/UnspecifiedCRS.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Equals
    path: ../Assets/GeoJSON.Net/CoordinateReferenceSystem/UnspecifiedCRS.cs
    startLine: 24
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.CoordinateReferenceSystem
  summary: "\nDetermines whether the specified object is equal to the current object\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.Equals(GeoJSON.Net.CoordinateReferenceSystem.ICRSObject)
  commentId: M:GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.Equals(GeoJSON.Net.CoordinateReferenceSystem.ICRSObject)
  id: Equals(GeoJSON.Net.CoordinateReferenceSystem.ICRSObject)
  parent: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS
  langs:
  - csharp
  - vb
  name: Equals(ICRSObject)
  nameWithType: UnspecifiedCRS.Equals(ICRSObject)
  fullName: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.Equals(GeoJSON.Net.CoordinateReferenceSystem.ICRSObject)
  type: Method
  source:
    remote:
      path: Assets/GeoJSON.Net/CoordinateReferenceSystem/UnspecifiedCRS.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Equals
    path: ../Assets/GeoJSON.Net/CoordinateReferenceSystem/UnspecifiedCRS.cs
    startLine: 32
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.CoordinateReferenceSystem
  summary: "\nDetermines whether the specified object is equal to the current object\n"
  example: []
  syntax:
    content: public bool Equals(ICRSObject obj)
    parameters:
    - id: obj
      type: GeoJSON.Net.CoordinateReferenceSystem.ICRSObject
    return:
      type: System.Boolean
    content.vb: Public Function Equals(obj As ICRSObject) As Boolean
  overload: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.op_Equality(GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS,GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS)
  commentId: M:GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.op_Equality(GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS,GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS)
  id: op_Equality(GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS,GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS)
  parent: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS
  langs:
  - csharp
  - vb
  name: Equality(UnspecifiedCRS, UnspecifiedCRS)
  nameWithType: UnspecifiedCRS.Equality(UnspecifiedCRS, UnspecifiedCRS)
  fullName: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.Equality(GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS, GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS)
  type: Operator
  source:
    remote:
      path: Assets/GeoJSON.Net/CoordinateReferenceSystem/UnspecifiedCRS.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Equality
    path: ../Assets/GeoJSON.Net/CoordinateReferenceSystem/UnspecifiedCRS.cs
    startLine: 48
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.CoordinateReferenceSystem
  summary: "\nDetermines whether the specified object instances are considered equal\n"
  example: []
  syntax:
    content: public static bool operator ==(UnspecifiedCRS left, UnspecifiedCRS right)
    parameters:
    - id: left
      type: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS
    - id: right
      type: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As UnspecifiedCRS, right As UnspecifiedCRS) As Boolean
  overload: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.op_Inequality(GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS,GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS)
  commentId: M:GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.op_Inequality(GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS,GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS)
  id: op_Inequality(GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS,GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS)
  parent: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS
  langs:
  - csharp
  - vb
  name: Inequality(UnspecifiedCRS, UnspecifiedCRS)
  nameWithType: UnspecifiedCRS.Inequality(UnspecifiedCRS, UnspecifiedCRS)
  fullName: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.Inequality(GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS, GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS)
  type: Operator
  source:
    remote:
      path: Assets/GeoJSON.Net/CoordinateReferenceSystem/UnspecifiedCRS.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Inequality
    path: ../Assets/GeoJSON.Net/CoordinateReferenceSystem/UnspecifiedCRS.cs
    startLine: 64
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.CoordinateReferenceSystem
  summary: "\nDetermines whether the specified object instances are not considered equal\n"
  example: []
  syntax:
    content: public static bool operator !=(UnspecifiedCRS left, UnspecifiedCRS right)
    parameters:
    - id: left
      type: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS
    - id: right
      type: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As UnspecifiedCRS, right As UnspecifiedCRS) As Boolean
  overload: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.GetHashCode
  commentId: M:GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.GetHashCode
  id: GetHashCode
  parent: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: UnspecifiedCRS.GetHashCode()
  fullName: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.GetHashCode()
  type: Method
  source:
    remote:
      path: Assets/GeoJSON.Net/CoordinateReferenceSystem/UnspecifiedCRS.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GetHashCode
    path: ../Assets/GeoJSON.Net/CoordinateReferenceSystem/UnspecifiedCRS.cs
    startLine: 72
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.CoordinateReferenceSystem
  summary: "\nReturns the hash code for this instance\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: GeoJSON.Net.CoordinateReferenceSystem
  commentId: N:GeoJSON.Net.CoordinateReferenceSystem
  name: GeoJSON.Net.CoordinateReferenceSystem
  nameWithType: GeoJSON.Net.CoordinateReferenceSystem
  fullName: GeoJSON.Net.CoordinateReferenceSystem
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: GeoJSON.Net.CoordinateReferenceSystem.ICRSObject
  commentId: T:GeoJSON.Net.CoordinateReferenceSystem.ICRSObject
  parent: GeoJSON.Net.CoordinateReferenceSystem
  name: ICRSObject
  nameWithType: ICRSObject
  fullName: GeoJSON.Net.CoordinateReferenceSystem.ICRSObject
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.Type*
  commentId: Overload:GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.Type
  name: Type
  nameWithType: UnspecifiedCRS.Type
  fullName: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.Type
- uid: GeoJSON.Net.CoordinateReferenceSystem.ICRSObject.Type
  commentId: P:GeoJSON.Net.CoordinateReferenceSystem.ICRSObject.Type
  parent: GeoJSON.Net.CoordinateReferenceSystem.ICRSObject
  name: Type
  nameWithType: ICRSObject.Type
  fullName: GeoJSON.Net.CoordinateReferenceSystem.ICRSObject.Type
- uid: GeoJSON.Net.CoordinateReferenceSystem.CRSType
  commentId: T:GeoJSON.Net.CoordinateReferenceSystem.CRSType
  parent: GeoJSON.Net.CoordinateReferenceSystem
  name: CRSType
  nameWithType: CRSType
  fullName: GeoJSON.Net.CoordinateReferenceSystem.CRSType
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.Equals*
  commentId: Overload:GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.Equals
  name: Equals
  nameWithType: UnspecifiedCRS.Equals
  fullName: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.op_Equality*
  commentId: Overload:GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.op_Equality
  name: Equality
  nameWithType: UnspecifiedCRS.Equality
  fullName: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.Equality
- uid: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS
  commentId: T:GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS
  parent: GeoJSON.Net.CoordinateReferenceSystem
  name: UnspecifiedCRS
  nameWithType: UnspecifiedCRS
  fullName: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS
- uid: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.op_Inequality*
  commentId: Overload:GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.op_Inequality
  name: Inequality
  nameWithType: UnspecifiedCRS.Inequality
  fullName: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.Inequality
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.GetHashCode*
  commentId: Overload:GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.GetHashCode
  name: GetHashCode
  nameWithType: UnspecifiedCRS.GetHashCode
  fullName: GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32

### YamlMime:ManagedReference
items:
- uid: g3.StandardMeshWriter
  commentId: T:g3.StandardMeshWriter
  id: StandardMeshWriter
  parent: g3
  children:
  - g3.StandardMeshWriter.CloseStreamF
  - g3.StandardMeshWriter.Dispose
  - g3.StandardMeshWriter.OpenStreamF
  - g3.StandardMeshWriter.Write(System.String,System.Collections.Generic.List{g3.WriteMesh},g3.WriteOptions)
  - g3.StandardMeshWriter.WriteFile(System.String,System.Collections.Generic.List{g3.WriteMesh},g3.WriteOptions)
  - g3.StandardMeshWriter.WriteInvariantCulture
  - g3.StandardMeshWriter.WriteMesh(System.String,g3.IMesh,g3.WriteOptions)
  - g3.StandardMeshWriter.WriteMeshes(System.String,System.Collections.Generic.List{g3.DMesh3},g3.WriteOptions)
  langs:
  - csharp
  - vb
  name: StandardMeshWriter
  nameWithType: StandardMeshWriter
  fullName: g3.StandardMeshWriter
  type: Class
  source:
    remote:
      path: Assets/geometry3Sharp/io/StandardMeshWriter.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: StandardMeshWriter
    path: ../Assets/geometry3Sharp/io/StandardMeshWriter.cs
    startLine: 18
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nWrites various mesh file formats. Format is determined from extension. Currently supports:\n* .obj : Wavefront OBJ Format https://en.wikipedia.org/wiki/Wavefront_.obj_file\n* .stl : ascii and binary STL formats https://en.wikipedia.org/wiki/STL_(file_format) \n* .off : OFF format https://en.wikipedia.org/wiki/OFF_(file_format)\n* .g3mesh : internal binary format for packed DMesh3 objects\n\nEach of these is implemented in a separate Writer class, eg OBJWriter, STLWriter, etc\n\n"
  example: []
  syntax:
    content: 'public class StandardMeshWriter : IDisposable'
    content.vb: >-
      Public Class StandardMeshWriter
          Implements IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: g3.StandardMeshWriter.WriteInvariantCulture
  commentId: F:g3.StandardMeshWriter.WriteInvariantCulture
  id: WriteInvariantCulture
  parent: g3.StandardMeshWriter
  langs:
  - csharp
  - vb
  name: WriteInvariantCulture
  nameWithType: StandardMeshWriter.WriteInvariantCulture
  fullName: g3.StandardMeshWriter.WriteInvariantCulture
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/io/StandardMeshWriter.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: WriteInvariantCulture
    path: ../Assets/geometry3Sharp/io/StandardMeshWriter.cs
    startLine: 26
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nIf the mesh format we are writing is text, then the OS will write in the number style\nof the current language. So in Germany, numbers are written 1,00 instead of 1.00, for example.\nIf this flag is true, we override this to always write in a consistent way.\n"
  example: []
  syntax:
    content: public bool WriteInvariantCulture
    return:
      type: System.Boolean
    content.vb: Public WriteInvariantCulture As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.StandardMeshWriter.OpenStreamF
  commentId: F:g3.StandardMeshWriter.OpenStreamF
  id: OpenStreamF
  parent: g3.StandardMeshWriter
  langs:
  - csharp
  - vb
  name: OpenStreamF
  nameWithType: StandardMeshWriter.OpenStreamF
  fullName: g3.StandardMeshWriter.OpenStreamF
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/io/StandardMeshWriter.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: OpenStreamF
    path: ../Assets/geometry3Sharp/io/StandardMeshWriter.cs
    startLine: 36
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nBy default we write to files, but if you would like to write to some other\nStream type (eg MemoryStream), you can replace this function.  \nWe also pass this function down into the XYZWriter classes\nthat need to write additional files (eg OBJ mesh)\n"
  example: []
  syntax:
    content: public Func<string, Stream> OpenStreamF
    return:
      type: System.Func{System.String,System.IO.Stream}
    content.vb: Public OpenStreamF As Func(Of String, Stream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.StandardMeshWriter.CloseStreamF
  commentId: F:g3.StandardMeshWriter.CloseStreamF
  id: CloseStreamF
  parent: g3.StandardMeshWriter
  langs:
  - csharp
  - vb
  name: CloseStreamF
  nameWithType: StandardMeshWriter.CloseStreamF
  fullName: g3.StandardMeshWriter.CloseStreamF
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/io/StandardMeshWriter.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: CloseStreamF
    path: ../Assets/geometry3Sharp/io/StandardMeshWriter.cs
    startLine: 43
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\ncalled on Streams returned by OpenStreamF when we are done with them.\n"
  example: []
  syntax:
    content: public Action<Stream> CloseStreamF
    return:
      type: System.Action{System.IO.Stream}
    content.vb: Public CloseStreamF As Action(Of Stream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.StandardMeshWriter.Dispose
  commentId: M:g3.StandardMeshWriter.Dispose
  id: Dispose
  parent: g3.StandardMeshWriter
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: StandardMeshWriter.Dispose()
  fullName: g3.StandardMeshWriter.Dispose()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/io/StandardMeshWriter.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Dispose
    path: ../Assets/geometry3Sharp/io/StandardMeshWriter.cs
    startLine: 51
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: g3.StandardMeshWriter.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.StandardMeshWriter.WriteMeshes(System.String,System.Collections.Generic.List{g3.DMesh3},g3.WriteOptions)
  commentId: M:g3.StandardMeshWriter.WriteMeshes(System.String,System.Collections.Generic.List{g3.DMesh3},g3.WriteOptions)
  id: WriteMeshes(System.String,System.Collections.Generic.List{g3.DMesh3},g3.WriteOptions)
  parent: g3.StandardMeshWriter
  langs:
  - csharp
  - vb
  name: WriteMeshes(String, List<DMesh3>, WriteOptions)
  nameWithType: StandardMeshWriter.WriteMeshes(String, List<DMesh3>, WriteOptions)
  fullName: g3.StandardMeshWriter.WriteMeshes(System.String, System.Collections.Generic.List<g3.DMesh3>, g3.WriteOptions)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/io/StandardMeshWriter.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: WriteMeshes
    path: ../Assets/geometry3Sharp/io/StandardMeshWriter.cs
    startLine: 56
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static IOWriteResult WriteMeshes(string sFilename, List<DMesh3> vMeshes, WriteOptions options)
    parameters:
    - id: sFilename
      type: System.String
    - id: vMeshes
      type: System.Collections.Generic.List{g3.DMesh3}
    - id: options
      type: g3.WriteOptions
    return:
      type: g3.IOWriteResult
    content.vb: Public Shared Function WriteMeshes(sFilename As String, vMeshes As List(Of DMesh3), options As WriteOptions) As IOWriteResult
  overload: g3.StandardMeshWriter.WriteMeshes*
  nameWithType.vb: StandardMeshWriter.WriteMeshes(String, List(Of DMesh3), WriteOptions)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.StandardMeshWriter.WriteMeshes(System.String, System.Collections.Generic.List(Of g3.DMesh3), g3.WriteOptions)
  name.vb: WriteMeshes(String, List(Of DMesh3), WriteOptions)
- uid: g3.StandardMeshWriter.WriteFile(System.String,System.Collections.Generic.List{g3.WriteMesh},g3.WriteOptions)
  commentId: M:g3.StandardMeshWriter.WriteFile(System.String,System.Collections.Generic.List{g3.WriteMesh},g3.WriteOptions)
  id: WriteFile(System.String,System.Collections.Generic.List{g3.WriteMesh},g3.WriteOptions)
  parent: g3.StandardMeshWriter
  langs:
  - csharp
  - vb
  name: WriteFile(String, List<WriteMesh>, WriteOptions)
  nameWithType: StandardMeshWriter.WriteFile(String, List<WriteMesh>, WriteOptions)
  fullName: g3.StandardMeshWriter.WriteFile(System.String, System.Collections.Generic.List<g3.WriteMesh>, g3.WriteOptions)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/io/StandardMeshWriter.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: WriteFile
    path: ../Assets/geometry3Sharp/io/StandardMeshWriter.cs
    startLine: 64
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static IOWriteResult WriteFile(string sFilename, List<WriteMesh> vMeshes, WriteOptions options)
    parameters:
    - id: sFilename
      type: System.String
    - id: vMeshes
      type: System.Collections.Generic.List{g3.WriteMesh}
    - id: options
      type: g3.WriteOptions
    return:
      type: g3.IOWriteResult
    content.vb: Public Shared Function WriteFile(sFilename As String, vMeshes As List(Of WriteMesh), options As WriteOptions) As IOWriteResult
  overload: g3.StandardMeshWriter.WriteFile*
  nameWithType.vb: StandardMeshWriter.WriteFile(String, List(Of WriteMesh), WriteOptions)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.StandardMeshWriter.WriteFile(System.String, System.Collections.Generic.List(Of g3.WriteMesh), g3.WriteOptions)
  name.vb: WriteFile(String, List(Of WriteMesh), WriteOptions)
- uid: g3.StandardMeshWriter.WriteMesh(System.String,g3.IMesh,g3.WriteOptions)
  commentId: M:g3.StandardMeshWriter.WriteMesh(System.String,g3.IMesh,g3.WriteOptions)
  id: WriteMesh(System.String,g3.IMesh,g3.WriteOptions)
  parent: g3.StandardMeshWriter
  langs:
  - csharp
  - vb
  name: WriteMesh(String, IMesh, WriteOptions)
  nameWithType: StandardMeshWriter.WriteMesh(String, IMesh, WriteOptions)
  fullName: g3.StandardMeshWriter.WriteMesh(System.String, g3.IMesh, g3.WriteOptions)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/io/StandardMeshWriter.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: WriteMesh
    path: ../Assets/geometry3Sharp/io/StandardMeshWriter.cs
    startLine: 69
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static IOWriteResult WriteMesh(string sFilename, IMesh mesh, WriteOptions options)
    parameters:
    - id: sFilename
      type: System.String
    - id: mesh
      type: g3.IMesh
    - id: options
      type: g3.WriteOptions
    return:
      type: g3.IOWriteResult
    content.vb: Public Shared Function WriteMesh(sFilename As String, mesh As IMesh, options As WriteOptions) As IOWriteResult
  overload: g3.StandardMeshWriter.WriteMesh*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.StandardMeshWriter.Write(System.String,System.Collections.Generic.List{g3.WriteMesh},g3.WriteOptions)
  commentId: M:g3.StandardMeshWriter.Write(System.String,System.Collections.Generic.List{g3.WriteMesh},g3.WriteOptions)
  id: Write(System.String,System.Collections.Generic.List{g3.WriteMesh},g3.WriteOptions)
  parent: g3.StandardMeshWriter
  langs:
  - csharp
  - vb
  name: Write(String, List<WriteMesh>, WriteOptions)
  nameWithType: StandardMeshWriter.Write(String, List<WriteMesh>, WriteOptions)
  fullName: g3.StandardMeshWriter.Write(System.String, System.Collections.Generic.List<g3.WriteMesh>, g3.WriteOptions)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/io/StandardMeshWriter.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Write
    path: ../Assets/geometry3Sharp/io/StandardMeshWriter.cs
    startLine: 76
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IOWriteResult Write(string sFilename, List<WriteMesh> vMeshes, WriteOptions options)
    parameters:
    - id: sFilename
      type: System.String
    - id: vMeshes
      type: System.Collections.Generic.List{g3.WriteMesh}
    - id: options
      type: g3.WriteOptions
    return:
      type: g3.IOWriteResult
    content.vb: Public Function Write(sFilename As String, vMeshes As List(Of WriteMesh), options As WriteOptions) As IOWriteResult
  overload: g3.StandardMeshWriter.Write*
  nameWithType.vb: StandardMeshWriter.Write(String, List(Of WriteMesh), WriteOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.StandardMeshWriter.Write(System.String, System.Collections.Generic.List(Of g3.WriteMesh), g3.WriteOptions)
  name.vb: Write(String, List(Of WriteMesh), WriteOptions)
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Func{System.String,System.IO.Stream}
  commentId: T:System.Func{System.String,System.IO.Stream}
  parent: System
  definition: System.Func`2
  name: Func<String, Stream>
  nameWithType: Func<String, Stream>
  fullName: System.Func<System.String, System.IO.Stream>
  nameWithType.vb: Func(Of String, Stream)
  fullName.vb: System.Func(Of System.String, System.IO.Stream)
  name.vb: Func(Of String, Stream)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{System.IO.Stream}
  commentId: T:System.Action{System.IO.Stream}
  parent: System
  definition: System.Action`1
  name: Action<Stream>
  nameWithType: Action<Stream>
  fullName: System.Action<System.IO.Stream>
  nameWithType.vb: Action(Of Stream)
  fullName.vb: System.Action(Of System.IO.Stream)
  name.vb: Action(Of Stream)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.StandardMeshWriter.Dispose*
  commentId: Overload:g3.StandardMeshWriter.Dispose
  name: Dispose
  nameWithType: StandardMeshWriter.Dispose
  fullName: g3.StandardMeshWriter.Dispose
- uid: g3.StandardMeshWriter.WriteMeshes*
  commentId: Overload:g3.StandardMeshWriter.WriteMeshes
  name: WriteMeshes
  nameWithType: StandardMeshWriter.WriteMeshes
  fullName: g3.StandardMeshWriter.WriteMeshes
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.List{g3.DMesh3}
  commentId: T:System.Collections.Generic.List{g3.DMesh3}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<DMesh3>
  nameWithType: List<DMesh3>
  fullName: System.Collections.Generic.List<g3.DMesh3>
  nameWithType.vb: List(Of DMesh3)
  fullName.vb: System.Collections.Generic.List(Of g3.DMesh3)
  name.vb: List(Of DMesh3)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: g3.DMesh3
    name: DMesh3
    nameWithType: DMesh3
    fullName: g3.DMesh3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: g3.DMesh3
    name: DMesh3
    nameWithType: DMesh3
    fullName: g3.DMesh3
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.WriteOptions
  commentId: T:g3.WriteOptions
  parent: g3
  name: WriteOptions
  nameWithType: WriteOptions
  fullName: g3.WriteOptions
- uid: g3.IOWriteResult
  commentId: T:g3.IOWriteResult
  parent: g3
  name: IOWriteResult
  nameWithType: IOWriteResult
  fullName: g3.IOWriteResult
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: g3.StandardMeshWriter.WriteFile*
  commentId: Overload:g3.StandardMeshWriter.WriteFile
  name: WriteFile
  nameWithType: StandardMeshWriter.WriteFile
  fullName: g3.StandardMeshWriter.WriteFile
- uid: System.Collections.Generic.List{g3.WriteMesh}
  commentId: T:System.Collections.Generic.List{g3.WriteMesh}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<WriteMesh>
  nameWithType: List<WriteMesh>
  fullName: System.Collections.Generic.List<g3.WriteMesh>
  nameWithType.vb: List(Of WriteMesh)
  fullName.vb: System.Collections.Generic.List(Of g3.WriteMesh)
  name.vb: List(Of WriteMesh)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: g3.WriteMesh
    name: WriteMesh
    nameWithType: WriteMesh
    fullName: g3.WriteMesh
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: g3.WriteMesh
    name: WriteMesh
    nameWithType: WriteMesh
    fullName: g3.WriteMesh
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.StandardMeshWriter.WriteMesh*
  commentId: Overload:g3.StandardMeshWriter.WriteMesh
  name: WriteMesh
  nameWithType: StandardMeshWriter.WriteMesh
  fullName: g3.StandardMeshWriter.WriteMesh
- uid: g3.IMesh
  commentId: T:g3.IMesh
  parent: g3
  name: IMesh
  nameWithType: IMesh
  fullName: g3.IMesh
- uid: g3.StandardMeshWriter.Write*
  commentId: Overload:g3.StandardMeshWriter.Write
  name: Write
  nameWithType: StandardMeshWriter.Write
  fullName: g3.StandardMeshWriter.Write

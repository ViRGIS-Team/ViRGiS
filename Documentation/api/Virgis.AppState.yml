### YamlMime:ManagedReference
items:
- uid: Virgis.AppState
  commentId: T:Virgis.AppState
  id: AppState
  parent: Virgis
  children:
  - Virgis.AppState.abstractMap
  - Virgis.AppState.AddEndEditSessionListener(UnityEngine.Events.UnityAction{System.Boolean})
  - Virgis.AppState.addLayer(UnityEngine.Component)
  - Virgis.AppState.AddStartEditSessionListener(UnityEngine.Events.UnityAction)
  - Virgis.AppState.AddZoomChangeListerner(UnityEngine.Events.UnityAction{System.Single})
  - Virgis.AppState.clearLayers
  - Virgis.AppState.editSession
  - Virgis.AppState.GetScale
  - Virgis.AppState.InEditSession
  - Virgis.AppState.Init
  - Virgis.AppState.instance
  - Virgis.AppState.layers
  - Virgis.AppState.mainCamera
  - Virgis.AppState.map
  - Virgis.AppState.project
  - Virgis.AppState.StartEditSession
  - Virgis.AppState.StopDiscardEditSession
  - Virgis.AppState.StopSaveEditSession
  - Virgis.AppState.trackingSpace
  - Virgis.AppState.ZoomChange(System.Single)
  langs:
  - csharp
  - vb
  name: AppState
  nameWithType: AppState
  fullName: Virgis.AppState
  type: Class
  source:
    remote:
      path: Assets/Scripts/AppState.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: AppState
    path: ../Assets/Scripts/AppState.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: 'public class AppState : MonoBehaviour'
    content.vb: >-
      Public Class AppState
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Virgis.AppState.instance
  commentId: F:Virgis.AppState.instance
  id: instance
  parent: Virgis.AppState
  langs:
  - csharp
  - vb
  name: instance
  nameWithType: AppState.instance
  fullName: Virgis.AppState.instance
  type: Field
  source:
    remote:
      path: Assets/Scripts/AppState.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: instance
    path: ../Assets/Scripts/AppState.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public static AppState instance
    return:
      type: Virgis.AppState
    content.vb: Public Shared instance As AppState
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Virgis.AppState.Init
  commentId: M:Virgis.AppState.Init
  id: Init
  parent: Virgis.AppState
  langs:
  - csharp
  - vb
  name: Init()
  nameWithType: AppState.Init()
  fullName: Virgis.AppState.Init()
  type: Method
  source:
    remote:
      path: Assets/Scripts/AppState.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: Init
    path: ../Assets/Scripts/AppState.cs
    startLine: 42
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  summary: "\nInit is called after a project has been fully loaded.\n"
  example: []
  syntax:
    content: public void Init()
    content.vb: Public Sub Init
  overload: Virgis.AppState.Init*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.AppState.editSession
  commentId: P:Virgis.AppState.editSession
  id: editSession
  parent: Virgis.AppState
  langs:
  - csharp
  - vb
  name: editSession
  nameWithType: AppState.editSession
  fullName: Virgis.AppState.editSession
  type: Property
  source:
    remote:
      path: Assets/Scripts/AppState.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: editSession
    path: ../Assets/Scripts/AppState.cs
    startLine: 48
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public EditSession editSession { get; }
    parameters: []
    return:
      type: Virgis.EditSession
    content.vb: Public ReadOnly Property editSession As EditSession
  overload: Virgis.AppState.editSession*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Virgis.AppState.abstractMap
  commentId: P:Virgis.AppState.abstractMap
  id: abstractMap
  parent: Virgis.AppState
  langs:
  - csharp
  - vb
  name: abstractMap
  nameWithType: AppState.abstractMap
  fullName: Virgis.AppState.abstractMap
  type: Property
  source:
    remote:
      path: Assets/Scripts/AppState.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: abstractMap
    path: ../Assets/Scripts/AppState.cs
    startLine: 52
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public AbstractMap abstractMap { get; set; }
    parameters: []
    return:
      type: Mapbox.Unity.Map.AbstractMap
    content.vb: Public Property abstractMap As AbstractMap
  overload: Virgis.AppState.abstractMap*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Virgis.AppState.map
  commentId: P:Virgis.AppState.map
  id: map
  parent: Virgis.AppState
  langs:
  - csharp
  - vb
  name: map
  nameWithType: AppState.map
  fullName: Virgis.AppState.map
  type: Property
  source:
    remote:
      path: Assets/Scripts/AppState.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: map
    path: ../Assets/Scripts/AppState.cs
    startLine: 56
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public GameObject map { get; set; }
    parameters: []
    return:
      type: UnityEngine.GameObject
    content.vb: Public Property map As GameObject
  overload: Virgis.AppState.map*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Virgis.AppState.project
  commentId: P:Virgis.AppState.project
  id: project
  parent: Virgis.AppState
  langs:
  - csharp
  - vb
  name: project
  nameWithType: AppState.project
  fullName: Virgis.AppState.project
  type: Property
  source:
    remote:
      path: Assets/Scripts/AppState.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: project
    path: ../Assets/Scripts/AppState.cs
    startLine: 60
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public GisProject project { get; set; }
    parameters: []
    return:
      type: Project.GisProject
    content.vb: Public Property project As GisProject
  overload: Virgis.AppState.project*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Virgis.AppState.layers
  commentId: P:Virgis.AppState.layers
  id: layers
  parent: Virgis.AppState
  langs:
  - csharp
  - vb
  name: layers
  nameWithType: AppState.layers
  fullName: Virgis.AppState.layers
  type: Property
  source:
    remote:
      path: Assets/Scripts/AppState.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: layers
    path: ../Assets/Scripts/AppState.cs
    startLine: 64
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public List<Component> layers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{UnityEngine.Component}
    content.vb: Public ReadOnly Property layers As List(Of Component)
  overload: Virgis.AppState.layers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Virgis.AppState.addLayer(UnityEngine.Component)
  commentId: M:Virgis.AppState.addLayer(UnityEngine.Component)
  id: addLayer(UnityEngine.Component)
  parent: Virgis.AppState
  langs:
  - csharp
  - vb
  name: addLayer(Component)
  nameWithType: AppState.addLayer(Component)
  fullName: Virgis.AppState.addLayer(UnityEngine.Component)
  type: Method
  source:
    remote:
      path: Assets/Scripts/AppState.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: addLayer
    path: ../Assets/Scripts/AppState.cs
    startLine: 68
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public void addLayer(Component layer)
    parameters:
    - id: layer
      type: UnityEngine.Component
    content.vb: Public Sub addLayer(layer As Component)
  overload: Virgis.AppState.addLayer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.AppState.clearLayers
  commentId: M:Virgis.AppState.clearLayers
  id: clearLayers
  parent: Virgis.AppState
  langs:
  - csharp
  - vb
  name: clearLayers()
  nameWithType: AppState.clearLayers()
  fullName: Virgis.AppState.clearLayers()
  type: Method
  source:
    remote:
      path: Assets/Scripts/AppState.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: clearLayers
    path: ../Assets/Scripts/AppState.cs
    startLine: 72
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public void clearLayers()
    content.vb: Public Sub clearLayers
  overload: Virgis.AppState.clearLayers*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.AppState.mainCamera
  commentId: P:Virgis.AppState.mainCamera
  id: mainCamera
  parent: Virgis.AppState
  langs:
  - csharp
  - vb
  name: mainCamera
  nameWithType: AppState.mainCamera
  fullName: Virgis.AppState.mainCamera
  type: Property
  source:
    remote:
      path: Assets/Scripts/AppState.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: mainCamera
    path: ../Assets/Scripts/AppState.cs
    startLine: 76
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public GameObject mainCamera { get; set; }
    parameters: []
    return:
      type: UnityEngine.GameObject
    content.vb: Public Property mainCamera As GameObject
  overload: Virgis.AppState.mainCamera*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Virgis.AppState.trackingSpace
  commentId: P:Virgis.AppState.trackingSpace
  id: trackingSpace
  parent: Virgis.AppState
  langs:
  - csharp
  - vb
  name: trackingSpace
  nameWithType: AppState.trackingSpace
  fullName: Virgis.AppState.trackingSpace
  type: Property
  source:
    remote:
      path: Assets/Scripts/AppState.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: trackingSpace
    path: ../Assets/Scripts/AppState.cs
    startLine: 80
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public GameObject trackingSpace { get; set; }
    parameters: []
    return:
      type: UnityEngine.GameObject
    content.vb: Public Property trackingSpace As GameObject
  overload: Virgis.AppState.trackingSpace*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Virgis.AppState.InEditSession
  commentId: M:Virgis.AppState.InEditSession
  id: InEditSession
  parent: Virgis.AppState
  langs:
  - csharp
  - vb
  name: InEditSession()
  nameWithType: AppState.InEditSession()
  fullName: Virgis.AppState.InEditSession()
  type: Method
  source:
    remote:
      path: Assets/Scripts/AppState.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: InEditSession
    path: ../Assets/Scripts/AppState.cs
    startLine: 84
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public bool InEditSession()
    return:
      type: System.Boolean
    content.vb: Public Function InEditSession As Boolean
  overload: Virgis.AppState.InEditSession*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.AppState.StartEditSession
  commentId: M:Virgis.AppState.StartEditSession
  id: StartEditSession
  parent: Virgis.AppState
  langs:
  - csharp
  - vb
  name: StartEditSession()
  nameWithType: AppState.StartEditSession()
  fullName: Virgis.AppState.StartEditSession()
  type: Method
  source:
    remote:
      path: Assets/Scripts/AppState.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: StartEditSession
    path: ../Assets/Scripts/AppState.cs
    startLine: 88
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public void StartEditSession()
    content.vb: Public Sub StartEditSession
  overload: Virgis.AppState.StartEditSession*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.AppState.StopSaveEditSession
  commentId: M:Virgis.AppState.StopSaveEditSession
  id: StopSaveEditSession
  parent: Virgis.AppState
  langs:
  - csharp
  - vb
  name: StopSaveEditSession()
  nameWithType: AppState.StopSaveEditSession()
  fullName: Virgis.AppState.StopSaveEditSession()
  type: Method
  source:
    remote:
      path: Assets/Scripts/AppState.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: StopSaveEditSession
    path: ../Assets/Scripts/AppState.cs
    startLine: 92
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public void StopSaveEditSession()
    content.vb: Public Sub StopSaveEditSession
  overload: Virgis.AppState.StopSaveEditSession*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.AppState.StopDiscardEditSession
  commentId: M:Virgis.AppState.StopDiscardEditSession
  id: StopDiscardEditSession
  parent: Virgis.AppState
  langs:
  - csharp
  - vb
  name: StopDiscardEditSession()
  nameWithType: AppState.StopDiscardEditSession()
  fullName: Virgis.AppState.StopDiscardEditSession()
  type: Method
  source:
    remote:
      path: Assets/Scripts/AppState.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: StopDiscardEditSession
    path: ../Assets/Scripts/AppState.cs
    startLine: 96
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public void StopDiscardEditSession()
    content.vb: Public Sub StopDiscardEditSession
  overload: Virgis.AppState.StopDiscardEditSession*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.AppState.AddStartEditSessionListener(UnityEngine.Events.UnityAction)
  commentId: M:Virgis.AppState.AddStartEditSessionListener(UnityEngine.Events.UnityAction)
  id: AddStartEditSessionListener(UnityEngine.Events.UnityAction)
  parent: Virgis.AppState
  langs:
  - csharp
  - vb
  name: AddStartEditSessionListener(UnityAction)
  nameWithType: AppState.AddStartEditSessionListener(UnityAction)
  fullName: Virgis.AppState.AddStartEditSessionListener(UnityEngine.Events.UnityAction)
  type: Method
  source:
    remote:
      path: Assets/Scripts/AppState.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: AddStartEditSessionListener
    path: ../Assets/Scripts/AppState.cs
    startLine: 100
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public void AddStartEditSessionListener(UnityAction action)
    parameters:
    - id: action
      type: UnityEngine.Events.UnityAction
    content.vb: Public Sub AddStartEditSessionListener(action As UnityAction)
  overload: Virgis.AppState.AddStartEditSessionListener*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.AppState.AddEndEditSessionListener(UnityEngine.Events.UnityAction{System.Boolean})
  commentId: M:Virgis.AppState.AddEndEditSessionListener(UnityEngine.Events.UnityAction{System.Boolean})
  id: AddEndEditSessionListener(UnityEngine.Events.UnityAction{System.Boolean})
  parent: Virgis.AppState
  langs:
  - csharp
  - vb
  name: AddEndEditSessionListener(UnityAction<Boolean>)
  nameWithType: AppState.AddEndEditSessionListener(UnityAction<Boolean>)
  fullName: Virgis.AppState.AddEndEditSessionListener(UnityEngine.Events.UnityAction<System.Boolean>)
  type: Method
  source:
    remote:
      path: Assets/Scripts/AppState.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: AddEndEditSessionListener
    path: ../Assets/Scripts/AppState.cs
    startLine: 104
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public void AddEndEditSessionListener(UnityAction<bool> action)
    parameters:
    - id: action
      type: UnityEngine.Events.UnityAction{System.Boolean}
    content.vb: Public Sub AddEndEditSessionListener(action As UnityAction(Of Boolean))
  overload: Virgis.AppState.AddEndEditSessionListener*
  nameWithType.vb: AppState.AddEndEditSessionListener(UnityAction(Of Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Virgis.AppState.AddEndEditSessionListener(UnityEngine.Events.UnityAction(Of System.Boolean))
  name.vb: AddEndEditSessionListener(UnityAction(Of Boolean))
- uid: Virgis.AppState.AddZoomChangeListerner(UnityEngine.Events.UnityAction{System.Single})
  commentId: M:Virgis.AppState.AddZoomChangeListerner(UnityEngine.Events.UnityAction{System.Single})
  id: AddZoomChangeListerner(UnityEngine.Events.UnityAction{System.Single})
  parent: Virgis.AppState
  langs:
  - csharp
  - vb
  name: AddZoomChangeListerner(UnityAction<Single>)
  nameWithType: AppState.AddZoomChangeListerner(UnityAction<Single>)
  fullName: Virgis.AppState.AddZoomChangeListerner(UnityEngine.Events.UnityAction<System.Single>)
  type: Method
  source:
    remote:
      path: Assets/Scripts/AppState.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: AddZoomChangeListerner
    path: ../Assets/Scripts/AppState.cs
    startLine: 108
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public void AddZoomChangeListerner(UnityAction<float> action)
    parameters:
    - id: action
      type: UnityEngine.Events.UnityAction{System.Single}
    content.vb: Public Sub AddZoomChangeListerner(action As UnityAction(Of Single))
  overload: Virgis.AppState.AddZoomChangeListerner*
  nameWithType.vb: AppState.AddZoomChangeListerner(UnityAction(Of Single))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Virgis.AppState.AddZoomChangeListerner(UnityEngine.Events.UnityAction(Of System.Single))
  name.vb: AddZoomChangeListerner(UnityAction(Of Single))
- uid: Virgis.AppState.ZoomChange(System.Single)
  commentId: M:Virgis.AppState.ZoomChange(System.Single)
  id: ZoomChange(System.Single)
  parent: Virgis.AppState
  langs:
  - csharp
  - vb
  name: ZoomChange(Single)
  nameWithType: AppState.ZoomChange(Single)
  fullName: Virgis.AppState.ZoomChange(System.Single)
  type: Method
  source:
    remote:
      path: Assets/Scripts/AppState.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: ZoomChange
    path: ../Assets/Scripts/AppState.cs
    startLine: 112
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public void ZoomChange(float zoom)
    parameters:
    - id: zoom
      type: System.Single
    content.vb: Public Sub ZoomChange(zoom As Single)
  overload: Virgis.AppState.ZoomChange*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.AppState.GetScale
  commentId: M:Virgis.AppState.GetScale
  id: GetScale
  parent: Virgis.AppState
  langs:
  - csharp
  - vb
  name: GetScale()
  nameWithType: AppState.GetScale()
  fullName: Virgis.AppState.GetScale()
  type: Method
  source:
    remote:
      path: Assets/Scripts/AppState.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: GetScale
    path: ../Assets/Scripts/AppState.cs
    startLine: 116
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public float GetScale()
    return:
      type: System.Single
    content.vb: Public Function GetScale As Single
  overload: Virgis.AppState.GetScale*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Virgis
  commentId: N:Virgis
  name: Virgis
  nameWithType: Virgis
  fullName: Virgis
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Virgis.AppState
  commentId: T:Virgis.AppState
  parent: Virgis
  name: AppState
  nameWithType: AppState
  fullName: Virgis.AppState
- uid: Virgis.AppState.Init*
  commentId: Overload:Virgis.AppState.Init
  name: Init
  nameWithType: AppState.Init
  fullName: Virgis.AppState.Init
- uid: Virgis.AppState.editSession*
  commentId: Overload:Virgis.AppState.editSession
  name: editSession
  nameWithType: AppState.editSession
  fullName: Virgis.AppState.editSession
- uid: Virgis.EditSession
  commentId: T:Virgis.EditSession
  parent: Virgis
  name: EditSession
  nameWithType: EditSession
  fullName: Virgis.EditSession
- uid: Virgis.AppState.abstractMap*
  commentId: Overload:Virgis.AppState.abstractMap
  name: abstractMap
  nameWithType: AppState.abstractMap
  fullName: Virgis.AppState.abstractMap
- uid: Mapbox.Unity.Map.AbstractMap
  commentId: T:Mapbox.Unity.Map.AbstractMap
  parent: Mapbox.Unity.Map
  name: AbstractMap
  nameWithType: AbstractMap
  fullName: Mapbox.Unity.Map.AbstractMap
- uid: Mapbox.Unity.Map
  commentId: N:Mapbox.Unity.Map
  name: Mapbox.Unity.Map
  nameWithType: Mapbox.Unity.Map
  fullName: Mapbox.Unity.Map
- uid: Virgis.AppState.map*
  commentId: Overload:Virgis.AppState.map
  name: map
  nameWithType: AppState.map
  fullName: Virgis.AppState.map
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: Virgis.AppState.project*
  commentId: Overload:Virgis.AppState.project
  name: project
  nameWithType: AppState.project
  fullName: Virgis.AppState.project
- uid: Project.GisProject
  commentId: T:Project.GisProject
  parent: Project
  name: GisProject
  nameWithType: GisProject
  fullName: Project.GisProject
- uid: Project
  commentId: N:Project
  name: Project
  nameWithType: Project
  fullName: Project
- uid: Virgis.AppState.layers*
  commentId: Overload:Virgis.AppState.layers
  name: layers
  nameWithType: AppState.layers
  fullName: Virgis.AppState.layers
- uid: System.Collections.Generic.List{UnityEngine.Component}
  commentId: T:System.Collections.Generic.List{UnityEngine.Component}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Component>
  nameWithType: List<Component>
  fullName: System.Collections.Generic.List<UnityEngine.Component>
  nameWithType.vb: List(Of Component)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Component)
  name.vb: List(Of Component)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Component
    name: Component
    nameWithType: Component
    fullName: UnityEngine.Component
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Component
    name: Component
    nameWithType: Component
    fullName: UnityEngine.Component
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Virgis.AppState.addLayer*
  commentId: Overload:Virgis.AppState.addLayer
  name: addLayer
  nameWithType: AppState.addLayer
  fullName: Virgis.AppState.addLayer
- uid: Virgis.AppState.clearLayers*
  commentId: Overload:Virgis.AppState.clearLayers
  name: clearLayers
  nameWithType: AppState.clearLayers
  fullName: Virgis.AppState.clearLayers
- uid: Virgis.AppState.mainCamera*
  commentId: Overload:Virgis.AppState.mainCamera
  name: mainCamera
  nameWithType: AppState.mainCamera
  fullName: Virgis.AppState.mainCamera
- uid: Virgis.AppState.trackingSpace*
  commentId: Overload:Virgis.AppState.trackingSpace
  name: trackingSpace
  nameWithType: AppState.trackingSpace
  fullName: Virgis.AppState.trackingSpace
- uid: Virgis.AppState.InEditSession*
  commentId: Overload:Virgis.AppState.InEditSession
  name: InEditSession
  nameWithType: AppState.InEditSession
  fullName: Virgis.AppState.InEditSession
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Virgis.AppState.StartEditSession*
  commentId: Overload:Virgis.AppState.StartEditSession
  name: StartEditSession
  nameWithType: AppState.StartEditSession
  fullName: Virgis.AppState.StartEditSession
- uid: Virgis.AppState.StopSaveEditSession*
  commentId: Overload:Virgis.AppState.StopSaveEditSession
  name: StopSaveEditSession
  nameWithType: AppState.StopSaveEditSession
  fullName: Virgis.AppState.StopSaveEditSession
- uid: Virgis.AppState.StopDiscardEditSession*
  commentId: Overload:Virgis.AppState.StopDiscardEditSession
  name: StopDiscardEditSession
  nameWithType: AppState.StopDiscardEditSession
  fullName: Virgis.AppState.StopDiscardEditSession
- uid: Virgis.AppState.AddStartEditSessionListener*
  commentId: Overload:Virgis.AppState.AddStartEditSessionListener
  name: AddStartEditSessionListener
  nameWithType: AppState.AddStartEditSessionListener
  fullName: Virgis.AppState.AddStartEditSessionListener
- uid: UnityEngine.Events.UnityAction
  commentId: T:UnityEngine.Events.UnityAction
  parent: UnityEngine.Events
  isExternal: true
  name: UnityAction
  nameWithType: UnityAction
  fullName: UnityEngine.Events.UnityAction
- uid: UnityEngine.Events
  commentId: N:UnityEngine.Events
  isExternal: true
  name: UnityEngine.Events
  nameWithType: UnityEngine.Events
  fullName: UnityEngine.Events
- uid: Virgis.AppState.AddEndEditSessionListener*
  commentId: Overload:Virgis.AppState.AddEndEditSessionListener
  name: AddEndEditSessionListener
  nameWithType: AppState.AddEndEditSessionListener
  fullName: Virgis.AppState.AddEndEditSessionListener
- uid: UnityEngine.Events.UnityAction{System.Boolean}
  commentId: T:UnityEngine.Events.UnityAction{System.Boolean}
  parent: UnityEngine.Events
  definition: UnityEngine.Events.UnityAction`1
  name: UnityAction<Boolean>
  nameWithType: UnityAction<Boolean>
  fullName: UnityEngine.Events.UnityAction<System.Boolean>
  nameWithType.vb: UnityAction(Of Boolean)
  fullName.vb: UnityEngine.Events.UnityAction(Of System.Boolean)
  name.vb: UnityAction(Of Boolean)
  spec.csharp:
  - uid: UnityEngine.Events.UnityAction`1
    name: UnityAction
    nameWithType: UnityAction
    fullName: UnityEngine.Events.UnityAction
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityAction`1
    name: UnityAction
    nameWithType: UnityAction
    fullName: UnityEngine.Events.UnityAction
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Events.UnityAction`1
  commentId: T:UnityEngine.Events.UnityAction`1
  isExternal: true
  name: UnityAction<T0>
  nameWithType: UnityAction<T0>
  fullName: UnityEngine.Events.UnityAction<T0>
  nameWithType.vb: UnityAction(Of T0)
  fullName.vb: UnityEngine.Events.UnityAction(Of T0)
  name.vb: UnityAction(Of T0)
  spec.csharp:
  - uid: UnityEngine.Events.UnityAction`1
    name: UnityAction
    nameWithType: UnityAction
    fullName: UnityEngine.Events.UnityAction
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T0
    nameWithType: T0
    fullName: T0
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityAction`1
    name: UnityAction
    nameWithType: UnityAction
    fullName: UnityEngine.Events.UnityAction
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T0
    nameWithType: T0
    fullName: T0
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.AppState.AddZoomChangeListerner*
  commentId: Overload:Virgis.AppState.AddZoomChangeListerner
  name: AddZoomChangeListerner
  nameWithType: AppState.AddZoomChangeListerner
  fullName: Virgis.AppState.AddZoomChangeListerner
- uid: UnityEngine.Events.UnityAction{System.Single}
  commentId: T:UnityEngine.Events.UnityAction{System.Single}
  parent: UnityEngine.Events
  definition: UnityEngine.Events.UnityAction`1
  name: UnityAction<Single>
  nameWithType: UnityAction<Single>
  fullName: UnityEngine.Events.UnityAction<System.Single>
  nameWithType.vb: UnityAction(Of Single)
  fullName.vb: UnityEngine.Events.UnityAction(Of System.Single)
  name.vb: UnityAction(Of Single)
  spec.csharp:
  - uid: UnityEngine.Events.UnityAction`1
    name: UnityAction
    nameWithType: UnityAction
    fullName: UnityEngine.Events.UnityAction
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityAction`1
    name: UnityAction
    nameWithType: UnityAction
    fullName: UnityEngine.Events.UnityAction
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.AppState.ZoomChange*
  commentId: Overload:Virgis.AppState.ZoomChange
  name: ZoomChange
  nameWithType: AppState.ZoomChange
  fullName: Virgis.AppState.ZoomChange
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Virgis.AppState.GetScale*
  commentId: Overload:Virgis.AppState.GetScale
  name: GetScale
  nameWithType: AppState.GetScale
  fullName: Virgis.AppState.GetScale

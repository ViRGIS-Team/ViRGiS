### YamlMime:ManagedReference
items:
- uid: Virgis.PointCloudLayer
  commentId: T:Virgis.PointCloudLayer
  id: PointCloudLayer
  parent: Virgis
  children:
  - Virgis.PointCloudLayer._addFeature(UnityEngine.Vector3[])
  - Virgis.PointCloudLayer._checkpoint
  - Virgis.PointCloudLayer._draw
  - Virgis.PointCloudLayer._init(Project.GeographyCollection)
  - Virgis.PointCloudLayer._save
  - Virgis.PointCloudLayer.GetFeatureShape
  - Virgis.PointCloudLayer.handle
  - Virgis.PointCloudLayer.HandleMaterial
  - Virgis.PointCloudLayer.material
  - Virgis.PointCloudLayer.meshes
  - Virgis.PointCloudLayer.MoveAxis(Virgis.MoveArgs)
  - Virgis.PointCloudLayer.pointCloud
  - Virgis.PointCloudLayer.Translate(Virgis.MoveArgs)
  langs:
  - csharp
  - vb
  name: PointCloudLayer
  nameWithType: PointCloudLayer
  fullName: Virgis.PointCloudLayer
  type: Class
  source:
    remote:
      path: Assets/Scripts/Layers/PointCloudLayer.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: PointCloudLayer
    path: ../Assets/Scripts/Layers/PointCloudLayer.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: 'public class PointCloudLayer : VirgisLayer<GeographyCollection, ParticleData>, IVirgisLayer, IVirgisEntity'
    content.vb: >-
      Public Class PointCloudLayer
          Inherits VirgisLayer(Of GeographyCollection, ParticleData)
          Implements IVirgisLayer, IVirgisEntity
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  implements:
  - Virgis.IVirgisLayer
  - Virgis.IVirgisEntity
  inheritedMembers:
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.layer
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.features
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.changed
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._id
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._visible
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._editable
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.Init(Project.GeographyCollection)
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._init(Project.GeographyCollection)
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.AddFeature(UnityEngine.Vector3[])
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._addFeature(UnityEngine.Vector3[])
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.Draw
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._draw
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.CheckPoint
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._checkpoint
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.Save
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._save
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.Translate(Virgis.MoveArgs)
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.MoveAxis(Virgis.MoveArgs)
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.MoveTo(Virgis.MoveArgs)
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.VertexMove(Virgis.MoveArgs)
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.StartEditSession
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.ExitEditSession(System.Boolean)
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.Selected(Virgis.SelectionTypes)
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.UnSelected(Virgis.SelectionTypes)
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.GetClosest(UnityEngine.Vector3,System.Guid[])
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.GetFeature(System.Guid)
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.GetId
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.GetMetadata
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.GetFeatureShape
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.SetVisible(System.Boolean)
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.IsVisible
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.SetEditable(System.Boolean)
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.IsEditable
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.Equals(System.Object)
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.GetHashCode
  - Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.Equals(Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Virgis.PointCloudLayer.material
  commentId: F:Virgis.PointCloudLayer.material
  id: material
  parent: Virgis.PointCloudLayer
  langs:
  - csharp
  - vb
  name: material
  nameWithType: PointCloudLayer.material
  fullName: Virgis.PointCloudLayer.material
  type: Field
  source:
    remote:
      path: Assets/Scripts/Layers/PointCloudLayer.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: material
    path: ../Assets/Scripts/Layers/PointCloudLayer.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public Material material
    return:
      type: UnityEngine.Material
    content.vb: Public material As Material
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.PointCloudLayer.handle
  commentId: F:Virgis.PointCloudLayer.handle
  id: handle
  parent: Virgis.PointCloudLayer
  langs:
  - csharp
  - vb
  name: handle
  nameWithType: PointCloudLayer.handle
  fullName: Virgis.PointCloudLayer.handle
  type: Field
  source:
    remote:
      path: Assets/Scripts/Layers/PointCloudLayer.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: handle
    path: ../Assets/Scripts/Layers/PointCloudLayer.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public GameObject handle
    return:
      type: UnityEngine.GameObject
    content.vb: Public handle As GameObject
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.PointCloudLayer.pointCloud
  commentId: F:Virgis.PointCloudLayer.pointCloud
  id: pointCloud
  parent: Virgis.PointCloudLayer
  langs:
  - csharp
  - vb
  name: pointCloud
  nameWithType: PointCloudLayer.pointCloud
  fullName: Virgis.PointCloudLayer.pointCloud
  type: Field
  source:
    remote:
      path: Assets/Scripts/Layers/PointCloudLayer.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: pointCloud
    path: ../Assets/Scripts/Layers/PointCloudLayer.cs
    startLine: 17
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public GameObject pointCloud
    return:
      type: UnityEngine.GameObject
    content.vb: Public pointCloud As GameObject
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.PointCloudLayer.meshes
  commentId: F:Virgis.PointCloudLayer.meshes
  id: meshes
  parent: Virgis.PointCloudLayer
  langs:
  - csharp
  - vb
  name: meshes
  nameWithType: PointCloudLayer.meshes
  fullName: Virgis.PointCloudLayer.meshes
  type: Field
  source:
    remote:
      path: Assets/Scripts/Layers/PointCloudLayer.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: meshes
    path: ../Assets/Scripts/Layers/PointCloudLayer.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public List<GameObject> meshes
    return:
      type: System.Collections.Generic.List{UnityEngine.GameObject}
    content.vb: Public meshes As List(Of GameObject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.PointCloudLayer.HandleMaterial
  commentId: F:Virgis.PointCloudLayer.HandleMaterial
  id: HandleMaterial
  parent: Virgis.PointCloudLayer
  langs:
  - csharp
  - vb
  name: HandleMaterial
  nameWithType: PointCloudLayer.HandleMaterial
  fullName: Virgis.PointCloudLayer.HandleMaterial
  type: Field
  source:
    remote:
      path: Assets/Scripts/Layers/PointCloudLayer.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: HandleMaterial
    path: ../Assets/Scripts/Layers/PointCloudLayer.cs
    startLine: 19
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public Material HandleMaterial
    return:
      type: UnityEngine.Material
    content.vb: Public HandleMaterial As Material
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.PointCloudLayer._init(Project.GeographyCollection)
  commentId: M:Virgis.PointCloudLayer._init(Project.GeographyCollection)
  id: _init(Project.GeographyCollection)
  parent: Virgis.PointCloudLayer
  langs:
  - csharp
  - vb
  name: _init(GeographyCollection)
  nameWithType: PointCloudLayer._init(GeographyCollection)
  fullName: Virgis.PointCloudLayer._init(Project.GeographyCollection)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/PointCloudLayer.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: _init
    path: ../Assets/Scripts/Layers/PointCloudLayer.cs
    startLine: 27
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: protected override Task _init(GeographyCollection layer)
    parameters:
    - id: layer
      type: Project.GeographyCollection
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Overrides Function _init(layer As GeographyCollection) As Task
  overridden: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._init(Project.GeographyCollection)
  overload: Virgis.PointCloudLayer._init*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Virgis.PointCloudLayer._addFeature(UnityEngine.Vector3[])
  commentId: M:Virgis.PointCloudLayer._addFeature(UnityEngine.Vector3[])
  id: _addFeature(UnityEngine.Vector3[])
  parent: Virgis.PointCloudLayer
  langs:
  - csharp
  - vb
  name: _addFeature(Vector3[])
  nameWithType: PointCloudLayer._addFeature(Vector3[])
  fullName: Virgis.PointCloudLayer._addFeature(UnityEngine.Vector3[])
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/PointCloudLayer.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: _addFeature
    path: ../Assets/Scripts/Layers/PointCloudLayer.cs
    startLine: 41
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: protected override VirgisFeature _addFeature(Vector3[] geometry)
    parameters:
    - id: geometry
      type: UnityEngine.Vector3[]
    return:
      type: Virgis.VirgisFeature
    content.vb: Protected Overrides Function _addFeature(geometry As Vector3()) As VirgisFeature
  overridden: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._addFeature(UnityEngine.Vector3[])
  overload: Virgis.PointCloudLayer._addFeature*
  nameWithType.vb: PointCloudLayer._addFeature(Vector3())
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Virgis.PointCloudLayer._addFeature(UnityEngine.Vector3())
  name.vb: _addFeature(Vector3())
- uid: Virgis.PointCloudLayer._draw
  commentId: M:Virgis.PointCloudLayer._draw
  id: _draw
  parent: Virgis.PointCloudLayer
  langs:
  - csharp
  - vb
  name: _draw()
  nameWithType: PointCloudLayer._draw()
  fullName: Virgis.PointCloudLayer._draw()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/PointCloudLayer.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: _draw
    path: ../Assets/Scripts/Layers/PointCloudLayer.cs
    startLine: 46
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: protected override void _draw()
    content.vb: Protected Overrides Sub _draw
  overridden: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._draw
  overload: Virgis.PointCloudLayer._draw*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Virgis.PointCloudLayer.Translate(Virgis.MoveArgs)
  commentId: M:Virgis.PointCloudLayer.Translate(Virgis.MoveArgs)
  id: Translate(Virgis.MoveArgs)
  parent: Virgis.PointCloudLayer
  langs:
  - csharp
  - vb
  name: Translate(MoveArgs)
  nameWithType: PointCloudLayer.Translate(MoveArgs)
  fullName: Virgis.PointCloudLayer.Translate(Virgis.MoveArgs)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/PointCloudLayer.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Translate
    path: ../Assets/Scripts/Layers/PointCloudLayer.cs
    startLine: 74
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public override void Translate(MoveArgs args)
    parameters:
    - id: args
      type: Virgis.MoveArgs
    content.vb: Public Overrides Sub Translate(args As MoveArgs)
  overridden: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.Translate(Virgis.MoveArgs)
  overload: Virgis.PointCloudLayer.Translate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Virgis.PointCloudLayer.MoveAxis(Virgis.MoveArgs)
  commentId: M:Virgis.PointCloudLayer.MoveAxis(Virgis.MoveArgs)
  id: MoveAxis(Virgis.MoveArgs)
  parent: Virgis.PointCloudLayer
  langs:
  - csharp
  - vb
  name: MoveAxis(MoveArgs)
  nameWithType: PointCloudLayer.MoveAxis(MoveArgs)
  fullName: Virgis.PointCloudLayer.MoveAxis(Virgis.MoveArgs)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/PointCloudLayer.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: MoveAxis
    path: ../Assets/Scripts/Layers/PointCloudLayer.cs
    startLine: 83
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public override void MoveAxis(MoveArgs args)
    parameters:
    - id: args
      type: Virgis.MoveArgs
    content.vb: Public Overrides Sub MoveAxis(args As MoveArgs)
  overridden: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.MoveAxis(Virgis.MoveArgs)
  overload: Virgis.PointCloudLayer.MoveAxis*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Virgis.PointCloudLayer._checkpoint
  commentId: M:Virgis.PointCloudLayer._checkpoint
  id: _checkpoint
  parent: Virgis.PointCloudLayer
  langs:
  - csharp
  - vb
  name: _checkpoint()
  nameWithType: PointCloudLayer._checkpoint()
  fullName: Virgis.PointCloudLayer._checkpoint()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/PointCloudLayer.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: _checkpoint
    path: ../Assets/Scripts/Layers/PointCloudLayer.cs
    startLine: 109
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: protected override void _checkpoint()
    content.vb: Protected Overrides Sub _checkpoint
  overridden: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._checkpoint
  overload: Virgis.PointCloudLayer._checkpoint*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Virgis.PointCloudLayer._save
  commentId: M:Virgis.PointCloudLayer._save
  id: _save
  parent: Virgis.PointCloudLayer
  langs:
  - csharp
  - vb
  name: _save()
  nameWithType: PointCloudLayer._save()
  fullName: Virgis.PointCloudLayer._save()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/PointCloudLayer.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: _save
    path: ../Assets/Scripts/Layers/PointCloudLayer.cs
    startLine: 111
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: protected override void _save()
    content.vb: Protected Overrides Sub _save
  overridden: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._save
  overload: Virgis.PointCloudLayer._save*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Virgis.PointCloudLayer.GetFeatureShape
  commentId: M:Virgis.PointCloudLayer.GetFeatureShape
  id: GetFeatureShape
  parent: Virgis.PointCloudLayer
  langs:
  - csharp
  - vb
  name: GetFeatureShape()
  nameWithType: PointCloudLayer.GetFeatureShape()
  fullName: Virgis.PointCloudLayer.GetFeatureShape()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/PointCloudLayer.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GetFeatureShape
    path: ../Assets/Scripts/Layers/PointCloudLayer.cs
    startLine: 119
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public override GameObject GetFeatureShape()
    return:
      type: UnityEngine.GameObject
    content.vb: Public Overrides Function GetFeatureShape As GameObject
  overridden: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.GetFeatureShape
  overload: Virgis.PointCloudLayer.GetFeatureShape*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Virgis
  commentId: N:Virgis
  name: Virgis
  nameWithType: Virgis
  fullName: Virgis
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  commentId: T:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  parent: Virgis
  definition: Virgis.VirgisLayer`2
  name: VirgisLayer<GeographyCollection, ParticleData>
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData)
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData)
  name.vb: VirgisLayer(Of GeographyCollection, ParticleData)
  spec.csharp:
  - uid: Virgis.VirgisLayer`2
    name: VirgisLayer
    nameWithType: VirgisLayer
    fullName: Virgis.VirgisLayer
  - name: <
    nameWithType: <
    fullName: <
  - uid: Project.GeographyCollection
    name: GeographyCollection
    nameWithType: GeographyCollection
    fullName: Project.GeographyCollection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Virgis.ParticleData
    name: ParticleData
    nameWithType: ParticleData
    fullName: Virgis.ParticleData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Virgis.VirgisLayer`2
    name: VirgisLayer
    nameWithType: VirgisLayer
    fullName: Virgis.VirgisLayer
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Project.GeographyCollection
    name: GeographyCollection
    nameWithType: GeographyCollection
    fullName: Project.GeographyCollection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Virgis.ParticleData
    name: ParticleData
    nameWithType: ParticleData
    fullName: Virgis.ParticleData
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.IVirgisLayer
  commentId: T:Virgis.IVirgisLayer
  parent: Virgis
  name: IVirgisLayer
  nameWithType: IVirgisLayer
  fullName: Virgis.IVirgisLayer
- uid: Virgis.IVirgisEntity
  commentId: T:Virgis.IVirgisEntity
  parent: Virgis
  name: IVirgisEntity
  nameWithType: IVirgisEntity
  fullName: Virgis.IVirgisEntity
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.layer
  commentId: F:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.layer
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2.layer
  name: layer
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>.layer
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.layer
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData).layer
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).layer
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.features
  commentId: F:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.features
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2.features
  name: features
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>.features
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.features
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData).features
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).features
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.changed
  commentId: F:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.changed
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2.changed
  name: changed
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>.changed
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.changed
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData).changed
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).changed
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._id
  commentId: F:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._id
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2._id
  name: _id
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>._id
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>._id
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData)._id
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData)._id
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._visible
  commentId: F:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._visible
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2._visible
  name: _visible
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>._visible
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>._visible
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData)._visible
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData)._visible
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._editable
  commentId: F:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._editable
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2._editable
  name: _editable
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>._editable
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>._editable
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData)._editable
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData)._editable
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.Init(Project.GeographyCollection)
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.Init(Project.GeographyCollection)
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2.Init(`0)
  name: Init(GeographyCollection)
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>.Init(GeographyCollection)
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.Init(Project.GeographyCollection)
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData).Init(GeographyCollection)
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).Init(Project.GeographyCollection)
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.Init(`0)
    name: Init
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>.Init
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Project.GeographyCollection
    name: GeographyCollection
    nameWithType: GeographyCollection
    fullName: Project.GeographyCollection
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.Init(`0)
    name: Init
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).Init
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Project.GeographyCollection
    name: GeographyCollection
    nameWithType: GeographyCollection
    fullName: Project.GeographyCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._init(Project.GeographyCollection)
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._init(Project.GeographyCollection)
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2._init(`0)
  name: _init(GeographyCollection)
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>._init(GeographyCollection)
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>._init(Project.GeographyCollection)
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData)._init(GeographyCollection)
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData)._init(Project.GeographyCollection)
  spec.csharp:
  - uid: Virgis.VirgisLayer`2._init(`0)
    name: _init
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>._init
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>._init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Project.GeographyCollection
    name: GeographyCollection
    nameWithType: GeographyCollection
    fullName: Project.GeographyCollection
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2._init(`0)
    name: _init
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData)._init
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData)._init
  - name: (
    nameWithType: (
    fullName: (
  - uid: Project.GeographyCollection
    name: GeographyCollection
    nameWithType: GeographyCollection
    fullName: Project.GeographyCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.AddFeature(UnityEngine.Vector3[])
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.AddFeature(UnityEngine.Vector3[])
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2.AddFeature(UnityEngine.Vector3[])
  name: AddFeature(Vector3[])
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>.AddFeature(Vector3[])
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.AddFeature(UnityEngine.Vector3[])
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData).AddFeature(Vector3())
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).AddFeature(UnityEngine.Vector3())
  name.vb: AddFeature(Vector3())
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.AddFeature(UnityEngine.Vector3[])
    name: AddFeature
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>.AddFeature
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.AddFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.AddFeature(UnityEngine.Vector3[])
    name: AddFeature
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).AddFeature
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).AddFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._addFeature(UnityEngine.Vector3[])
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._addFeature(UnityEngine.Vector3[])
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2._addFeature(UnityEngine.Vector3[])
  name: _addFeature(Vector3[])
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>._addFeature(Vector3[])
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>._addFeature(UnityEngine.Vector3[])
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData)._addFeature(Vector3())
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData)._addFeature(UnityEngine.Vector3())
  name.vb: _addFeature(Vector3())
  spec.csharp:
  - uid: Virgis.VirgisLayer`2._addFeature(UnityEngine.Vector3[])
    name: _addFeature
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>._addFeature
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>._addFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2._addFeature(UnityEngine.Vector3[])
    name: _addFeature
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData)._addFeature
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData)._addFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.Draw
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.Draw
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2.Draw
  name: Draw()
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>.Draw()
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.Draw()
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData).Draw()
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).Draw()
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.Draw
    name: Draw
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>.Draw
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.Draw
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.Draw
    name: Draw
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).Draw
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).Draw
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._draw
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._draw
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2._draw
  name: _draw()
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>._draw()
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>._draw()
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData)._draw()
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData)._draw()
  spec.csharp:
  - uid: Virgis.VirgisLayer`2._draw
    name: _draw
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>._draw
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>._draw
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2._draw
    name: _draw
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData)._draw
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData)._draw
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.CheckPoint
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.CheckPoint
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2.CheckPoint
  name: CheckPoint()
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>.CheckPoint()
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.CheckPoint()
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData).CheckPoint()
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).CheckPoint()
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.CheckPoint
    name: CheckPoint
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>.CheckPoint
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.CheckPoint
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.CheckPoint
    name: CheckPoint
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).CheckPoint
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).CheckPoint
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._checkpoint
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._checkpoint
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2._checkpoint
  name: _checkpoint()
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>._checkpoint()
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>._checkpoint()
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData)._checkpoint()
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData)._checkpoint()
  spec.csharp:
  - uid: Virgis.VirgisLayer`2._checkpoint
    name: _checkpoint
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>._checkpoint
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>._checkpoint
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2._checkpoint
    name: _checkpoint
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData)._checkpoint
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData)._checkpoint
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.Save
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.Save
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2.Save
  name: Save()
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>.Save()
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.Save()
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData).Save()
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).Save()
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.Save
    name: Save
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>.Save
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.Save
    name: Save
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).Save
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._save
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}._save
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2._save
  name: _save()
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>._save()
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>._save()
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData)._save()
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData)._save()
  spec.csharp:
  - uid: Virgis.VirgisLayer`2._save
    name: _save
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>._save
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>._save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2._save
    name: _save
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData)._save
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData)._save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.Translate(Virgis.MoveArgs)
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.Translate(Virgis.MoveArgs)
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2.Translate(Virgis.MoveArgs)
  name: Translate(MoveArgs)
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>.Translate(MoveArgs)
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.Translate(Virgis.MoveArgs)
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData).Translate(MoveArgs)
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).Translate(Virgis.MoveArgs)
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.Translate(Virgis.MoveArgs)
    name: Translate
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>.Translate
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.Translate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.Translate(Virgis.MoveArgs)
    name: Translate
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).Translate
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).Translate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.MoveAxis(Virgis.MoveArgs)
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.MoveAxis(Virgis.MoveArgs)
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2.MoveAxis(Virgis.MoveArgs)
  name: MoveAxis(MoveArgs)
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>.MoveAxis(MoveArgs)
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.MoveAxis(Virgis.MoveArgs)
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData).MoveAxis(MoveArgs)
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).MoveAxis(Virgis.MoveArgs)
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.MoveAxis(Virgis.MoveArgs)
    name: MoveAxis
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>.MoveAxis
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.MoveAxis
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.MoveAxis(Virgis.MoveArgs)
    name: MoveAxis
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).MoveAxis
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).MoveAxis
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.MoveTo(Virgis.MoveArgs)
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.MoveTo(Virgis.MoveArgs)
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2.MoveTo(Virgis.MoveArgs)
  name: MoveTo(MoveArgs)
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>.MoveTo(MoveArgs)
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.MoveTo(Virgis.MoveArgs)
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData).MoveTo(MoveArgs)
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).MoveTo(Virgis.MoveArgs)
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.MoveTo(Virgis.MoveArgs)
    name: MoveTo
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>.MoveTo
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.MoveTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.MoveTo(Virgis.MoveArgs)
    name: MoveTo
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).MoveTo
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).MoveTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.VertexMove(Virgis.MoveArgs)
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.VertexMove(Virgis.MoveArgs)
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2.VertexMove(Virgis.MoveArgs)
  name: VertexMove(MoveArgs)
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>.VertexMove(MoveArgs)
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.VertexMove(Virgis.MoveArgs)
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData).VertexMove(MoveArgs)
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).VertexMove(Virgis.MoveArgs)
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.VertexMove(Virgis.MoveArgs)
    name: VertexMove
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>.VertexMove
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.VertexMove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.VertexMove(Virgis.MoveArgs)
    name: VertexMove
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).VertexMove
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).VertexMove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.StartEditSession
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.StartEditSession
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2.StartEditSession
  name: StartEditSession()
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>.StartEditSession()
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.StartEditSession()
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData).StartEditSession()
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).StartEditSession()
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.StartEditSession
    name: StartEditSession
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>.StartEditSession
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.StartEditSession
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.StartEditSession
    name: StartEditSession
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).StartEditSession
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).StartEditSession
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.ExitEditSession(System.Boolean)
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.ExitEditSession(System.Boolean)
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2.ExitEditSession(System.Boolean)
  name: ExitEditSession(Boolean)
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>.ExitEditSession(Boolean)
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.ExitEditSession(System.Boolean)
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData).ExitEditSession(Boolean)
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).ExitEditSession(System.Boolean)
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.ExitEditSession(System.Boolean)
    name: ExitEditSession
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>.ExitEditSession
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.ExitEditSession
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.ExitEditSession(System.Boolean)
    name: ExitEditSession
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).ExitEditSession
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).ExitEditSession
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.Selected(Virgis.SelectionTypes)
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.Selected(Virgis.SelectionTypes)
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2.Selected(Virgis.SelectionTypes)
  name: Selected(SelectionTypes)
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>.Selected(SelectionTypes)
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.Selected(Virgis.SelectionTypes)
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData).Selected(SelectionTypes)
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).Selected(Virgis.SelectionTypes)
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.Selected(Virgis.SelectionTypes)
    name: Selected
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>.Selected
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.Selected
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.SelectionTypes
    name: SelectionTypes
    nameWithType: SelectionTypes
    fullName: Virgis.SelectionTypes
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.Selected(Virgis.SelectionTypes)
    name: Selected
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).Selected
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).Selected
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.SelectionTypes
    name: SelectionTypes
    nameWithType: SelectionTypes
    fullName: Virgis.SelectionTypes
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.UnSelected(Virgis.SelectionTypes)
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.UnSelected(Virgis.SelectionTypes)
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2.UnSelected(Virgis.SelectionTypes)
  name: UnSelected(SelectionTypes)
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>.UnSelected(SelectionTypes)
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.UnSelected(Virgis.SelectionTypes)
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData).UnSelected(SelectionTypes)
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).UnSelected(Virgis.SelectionTypes)
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.UnSelected(Virgis.SelectionTypes)
    name: UnSelected
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>.UnSelected
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.UnSelected
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.SelectionTypes
    name: SelectionTypes
    nameWithType: SelectionTypes
    fullName: Virgis.SelectionTypes
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.UnSelected(Virgis.SelectionTypes)
    name: UnSelected
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).UnSelected
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).UnSelected
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.SelectionTypes
    name: SelectionTypes
    nameWithType: SelectionTypes
    fullName: Virgis.SelectionTypes
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.GetClosest(UnityEngine.Vector3,System.Guid[])
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.GetClosest(UnityEngine.Vector3,System.Guid[])
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2.GetClosest(UnityEngine.Vector3,System.Guid[])
  name: GetClosest(Vector3, Guid[])
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>.GetClosest(Vector3, Guid[])
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.GetClosest(UnityEngine.Vector3, System.Guid[])
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData).GetClosest(Vector3, Guid())
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).GetClosest(UnityEngine.Vector3, System.Guid())
  name.vb: GetClosest(Vector3, Guid())
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.GetClosest(UnityEngine.Vector3,System.Guid[])
    name: GetClosest
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>.GetClosest
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.GetClosest
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.GetClosest(UnityEngine.Vector3,System.Guid[])
    name: GetClosest
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).GetClosest
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).GetClosest
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.GetFeature(System.Guid)
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.GetFeature(System.Guid)
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2.GetFeature(System.Guid)
  name: GetFeature(Guid)
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>.GetFeature(Guid)
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.GetFeature(System.Guid)
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData).GetFeature(Guid)
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).GetFeature(System.Guid)
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.GetFeature(System.Guid)
    name: GetFeature
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>.GetFeature
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.GetFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.GetFeature(System.Guid)
    name: GetFeature
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).GetFeature
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).GetFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.GetId
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.GetId
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2.GetId
  name: GetId()
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>.GetId()
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.GetId()
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData).GetId()
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).GetId()
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.GetId
    name: GetId
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>.GetId
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.GetId
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.GetId
    name: GetId
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).GetId
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).GetId
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.GetMetadata
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.GetMetadata
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2.GetMetadata
  name: GetMetadata()
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>.GetMetadata()
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.GetMetadata()
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData).GetMetadata()
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).GetMetadata()
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.GetMetadata
    name: GetMetadata
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>.GetMetadata
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.GetMetadata
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.GetMetadata
    name: GetMetadata
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).GetMetadata
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).GetMetadata
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.GetFeatureShape
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.GetFeatureShape
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2.GetFeatureShape
  name: GetFeatureShape()
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>.GetFeatureShape()
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.GetFeatureShape()
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData).GetFeatureShape()
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).GetFeatureShape()
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.GetFeatureShape
    name: GetFeatureShape
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>.GetFeatureShape
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.GetFeatureShape
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.GetFeatureShape
    name: GetFeatureShape
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).GetFeatureShape
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).GetFeatureShape
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.SetVisible(System.Boolean)
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.SetVisible(System.Boolean)
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2.SetVisible(System.Boolean)
  name: SetVisible(Boolean)
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>.SetVisible(Boolean)
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.SetVisible(System.Boolean)
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData).SetVisible(Boolean)
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).SetVisible(System.Boolean)
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.SetVisible(System.Boolean)
    name: SetVisible
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>.SetVisible
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.SetVisible
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.SetVisible(System.Boolean)
    name: SetVisible
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).SetVisible
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).SetVisible
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.IsVisible
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.IsVisible
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2.IsVisible
  name: IsVisible()
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>.IsVisible()
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.IsVisible()
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData).IsVisible()
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).IsVisible()
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.IsVisible
    name: IsVisible
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>.IsVisible
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.IsVisible
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.IsVisible
    name: IsVisible
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).IsVisible
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).IsVisible
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.SetEditable(System.Boolean)
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.SetEditable(System.Boolean)
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2.SetEditable(System.Boolean)
  name: SetEditable(Boolean)
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>.SetEditable(Boolean)
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.SetEditable(System.Boolean)
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData).SetEditable(Boolean)
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).SetEditable(System.Boolean)
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.SetEditable(System.Boolean)
    name: SetEditable
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>.SetEditable
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.SetEditable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.SetEditable(System.Boolean)
    name: SetEditable
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).SetEditable
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).SetEditable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.IsEditable
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.IsEditable
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2.IsEditable
  name: IsEditable()
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>.IsEditable()
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.IsEditable()
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData).IsEditable()
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).IsEditable()
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.IsEditable
    name: IsEditable
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>.IsEditable
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.IsEditable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.IsEditable
    name: IsEditable
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).IsEditable
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).IsEditable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.Equals(System.Object)
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.Equals(System.Object)
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2.Equals(System.Object)
  name: Equals(Object)
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>.Equals(Object)
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.Equals(System.Object)
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData).Equals(Object)
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).Equals(System.Object)
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.Equals(System.Object)
    name: Equals
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>.Equals
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.Equals(System.Object)
    name: Equals
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).Equals
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.GetHashCode
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.GetHashCode
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2.GetHashCode
  name: GetHashCode()
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>.GetHashCode()
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.GetHashCode()
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData).GetHashCode()
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).GetHashCode()
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.GetHashCode
    name: GetHashCode
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>.GetHashCode
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.GetHashCode
    name: GetHashCode
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).GetHashCode
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.Equals(Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData})
  commentId: M:Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}.Equals(Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData})
  parent: Virgis.VirgisLayer{Project.GeographyCollection,Virgis.ParticleData}
  definition: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
  name: Equals(VirgisLayer<GeographyCollection, ParticleData>)
  nameWithType: VirgisLayer<GeographyCollection, ParticleData>.Equals(VirgisLayer<GeographyCollection, ParticleData>)
  fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.Equals(Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>)
  nameWithType.vb: VirgisLayer(Of GeographyCollection, ParticleData).Equals(VirgisLayer(Of GeographyCollection, ParticleData))
  fullName.vb: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).Equals(Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData))
  name.vb: Equals(VirgisLayer(Of GeographyCollection, ParticleData))
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
    name: Equals
    nameWithType: VirgisLayer<GeographyCollection, ParticleData>.Equals
    fullName: Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.VirgisLayer`2
    name: VirgisLayer
    nameWithType: VirgisLayer
    fullName: Virgis.VirgisLayer
  - name: <
    nameWithType: <
    fullName: <
  - uid: Project.GeographyCollection
    name: GeographyCollection
    nameWithType: GeographyCollection
    fullName: Project.GeographyCollection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Virgis.ParticleData
    name: ParticleData
    nameWithType: ParticleData
    fullName: Virgis.ParticleData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
    name: Equals
    nameWithType: VirgisLayer(Of GeographyCollection, ParticleData).Equals
    fullName: Virgis.VirgisLayer(Of Project.GeographyCollection, Virgis.ParticleData).Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.VirgisLayer`2
    name: VirgisLayer
    nameWithType: VirgisLayer
    fullName: Virgis.VirgisLayer
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Project.GeographyCollection
    name: GeographyCollection
    nameWithType: GeographyCollection
    fullName: Project.GeographyCollection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Virgis.ParticleData
    name: ParticleData
    nameWithType: ParticleData
    fullName: Virgis.ParticleData
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Virgis.VirgisLayer`2
  commentId: T:Virgis.VirgisLayer`2
  parent: Virgis
  name: VirgisLayer<T, S>
  nameWithType: VirgisLayer<T, S>
  fullName: Virgis.VirgisLayer<T, S>
  nameWithType.vb: VirgisLayer(Of T, S)
  fullName.vb: Virgis.VirgisLayer(Of T, S)
  name.vb: VirgisLayer(Of T, S)
  spec.csharp:
  - uid: Virgis.VirgisLayer`2
    name: VirgisLayer
    nameWithType: VirgisLayer
    fullName: Virgis.VirgisLayer
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Virgis.VirgisLayer`2
    name: VirgisLayer
    nameWithType: VirgisLayer
    fullName: Virgis.VirgisLayer
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2.layer
  commentId: F:Virgis.VirgisLayer`2.layer
  name: layer
  nameWithType: VirgisLayer<T, S>.layer
  fullName: Virgis.VirgisLayer<T, S>.layer
  nameWithType.vb: VirgisLayer(Of T, S).layer
  fullName.vb: Virgis.VirgisLayer(Of T, S).layer
- uid: Virgis.VirgisLayer`2.features
  commentId: F:Virgis.VirgisLayer`2.features
  name: features
  nameWithType: VirgisLayer<T, S>.features
  fullName: Virgis.VirgisLayer<T, S>.features
  nameWithType.vb: VirgisLayer(Of T, S).features
  fullName.vb: Virgis.VirgisLayer(Of T, S).features
- uid: Virgis.VirgisLayer`2.changed
  commentId: F:Virgis.VirgisLayer`2.changed
  name: changed
  nameWithType: VirgisLayer<T, S>.changed
  fullName: Virgis.VirgisLayer<T, S>.changed
  nameWithType.vb: VirgisLayer(Of T, S).changed
  fullName.vb: Virgis.VirgisLayer(Of T, S).changed
- uid: Virgis.VirgisLayer`2._id
  commentId: F:Virgis.VirgisLayer`2._id
  name: _id
  nameWithType: VirgisLayer<T, S>._id
  fullName: Virgis.VirgisLayer<T, S>._id
  nameWithType.vb: VirgisLayer(Of T, S)._id
  fullName.vb: Virgis.VirgisLayer(Of T, S)._id
- uid: Virgis.VirgisLayer`2._visible
  commentId: F:Virgis.VirgisLayer`2._visible
  name: _visible
  nameWithType: VirgisLayer<T, S>._visible
  fullName: Virgis.VirgisLayer<T, S>._visible
  nameWithType.vb: VirgisLayer(Of T, S)._visible
  fullName.vb: Virgis.VirgisLayer(Of T, S)._visible
- uid: Virgis.VirgisLayer`2._editable
  commentId: F:Virgis.VirgisLayer`2._editable
  name: _editable
  nameWithType: VirgisLayer<T, S>._editable
  fullName: Virgis.VirgisLayer<T, S>._editable
  nameWithType.vb: VirgisLayer(Of T, S)._editable
  fullName.vb: Virgis.VirgisLayer(Of T, S)._editable
- uid: Virgis.VirgisLayer`2.Init(`0)
  commentId: M:Virgis.VirgisLayer`2.Init(`0)
  name: Init(T)
  nameWithType: VirgisLayer<T, S>.Init(T)
  fullName: Virgis.VirgisLayer<T, S>.Init(T)
  nameWithType.vb: VirgisLayer(Of T, S).Init(T)
  fullName.vb: Virgis.VirgisLayer(Of T, S).Init(T)
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.Init(`0)
    name: Init
    nameWithType: VirgisLayer<T, S>.Init
    fullName: Virgis.VirgisLayer<T, S>.Init
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.Init(`0)
    name: Init
    nameWithType: VirgisLayer(Of T, S).Init
    fullName: Virgis.VirgisLayer(Of T, S).Init
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2._init(`0)
  commentId: M:Virgis.VirgisLayer`2._init(`0)
  name: _init(T)
  nameWithType: VirgisLayer<T, S>._init(T)
  fullName: Virgis.VirgisLayer<T, S>._init(T)
  nameWithType.vb: VirgisLayer(Of T, S)._init(T)
  fullName.vb: Virgis.VirgisLayer(Of T, S)._init(T)
  spec.csharp:
  - uid: Virgis.VirgisLayer`2._init(`0)
    name: _init
    nameWithType: VirgisLayer<T, S>._init
    fullName: Virgis.VirgisLayer<T, S>._init
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2._init(`0)
    name: _init
    nameWithType: VirgisLayer(Of T, S)._init
    fullName: Virgis.VirgisLayer(Of T, S)._init
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2.AddFeature(UnityEngine.Vector3[])
  commentId: M:Virgis.VirgisLayer`2.AddFeature(UnityEngine.Vector3[])
  isExternal: true
  name: AddFeature(Vector3[])
  nameWithType: VirgisLayer<T, S>.AddFeature(Vector3[])
  fullName: Virgis.VirgisLayer<T, S>.AddFeature(UnityEngine.Vector3[])
  nameWithType.vb: VirgisLayer(Of T, S).AddFeature(Vector3())
  fullName.vb: Virgis.VirgisLayer(Of T, S).AddFeature(UnityEngine.Vector3())
  name.vb: AddFeature(Vector3())
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.AddFeature(UnityEngine.Vector3[])
    name: AddFeature
    nameWithType: VirgisLayer<T, S>.AddFeature
    fullName: Virgis.VirgisLayer<T, S>.AddFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.AddFeature(UnityEngine.Vector3[])
    name: AddFeature
    nameWithType: VirgisLayer(Of T, S).AddFeature
    fullName: Virgis.VirgisLayer(Of T, S).AddFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2._addFeature(UnityEngine.Vector3[])
  commentId: M:Virgis.VirgisLayer`2._addFeature(UnityEngine.Vector3[])
  isExternal: true
  name: _addFeature(Vector3[])
  nameWithType: VirgisLayer<T, S>._addFeature(Vector3[])
  fullName: Virgis.VirgisLayer<T, S>._addFeature(UnityEngine.Vector3[])
  nameWithType.vb: VirgisLayer(Of T, S)._addFeature(Vector3())
  fullName.vb: Virgis.VirgisLayer(Of T, S)._addFeature(UnityEngine.Vector3())
  name.vb: _addFeature(Vector3())
  spec.csharp:
  - uid: Virgis.VirgisLayer`2._addFeature(UnityEngine.Vector3[])
    name: _addFeature
    nameWithType: VirgisLayer<T, S>._addFeature
    fullName: Virgis.VirgisLayer<T, S>._addFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2._addFeature(UnityEngine.Vector3[])
    name: _addFeature
    nameWithType: VirgisLayer(Of T, S)._addFeature
    fullName: Virgis.VirgisLayer(Of T, S)._addFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2.Draw
  commentId: M:Virgis.VirgisLayer`2.Draw
  name: Draw()
  nameWithType: VirgisLayer<T, S>.Draw()
  fullName: Virgis.VirgisLayer<T, S>.Draw()
  nameWithType.vb: VirgisLayer(Of T, S).Draw()
  fullName.vb: Virgis.VirgisLayer(Of T, S).Draw()
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.Draw
    name: Draw
    nameWithType: VirgisLayer<T, S>.Draw
    fullName: Virgis.VirgisLayer<T, S>.Draw
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.Draw
    name: Draw
    nameWithType: VirgisLayer(Of T, S).Draw
    fullName: Virgis.VirgisLayer(Of T, S).Draw
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2._draw
  commentId: M:Virgis.VirgisLayer`2._draw
  name: _draw()
  nameWithType: VirgisLayer<T, S>._draw()
  fullName: Virgis.VirgisLayer<T, S>._draw()
  nameWithType.vb: VirgisLayer(Of T, S)._draw()
  fullName.vb: Virgis.VirgisLayer(Of T, S)._draw()
  spec.csharp:
  - uid: Virgis.VirgisLayer`2._draw
    name: _draw
    nameWithType: VirgisLayer<T, S>._draw
    fullName: Virgis.VirgisLayer<T, S>._draw
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2._draw
    name: _draw
    nameWithType: VirgisLayer(Of T, S)._draw
    fullName: Virgis.VirgisLayer(Of T, S)._draw
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2.CheckPoint
  commentId: M:Virgis.VirgisLayer`2.CheckPoint
  name: CheckPoint()
  nameWithType: VirgisLayer<T, S>.CheckPoint()
  fullName: Virgis.VirgisLayer<T, S>.CheckPoint()
  nameWithType.vb: VirgisLayer(Of T, S).CheckPoint()
  fullName.vb: Virgis.VirgisLayer(Of T, S).CheckPoint()
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.CheckPoint
    name: CheckPoint
    nameWithType: VirgisLayer<T, S>.CheckPoint
    fullName: Virgis.VirgisLayer<T, S>.CheckPoint
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.CheckPoint
    name: CheckPoint
    nameWithType: VirgisLayer(Of T, S).CheckPoint
    fullName: Virgis.VirgisLayer(Of T, S).CheckPoint
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2._checkpoint
  commentId: M:Virgis.VirgisLayer`2._checkpoint
  name: _checkpoint()
  nameWithType: VirgisLayer<T, S>._checkpoint()
  fullName: Virgis.VirgisLayer<T, S>._checkpoint()
  nameWithType.vb: VirgisLayer(Of T, S)._checkpoint()
  fullName.vb: Virgis.VirgisLayer(Of T, S)._checkpoint()
  spec.csharp:
  - uid: Virgis.VirgisLayer`2._checkpoint
    name: _checkpoint
    nameWithType: VirgisLayer<T, S>._checkpoint
    fullName: Virgis.VirgisLayer<T, S>._checkpoint
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2._checkpoint
    name: _checkpoint
    nameWithType: VirgisLayer(Of T, S)._checkpoint
    fullName: Virgis.VirgisLayer(Of T, S)._checkpoint
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2.Save
  commentId: M:Virgis.VirgisLayer`2.Save
  name: Save()
  nameWithType: VirgisLayer<T, S>.Save()
  fullName: Virgis.VirgisLayer<T, S>.Save()
  nameWithType.vb: VirgisLayer(Of T, S).Save()
  fullName.vb: Virgis.VirgisLayer(Of T, S).Save()
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.Save
    name: Save
    nameWithType: VirgisLayer<T, S>.Save
    fullName: Virgis.VirgisLayer<T, S>.Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.Save
    name: Save
    nameWithType: VirgisLayer(Of T, S).Save
    fullName: Virgis.VirgisLayer(Of T, S).Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2._save
  commentId: M:Virgis.VirgisLayer`2._save
  name: _save()
  nameWithType: VirgisLayer<T, S>._save()
  fullName: Virgis.VirgisLayer<T, S>._save()
  nameWithType.vb: VirgisLayer(Of T, S)._save()
  fullName.vb: Virgis.VirgisLayer(Of T, S)._save()
  spec.csharp:
  - uid: Virgis.VirgisLayer`2._save
    name: _save
    nameWithType: VirgisLayer<T, S>._save
    fullName: Virgis.VirgisLayer<T, S>._save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2._save
    name: _save
    nameWithType: VirgisLayer(Of T, S)._save
    fullName: Virgis.VirgisLayer(Of T, S)._save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2.Translate(Virgis.MoveArgs)
  commentId: M:Virgis.VirgisLayer`2.Translate(Virgis.MoveArgs)
  name: Translate(MoveArgs)
  nameWithType: VirgisLayer<T, S>.Translate(MoveArgs)
  fullName: Virgis.VirgisLayer<T, S>.Translate(Virgis.MoveArgs)
  nameWithType.vb: VirgisLayer(Of T, S).Translate(MoveArgs)
  fullName.vb: Virgis.VirgisLayer(Of T, S).Translate(Virgis.MoveArgs)
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.Translate(Virgis.MoveArgs)
    name: Translate
    nameWithType: VirgisLayer<T, S>.Translate
    fullName: Virgis.VirgisLayer<T, S>.Translate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.Translate(Virgis.MoveArgs)
    name: Translate
    nameWithType: VirgisLayer(Of T, S).Translate
    fullName: Virgis.VirgisLayer(Of T, S).Translate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2.MoveAxis(Virgis.MoveArgs)
  commentId: M:Virgis.VirgisLayer`2.MoveAxis(Virgis.MoveArgs)
  name: MoveAxis(MoveArgs)
  nameWithType: VirgisLayer<T, S>.MoveAxis(MoveArgs)
  fullName: Virgis.VirgisLayer<T, S>.MoveAxis(Virgis.MoveArgs)
  nameWithType.vb: VirgisLayer(Of T, S).MoveAxis(MoveArgs)
  fullName.vb: Virgis.VirgisLayer(Of T, S).MoveAxis(Virgis.MoveArgs)
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.MoveAxis(Virgis.MoveArgs)
    name: MoveAxis
    nameWithType: VirgisLayer<T, S>.MoveAxis
    fullName: Virgis.VirgisLayer<T, S>.MoveAxis
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.MoveAxis(Virgis.MoveArgs)
    name: MoveAxis
    nameWithType: VirgisLayer(Of T, S).MoveAxis
    fullName: Virgis.VirgisLayer(Of T, S).MoveAxis
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2.MoveTo(Virgis.MoveArgs)
  commentId: M:Virgis.VirgisLayer`2.MoveTo(Virgis.MoveArgs)
  name: MoveTo(MoveArgs)
  nameWithType: VirgisLayer<T, S>.MoveTo(MoveArgs)
  fullName: Virgis.VirgisLayer<T, S>.MoveTo(Virgis.MoveArgs)
  nameWithType.vb: VirgisLayer(Of T, S).MoveTo(MoveArgs)
  fullName.vb: Virgis.VirgisLayer(Of T, S).MoveTo(Virgis.MoveArgs)
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.MoveTo(Virgis.MoveArgs)
    name: MoveTo
    nameWithType: VirgisLayer<T, S>.MoveTo
    fullName: Virgis.VirgisLayer<T, S>.MoveTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.MoveTo(Virgis.MoveArgs)
    name: MoveTo
    nameWithType: VirgisLayer(Of T, S).MoveTo
    fullName: Virgis.VirgisLayer(Of T, S).MoveTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2.VertexMove(Virgis.MoveArgs)
  commentId: M:Virgis.VirgisLayer`2.VertexMove(Virgis.MoveArgs)
  name: VertexMove(MoveArgs)
  nameWithType: VirgisLayer<T, S>.VertexMove(MoveArgs)
  fullName: Virgis.VirgisLayer<T, S>.VertexMove(Virgis.MoveArgs)
  nameWithType.vb: VirgisLayer(Of T, S).VertexMove(MoveArgs)
  fullName.vb: Virgis.VirgisLayer(Of T, S).VertexMove(Virgis.MoveArgs)
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.VertexMove(Virgis.MoveArgs)
    name: VertexMove
    nameWithType: VirgisLayer<T, S>.VertexMove
    fullName: Virgis.VirgisLayer<T, S>.VertexMove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.VertexMove(Virgis.MoveArgs)
    name: VertexMove
    nameWithType: VirgisLayer(Of T, S).VertexMove
    fullName: Virgis.VirgisLayer(Of T, S).VertexMove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2.StartEditSession
  commentId: M:Virgis.VirgisLayer`2.StartEditSession
  name: StartEditSession()
  nameWithType: VirgisLayer<T, S>.StartEditSession()
  fullName: Virgis.VirgisLayer<T, S>.StartEditSession()
  nameWithType.vb: VirgisLayer(Of T, S).StartEditSession()
  fullName.vb: Virgis.VirgisLayer(Of T, S).StartEditSession()
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.StartEditSession
    name: StartEditSession
    nameWithType: VirgisLayer<T, S>.StartEditSession
    fullName: Virgis.VirgisLayer<T, S>.StartEditSession
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.StartEditSession
    name: StartEditSession
    nameWithType: VirgisLayer(Of T, S).StartEditSession
    fullName: Virgis.VirgisLayer(Of T, S).StartEditSession
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2.ExitEditSession(System.Boolean)
  commentId: M:Virgis.VirgisLayer`2.ExitEditSession(System.Boolean)
  isExternal: true
  name: ExitEditSession(Boolean)
  nameWithType: VirgisLayer<T, S>.ExitEditSession(Boolean)
  fullName: Virgis.VirgisLayer<T, S>.ExitEditSession(System.Boolean)
  nameWithType.vb: VirgisLayer(Of T, S).ExitEditSession(Boolean)
  fullName.vb: Virgis.VirgisLayer(Of T, S).ExitEditSession(System.Boolean)
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.ExitEditSession(System.Boolean)
    name: ExitEditSession
    nameWithType: VirgisLayer<T, S>.ExitEditSession
    fullName: Virgis.VirgisLayer<T, S>.ExitEditSession
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.ExitEditSession(System.Boolean)
    name: ExitEditSession
    nameWithType: VirgisLayer(Of T, S).ExitEditSession
    fullName: Virgis.VirgisLayer(Of T, S).ExitEditSession
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2.Selected(Virgis.SelectionTypes)
  commentId: M:Virgis.VirgisLayer`2.Selected(Virgis.SelectionTypes)
  name: Selected(SelectionTypes)
  nameWithType: VirgisLayer<T, S>.Selected(SelectionTypes)
  fullName: Virgis.VirgisLayer<T, S>.Selected(Virgis.SelectionTypes)
  nameWithType.vb: VirgisLayer(Of T, S).Selected(SelectionTypes)
  fullName.vb: Virgis.VirgisLayer(Of T, S).Selected(Virgis.SelectionTypes)
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.Selected(Virgis.SelectionTypes)
    name: Selected
    nameWithType: VirgisLayer<T, S>.Selected
    fullName: Virgis.VirgisLayer<T, S>.Selected
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.SelectionTypes
    name: SelectionTypes
    nameWithType: SelectionTypes
    fullName: Virgis.SelectionTypes
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.Selected(Virgis.SelectionTypes)
    name: Selected
    nameWithType: VirgisLayer(Of T, S).Selected
    fullName: Virgis.VirgisLayer(Of T, S).Selected
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.SelectionTypes
    name: SelectionTypes
    nameWithType: SelectionTypes
    fullName: Virgis.SelectionTypes
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2.UnSelected(Virgis.SelectionTypes)
  commentId: M:Virgis.VirgisLayer`2.UnSelected(Virgis.SelectionTypes)
  name: UnSelected(SelectionTypes)
  nameWithType: VirgisLayer<T, S>.UnSelected(SelectionTypes)
  fullName: Virgis.VirgisLayer<T, S>.UnSelected(Virgis.SelectionTypes)
  nameWithType.vb: VirgisLayer(Of T, S).UnSelected(SelectionTypes)
  fullName.vb: Virgis.VirgisLayer(Of T, S).UnSelected(Virgis.SelectionTypes)
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.UnSelected(Virgis.SelectionTypes)
    name: UnSelected
    nameWithType: VirgisLayer<T, S>.UnSelected
    fullName: Virgis.VirgisLayer<T, S>.UnSelected
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.SelectionTypes
    name: SelectionTypes
    nameWithType: SelectionTypes
    fullName: Virgis.SelectionTypes
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.UnSelected(Virgis.SelectionTypes)
    name: UnSelected
    nameWithType: VirgisLayer(Of T, S).UnSelected
    fullName: Virgis.VirgisLayer(Of T, S).UnSelected
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.SelectionTypes
    name: SelectionTypes
    nameWithType: SelectionTypes
    fullName: Virgis.SelectionTypes
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2.GetClosest(UnityEngine.Vector3,System.Guid[])
  commentId: M:Virgis.VirgisLayer`2.GetClosest(UnityEngine.Vector3,System.Guid[])
  isExternal: true
  name: GetClosest(Vector3, Guid[])
  nameWithType: VirgisLayer<T, S>.GetClosest(Vector3, Guid[])
  fullName: Virgis.VirgisLayer<T, S>.GetClosest(UnityEngine.Vector3, System.Guid[])
  nameWithType.vb: VirgisLayer(Of T, S).GetClosest(Vector3, Guid())
  fullName.vb: Virgis.VirgisLayer(Of T, S).GetClosest(UnityEngine.Vector3, System.Guid())
  name.vb: GetClosest(Vector3, Guid())
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.GetClosest(UnityEngine.Vector3,System.Guid[])
    name: GetClosest
    nameWithType: VirgisLayer<T, S>.GetClosest
    fullName: Virgis.VirgisLayer<T, S>.GetClosest
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.GetClosest(UnityEngine.Vector3,System.Guid[])
    name: GetClosest
    nameWithType: VirgisLayer(Of T, S).GetClosest
    fullName: Virgis.VirgisLayer(Of T, S).GetClosest
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2.GetFeature(System.Guid)
  commentId: M:Virgis.VirgisLayer`2.GetFeature(System.Guid)
  isExternal: true
  name: GetFeature(Guid)
  nameWithType: VirgisLayer<T, S>.GetFeature(Guid)
  fullName: Virgis.VirgisLayer<T, S>.GetFeature(System.Guid)
  nameWithType.vb: VirgisLayer(Of T, S).GetFeature(Guid)
  fullName.vb: Virgis.VirgisLayer(Of T, S).GetFeature(System.Guid)
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.GetFeature(System.Guid)
    name: GetFeature
    nameWithType: VirgisLayer<T, S>.GetFeature
    fullName: Virgis.VirgisLayer<T, S>.GetFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.GetFeature(System.Guid)
    name: GetFeature
    nameWithType: VirgisLayer(Of T, S).GetFeature
    fullName: Virgis.VirgisLayer(Of T, S).GetFeature
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2.GetId
  commentId: M:Virgis.VirgisLayer`2.GetId
  name: GetId()
  nameWithType: VirgisLayer<T, S>.GetId()
  fullName: Virgis.VirgisLayer<T, S>.GetId()
  nameWithType.vb: VirgisLayer(Of T, S).GetId()
  fullName.vb: Virgis.VirgisLayer(Of T, S).GetId()
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.GetId
    name: GetId
    nameWithType: VirgisLayer<T, S>.GetId
    fullName: Virgis.VirgisLayer<T, S>.GetId
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.GetId
    name: GetId
    nameWithType: VirgisLayer(Of T, S).GetId
    fullName: Virgis.VirgisLayer(Of T, S).GetId
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2.GetMetadata
  commentId: M:Virgis.VirgisLayer`2.GetMetadata
  name: GetMetadata()
  nameWithType: VirgisLayer<T, S>.GetMetadata()
  fullName: Virgis.VirgisLayer<T, S>.GetMetadata()
  nameWithType.vb: VirgisLayer(Of T, S).GetMetadata()
  fullName.vb: Virgis.VirgisLayer(Of T, S).GetMetadata()
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.GetMetadata
    name: GetMetadata
    nameWithType: VirgisLayer<T, S>.GetMetadata
    fullName: Virgis.VirgisLayer<T, S>.GetMetadata
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.GetMetadata
    name: GetMetadata
    nameWithType: VirgisLayer(Of T, S).GetMetadata
    fullName: Virgis.VirgisLayer(Of T, S).GetMetadata
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2.GetFeatureShape
  commentId: M:Virgis.VirgisLayer`2.GetFeatureShape
  name: GetFeatureShape()
  nameWithType: VirgisLayer<T, S>.GetFeatureShape()
  fullName: Virgis.VirgisLayer<T, S>.GetFeatureShape()
  nameWithType.vb: VirgisLayer(Of T, S).GetFeatureShape()
  fullName.vb: Virgis.VirgisLayer(Of T, S).GetFeatureShape()
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.GetFeatureShape
    name: GetFeatureShape
    nameWithType: VirgisLayer<T, S>.GetFeatureShape
    fullName: Virgis.VirgisLayer<T, S>.GetFeatureShape
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.GetFeatureShape
    name: GetFeatureShape
    nameWithType: VirgisLayer(Of T, S).GetFeatureShape
    fullName: Virgis.VirgisLayer(Of T, S).GetFeatureShape
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2.SetVisible(System.Boolean)
  commentId: M:Virgis.VirgisLayer`2.SetVisible(System.Boolean)
  isExternal: true
  name: SetVisible(Boolean)
  nameWithType: VirgisLayer<T, S>.SetVisible(Boolean)
  fullName: Virgis.VirgisLayer<T, S>.SetVisible(System.Boolean)
  nameWithType.vb: VirgisLayer(Of T, S).SetVisible(Boolean)
  fullName.vb: Virgis.VirgisLayer(Of T, S).SetVisible(System.Boolean)
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.SetVisible(System.Boolean)
    name: SetVisible
    nameWithType: VirgisLayer<T, S>.SetVisible
    fullName: Virgis.VirgisLayer<T, S>.SetVisible
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.SetVisible(System.Boolean)
    name: SetVisible
    nameWithType: VirgisLayer(Of T, S).SetVisible
    fullName: Virgis.VirgisLayer(Of T, S).SetVisible
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2.IsVisible
  commentId: M:Virgis.VirgisLayer`2.IsVisible
  name: IsVisible()
  nameWithType: VirgisLayer<T, S>.IsVisible()
  fullName: Virgis.VirgisLayer<T, S>.IsVisible()
  nameWithType.vb: VirgisLayer(Of T, S).IsVisible()
  fullName.vb: Virgis.VirgisLayer(Of T, S).IsVisible()
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.IsVisible
    name: IsVisible
    nameWithType: VirgisLayer<T, S>.IsVisible
    fullName: Virgis.VirgisLayer<T, S>.IsVisible
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.IsVisible
    name: IsVisible
    nameWithType: VirgisLayer(Of T, S).IsVisible
    fullName: Virgis.VirgisLayer(Of T, S).IsVisible
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2.SetEditable(System.Boolean)
  commentId: M:Virgis.VirgisLayer`2.SetEditable(System.Boolean)
  isExternal: true
  name: SetEditable(Boolean)
  nameWithType: VirgisLayer<T, S>.SetEditable(Boolean)
  fullName: Virgis.VirgisLayer<T, S>.SetEditable(System.Boolean)
  nameWithType.vb: VirgisLayer(Of T, S).SetEditable(Boolean)
  fullName.vb: Virgis.VirgisLayer(Of T, S).SetEditable(System.Boolean)
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.SetEditable(System.Boolean)
    name: SetEditable
    nameWithType: VirgisLayer<T, S>.SetEditable
    fullName: Virgis.VirgisLayer<T, S>.SetEditable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.SetEditable(System.Boolean)
    name: SetEditable
    nameWithType: VirgisLayer(Of T, S).SetEditable
    fullName: Virgis.VirgisLayer(Of T, S).SetEditable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2.IsEditable
  commentId: M:Virgis.VirgisLayer`2.IsEditable
  name: IsEditable()
  nameWithType: VirgisLayer<T, S>.IsEditable()
  fullName: Virgis.VirgisLayer<T, S>.IsEditable()
  nameWithType.vb: VirgisLayer(Of T, S).IsEditable()
  fullName.vb: Virgis.VirgisLayer(Of T, S).IsEditable()
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.IsEditable
    name: IsEditable
    nameWithType: VirgisLayer<T, S>.IsEditable
    fullName: Virgis.VirgisLayer<T, S>.IsEditable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.IsEditable
    name: IsEditable
    nameWithType: VirgisLayer(Of T, S).IsEditable
    fullName: Virgis.VirgisLayer(Of T, S).IsEditable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2.Equals(System.Object)
  commentId: M:Virgis.VirgisLayer`2.Equals(System.Object)
  isExternal: true
  name: Equals(Object)
  nameWithType: VirgisLayer<T, S>.Equals(Object)
  fullName: Virgis.VirgisLayer<T, S>.Equals(System.Object)
  nameWithType.vb: VirgisLayer(Of T, S).Equals(Object)
  fullName.vb: Virgis.VirgisLayer(Of T, S).Equals(System.Object)
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.Equals(System.Object)
    name: Equals
    nameWithType: VirgisLayer<T, S>.Equals
    fullName: Virgis.VirgisLayer<T, S>.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.Equals(System.Object)
    name: Equals
    nameWithType: VirgisLayer(Of T, S).Equals
    fullName: Virgis.VirgisLayer(Of T, S).Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2.GetHashCode
  commentId: M:Virgis.VirgisLayer`2.GetHashCode
  name: GetHashCode()
  nameWithType: VirgisLayer<T, S>.GetHashCode()
  fullName: Virgis.VirgisLayer<T, S>.GetHashCode()
  nameWithType.vb: VirgisLayer(Of T, S).GetHashCode()
  fullName.vb: Virgis.VirgisLayer(Of T, S).GetHashCode()
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.GetHashCode
    name: GetHashCode
    nameWithType: VirgisLayer<T, S>.GetHashCode
    fullName: Virgis.VirgisLayer<T, S>.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.GetHashCode
    name: GetHashCode
    nameWithType: VirgisLayer(Of T, S).GetHashCode
    fullName: Virgis.VirgisLayer(Of T, S).GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
  commentId: M:Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
  name: Equals(VirgisLayer<T, S>)
  nameWithType: VirgisLayer<T, S>.Equals(VirgisLayer<T, S>)
  fullName: Virgis.VirgisLayer<T, S>.Equals(Virgis.VirgisLayer<T, S>)
  nameWithType.vb: VirgisLayer(Of T, S).Equals(VirgisLayer(Of T, S))
  fullName.vb: Virgis.VirgisLayer(Of T, S).Equals(Virgis.VirgisLayer(Of T, S))
  name.vb: Equals(VirgisLayer(Of T, S))
  spec.csharp:
  - uid: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
    name: Equals
    nameWithType: VirgisLayer<T, S>.Equals
    fullName: Virgis.VirgisLayer<T, S>.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.VirgisLayer`2
    name: VirgisLayer
    nameWithType: VirgisLayer
    fullName: Virgis.VirgisLayer
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.VirgisLayer`2.Equals(Virgis.VirgisLayer{`0,`1})
    name: Equals
    nameWithType: VirgisLayer(Of T, S).Equals
    fullName: Virgis.VirgisLayer(Of T, S).Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.VirgisLayer`2
    name: VirgisLayer
    nameWithType: VirgisLayer
    fullName: Virgis.VirgisLayer
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Material
  commentId: T:UnityEngine.Material
  parent: UnityEngine
  isExternal: true
  name: Material
  nameWithType: Material
  fullName: UnityEngine.Material
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: System.Collections.Generic.List{UnityEngine.GameObject}
  commentId: T:System.Collections.Generic.List{UnityEngine.GameObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<GameObject>
  nameWithType: List<GameObject>
  fullName: System.Collections.Generic.List<UnityEngine.GameObject>
  nameWithType.vb: List(Of GameObject)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.GameObject)
  name.vb: List(Of GameObject)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Virgis.PointCloudLayer._init*
  commentId: Overload:Virgis.PointCloudLayer._init
  name: _init
  nameWithType: PointCloudLayer._init
  fullName: Virgis.PointCloudLayer._init
- uid: Project.GeographyCollection
  commentId: T:Project.GeographyCollection
  parent: Project
  name: GeographyCollection
  nameWithType: GeographyCollection
  fullName: Project.GeographyCollection
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Project
  commentId: N:Project
  name: Project
  nameWithType: Project
  fullName: Project
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Virgis.PointCloudLayer._addFeature*
  commentId: Overload:Virgis.PointCloudLayer._addFeature
  name: _addFeature
  nameWithType: PointCloudLayer._addFeature
  fullName: Virgis.PointCloudLayer._addFeature
- uid: UnityEngine.Vector3[]
  isExternal: true
  name: Vector3[]
  nameWithType: Vector3[]
  fullName: UnityEngine.Vector3[]
  nameWithType.vb: Vector3()
  fullName.vb: UnityEngine.Vector3()
  name.vb: Vector3()
  spec.csharp:
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Virgis.VirgisFeature
  commentId: T:Virgis.VirgisFeature
  parent: Virgis
  name: VirgisFeature
  nameWithType: VirgisFeature
  fullName: Virgis.VirgisFeature
- uid: Virgis.PointCloudLayer._draw*
  commentId: Overload:Virgis.PointCloudLayer._draw
  name: _draw
  nameWithType: PointCloudLayer._draw
  fullName: Virgis.PointCloudLayer._draw
- uid: Virgis.PointCloudLayer.Translate*
  commentId: Overload:Virgis.PointCloudLayer.Translate
  name: Translate
  nameWithType: PointCloudLayer.Translate
  fullName: Virgis.PointCloudLayer.Translate
- uid: Virgis.MoveArgs
  commentId: T:Virgis.MoveArgs
  parent: Virgis
  name: MoveArgs
  nameWithType: MoveArgs
  fullName: Virgis.MoveArgs
- uid: Virgis.PointCloudLayer.MoveAxis*
  commentId: Overload:Virgis.PointCloudLayer.MoveAxis
  name: MoveAxis
  nameWithType: PointCloudLayer.MoveAxis
  fullName: Virgis.PointCloudLayer.MoveAxis
- uid: Virgis.PointCloudLayer._checkpoint*
  commentId: Overload:Virgis.PointCloudLayer._checkpoint
  name: _checkpoint
  nameWithType: PointCloudLayer._checkpoint
  fullName: Virgis.PointCloudLayer._checkpoint
- uid: Virgis.PointCloudLayer._save*
  commentId: Overload:Virgis.PointCloudLayer._save
  name: _save
  nameWithType: PointCloudLayer._save
  fullName: Virgis.PointCloudLayer._save
- uid: Virgis.PointCloudLayer.GetFeatureShape*
  commentId: Overload:Virgis.PointCloudLayer.GetFeatureShape
  name: GetFeatureShape
  nameWithType: PointCloudLayer.GetFeatureShape
  fullName: Virgis.PointCloudLayer.GetFeatureShape

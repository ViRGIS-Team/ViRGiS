### YamlMime:ManagedReference
items:
- uid: g3.MeshQueries
  commentId: T:g3.MeshQueries
  id: MeshQueries
  parent: g3
  children:
  - g3.MeshQueries.BaryCoords(g3.DMesh3,System.Int32,g3.Vector3d)
  - g3.MeshQueries.EdgeLengthStats(g3.DMesh3,System.Double@,System.Double@,System.Double@,System.Int32)
  - g3.MeshQueries.EdgeLengthStatsFromEdges(g3.DMesh3,System.Collections.Generic.IEnumerable{System.Int32},System.Double@,System.Double@,System.Double@,System.Int32)
  - g3.MeshQueries.FindHitTriangle_LinearSearch(g3.DMesh3,g3.Ray3d)
  - g3.MeshQueries.FindIntersectingTriangles_LinearSearch(g3.DMesh3,g3.DMesh3)
  - g3.MeshQueries.FindNearestTriangle_LinearSearch(g3.DMesh3,g3.Vector3d)
  - g3.MeshQueries.FindNearestTriangles_LinearSearch(g3.DMesh3,g3.DMesh3,System.Double@)
  - g3.MeshQueries.FindNearestVertex_LinearSearch(g3.DMesh3,g3.Vector3d)
  - g3.MeshQueries.NearestPointDistance(g3.DMesh3,g3.ISpatial,g3.Vector3d,System.Double)
  - g3.MeshQueries.NearestPointFrame(g3.DMesh3,g3.ISpatial,g3.Vector3d,System.Boolean)
  - g3.MeshQueries.RayHitPointFrame(g3.DMesh3,g3.ISpatial,g3.Ray3d,g3.Frame3f@,System.Boolean)
  - g3.MeshQueries.SurfaceFrame(g3.DMesh3,System.Int32,g3.Vector3d,System.Boolean)
  - g3.MeshQueries.TriangleDistance(g3.DMesh3,System.Int32,g3.Vector3d)
  - g3.MeshQueries.TriangleIntersection(g3.DMesh3,System.Int32,g3.Ray3d)
  - g3.MeshQueries.TrianglesDistance(g3.DMesh3,System.Int32,g3.DMesh3,System.Int32,System.Func{g3.Vector3d,g3.Vector3d})
  - g3.MeshQueries.TrianglesIntersection(g3.DMesh3,System.Int32,g3.DMesh3,System.Int32,System.Func{g3.Vector3d,g3.Vector3d})
  - g3.MeshQueries.TriangleTriangleDistance(g3.DMesh3,System.Int32,g3.DMesh3,System.Int32,System.Func{g3.Vector3d,g3.Vector3d})
  - g3.MeshQueries.TriDistanceSqr(g3.DMesh3,System.Int32,g3.Vector3d)
  langs:
  - csharp
  - vb
  name: MeshQueries
  nameWithType: MeshQueries
  fullName: g3.MeshQueries
  type: Class
  source:
    remote:
      path: Assets/geometry3Sharp/queries/MeshQueries.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: MeshQueries
    path: ../Assets/geometry3Sharp/queries/MeshQueries.cs
    startLine: 7
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static class MeshQueries
    content.vb: Public Module MeshQueries
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: g3.MeshQueries.TriangleDistance(g3.DMesh3,System.Int32,g3.Vector3d)
  commentId: M:g3.MeshQueries.TriangleDistance(g3.DMesh3,System.Int32,g3.Vector3d)
  id: TriangleDistance(g3.DMesh3,System.Int32,g3.Vector3d)
  parent: g3.MeshQueries
  langs:
  - csharp
  - vb
  name: TriangleDistance(DMesh3, Int32, Vector3d)
  nameWithType: MeshQueries.TriangleDistance(DMesh3, Int32, Vector3d)
  fullName: g3.MeshQueries.TriangleDistance(g3.DMesh3, System.Int32, g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/queries/MeshQueries.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: TriangleDistance
    path: ../Assets/geometry3Sharp/queries/MeshQueries.cs
    startLine: 13
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nconstruct a DistPoint3Triangle3 object for a mesh triangle\n"
  example: []
  syntax:
    content: public static DistPoint3Triangle3 TriangleDistance(DMesh3 mesh, int ti, Vector3d point)
    parameters:
    - id: mesh
      type: g3.DMesh3
    - id: ti
      type: System.Int32
    - id: point
      type: g3.Vector3d
    return:
      type: g3.DistPoint3Triangle3
    content.vb: Public Shared Function TriangleDistance(mesh As DMesh3, ti As Integer, point As Vector3d) As DistPoint3Triangle3
  overload: g3.MeshQueries.TriangleDistance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MeshQueries.NearestPointFrame(g3.DMesh3,g3.ISpatial,g3.Vector3d,System.Boolean)
  commentId: M:g3.MeshQueries.NearestPointFrame(g3.DMesh3,g3.ISpatial,g3.Vector3d,System.Boolean)
  id: NearestPointFrame(g3.DMesh3,g3.ISpatial,g3.Vector3d,System.Boolean)
  parent: g3.MeshQueries
  langs:
  - csharp
  - vb
  name: NearestPointFrame(DMesh3, ISpatial, Vector3d, Boolean)
  nameWithType: MeshQueries.NearestPointFrame(DMesh3, ISpatial, Vector3d, Boolean)
  fullName: g3.MeshQueries.NearestPointFrame(g3.DMesh3, g3.ISpatial, g3.Vector3d, System.Boolean)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/queries/MeshQueries.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: NearestPointFrame
    path: ../Assets/geometry3Sharp/queries/MeshQueries.cs
    startLine: 28
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nFind point-normal(Z) frame at closest point to queryPoint on mesh.\nReturns interpolated vertex-normal frame if available, otherwise tri-normal frame.\n"
  example: []
  syntax:
    content: public static Frame3f NearestPointFrame(DMesh3 mesh, ISpatial spatial, Vector3d queryPoint, bool bForceFaceNormal = false)
    parameters:
    - id: mesh
      type: g3.DMesh3
    - id: spatial
      type: g3.ISpatial
    - id: queryPoint
      type: g3.Vector3d
    - id: bForceFaceNormal
      type: System.Boolean
    return:
      type: g3.Frame3f
    content.vb: Public Shared Function NearestPointFrame(mesh As DMesh3, spatial As ISpatial, queryPoint As Vector3d, bForceFaceNormal As Boolean = False) As Frame3f
  overload: g3.MeshQueries.NearestPointFrame*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MeshQueries.NearestPointDistance(g3.DMesh3,g3.ISpatial,g3.Vector3d,System.Double)
  commentId: M:g3.MeshQueries.NearestPointDistance(g3.DMesh3,g3.ISpatial,g3.Vector3d,System.Double)
  id: NearestPointDistance(g3.DMesh3,g3.ISpatial,g3.Vector3d,System.Double)
  parent: g3.MeshQueries
  langs:
  - csharp
  - vb
  name: NearestPointDistance(DMesh3, ISpatial, Vector3d, Double)
  nameWithType: MeshQueries.NearestPointDistance(DMesh3, ISpatial, Vector3d, Double)
  fullName: g3.MeshQueries.NearestPointDistance(g3.DMesh3, g3.ISpatial, g3.Vector3d, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/queries/MeshQueries.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: NearestPointDistance
    path: ../Assets/geometry3Sharp/queries/MeshQueries.cs
    startLine: 43
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nFind distance from point to mesh\nReturns interpolated vertex-normal frame if available, otherwise tri-normal frame.\n"
  example: []
  syntax:
    content: public static double NearestPointDistance(DMesh3 mesh, ISpatial spatial, Vector3d queryPoint, double maxDist = 1.7976931348623157E+308)
    parameters:
    - id: mesh
      type: g3.DMesh3
    - id: spatial
      type: g3.ISpatial
    - id: queryPoint
      type: g3.Vector3d
    - id: maxDist
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function NearestPointDistance(mesh As DMesh3, spatial As ISpatial, queryPoint As Vector3d, maxDist As Double = 1.7976931348623157E+308) As Double
  overload: g3.MeshQueries.NearestPointDistance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MeshQueries.TriangleTriangleDistance(g3.DMesh3,System.Int32,g3.DMesh3,System.Int32,System.Func{g3.Vector3d,g3.Vector3d})
  commentId: M:g3.MeshQueries.TriangleTriangleDistance(g3.DMesh3,System.Int32,g3.DMesh3,System.Int32,System.Func{g3.Vector3d,g3.Vector3d})
  id: TriangleTriangleDistance(g3.DMesh3,System.Int32,g3.DMesh3,System.Int32,System.Func{g3.Vector3d,g3.Vector3d})
  parent: g3.MeshQueries
  langs:
  - csharp
  - vb
  name: TriangleTriangleDistance(DMesh3, Int32, DMesh3, Int32, Func<Vector3d, Vector3d>)
  nameWithType: MeshQueries.TriangleTriangleDistance(DMesh3, Int32, DMesh3, Int32, Func<Vector3d, Vector3d>)
  fullName: g3.MeshQueries.TriangleTriangleDistance(g3.DMesh3, System.Int32, g3.DMesh3, System.Int32, System.Func<g3.Vector3d, g3.Vector3d>)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/queries/MeshQueries.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: TriangleTriangleDistance
    path: ../Assets/geometry3Sharp/queries/MeshQueries.cs
    startLine: 61
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nfind distance between two triangles, with optional\ntransform on second triangle\n"
  example: []
  syntax:
    content: public static DistTriangle3Triangle3 TriangleTriangleDistance(DMesh3 mesh1, int ti, DMesh3 mesh2, int tj, Func<Vector3d, Vector3d> TransformF = null)
    parameters:
    - id: mesh1
      type: g3.DMesh3
    - id: ti
      type: System.Int32
    - id: mesh2
      type: g3.DMesh3
    - id: tj
      type: System.Int32
    - id: TransformF
      type: System.Func{g3.Vector3d,g3.Vector3d}
    return:
      type: g3.DistTriangle3Triangle3
    content.vb: Public Shared Function TriangleTriangleDistance(mesh1 As DMesh3, ti As Integer, mesh2 As DMesh3, tj As Integer, TransformF As Func(Of Vector3d, Vector3d) = Nothing) As DistTriangle3Triangle3
  overload: g3.MeshQueries.TriangleTriangleDistance*
  nameWithType.vb: MeshQueries.TriangleTriangleDistance(DMesh3, Int32, DMesh3, Int32, Func(Of Vector3d, Vector3d))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.MeshQueries.TriangleTriangleDistance(g3.DMesh3, System.Int32, g3.DMesh3, System.Int32, System.Func(Of g3.Vector3d, g3.Vector3d))
  name.vb: TriangleTriangleDistance(DMesh3, Int32, DMesh3, Int32, Func(Of Vector3d, Vector3d))
- uid: g3.MeshQueries.TriangleIntersection(g3.DMesh3,System.Int32,g3.Ray3d)
  commentId: M:g3.MeshQueries.TriangleIntersection(g3.DMesh3,System.Int32,g3.Ray3d)
  id: TriangleIntersection(g3.DMesh3,System.Int32,g3.Ray3d)
  parent: g3.MeshQueries
  langs:
  - csharp
  - vb
  name: TriangleIntersection(DMesh3, Int32, Ray3d)
  nameWithType: MeshQueries.TriangleIntersection(DMesh3, Int32, Ray3d)
  fullName: g3.MeshQueries.TriangleIntersection(g3.DMesh3, System.Int32, g3.Ray3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/queries/MeshQueries.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: TriangleIntersection
    path: ../Assets/geometry3Sharp/queries/MeshQueries.cs
    startLine: 83
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nconvenience function to construct a IntrRay3Triangle3 object for a mesh triangle\n"
  example: []
  syntax:
    content: public static IntrRay3Triangle3 TriangleIntersection(DMesh3 mesh, int ti, Ray3d ray)
    parameters:
    - id: mesh
      type: g3.DMesh3
    - id: ti
      type: System.Int32
    - id: ray
      type: g3.Ray3d
    return:
      type: g3.IntrRay3Triangle3
    content.vb: Public Shared Function TriangleIntersection(mesh As DMesh3, ti As Integer, ray As Ray3d) As IntrRay3Triangle3
  overload: g3.MeshQueries.TriangleIntersection*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MeshQueries.TrianglesIntersection(g3.DMesh3,System.Int32,g3.DMesh3,System.Int32,System.Func{g3.Vector3d,g3.Vector3d})
  commentId: M:g3.MeshQueries.TrianglesIntersection(g3.DMesh3,System.Int32,g3.DMesh3,System.Int32,System.Func{g3.Vector3d,g3.Vector3d})
  id: TrianglesIntersection(g3.DMesh3,System.Int32,g3.DMesh3,System.Int32,System.Func{g3.Vector3d,g3.Vector3d})
  parent: g3.MeshQueries
  langs:
  - csharp
  - vb
  name: TrianglesIntersection(DMesh3, Int32, DMesh3, Int32, Func<Vector3d, Vector3d>)
  nameWithType: MeshQueries.TrianglesIntersection(DMesh3, Int32, DMesh3, Int32, Func<Vector3d, Vector3d>)
  fullName: g3.MeshQueries.TrianglesIntersection(g3.DMesh3, System.Int32, g3.DMesh3, System.Int32, System.Func<g3.Vector3d, g3.Vector3d>)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/queries/MeshQueries.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: TrianglesIntersection
    path: ../Assets/geometry3Sharp/queries/MeshQueries.cs
    startLine: 98
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nconvenience function to construct a IntrTriangle3Triangle3 object for two mesh triangles\n"
  example: []
  syntax:
    content: public static IntrTriangle3Triangle3 TrianglesIntersection(DMesh3 mesh1, int ti, DMesh3 mesh2, int tj, Func<Vector3d, Vector3d> TransformF = null)
    parameters:
    - id: mesh1
      type: g3.DMesh3
    - id: ti
      type: System.Int32
    - id: mesh2
      type: g3.DMesh3
    - id: tj
      type: System.Int32
    - id: TransformF
      type: System.Func{g3.Vector3d,g3.Vector3d}
    return:
      type: g3.IntrTriangle3Triangle3
    content.vb: Public Shared Function TrianglesIntersection(mesh1 As DMesh3, ti As Integer, mesh2 As DMesh3, tj As Integer, TransformF As Func(Of Vector3d, Vector3d) = Nothing) As IntrTriangle3Triangle3
  overload: g3.MeshQueries.TrianglesIntersection*
  nameWithType.vb: MeshQueries.TrianglesIntersection(DMesh3, Int32, DMesh3, Int32, Func(Of Vector3d, Vector3d))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.MeshQueries.TrianglesIntersection(g3.DMesh3, System.Int32, g3.DMesh3, System.Int32, System.Func(Of g3.Vector3d, g3.Vector3d))
  name.vb: TrianglesIntersection(DMesh3, Int32, DMesh3, Int32, Func(Of Vector3d, Vector3d))
- uid: g3.MeshQueries.TrianglesDistance(g3.DMesh3,System.Int32,g3.DMesh3,System.Int32,System.Func{g3.Vector3d,g3.Vector3d})
  commentId: M:g3.MeshQueries.TrianglesDistance(g3.DMesh3,System.Int32,g3.DMesh3,System.Int32,System.Func{g3.Vector3d,g3.Vector3d})
  id: TrianglesDistance(g3.DMesh3,System.Int32,g3.DMesh3,System.Int32,System.Func{g3.Vector3d,g3.Vector3d})
  parent: g3.MeshQueries
  langs:
  - csharp
  - vb
  name: TrianglesDistance(DMesh3, Int32, DMesh3, Int32, Func<Vector3d, Vector3d>)
  nameWithType: MeshQueries.TrianglesDistance(DMesh3, Int32, DMesh3, Int32, Func<Vector3d, Vector3d>)
  fullName: g3.MeshQueries.TrianglesDistance(g3.DMesh3, System.Int32, g3.DMesh3, System.Int32, System.Func<g3.Vector3d, g3.Vector3d>)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/queries/MeshQueries.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: TrianglesDistance
    path: ../Assets/geometry3Sharp/queries/MeshQueries.cs
    startLine: 119
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nconvenience function to construct a DistTriangle3Triangle3 object for two mesh triangles\n"
  example: []
  syntax:
    content: public static DistTriangle3Triangle3 TrianglesDistance(DMesh3 mesh1, int ti, DMesh3 mesh2, int tj, Func<Vector3d, Vector3d> TransformF = null)
    parameters:
    - id: mesh1
      type: g3.DMesh3
    - id: ti
      type: System.Int32
    - id: mesh2
      type: g3.DMesh3
    - id: tj
      type: System.Int32
    - id: TransformF
      type: System.Func{g3.Vector3d,g3.Vector3d}
    return:
      type: g3.DistTriangle3Triangle3
    content.vb: Public Shared Function TrianglesDistance(mesh1 As DMesh3, ti As Integer, mesh2 As DMesh3, tj As Integer, TransformF As Func(Of Vector3d, Vector3d) = Nothing) As DistTriangle3Triangle3
  overload: g3.MeshQueries.TrianglesDistance*
  nameWithType.vb: MeshQueries.TrianglesDistance(DMesh3, Int32, DMesh3, Int32, Func(Of Vector3d, Vector3d))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.MeshQueries.TrianglesDistance(g3.DMesh3, System.Int32, g3.DMesh3, System.Int32, System.Func(Of g3.Vector3d, g3.Vector3d))
  name.vb: TrianglesDistance(DMesh3, Int32, DMesh3, Int32, Func(Of Vector3d, Vector3d))
- uid: g3.MeshQueries.RayHitPointFrame(g3.DMesh3,g3.ISpatial,g3.Ray3d,g3.Frame3f@,System.Boolean)
  commentId: M:g3.MeshQueries.RayHitPointFrame(g3.DMesh3,g3.ISpatial,g3.Ray3d,g3.Frame3f@,System.Boolean)
  id: RayHitPointFrame(g3.DMesh3,g3.ISpatial,g3.Ray3d,g3.Frame3f@,System.Boolean)
  parent: g3.MeshQueries
  langs:
  - csharp
  - vb
  name: RayHitPointFrame(DMesh3, ISpatial, Ray3d, out Frame3f, Boolean)
  nameWithType: MeshQueries.RayHitPointFrame(DMesh3, ISpatial, Ray3d, out Frame3f, Boolean)
  fullName: g3.MeshQueries.RayHitPointFrame(g3.DMesh3, g3.ISpatial, g3.Ray3d, out g3.Frame3f, System.Boolean)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/queries/MeshQueries.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: RayHitPointFrame
    path: ../Assets/geometry3Sharp/queries/MeshQueries.cs
    startLine: 143
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nFind point-normal frame at ray-intersection point on mesh, or return false if no hit.\nReturns interpolated vertex-normal frame if available, otherwise tri-normal frame.\n"
  example: []
  syntax:
    content: public static bool RayHitPointFrame(DMesh3 mesh, ISpatial spatial, Ray3d ray, out Frame3f hitPosFrame, bool bForceFaceNormal = false)
    parameters:
    - id: mesh
      type: g3.DMesh3
    - id: spatial
      type: g3.ISpatial
    - id: ray
      type: g3.Ray3d
    - id: hitPosFrame
      type: g3.Frame3f
    - id: bForceFaceNormal
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Shared Function RayHitPointFrame(mesh As DMesh3, spatial As ISpatial, ray As Ray3d, ByRef hitPosFrame As Frame3f, bForceFaceNormal As Boolean = False) As Boolean
  overload: g3.MeshQueries.RayHitPointFrame*
  nameWithType.vb: MeshQueries.RayHitPointFrame(DMesh3, ISpatial, Ray3d, ByRef Frame3f, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.MeshQueries.RayHitPointFrame(g3.DMesh3, g3.ISpatial, g3.Ray3d, ByRef g3.Frame3f, System.Boolean)
  name.vb: RayHitPointFrame(DMesh3, ISpatial, Ray3d, ByRef Frame3f, Boolean)
- uid: g3.MeshQueries.SurfaceFrame(g3.DMesh3,System.Int32,g3.Vector3d,System.Boolean)
  commentId: M:g3.MeshQueries.SurfaceFrame(g3.DMesh3,System.Int32,g3.Vector3d,System.Boolean)
  id: SurfaceFrame(g3.DMesh3,System.Int32,g3.Vector3d,System.Boolean)
  parent: g3.MeshQueries
  langs:
  - csharp
  - vb
  name: SurfaceFrame(DMesh3, Int32, Vector3d, Boolean)
  nameWithType: MeshQueries.SurfaceFrame(DMesh3, Int32, Vector3d, Boolean)
  fullName: g3.MeshQueries.SurfaceFrame(g3.DMesh3, System.Int32, g3.Vector3d, System.Boolean)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/queries/MeshQueries.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: SurfaceFrame
    path: ../Assets/geometry3Sharp/queries/MeshQueries.cs
    startLine: 165
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nGet point-normal frame on surface of mesh. Assumption is that point lies in tID.\nreturns interpolated vertex-normal frame if available, otherwise tri-normal frame.\n"
  example: []
  syntax:
    content: public static Frame3f SurfaceFrame(DMesh3 mesh, int tID, Vector3d point, bool bForceFaceNormal = false)
    parameters:
    - id: mesh
      type: g3.DMesh3
    - id: tID
      type: System.Int32
    - id: point
      type: g3.Vector3d
    - id: bForceFaceNormal
      type: System.Boolean
    return:
      type: g3.Frame3f
    content.vb: Public Shared Function SurfaceFrame(mesh As DMesh3, tID As Integer, point As Vector3d, bForceFaceNormal As Boolean = False) As Frame3f
  overload: g3.MeshQueries.SurfaceFrame*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MeshQueries.BaryCoords(g3.DMesh3,System.Int32,g3.Vector3d)
  commentId: M:g3.MeshQueries.BaryCoords(g3.DMesh3,System.Int32,g3.Vector3d)
  id: BaryCoords(g3.DMesh3,System.Int32,g3.Vector3d)
  parent: g3.MeshQueries
  langs:
  - csharp
  - vb
  name: BaryCoords(DMesh3, Int32, Vector3d)
  nameWithType: MeshQueries.BaryCoords(DMesh3, Int32, Vector3d)
  fullName: g3.MeshQueries.BaryCoords(g3.DMesh3, System.Int32, g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/queries/MeshQueries.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: BaryCoords
    path: ../Assets/geometry3Sharp/queries/MeshQueries.cs
    startLine: 184
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nGet barycentric coords of point in triangle\n"
  example: []
  syntax:
    content: public static Vector3d BaryCoords(DMesh3 mesh, int tID, Vector3d point)
    parameters:
    - id: mesh
      type: g3.DMesh3
    - id: tID
      type: System.Int32
    - id: point
      type: g3.Vector3d
    return:
      type: g3.Vector3d
    content.vb: Public Shared Function BaryCoords(mesh As DMesh3, tID As Integer, point As Vector3d) As Vector3d
  overload: g3.MeshQueries.BaryCoords*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MeshQueries.TriDistanceSqr(g3.DMesh3,System.Int32,g3.Vector3d)
  commentId: M:g3.MeshQueries.TriDistanceSqr(g3.DMesh3,System.Int32,g3.Vector3d)
  id: TriDistanceSqr(g3.DMesh3,System.Int32,g3.Vector3d)
  parent: g3.MeshQueries
  langs:
  - csharp
  - vb
  name: TriDistanceSqr(DMesh3, Int32, Vector3d)
  nameWithType: MeshQueries.TriDistanceSqr(DMesh3, Int32, Vector3d)
  fullName: g3.MeshQueries.TriDistanceSqr(g3.DMesh3, System.Int32, g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/queries/MeshQueries.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: TriDistanceSqr
    path: ../Assets/geometry3Sharp/queries/MeshQueries.cs
    startLine: 197
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nCompute distance from point to triangle in mesh, with minimal extra objects/etc\n"
  example: []
  syntax:
    content: public static double TriDistanceSqr(DMesh3 mesh, int ti, Vector3d point)
    parameters:
    - id: mesh
      type: g3.DMesh3
    - id: ti
      type: System.Int32
    - id: point
      type: g3.Vector3d
    return:
      type: System.Double
    content.vb: Public Shared Function TriDistanceSqr(mesh As DMesh3, ti As Integer, point As Vector3d) As Double
  overload: g3.MeshQueries.TriDistanceSqr*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MeshQueries.FindNearestVertex_LinearSearch(g3.DMesh3,g3.Vector3d)
  commentId: M:g3.MeshQueries.FindNearestVertex_LinearSearch(g3.DMesh3,g3.Vector3d)
  id: FindNearestVertex_LinearSearch(g3.DMesh3,g3.Vector3d)
  parent: g3.MeshQueries
  langs:
  - csharp
  - vb
  name: FindNearestVertex_LinearSearch(DMesh3, Vector3d)
  nameWithType: MeshQueries.FindNearestVertex_LinearSearch(DMesh3, Vector3d)
  fullName: g3.MeshQueries.FindNearestVertex_LinearSearch(g3.DMesh3, g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/queries/MeshQueries.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: FindNearestVertex_LinearSearch
    path: ../Assets/geometry3Sharp/queries/MeshQueries.cs
    startLine: 365
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static int FindNearestVertex_LinearSearch(DMesh3 mesh, Vector3d p)
    parameters:
    - id: mesh
      type: g3.DMesh3
    - id: p
      type: g3.Vector3d
    return:
      type: System.Int32
    content.vb: Public Shared Function FindNearestVertex_LinearSearch(mesh As DMesh3, p As Vector3d) As Integer
  overload: g3.MeshQueries.FindNearestVertex_LinearSearch*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MeshQueries.FindNearestTriangle_LinearSearch(g3.DMesh3,g3.Vector3d)
  commentId: M:g3.MeshQueries.FindNearestTriangle_LinearSearch(g3.DMesh3,g3.Vector3d)
  id: FindNearestTriangle_LinearSearch(g3.DMesh3,g3.Vector3d)
  parent: g3.MeshQueries
  langs:
  - csharp
  - vb
  name: FindNearestTriangle_LinearSearch(DMesh3, Vector3d)
  nameWithType: MeshQueries.FindNearestTriangle_LinearSearch(DMesh3, Vector3d)
  fullName: g3.MeshQueries.FindNearestTriangle_LinearSearch(g3.DMesh3, g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/queries/MeshQueries.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: FindNearestTriangle_LinearSearch
    path: ../Assets/geometry3Sharp/queries/MeshQueries.cs
    startLine: 382
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static int FindNearestTriangle_LinearSearch(DMesh3 mesh, Vector3d p)
    parameters:
    - id: mesh
      type: g3.DMesh3
    - id: p
      type: g3.Vector3d
    return:
      type: System.Int32
    content.vb: Public Shared Function FindNearestTriangle_LinearSearch(mesh As DMesh3, p As Vector3d) As Integer
  overload: g3.MeshQueries.FindNearestTriangle_LinearSearch*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MeshQueries.FindHitTriangle_LinearSearch(g3.DMesh3,g3.Ray3d)
  commentId: M:g3.MeshQueries.FindHitTriangle_LinearSearch(g3.DMesh3,g3.Ray3d)
  id: FindHitTriangle_LinearSearch(g3.DMesh3,g3.Ray3d)
  parent: g3.MeshQueries
  langs:
  - csharp
  - vb
  name: FindHitTriangle_LinearSearch(DMesh3, Ray3d)
  nameWithType: MeshQueries.FindHitTriangle_LinearSearch(DMesh3, Ray3d)
  fullName: g3.MeshQueries.FindHitTriangle_LinearSearch(g3.DMesh3, g3.Ray3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/queries/MeshQueries.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: FindHitTriangle_LinearSearch
    path: ../Assets/geometry3Sharp/queries/MeshQueries.cs
    startLine: 396
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static int FindHitTriangle_LinearSearch(DMesh3 mesh, Ray3d ray)
    parameters:
    - id: mesh
      type: g3.DMesh3
    - id: ray
      type: g3.Ray3d
    return:
      type: System.Int32
    content.vb: Public Shared Function FindHitTriangle_LinearSearch(mesh As DMesh3, ray As Ray3d) As Integer
  overload: g3.MeshQueries.FindHitTriangle_LinearSearch*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MeshQueries.FindIntersectingTriangles_LinearSearch(g3.DMesh3,g3.DMesh3)
  commentId: M:g3.MeshQueries.FindIntersectingTriangles_LinearSearch(g3.DMesh3,g3.DMesh3)
  id: FindIntersectingTriangles_LinearSearch(g3.DMesh3,g3.DMesh3)
  parent: g3.MeshQueries
  langs:
  - csharp
  - vb
  name: FindIntersectingTriangles_LinearSearch(DMesh3, DMesh3)
  nameWithType: MeshQueries.FindIntersectingTriangles_LinearSearch(DMesh3, DMesh3)
  fullName: g3.MeshQueries.FindIntersectingTriangles_LinearSearch(g3.DMesh3, g3.DMesh3)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/queries/MeshQueries.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: FindIntersectingTriangles_LinearSearch
    path: ../Assets/geometry3Sharp/queries/MeshQueries.cs
    startLine: 422
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nbrute force search for any intersecting triangles on two meshes\n"
  example: []
  syntax:
    content: public static Index2i FindIntersectingTriangles_LinearSearch(DMesh3 mesh1, DMesh3 mesh2)
    parameters:
    - id: mesh1
      type: g3.DMesh3
    - id: mesh2
      type: g3.DMesh3
    return:
      type: g3.Index2i
    content.vb: Public Shared Function FindIntersectingTriangles_LinearSearch(mesh1 As DMesh3, mesh2 As DMesh3) As Index2i
  overload: g3.MeshQueries.FindIntersectingTriangles_LinearSearch*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MeshQueries.FindNearestTriangles_LinearSearch(g3.DMesh3,g3.DMesh3,System.Double@)
  commentId: M:g3.MeshQueries.FindNearestTriangles_LinearSearch(g3.DMesh3,g3.DMesh3,System.Double@)
  id: FindNearestTriangles_LinearSearch(g3.DMesh3,g3.DMesh3,System.Double@)
  parent: g3.MeshQueries
  langs:
  - csharp
  - vb
  name: FindNearestTriangles_LinearSearch(DMesh3, DMesh3, out Double)
  nameWithType: MeshQueries.FindNearestTriangles_LinearSearch(DMesh3, DMesh3, out Double)
  fullName: g3.MeshQueries.FindNearestTriangles_LinearSearch(g3.DMesh3, g3.DMesh3, out System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/queries/MeshQueries.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: FindNearestTriangles_LinearSearch
    path: ../Assets/geometry3Sharp/queries/MeshQueries.cs
    startLine: 443
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nBrute-force search for closest pair of triangles on two meshes\n"
  example: []
  syntax:
    content: public static Index2i FindNearestTriangles_LinearSearch(DMesh3 mesh1, DMesh3 mesh2, out double fNearestSqr)
    parameters:
    - id: mesh1
      type: g3.DMesh3
    - id: mesh2
      type: g3.DMesh3
    - id: fNearestSqr
      type: System.Double
    return:
      type: g3.Index2i
    content.vb: Public Shared Function FindNearestTriangles_LinearSearch(mesh1 As DMesh3, mesh2 As DMesh3, ByRef fNearestSqr As Double) As Index2i
  overload: g3.MeshQueries.FindNearestTriangles_LinearSearch*
  nameWithType.vb: MeshQueries.FindNearestTriangles_LinearSearch(DMesh3, DMesh3, ByRef Double)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.MeshQueries.FindNearestTriangles_LinearSearch(g3.DMesh3, g3.DMesh3, ByRef System.Double)
  name.vb: FindNearestTriangles_LinearSearch(DMesh3, DMesh3, ByRef Double)
- uid: g3.MeshQueries.EdgeLengthStats(g3.DMesh3,System.Double@,System.Double@,System.Double@,System.Int32)
  commentId: M:g3.MeshQueries.EdgeLengthStats(g3.DMesh3,System.Double@,System.Double@,System.Double@,System.Int32)
  id: EdgeLengthStats(g3.DMesh3,System.Double@,System.Double@,System.Double@,System.Int32)
  parent: g3.MeshQueries
  langs:
  - csharp
  - vb
  name: EdgeLengthStats(DMesh3, out Double, out Double, out Double, Int32)
  nameWithType: MeshQueries.EdgeLengthStats(DMesh3, out Double, out Double, out Double, Int32)
  fullName: g3.MeshQueries.EdgeLengthStats(g3.DMesh3, out System.Double, out System.Double, out System.Double, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/queries/MeshQueries.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: EdgeLengthStats
    path: ../Assets/geometry3Sharp/queries/MeshQueries.cs
    startLine: 467
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static void EdgeLengthStats(DMesh3 mesh, out double minEdgeLen, out double maxEdgeLen, out double avgEdgeLen, int samples = 0)
    parameters:
    - id: mesh
      type: g3.DMesh3
    - id: minEdgeLen
      type: System.Double
    - id: maxEdgeLen
      type: System.Double
    - id: avgEdgeLen
      type: System.Double
    - id: samples
      type: System.Int32
    content.vb: Public Shared Sub EdgeLengthStats(mesh As DMesh3, ByRef minEdgeLen As Double, ByRef maxEdgeLen As Double, ByRef avgEdgeLen As Double, samples As Integer = 0)
  overload: g3.MeshQueries.EdgeLengthStats*
  nameWithType.vb: MeshQueries.EdgeLengthStats(DMesh3, ByRef Double, ByRef Double, ByRef Double, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.MeshQueries.EdgeLengthStats(g3.DMesh3, ByRef System.Double, ByRef System.Double, ByRef System.Double, System.Int32)
  name.vb: EdgeLengthStats(DMesh3, ByRef Double, ByRef Double, ByRef Double, Int32)
- uid: g3.MeshQueries.EdgeLengthStatsFromEdges(g3.DMesh3,System.Collections.Generic.IEnumerable{System.Int32},System.Double@,System.Double@,System.Double@,System.Int32)
  commentId: M:g3.MeshQueries.EdgeLengthStatsFromEdges(g3.DMesh3,System.Collections.Generic.IEnumerable{System.Int32},System.Double@,System.Double@,System.Double@,System.Int32)
  id: EdgeLengthStatsFromEdges(g3.DMesh3,System.Collections.Generic.IEnumerable{System.Int32},System.Double@,System.Double@,System.Double@,System.Int32)
  parent: g3.MeshQueries
  langs:
  - csharp
  - vb
  name: EdgeLengthStatsFromEdges(DMesh3, IEnumerable<Int32>, out Double, out Double, out Double, Int32)
  nameWithType: MeshQueries.EdgeLengthStatsFromEdges(DMesh3, IEnumerable<Int32>, out Double, out Double, out Double, Int32)
  fullName: g3.MeshQueries.EdgeLengthStatsFromEdges(g3.DMesh3, System.Collections.Generic.IEnumerable<System.Int32>, out System.Double, out System.Double, out System.Double, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/queries/MeshQueries.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: EdgeLengthStatsFromEdges
    path: ../Assets/geometry3Sharp/queries/MeshQueries.cs
    startLine: 499
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static void EdgeLengthStatsFromEdges(DMesh3 mesh, IEnumerable<int> EdgeItr, out double minEdgeLen, out double maxEdgeLen, out double avgEdgeLen, int samples = 0)
    parameters:
    - id: mesh
      type: g3.DMesh3
    - id: EdgeItr
      type: System.Collections.Generic.IEnumerable{System.Int32}
    - id: minEdgeLen
      type: System.Double
    - id: maxEdgeLen
      type: System.Double
    - id: avgEdgeLen
      type: System.Double
    - id: samples
      type: System.Int32
    content.vb: Public Shared Sub EdgeLengthStatsFromEdges(mesh As DMesh3, EdgeItr As IEnumerable(Of Integer), ByRef minEdgeLen As Double, ByRef maxEdgeLen As Double, ByRef avgEdgeLen As Double, samples As Integer = 0)
  overload: g3.MeshQueries.EdgeLengthStatsFromEdges*
  nameWithType.vb: MeshQueries.EdgeLengthStatsFromEdges(DMesh3, IEnumerable(Of Int32), ByRef Double, ByRef Double, ByRef Double, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.MeshQueries.EdgeLengthStatsFromEdges(g3.DMesh3, System.Collections.Generic.IEnumerable(Of System.Int32), ByRef System.Double, ByRef System.Double, ByRef System.Double, System.Int32)
  name.vb: EdgeLengthStatsFromEdges(DMesh3, IEnumerable(Of Int32), ByRef Double, ByRef Double, ByRef Double, Int32)
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: g3.MeshQueries.TriangleDistance*
  commentId: Overload:g3.MeshQueries.TriangleDistance
  name: TriangleDistance
  nameWithType: MeshQueries.TriangleDistance
  fullName: g3.MeshQueries.TriangleDistance
- uid: g3.DMesh3
  commentId: T:g3.DMesh3
  parent: g3
  name: DMesh3
  nameWithType: DMesh3
  fullName: g3.DMesh3
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: g3.Vector3d
  commentId: T:g3.Vector3d
  parent: g3
  name: Vector3d
  nameWithType: Vector3d
  fullName: g3.Vector3d
- uid: g3.DistPoint3Triangle3
  commentId: T:g3.DistPoint3Triangle3
  parent: g3
  name: DistPoint3Triangle3
  nameWithType: DistPoint3Triangle3
  fullName: g3.DistPoint3Triangle3
- uid: g3.MeshQueries.NearestPointFrame*
  commentId: Overload:g3.MeshQueries.NearestPointFrame
  name: NearestPointFrame
  nameWithType: MeshQueries.NearestPointFrame
  fullName: g3.MeshQueries.NearestPointFrame
- uid: g3.ISpatial
  commentId: T:g3.ISpatial
  parent: g3
  name: ISpatial
  nameWithType: ISpatial
  fullName: g3.ISpatial
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: g3.Frame3f
  commentId: T:g3.Frame3f
  parent: g3
  name: Frame3f
  nameWithType: Frame3f
  fullName: g3.Frame3f
- uid: g3.MeshQueries.NearestPointDistance*
  commentId: Overload:g3.MeshQueries.NearestPointDistance
  name: NearestPointDistance
  nameWithType: MeshQueries.NearestPointDistance
  fullName: g3.MeshQueries.NearestPointDistance
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: g3.MeshQueries.TriangleTriangleDistance*
  commentId: Overload:g3.MeshQueries.TriangleTriangleDistance
  name: TriangleTriangleDistance
  nameWithType: MeshQueries.TriangleTriangleDistance
  fullName: g3.MeshQueries.TriangleTriangleDistance
- uid: System.Func{g3.Vector3d,g3.Vector3d}
  commentId: T:System.Func{g3.Vector3d,g3.Vector3d}
  parent: System
  definition: System.Func`2
  name: Func<Vector3d, Vector3d>
  nameWithType: Func<Vector3d, Vector3d>
  fullName: System.Func<g3.Vector3d, g3.Vector3d>
  nameWithType.vb: Func(Of Vector3d, Vector3d)
  fullName.vb: System.Func(Of g3.Vector3d, g3.Vector3d)
  name.vb: Func(Of Vector3d, Vector3d)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: g3.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: g3.Vector3d
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: g3.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: g3.Vector3d
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: g3.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: g3.Vector3d
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: g3.Vector3d
    name: Vector3d
    nameWithType: Vector3d
    fullName: g3.Vector3d
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.DistTriangle3Triangle3
  commentId: T:g3.DistTriangle3Triangle3
  parent: g3
  name: DistTriangle3Triangle3
  nameWithType: DistTriangle3Triangle3
  fullName: g3.DistTriangle3Triangle3
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.MeshQueries.TriangleIntersection*
  commentId: Overload:g3.MeshQueries.TriangleIntersection
  name: TriangleIntersection
  nameWithType: MeshQueries.TriangleIntersection
  fullName: g3.MeshQueries.TriangleIntersection
- uid: g3.Ray3d
  commentId: T:g3.Ray3d
  parent: g3
  name: Ray3d
  nameWithType: Ray3d
  fullName: g3.Ray3d
- uid: g3.IntrRay3Triangle3
  commentId: T:g3.IntrRay3Triangle3
  parent: g3
  name: IntrRay3Triangle3
  nameWithType: IntrRay3Triangle3
  fullName: g3.IntrRay3Triangle3
- uid: g3.MeshQueries.TrianglesIntersection*
  commentId: Overload:g3.MeshQueries.TrianglesIntersection
  name: TrianglesIntersection
  nameWithType: MeshQueries.TrianglesIntersection
  fullName: g3.MeshQueries.TrianglesIntersection
- uid: g3.IntrTriangle3Triangle3
  commentId: T:g3.IntrTriangle3Triangle3
  parent: g3
  name: IntrTriangle3Triangle3
  nameWithType: IntrTriangle3Triangle3
  fullName: g3.IntrTriangle3Triangle3
- uid: g3.MeshQueries.TrianglesDistance*
  commentId: Overload:g3.MeshQueries.TrianglesDistance
  name: TrianglesDistance
  nameWithType: MeshQueries.TrianglesDistance
  fullName: g3.MeshQueries.TrianglesDistance
- uid: g3.MeshQueries.RayHitPointFrame*
  commentId: Overload:g3.MeshQueries.RayHitPointFrame
  name: RayHitPointFrame
  nameWithType: MeshQueries.RayHitPointFrame
  fullName: g3.MeshQueries.RayHitPointFrame
- uid: g3.MeshQueries.SurfaceFrame*
  commentId: Overload:g3.MeshQueries.SurfaceFrame
  name: SurfaceFrame
  nameWithType: MeshQueries.SurfaceFrame
  fullName: g3.MeshQueries.SurfaceFrame
- uid: g3.MeshQueries.BaryCoords*
  commentId: Overload:g3.MeshQueries.BaryCoords
  name: BaryCoords
  nameWithType: MeshQueries.BaryCoords
  fullName: g3.MeshQueries.BaryCoords
- uid: g3.MeshQueries.TriDistanceSqr*
  commentId: Overload:g3.MeshQueries.TriDistanceSqr
  name: TriDistanceSqr
  nameWithType: MeshQueries.TriDistanceSqr
  fullName: g3.MeshQueries.TriDistanceSqr
- uid: g3.MeshQueries.FindNearestVertex_LinearSearch*
  commentId: Overload:g3.MeshQueries.FindNearestVertex_LinearSearch
  name: FindNearestVertex_LinearSearch
  nameWithType: MeshQueries.FindNearestVertex_LinearSearch
  fullName: g3.MeshQueries.FindNearestVertex_LinearSearch
- uid: g3.MeshQueries.FindNearestTriangle_LinearSearch*
  commentId: Overload:g3.MeshQueries.FindNearestTriangle_LinearSearch
  name: FindNearestTriangle_LinearSearch
  nameWithType: MeshQueries.FindNearestTriangle_LinearSearch
  fullName: g3.MeshQueries.FindNearestTriangle_LinearSearch
- uid: g3.MeshQueries.FindHitTriangle_LinearSearch*
  commentId: Overload:g3.MeshQueries.FindHitTriangle_LinearSearch
  name: FindHitTriangle_LinearSearch
  nameWithType: MeshQueries.FindHitTriangle_LinearSearch
  fullName: g3.MeshQueries.FindHitTriangle_LinearSearch
- uid: g3.MeshQueries.FindIntersectingTriangles_LinearSearch*
  commentId: Overload:g3.MeshQueries.FindIntersectingTriangles_LinearSearch
  name: FindIntersectingTriangles_LinearSearch
  nameWithType: MeshQueries.FindIntersectingTriangles_LinearSearch
  fullName: g3.MeshQueries.FindIntersectingTriangles_LinearSearch
- uid: g3.Index2i
  commentId: T:g3.Index2i
  parent: g3
  name: Index2i
  nameWithType: Index2i
  fullName: g3.Index2i
- uid: g3.MeshQueries.FindNearestTriangles_LinearSearch*
  commentId: Overload:g3.MeshQueries.FindNearestTriangles_LinearSearch
  name: FindNearestTriangles_LinearSearch
  nameWithType: MeshQueries.FindNearestTriangles_LinearSearch
  fullName: g3.MeshQueries.FindNearestTriangles_LinearSearch
- uid: g3.MeshQueries.EdgeLengthStats*
  commentId: Overload:g3.MeshQueries.EdgeLengthStats
  name: EdgeLengthStats
  nameWithType: MeshQueries.EdgeLengthStats
  fullName: g3.MeshQueries.EdgeLengthStats
- uid: g3.MeshQueries.EdgeLengthStatsFromEdges*
  commentId: Overload:g3.MeshQueries.EdgeLengthStatsFromEdges
  name: EdgeLengthStatsFromEdges
  nameWithType: MeshQueries.EdgeLengthStatsFromEdges
  fullName: g3.MeshQueries.EdgeLengthStatsFromEdges
- uid: System.Collections.Generic.IEnumerable{System.Int32}
  commentId: T:System.Collections.Generic.IEnumerable{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Int32>
  nameWithType: IEnumerable<Int32>
  fullName: System.Collections.Generic.IEnumerable<System.Int32>
  nameWithType.vb: IEnumerable(Of Int32)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Int32)
  name.vb: IEnumerable(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic

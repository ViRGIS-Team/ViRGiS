### YamlMime:ManagedReference
items:
- uid: g3.Vector2d
  commentId: T:g3.Vector2d
  id: Vector2d
  parent: g3
  children:
  - g3.Vector2d.#ctor(g3.Vector2d)
  - g3.Vector2d.#ctor(g3.Vector2f)
  - g3.Vector2d.#ctor(System.Double)
  - g3.Vector2d.#ctor(System.Double,System.Double)
  - g3.Vector2d.#ctor(System.Double[])
  - g3.Vector2d.#ctor(System.Single)
  - g3.Vector2d.#ctor(System.Single,System.Single)
  - g3.Vector2d.#ctor(System.Single[])
  - g3.Vector2d.Add(g3.Vector2d)
  - g3.Vector2d.AngleD(g3.Vector2d)
  - g3.Vector2d.AngleD(g3.Vector2d,g3.Vector2d)
  - g3.Vector2d.AngleR(g3.Vector2d)
  - g3.Vector2d.AngleR(g3.Vector2d,g3.Vector2d)
  - g3.Vector2d.AxisX
  - g3.Vector2d.AxisY
  - g3.Vector2d.CompareTo(g3.Vector2d)
  - g3.Vector2d.Cross(g3.Vector2d)
  - g3.Vector2d.Distance(g3.Vector2d)
  - g3.Vector2d.DistanceSquared(g3.Vector2d)
  - g3.Vector2d.Dot(g3.Vector2d)
  - g3.Vector2d.DotPerp(g3.Vector2d)
  - g3.Vector2d.EpsilonEqual(g3.Vector2d,System.Double)
  - g3.Vector2d.Equals(g3.Vector2d)
  - g3.Vector2d.Equals(System.Object)
  - g3.Vector2d.FromAngleDeg(System.Double)
  - g3.Vector2d.FromAngleRad(System.Double)
  - g3.Vector2d.GetHashCode
  - g3.Vector2d.GetInformation(System.Collections.Generic.IList{g3.Vector2d},System.Double,g3.Vector2d.Information@)
  - g3.Vector2d.IsFinite
  - g3.Vector2d.IsNormalized
  - g3.Vector2d.Item(System.Int32)
  - g3.Vector2d.Length
  - g3.Vector2d.LengthSquared
  - g3.Vector2d.Lerp(g3.Vector2d,g3.Vector2d,System.Double)
  - g3.Vector2d.Lerp(g3.Vector2d@,g3.Vector2d@,System.Double)
  - g3.Vector2d.MaxValue
  - g3.Vector2d.MinValue
  - g3.Vector2d.Normalize(System.Double)
  - g3.Vector2d.Normalized
  - g3.Vector2d.One
  - g3.Vector2d.op_Addition(g3.Vector2d,g3.Vector2d)
  - g3.Vector2d.op_Addition(g3.Vector2d,System.Double)
  - g3.Vector2d.op_Division(g3.Vector2d,g3.Vector2d)
  - g3.Vector2d.op_Division(g3.Vector2d,System.Double)
  - g3.Vector2d.op_Division(System.Double,g3.Vector2d)
  - g3.Vector2d.op_Equality(g3.Vector2d,g3.Vector2d)
  - g3.Vector2d.op_Explicit(g3.Vector2d)~g3.Vector2f
  - g3.Vector2d.op_Implicit(g3.Vector2f)~g3.Vector2d
  - g3.Vector2d.op_Inequality(g3.Vector2d,g3.Vector2d)
  - g3.Vector2d.op_Multiply(g3.Vector2d,g3.Vector2d)
  - g3.Vector2d.op_Multiply(g3.Vector2d,System.Double)
  - g3.Vector2d.op_Multiply(System.Double,g3.Vector2d)
  - g3.Vector2d.op_Subtraction(g3.Vector2d,g3.Vector2d)
  - g3.Vector2d.op_Subtraction(g3.Vector2d,System.Double)
  - g3.Vector2d.op_UnaryNegation(g3.Vector2d)
  - g3.Vector2d.Perp
  - g3.Vector2d.Round(System.Int32)
  - g3.Vector2d.Set(g3.Vector2d)
  - g3.Vector2d.Set(System.Double,System.Double)
  - g3.Vector2d.Subtract(g3.Vector2d)
  - g3.Vector2d.ToString
  - g3.Vector2d.UnitPerp
  - g3.Vector2d.x
  - g3.Vector2d.y
  - g3.Vector2d.Zero
  langs:
  - csharp
  - vb
  name: Vector2d
  nameWithType: Vector2d
  fullName: g3.Vector2d
  type: Struct
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Vector2d
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 7
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: 'public struct Vector2d : IComparable<Vector2d>, IEquatable<Vector2d>'
    content.vb: >-
      Public Structure Vector2d
          Implements IComparable(Of Vector2d), IEquatable(Of Vector2d)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: g3.Vector2d.x
  commentId: F:g3.Vector2d.x
  id: x
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: x
  nameWithType: Vector2d.x
  fullName: g3.Vector2d.x
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: x
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 9
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double x
    return:
      type: System.Double
    content.vb: Public x As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2d.y
  commentId: F:g3.Vector2d.y
  id: y
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: y
  nameWithType: Vector2d.y
  fullName: g3.Vector2d.y
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: y
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 10
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double y
    return:
      type: System.Double
    content.vb: Public y As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2d.#ctor(System.Double)
  commentId: M:g3.Vector2d.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Vector2d(Double)
  nameWithType: Vector2d.Vector2d(Double)
  fullName: g3.Vector2d.Vector2d(System.Double)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 12
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2d(double f)
    parameters:
    - id: f
      type: System.Double
    content.vb: Public Sub New(f As Double)
  overload: g3.Vector2d.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2d.#ctor(System.Double,System.Double)
  commentId: M:g3.Vector2d.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Vector2d(Double, Double)
  nameWithType: Vector2d.Vector2d(Double, Double)
  fullName: g3.Vector2d.Vector2d(System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 13
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2d(double x, double y)
    parameters:
    - id: x
      type: System.Double
    - id: y
      type: System.Double
    content.vb: Public Sub New(x As Double, y As Double)
  overload: g3.Vector2d.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2d.#ctor(System.Double[])
  commentId: M:g3.Vector2d.#ctor(System.Double[])
  id: '#ctor(System.Double[])'
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Vector2d(Double[])
  nameWithType: Vector2d.Vector2d(Double[])
  fullName: g3.Vector2d.Vector2d(System.Double[])
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 14
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2d(double[] v2)
    parameters:
    - id: v2
      type: System.Double[]
    content.vb: Public Sub New(v2 As Double())
  overload: g3.Vector2d.#ctor*
  nameWithType.vb: Vector2d.Vector2d(Double())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.Vector2d.Vector2d(System.Double())
  name.vb: Vector2d(Double())
- uid: g3.Vector2d.#ctor(System.Single)
  commentId: M:g3.Vector2d.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Vector2d(Single)
  nameWithType: Vector2d.Vector2d(Single)
  fullName: g3.Vector2d.Vector2d(System.Single)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 15
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2d(float f)
    parameters:
    - id: f
      type: System.Single
    content.vb: Public Sub New(f As Single)
  overload: g3.Vector2d.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2d.#ctor(System.Single,System.Single)
  commentId: M:g3.Vector2d.#ctor(System.Single,System.Single)
  id: '#ctor(System.Single,System.Single)'
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Vector2d(Single, Single)
  nameWithType: Vector2d.Vector2d(Single, Single)
  fullName: g3.Vector2d.Vector2d(System.Single, System.Single)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 16
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2d(float x, float y)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    content.vb: Public Sub New(x As Single, y As Single)
  overload: g3.Vector2d.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2d.#ctor(System.Single[])
  commentId: M:g3.Vector2d.#ctor(System.Single[])
  id: '#ctor(System.Single[])'
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Vector2d(Single[])
  nameWithType: Vector2d.Vector2d(Single[])
  fullName: g3.Vector2d.Vector2d(System.Single[])
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 17
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2d(float[] v2)
    parameters:
    - id: v2
      type: System.Single[]
    content.vb: Public Sub New(v2 As Single())
  overload: g3.Vector2d.#ctor*
  nameWithType.vb: Vector2d.Vector2d(Single())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.Vector2d.Vector2d(System.Single())
  name.vb: Vector2d(Single())
- uid: g3.Vector2d.#ctor(g3.Vector2d)
  commentId: M:g3.Vector2d.#ctor(g3.Vector2d)
  id: '#ctor(g3.Vector2d)'
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Vector2d(Vector2d)
  nameWithType: Vector2d.Vector2d(Vector2d)
  fullName: g3.Vector2d.Vector2d(g3.Vector2d)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 18
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2d(Vector2d copy)
    parameters:
    - id: copy
      type: g3.Vector2d
    content.vb: Public Sub New(copy As Vector2d)
  overload: g3.Vector2d.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2d.#ctor(g3.Vector2f)
  commentId: M:g3.Vector2d.#ctor(g3.Vector2f)
  id: '#ctor(g3.Vector2f)'
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Vector2d(Vector2f)
  nameWithType: Vector2d.Vector2d(Vector2f)
  fullName: g3.Vector2d.Vector2d(g3.Vector2f)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 19
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2d(Vector2f copy)
    parameters:
    - id: copy
      type: g3.Vector2f
    content.vb: Public Sub New(copy As Vector2f)
  overload: g3.Vector2d.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2d.Zero
  commentId: F:g3.Vector2d.Zero
  id: Zero
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: Vector2d.Zero
  fullName: g3.Vector2d.Zero
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Zero
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 21
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static readonly Vector2d Zero
    return:
      type: g3.Vector2d
    content.vb: Public Shared ReadOnly Zero As Vector2d
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: g3.Vector2d.One
  commentId: F:g3.Vector2d.One
  id: One
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: One
  nameWithType: Vector2d.One
  fullName: g3.Vector2d.One
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: One
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 22
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static readonly Vector2d One
    return:
      type: g3.Vector2d
    content.vb: Public Shared ReadOnly One As Vector2d
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: g3.Vector2d.AxisX
  commentId: F:g3.Vector2d.AxisX
  id: AxisX
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: AxisX
  nameWithType: Vector2d.AxisX
  fullName: g3.Vector2d.AxisX
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AxisX
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 23
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static readonly Vector2d AxisX
    return:
      type: g3.Vector2d
    content.vb: Public Shared ReadOnly AxisX As Vector2d
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: g3.Vector2d.AxisY
  commentId: F:g3.Vector2d.AxisY
  id: AxisY
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: AxisY
  nameWithType: Vector2d.AxisY
  fullName: g3.Vector2d.AxisY
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AxisY
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 24
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static readonly Vector2d AxisY
    return:
      type: g3.Vector2d
    content.vb: Public Shared ReadOnly AxisY As Vector2d
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: g3.Vector2d.MaxValue
  commentId: F:g3.Vector2d.MaxValue
  id: MaxValue
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: MaxValue
  nameWithType: Vector2d.MaxValue
  fullName: g3.Vector2d.MaxValue
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: MaxValue
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 25
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static readonly Vector2d MaxValue
    return:
      type: g3.Vector2d
    content.vb: Public Shared ReadOnly MaxValue As Vector2d
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: g3.Vector2d.MinValue
  commentId: F:g3.Vector2d.MinValue
  id: MinValue
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: MinValue
  nameWithType: Vector2d.MinValue
  fullName: g3.Vector2d.MinValue
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: MinValue
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 26
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static readonly Vector2d MinValue
    return:
      type: g3.Vector2d
    content.vb: Public Shared ReadOnly MinValue As Vector2d
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: g3.Vector2d.FromAngleRad(System.Double)
  commentId: M:g3.Vector2d.FromAngleRad(System.Double)
  id: FromAngleRad(System.Double)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: FromAngleRad(Double)
  nameWithType: Vector2d.FromAngleRad(Double)
  fullName: g3.Vector2d.FromAngleRad(System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: FromAngleRad
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 28
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector2d FromAngleRad(double angle)
    parameters:
    - id: angle
      type: System.Double
    return:
      type: g3.Vector2d
    content.vb: Public Shared Function FromAngleRad(angle As Double) As Vector2d
  overload: g3.Vector2d.FromAngleRad*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2d.FromAngleDeg(System.Double)
  commentId: M:g3.Vector2d.FromAngleDeg(System.Double)
  id: FromAngleDeg(System.Double)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: FromAngleDeg(Double)
  nameWithType: Vector2d.FromAngleDeg(Double)
  fullName: g3.Vector2d.FromAngleDeg(System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: FromAngleDeg
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 31
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector2d FromAngleDeg(double angle)
    parameters:
    - id: angle
      type: System.Double
    return:
      type: g3.Vector2d
    content.vb: Public Shared Function FromAngleDeg(angle As Double) As Vector2d
  overload: g3.Vector2d.FromAngleDeg*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2d.Item(System.Int32)
  commentId: P:g3.Vector2d.Item(System.Int32)
  id: Item(System.Int32)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: Vector2d.Item[Int32]
  fullName: g3.Vector2d.Item[System.Int32]
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: this[]
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 37
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double this[int key] { get; set; }
    parameters:
    - id: key
      type: System.Int32
    return:
      type: System.Double
    content.vb: Public Property Item(key As Integer) As Double
  overload: g3.Vector2d.Item*
  nameWithType.vb: Vector2d.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: g3.Vector2d.Item(System.Int32)
  name.vb: Item(Int32)
- uid: g3.Vector2d.LengthSquared
  commentId: P:g3.Vector2d.LengthSquared
  id: LengthSquared
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: LengthSquared
  nameWithType: Vector2d.LengthSquared
  fullName: g3.Vector2d.LengthSquared
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: LengthSquared
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 44
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double LengthSquared { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property LengthSquared As Double
  overload: g3.Vector2d.LengthSquared*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector2d.Length
  commentId: P:g3.Vector2d.Length
  id: Length
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: Vector2d.Length
  fullName: g3.Vector2d.Length
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Length
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 48
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double Length { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Length As Double
  overload: g3.Vector2d.Length*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector2d.Normalize(System.Double)
  commentId: M:g3.Vector2d.Normalize(System.Double)
  id: Normalize(System.Double)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Normalize(Double)
  nameWithType: Vector2d.Normalize(Double)
  fullName: g3.Vector2d.Normalize(System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Normalize
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 53
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double Normalize(double epsilon = 2.2204460492503131E-16)
    parameters:
    - id: epsilon
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Function Normalize(epsilon As Double = 2.2204460492503131E-16) As Double
  overload: g3.Vector2d.Normalize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2d.Normalized
  commentId: P:g3.Vector2d.Normalized
  id: Normalized
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Normalized
  nameWithType: Vector2d.Normalized
  fullName: g3.Vector2d.Normalized
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Normalized
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 66
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2d Normalized { get; }
    parameters: []
    return:
      type: g3.Vector2d
    content.vb: Public ReadOnly Property Normalized As Vector2d
  overload: g3.Vector2d.Normalized*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector2d.IsNormalized
  commentId: P:g3.Vector2d.IsNormalized
  id: IsNormalized
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: IsNormalized
  nameWithType: Vector2d.IsNormalized
  fullName: g3.Vector2d.IsNormalized
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IsNormalized
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 78
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool IsNormalized { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNormalized As Boolean
  overload: g3.Vector2d.IsNormalized*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector2d.IsFinite
  commentId: P:g3.Vector2d.IsFinite
  id: IsFinite
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: IsFinite
  nameWithType: Vector2d.IsFinite
  fullName: g3.Vector2d.IsFinite
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IsFinite
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 82
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool IsFinite { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFinite As Boolean
  overload: g3.Vector2d.IsFinite*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector2d.Round(System.Int32)
  commentId: M:g3.Vector2d.Round(System.Int32)
  id: Round(System.Int32)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Round(Int32)
  nameWithType: Vector2d.Round(Int32)
  fullName: g3.Vector2d.Round(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Round
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 87
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Round(int nDecimals)
    parameters:
    - id: nDecimals
      type: System.Int32
    content.vb: Public Sub Round(nDecimals As Integer)
  overload: g3.Vector2d.Round*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2d.Dot(g3.Vector2d)
  commentId: M:g3.Vector2d.Dot(g3.Vector2d)
  id: Dot(g3.Vector2d)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Dot(Vector2d)
  nameWithType: Vector2d.Dot(Vector2d)
  fullName: g3.Vector2d.Dot(g3.Vector2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Dot
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 93
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double Dot(Vector2d v2)
    parameters:
    - id: v2
      type: g3.Vector2d
    return:
      type: System.Double
    content.vb: Public Function Dot(v2 As Vector2d) As Double
  overload: g3.Vector2d.Dot*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2d.Cross(g3.Vector2d)
  commentId: M:g3.Vector2d.Cross(g3.Vector2d)
  id: Cross(g3.Vector2d)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Cross(Vector2d)
  nameWithType: Vector2d.Cross(Vector2d)
  fullName: g3.Vector2d.Cross(g3.Vector2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Cross
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 102
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nreturns cross-product of this vector with v2 (same as DotPerp)\n"
  example: []
  syntax:
    content: public double Cross(Vector2d v2)
    parameters:
    - id: v2
      type: g3.Vector2d
    return:
      type: System.Double
    content.vb: Public Function Cross(v2 As Vector2d) As Double
  overload: g3.Vector2d.Cross*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2d.Perp
  commentId: P:g3.Vector2d.Perp
  id: Perp
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Perp
  nameWithType: Vector2d.Perp
  fullName: g3.Vector2d.Perp
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Perp
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 110
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nreturns right-perp vector, ie rotated 90 degrees to the right\n"
  example: []
  syntax:
    content: public Vector2d Perp { get; }
    parameters: []
    return:
      type: g3.Vector2d
    content.vb: Public ReadOnly Property Perp As Vector2d
  overload: g3.Vector2d.Perp*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector2d.UnitPerp
  commentId: P:g3.Vector2d.UnitPerp
  id: UnitPerp
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: UnitPerp
  nameWithType: Vector2d.UnitPerp
  fullName: g3.Vector2d.UnitPerp
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: UnitPerp
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 117
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nreturns right-perp vector, ie rotated 90 degrees to the right\n"
  example: []
  syntax:
    content: public Vector2d UnitPerp { get; }
    parameters: []
    return:
      type: g3.Vector2d
    content.vb: Public ReadOnly Property UnitPerp As Vector2d
  overload: g3.Vector2d.UnitPerp*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector2d.DotPerp(g3.Vector2d)
  commentId: M:g3.Vector2d.DotPerp(g3.Vector2d)
  id: DotPerp(g3.Vector2d)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: DotPerp(Vector2d)
  nameWithType: Vector2d.DotPerp(Vector2d)
  fullName: g3.Vector2d.DotPerp(g3.Vector2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: DotPerp
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 124
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nreturns dot-product of this vector with v2.Perp\n"
  example: []
  syntax:
    content: public double DotPerp(Vector2d v2)
    parameters:
    - id: v2
      type: g3.Vector2d
    return:
      type: System.Double
    content.vb: Public Function DotPerp(v2 As Vector2d) As Double
  overload: g3.Vector2d.DotPerp*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2d.AngleD(g3.Vector2d)
  commentId: M:g3.Vector2d.AngleD(g3.Vector2d)
  id: AngleD(g3.Vector2d)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: AngleD(Vector2d)
  nameWithType: Vector2d.AngleD(Vector2d)
  fullName: g3.Vector2d.AngleD(g3.Vector2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AngleD
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 129
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double AngleD(Vector2d v2)
    parameters:
    - id: v2
      type: g3.Vector2d
    return:
      type: System.Double
    content.vb: Public Function AngleD(v2 As Vector2d) As Double
  overload: g3.Vector2d.AngleD*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2d.AngleD(g3.Vector2d,g3.Vector2d)
  commentId: M:g3.Vector2d.AngleD(g3.Vector2d,g3.Vector2d)
  id: AngleD(g3.Vector2d,g3.Vector2d)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: AngleD(Vector2d, Vector2d)
  nameWithType: Vector2d.AngleD(Vector2d, Vector2d)
  fullName: g3.Vector2d.AngleD(g3.Vector2d, g3.Vector2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AngleD
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 133
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double AngleD(Vector2d v1, Vector2d v2)
    parameters:
    - id: v1
      type: g3.Vector2d
    - id: v2
      type: g3.Vector2d
    return:
      type: System.Double
    content.vb: Public Shared Function AngleD(v1 As Vector2d, v2 As Vector2d) As Double
  overload: g3.Vector2d.AngleD*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2d.AngleR(g3.Vector2d)
  commentId: M:g3.Vector2d.AngleR(g3.Vector2d)
  id: AngleR(g3.Vector2d)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: AngleR(Vector2d)
  nameWithType: Vector2d.AngleR(Vector2d)
  fullName: g3.Vector2d.AngleR(g3.Vector2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AngleR
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 136
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double AngleR(Vector2d v2)
    parameters:
    - id: v2
      type: g3.Vector2d
    return:
      type: System.Double
    content.vb: Public Function AngleR(v2 As Vector2d) As Double
  overload: g3.Vector2d.AngleR*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2d.AngleR(g3.Vector2d,g3.Vector2d)
  commentId: M:g3.Vector2d.AngleR(g3.Vector2d,g3.Vector2d)
  id: AngleR(g3.Vector2d,g3.Vector2d)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: AngleR(Vector2d, Vector2d)
  nameWithType: Vector2d.AngleR(Vector2d, Vector2d)
  fullName: g3.Vector2d.AngleR(g3.Vector2d, g3.Vector2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AngleR
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 140
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double AngleR(Vector2d v1, Vector2d v2)
    parameters:
    - id: v1
      type: g3.Vector2d
    - id: v2
      type: g3.Vector2d
    return:
      type: System.Double
    content.vb: Public Shared Function AngleR(v1 As Vector2d, v2 As Vector2d) As Double
  overload: g3.Vector2d.AngleR*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2d.DistanceSquared(g3.Vector2d)
  commentId: M:g3.Vector2d.DistanceSquared(g3.Vector2d)
  id: DistanceSquared(g3.Vector2d)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: DistanceSquared(Vector2d)
  nameWithType: Vector2d.DistanceSquared(Vector2d)
  fullName: g3.Vector2d.DistanceSquared(g3.Vector2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: DistanceSquared
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 146
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double DistanceSquared(Vector2d v2)
    parameters:
    - id: v2
      type: g3.Vector2d
    return:
      type: System.Double
    content.vb: Public Function DistanceSquared(v2 As Vector2d) As Double
  overload: g3.Vector2d.DistanceSquared*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2d.Distance(g3.Vector2d)
  commentId: M:g3.Vector2d.Distance(g3.Vector2d)
  id: Distance(g3.Vector2d)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Distance(Vector2d)
  nameWithType: Vector2d.Distance(Vector2d)
  fullName: g3.Vector2d.Distance(g3.Vector2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Distance
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 150
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double Distance(Vector2d v2)
    parameters:
    - id: v2
      type: g3.Vector2d
    return:
      type: System.Double
    content.vb: Public Function Distance(v2 As Vector2d) As Double
  overload: g3.Vector2d.Distance*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2d.Set(g3.Vector2d)
  commentId: M:g3.Vector2d.Set(g3.Vector2d)
  id: Set(g3.Vector2d)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Set(Vector2d)
  nameWithType: Vector2d.Set(Vector2d)
  fullName: g3.Vector2d.Set(g3.Vector2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Set
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 156
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Set(Vector2d o)
    parameters:
    - id: o
      type: g3.Vector2d
    content.vb: Public Sub Set(o As Vector2d)
  overload: g3.Vector2d.Set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2d.Set(System.Double,System.Double)
  commentId: M:g3.Vector2d.Set(System.Double,System.Double)
  id: Set(System.Double,System.Double)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Set(Double, Double)
  nameWithType: Vector2d.Set(Double, Double)
  fullName: g3.Vector2d.Set(System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Set
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 159
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Set(double fX, double fY)
    parameters:
    - id: fX
      type: System.Double
    - id: fY
      type: System.Double
    content.vb: Public Sub Set(fX As Double, fY As Double)
  overload: g3.Vector2d.Set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2d.Add(g3.Vector2d)
  commentId: M:g3.Vector2d.Add(g3.Vector2d)
  id: Add(g3.Vector2d)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Add(Vector2d)
  nameWithType: Vector2d.Add(Vector2d)
  fullName: g3.Vector2d.Add(g3.Vector2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Add
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 162
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Add(Vector2d o)
    parameters:
    - id: o
      type: g3.Vector2d
    content.vb: Public Sub Add(o As Vector2d)
  overload: g3.Vector2d.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2d.Subtract(g3.Vector2d)
  commentId: M:g3.Vector2d.Subtract(g3.Vector2d)
  id: Subtract(g3.Vector2d)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Subtract(Vector2d)
  nameWithType: Vector2d.Subtract(Vector2d)
  fullName: g3.Vector2d.Subtract(g3.Vector2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Subtract
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 165
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Subtract(Vector2d o)
    parameters:
    - id: o
      type: g3.Vector2d
    content.vb: Public Sub Subtract(o As Vector2d)
  overload: g3.Vector2d.Subtract*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2d.op_UnaryNegation(g3.Vector2d)
  commentId: M:g3.Vector2d.op_UnaryNegation(g3.Vector2d)
  id: op_UnaryNegation(g3.Vector2d)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: UnaryNegation(Vector2d)
  nameWithType: Vector2d.UnaryNegation(Vector2d)
  fullName: g3.Vector2d.UnaryNegation(g3.Vector2d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_UnaryNegation
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 171
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector2d operator -(Vector2d v)
    parameters:
    - id: v
      type: g3.Vector2d
    return:
      type: g3.Vector2d
    content.vb: Public Shared Operator -(v As Vector2d) As Vector2d
  overload: g3.Vector2d.op_UnaryNegation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2d.op_Addition(g3.Vector2d,g3.Vector2d)
  commentId: M:g3.Vector2d.op_Addition(g3.Vector2d,g3.Vector2d)
  id: op_Addition(g3.Vector2d,g3.Vector2d)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Addition(Vector2d, Vector2d)
  nameWithType: Vector2d.Addition(Vector2d, Vector2d)
  fullName: g3.Vector2d.Addition(g3.Vector2d, g3.Vector2d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Addition
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 175
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector2d operator +(Vector2d a, Vector2d o)
    parameters:
    - id: a
      type: g3.Vector2d
    - id: o
      type: g3.Vector2d
    return:
      type: g3.Vector2d
    content.vb: Public Shared Operator +(a As Vector2d, o As Vector2d) As Vector2d
  overload: g3.Vector2d.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2d.op_Addition(g3.Vector2d,System.Double)
  commentId: M:g3.Vector2d.op_Addition(g3.Vector2d,System.Double)
  id: op_Addition(g3.Vector2d,System.Double)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Addition(Vector2d, Double)
  nameWithType: Vector2d.Addition(Vector2d, Double)
  fullName: g3.Vector2d.Addition(g3.Vector2d, System.Double)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Addition
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 178
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector2d operator +(Vector2d a, double f)
    parameters:
    - id: a
      type: g3.Vector2d
    - id: f
      type: System.Double
    return:
      type: g3.Vector2d
    content.vb: Public Shared Operator +(a As Vector2d, f As Double) As Vector2d
  overload: g3.Vector2d.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2d.op_Subtraction(g3.Vector2d,g3.Vector2d)
  commentId: M:g3.Vector2d.op_Subtraction(g3.Vector2d,g3.Vector2d)
  id: op_Subtraction(g3.Vector2d,g3.Vector2d)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Subtraction(Vector2d, Vector2d)
  nameWithType: Vector2d.Subtraction(Vector2d, Vector2d)
  fullName: g3.Vector2d.Subtraction(g3.Vector2d, g3.Vector2d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Subtraction
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 182
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector2d operator -(Vector2d a, Vector2d o)
    parameters:
    - id: a
      type: g3.Vector2d
    - id: o
      type: g3.Vector2d
    return:
      type: g3.Vector2d
    content.vb: Public Shared Operator -(a As Vector2d, o As Vector2d) As Vector2d
  overload: g3.Vector2d.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2d.op_Subtraction(g3.Vector2d,System.Double)
  commentId: M:g3.Vector2d.op_Subtraction(g3.Vector2d,System.Double)
  id: op_Subtraction(g3.Vector2d,System.Double)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Subtraction(Vector2d, Double)
  nameWithType: Vector2d.Subtraction(Vector2d, Double)
  fullName: g3.Vector2d.Subtraction(g3.Vector2d, System.Double)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Subtraction
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 185
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector2d operator -(Vector2d a, double f)
    parameters:
    - id: a
      type: g3.Vector2d
    - id: f
      type: System.Double
    return:
      type: g3.Vector2d
    content.vb: Public Shared Operator -(a As Vector2d, f As Double) As Vector2d
  overload: g3.Vector2d.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2d.op_Multiply(g3.Vector2d,System.Double)
  commentId: M:g3.Vector2d.op_Multiply(g3.Vector2d,System.Double)
  id: op_Multiply(g3.Vector2d,System.Double)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Multiply(Vector2d, Double)
  nameWithType: Vector2d.Multiply(Vector2d, Double)
  fullName: g3.Vector2d.Multiply(g3.Vector2d, System.Double)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Multiply
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 189
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector2d operator *(Vector2d a, double f)
    parameters:
    - id: a
      type: g3.Vector2d
    - id: f
      type: System.Double
    return:
      type: g3.Vector2d
    content.vb: Public Shared Operator *(a As Vector2d, f As Double) As Vector2d
  overload: g3.Vector2d.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2d.op_Multiply(System.Double,g3.Vector2d)
  commentId: M:g3.Vector2d.op_Multiply(System.Double,g3.Vector2d)
  id: op_Multiply(System.Double,g3.Vector2d)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Multiply(Double, Vector2d)
  nameWithType: Vector2d.Multiply(Double, Vector2d)
  fullName: g3.Vector2d.Multiply(System.Double, g3.Vector2d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Multiply
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 192
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector2d operator *(double f, Vector2d a)
    parameters:
    - id: f
      type: System.Double
    - id: a
      type: g3.Vector2d
    return:
      type: g3.Vector2d
    content.vb: Public Shared Operator *(f As Double, a As Vector2d) As Vector2d
  overload: g3.Vector2d.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2d.op_Division(g3.Vector2d,System.Double)
  commentId: M:g3.Vector2d.op_Division(g3.Vector2d,System.Double)
  id: op_Division(g3.Vector2d,System.Double)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Division(Vector2d, Double)
  nameWithType: Vector2d.Division(Vector2d, Double)
  fullName: g3.Vector2d.Division(g3.Vector2d, System.Double)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Division
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 195
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector2d operator /(Vector2d v, double f)
    parameters:
    - id: v
      type: g3.Vector2d
    - id: f
      type: System.Double
    return:
      type: g3.Vector2d
    content.vb: Public Shared Operator /(v As Vector2d, f As Double) As Vector2d
  overload: g3.Vector2d.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2d.op_Division(System.Double,g3.Vector2d)
  commentId: M:g3.Vector2d.op_Division(System.Double,g3.Vector2d)
  id: op_Division(System.Double,g3.Vector2d)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Division(Double, Vector2d)
  nameWithType: Vector2d.Division(Double, Vector2d)
  fullName: g3.Vector2d.Division(System.Double, g3.Vector2d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Division
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 199
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector2d operator /(double f, Vector2d v)
    parameters:
    - id: f
      type: System.Double
    - id: v
      type: g3.Vector2d
    return:
      type: g3.Vector2d
    content.vb: Public Shared Operator /(f As Double, v As Vector2d) As Vector2d
  overload: g3.Vector2d.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2d.op_Multiply(g3.Vector2d,g3.Vector2d)
  commentId: M:g3.Vector2d.op_Multiply(g3.Vector2d,g3.Vector2d)
  id: op_Multiply(g3.Vector2d,g3.Vector2d)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Multiply(Vector2d, Vector2d)
  nameWithType: Vector2d.Multiply(Vector2d, Vector2d)
  fullName: g3.Vector2d.Multiply(g3.Vector2d, g3.Vector2d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Multiply
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 205
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector2d operator *(Vector2d a, Vector2d b)
    parameters:
    - id: a
      type: g3.Vector2d
    - id: b
      type: g3.Vector2d
    return:
      type: g3.Vector2d
    content.vb: Public Shared Operator *(a As Vector2d, b As Vector2d) As Vector2d
  overload: g3.Vector2d.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2d.op_Division(g3.Vector2d,g3.Vector2d)
  commentId: M:g3.Vector2d.op_Division(g3.Vector2d,g3.Vector2d)
  id: op_Division(g3.Vector2d,g3.Vector2d)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Division(Vector2d, Vector2d)
  nameWithType: Vector2d.Division(Vector2d, Vector2d)
  fullName: g3.Vector2d.Division(g3.Vector2d, g3.Vector2d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Division
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 209
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector2d operator /(Vector2d a, Vector2d b)
    parameters:
    - id: a
      type: g3.Vector2d
    - id: b
      type: g3.Vector2d
    return:
      type: g3.Vector2d
    content.vb: Public Shared Operator /(a As Vector2d, b As Vector2d) As Vector2d
  overload: g3.Vector2d.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2d.op_Equality(g3.Vector2d,g3.Vector2d)
  commentId: M:g3.Vector2d.op_Equality(g3.Vector2d,g3.Vector2d)
  id: op_Equality(g3.Vector2d,g3.Vector2d)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Equality(Vector2d, Vector2d)
  nameWithType: Vector2d.Equality(Vector2d, Vector2d)
  fullName: g3.Vector2d.Equality(g3.Vector2d, g3.Vector2d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Equality
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 215
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static bool operator ==(Vector2d a, Vector2d b)
    parameters:
    - id: a
      type: g3.Vector2d
    - id: b
      type: g3.Vector2d
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(a As Vector2d, b As Vector2d) As Boolean
  overload: g3.Vector2d.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2d.op_Inequality(g3.Vector2d,g3.Vector2d)
  commentId: M:g3.Vector2d.op_Inequality(g3.Vector2d,g3.Vector2d)
  id: op_Inequality(g3.Vector2d,g3.Vector2d)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Inequality(Vector2d, Vector2d)
  nameWithType: Vector2d.Inequality(Vector2d, Vector2d)
  fullName: g3.Vector2d.Inequality(g3.Vector2d, g3.Vector2d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Inequality
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 219
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static bool operator !=(Vector2d a, Vector2d b)
    parameters:
    - id: a
      type: g3.Vector2d
    - id: b
      type: g3.Vector2d
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(a As Vector2d, b As Vector2d) As Boolean
  overload: g3.Vector2d.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2d.Equals(System.Object)
  commentId: M:g3.Vector2d.Equals(System.Object)
  id: Equals(System.Object)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Vector2d.Equals(Object)
  fullName: g3.Vector2d.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Equals
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 223
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: g3.Vector2d.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: g3.Vector2d.GetHashCode
  commentId: M:g3.Vector2d.GetHashCode
  id: GetHashCode
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Vector2d.GetHashCode()
  fullName: g3.Vector2d.GetHashCode()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GetHashCode
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 227
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: g3.Vector2d.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: g3.Vector2d.CompareTo(g3.Vector2d)
  commentId: M:g3.Vector2d.CompareTo(g3.Vector2d)
  id: CompareTo(g3.Vector2d)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: CompareTo(Vector2d)
  nameWithType: Vector2d.CompareTo(Vector2d)
  fullName: g3.Vector2d.CompareTo(g3.Vector2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: CompareTo
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 238
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int CompareTo(Vector2d other)
    parameters:
    - id: other
      type: g3.Vector2d
    return:
      type: System.Int32
    content.vb: Public Function CompareTo(other As Vector2d) As Integer
  overload: g3.Vector2d.CompareTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2d.Equals(g3.Vector2d)
  commentId: M:g3.Vector2d.Equals(g3.Vector2d)
  id: Equals(g3.Vector2d)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Equals(Vector2d)
  nameWithType: Vector2d.Equals(Vector2d)
  fullName: g3.Vector2d.Equals(g3.Vector2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Equals
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 246
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool Equals(Vector2d other)
    parameters:
    - id: other
      type: g3.Vector2d
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Vector2d) As Boolean
  overload: g3.Vector2d.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2d.EpsilonEqual(g3.Vector2d,System.Double)
  commentId: M:g3.Vector2d.EpsilonEqual(g3.Vector2d,System.Double)
  id: EpsilonEqual(g3.Vector2d,System.Double)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: EpsilonEqual(Vector2d, Double)
  nameWithType: Vector2d.EpsilonEqual(Vector2d, Double)
  fullName: g3.Vector2d.EpsilonEqual(g3.Vector2d, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: EpsilonEqual
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 252
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool EpsilonEqual(Vector2d v2, double epsilon)
    parameters:
    - id: v2
      type: g3.Vector2d
    - id: epsilon
      type: System.Double
    return:
      type: System.Boolean
    content.vb: Public Function EpsilonEqual(v2 As Vector2d, epsilon As Double) As Boolean
  overload: g3.Vector2d.EpsilonEqual*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2d.Lerp(g3.Vector2d,g3.Vector2d,System.Double)
  commentId: M:g3.Vector2d.Lerp(g3.Vector2d,g3.Vector2d,System.Double)
  id: Lerp(g3.Vector2d,g3.Vector2d,System.Double)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Lerp(Vector2d, Vector2d, Double)
  nameWithType: Vector2d.Lerp(Vector2d, Vector2d, Double)
  fullName: g3.Vector2d.Lerp(g3.Vector2d, g3.Vector2d, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Lerp
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 258
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector2d Lerp(Vector2d a, Vector2d b, double t)
    parameters:
    - id: a
      type: g3.Vector2d
    - id: b
      type: g3.Vector2d
    - id: t
      type: System.Double
    return:
      type: g3.Vector2d
    content.vb: Public Shared Function Lerp(a As Vector2d, b As Vector2d, t As Double) As Vector2d
  overload: g3.Vector2d.Lerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2d.Lerp(g3.Vector2d@,g3.Vector2d@,System.Double)
  commentId: M:g3.Vector2d.Lerp(g3.Vector2d@,g3.Vector2d@,System.Double)
  id: Lerp(g3.Vector2d@,g3.Vector2d@,System.Double)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Lerp(ref Vector2d, ref Vector2d, Double)
  nameWithType: Vector2d.Lerp(ref Vector2d, ref Vector2d, Double)
  fullName: g3.Vector2d.Lerp(ref g3.Vector2d, ref g3.Vector2d, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Lerp
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 262
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector2d Lerp(ref Vector2d a, ref Vector2d b, double t)
    parameters:
    - id: a
      type: g3.Vector2d
    - id: b
      type: g3.Vector2d
    - id: t
      type: System.Double
    return:
      type: g3.Vector2d
    content.vb: Public Shared Function Lerp(ByRef a As Vector2d, ByRef b As Vector2d, t As Double) As Vector2d
  overload: g3.Vector2d.Lerp*
  nameWithType.vb: Vector2d.Lerp(ByRef Vector2d, ByRef Vector2d, Double)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.Vector2d.Lerp(ByRef g3.Vector2d, ByRef g3.Vector2d, System.Double)
  name.vb: Lerp(ByRef Vector2d, ByRef Vector2d, Double)
- uid: g3.Vector2d.ToString
  commentId: M:g3.Vector2d.ToString
  id: ToString
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Vector2d.ToString()
  fullName: g3.Vector2d.ToString()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ToString
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 268
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: g3.Vector2d.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: g3.Vector2d.op_Implicit(g3.Vector2f)~g3.Vector2d
  commentId: M:g3.Vector2d.op_Implicit(g3.Vector2f)~g3.Vector2d
  id: op_Implicit(g3.Vector2f)~g3.Vector2d
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Implicit(Vector2f to Vector2d)
  nameWithType: Vector2d.Implicit(Vector2f to Vector2d)
  fullName: g3.Vector2d.Implicit(g3.Vector2f to g3.Vector2d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Implicit
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 273
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static implicit operator Vector2d(Vector2f v)
    parameters:
    - id: v
      type: g3.Vector2f
    return:
      type: g3.Vector2d
    content.vb: Public Shared Widening Operator CType(v As Vector2f) As Vector2d
  overload: g3.Vector2d.op_Implicit*
  nameWithType.vb: Vector2d.Widening(Vector2f to Vector2d)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.Vector2d.Widening(g3.Vector2f to g3.Vector2d)
  name.vb: Widening(Vector2f to Vector2d)
- uid: g3.Vector2d.op_Explicit(g3.Vector2d)~g3.Vector2f
  commentId: M:g3.Vector2d.op_Explicit(g3.Vector2d)~g3.Vector2f
  id: op_Explicit(g3.Vector2d)~g3.Vector2f
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: Explicit(Vector2d to Vector2f)
  nameWithType: Vector2d.Explicit(Vector2d to Vector2f)
  fullName: g3.Vector2d.Explicit(g3.Vector2d to g3.Vector2f)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Explicit
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 277
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static explicit operator Vector2f(Vector2d v)
    parameters:
    - id: v
      type: g3.Vector2d
    return:
      type: g3.Vector2f
    content.vb: Public Shared Narrowing Operator CType(v As Vector2d) As Vector2f
  overload: g3.Vector2d.op_Explicit*
  nameWithType.vb: Vector2d.Narrowing(Vector2d to Vector2f)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.Vector2d.Narrowing(g3.Vector2d to g3.Vector2f)
  name.vb: Narrowing(Vector2d to Vector2f)
- uid: g3.Vector2d.GetInformation(System.Collections.Generic.IList{g3.Vector2d},System.Double,g3.Vector2d.Information@)
  commentId: M:g3.Vector2d.GetInformation(System.Collections.Generic.IList{g3.Vector2d},System.Double,g3.Vector2d.Information@)
  id: GetInformation(System.Collections.Generic.IList{g3.Vector2d},System.Double,g3.Vector2d.Information@)
  parent: g3.Vector2d
  langs:
  - csharp
  - vb
  name: GetInformation(IList<Vector2d>, Double, out Vector2d.Information)
  nameWithType: Vector2d.GetInformation(IList<Vector2d>, Double, out Vector2d.Information)
  fullName: g3.Vector2d.GetInformation(System.Collections.Generic.IList<g3.Vector2d>, System.Double, out g3.Vector2d.Information)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GetInformation
    path: ../Assets/geometry3Sharp/math/Vector2d.cs
    startLine: 343
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static void GetInformation(IList<Vector2d> points, double epsilon, out Vector2d.Information info)
    parameters:
    - id: points
      type: System.Collections.Generic.IList{g3.Vector2d}
    - id: epsilon
      type: System.Double
    - id: info
      type: g3.Vector2d.Information
    content.vb: Public Shared Sub GetInformation(points As IList(Of Vector2d), epsilon As Double, ByRef info As Vector2d.Information)
  overload: g3.Vector2d.GetInformation*
  nameWithType.vb: Vector2d.GetInformation(IList(Of Vector2d), Double, ByRef Vector2d.Information)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.Vector2d.GetInformation(System.Collections.Generic.IList(Of g3.Vector2d), System.Double, ByRef g3.Vector2d.Information)
  name.vb: GetInformation(IList(Of Vector2d), Double, ByRef Vector2d.Information)
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: g3.Vector2d.#ctor*
  commentId: Overload:g3.Vector2d.#ctor
  name: Vector2d
  nameWithType: Vector2d.Vector2d
  fullName: g3.Vector2d.Vector2d
- uid: System.Double[]
  isExternal: true
  name: Double[]
  nameWithType: Double[]
  fullName: System.Double[]
  nameWithType.vb: Double()
  fullName.vb: System.Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Single[]
  isExternal: true
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: g3.Vector2d
  commentId: T:g3.Vector2d
  parent: g3
  name: Vector2d
  nameWithType: Vector2d
  fullName: g3.Vector2d
- uid: g3.Vector2f
  commentId: T:g3.Vector2f
  parent: g3
  name: Vector2f
  nameWithType: Vector2f
  fullName: g3.Vector2f
- uid: g3.Vector2d.FromAngleRad*
  commentId: Overload:g3.Vector2d.FromAngleRad
  name: FromAngleRad
  nameWithType: Vector2d.FromAngleRad
  fullName: g3.Vector2d.FromAngleRad
- uid: g3.Vector2d.FromAngleDeg*
  commentId: Overload:g3.Vector2d.FromAngleDeg
  name: FromAngleDeg
  nameWithType: Vector2d.FromAngleDeg
  fullName: g3.Vector2d.FromAngleDeg
- uid: g3.Vector2d.Item*
  commentId: Overload:g3.Vector2d.Item
  name: Item
  nameWithType: Vector2d.Item
  fullName: g3.Vector2d.Item
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: g3.Vector2d.LengthSquared*
  commentId: Overload:g3.Vector2d.LengthSquared
  name: LengthSquared
  nameWithType: Vector2d.LengthSquared
  fullName: g3.Vector2d.LengthSquared
- uid: g3.Vector2d.Length*
  commentId: Overload:g3.Vector2d.Length
  name: Length
  nameWithType: Vector2d.Length
  fullName: g3.Vector2d.Length
- uid: g3.Vector2d.Normalize*
  commentId: Overload:g3.Vector2d.Normalize
  name: Normalize
  nameWithType: Vector2d.Normalize
  fullName: g3.Vector2d.Normalize
- uid: g3.Vector2d.Normalized*
  commentId: Overload:g3.Vector2d.Normalized
  name: Normalized
  nameWithType: Vector2d.Normalized
  fullName: g3.Vector2d.Normalized
- uid: g3.Vector2d.IsNormalized*
  commentId: Overload:g3.Vector2d.IsNormalized
  name: IsNormalized
  nameWithType: Vector2d.IsNormalized
  fullName: g3.Vector2d.IsNormalized
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: g3.Vector2d.IsFinite*
  commentId: Overload:g3.Vector2d.IsFinite
  name: IsFinite
  nameWithType: Vector2d.IsFinite
  fullName: g3.Vector2d.IsFinite
- uid: g3.Vector2d.Round*
  commentId: Overload:g3.Vector2d.Round
  name: Round
  nameWithType: Vector2d.Round
  fullName: g3.Vector2d.Round
- uid: g3.Vector2d.Dot*
  commentId: Overload:g3.Vector2d.Dot
  name: Dot
  nameWithType: Vector2d.Dot
  fullName: g3.Vector2d.Dot
- uid: g3.Vector2d.Cross*
  commentId: Overload:g3.Vector2d.Cross
  name: Cross
  nameWithType: Vector2d.Cross
  fullName: g3.Vector2d.Cross
- uid: g3.Vector2d.Perp*
  commentId: Overload:g3.Vector2d.Perp
  name: Perp
  nameWithType: Vector2d.Perp
  fullName: g3.Vector2d.Perp
- uid: g3.Vector2d.UnitPerp*
  commentId: Overload:g3.Vector2d.UnitPerp
  name: UnitPerp
  nameWithType: Vector2d.UnitPerp
  fullName: g3.Vector2d.UnitPerp
- uid: g3.Vector2d.DotPerp*
  commentId: Overload:g3.Vector2d.DotPerp
  name: DotPerp
  nameWithType: Vector2d.DotPerp
  fullName: g3.Vector2d.DotPerp
- uid: g3.Vector2d.AngleD*
  commentId: Overload:g3.Vector2d.AngleD
  name: AngleD
  nameWithType: Vector2d.AngleD
  fullName: g3.Vector2d.AngleD
- uid: g3.Vector2d.AngleR*
  commentId: Overload:g3.Vector2d.AngleR
  name: AngleR
  nameWithType: Vector2d.AngleR
  fullName: g3.Vector2d.AngleR
- uid: g3.Vector2d.DistanceSquared*
  commentId: Overload:g3.Vector2d.DistanceSquared
  name: DistanceSquared
  nameWithType: Vector2d.DistanceSquared
  fullName: g3.Vector2d.DistanceSquared
- uid: g3.Vector2d.Distance*
  commentId: Overload:g3.Vector2d.Distance
  name: Distance
  nameWithType: Vector2d.Distance
  fullName: g3.Vector2d.Distance
- uid: g3.Vector2d.Set*
  commentId: Overload:g3.Vector2d.Set
  name: Set
  nameWithType: Vector2d.Set
  fullName: g3.Vector2d.Set
- uid: g3.Vector2d.Add*
  commentId: Overload:g3.Vector2d.Add
  name: Add
  nameWithType: Vector2d.Add
  fullName: g3.Vector2d.Add
- uid: g3.Vector2d.Subtract*
  commentId: Overload:g3.Vector2d.Subtract
  name: Subtract
  nameWithType: Vector2d.Subtract
  fullName: g3.Vector2d.Subtract
- uid: g3.Vector2d.op_UnaryNegation*
  commentId: Overload:g3.Vector2d.op_UnaryNegation
  name: UnaryNegation
  nameWithType: Vector2d.UnaryNegation
  fullName: g3.Vector2d.UnaryNegation
- uid: g3.Vector2d.op_Addition*
  commentId: Overload:g3.Vector2d.op_Addition
  name: Addition
  nameWithType: Vector2d.Addition
  fullName: g3.Vector2d.Addition
- uid: g3.Vector2d.op_Subtraction*
  commentId: Overload:g3.Vector2d.op_Subtraction
  name: Subtraction
  nameWithType: Vector2d.Subtraction
  fullName: g3.Vector2d.Subtraction
- uid: g3.Vector2d.op_Multiply*
  commentId: Overload:g3.Vector2d.op_Multiply
  name: Multiply
  nameWithType: Vector2d.Multiply
  fullName: g3.Vector2d.Multiply
- uid: g3.Vector2d.op_Division*
  commentId: Overload:g3.Vector2d.op_Division
  name: Division
  nameWithType: Vector2d.Division
  fullName: g3.Vector2d.Division
- uid: g3.Vector2d.op_Equality*
  commentId: Overload:g3.Vector2d.op_Equality
  name: Equality
  nameWithType: Vector2d.Equality
  fullName: g3.Vector2d.Equality
- uid: g3.Vector2d.op_Inequality*
  commentId: Overload:g3.Vector2d.op_Inequality
  name: Inequality
  nameWithType: Vector2d.Inequality
  fullName: g3.Vector2d.Inequality
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.Vector2d.Equals*
  commentId: Overload:g3.Vector2d.Equals
  name: Equals
  nameWithType: Vector2d.Equals
  fullName: g3.Vector2d.Equals
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.Vector2d.GetHashCode*
  commentId: Overload:g3.Vector2d.GetHashCode
  name: GetHashCode
  nameWithType: Vector2d.GetHashCode
  fullName: g3.Vector2d.GetHashCode
- uid: g3.Vector2d.CompareTo*
  commentId: Overload:g3.Vector2d.CompareTo
  name: CompareTo
  nameWithType: Vector2d.CompareTo
  fullName: g3.Vector2d.CompareTo
- uid: g3.Vector2d.EpsilonEqual*
  commentId: Overload:g3.Vector2d.EpsilonEqual
  name: EpsilonEqual
  nameWithType: Vector2d.EpsilonEqual
  fullName: g3.Vector2d.EpsilonEqual
- uid: g3.Vector2d.Lerp*
  commentId: Overload:g3.Vector2d.Lerp
  name: Lerp
  nameWithType: Vector2d.Lerp
  fullName: g3.Vector2d.Lerp
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.Vector2d.ToString*
  commentId: Overload:g3.Vector2d.ToString
  name: ToString
  nameWithType: Vector2d.ToString
  fullName: g3.Vector2d.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: g3.Vector2d.op_Implicit*
  commentId: Overload:g3.Vector2d.op_Implicit
  name: Implicit
  nameWithType: Vector2d.Implicit
  fullName: g3.Vector2d.Implicit
  nameWithType.vb: Vector2d.Widening
  fullName.vb: g3.Vector2d.Widening
  name.vb: Widening
- uid: g3.Vector2d.op_Explicit*
  commentId: Overload:g3.Vector2d.op_Explicit
  name: Explicit
  nameWithType: Vector2d.Explicit
  fullName: g3.Vector2d.Explicit
  nameWithType.vb: Vector2d.Narrowing
  fullName.vb: g3.Vector2d.Narrowing
  name.vb: Narrowing
- uid: g3.Vector2d.GetInformation*
  commentId: Overload:g3.Vector2d.GetInformation
  name: GetInformation
  nameWithType: Vector2d.GetInformation
  fullName: g3.Vector2d.GetInformation
- uid: System.Collections.Generic.IList{g3.Vector2d}
  commentId: T:System.Collections.Generic.IList{g3.Vector2d}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Vector2d>
  nameWithType: IList<Vector2d>
  fullName: System.Collections.Generic.IList<g3.Vector2d>
  nameWithType.vb: IList(Of Vector2d)
  fullName.vb: System.Collections.Generic.IList(Of g3.Vector2d)
  name.vb: IList(Of Vector2d)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: g3.Vector2d
    name: Vector2d
    nameWithType: Vector2d
    fullName: g3.Vector2d
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: g3.Vector2d
    name: Vector2d
    nameWithType: Vector2d
    fullName: g3.Vector2d
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.Vector2d.Information
  commentId: T:g3.Vector2d.Information
  parent: g3
  name: Vector2d.Information
  nameWithType: Vector2d.Information
  fullName: g3.Vector2d.Information
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic

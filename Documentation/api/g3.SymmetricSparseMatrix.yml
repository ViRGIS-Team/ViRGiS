### YamlMime:ManagedReference
items:
- uid: g3.SymmetricSparseMatrix
  commentId: T:g3.SymmetricSparseMatrix
  id: SymmetricSparseMatrix
  parent: g3
  children:
  - g3.SymmetricSparseMatrix.#ctor(g3.DenseMatrix)
  - g3.SymmetricSparseMatrix.#ctor(g3.SymmetricSparseMatrix)
  - g3.SymmetricSparseMatrix.#ctor(System.Int32)
  - g3.SymmetricSparseMatrix.Columns
  - g3.SymmetricSparseMatrix.EpsilonEqual(g3.SymmetricSparseMatrix,System.Double)
  - g3.SymmetricSparseMatrix.Item(System.Int32,System.Int32)
  - g3.SymmetricSparseMatrix.Multiply(g3.SymmetricSparseMatrix)
  - g3.SymmetricSparseMatrix.Multiply(g3.SymmetricSparseMatrix,g3.SymmetricSparseMatrix@,System.Boolean)
  - g3.SymmetricSparseMatrix.Multiply(System.Double[],System.Double[])
  - g3.SymmetricSparseMatrix.NonZeroIndices
  - g3.SymmetricSparseMatrix.NonZeros
  - g3.SymmetricSparseMatrix.Rows
  - g3.SymmetricSparseMatrix.Set(System.Int32,System.Int32,System.Double)
  - g3.SymmetricSparseMatrix.Size
  - g3.SymmetricSparseMatrix.Square(System.Boolean)
  - g3.SymmetricSparseMatrix.SquarePackedParallel
  langs:
  - csharp
  - vb
  name: SymmetricSparseMatrix
  nameWithType: SymmetricSparseMatrix
  fullName: g3.SymmetricSparseMatrix
  type: Class
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: SymmetricSparseMatrix
    path: ../Assets/geometry3Sharp/solvers/SparseMatrix.cs
    startLine: 14
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nBasic sparse-symmetric-matrix class. Stores upper-triangular portion.\nUses Dictionary as sparsifying data structure, which is probably\nnot a good option. But it is easy.\n"
  example: []
  syntax:
    content: 'public class SymmetricSparseMatrix : IMatrix'
    content.vb: >-
      Public Class SymmetricSparseMatrix
          Implements IMatrix
  inheritance:
  - System.Object
  implements:
  - g3.IMatrix
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: g3.SymmetricSparseMatrix.#ctor(System.Int32)
  commentId: M:g3.SymmetricSparseMatrix.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: g3.SymmetricSparseMatrix
  langs:
  - csharp
  - vb
  name: SymmetricSparseMatrix(Int32)
  nameWithType: SymmetricSparseMatrix.SymmetricSparseMatrix(Int32)
  fullName: g3.SymmetricSparseMatrix.SymmetricSparseMatrix(System.Int32)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/solvers/SparseMatrix.cs
    startLine: 20
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public SymmetricSparseMatrix(int setN = 0)
    parameters:
    - id: setN
      type: System.Int32
    content.vb: Public Sub New(setN As Integer = 0)
  overload: g3.SymmetricSparseMatrix.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.SymmetricSparseMatrix.#ctor(g3.DenseMatrix)
  commentId: M:g3.SymmetricSparseMatrix.#ctor(g3.DenseMatrix)
  id: '#ctor(g3.DenseMatrix)'
  parent: g3.SymmetricSparseMatrix
  langs:
  - csharp
  - vb
  name: SymmetricSparseMatrix(DenseMatrix)
  nameWithType: SymmetricSparseMatrix.SymmetricSparseMatrix(DenseMatrix)
  fullName: g3.SymmetricSparseMatrix.SymmetricSparseMatrix(g3.DenseMatrix)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/solvers/SparseMatrix.cs
    startLine: 24
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public SymmetricSparseMatrix(DenseMatrix m)
    parameters:
    - id: m
      type: g3.DenseMatrix
    content.vb: Public Sub New(m As DenseMatrix)
  overload: g3.SymmetricSparseMatrix.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.SymmetricSparseMatrix.#ctor(g3.SymmetricSparseMatrix)
  commentId: M:g3.SymmetricSparseMatrix.#ctor(g3.SymmetricSparseMatrix)
  id: '#ctor(g3.SymmetricSparseMatrix)'
  parent: g3.SymmetricSparseMatrix
  langs:
  - csharp
  - vb
  name: SymmetricSparseMatrix(SymmetricSparseMatrix)
  nameWithType: SymmetricSparseMatrix.SymmetricSparseMatrix(SymmetricSparseMatrix)
  fullName: g3.SymmetricSparseMatrix.SymmetricSparseMatrix(g3.SymmetricSparseMatrix)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/solvers/SparseMatrix.cs
    startLine: 38
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public SymmetricSparseMatrix(SymmetricSparseMatrix m)
    parameters:
    - id: m
      type: g3.SymmetricSparseMatrix
    content.vb: Public Sub New(m As SymmetricSparseMatrix)
  overload: g3.SymmetricSparseMatrix.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.SymmetricSparseMatrix.Set(System.Int32,System.Int32,System.Double)
  commentId: M:g3.SymmetricSparseMatrix.Set(System.Int32,System.Int32,System.Double)
  id: Set(System.Int32,System.Int32,System.Double)
  parent: g3.SymmetricSparseMatrix
  langs:
  - csharp
  - vb
  name: Set(Int32, Int32, Double)
  nameWithType: SymmetricSparseMatrix.Set(Int32, Int32, Double)
  fullName: g3.SymmetricSparseMatrix.Set(System.Int32, System.Int32, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Set
    path: ../Assets/geometry3Sharp/solvers/SparseMatrix.cs
    startLine: 45
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Set(int r, int c, double value)
    parameters:
    - id: r
      type: System.Int32
    - id: c
      type: System.Int32
    - id: value
      type: System.Double
    content.vb: Public Sub Set(r As Integer, c As Integer, value As Double)
  overload: g3.SymmetricSparseMatrix.Set*
  implements:
  - g3.IMatrix.Set(System.Int32,System.Int32,System.Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.SymmetricSparseMatrix.Rows
  commentId: P:g3.SymmetricSparseMatrix.Rows
  id: Rows
  parent: g3.SymmetricSparseMatrix
  langs:
  - csharp
  - vb
  name: Rows
  nameWithType: SymmetricSparseMatrix.Rows
  fullName: g3.SymmetricSparseMatrix.Rows
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Rows
    path: ../Assets/geometry3Sharp/solvers/SparseMatrix.cs
    startLine: 54
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int Rows { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Rows As Integer
  overload: g3.SymmetricSparseMatrix.Rows*
  implements:
  - g3.IMatrix.Rows
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.SymmetricSparseMatrix.Columns
  commentId: P:g3.SymmetricSparseMatrix.Columns
  id: Columns
  parent: g3.SymmetricSparseMatrix
  langs:
  - csharp
  - vb
  name: Columns
  nameWithType: SymmetricSparseMatrix.Columns
  fullName: g3.SymmetricSparseMatrix.Columns
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Columns
    path: ../Assets/geometry3Sharp/solvers/SparseMatrix.cs
    startLine: 55
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int Columns { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Columns As Integer
  overload: g3.SymmetricSparseMatrix.Columns*
  implements:
  - g3.IMatrix.Columns
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.SymmetricSparseMatrix.Size
  commentId: P:g3.SymmetricSparseMatrix.Size
  id: Size
  parent: g3.SymmetricSparseMatrix
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: SymmetricSparseMatrix.Size
  fullName: g3.SymmetricSparseMatrix.Size
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Size
    path: ../Assets/geometry3Sharp/solvers/SparseMatrix.cs
    startLine: 56
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Index2i Size { get; }
    parameters: []
    return:
      type: g3.Index2i
    content.vb: Public ReadOnly Property Size As Index2i
  overload: g3.SymmetricSparseMatrix.Size*
  implements:
  - g3.IMatrix.Size
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.SymmetricSparseMatrix.Item(System.Int32,System.Int32)
  commentId: P:g3.SymmetricSparseMatrix.Item(System.Int32,System.Int32)
  id: Item(System.Int32,System.Int32)
  parent: g3.SymmetricSparseMatrix
  langs:
  - csharp
  - vb
  name: Item[Int32, Int32]
  nameWithType: SymmetricSparseMatrix.Item[Int32, Int32]
  fullName: g3.SymmetricSparseMatrix.Item[System.Int32, System.Int32]
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: this[]
    path: ../Assets/geometry3Sharp/solvers/SparseMatrix.cs
    startLine: 59
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double this[int r, int c] { get; set; }
    parameters:
    - id: r
      type: System.Int32
    - id: c
      type: System.Int32
    return:
      type: System.Double
    content.vb: Public Property Item(r As Integer, c As Integer) As Double
  overload: g3.SymmetricSparseMatrix.Item*
  implements:
  - g3.IMatrix.Item(System.Int32,System.Int32)
  nameWithType.vb: SymmetricSparseMatrix.Item(Int32, Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: g3.SymmetricSparseMatrix.Item(System.Int32, System.Int32)
  name.vb: Item(Int32, Int32)
- uid: g3.SymmetricSparseMatrix.Multiply(System.Double[],System.Double[])
  commentId: M:g3.SymmetricSparseMatrix.Multiply(System.Double[],System.Double[])
  id: Multiply(System.Double[],System.Double[])
  parent: g3.SymmetricSparseMatrix
  langs:
  - csharp
  - vb
  name: Multiply(Double[], Double[])
  nameWithType: SymmetricSparseMatrix.Multiply(Double[], Double[])
  fullName: g3.SymmetricSparseMatrix.Multiply(System.Double[], System.Double[])
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Multiply
    path: ../Assets/geometry3Sharp/solvers/SparseMatrix.cs
    startLine: 74
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Multiply(double[] X, double[] Result)
    parameters:
    - id: X
      type: System.Double[]
    - id: Result
      type: System.Double[]
    content.vb: Public Sub Multiply(X As Double(), Result As Double())
  overload: g3.SymmetricSparseMatrix.Multiply*
  nameWithType.vb: SymmetricSparseMatrix.Multiply(Double(), Double())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.SymmetricSparseMatrix.Multiply(System.Double(), System.Double())
  name.vb: Multiply(Double(), Double())
- uid: g3.SymmetricSparseMatrix.Square(System.Boolean)
  commentId: M:g3.SymmetricSparseMatrix.Square(System.Boolean)
  id: Square(System.Boolean)
  parent: g3.SymmetricSparseMatrix
  langs:
  - csharp
  - vb
  name: Square(Boolean)
  nameWithType: SymmetricSparseMatrix.Square(Boolean)
  fullName: g3.SymmetricSparseMatrix.Square(System.Boolean)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Square
    path: ../Assets/geometry3Sharp/solvers/SparseMatrix.cs
    startLine: 90
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public SymmetricSparseMatrix Square(bool bParallel = true)
    parameters:
    - id: bParallel
      type: System.Boolean
    return:
      type: g3.SymmetricSparseMatrix
    content.vb: Public Function Square(bParallel As Boolean = True) As SymmetricSparseMatrix
  overload: g3.SymmetricSparseMatrix.Square*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.SymmetricSparseMatrix.SquarePackedParallel
  commentId: M:g3.SymmetricSparseMatrix.SquarePackedParallel
  id: SquarePackedParallel
  parent: g3.SymmetricSparseMatrix
  langs:
  - csharp
  - vb
  name: SquarePackedParallel()
  nameWithType: SymmetricSparseMatrix.SquarePackedParallel()
  fullName: g3.SymmetricSparseMatrix.SquarePackedParallel()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: SquarePackedParallel
    path: ../Assets/geometry3Sharp/solvers/SparseMatrix.cs
    startLine: 139
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nReturns this*this, as a packed sparse matrix. Computes in parallel.\n"
  example: []
  syntax:
    content: public PackedSparseMatrix SquarePackedParallel()
    return:
      type: g3.PackedSparseMatrix
    content.vb: Public Function SquarePackedParallel As PackedSparseMatrix
  overload: g3.SymmetricSparseMatrix.SquarePackedParallel*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.SymmetricSparseMatrix.Multiply(g3.SymmetricSparseMatrix)
  commentId: M:g3.SymmetricSparseMatrix.Multiply(g3.SymmetricSparseMatrix)
  id: Multiply(g3.SymmetricSparseMatrix)
  parent: g3.SymmetricSparseMatrix
  langs:
  - csharp
  - vb
  name: Multiply(SymmetricSparseMatrix)
  nameWithType: SymmetricSparseMatrix.Multiply(SymmetricSparseMatrix)
  fullName: g3.SymmetricSparseMatrix.Multiply(g3.SymmetricSparseMatrix)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Multiply
    path: ../Assets/geometry3Sharp/solvers/SparseMatrix.cs
    startLine: 150
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public SymmetricSparseMatrix Multiply(SymmetricSparseMatrix M2)
    parameters:
    - id: M2
      type: g3.SymmetricSparseMatrix
    return:
      type: g3.SymmetricSparseMatrix
    content.vb: Public Function Multiply(M2 As SymmetricSparseMatrix) As SymmetricSparseMatrix
  overload: g3.SymmetricSparseMatrix.Multiply*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.SymmetricSparseMatrix.Multiply(g3.SymmetricSparseMatrix,g3.SymmetricSparseMatrix@,System.Boolean)
  commentId: M:g3.SymmetricSparseMatrix.Multiply(g3.SymmetricSparseMatrix,g3.SymmetricSparseMatrix@,System.Boolean)
  id: Multiply(g3.SymmetricSparseMatrix,g3.SymmetricSparseMatrix@,System.Boolean)
  parent: g3.SymmetricSparseMatrix
  langs:
  - csharp
  - vb
  name: Multiply(SymmetricSparseMatrix, ref SymmetricSparseMatrix, Boolean)
  nameWithType: SymmetricSparseMatrix.Multiply(SymmetricSparseMatrix, ref SymmetricSparseMatrix, Boolean)
  fullName: g3.SymmetricSparseMatrix.Multiply(g3.SymmetricSparseMatrix, ref g3.SymmetricSparseMatrix, System.Boolean)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Multiply
    path: ../Assets/geometry3Sharp/solvers/SparseMatrix.cs
    startLine: 156
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Multiply(SymmetricSparseMatrix M2, ref SymmetricSparseMatrix R, bool bParallel = true)
    parameters:
    - id: M2
      type: g3.SymmetricSparseMatrix
    - id: R
      type: g3.SymmetricSparseMatrix
    - id: bParallel
      type: System.Boolean
    content.vb: Public Sub Multiply(M2 As SymmetricSparseMatrix, ByRef R As SymmetricSparseMatrix, bParallel As Boolean = True)
  overload: g3.SymmetricSparseMatrix.Multiply*
  nameWithType.vb: SymmetricSparseMatrix.Multiply(SymmetricSparseMatrix, ByRef SymmetricSparseMatrix, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.SymmetricSparseMatrix.Multiply(g3.SymmetricSparseMatrix, ByRef g3.SymmetricSparseMatrix, System.Boolean)
  name.vb: Multiply(SymmetricSparseMatrix, ByRef SymmetricSparseMatrix, Boolean)
- uid: g3.SymmetricSparseMatrix.NonZeros
  commentId: M:g3.SymmetricSparseMatrix.NonZeros
  id: NonZeros
  parent: g3.SymmetricSparseMatrix
  langs:
  - csharp
  - vb
  name: NonZeros()
  nameWithType: SymmetricSparseMatrix.NonZeros()
  fullName: g3.SymmetricSparseMatrix.NonZeros()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: NonZeros
    path: ../Assets/geometry3Sharp/solvers/SparseMatrix.cs
    startLine: 262
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IEnumerable<KeyValuePair<Index2i, double>> NonZeros()
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{g3.Index2i,System.Double}}
    content.vb: Public Function NonZeros As IEnumerable(Of KeyValuePair(Of Index2i, Double))
  overload: g3.SymmetricSparseMatrix.NonZeros*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.SymmetricSparseMatrix.NonZeroIndices
  commentId: M:g3.SymmetricSparseMatrix.NonZeroIndices
  id: NonZeroIndices
  parent: g3.SymmetricSparseMatrix
  langs:
  - csharp
  - vb
  name: NonZeroIndices()
  nameWithType: SymmetricSparseMatrix.NonZeroIndices()
  fullName: g3.SymmetricSparseMatrix.NonZeroIndices()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: NonZeroIndices
    path: ../Assets/geometry3Sharp/solvers/SparseMatrix.cs
    startLine: 266
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IEnumerable<Index2i> NonZeroIndices()
    return:
      type: System.Collections.Generic.IEnumerable{g3.Index2i}
    content.vb: Public Function NonZeroIndices As IEnumerable(Of Index2i)
  overload: g3.SymmetricSparseMatrix.NonZeroIndices*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.SymmetricSparseMatrix.EpsilonEqual(g3.SymmetricSparseMatrix,System.Double)
  commentId: M:g3.SymmetricSparseMatrix.EpsilonEqual(g3.SymmetricSparseMatrix,System.Double)
  id: EpsilonEqual(g3.SymmetricSparseMatrix,System.Double)
  parent: g3.SymmetricSparseMatrix
  langs:
  - csharp
  - vb
  name: EpsilonEqual(SymmetricSparseMatrix, Double)
  nameWithType: SymmetricSparseMatrix.EpsilonEqual(SymmetricSparseMatrix, Double)
  fullName: g3.SymmetricSparseMatrix.EpsilonEqual(g3.SymmetricSparseMatrix, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/SparseMatrix.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: EpsilonEqual
    path: ../Assets/geometry3Sharp/solvers/SparseMatrix.cs
    startLine: 272
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool EpsilonEqual(SymmetricSparseMatrix B, double eps = 2.2204460492503131E-16)
    parameters:
    - id: B
      type: g3.SymmetricSparseMatrix
    - id: eps
      type: System.Double
    return:
      type: System.Boolean
    content.vb: Public Function EpsilonEqual(B As SymmetricSparseMatrix, eps As Double = 2.2204460492503131E-16) As Boolean
  overload: g3.SymmetricSparseMatrix.EpsilonEqual*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: g3.IMatrix
  commentId: T:g3.IMatrix
  parent: g3
  name: IMatrix
  nameWithType: IMatrix
  fullName: g3.IMatrix
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: g3.SymmetricSparseMatrix.#ctor*
  commentId: Overload:g3.SymmetricSparseMatrix.#ctor
  name: SymmetricSparseMatrix
  nameWithType: SymmetricSparseMatrix.SymmetricSparseMatrix
  fullName: g3.SymmetricSparseMatrix.SymmetricSparseMatrix
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: g3.DenseMatrix
  commentId: T:g3.DenseMatrix
  parent: g3
  name: DenseMatrix
  nameWithType: DenseMatrix
  fullName: g3.DenseMatrix
- uid: g3.SymmetricSparseMatrix
  commentId: T:g3.SymmetricSparseMatrix
  parent: g3
  name: SymmetricSparseMatrix
  nameWithType: SymmetricSparseMatrix
  fullName: g3.SymmetricSparseMatrix
- uid: g3.SymmetricSparseMatrix.Set*
  commentId: Overload:g3.SymmetricSparseMatrix.Set
  name: Set
  nameWithType: SymmetricSparseMatrix.Set
  fullName: g3.SymmetricSparseMatrix.Set
- uid: g3.IMatrix.Set(System.Int32,System.Int32,System.Double)
  commentId: M:g3.IMatrix.Set(System.Int32,System.Int32,System.Double)
  parent: g3.IMatrix
  isExternal: true
  name: Set(Int32, Int32, Double)
  nameWithType: IMatrix.Set(Int32, Int32, Double)
  fullName: g3.IMatrix.Set(System.Int32, System.Int32, System.Double)
  spec.csharp:
  - uid: g3.IMatrix.Set(System.Int32,System.Int32,System.Double)
    name: Set
    nameWithType: IMatrix.Set
    fullName: g3.IMatrix.Set
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: g3.IMatrix.Set(System.Int32,System.Int32,System.Double)
    name: Set
    nameWithType: IMatrix.Set
    fullName: g3.IMatrix.Set
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: g3.SymmetricSparseMatrix.Rows*
  commentId: Overload:g3.SymmetricSparseMatrix.Rows
  name: Rows
  nameWithType: SymmetricSparseMatrix.Rows
  fullName: g3.SymmetricSparseMatrix.Rows
- uid: g3.IMatrix.Rows
  commentId: P:g3.IMatrix.Rows
  parent: g3.IMatrix
  name: Rows
  nameWithType: IMatrix.Rows
  fullName: g3.IMatrix.Rows
- uid: g3.SymmetricSparseMatrix.Columns*
  commentId: Overload:g3.SymmetricSparseMatrix.Columns
  name: Columns
  nameWithType: SymmetricSparseMatrix.Columns
  fullName: g3.SymmetricSparseMatrix.Columns
- uid: g3.IMatrix.Columns
  commentId: P:g3.IMatrix.Columns
  parent: g3.IMatrix
  name: Columns
  nameWithType: IMatrix.Columns
  fullName: g3.IMatrix.Columns
- uid: g3.SymmetricSparseMatrix.Size*
  commentId: Overload:g3.SymmetricSparseMatrix.Size
  name: Size
  nameWithType: SymmetricSparseMatrix.Size
  fullName: g3.SymmetricSparseMatrix.Size
- uid: g3.IMatrix.Size
  commentId: P:g3.IMatrix.Size
  parent: g3.IMatrix
  name: Size
  nameWithType: IMatrix.Size
  fullName: g3.IMatrix.Size
- uid: g3.Index2i
  commentId: T:g3.Index2i
  parent: g3
  name: Index2i
  nameWithType: Index2i
  fullName: g3.Index2i
- uid: g3.SymmetricSparseMatrix.Item*
  commentId: Overload:g3.SymmetricSparseMatrix.Item
  name: Item
  nameWithType: SymmetricSparseMatrix.Item
  fullName: g3.SymmetricSparseMatrix.Item
- uid: g3.IMatrix.Item(System.Int32,System.Int32)
  commentId: P:g3.IMatrix.Item(System.Int32,System.Int32)
  parent: g3.IMatrix
  isExternal: true
  name: Item[Int32, Int32]
  nameWithType: IMatrix.Item[Int32, Int32]
  fullName: g3.IMatrix.Item[System.Int32, System.Int32]
  nameWithType.vb: IMatrix.Item(Int32, Int32)
  fullName.vb: g3.IMatrix.Item(System.Int32, System.Int32)
  name.vb: Item(Int32, Int32)
  spec.csharp:
  - uid: g3.IMatrix.Item(System.Int32,System.Int32)
    name: Item
    nameWithType: IMatrix.Item
    fullName: g3.IMatrix.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: g3.IMatrix.Item(System.Int32,System.Int32)
    name: Item
    nameWithType: IMatrix.Item
    fullName: g3.IMatrix.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.SymmetricSparseMatrix.Multiply*
  commentId: Overload:g3.SymmetricSparseMatrix.Multiply
  name: Multiply
  nameWithType: SymmetricSparseMatrix.Multiply
  fullName: g3.SymmetricSparseMatrix.Multiply
- uid: System.Double[]
  isExternal: true
  name: Double[]
  nameWithType: Double[]
  fullName: System.Double[]
  nameWithType.vb: Double()
  fullName.vb: System.Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: g3.SymmetricSparseMatrix.Square*
  commentId: Overload:g3.SymmetricSparseMatrix.Square
  name: Square
  nameWithType: SymmetricSparseMatrix.Square
  fullName: g3.SymmetricSparseMatrix.Square
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: g3.SymmetricSparseMatrix.SquarePackedParallel*
  commentId: Overload:g3.SymmetricSparseMatrix.SquarePackedParallel
  name: SquarePackedParallel
  nameWithType: SymmetricSparseMatrix.SquarePackedParallel
  fullName: g3.SymmetricSparseMatrix.SquarePackedParallel
- uid: g3.PackedSparseMatrix
  commentId: T:g3.PackedSparseMatrix
  parent: g3
  name: PackedSparseMatrix
  nameWithType: PackedSparseMatrix
  fullName: g3.PackedSparseMatrix
- uid: g3.SymmetricSparseMatrix.NonZeros*
  commentId: Overload:g3.SymmetricSparseMatrix.NonZeros
  name: NonZeros
  nameWithType: SymmetricSparseMatrix.NonZeros
  fullName: g3.SymmetricSparseMatrix.NonZeros
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{g3.Index2i,System.Double}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{g3.Index2i,System.Double}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<Index2i, Double>>
  nameWithType: IEnumerable<KeyValuePair<Index2i, Double>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<g3.Index2i, System.Double>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Index2i, Double))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of g3.Index2i, System.Double))
  name.vb: IEnumerable(Of KeyValuePair(Of Index2i, Double))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: g3.Index2i
    name: Index2i
    nameWithType: Index2i
    fullName: g3.Index2i
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: g3.Index2i
    name: Index2i
    nameWithType: Index2i
    fullName: g3.Index2i
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: g3.SymmetricSparseMatrix.NonZeroIndices*
  commentId: Overload:g3.SymmetricSparseMatrix.NonZeroIndices
  name: NonZeroIndices
  nameWithType: SymmetricSparseMatrix.NonZeroIndices
  fullName: g3.SymmetricSparseMatrix.NonZeroIndices
- uid: System.Collections.Generic.IEnumerable{g3.Index2i}
  commentId: T:System.Collections.Generic.IEnumerable{g3.Index2i}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Index2i>
  nameWithType: IEnumerable<Index2i>
  fullName: System.Collections.Generic.IEnumerable<g3.Index2i>
  nameWithType.vb: IEnumerable(Of Index2i)
  fullName.vb: System.Collections.Generic.IEnumerable(Of g3.Index2i)
  name.vb: IEnumerable(Of Index2i)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: g3.Index2i
    name: Index2i
    nameWithType: Index2i
    fullName: g3.Index2i
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: g3.Index2i
    name: Index2i
    nameWithType: Index2i
    fullName: g3.Index2i
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.SymmetricSparseMatrix.EpsilonEqual*
  commentId: Overload:g3.SymmetricSparseMatrix.EpsilonEqual
  name: EpsilonEqual
  nameWithType: SymmetricSparseMatrix.EpsilonEqual
  fullName: g3.SymmetricSparseMatrix.EpsilonEqual

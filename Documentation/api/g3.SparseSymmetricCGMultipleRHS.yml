### YamlMime:ManagedReference
items:
- uid: g3.SparseSymmetricCGMultipleRHS
  commentId: T:g3.SparseSymmetricCGMultipleRHS
  id: SparseSymmetricCGMultipleRHS
  parent: g3
  children:
  - g3.SparseSymmetricCGMultipleRHS.B
  - g3.SparseSymmetricCGMultipleRHS.ConvergeTolerance
  - g3.SparseSymmetricCGMultipleRHS.Iterations
  - g3.SparseSymmetricCGMultipleRHS.MaxIterations
  - g3.SparseSymmetricCGMultipleRHS.MultiplyF
  - g3.SparseSymmetricCGMultipleRHS.PreconditionMultiplyF
  - g3.SparseSymmetricCGMultipleRHS.Solve
  - g3.SparseSymmetricCGMultipleRHS.SolvePreconditioned
  - g3.SparseSymmetricCGMultipleRHS.UseXAsInitialGuess
  - g3.SparseSymmetricCGMultipleRHS.X
  langs:
  - csharp
  - vb
  name: SparseSymmetricCGMultipleRHS
  nameWithType: SparseSymmetricCGMultipleRHS
  fullName: g3.SparseSymmetricCGMultipleRHS
  type: Class
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/SparseSymmetricCG.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: SparseSymmetricCGMultipleRHS
    path: ../Assets/geometry3Sharp/solvers/SparseSymmetricCG.cs
    startLine: 225
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\n[RMS] this is a variant of SparseSymmetricCG that supports multiple right-hand-sides.\nMakes quite a big difference as matrix gets bigger, because MultiplyF can\nunroll inner loops (as long as you actually do that)\n\nHowever, if this is done then it is not really possible to do different numbers\nof iterations for different RHS&apos;s. We will not update that RHS once it has \nconverged, however we still have to do the multiplies!\n\n"
  example: []
  syntax:
    content: public class SparseSymmetricCGMultipleRHS
    content.vb: Public Class SparseSymmetricCGMultipleRHS
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: g3.SparseSymmetricCGMultipleRHS.MultiplyF
  commentId: F:g3.SparseSymmetricCGMultipleRHS.MultiplyF
  id: MultiplyF
  parent: g3.SparseSymmetricCGMultipleRHS
  langs:
  - csharp
  - vb
  name: MultiplyF
  nameWithType: SparseSymmetricCGMultipleRHS.MultiplyF
  fullName: g3.SparseSymmetricCGMultipleRHS.MultiplyF
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/SparseSymmetricCG.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: MultiplyF
    path: ../Assets/geometry3Sharp/solvers/SparseSymmetricCG.cs
    startLine: 228
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Action<double[][], double[][]> MultiplyF
    return:
      type: System.Action{System.Double[][],System.Double[][]}
    content.vb: Public MultiplyF As Action(Of Double()(), Double()())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.SparseSymmetricCGMultipleRHS.PreconditionMultiplyF
  commentId: F:g3.SparseSymmetricCGMultipleRHS.PreconditionMultiplyF
  id: PreconditionMultiplyF
  parent: g3.SparseSymmetricCGMultipleRHS
  langs:
  - csharp
  - vb
  name: PreconditionMultiplyF
  nameWithType: SparseSymmetricCGMultipleRHS.PreconditionMultiplyF
  fullName: g3.SparseSymmetricCGMultipleRHS.PreconditionMultiplyF
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/SparseSymmetricCG.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: PreconditionMultiplyF
    path: ../Assets/geometry3Sharp/solvers/SparseSymmetricCG.cs
    startLine: 230
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Action<double[][], double[][]> PreconditionMultiplyF
    return:
      type: System.Action{System.Double[][],System.Double[][]}
    content.vb: Public PreconditionMultiplyF As Action(Of Double()(), Double()())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.SparseSymmetricCGMultipleRHS.B
  commentId: F:g3.SparseSymmetricCGMultipleRHS.B
  id: B
  parent: g3.SparseSymmetricCGMultipleRHS
  langs:
  - csharp
  - vb
  name: B
  nameWithType: SparseSymmetricCGMultipleRHS.B
  fullName: g3.SparseSymmetricCGMultipleRHS.B
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/SparseSymmetricCG.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: B
    path: ../Assets/geometry3Sharp/solvers/SparseSymmetricCG.cs
    startLine: 233
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double[][] B
    return:
      type: System.Double[][]
    content.vb: Public B As Double()()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.SparseSymmetricCGMultipleRHS.ConvergeTolerance
  commentId: F:g3.SparseSymmetricCGMultipleRHS.ConvergeTolerance
  id: ConvergeTolerance
  parent: g3.SparseSymmetricCGMultipleRHS
  langs:
  - csharp
  - vb
  name: ConvergeTolerance
  nameWithType: SparseSymmetricCGMultipleRHS.ConvergeTolerance
  fullName: g3.SparseSymmetricCGMultipleRHS.ConvergeTolerance
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/SparseSymmetricCG.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ConvergeTolerance
    path: ../Assets/geometry3Sharp/solvers/SparseSymmetricCG.cs
    startLine: 235
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double ConvergeTolerance
    return:
      type: System.Double
    content.vb: Public ConvergeTolerance As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.SparseSymmetricCGMultipleRHS.X
  commentId: F:g3.SparseSymmetricCGMultipleRHS.X
  id: X
  parent: g3.SparseSymmetricCGMultipleRHS
  langs:
  - csharp
  - vb
  name: X
  nameWithType: SparseSymmetricCGMultipleRHS.X
  fullName: g3.SparseSymmetricCGMultipleRHS.X
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/SparseSymmetricCG.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: X
    path: ../Assets/geometry3Sharp/solvers/SparseSymmetricCG.cs
    startLine: 239
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double[][] X
    return:
      type: System.Double[][]
    content.vb: Public X As Double()()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.SparseSymmetricCGMultipleRHS.UseXAsInitialGuess
  commentId: F:g3.SparseSymmetricCGMultipleRHS.UseXAsInitialGuess
  id: UseXAsInitialGuess
  parent: g3.SparseSymmetricCGMultipleRHS
  langs:
  - csharp
  - vb
  name: UseXAsInitialGuess
  nameWithType: SparseSymmetricCGMultipleRHS.UseXAsInitialGuess
  fullName: g3.SparseSymmetricCGMultipleRHS.UseXAsInitialGuess
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/SparseSymmetricCG.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: UseXAsInitialGuess
    path: ../Assets/geometry3Sharp/solvers/SparseSymmetricCG.cs
    startLine: 240
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool UseXAsInitialGuess
    return:
      type: System.Boolean
    content.vb: Public UseXAsInitialGuess As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.SparseSymmetricCGMultipleRHS.MaxIterations
  commentId: F:g3.SparseSymmetricCGMultipleRHS.MaxIterations
  id: MaxIterations
  parent: g3.SparseSymmetricCGMultipleRHS
  langs:
  - csharp
  - vb
  name: MaxIterations
  nameWithType: SparseSymmetricCGMultipleRHS.MaxIterations
  fullName: g3.SparseSymmetricCGMultipleRHS.MaxIterations
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/SparseSymmetricCG.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: MaxIterations
    path: ../Assets/geometry3Sharp/solvers/SparseSymmetricCG.cs
    startLine: 242
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int MaxIterations
    return:
      type: System.Int32
    content.vb: Public MaxIterations As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.SparseSymmetricCGMultipleRHS.Iterations
  commentId: F:g3.SparseSymmetricCGMultipleRHS.Iterations
  id: Iterations
  parent: g3.SparseSymmetricCGMultipleRHS
  langs:
  - csharp
  - vb
  name: Iterations
  nameWithType: SparseSymmetricCGMultipleRHS.Iterations
  fullName: g3.SparseSymmetricCGMultipleRHS.Iterations
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/SparseSymmetricCG.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Iterations
    path: ../Assets/geometry3Sharp/solvers/SparseSymmetricCG.cs
    startLine: 243
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int Iterations
    return:
      type: System.Int32
    content.vb: Public Iterations As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.SparseSymmetricCGMultipleRHS.Solve
  commentId: M:g3.SparseSymmetricCGMultipleRHS.Solve
  id: Solve
  parent: g3.SparseSymmetricCGMultipleRHS
  langs:
  - csharp
  - vb
  name: Solve()
  nameWithType: SparseSymmetricCGMultipleRHS.Solve()
  fullName: g3.SparseSymmetricCGMultipleRHS.Solve()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/SparseSymmetricCG.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Solve
    path: ../Assets/geometry3Sharp/solvers/SparseSymmetricCG.cs
    startLine: 252
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nstandard CG solve\n"
  example: []
  syntax:
    content: public bool Solve()
    return:
      type: System.Boolean
    content.vb: Public Function Solve As Boolean
  overload: g3.SparseSymmetricCGMultipleRHS.Solve*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.SparseSymmetricCGMultipleRHS.SolvePreconditioned
  commentId: M:g3.SparseSymmetricCGMultipleRHS.SolvePreconditioned
  id: SolvePreconditioned
  parent: g3.SparseSymmetricCGMultipleRHS
  langs:
  - csharp
  - vb
  name: SolvePreconditioned()
  nameWithType: SparseSymmetricCGMultipleRHS.SolvePreconditioned()
  fullName: g3.SparseSymmetricCGMultipleRHS.SolvePreconditioned()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/solvers/SparseSymmetricCG.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: SolvePreconditioned
    path: ../Assets/geometry3Sharp/solvers/SparseSymmetricCG.cs
    startLine: 381
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nPreconditioned variant\nSimilar to non-preconditioned version, this can suffer if one solution converges\nmuch slower than others, as we can&apos;t skip matrix multiplies in that case.\n"
  example: []
  syntax:
    content: public bool SolvePreconditioned()
    return:
      type: System.Boolean
    content.vb: Public Function SolvePreconditioned As Boolean
  overload: g3.SparseSymmetricCGMultipleRHS.SolvePreconditioned*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Action{System.Double[][],System.Double[][]}
  commentId: T:System.Action{System.Double[][],System.Double[][]}
  parent: System
  definition: System.Action`2
  name: Action<Double[][], Double[][]>
  nameWithType: Action<Double[][], Double[][]>
  fullName: System.Action<System.Double[][], System.Double[][]>
  nameWithType.vb: Action(Of Double()(), Double()())
  fullName.vb: System.Action(Of System.Double()(), System.Double()())
  name.vb: Action(Of Double()(), Double()())
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Double[][]
  isExternal: true
  name: Double[][]
  nameWithType: Double[][]
  fullName: System.Double[][]
  nameWithType.vb: Double()()
  fullName.vb: System.Double()()
  name.vb: Double()()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: g3.SparseSymmetricCGMultipleRHS.Solve*
  commentId: Overload:g3.SparseSymmetricCGMultipleRHS.Solve
  name: Solve
  nameWithType: SparseSymmetricCGMultipleRHS.Solve
  fullName: g3.SparseSymmetricCGMultipleRHS.Solve
- uid: g3.SparseSymmetricCGMultipleRHS.SolvePreconditioned*
  commentId: Overload:g3.SparseSymmetricCGMultipleRHS.SolvePreconditioned
  name: SolvePreconditioned
  nameWithType: SparseSymmetricCGMultipleRHS.SolvePreconditioned
  fullName: g3.SparseSymmetricCGMultipleRHS.SolvePreconditioned

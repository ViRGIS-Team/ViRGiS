### YamlMime:ManagedReference
items:
- uid: g3.IntrLine2Segment2
  commentId: T:g3.IntrLine2Segment2
  id: IntrLine2Segment2
  parent: g3
  children:
  - g3.IntrLine2Segment2.#ctor(g3.Line2d,g3.Segment2d)
  - g3.IntrLine2Segment2.Compute
  - g3.IntrLine2Segment2.DotThreshold
  - g3.IntrLine2Segment2.Find
  - g3.IntrLine2Segment2.IntervalThreshold
  - g3.IntrLine2Segment2.IsSimpleIntersection
  - g3.IntrLine2Segment2.Line
  - g3.IntrLine2Segment2.Parameter
  - g3.IntrLine2Segment2.Point
  - g3.IntrLine2Segment2.Quantity
  - g3.IntrLine2Segment2.Result
  - g3.IntrLine2Segment2.Segment
  - g3.IntrLine2Segment2.Type
  langs:
  - csharp
  - vb
  name: IntrLine2Segment2
  nameWithType: IntrLine2Segment2
  fullName: g3.IntrLine2Segment2
  type: Class
  source:
    remote:
      path: Assets/geometry3Sharp/intersection/IntrLine2Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IntrLine2Segment2
    path: ../Assets/geometry3Sharp/intersection/IntrLine2Segment2.cs
    startLine: 35
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public class IntrLine2Segment2
    content.vb: Public Class IntrLine2Segment2
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: g3.IntrLine2Segment2.Line
  commentId: P:g3.IntrLine2Segment2.Line
  id: Line
  parent: g3.IntrLine2Segment2
  langs:
  - csharp
  - vb
  name: Line
  nameWithType: IntrLine2Segment2.Line
  fullName: g3.IntrLine2Segment2.Line
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/intersection/IntrLine2Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Line
    path: ../Assets/geometry3Sharp/intersection/IntrLine2Segment2.cs
    startLine: 38
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Line2d Line { get; set; }
    parameters: []
    return:
      type: g3.Line2d
    content.vb: Public Property Line As Line2d
  overload: g3.IntrLine2Segment2.Line*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: g3.IntrLine2Segment2.Segment
  commentId: P:g3.IntrLine2Segment2.Segment
  id: Segment
  parent: g3.IntrLine2Segment2
  langs:
  - csharp
  - vb
  name: Segment
  nameWithType: IntrLine2Segment2.Segment
  fullName: g3.IntrLine2Segment2.Segment
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/intersection/IntrLine2Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Segment
    path: ../Assets/geometry3Sharp/intersection/IntrLine2Segment2.cs
    startLine: 44
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Segment2d Segment { get; set; }
    parameters: []
    return:
      type: g3.Segment2d
    content.vb: Public Property Segment As Segment2d
  overload: g3.IntrLine2Segment2.Segment*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: g3.IntrLine2Segment2.IntervalThreshold
  commentId: P:g3.IntrLine2Segment2.IntervalThreshold
  id: IntervalThreshold
  parent: g3.IntrLine2Segment2
  langs:
  - csharp
  - vb
  name: IntervalThreshold
  nameWithType: IntrLine2Segment2.IntervalThreshold
  fullName: g3.IntrLine2Segment2.IntervalThreshold
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/intersection/IntrLine2Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IntervalThreshold
    path: ../Assets/geometry3Sharp/intersection/IntrLine2Segment2.cs
    startLine: 50
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double IntervalThreshold { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property IntervalThreshold As Double
  overload: g3.IntrLine2Segment2.IntervalThreshold*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: g3.IntrLine2Segment2.DotThreshold
  commentId: P:g3.IntrLine2Segment2.DotThreshold
  id: DotThreshold
  parent: g3.IntrLine2Segment2
  langs:
  - csharp
  - vb
  name: DotThreshold
  nameWithType: IntrLine2Segment2.DotThreshold
  fullName: g3.IntrLine2Segment2.DotThreshold
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/intersection/IntrLine2Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: DotThreshold
    path: ../Assets/geometry3Sharp/intersection/IntrLine2Segment2.cs
    startLine: 56
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double DotThreshold { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property DotThreshold As Double
  overload: g3.IntrLine2Segment2.DotThreshold*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: g3.IntrLine2Segment2.Quantity
  commentId: F:g3.IntrLine2Segment2.Quantity
  id: Quantity
  parent: g3.IntrLine2Segment2
  langs:
  - csharp
  - vb
  name: Quantity
  nameWithType: IntrLine2Segment2.Quantity
  fullName: g3.IntrLine2Segment2.Quantity
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/intersection/IntrLine2Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Quantity
    path: ../Assets/geometry3Sharp/intersection/IntrLine2Segment2.cs
    startLine: 61
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int Quantity
    return:
      type: System.Int32
    content.vb: Public Quantity As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.IntrLine2Segment2.Result
  commentId: F:g3.IntrLine2Segment2.Result
  id: Result
  parent: g3.IntrLine2Segment2
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: IntrLine2Segment2.Result
  fullName: g3.IntrLine2Segment2.Result
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/intersection/IntrLine2Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Result
    path: ../Assets/geometry3Sharp/intersection/IntrLine2Segment2.cs
    startLine: 62
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IntersectionResult Result
    return:
      type: g3.IntersectionResult
    content.vb: Public Result As IntersectionResult
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.IntrLine2Segment2.Type
  commentId: F:g3.IntrLine2Segment2.Type
  id: Type
  parent: g3.IntrLine2Segment2
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: IntrLine2Segment2.Type
  fullName: g3.IntrLine2Segment2.Type
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/intersection/IntrLine2Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Type
    path: ../Assets/geometry3Sharp/intersection/IntrLine2Segment2.cs
    startLine: 63
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IntersectionType Type
    return:
      type: g3.IntersectionType
    content.vb: Public Type As IntersectionType
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.IntrLine2Segment2.IsSimpleIntersection
  commentId: P:g3.IntrLine2Segment2.IsSimpleIntersection
  id: IsSimpleIntersection
  parent: g3.IntrLine2Segment2
  langs:
  - csharp
  - vb
  name: IsSimpleIntersection
  nameWithType: IntrLine2Segment2.IsSimpleIntersection
  fullName: g3.IntrLine2Segment2.IsSimpleIntersection
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/intersection/IntrLine2Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IsSimpleIntersection
    path: ../Assets/geometry3Sharp/intersection/IntrLine2Segment2.cs
    startLine: 65
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool IsSimpleIntersection { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSimpleIntersection As Boolean
  overload: g3.IntrLine2Segment2.IsSimpleIntersection*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.IntrLine2Segment2.Point
  commentId: F:g3.IntrLine2Segment2.Point
  id: Point
  parent: g3.IntrLine2Segment2
  langs:
  - csharp
  - vb
  name: Point
  nameWithType: IntrLine2Segment2.Point
  fullName: g3.IntrLine2Segment2.Point
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/intersection/IntrLine2Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Point
    path: ../Assets/geometry3Sharp/intersection/IntrLine2Segment2.cs
    startLine: 70
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: 'Point on line, only set if Quantity = 1    '
  example: []
  syntax:
    content: public Vector2d Point
    return:
      type: g3.Vector2d
    content.vb: Public Point As Vector2d
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.IntrLine2Segment2.Parameter
  commentId: F:g3.IntrLine2Segment2.Parameter
  id: Parameter
  parent: g3.IntrLine2Segment2
  langs:
  - csharp
  - vb
  name: Parameter
  nameWithType: IntrLine2Segment2.Parameter
  fullName: g3.IntrLine2Segment2.Parameter
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/intersection/IntrLine2Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Parameter
    path: ../Assets/geometry3Sharp/intersection/IntrLine2Segment2.cs
    startLine: 73
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: 'Parameter along line, only set if Quanityt = 1    '
  example: []
  syntax:
    content: public double Parameter
    return:
      type: System.Double
    content.vb: Public Parameter As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.IntrLine2Segment2.#ctor(g3.Line2d,g3.Segment2d)
  commentId: M:g3.IntrLine2Segment2.#ctor(g3.Line2d,g3.Segment2d)
  id: '#ctor(g3.Line2d,g3.Segment2d)'
  parent: g3.IntrLine2Segment2
  langs:
  - csharp
  - vb
  name: IntrLine2Segment2(Line2d, Segment2d)
  nameWithType: IntrLine2Segment2.IntrLine2Segment2(Line2d, Segment2d)
  fullName: g3.IntrLine2Segment2.IntrLine2Segment2(g3.Line2d, g3.Segment2d)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/intersection/IntrLine2Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/intersection/IntrLine2Segment2.cs
    startLine: 75
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IntrLine2Segment2(Line2d line, Segment2d seg)
    parameters:
    - id: line
      type: g3.Line2d
    - id: seg
      type: g3.Segment2d
    content.vb: Public Sub New(line As Line2d, seg As Segment2d)
  overload: g3.IntrLine2Segment2.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.IntrLine2Segment2.Compute
  commentId: M:g3.IntrLine2Segment2.Compute
  id: Compute
  parent: g3.IntrLine2Segment2
  langs:
  - csharp
  - vb
  name: Compute()
  nameWithType: IntrLine2Segment2.Compute()
  fullName: g3.IntrLine2Segment2.Compute()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/intersection/IntrLine2Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Compute
    path: ../Assets/geometry3Sharp/intersection/IntrLine2Segment2.cs
    startLine: 80
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IntrLine2Segment2 Compute()
    return:
      type: g3.IntrLine2Segment2
    content.vb: Public Function Compute As IntrLine2Segment2
  overload: g3.IntrLine2Segment2.Compute*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.IntrLine2Segment2.Find
  commentId: M:g3.IntrLine2Segment2.Find
  id: Find
  parent: g3.IntrLine2Segment2
  langs:
  - csharp
  - vb
  name: Find()
  nameWithType: IntrLine2Segment2.Find()
  fullName: g3.IntrLine2Segment2.Find()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/intersection/IntrLine2Segment2.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Find
    path: ../Assets/geometry3Sharp/intersection/IntrLine2Segment2.cs
    startLine: 87
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool Find()
    return:
      type: System.Boolean
    content.vb: Public Function Find As Boolean
  overload: g3.IntrLine2Segment2.Find*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: g3.IntrLine2Segment2.Line*
  commentId: Overload:g3.IntrLine2Segment2.Line
  name: Line
  nameWithType: IntrLine2Segment2.Line
  fullName: g3.IntrLine2Segment2.Line
- uid: g3.Line2d
  commentId: T:g3.Line2d
  parent: g3
  name: Line2d
  nameWithType: Line2d
  fullName: g3.Line2d
- uid: g3.IntrLine2Segment2.Segment*
  commentId: Overload:g3.IntrLine2Segment2.Segment
  name: Segment
  nameWithType: IntrLine2Segment2.Segment
  fullName: g3.IntrLine2Segment2.Segment
- uid: g3.Segment2d
  commentId: T:g3.Segment2d
  parent: g3
  name: Segment2d
  nameWithType: Segment2d
  fullName: g3.Segment2d
- uid: g3.IntrLine2Segment2.IntervalThreshold*
  commentId: Overload:g3.IntrLine2Segment2.IntervalThreshold
  name: IntervalThreshold
  nameWithType: IntrLine2Segment2.IntervalThreshold
  fullName: g3.IntrLine2Segment2.IntervalThreshold
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: g3.IntrLine2Segment2.DotThreshold*
  commentId: Overload:g3.IntrLine2Segment2.DotThreshold
  name: DotThreshold
  nameWithType: IntrLine2Segment2.DotThreshold
  fullName: g3.IntrLine2Segment2.DotThreshold
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: g3.IntersectionResult
  commentId: T:g3.IntersectionResult
  parent: g3
  name: IntersectionResult
  nameWithType: IntersectionResult
  fullName: g3.IntersectionResult
- uid: g3.IntersectionType
  commentId: T:g3.IntersectionType
  parent: g3
  name: IntersectionType
  nameWithType: IntersectionType
  fullName: g3.IntersectionType
- uid: g3.IntrLine2Segment2.IsSimpleIntersection*
  commentId: Overload:g3.IntrLine2Segment2.IsSimpleIntersection
  name: IsSimpleIntersection
  nameWithType: IntrLine2Segment2.IsSimpleIntersection
  fullName: g3.IntrLine2Segment2.IsSimpleIntersection
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: g3.Vector2d
  commentId: T:g3.Vector2d
  parent: g3
  name: Vector2d
  nameWithType: Vector2d
  fullName: g3.Vector2d
- uid: g3.IntrLine2Segment2.#ctor*
  commentId: Overload:g3.IntrLine2Segment2.#ctor
  name: IntrLine2Segment2
  nameWithType: IntrLine2Segment2.IntrLine2Segment2
  fullName: g3.IntrLine2Segment2.IntrLine2Segment2
- uid: g3.IntrLine2Segment2.Compute*
  commentId: Overload:g3.IntrLine2Segment2.Compute
  name: Compute
  nameWithType: IntrLine2Segment2.Compute
  fullName: g3.IntrLine2Segment2.Compute
- uid: g3.IntrLine2Segment2
  commentId: T:g3.IntrLine2Segment2
  parent: g3
  name: IntrLine2Segment2
  nameWithType: IntrLine2Segment2
  fullName: g3.IntrLine2Segment2
- uid: g3.IntrLine2Segment2.Find*
  commentId: Overload:g3.IntrLine2Segment2.Find
  name: Find
  nameWithType: IntrLine2Segment2.Find
  fullName: g3.IntrLine2Segment2.Find

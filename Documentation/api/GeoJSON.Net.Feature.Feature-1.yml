### YamlMime:ManagedReference
items:
- uid: GeoJSON.Net.Feature.Feature`1
  commentId: T:GeoJSON.Net.Feature.Feature`1
  id: Feature`1
  parent: GeoJSON.Net.Feature
  children:
  - GeoJSON.Net.Feature.Feature`1.#ctor(`0,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)
  - GeoJSON.Net.Feature.Feature`1.#ctor(`0,System.Object,System.String)
  - GeoJSON.Net.Feature.Feature`1.Equals(GeoJSON.Net.Feature.Feature{`0})
  - GeoJSON.Net.Feature.Feature`1.Equals(System.Object)
  - GeoJSON.Net.Feature.Feature`1.GetHashCode
  - GeoJSON.Net.Feature.Feature`1.op_Equality(GeoJSON.Net.Feature.Feature{`0},GeoJSON.Net.Feature.Feature{`0})
  - GeoJSON.Net.Feature.Feature`1.op_Inequality(GeoJSON.Net.Feature.Feature{`0},GeoJSON.Net.Feature.Feature{`0})
  langs:
  - csharp
  - vb
  name: Feature<TGeometry>
  nameWithType: Feature<TGeometry>
  fullName: GeoJSON.Net.Feature.Feature<TGeometry>
  type: Class
  source:
    remote:
      path: Assets/GeoJSON.Net/Feature/Feature.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Feature
    path: ../Assets/GeoJSON.Net/Feature/Feature.cs
    startLine: 124
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.Feature
  summary: "\nTyped GeoJSON Feature class\n"
  remarks: Returns correctly typed Geometry property
  example: []
  syntax:
    content: 'public class Feature<TGeometry> : Feature<TGeometry, IDictionary<string, object>>, IGeoJSONObject, IEqualityComparer<GeoJSONObject>, IEquatable<GeoJSONObject>, IEquatable<Feature<TGeometry, IDictionary<string, object>>>, IEquatable<Feature<TGeometry>> where TGeometry : IGeometryObject'
    typeParameters:
    - id: TGeometry
      description: ''
    content.vb: >-
      Public Class Feature(Of TGeometry As IGeometryObject)
          Inherits Feature(Of TGeometry, IDictionary(Of String, Object))
          Implements IGeoJSONObject, IEqualityComparer(Of GeoJSONObject), IEquatable(Of GeoJSONObject), IEquatable(Of Feature(Of TGeometry, IDictionary(Of String, Object))), IEquatable(Of Feature(Of TGeometry))
  inheritance:
  - System.Object
  - GeoJSON.Net.GeoJSONObject
  - GeoJSON.Net.Feature.Feature{{TGeometry},System.Collections.Generic.IDictionary{System.String,System.Object}}
  derivedClasses:
  - GeoJSON.Net.Feature.Feature
  implements:
  - GeoJSON.Net.IGeoJSONObject
  inheritedMembers:
  - GeoJSON.Net.Feature.Feature{{TGeometry},System.Collections.Generic.IDictionary{System.String,System.Object}}.Type
  - GeoJSON.Net.Feature.Feature{{TGeometry},System.Collections.Generic.IDictionary{System.String,System.Object}}.Id
  - GeoJSON.Net.Feature.Feature{{TGeometry},System.Collections.Generic.IDictionary{System.String,System.Object}}.Geometry
  - GeoJSON.Net.Feature.Feature{{TGeometry},System.Collections.Generic.IDictionary{System.String,System.Object}}.Properties
  - GeoJSON.Net.Feature.Feature{{TGeometry},System.Collections.Generic.IDictionary{System.String,System.Object}}.Equals(GeoJSON.Net.Feature.Feature{{TGeometry},System.Collections.Generic.IDictionary{System.String,System.Object}})
  - GeoJSON.Net.Feature.Feature{{TGeometry},System.Collections.Generic.IDictionary{System.String,System.Object}}.Equals(System.Object)
  - GeoJSON.Net.Feature.Feature{{TGeometry},System.Collections.Generic.IDictionary{System.String,System.Object}}.GetHashCode
  - GeoJSON.Net.GeoJSONObject.BoundingBoxes
  - GeoJSON.Net.GeoJSONObject.CRS
  - GeoJSON.Net.GeoJSONObject.Type
  - GeoJSON.Net.GeoJSONObject.Equals(GeoJSON.Net.GeoJSONObject)
  - GeoJSON.Net.GeoJSONObject.Equals(GeoJSON.Net.GeoJSONObject,GeoJSON.Net.GeoJSONObject)
  - GeoJSON.Net.GeoJSONObject.GetHashCode(GeoJSON.Net.GeoJSONObject)
  nameWithType.vb: Feature(Of TGeometry)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry)
  name.vb: Feature(Of TGeometry)
- uid: GeoJSON.Net.Feature.Feature`1.#ctor(`0,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)
  commentId: M:GeoJSON.Net.Feature.Feature`1.#ctor(`0,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)
  id: '#ctor(`0,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)'
  parent: GeoJSON.Net.Feature.Feature`1
  langs:
  - csharp
  - vb
  name: Feature(TGeometry, IDictionary<String, Object>, String)
  nameWithType: Feature<TGeometry>.Feature(TGeometry, IDictionary<String, Object>, String)
  fullName: GeoJSON.Net.Feature.Feature<TGeometry>.Feature(TGeometry, System.Collections.Generic.IDictionary<System.String, System.Object>, System.String)
  type: Constructor
  source:
    remote:
      path: Assets/GeoJSON.Net/Feature/Feature.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/GeoJSON.Net/Feature/Feature.cs
    startLine: 133
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.Feature
  summary: "\nInitializes a new instance of the <xref href=\"GeoJSON.Net.Feature.Feature\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: >-
      [JsonConstructor]

      public Feature(TGeometry geometry, IDictionary<string, object> properties = null, string id = null)
    parameters:
    - id: geometry
      type: '{TGeometry}'
      description: The Geometry Object.
    - id: properties
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: The properties.
    - id: id
      type: System.String
      description: The (optional) identifier.
    content.vb: >-
      <JsonConstructor>

      Public Sub New(geometry As TGeometry, properties As IDictionary(Of String, Object) = Nothing, id As String = Nothing)
  overload: GeoJSON.Net.Feature.Feature`1.#ctor*
  attributes:
  - type: Newtonsoft.Json.JsonConstructorAttribute
    ctor: Newtonsoft.Json.JsonConstructorAttribute.#ctor
    arguments: []
  nameWithType.vb: Feature(Of TGeometry).Feature(TGeometry, IDictionary(Of String, Object), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry).Feature(TGeometry, System.Collections.Generic.IDictionary(Of System.String, System.Object), System.String)
  name.vb: Feature(TGeometry, IDictionary(Of String, Object), String)
- uid: GeoJSON.Net.Feature.Feature`1.#ctor(`0,System.Object,System.String)
  commentId: M:GeoJSON.Net.Feature.Feature`1.#ctor(`0,System.Object,System.String)
  id: '#ctor(`0,System.Object,System.String)'
  parent: GeoJSON.Net.Feature.Feature`1
  langs:
  - csharp
  - vb
  name: Feature(TGeometry, Object, String)
  nameWithType: Feature<TGeometry>.Feature(TGeometry, Object, String)
  fullName: GeoJSON.Net.Feature.Feature<TGeometry>.Feature(TGeometry, System.Object, System.String)
  type: Constructor
  source:
    remote:
      path: Assets/GeoJSON.Net/Feature/Feature.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/GeoJSON.Net/Feature/Feature.cs
    startLine: 148
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.Feature
  summary: "\nInitializes a new instance of the <xref href=\"GeoJSON.Net.Feature.Feature\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public Feature(TGeometry geometry, object properties, string id = null)
    parameters:
    - id: geometry
      type: '{TGeometry}'
      description: The Geometry Object.
    - id: properties
      type: System.Object
      description: "\nClass used to fill feature properties. Any public member will be added to feature\nproperties\n"
    - id: id
      type: System.String
      description: The (optional) identifier.
    content.vb: Public Sub New(geometry As TGeometry, properties As Object, id As String = Nothing)
  overload: GeoJSON.Net.Feature.Feature`1.#ctor*
  nameWithType.vb: Feature(Of TGeometry).Feature(TGeometry, Object, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry).Feature(TGeometry, System.Object, System.String)
- uid: GeoJSON.Net.Feature.Feature`1.Equals(GeoJSON.Net.Feature.Feature{`0})
  commentId: M:GeoJSON.Net.Feature.Feature`1.Equals(GeoJSON.Net.Feature.Feature{`0})
  id: Equals(GeoJSON.Net.Feature.Feature{`0})
  parent: GeoJSON.Net.Feature.Feature`1
  langs:
  - csharp
  - vb
  name: Equals(Feature<TGeometry>)
  nameWithType: Feature<TGeometry>.Equals(Feature<TGeometry>)
  fullName: GeoJSON.Net.Feature.Feature<TGeometry>.Equals(GeoJSON.Net.Feature.Feature<TGeometry>)
  type: Method
  source:
    remote:
      path: Assets/GeoJSON.Net/Feature/Feature.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Equals
    path: ../Assets/GeoJSON.Net/Feature/Feature.cs
    startLine: 172
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.Feature
  syntax:
    content: public bool Equals(Feature<TGeometry> other)
    parameters:
    - id: other
      type: GeoJSON.Net.Feature.Feature`1
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Feature(Of TGeometry)) As Boolean
  overload: GeoJSON.Net.Feature.Feature`1.Equals*
  nameWithType.vb: Feature(Of TGeometry).Equals(Feature(Of TGeometry))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry).Equals(GeoJSON.Net.Feature.Feature(Of TGeometry))
  name.vb: Equals(Feature(Of TGeometry))
- uid: GeoJSON.Net.Feature.Feature`1.Equals(System.Object)
  commentId: M:GeoJSON.Net.Feature.Feature`1.Equals(System.Object)
  id: Equals(System.Object)
  parent: GeoJSON.Net.Feature.Feature`1
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Feature<TGeometry>.Equals(Object)
  fullName: GeoJSON.Net.Feature.Feature<TGeometry>.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Assets/GeoJSON.Net/Feature/Feature.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Equals
    path: ../Assets/GeoJSON.Net/Feature/Feature.cs
    startLine: 195
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.Feature
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: GeoJSON.Net.Feature.Feature{{TGeometry},System.Collections.Generic.IDictionary{System.String,System.Object}}.Equals(System.Object)
  overload: GeoJSON.Net.Feature.Feature`1.Equals*
  nameWithType.vb: Feature(Of TGeometry).Equals(Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry).Equals(System.Object)
- uid: GeoJSON.Net.Feature.Feature`1.GetHashCode
  commentId: M:GeoJSON.Net.Feature.Feature`1.GetHashCode
  id: GetHashCode
  parent: GeoJSON.Net.Feature.Feature`1
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Feature<TGeometry>.GetHashCode()
  fullName: GeoJSON.Net.Feature.Feature<TGeometry>.GetHashCode()
  type: Method
  source:
    remote:
      path: Assets/GeoJSON.Net/Feature/Feature.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GetHashCode
    path: ../Assets/GeoJSON.Net/Feature/Feature.cs
    startLine: 202
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.Feature
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: GeoJSON.Net.Feature.Feature{{TGeometry},System.Collections.Generic.IDictionary{System.String,System.Object}}.GetHashCode
  overload: GeoJSON.Net.Feature.Feature`1.GetHashCode*
  nameWithType.vb: Feature(Of TGeometry).GetHashCode()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry).GetHashCode()
- uid: GeoJSON.Net.Feature.Feature`1.op_Equality(GeoJSON.Net.Feature.Feature{`0},GeoJSON.Net.Feature.Feature{`0})
  commentId: M:GeoJSON.Net.Feature.Feature`1.op_Equality(GeoJSON.Net.Feature.Feature{`0},GeoJSON.Net.Feature.Feature{`0})
  id: op_Equality(GeoJSON.Net.Feature.Feature{`0},GeoJSON.Net.Feature.Feature{`0})
  parent: GeoJSON.Net.Feature.Feature`1
  langs:
  - csharp
  - vb
  name: Equality(Feature<TGeometry>, Feature<TGeometry>)
  nameWithType: Feature<TGeometry>.Equality(Feature<TGeometry>, Feature<TGeometry>)
  fullName: GeoJSON.Net.Feature.Feature<TGeometry>.Equality(GeoJSON.Net.Feature.Feature<TGeometry>, GeoJSON.Net.Feature.Feature<TGeometry>)
  type: Operator
  source:
    remote:
      path: Assets/GeoJSON.Net/Feature/Feature.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Equality
    path: ../Assets/GeoJSON.Net/Feature/Feature.cs
    startLine: 207
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.Feature
  syntax:
    content: public static bool operator ==(Feature<TGeometry> left, Feature<TGeometry> right)
    parameters:
    - id: left
      type: GeoJSON.Net.Feature.Feature`1
    - id: right
      type: GeoJSON.Net.Feature.Feature`1
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As Feature(Of TGeometry), right As Feature(Of TGeometry)) As Boolean
  overload: GeoJSON.Net.Feature.Feature`1.op_Equality*
  nameWithType.vb: Feature(Of TGeometry).Equality(Feature(Of TGeometry), Feature(Of TGeometry))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry).Equality(GeoJSON.Net.Feature.Feature(Of TGeometry), GeoJSON.Net.Feature.Feature(Of TGeometry))
  name.vb: Equality(Feature(Of TGeometry), Feature(Of TGeometry))
- uid: GeoJSON.Net.Feature.Feature`1.op_Inequality(GeoJSON.Net.Feature.Feature{`0},GeoJSON.Net.Feature.Feature{`0})
  commentId: M:GeoJSON.Net.Feature.Feature`1.op_Inequality(GeoJSON.Net.Feature.Feature{`0},GeoJSON.Net.Feature.Feature{`0})
  id: op_Inequality(GeoJSON.Net.Feature.Feature{`0},GeoJSON.Net.Feature.Feature{`0})
  parent: GeoJSON.Net.Feature.Feature`1
  langs:
  - csharp
  - vb
  name: Inequality(Feature<TGeometry>, Feature<TGeometry>)
  nameWithType: Feature<TGeometry>.Inequality(Feature<TGeometry>, Feature<TGeometry>)
  fullName: GeoJSON.Net.Feature.Feature<TGeometry>.Inequality(GeoJSON.Net.Feature.Feature<TGeometry>, GeoJSON.Net.Feature.Feature<TGeometry>)
  type: Operator
  source:
    remote:
      path: Assets/GeoJSON.Net/Feature/Feature.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Inequality
    path: ../Assets/GeoJSON.Net/Feature/Feature.cs
    startLine: 212
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.Feature
  syntax:
    content: public static bool operator !=(Feature<TGeometry> left, Feature<TGeometry> right)
    parameters:
    - id: left
      type: GeoJSON.Net.Feature.Feature`1
    - id: right
      type: GeoJSON.Net.Feature.Feature`1
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As Feature(Of TGeometry), right As Feature(Of TGeometry)) As Boolean
  overload: GeoJSON.Net.Feature.Feature`1.op_Inequality*
  nameWithType.vb: Feature(Of TGeometry).Inequality(Feature(Of TGeometry), Feature(Of TGeometry))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry).Inequality(GeoJSON.Net.Feature.Feature(Of TGeometry), GeoJSON.Net.Feature.Feature(Of TGeometry))
  name.vb: Inequality(Feature(Of TGeometry), Feature(Of TGeometry))
references:
- uid: GeoJSON.Net.Feature
  commentId: N:GeoJSON.Net.Feature
  name: GeoJSON.Net.Feature
  nameWithType: GeoJSON.Net.Feature
  fullName: GeoJSON.Net.Feature
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: GeoJSON.Net.GeoJSONObject
  commentId: T:GeoJSON.Net.GeoJSONObject
  parent: GeoJSON.Net
  name: GeoJSONObject
  nameWithType: GeoJSONObject
  fullName: GeoJSON.Net.GeoJSONObject
- uid: GeoJSON.Net.Feature.Feature{{TGeometry},System.Collections.Generic.IDictionary{System.String,System.Object}}
  commentId: T:GeoJSON.Net.Feature.Feature{`0,System.Collections.Generic.IDictionary{System.String,System.Object}}
  parent: GeoJSON.Net.Feature
  definition: GeoJSON.Net.Feature.Feature`2
  name: Feature<TGeometry, IDictionary<String, Object>>
  nameWithType: Feature<TGeometry, IDictionary<String, Object>>
  fullName: GeoJSON.Net.Feature.Feature<TGeometry, System.Collections.Generic.IDictionary<System.String, System.Object>>
  nameWithType.vb: Feature(Of TGeometry, IDictionary(Of String, Object))
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: Feature(Of TGeometry, IDictionary(Of String, Object))
  spec.csharp:
  - uid: GeoJSON.Net.Feature.Feature`2
    name: Feature
    nameWithType: Feature
    fullName: GeoJSON.Net.Feature.Feature
  - name: <
    nameWithType: <
    fullName: <
  - name: TGeometry
    nameWithType: TGeometry
    fullName: TGeometry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: GeoJSON.Net.Feature.Feature`2
    name: Feature
    nameWithType: Feature
    fullName: GeoJSON.Net.Feature.Feature
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TGeometry
    nameWithType: TGeometry
    fullName: TGeometry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: GeoJSON.Net.IGeoJSONObject
  commentId: T:GeoJSON.Net.IGeoJSONObject
  parent: GeoJSON.Net
  name: IGeoJSONObject
  nameWithType: IGeoJSONObject
  fullName: GeoJSON.Net.IGeoJSONObject
- uid: GeoJSON.Net.Feature.Feature{{TGeometry},System.Collections.Generic.IDictionary{System.String,System.Object}}.Type
  commentId: P:GeoJSON.Net.Feature.Feature{`0,System.Collections.Generic.IDictionary{System.String,System.Object}}.Type
  parent: GeoJSON.Net.Feature.Feature{{TGeometry},System.Collections.Generic.IDictionary{System.String,System.Object}}
  definition: GeoJSON.Net.Feature.Feature`2.Type
  name: Type
  nameWithType: Feature<TGeometry, IDictionary<String, Object>>.Type
  fullName: GeoJSON.Net.Feature.Feature<TGeometry, System.Collections.Generic.IDictionary<System.String, System.Object>>.Type
  nameWithType.vb: Feature(Of TGeometry, IDictionary(Of String, Object)).Type
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry, System.Collections.Generic.IDictionary(Of System.String, System.Object)).Type
- uid: GeoJSON.Net.Feature.Feature{{TGeometry},System.Collections.Generic.IDictionary{System.String,System.Object}}.Id
  commentId: P:GeoJSON.Net.Feature.Feature{`0,System.Collections.Generic.IDictionary{System.String,System.Object}}.Id
  parent: GeoJSON.Net.Feature.Feature{{TGeometry},System.Collections.Generic.IDictionary{System.String,System.Object}}
  definition: GeoJSON.Net.Feature.Feature`2.Id
  name: Id
  nameWithType: Feature<TGeometry, IDictionary<String, Object>>.Id
  fullName: GeoJSON.Net.Feature.Feature<TGeometry, System.Collections.Generic.IDictionary<System.String, System.Object>>.Id
  nameWithType.vb: Feature(Of TGeometry, IDictionary(Of String, Object)).Id
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry, System.Collections.Generic.IDictionary(Of System.String, System.Object)).Id
- uid: GeoJSON.Net.Feature.Feature{{TGeometry},System.Collections.Generic.IDictionary{System.String,System.Object}}.Geometry
  commentId: P:GeoJSON.Net.Feature.Feature{`0,System.Collections.Generic.IDictionary{System.String,System.Object}}.Geometry
  parent: GeoJSON.Net.Feature.Feature{{TGeometry},System.Collections.Generic.IDictionary{System.String,System.Object}}
  definition: GeoJSON.Net.Feature.Feature`2.Geometry
  name: Geometry
  nameWithType: Feature<TGeometry, IDictionary<String, Object>>.Geometry
  fullName: GeoJSON.Net.Feature.Feature<TGeometry, System.Collections.Generic.IDictionary<System.String, System.Object>>.Geometry
  nameWithType.vb: Feature(Of TGeometry, IDictionary(Of String, Object)).Geometry
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry, System.Collections.Generic.IDictionary(Of System.String, System.Object)).Geometry
- uid: GeoJSON.Net.Feature.Feature{{TGeometry},System.Collections.Generic.IDictionary{System.String,System.Object}}.Properties
  commentId: P:GeoJSON.Net.Feature.Feature{`0,System.Collections.Generic.IDictionary{System.String,System.Object}}.Properties
  parent: GeoJSON.Net.Feature.Feature{{TGeometry},System.Collections.Generic.IDictionary{System.String,System.Object}}
  definition: GeoJSON.Net.Feature.Feature`2.Properties
  name: Properties
  nameWithType: Feature<TGeometry, IDictionary<String, Object>>.Properties
  fullName: GeoJSON.Net.Feature.Feature<TGeometry, System.Collections.Generic.IDictionary<System.String, System.Object>>.Properties
  nameWithType.vb: Feature(Of TGeometry, IDictionary(Of String, Object)).Properties
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry, System.Collections.Generic.IDictionary(Of System.String, System.Object)).Properties
- uid: GeoJSON.Net.Feature.Feature{{TGeometry},System.Collections.Generic.IDictionary{System.String,System.Object}}.Equals(GeoJSON.Net.Feature.Feature{{TGeometry},System.Collections.Generic.IDictionary{System.String,System.Object}})
  commentId: M:GeoJSON.Net.Feature.Feature{`0,System.Collections.Generic.IDictionary{System.String,System.Object}}.Equals(GeoJSON.Net.Feature.Feature{`0,System.Collections.Generic.IDictionary{System.String,System.Object}})
  parent: GeoJSON.Net.Feature.Feature{{TGeometry},System.Collections.Generic.IDictionary{System.String,System.Object}}
  definition: GeoJSON.Net.Feature.Feature`2.Equals(GeoJSON.Net.Feature.Feature{`0,`1})
  name: Equals(Feature<TGeometry, IDictionary<String, Object>>)
  nameWithType: Feature<TGeometry, IDictionary<String, Object>>.Equals(Feature<TGeometry, IDictionary<String, Object>>)
  fullName: GeoJSON.Net.Feature.Feature<TGeometry, System.Collections.Generic.IDictionary<System.String, System.Object>>.Equals(GeoJSON.Net.Feature.Feature<TGeometry, System.Collections.Generic.IDictionary<System.String, System.Object>>)
  nameWithType.vb: Feature(Of TGeometry, IDictionary(Of String, Object)).Equals(Feature(Of TGeometry, IDictionary(Of String, Object)))
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry, System.Collections.Generic.IDictionary(Of System.String, System.Object)).Equals(GeoJSON.Net.Feature.Feature(Of TGeometry, System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: Equals(Feature(Of TGeometry, IDictionary(Of String, Object)))
  spec.csharp:
  - uid: GeoJSON.Net.Feature.Feature`2.Equals(GeoJSON.Net.Feature.Feature{`0,`1})
    name: Equals
    nameWithType: Feature<TGeometry, IDictionary<String, Object>>.Equals
    fullName: GeoJSON.Net.Feature.Feature<TGeometry, System.Collections.Generic.IDictionary<System.String, System.Object>>.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: GeoJSON.Net.Feature.Feature`2
    name: Feature
    nameWithType: Feature
    fullName: GeoJSON.Net.Feature.Feature
  - name: <
    nameWithType: <
    fullName: <
  - name: TGeometry
    nameWithType: TGeometry
    fullName: TGeometry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GeoJSON.Net.Feature.Feature`2.Equals(GeoJSON.Net.Feature.Feature{`0,`1})
    name: Equals
    nameWithType: Feature(Of TGeometry, IDictionary(Of String, Object)).Equals
    fullName: GeoJSON.Net.Feature.Feature(Of TGeometry, System.Collections.Generic.IDictionary(Of System.String, System.Object)).Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: GeoJSON.Net.Feature.Feature`2
    name: Feature
    nameWithType: Feature
    fullName: GeoJSON.Net.Feature.Feature
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TGeometry
    nameWithType: TGeometry
    fullName: TGeometry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: GeoJSON.Net.Feature.Feature{{TGeometry},System.Collections.Generic.IDictionary{System.String,System.Object}}.Equals(System.Object)
  commentId: M:GeoJSON.Net.Feature.Feature{`0,System.Collections.Generic.IDictionary{System.String,System.Object}}.Equals(System.Object)
  parent: GeoJSON.Net.Feature.Feature{{TGeometry},System.Collections.Generic.IDictionary{System.String,System.Object}}
  definition: GeoJSON.Net.Feature.Feature`2.Equals(System.Object)
  name: Equals(Object)
  nameWithType: Feature<TGeometry, IDictionary<String, Object>>.Equals(Object)
  fullName: GeoJSON.Net.Feature.Feature<TGeometry, System.Collections.Generic.IDictionary<System.String, System.Object>>.Equals(System.Object)
  nameWithType.vb: Feature(Of TGeometry, IDictionary(Of String, Object)).Equals(Object)
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry, System.Collections.Generic.IDictionary(Of System.String, System.Object)).Equals(System.Object)
  spec.csharp:
  - uid: GeoJSON.Net.Feature.Feature`2.Equals(System.Object)
    name: Equals
    nameWithType: Feature<TGeometry, IDictionary<String, Object>>.Equals
    fullName: GeoJSON.Net.Feature.Feature<TGeometry, System.Collections.Generic.IDictionary<System.String, System.Object>>.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GeoJSON.Net.Feature.Feature`2.Equals(System.Object)
    name: Equals
    nameWithType: Feature(Of TGeometry, IDictionary(Of String, Object)).Equals
    fullName: GeoJSON.Net.Feature.Feature(Of TGeometry, System.Collections.Generic.IDictionary(Of System.String, System.Object)).Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GeoJSON.Net.Feature.Feature{{TGeometry},System.Collections.Generic.IDictionary{System.String,System.Object}}.GetHashCode
  commentId: M:GeoJSON.Net.Feature.Feature{`0,System.Collections.Generic.IDictionary{System.String,System.Object}}.GetHashCode
  parent: GeoJSON.Net.Feature.Feature{{TGeometry},System.Collections.Generic.IDictionary{System.String,System.Object}}
  definition: GeoJSON.Net.Feature.Feature`2.GetHashCode
  name: GetHashCode()
  nameWithType: Feature<TGeometry, IDictionary<String, Object>>.GetHashCode()
  fullName: GeoJSON.Net.Feature.Feature<TGeometry, System.Collections.Generic.IDictionary<System.String, System.Object>>.GetHashCode()
  nameWithType.vb: Feature(Of TGeometry, IDictionary(Of String, Object)).GetHashCode()
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry, System.Collections.Generic.IDictionary(Of System.String, System.Object)).GetHashCode()
  spec.csharp:
  - uid: GeoJSON.Net.Feature.Feature`2.GetHashCode
    name: GetHashCode
    nameWithType: Feature<TGeometry, IDictionary<String, Object>>.GetHashCode
    fullName: GeoJSON.Net.Feature.Feature<TGeometry, System.Collections.Generic.IDictionary<System.String, System.Object>>.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GeoJSON.Net.Feature.Feature`2.GetHashCode
    name: GetHashCode
    nameWithType: Feature(Of TGeometry, IDictionary(Of String, Object)).GetHashCode
    fullName: GeoJSON.Net.Feature.Feature(Of TGeometry, System.Collections.Generic.IDictionary(Of System.String, System.Object)).GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GeoJSON.Net.GeoJSONObject.BoundingBoxes
  commentId: P:GeoJSON.Net.GeoJSONObject.BoundingBoxes
  parent: GeoJSON.Net.GeoJSONObject
  name: BoundingBoxes
  nameWithType: GeoJSONObject.BoundingBoxes
  fullName: GeoJSON.Net.GeoJSONObject.BoundingBoxes
- uid: GeoJSON.Net.GeoJSONObject.CRS
  commentId: P:GeoJSON.Net.GeoJSONObject.CRS
  parent: GeoJSON.Net.GeoJSONObject
  name: CRS
  nameWithType: GeoJSONObject.CRS
  fullName: GeoJSON.Net.GeoJSONObject.CRS
- uid: GeoJSON.Net.GeoJSONObject.Type
  commentId: P:GeoJSON.Net.GeoJSONObject.Type
  parent: GeoJSON.Net.GeoJSONObject
  name: Type
  nameWithType: GeoJSONObject.Type
  fullName: GeoJSON.Net.GeoJSONObject.Type
- uid: GeoJSON.Net.GeoJSONObject.Equals(GeoJSON.Net.GeoJSONObject)
  commentId: M:GeoJSON.Net.GeoJSONObject.Equals(GeoJSON.Net.GeoJSONObject)
  parent: GeoJSON.Net.GeoJSONObject
  name: Equals(GeoJSONObject)
  nameWithType: GeoJSONObject.Equals(GeoJSONObject)
  fullName: GeoJSON.Net.GeoJSONObject.Equals(GeoJSON.Net.GeoJSONObject)
  spec.csharp:
  - uid: GeoJSON.Net.GeoJSONObject.Equals(GeoJSON.Net.GeoJSONObject)
    name: Equals
    nameWithType: GeoJSONObject.Equals
    fullName: GeoJSON.Net.GeoJSONObject.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: GeoJSON.Net.GeoJSONObject
    name: GeoJSONObject
    nameWithType: GeoJSONObject
    fullName: GeoJSON.Net.GeoJSONObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GeoJSON.Net.GeoJSONObject.Equals(GeoJSON.Net.GeoJSONObject)
    name: Equals
    nameWithType: GeoJSONObject.Equals
    fullName: GeoJSON.Net.GeoJSONObject.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: GeoJSON.Net.GeoJSONObject
    name: GeoJSONObject
    nameWithType: GeoJSONObject
    fullName: GeoJSON.Net.GeoJSONObject
  - name: )
    nameWithType: )
    fullName: )
- uid: GeoJSON.Net.GeoJSONObject.Equals(GeoJSON.Net.GeoJSONObject,GeoJSON.Net.GeoJSONObject)
  commentId: M:GeoJSON.Net.GeoJSONObject.Equals(GeoJSON.Net.GeoJSONObject,GeoJSON.Net.GeoJSONObject)
  parent: GeoJSON.Net.GeoJSONObject
  name: Equals(GeoJSONObject, GeoJSONObject)
  nameWithType: GeoJSONObject.Equals(GeoJSONObject, GeoJSONObject)
  fullName: GeoJSON.Net.GeoJSONObject.Equals(GeoJSON.Net.GeoJSONObject, GeoJSON.Net.GeoJSONObject)
  spec.csharp:
  - uid: GeoJSON.Net.GeoJSONObject.Equals(GeoJSON.Net.GeoJSONObject,GeoJSON.Net.GeoJSONObject)
    name: Equals
    nameWithType: GeoJSONObject.Equals
    fullName: GeoJSON.Net.GeoJSONObject.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: GeoJSON.Net.GeoJSONObject
    name: GeoJSONObject
    nameWithType: GeoJSONObject
    fullName: GeoJSON.Net.GeoJSONObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GeoJSON.Net.GeoJSONObject
    name: GeoJSONObject
    nameWithType: GeoJSONObject
    fullName: GeoJSON.Net.GeoJSONObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GeoJSON.Net.GeoJSONObject.Equals(GeoJSON.Net.GeoJSONObject,GeoJSON.Net.GeoJSONObject)
    name: Equals
    nameWithType: GeoJSONObject.Equals
    fullName: GeoJSON.Net.GeoJSONObject.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: GeoJSON.Net.GeoJSONObject
    name: GeoJSONObject
    nameWithType: GeoJSONObject
    fullName: GeoJSON.Net.GeoJSONObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GeoJSON.Net.GeoJSONObject
    name: GeoJSONObject
    nameWithType: GeoJSONObject
    fullName: GeoJSON.Net.GeoJSONObject
  - name: )
    nameWithType: )
    fullName: )
- uid: GeoJSON.Net.GeoJSONObject.GetHashCode(GeoJSON.Net.GeoJSONObject)
  commentId: M:GeoJSON.Net.GeoJSONObject.GetHashCode(GeoJSON.Net.GeoJSONObject)
  parent: GeoJSON.Net.GeoJSONObject
  name: GetHashCode(GeoJSONObject)
  nameWithType: GeoJSONObject.GetHashCode(GeoJSONObject)
  fullName: GeoJSON.Net.GeoJSONObject.GetHashCode(GeoJSON.Net.GeoJSONObject)
  spec.csharp:
  - uid: GeoJSON.Net.GeoJSONObject.GetHashCode(GeoJSON.Net.GeoJSONObject)
    name: GetHashCode
    nameWithType: GeoJSONObject.GetHashCode
    fullName: GeoJSON.Net.GeoJSONObject.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - uid: GeoJSON.Net.GeoJSONObject
    name: GeoJSONObject
    nameWithType: GeoJSONObject
    fullName: GeoJSON.Net.GeoJSONObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GeoJSON.Net.GeoJSONObject.GetHashCode(GeoJSON.Net.GeoJSONObject)
    name: GetHashCode
    nameWithType: GeoJSONObject.GetHashCode
    fullName: GeoJSON.Net.GeoJSONObject.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - uid: GeoJSON.Net.GeoJSONObject
    name: GeoJSONObject
    nameWithType: GeoJSONObject
    fullName: GeoJSON.Net.GeoJSONObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: GeoJSON.Net
  commentId: N:GeoJSON.Net
  name: GeoJSON.Net
  nameWithType: GeoJSON.Net
  fullName: GeoJSON.Net
- uid: GeoJSON.Net.Feature.Feature`2
  commentId: T:GeoJSON.Net.Feature.Feature`2
  parent: GeoJSON.Net.Feature
  name: Feature<TGeometry, TProps>
  nameWithType: Feature<TGeometry, TProps>
  fullName: GeoJSON.Net.Feature.Feature<TGeometry, TProps>
  nameWithType.vb: Feature(Of TGeometry, TProps)
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry, TProps)
  name.vb: Feature(Of TGeometry, TProps)
  spec.csharp:
  - uid: GeoJSON.Net.Feature.Feature`2
    name: Feature
    nameWithType: Feature
    fullName: GeoJSON.Net.Feature.Feature
  - name: <
    nameWithType: <
    fullName: <
  - name: TGeometry
    nameWithType: TGeometry
    fullName: TGeometry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProps
    nameWithType: TProps
    fullName: TProps
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: GeoJSON.Net.Feature.Feature`2
    name: Feature
    nameWithType: Feature
    fullName: GeoJSON.Net.Feature.Feature
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TGeometry
    nameWithType: TGeometry
    fullName: TGeometry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProps
    nameWithType: TProps
    fullName: TProps
  - name: )
    nameWithType: )
    fullName: )
- uid: GeoJSON.Net.Feature.Feature`2.Type
  commentId: P:GeoJSON.Net.Feature.Feature`2.Type
  name: Type
  nameWithType: Feature<TGeometry, TProps>.Type
  fullName: GeoJSON.Net.Feature.Feature<TGeometry, TProps>.Type
  nameWithType.vb: Feature(Of TGeometry, TProps).Type
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry, TProps).Type
- uid: GeoJSON.Net.Feature.Feature`2.Id
  commentId: P:GeoJSON.Net.Feature.Feature`2.Id
  name: Id
  nameWithType: Feature<TGeometry, TProps>.Id
  fullName: GeoJSON.Net.Feature.Feature<TGeometry, TProps>.Id
  nameWithType.vb: Feature(Of TGeometry, TProps).Id
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry, TProps).Id
- uid: GeoJSON.Net.Feature.Feature`2.Geometry
  commentId: P:GeoJSON.Net.Feature.Feature`2.Geometry
  name: Geometry
  nameWithType: Feature<TGeometry, TProps>.Geometry
  fullName: GeoJSON.Net.Feature.Feature<TGeometry, TProps>.Geometry
  nameWithType.vb: Feature(Of TGeometry, TProps).Geometry
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry, TProps).Geometry
- uid: GeoJSON.Net.Feature.Feature`2.Properties
  commentId: P:GeoJSON.Net.Feature.Feature`2.Properties
  name: Properties
  nameWithType: Feature<TGeometry, TProps>.Properties
  fullName: GeoJSON.Net.Feature.Feature<TGeometry, TProps>.Properties
  nameWithType.vb: Feature(Of TGeometry, TProps).Properties
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry, TProps).Properties
- uid: GeoJSON.Net.Feature.Feature`2.Equals(GeoJSON.Net.Feature.Feature{`0,`1})
  commentId: M:GeoJSON.Net.Feature.Feature`2.Equals(GeoJSON.Net.Feature.Feature{`0,`1})
  name: Equals(Feature<TGeometry, TProps>)
  nameWithType: Feature<TGeometry, TProps>.Equals(Feature<TGeometry, TProps>)
  fullName: GeoJSON.Net.Feature.Feature<TGeometry, TProps>.Equals(GeoJSON.Net.Feature.Feature<TGeometry, TProps>)
  nameWithType.vb: Feature(Of TGeometry, TProps).Equals(Feature(Of TGeometry, TProps))
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry, TProps).Equals(GeoJSON.Net.Feature.Feature(Of TGeometry, TProps))
  name.vb: Equals(Feature(Of TGeometry, TProps))
  spec.csharp:
  - uid: GeoJSON.Net.Feature.Feature`2.Equals(GeoJSON.Net.Feature.Feature{`0,`1})
    name: Equals
    nameWithType: Feature<TGeometry, TProps>.Equals
    fullName: GeoJSON.Net.Feature.Feature<TGeometry, TProps>.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: GeoJSON.Net.Feature.Feature`2
    name: Feature
    nameWithType: Feature
    fullName: GeoJSON.Net.Feature.Feature
  - name: <
    nameWithType: <
    fullName: <
  - name: TGeometry
    nameWithType: TGeometry
    fullName: TGeometry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProps
    nameWithType: TProps
    fullName: TProps
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GeoJSON.Net.Feature.Feature`2.Equals(GeoJSON.Net.Feature.Feature{`0,`1})
    name: Equals
    nameWithType: Feature(Of TGeometry, TProps).Equals
    fullName: GeoJSON.Net.Feature.Feature(Of TGeometry, TProps).Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: GeoJSON.Net.Feature.Feature`2
    name: Feature
    nameWithType: Feature
    fullName: GeoJSON.Net.Feature.Feature
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TGeometry
    nameWithType: TGeometry
    fullName: TGeometry
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProps
    nameWithType: TProps
    fullName: TProps
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: GeoJSON.Net.Feature.Feature`2.Equals(System.Object)
  commentId: M:GeoJSON.Net.Feature.Feature`2.Equals(System.Object)
  isExternal: true
  name: Equals(Object)
  nameWithType: Feature<TGeometry, TProps>.Equals(Object)
  fullName: GeoJSON.Net.Feature.Feature<TGeometry, TProps>.Equals(System.Object)
  nameWithType.vb: Feature(Of TGeometry, TProps).Equals(Object)
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry, TProps).Equals(System.Object)
  spec.csharp:
  - uid: GeoJSON.Net.Feature.Feature`2.Equals(System.Object)
    name: Equals
    nameWithType: Feature<TGeometry, TProps>.Equals
    fullName: GeoJSON.Net.Feature.Feature<TGeometry, TProps>.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GeoJSON.Net.Feature.Feature`2.Equals(System.Object)
    name: Equals
    nameWithType: Feature(Of TGeometry, TProps).Equals
    fullName: GeoJSON.Net.Feature.Feature(Of TGeometry, TProps).Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GeoJSON.Net.Feature.Feature`2.GetHashCode
  commentId: M:GeoJSON.Net.Feature.Feature`2.GetHashCode
  name: GetHashCode()
  nameWithType: Feature<TGeometry, TProps>.GetHashCode()
  fullName: GeoJSON.Net.Feature.Feature<TGeometry, TProps>.GetHashCode()
  nameWithType.vb: Feature(Of TGeometry, TProps).GetHashCode()
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry, TProps).GetHashCode()
  spec.csharp:
  - uid: GeoJSON.Net.Feature.Feature`2.GetHashCode
    name: GetHashCode
    nameWithType: Feature<TGeometry, TProps>.GetHashCode
    fullName: GeoJSON.Net.Feature.Feature<TGeometry, TProps>.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GeoJSON.Net.Feature.Feature`2.GetHashCode
    name: GetHashCode
    nameWithType: Feature(Of TGeometry, TProps).GetHashCode
    fullName: GeoJSON.Net.Feature.Feature(Of TGeometry, TProps).GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GeoJSON.Net.Feature.Feature
  commentId: T:GeoJSON.Net.Feature.Feature
  name: Feature
  nameWithType: Feature
  fullName: GeoJSON.Net.Feature.Feature
- uid: GeoJSON.Net.Feature.Feature`1.#ctor*
  commentId: Overload:GeoJSON.Net.Feature.Feature`1.#ctor
  name: Feature
  nameWithType: Feature<TGeometry>.Feature
  fullName: GeoJSON.Net.Feature.Feature<TGeometry>.Feature
  nameWithType.vb: Feature(Of TGeometry).Feature
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry).Feature
- uid: '{TGeometry}'
  commentId: '!:TGeometry'
  definition: TGeometry
  name: TGeometry
  nameWithType: TGeometry
  fullName: TGeometry
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TGeometry
  name: TGeometry
  nameWithType: TGeometry
  fullName: TGeometry
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: GeoJSON.Net.Feature.Feature`1.Equals*
  commentId: Overload:GeoJSON.Net.Feature.Feature`1.Equals
  name: Equals
  nameWithType: Feature<TGeometry>.Equals
  fullName: GeoJSON.Net.Feature.Feature<TGeometry>.Equals
  nameWithType.vb: Feature(Of TGeometry).Equals
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry).Equals
- uid: GeoJSON.Net.Feature.Feature`1
  commentId: T:GeoJSON.Net.Feature.Feature`1
  parent: GeoJSON.Net.Feature
  name: Feature<TGeometry>
  nameWithType: Feature<TGeometry>
  fullName: GeoJSON.Net.Feature.Feature<TGeometry>
  nameWithType.vb: Feature(Of TGeometry)
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry)
  name.vb: Feature(Of TGeometry)
  spec.csharp:
  - uid: GeoJSON.Net.Feature.Feature`1
    name: Feature
    nameWithType: Feature
    fullName: GeoJSON.Net.Feature.Feature
  - name: <
    nameWithType: <
    fullName: <
  - name: TGeometry
    nameWithType: TGeometry
    fullName: TGeometry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: GeoJSON.Net.Feature.Feature`1
    name: Feature
    nameWithType: Feature
    fullName: GeoJSON.Net.Feature.Feature
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TGeometry
    nameWithType: TGeometry
    fullName: TGeometry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: GeoJSON.Net.Feature.Feature`1.GetHashCode*
  commentId: Overload:GeoJSON.Net.Feature.Feature`1.GetHashCode
  name: GetHashCode
  nameWithType: Feature<TGeometry>.GetHashCode
  fullName: GeoJSON.Net.Feature.Feature<TGeometry>.GetHashCode
  nameWithType.vb: Feature(Of TGeometry).GetHashCode
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry).GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: GeoJSON.Net.Feature.Feature`1.op_Equality*
  commentId: Overload:GeoJSON.Net.Feature.Feature`1.op_Equality
  name: Equality
  nameWithType: Feature<TGeometry>.Equality
  fullName: GeoJSON.Net.Feature.Feature<TGeometry>.Equality
  nameWithType.vb: Feature(Of TGeometry).Equality
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry).Equality
- uid: GeoJSON.Net.Feature.Feature`1.op_Inequality*
  commentId: Overload:GeoJSON.Net.Feature.Feature`1.op_Inequality
  name: Inequality
  nameWithType: Feature<TGeometry>.Inequality
  fullName: GeoJSON.Net.Feature.Feature<TGeometry>.Inequality
  nameWithType.vb: Feature(Of TGeometry).Inequality
  fullName.vb: GeoJSON.Net.Feature.Feature(Of TGeometry).Inequality

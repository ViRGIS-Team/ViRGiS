### YamlMime:ManagedReference
items:
- uid: GeoJSON.Net.Converters.TypeExtensions
  commentId: T:GeoJSON.Net.Converters.TypeExtensions
  id: TypeExtensions
  parent: GeoJSON.Net.Converters
  children:
  - GeoJSON.Net.Converters.TypeExtensions.IsAssignableFromType(System.Type,System.Type)
  langs:
  - csharp
  - vb
  name: TypeExtensions
  nameWithType: TypeExtensions
  fullName: GeoJSON.Net.Converters.TypeExtensions
  type: Class
  source:
    remote:
      path: Assets/GeoJSON.Net/Converters/TypeExtensions.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: TypeExtensions
    path: ../Assets/GeoJSON.Net/Converters/TypeExtensions.cs
    startLine: 7
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.Converters
  syntax:
    content: public static class TypeExtensions
    content.vb: Public Module TypeExtensions
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: GeoJSON.Net.Converters.TypeExtensions.IsAssignableFromType(System.Type,System.Type)
  commentId: M:GeoJSON.Net.Converters.TypeExtensions.IsAssignableFromType(System.Type,System.Type)
  id: IsAssignableFromType(System.Type,System.Type)
  isExtensionMethod: true
  parent: GeoJSON.Net.Converters.TypeExtensions
  langs:
  - csharp
  - vb
  name: IsAssignableFromType(Type, Type)
  nameWithType: TypeExtensions.IsAssignableFromType(Type, Type)
  fullName: GeoJSON.Net.Converters.TypeExtensions.IsAssignableFromType(System.Type, System.Type)
  type: Method
  source:
    remote:
      path: Assets/GeoJSON.Net/Converters/TypeExtensions.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IsAssignableFromType
    path: ../Assets/GeoJSON.Net/Converters/TypeExtensions.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: GeoJSON.Net.Converters
  summary: "\nEncapsulates the framework-dependent preprocessor guards.\n"
  example: []
  syntax:
    content: public static bool IsAssignableFromType(this Type self, Type other)
    parameters:
    - id: self
      type: System.Type
    - id: other
      type: System.Type
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsAssignableFromType(self As Type, other As Type) As Boolean
  overload: GeoJSON.Net.Converters.TypeExtensions.IsAssignableFromType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: GeoJSON.Net.Converters
  commentId: N:GeoJSON.Net.Converters
  name: GeoJSON.Net.Converters
  nameWithType: GeoJSON.Net.Converters
  fullName: GeoJSON.Net.Converters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: GeoJSON.Net.Converters.TypeExtensions.IsAssignableFromType*
  commentId: Overload:GeoJSON.Net.Converters.TypeExtensions.IsAssignableFromType
  name: IsAssignableFromType
  nameWithType: TypeExtensions.IsAssignableFromType
  fullName: GeoJSON.Net.Converters.TypeExtensions.IsAssignableFromType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean

### YamlMime:ManagedReference
items:
- uid: g3.MathUtil
  commentId: T:g3.MathUtil
  id: MathUtil
  parent: g3
  children:
  - g3.MathUtil.Area(g3.Vector3d,g3.Vector3d,g3.Vector3d)
  - g3.MathUtil.Area(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@)
  - g3.MathUtil.AspectRatio(g3.Vector3d,g3.Vector3d,g3.Vector3d)
  - g3.MathUtil.AspectRatio(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@)
  - g3.MathUtil.Atan2Positive(System.Double,System.Double)
  - g3.MathUtil.BarycentricCoords(g3.Vector2d,g3.Vector2d,g3.Vector2d,g3.Vector2d)
  - g3.MathUtil.BarycentricCoords(g3.Vector3d,g3.Vector3d,g3.Vector3d,g3.Vector3d)
  - g3.MathUtil.BarycentricCoords(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@,g3.Vector3d@)
  - g3.MathUtil.Clamp(System.Double,System.Double,System.Double)
  - g3.MathUtil.Clamp(System.Int32,System.Int32,System.Int32)
  - g3.MathUtil.Clamp(System.Single,System.Single,System.Single)
  - g3.MathUtil.Clamp``1(``0,``0,``0)
  - g3.MathUtil.ClampAngleDeg(System.Double,System.Double,System.Double)
  - g3.MathUtil.ClampAngleRad(System.Double,System.Double,System.Double)
  - g3.MathUtil.Deg2Rad
  - g3.MathUtil.Deg2Radf
  - g3.MathUtil.Epsilon
  - g3.MathUtil.EpsilonEqual(System.Double,System.Double,System.Double)
  - g3.MathUtil.EpsilonEqual(System.Single,System.Single,System.Single)
  - g3.MathUtil.Epsilonf
  - g3.MathUtil.FastNormalArea(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@,System.Double@)
  - g3.MathUtil.FastNormalDirection(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@)
  - g3.MathUtil.FourPI
  - g3.MathUtil.HalfPI
  - g3.MathUtil.HalfPIf
  - g3.MathUtil.InRange(System.Double,System.Double,System.Double)
  - g3.MathUtil.InRange(System.Int32,System.Int32,System.Int32)
  - g3.MathUtil.InRange(System.Single,System.Single,System.Single)
  - g3.MathUtil.InvSqrt(System.Double)
  - g3.MathUtil.IsFinite(System.Double)
  - g3.MathUtil.IsFinite(System.Single)
  - g3.MathUtil.IsLeft(g3.Vector2d,g3.Vector2d,g3.Vector2d)
  - g3.MathUtil.IsLeft(g3.Vector2d@,g3.Vector2d@,g3.Vector2d@)
  - g3.MathUtil.IsObtuse(g3.Vector3d,g3.Vector3d,g3.Vector3d)
  - g3.MathUtil.Lerp(System.Double,System.Double,System.Double)
  - g3.MathUtil.Lerp(System.Single,System.Single,System.Single)
  - g3.MathUtil.LinearRampT(System.Single,System.Single,System.Single)
  - g3.MathUtil.Max(System.Double,System.Double,System.Double)
  - g3.MathUtil.Max(System.Int32,System.Int32,System.Int32)
  - g3.MathUtil.Max(System.Single,System.Single,System.Single)
  - g3.MathUtil.Min(System.Double,System.Double,System.Double)
  - g3.MathUtil.Min(System.Int32,System.Int32,System.Int32)
  - g3.MathUtil.Min(System.Single,System.Single,System.Single)
  - g3.MathUtil.MinMax(System.Double,System.Double,System.Double,System.Double@,System.Double@)
  - g3.MathUtil.ModuloClamp(System.Int32,System.Int32)
  - g3.MathUtil.ModuloIteration(System.Int32,System.Int32)
  - g3.MathUtil.MostParallelAxis(g3.Frame3f,g3.Vector3f)
  - g3.MathUtil.Normal(g3.Vector3d,g3.Vector3d,g3.Vector3d)
  - g3.MathUtil.Normal(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@)
  - g3.MathUtil.PIf
  - g3.MathUtil.PlaneAngleD(g3.Vector3d,g3.Vector3d,System.Int32)
  - g3.MathUtil.PlaneAngleD(g3.Vector3f,g3.Vector3f,System.Int32)
  - g3.MathUtil.PlaneAngleSignedD(g3.Vector2d,g3.Vector2d)
  - g3.MathUtil.PlaneAngleSignedD(g3.Vector2f,g3.Vector2f)
  - g3.MathUtil.PlaneAngleSignedD(g3.Vector3d,g3.Vector3d,g3.Vector3d)
  - g3.MathUtil.PlaneAngleSignedD(g3.Vector3d,g3.Vector3d,System.Int32)
  - g3.MathUtil.PlaneAngleSignedD(g3.Vector3f,g3.Vector3f,g3.Vector3f)
  - g3.MathUtil.PlaneAngleSignedD(g3.Vector3f,g3.Vector3f,System.Int32)
  - g3.MathUtil.PowerOf10(System.Int32)
  - g3.MathUtil.Rad2Deg
  - g3.MathUtil.Rad2Degf
  - g3.MathUtil.RangeClamp(System.Double,System.Double)
  - g3.MathUtil.RangeClamp(System.Single,System.Single)
  - g3.MathUtil.SignedClamp(System.Double,System.Double)
  - g3.MathUtil.SignedClamp(System.Double,System.Double,System.Double)
  - g3.MathUtil.SignedClamp(System.Single,System.Single)
  - g3.MathUtil.SignedClamp(System.Single,System.Single,System.Single)
  - g3.MathUtil.SmoothInterp(System.Double,System.Double,System.Double)
  - g3.MathUtil.SmoothInterp(System.Single,System.Single,System.Single)
  - g3.MathUtil.SmoothRise0To1(System.Single,System.Single,System.Single,System.Single)
  - g3.MathUtil.SmoothStep(System.Double,System.Double,System.Double)
  - g3.MathUtil.SmoothStep(System.Single,System.Single,System.Single)
  - g3.MathUtil.SolveQuadratic(System.Double,System.Double,System.Double,System.Double@,System.Double@)
  - g3.MathUtil.SqrtThree
  - g3.MathUtil.SqrtTwo
  - g3.MathUtil.SqrtTwof
  - g3.MathUtil.SqrtTwoInv
  - g3.MathUtil.TriSolidAngle(g3.Vector3d,g3.Vector3d,g3.Vector3d,g3.Vector3d@)
  - g3.MathUtil.TwoPI
  - g3.MathUtil.TwoPIf
  - g3.MathUtil.VectorCot(g3.Vector3d,g3.Vector3d)
  - g3.MathUtil.VectorTan(g3.Vector3d,g3.Vector3d)
  - g3.MathUtil.WrapSignedIndex(System.Int32,System.Int32)
  - g3.MathUtil.WyvillFalloff(System.Double,System.Double,System.Double)
  - g3.MathUtil.WyvillFalloff(System.Single,System.Single,System.Single)
  - g3.MathUtil.WyvillFalloff01(System.Double)
  - g3.MathUtil.WyvillFalloff01(System.Single)
  - g3.MathUtil.WyvillRise01(System.Double)
  - g3.MathUtil.WyvillRise01(System.Single)
  - g3.MathUtil.ZeroTolerance
  - g3.MathUtil.ZeroTolerancef
  langs:
  - csharp
  - vb
  name: MathUtil
  nameWithType: MathUtil
  fullName: g3.MathUtil
  type: Class
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: MathUtil
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 7
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static class MathUtil
    content.vb: Public Module MathUtil
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: g3.MathUtil.Deg2Rad
  commentId: F:g3.MathUtil.Deg2Rad
  id: Deg2Rad
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: Deg2Rad
  nameWithType: MathUtil.Deg2Rad
  fullName: g3.MathUtil.Deg2Rad
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Deg2Rad
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 10
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public const double Deg2Rad = 0.017453292519943295
    return:
      type: System.Double
    content.vb: Public Const Deg2Rad As Double = 0.017453292519943295
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: g3.MathUtil.Rad2Deg
  commentId: F:g3.MathUtil.Rad2Deg
  id: Rad2Deg
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: Rad2Deg
  nameWithType: MathUtil.Rad2Deg
  fullName: g3.MathUtil.Rad2Deg
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Rad2Deg
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 11
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public const double Rad2Deg = 57.295779513082323
    return:
      type: System.Double
    content.vb: Public Const Rad2Deg As Double = 57.295779513082323
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: g3.MathUtil.TwoPI
  commentId: F:g3.MathUtil.TwoPI
  id: TwoPI
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: TwoPI
  nameWithType: MathUtil.TwoPI
  fullName: g3.MathUtil.TwoPI
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: TwoPI
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 12
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public const double TwoPI = 6.2831853071795862
    return:
      type: System.Double
    content.vb: Public Const TwoPI As Double = 6.2831853071795862
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: g3.MathUtil.FourPI
  commentId: F:g3.MathUtil.FourPI
  id: FourPI
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: FourPI
  nameWithType: MathUtil.FourPI
  fullName: g3.MathUtil.FourPI
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: FourPI
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 13
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public const double FourPI = 12.566370614359172
    return:
      type: System.Double
    content.vb: Public Const FourPI As Double = 12.566370614359172
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: g3.MathUtil.HalfPI
  commentId: F:g3.MathUtil.HalfPI
  id: HalfPI
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: HalfPI
  nameWithType: MathUtil.HalfPI
  fullName: g3.MathUtil.HalfPI
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: HalfPI
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 14
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public const double HalfPI = 1.5707963267948966
    return:
      type: System.Double
    content.vb: Public Const HalfPI As Double = 1.5707963267948966
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: g3.MathUtil.ZeroTolerance
  commentId: F:g3.MathUtil.ZeroTolerance
  id: ZeroTolerance
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: ZeroTolerance
  nameWithType: MathUtil.ZeroTolerance
  fullName: g3.MathUtil.ZeroTolerance
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ZeroTolerance
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 15
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public const double ZeroTolerance = 1E-08
    return:
      type: System.Double
    content.vb: Public Const ZeroTolerance As Double = 1E-08
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: g3.MathUtil.Epsilon
  commentId: F:g3.MathUtil.Epsilon
  id: Epsilon
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: Epsilon
  nameWithType: MathUtil.Epsilon
  fullName: g3.MathUtil.Epsilon
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Epsilon
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 16
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public const double Epsilon = 2.2204460492503131E-16
    return:
      type: System.Double
    content.vb: Public Const Epsilon As Double = 2.2204460492503131E-16
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: g3.MathUtil.SqrtTwo
  commentId: F:g3.MathUtil.SqrtTwo
  id: SqrtTwo
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: SqrtTwo
  nameWithType: MathUtil.SqrtTwo
  fullName: g3.MathUtil.SqrtTwo
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: SqrtTwo
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 17
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public const double SqrtTwo = 1.4142135623730951
    return:
      type: System.Double
    content.vb: Public Const SqrtTwo As Double = 1.4142135623730951
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: g3.MathUtil.SqrtTwoInv
  commentId: F:g3.MathUtil.SqrtTwoInv
  id: SqrtTwoInv
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: SqrtTwoInv
  nameWithType: MathUtil.SqrtTwoInv
  fullName: g3.MathUtil.SqrtTwoInv
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: SqrtTwoInv
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 18
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public const double SqrtTwoInv = 0.70710678118654746
    return:
      type: System.Double
    content.vb: Public Const SqrtTwoInv As Double = 0.70710678118654746
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: g3.MathUtil.SqrtThree
  commentId: F:g3.MathUtil.SqrtThree
  id: SqrtThree
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: SqrtThree
  nameWithType: MathUtil.SqrtThree
  fullName: g3.MathUtil.SqrtThree
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: SqrtThree
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 19
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public const double SqrtThree = 1.7320508075688772
    return:
      type: System.Double
    content.vb: Public Const SqrtThree As Double = 1.7320508075688772
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: g3.MathUtil.Deg2Radf
  commentId: F:g3.MathUtil.Deg2Radf
  id: Deg2Radf
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: Deg2Radf
  nameWithType: MathUtil.Deg2Radf
  fullName: g3.MathUtil.Deg2Radf
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Deg2Radf
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 21
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public const float Deg2Radf = 0.0174532924F
    return:
      type: System.Single
    content.vb: Public Const Deg2Radf As Single = 0.0174532924F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: g3.MathUtil.Rad2Degf
  commentId: F:g3.MathUtil.Rad2Degf
  id: Rad2Degf
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: Rad2Degf
  nameWithType: MathUtil.Rad2Degf
  fullName: g3.MathUtil.Rad2Degf
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Rad2Degf
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 22
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public const float Rad2Degf = 57.29578F
    return:
      type: System.Single
    content.vb: Public Const Rad2Degf As Single = 57.29578F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: g3.MathUtil.PIf
  commentId: F:g3.MathUtil.PIf
  id: PIf
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: PIf
  nameWithType: MathUtil.PIf
  fullName: g3.MathUtil.PIf
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: PIf
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 23
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public const float PIf = 3.14159274F
    return:
      type: System.Single
    content.vb: Public Const PIf As Single = 3.14159274F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: g3.MathUtil.TwoPIf
  commentId: F:g3.MathUtil.TwoPIf
  id: TwoPIf
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: TwoPIf
  nameWithType: MathUtil.TwoPIf
  fullName: g3.MathUtil.TwoPIf
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: TwoPIf
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 24
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public const float TwoPIf = 6.28318548F
    return:
      type: System.Single
    content.vb: Public Const TwoPIf As Single = 6.28318548F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: g3.MathUtil.HalfPIf
  commentId: F:g3.MathUtil.HalfPIf
  id: HalfPIf
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: HalfPIf
  nameWithType: MathUtil.HalfPIf
  fullName: g3.MathUtil.HalfPIf
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: HalfPIf
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 25
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public const float HalfPIf = 1.57079637F
    return:
      type: System.Single
    content.vb: Public Const HalfPIf As Single = 1.57079637F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: g3.MathUtil.SqrtTwof
  commentId: F:g3.MathUtil.SqrtTwof
  id: SqrtTwof
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: SqrtTwof
  nameWithType: MathUtil.SqrtTwof
  fullName: g3.MathUtil.SqrtTwof
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: SqrtTwof
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 26
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public const float SqrtTwof = 1.41421354F
    return:
      type: System.Single
    content.vb: Public Const SqrtTwof As Single = 1.41421354F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: g3.MathUtil.ZeroTolerancef
  commentId: F:g3.MathUtil.ZeroTolerancef
  id: ZeroTolerancef
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: ZeroTolerancef
  nameWithType: MathUtil.ZeroTolerancef
  fullName: g3.MathUtil.ZeroTolerancef
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ZeroTolerancef
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 28
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public const float ZeroTolerancef = 1E-06F
    return:
      type: System.Single
    content.vb: Public Const ZeroTolerancef As Single = 1E-06F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: g3.MathUtil.Epsilonf
  commentId: F:g3.MathUtil.Epsilonf
  id: Epsilonf
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: Epsilonf
  nameWithType: MathUtil.Epsilonf
  fullName: g3.MathUtil.Epsilonf
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Epsilonf
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 29
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public const float Epsilonf = 1.1920929E-07F
    return:
      type: System.Single
    content.vb: Public Const Epsilonf As Single = 1.1920929E-07F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: g3.MathUtil.IsFinite(System.Double)
  commentId: M:g3.MathUtil.IsFinite(System.Double)
  id: IsFinite(System.Double)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: IsFinite(Double)
  nameWithType: MathUtil.IsFinite(Double)
  fullName: g3.MathUtil.IsFinite(System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IsFinite
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 32
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static bool IsFinite(double d)
    parameters:
    - id: d
      type: System.Double
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsFinite(d As Double) As Boolean
  overload: g3.MathUtil.IsFinite*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.IsFinite(System.Single)
  commentId: M:g3.MathUtil.IsFinite(System.Single)
  id: IsFinite(System.Single)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: IsFinite(Single)
  nameWithType: MathUtil.IsFinite(Single)
  fullName: g3.MathUtil.IsFinite(System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IsFinite
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 35
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static bool IsFinite(float d)
    parameters:
    - id: d
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsFinite(d As Single) As Boolean
  overload: g3.MathUtil.IsFinite*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.EpsilonEqual(System.Double,System.Double,System.Double)
  commentId: M:g3.MathUtil.EpsilonEqual(System.Double,System.Double,System.Double)
  id: EpsilonEqual(System.Double,System.Double,System.Double)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: EpsilonEqual(Double, Double, Double)
  nameWithType: MathUtil.EpsilonEqual(Double, Double, Double)
  fullName: g3.MathUtil.EpsilonEqual(System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: EpsilonEqual
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 40
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static bool EpsilonEqual(double a, double b, double epsilon = 2.2204460492503131E-16)
    parameters:
    - id: a
      type: System.Double
    - id: b
      type: System.Double
    - id: epsilon
      type: System.Double
    return:
      type: System.Boolean
    content.vb: Public Shared Function EpsilonEqual(a As Double, b As Double, epsilon As Double = 2.2204460492503131E-16) As Boolean
  overload: g3.MathUtil.EpsilonEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.EpsilonEqual(System.Single,System.Single,System.Single)
  commentId: M:g3.MathUtil.EpsilonEqual(System.Single,System.Single,System.Single)
  id: EpsilonEqual(System.Single,System.Single,System.Single)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: EpsilonEqual(Single, Single, Single)
  nameWithType: MathUtil.EpsilonEqual(Single, Single, Single)
  fullName: g3.MathUtil.EpsilonEqual(System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: EpsilonEqual
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 43
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static bool EpsilonEqual(float a, float b, float epsilon = 1.1920929E-07F)
    parameters:
    - id: a
      type: System.Single
    - id: b
      type: System.Single
    - id: epsilon
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function EpsilonEqual(a As Single, b As Single, epsilon As Single = 1.1920929E-07F) As Boolean
  overload: g3.MathUtil.EpsilonEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.Clamp``1(``0,``0,``0)
  commentId: M:g3.MathUtil.Clamp``1(``0,``0,``0)
  id: Clamp``1(``0,``0,``0)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: Clamp<T>(T, T, T)
  nameWithType: MathUtil.Clamp<T>(T, T, T)
  fullName: g3.MathUtil.Clamp<T>(T, T, T)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Clamp
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 48
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: >-
      public static T Clamp<T>(T f, T low, T high)
          where T : IComparable
    parameters:
    - id: f
      type: '{T}'
    - id: low
      type: '{T}'
    - id: high
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function Clamp(Of T As IComparable)(f As T, low As T, high As T) As T
  overload: g3.MathUtil.Clamp*
  nameWithType.vb: MathUtil.Clamp(Of T)(T, T, T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.MathUtil.Clamp(Of T)(T, T, T)
  name.vb: Clamp(Of T)(T, T, T)
- uid: g3.MathUtil.Clamp(System.Single,System.Single,System.Single)
  commentId: M:g3.MathUtil.Clamp(System.Single,System.Single,System.Single)
  id: Clamp(System.Single,System.Single,System.Single)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: Clamp(Single, Single, Single)
  nameWithType: MathUtil.Clamp(Single, Single, Single)
  fullName: g3.MathUtil.Clamp(System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Clamp
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 54
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static float Clamp(float f, float low, float high)
    parameters:
    - id: f
      type: System.Single
    - id: low
      type: System.Single
    - id: high
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Clamp(f As Single, low As Single, high As Single) As Single
  overload: g3.MathUtil.Clamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.Clamp(System.Double,System.Double,System.Double)
  commentId: M:g3.MathUtil.Clamp(System.Double,System.Double,System.Double)
  id: Clamp(System.Double,System.Double,System.Double)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: Clamp(Double, Double, Double)
  nameWithType: MathUtil.Clamp(Double, Double, Double)
  fullName: g3.MathUtil.Clamp(System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Clamp
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 57
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double Clamp(double f, double low, double high)
    parameters:
    - id: f
      type: System.Double
    - id: low
      type: System.Double
    - id: high
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function Clamp(f As Double, low As Double, high As Double) As Double
  overload: g3.MathUtil.Clamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.Clamp(System.Int32,System.Int32,System.Int32)
  commentId: M:g3.MathUtil.Clamp(System.Int32,System.Int32,System.Int32)
  id: Clamp(System.Int32,System.Int32,System.Int32)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: Clamp(Int32, Int32, Int32)
  nameWithType: MathUtil.Clamp(Int32, Int32, Int32)
  fullName: g3.MathUtil.Clamp(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Clamp
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 60
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static int Clamp(int f, int low, int high)
    parameters:
    - id: f
      type: System.Int32
    - id: low
      type: System.Int32
    - id: high
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function Clamp(f As Integer, low As Integer, high As Integer) As Integer
  overload: g3.MathUtil.Clamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.ModuloClamp(System.Int32,System.Int32)
  commentId: M:g3.MathUtil.ModuloClamp(System.Int32,System.Int32)
  id: ModuloClamp(System.Int32,System.Int32)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: ModuloClamp(Int32, Int32)
  nameWithType: MathUtil.ModuloClamp(Int32, Int32)
  fullName: g3.MathUtil.ModuloClamp(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ModuloClamp
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 64
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static int ModuloClamp(int f, int N)
    parameters:
    - id: f
      type: System.Int32
    - id: N
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function ModuloClamp(f As Integer, N As Integer) As Integer
  overload: g3.MathUtil.ModuloClamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.RangeClamp(System.Single,System.Single)
  commentId: M:g3.MathUtil.RangeClamp(System.Single,System.Single)
  id: RangeClamp(System.Single,System.Single)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: RangeClamp(Single, Single)
  nameWithType: MathUtil.RangeClamp(Single, Single)
  fullName: g3.MathUtil.RangeClamp(System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: RangeClamp
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 71
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static float RangeClamp(float fValue, float fMinMaxValue)
    parameters:
    - id: fValue
      type: System.Single
    - id: fMinMaxValue
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function RangeClamp(fValue As Single, fMinMaxValue As Single) As Single
  overload: g3.MathUtil.RangeClamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.RangeClamp(System.Double,System.Double)
  commentId: M:g3.MathUtil.RangeClamp(System.Double,System.Double)
  id: RangeClamp(System.Double,System.Double)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: RangeClamp(Double, Double)
  nameWithType: MathUtil.RangeClamp(Double, Double)
  fullName: g3.MathUtil.RangeClamp(System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: RangeClamp
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 75
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double RangeClamp(double fValue, double fMinMaxValue)
    parameters:
    - id: fValue
      type: System.Double
    - id: fMinMaxValue
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function RangeClamp(fValue As Double, fMinMaxValue As Double) As Double
  overload: g3.MathUtil.RangeClamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.SignedClamp(System.Single,System.Single)
  commentId: M:g3.MathUtil.SignedClamp(System.Single,System.Single)
  id: SignedClamp(System.Single,System.Single)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: SignedClamp(Single, Single)
  nameWithType: MathUtil.SignedClamp(Single, Single)
  fullName: g3.MathUtil.SignedClamp(System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: SignedClamp
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 81
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static float SignedClamp(float f, float fMax)
    parameters:
    - id: f
      type: System.Single
    - id: fMax
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function SignedClamp(f As Single, fMax As Single) As Single
  overload: g3.MathUtil.SignedClamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.SignedClamp(System.Double,System.Double)
  commentId: M:g3.MathUtil.SignedClamp(System.Double,System.Double)
  id: SignedClamp(System.Double,System.Double)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: SignedClamp(Double, Double)
  nameWithType: MathUtil.SignedClamp(Double, Double)
  fullName: g3.MathUtil.SignedClamp(System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: SignedClamp
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 84
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double SignedClamp(double f, double fMax)
    parameters:
    - id: f
      type: System.Double
    - id: fMax
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function SignedClamp(f As Double, fMax As Double) As Double
  overload: g3.MathUtil.SignedClamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.SignedClamp(System.Single,System.Single,System.Single)
  commentId: M:g3.MathUtil.SignedClamp(System.Single,System.Single,System.Single)
  id: SignedClamp(System.Single,System.Single,System.Single)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: SignedClamp(Single, Single, Single)
  nameWithType: MathUtil.SignedClamp(Single, Single, Single)
  fullName: g3.MathUtil.SignedClamp(System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: SignedClamp
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 88
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static float SignedClamp(float f, float fMin, float fMax)
    parameters:
    - id: f
      type: System.Single
    - id: fMin
      type: System.Single
    - id: fMax
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function SignedClamp(f As Single, fMin As Single, fMax As Single) As Single
  overload: g3.MathUtil.SignedClamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.SignedClamp(System.Double,System.Double,System.Double)
  commentId: M:g3.MathUtil.SignedClamp(System.Double,System.Double,System.Double)
  id: SignedClamp(System.Double,System.Double,System.Double)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: SignedClamp(Double, Double, Double)
  nameWithType: MathUtil.SignedClamp(Double, Double, Double)
  fullName: g3.MathUtil.SignedClamp(System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: SignedClamp
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 91
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double SignedClamp(double f, double fMin, double fMax)
    parameters:
    - id: f
      type: System.Double
    - id: fMin
      type: System.Double
    - id: fMax
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function SignedClamp(f As Double, fMin As Double, fMax As Double) As Double
  overload: g3.MathUtil.SignedClamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.InRange(System.Single,System.Single,System.Single)
  commentId: M:g3.MathUtil.InRange(System.Single,System.Single,System.Single)
  id: InRange(System.Single,System.Single,System.Single)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: InRange(Single, Single, Single)
  nameWithType: MathUtil.InRange(Single, Single, Single)
  fullName: g3.MathUtil.InRange(System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: InRange
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 96
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static bool InRange(float f, float low, float high)
    parameters:
    - id: f
      type: System.Single
    - id: low
      type: System.Single
    - id: high
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function InRange(f As Single, low As Single, high As Single) As Boolean
  overload: g3.MathUtil.InRange*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.InRange(System.Double,System.Double,System.Double)
  commentId: M:g3.MathUtil.InRange(System.Double,System.Double,System.Double)
  id: InRange(System.Double,System.Double,System.Double)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: InRange(Double, Double, Double)
  nameWithType: MathUtil.InRange(Double, Double, Double)
  fullName: g3.MathUtil.InRange(System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: InRange
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 99
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static bool InRange(double f, double low, double high)
    parameters:
    - id: f
      type: System.Double
    - id: low
      type: System.Double
    - id: high
      type: System.Double
    return:
      type: System.Boolean
    content.vb: Public Shared Function InRange(f As Double, low As Double, high As Double) As Boolean
  overload: g3.MathUtil.InRange*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.InRange(System.Int32,System.Int32,System.Int32)
  commentId: M:g3.MathUtil.InRange(System.Int32,System.Int32,System.Int32)
  id: InRange(System.Int32,System.Int32,System.Int32)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: InRange(Int32, Int32, Int32)
  nameWithType: MathUtil.InRange(Int32, Int32, Int32)
  fullName: g3.MathUtil.InRange(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: InRange
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 102
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static bool InRange(int f, int low, int high)
    parameters:
    - id: f
      type: System.Int32
    - id: low
      type: System.Int32
    - id: high
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function InRange(f As Integer, low As Integer, high As Integer) As Boolean
  overload: g3.MathUtil.InRange*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.ClampAngleDeg(System.Double,System.Double,System.Double)
  commentId: M:g3.MathUtil.ClampAngleDeg(System.Double,System.Double,System.Double)
  id: ClampAngleDeg(System.Double,System.Double,System.Double)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: ClampAngleDeg(Double, Double, Double)
  nameWithType: MathUtil.ClampAngleDeg(Double, Double, Double)
  fullName: g3.MathUtil.ClampAngleDeg(System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ClampAngleDeg
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 110
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double ClampAngleDeg(double theta, double min, double max)
    parameters:
    - id: theta
      type: System.Double
    - id: min
      type: System.Double
    - id: max
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function ClampAngleDeg(theta As Double, min As Double, max As Double) As Double
  overload: g3.MathUtil.ClampAngleDeg*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.ClampAngleRad(System.Double,System.Double,System.Double)
  commentId: M:g3.MathUtil.ClampAngleRad(System.Double,System.Double,System.Double)
  id: ClampAngleRad(System.Double,System.Double,System.Double)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: ClampAngleRad(Double, Double, Double)
  nameWithType: MathUtil.ClampAngleRad(Double, Double, Double)
  fullName: g3.MathUtil.ClampAngleRad(System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ClampAngleRad
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 141
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double ClampAngleRad(double theta, double min, double max)
    parameters:
    - id: theta
      type: System.Double
    - id: min
      type: System.Double
    - id: max
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function ClampAngleRad(theta As Double, min As Double, max As Double) As Double
  overload: g3.MathUtil.ClampAngleRad*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.WrapSignedIndex(System.Int32,System.Int32)
  commentId: M:g3.MathUtil.WrapSignedIndex(System.Int32,System.Int32)
  id: WrapSignedIndex(System.Int32,System.Int32)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: WrapSignedIndex(Int32, Int32)
  nameWithType: MathUtil.WrapSignedIndex(Int32, Int32)
  fullName: g3.MathUtil.WrapSignedIndex(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: WrapSignedIndex
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 170
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static int WrapSignedIndex(int val, int mod)
    parameters:
    - id: val
      type: System.Int32
    - id: mod
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function WrapSignedIndex(val As Integer, mod As Integer) As Integer
  overload: g3.MathUtil.WrapSignedIndex*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.MinMax(System.Double,System.Double,System.Double,System.Double@,System.Double@)
  commentId: M:g3.MathUtil.MinMax(System.Double,System.Double,System.Double,System.Double@,System.Double@)
  id: MinMax(System.Double,System.Double,System.Double,System.Double@,System.Double@)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: MinMax(Double, Double, Double, out Double, out Double)
  nameWithType: MathUtil.MinMax(Double, Double, Double, out Double, out Double)
  fullName: g3.MathUtil.MinMax(System.Double, System.Double, System.Double, out System.Double, out System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: MinMax
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 179
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static void MinMax(double a, double b, double c, out double min, out double max)
    parameters:
    - id: a
      type: System.Double
    - id: b
      type: System.Double
    - id: c
      type: System.Double
    - id: min
      type: System.Double
    - id: max
      type: System.Double
    content.vb: Public Shared Sub MinMax(a As Double, b As Double, c As Double, ByRef min As Double, ByRef max As Double)
  overload: g3.MathUtil.MinMax*
  nameWithType.vb: MathUtil.MinMax(Double, Double, Double, ByRef Double, ByRef Double)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.MathUtil.MinMax(System.Double, System.Double, System.Double, ByRef System.Double, ByRef System.Double)
  name.vb: MinMax(Double, Double, Double, ByRef Double, ByRef Double)
- uid: g3.MathUtil.Min(System.Double,System.Double,System.Double)
  commentId: M:g3.MathUtil.Min(System.Double,System.Double,System.Double)
  id: Min(System.Double,System.Double,System.Double)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: Min(Double, Double, Double)
  nameWithType: MathUtil.Min(Double, Double, Double)
  fullName: g3.MathUtil.Min(System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Min
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 197
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double Min(double a, double b, double c)
    parameters:
    - id: a
      type: System.Double
    - id: b
      type: System.Double
    - id: c
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function Min(a As Double, b As Double, c As Double) As Double
  overload: g3.MathUtil.Min*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.Min(System.Single,System.Single,System.Single)
  commentId: M:g3.MathUtil.Min(System.Single,System.Single,System.Single)
  id: Min(System.Single,System.Single,System.Single)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: Min(Single, Single, Single)
  nameWithType: MathUtil.Min(Single, Single, Single)
  fullName: g3.MathUtil.Min(System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Min
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 200
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static float Min(float a, float b, float c)
    parameters:
    - id: a
      type: System.Single
    - id: b
      type: System.Single
    - id: c
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Min(a As Single, b As Single, c As Single) As Single
  overload: g3.MathUtil.Min*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.Min(System.Int32,System.Int32,System.Int32)
  commentId: M:g3.MathUtil.Min(System.Int32,System.Int32,System.Int32)
  id: Min(System.Int32,System.Int32,System.Int32)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: Min(Int32, Int32, Int32)
  nameWithType: MathUtil.Min(Int32, Int32, Int32)
  fullName: g3.MathUtil.Min(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Min
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 203
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static int Min(int a, int b, int c)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int32
    - id: c
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function Min(a As Integer, b As Integer, c As Integer) As Integer
  overload: g3.MathUtil.Min*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.Max(System.Double,System.Double,System.Double)
  commentId: M:g3.MathUtil.Max(System.Double,System.Double,System.Double)
  id: Max(System.Double,System.Double,System.Double)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: Max(Double, Double, Double)
  nameWithType: MathUtil.Max(Double, Double, Double)
  fullName: g3.MathUtil.Max(System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Max
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 206
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double Max(double a, double b, double c)
    parameters:
    - id: a
      type: System.Double
    - id: b
      type: System.Double
    - id: c
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function Max(a As Double, b As Double, c As Double) As Double
  overload: g3.MathUtil.Max*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.Max(System.Single,System.Single,System.Single)
  commentId: M:g3.MathUtil.Max(System.Single,System.Single,System.Single)
  id: Max(System.Single,System.Single,System.Single)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: Max(Single, Single, Single)
  nameWithType: MathUtil.Max(Single, Single, Single)
  fullName: g3.MathUtil.Max(System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Max
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 209
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static float Max(float a, float b, float c)
    parameters:
    - id: a
      type: System.Single
    - id: b
      type: System.Single
    - id: c
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Max(a As Single, b As Single, c As Single) As Single
  overload: g3.MathUtil.Max*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.Max(System.Int32,System.Int32,System.Int32)
  commentId: M:g3.MathUtil.Max(System.Int32,System.Int32,System.Int32)
  id: Max(System.Int32,System.Int32,System.Int32)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: Max(Int32, Int32, Int32)
  nameWithType: MathUtil.Max(Int32, Int32, Int32)
  fullName: g3.MathUtil.Max(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Max
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 212
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static int Max(int a, int b, int c)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int32
    - id: c
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function Max(a As Integer, b As Integer, c As Integer) As Integer
  overload: g3.MathUtil.Max*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.InvSqrt(System.Double)
  commentId: M:g3.MathUtil.InvSqrt(System.Double)
  id: InvSqrt(System.Double)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: InvSqrt(Double)
  nameWithType: MathUtil.InvSqrt(Double)
  fullName: g3.MathUtil.InvSqrt(System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: InvSqrt
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 219
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double InvSqrt(double f)
    parameters:
    - id: f
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function InvSqrt(f As Double) As Double
  overload: g3.MathUtil.InvSqrt*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.Atan2Positive(System.Double,System.Double)
  commentId: M:g3.MathUtil.Atan2Positive(System.Double,System.Double)
  id: Atan2Positive(System.Double,System.Double)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: Atan2Positive(Double, Double)
  nameWithType: MathUtil.Atan2Positive(Double, Double)
  fullName: g3.MathUtil.Atan2Positive(System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Atan2Positive
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 226
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double Atan2Positive(double y, double x)
    parameters:
    - id: y
      type: System.Double
    - id: x
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function Atan2Positive(y As Double, x As Double) As Double
  overload: g3.MathUtil.Atan2Positive*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.PlaneAngleD(g3.Vector3f,g3.Vector3f,System.Int32)
  commentId: M:g3.MathUtil.PlaneAngleD(g3.Vector3f,g3.Vector3f,System.Int32)
  id: PlaneAngleD(g3.Vector3f,g3.Vector3f,System.Int32)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: PlaneAngleD(Vector3f, Vector3f, Int32)
  nameWithType: MathUtil.PlaneAngleD(Vector3f, Vector3f, Int32)
  fullName: g3.MathUtil.PlaneAngleD(g3.Vector3f, g3.Vector3f, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: PlaneAngleD
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 235
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static float PlaneAngleD(Vector3f a, Vector3f b, int nPlaneNormalIdx = 1)
    parameters:
    - id: a
      type: g3.Vector3f
    - id: b
      type: g3.Vector3f
    - id: nPlaneNormalIdx
      type: System.Int32
    return:
      type: System.Single
    content.vb: Public Shared Function PlaneAngleD(a As Vector3f, b As Vector3f, nPlaneNormalIdx As Integer = 1) As Single
  overload: g3.MathUtil.PlaneAngleD*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.PlaneAngleD(g3.Vector3d,g3.Vector3d,System.Int32)
  commentId: M:g3.MathUtil.PlaneAngleD(g3.Vector3d,g3.Vector3d,System.Int32)
  id: PlaneAngleD(g3.Vector3d,g3.Vector3d,System.Int32)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: PlaneAngleD(Vector3d, Vector3d, Int32)
  nameWithType: MathUtil.PlaneAngleD(Vector3d, Vector3d, Int32)
  fullName: g3.MathUtil.PlaneAngleD(g3.Vector3d, g3.Vector3d, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: PlaneAngleD
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 242
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double PlaneAngleD(Vector3d a, Vector3d b, int nPlaneNormalIdx = 1)
    parameters:
    - id: a
      type: g3.Vector3d
    - id: b
      type: g3.Vector3d
    - id: nPlaneNormalIdx
      type: System.Int32
    return:
      type: System.Double
    content.vb: Public Shared Function PlaneAngleD(a As Vector3d, b As Vector3d, nPlaneNormalIdx As Integer = 1) As Double
  overload: g3.MathUtil.PlaneAngleD*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.PlaneAngleSignedD(g3.Vector3f,g3.Vector3f,System.Int32)
  commentId: M:g3.MathUtil.PlaneAngleSignedD(g3.Vector3f,g3.Vector3f,System.Int32)
  id: PlaneAngleSignedD(g3.Vector3f,g3.Vector3f,System.Int32)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: PlaneAngleSignedD(Vector3f, Vector3f, Int32)
  nameWithType: MathUtil.PlaneAngleSignedD(Vector3f, Vector3f, Int32)
  fullName: g3.MathUtil.PlaneAngleSignedD(g3.Vector3f, g3.Vector3f, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: PlaneAngleSignedD
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 251
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static float PlaneAngleSignedD(Vector3f vFrom, Vector3f vTo, int nPlaneNormalIdx = 1)
    parameters:
    - id: vFrom
      type: g3.Vector3f
    - id: vTo
      type: g3.Vector3f
    - id: nPlaneNormalIdx
      type: System.Int32
    return:
      type: System.Single
    content.vb: Public Shared Function PlaneAngleSignedD(vFrom As Vector3f, vTo As Vector3f, nPlaneNormalIdx As Integer = 1) As Single
  overload: g3.MathUtil.PlaneAngleSignedD*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.PlaneAngleSignedD(g3.Vector3d,g3.Vector3d,System.Int32)
  commentId: M:g3.MathUtil.PlaneAngleSignedD(g3.Vector3d,g3.Vector3d,System.Int32)
  id: PlaneAngleSignedD(g3.Vector3d,g3.Vector3d,System.Int32)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: PlaneAngleSignedD(Vector3d, Vector3d, Int32)
  nameWithType: MathUtil.PlaneAngleSignedD(Vector3d, Vector3d, Int32)
  fullName: g3.MathUtil.PlaneAngleSignedD(g3.Vector3d, g3.Vector3d, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: PlaneAngleSignedD
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 264
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double PlaneAngleSignedD(Vector3d vFrom, Vector3d vTo, int nPlaneNormalIdx = 1)
    parameters:
    - id: vFrom
      type: g3.Vector3d
    - id: vTo
      type: g3.Vector3d
    - id: nPlaneNormalIdx
      type: System.Int32
    return:
      type: System.Double
    content.vb: Public Shared Function PlaneAngleSignedD(vFrom As Vector3d, vTo As Vector3d, nPlaneNormalIdx As Integer = 1) As Double
  overload: g3.MathUtil.PlaneAngleSignedD*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.PlaneAngleSignedD(g3.Vector3f,g3.Vector3f,g3.Vector3f)
  commentId: M:g3.MathUtil.PlaneAngleSignedD(g3.Vector3f,g3.Vector3f,g3.Vector3f)
  id: PlaneAngleSignedD(g3.Vector3f,g3.Vector3f,g3.Vector3f)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: PlaneAngleSignedD(Vector3f, Vector3f, Vector3f)
  nameWithType: MathUtil.PlaneAngleSignedD(Vector3f, Vector3f, Vector3f)
  fullName: g3.MathUtil.PlaneAngleSignedD(g3.Vector3f, g3.Vector3f, g3.Vector3f)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: PlaneAngleSignedD
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 278
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static float PlaneAngleSignedD(Vector3f vFrom, Vector3f vTo, Vector3f planeN)
    parameters:
    - id: vFrom
      type: g3.Vector3f
    - id: vTo
      type: g3.Vector3f
    - id: planeN
      type: g3.Vector3f
    return:
      type: System.Single
    content.vb: Public Shared Function PlaneAngleSignedD(vFrom As Vector3f, vTo As Vector3f, planeN As Vector3f) As Single
  overload: g3.MathUtil.PlaneAngleSignedD*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.PlaneAngleSignedD(g3.Vector3d,g3.Vector3d,g3.Vector3d)
  commentId: M:g3.MathUtil.PlaneAngleSignedD(g3.Vector3d,g3.Vector3d,g3.Vector3d)
  id: PlaneAngleSignedD(g3.Vector3d,g3.Vector3d,g3.Vector3d)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: PlaneAngleSignedD(Vector3d, Vector3d, Vector3d)
  nameWithType: MathUtil.PlaneAngleSignedD(Vector3d, Vector3d, Vector3d)
  fullName: g3.MathUtil.PlaneAngleSignedD(g3.Vector3d, g3.Vector3d, g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: PlaneAngleSignedD
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 292
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double PlaneAngleSignedD(Vector3d vFrom, Vector3d vTo, Vector3d planeN)
    parameters:
    - id: vFrom
      type: g3.Vector3d
    - id: vTo
      type: g3.Vector3d
    - id: planeN
      type: g3.Vector3d
    return:
      type: System.Double
    content.vb: Public Shared Function PlaneAngleSignedD(vFrom As Vector3d, vTo As Vector3d, planeN As Vector3d) As Double
  overload: g3.MathUtil.PlaneAngleSignedD*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.PlaneAngleSignedD(g3.Vector2f,g3.Vector2f)
  commentId: M:g3.MathUtil.PlaneAngleSignedD(g3.Vector2f,g3.Vector2f)
  id: PlaneAngleSignedD(g3.Vector2f,g3.Vector2f)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: PlaneAngleSignedD(Vector2f, Vector2f)
  nameWithType: MathUtil.PlaneAngleSignedD(Vector2f, Vector2f)
  fullName: g3.MathUtil.PlaneAngleSignedD(g3.Vector2f, g3.Vector2f)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: PlaneAngleSignedD
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 308
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static float PlaneAngleSignedD(Vector2f vFrom, Vector2f vTo)
    parameters:
    - id: vFrom
      type: g3.Vector2f
    - id: vTo
      type: g3.Vector2f
    return:
      type: System.Single
    content.vb: Public Shared Function PlaneAngleSignedD(vFrom As Vector2f, vTo As Vector2f) As Single
  overload: g3.MathUtil.PlaneAngleSignedD*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.PlaneAngleSignedD(g3.Vector2d,g3.Vector2d)
  commentId: M:g3.MathUtil.PlaneAngleSignedD(g3.Vector2d,g3.Vector2d)
  id: PlaneAngleSignedD(g3.Vector2d,g3.Vector2d)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: PlaneAngleSignedD(Vector2d, Vector2d)
  nameWithType: MathUtil.PlaneAngleSignedD(Vector2d, Vector2d)
  fullName: g3.MathUtil.PlaneAngleSignedD(g3.Vector2d, g3.Vector2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: PlaneAngleSignedD
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 316
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double PlaneAngleSignedD(Vector2d vFrom, Vector2d vTo)
    parameters:
    - id: vFrom
      type: g3.Vector2d
    - id: vTo
      type: g3.Vector2d
    return:
      type: System.Double
    content.vb: Public Shared Function PlaneAngleSignedD(vFrom As Vector2d, vTo As Vector2d) As Double
  overload: g3.MathUtil.PlaneAngleSignedD*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.MostParallelAxis(g3.Frame3f,g3.Vector3f)
  commentId: M:g3.MathUtil.MostParallelAxis(g3.Frame3f,g3.Vector3f)
  id: MostParallelAxis(g3.Frame3f,g3.Vector3f)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: MostParallelAxis(Frame3f, Vector3f)
  nameWithType: MathUtil.MostParallelAxis(Frame3f, Vector3f)
  fullName: g3.MathUtil.MostParallelAxis(g3.Frame3f, g3.Vector3f)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: MostParallelAxis
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 327
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static int MostParallelAxis(Frame3f f, Vector3f vDir)
    parameters:
    - id: f
      type: g3.Frame3f
    - id: vDir
      type: g3.Vector3f
    return:
      type: System.Int32
    content.vb: Public Shared Function MostParallelAxis(f As Frame3f, vDir As Vector3f) As Integer
  overload: g3.MathUtil.MostParallelAxis*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.Lerp(System.Single,System.Single,System.Single)
  commentId: M:g3.MathUtil.Lerp(System.Single,System.Single,System.Single)
  id: Lerp(System.Single,System.Single,System.Single)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: Lerp(Single, Single, Single)
  nameWithType: MathUtil.Lerp(Single, Single, Single)
  fullName: g3.MathUtil.Lerp(System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Lerp
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 337
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static float Lerp(float a, float b, float t)
    parameters:
    - id: a
      type: System.Single
    - id: b
      type: System.Single
    - id: t
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function Lerp(a As Single, b As Single, t As Single) As Single
  overload: g3.MathUtil.Lerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.Lerp(System.Double,System.Double,System.Double)
  commentId: M:g3.MathUtil.Lerp(System.Double,System.Double,System.Double)
  id: Lerp(System.Double,System.Double,System.Double)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: Lerp(Double, Double, Double)
  nameWithType: MathUtil.Lerp(Double, Double, Double)
  fullName: g3.MathUtil.Lerp(System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Lerp
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 340
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double Lerp(double a, double b, double t)
    parameters:
    - id: a
      type: System.Double
    - id: b
      type: System.Double
    - id: t
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function Lerp(a As Double, b As Double, t As Double) As Double
  overload: g3.MathUtil.Lerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.SmoothStep(System.Single,System.Single,System.Single)
  commentId: M:g3.MathUtil.SmoothStep(System.Single,System.Single,System.Single)
  id: SmoothStep(System.Single,System.Single,System.Single)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: SmoothStep(Single, Single, Single)
  nameWithType: MathUtil.SmoothStep(Single, Single, Single)
  fullName: g3.MathUtil.SmoothStep(System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: SmoothStep
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 344
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static float SmoothStep(float a, float b, float t)
    parameters:
    - id: a
      type: System.Single
    - id: b
      type: System.Single
    - id: t
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function SmoothStep(a As Single, b As Single, t As Single) As Single
  overload: g3.MathUtil.SmoothStep*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.SmoothStep(System.Double,System.Double,System.Double)
  commentId: M:g3.MathUtil.SmoothStep(System.Double,System.Double,System.Double)
  id: SmoothStep(System.Double,System.Double,System.Double)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: SmoothStep(Double, Double, Double)
  nameWithType: MathUtil.SmoothStep(Double, Double, Double)
  fullName: g3.MathUtil.SmoothStep(System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: SmoothStep
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 348
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double SmoothStep(double a, double b, double t)
    parameters:
    - id: a
      type: System.Double
    - id: b
      type: System.Double
    - id: t
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function SmoothStep(a As Double, b As Double, t As Double) As Double
  overload: g3.MathUtil.SmoothStep*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.SmoothInterp(System.Single,System.Single,System.Single)
  commentId: M:g3.MathUtil.SmoothInterp(System.Single,System.Single,System.Single)
  id: SmoothInterp(System.Single,System.Single,System.Single)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: SmoothInterp(Single, Single, Single)
  nameWithType: MathUtil.SmoothInterp(Single, Single, Single)
  fullName: g3.MathUtil.SmoothInterp(System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: SmoothInterp
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 354
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static float SmoothInterp(float a, float b, float t)
    parameters:
    - id: a
      type: System.Single
    - id: b
      type: System.Single
    - id: t
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function SmoothInterp(a As Single, b As Single, t As Single) As Single
  overload: g3.MathUtil.SmoothInterp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.SmoothInterp(System.Double,System.Double,System.Double)
  commentId: M:g3.MathUtil.SmoothInterp(System.Double,System.Double,System.Double)
  id: SmoothInterp(System.Double,System.Double,System.Double)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: SmoothInterp(Double, Double, Double)
  nameWithType: MathUtil.SmoothInterp(Double, Double, Double)
  fullName: g3.MathUtil.SmoothInterp(System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: SmoothInterp
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 358
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double SmoothInterp(double a, double b, double t)
    parameters:
    - id: a
      type: System.Double
    - id: b
      type: System.Double
    - id: t
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function SmoothInterp(a As Double, b As Double, t As Double) As Double
  overload: g3.MathUtil.SmoothInterp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.SmoothRise0To1(System.Single,System.Single,System.Single,System.Single)
  commentId: M:g3.MathUtil.SmoothRise0To1(System.Single,System.Single,System.Single,System.Single)
  id: SmoothRise0To1(System.Single,System.Single,System.Single,System.Single)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: SmoothRise0To1(Single, Single, Single, Single)
  nameWithType: MathUtil.SmoothRise0To1(Single, Single, Single, Single)
  fullName: g3.MathUtil.SmoothRise0To1(System.Single, System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: SmoothRise0To1
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 366
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static float SmoothRise0To1(float fX, float yshift, float xZero, float speed)
    parameters:
    - id: fX
      type: System.Single
    - id: yshift
      type: System.Single
    - id: xZero
      type: System.Single
    - id: speed
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function SmoothRise0To1(fX As Single, yshift As Single, xZero As Single, speed As Single) As Single
  overload: g3.MathUtil.SmoothRise0To1*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.WyvillRise01(System.Single)
  commentId: M:g3.MathUtil.WyvillRise01(System.Single)
  id: WyvillRise01(System.Single)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: WyvillRise01(Single)
  nameWithType: MathUtil.WyvillRise01(Single)
  fullName: g3.MathUtil.WyvillRise01(System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: WyvillRise01
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 373
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static float WyvillRise01(float fX)
    parameters:
    - id: fX
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function WyvillRise01(fX As Single) As Single
  overload: g3.MathUtil.WyvillRise01*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.WyvillRise01(System.Double)
  commentId: M:g3.MathUtil.WyvillRise01(System.Double)
  id: WyvillRise01(System.Double)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: WyvillRise01(Double)
  nameWithType: MathUtil.WyvillRise01(Double)
  fullName: g3.MathUtil.WyvillRise01(System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: WyvillRise01
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 377
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double WyvillRise01(double fX)
    parameters:
    - id: fX
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function WyvillRise01(fX As Double) As Double
  overload: g3.MathUtil.WyvillRise01*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.WyvillFalloff01(System.Single)
  commentId: M:g3.MathUtil.WyvillFalloff01(System.Single)
  id: WyvillFalloff01(System.Single)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: WyvillFalloff01(Single)
  nameWithType: MathUtil.WyvillFalloff01(Single)
  fullName: g3.MathUtil.WyvillFalloff01(System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: WyvillFalloff01
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 382
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static float WyvillFalloff01(float fX)
    parameters:
    - id: fX
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function WyvillFalloff01(fX As Single) As Single
  overload: g3.MathUtil.WyvillFalloff01*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.WyvillFalloff01(System.Double)
  commentId: M:g3.MathUtil.WyvillFalloff01(System.Double)
  id: WyvillFalloff01(System.Double)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: WyvillFalloff01(Double)
  nameWithType: MathUtil.WyvillFalloff01(Double)
  fullName: g3.MathUtil.WyvillFalloff01(System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: WyvillFalloff01
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 386
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double WyvillFalloff01(double fX)
    parameters:
    - id: fX
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function WyvillFalloff01(fX As Double) As Double
  overload: g3.MathUtil.WyvillFalloff01*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.WyvillFalloff(System.Single,System.Single,System.Single)
  commentId: M:g3.MathUtil.WyvillFalloff(System.Single,System.Single,System.Single)
  id: WyvillFalloff(System.Single,System.Single,System.Single)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: WyvillFalloff(Single, Single, Single)
  nameWithType: MathUtil.WyvillFalloff(Single, Single, Single)
  fullName: g3.MathUtil.WyvillFalloff(System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: WyvillFalloff
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 392
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static float WyvillFalloff(float fD, float fInnerRad, float fOuterRad)
    parameters:
    - id: fD
      type: System.Single
    - id: fInnerRad
      type: System.Single
    - id: fOuterRad
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function WyvillFalloff(fD As Single, fInnerRad As Single, fOuterRad As Single) As Single
  overload: g3.MathUtil.WyvillFalloff*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.WyvillFalloff(System.Double,System.Double,System.Double)
  commentId: M:g3.MathUtil.WyvillFalloff(System.Double,System.Double,System.Double)
  id: WyvillFalloff(System.Double,System.Double,System.Double)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: WyvillFalloff(Double, Double, Double)
  nameWithType: MathUtil.WyvillFalloff(Double, Double, Double)
  fullName: g3.MathUtil.WyvillFalloff(System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: WyvillFalloff
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 405
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double WyvillFalloff(double fD, double fInnerRad, double fOuterRad)
    parameters:
    - id: fD
      type: System.Double
    - id: fInnerRad
      type: System.Double
    - id: fOuterRad
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Shared Function WyvillFalloff(fD As Double, fInnerRad As Double, fOuterRad As Double) As Double
  overload: g3.MathUtil.WyvillFalloff*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.LinearRampT(System.Single,System.Single,System.Single)
  commentId: M:g3.MathUtil.LinearRampT(System.Single,System.Single,System.Single)
  id: LinearRampT(System.Single,System.Single,System.Single)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: LinearRampT(Single, Single, Single)
  nameWithType: MathUtil.LinearRampT(Single, Single, Single)
  fullName: g3.MathUtil.LinearRampT(System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: LinearRampT
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 422
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static float LinearRampT(float R, float deadzoneR, float x)
    parameters:
    - id: R
      type: System.Single
    - id: deadzoneR
      type: System.Single
    - id: x
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function LinearRampT(R As Single, deadzoneR As Single, x As Single) As Single
  overload: g3.MathUtil.LinearRampT*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.Area(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@)
  commentId: M:g3.MathUtil.Area(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@)
  id: Area(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: Area(ref Vector3d, ref Vector3d, ref Vector3d)
  nameWithType: MathUtil.Area(ref Vector3d, ref Vector3d, ref Vector3d)
  fullName: g3.MathUtil.Area(ref g3.Vector3d, ref g3.Vector3d, ref g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Area
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 439
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double Area(ref Vector3d v1, ref Vector3d v2, ref Vector3d v3)
    parameters:
    - id: v1
      type: g3.Vector3d
    - id: v2
      type: g3.Vector3d
    - id: v3
      type: g3.Vector3d
    return:
      type: System.Double
    content.vb: Public Shared Function Area(ByRef v1 As Vector3d, ByRef v2 As Vector3d, ByRef v3 As Vector3d) As Double
  overload: g3.MathUtil.Area*
  nameWithType.vb: MathUtil.Area(ByRef Vector3d, ByRef Vector3d, ByRef Vector3d)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.MathUtil.Area(ByRef g3.Vector3d, ByRef g3.Vector3d, ByRef g3.Vector3d)
  name.vb: Area(ByRef Vector3d, ByRef Vector3d, ByRef Vector3d)
- uid: g3.MathUtil.Area(g3.Vector3d,g3.Vector3d,g3.Vector3d)
  commentId: M:g3.MathUtil.Area(g3.Vector3d,g3.Vector3d,g3.Vector3d)
  id: Area(g3.Vector3d,g3.Vector3d,g3.Vector3d)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: Area(Vector3d, Vector3d, Vector3d)
  nameWithType: MathUtil.Area(Vector3d, Vector3d, Vector3d)
  fullName: g3.MathUtil.Area(g3.Vector3d, g3.Vector3d, g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Area
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 442
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double Area(Vector3d v1, Vector3d v2, Vector3d v3)
    parameters:
    - id: v1
      type: g3.Vector3d
    - id: v2
      type: g3.Vector3d
    - id: v3
      type: g3.Vector3d
    return:
      type: System.Double
    content.vb: Public Shared Function Area(v1 As Vector3d, v2 As Vector3d, v3 As Vector3d) As Double
  overload: g3.MathUtil.Area*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.Normal(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@)
  commentId: M:g3.MathUtil.Normal(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@)
  id: Normal(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: Normal(ref Vector3d, ref Vector3d, ref Vector3d)
  nameWithType: MathUtil.Normal(ref Vector3d, ref Vector3d, ref Vector3d)
  fullName: g3.MathUtil.Normal(ref g3.Vector3d, ref g3.Vector3d, ref g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Normal
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 447
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector3d Normal(ref Vector3d v1, ref Vector3d v2, ref Vector3d v3)
    parameters:
    - id: v1
      type: g3.Vector3d
    - id: v2
      type: g3.Vector3d
    - id: v3
      type: g3.Vector3d
    return:
      type: g3.Vector3d
    content.vb: Public Shared Function Normal(ByRef v1 As Vector3d, ByRef v2 As Vector3d, ByRef v3 As Vector3d) As Vector3d
  overload: g3.MathUtil.Normal*
  nameWithType.vb: MathUtil.Normal(ByRef Vector3d, ByRef Vector3d, ByRef Vector3d)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.MathUtil.Normal(ByRef g3.Vector3d, ByRef g3.Vector3d, ByRef g3.Vector3d)
  name.vb: Normal(ByRef Vector3d, ByRef Vector3d, ByRef Vector3d)
- uid: g3.MathUtil.Normal(g3.Vector3d,g3.Vector3d,g3.Vector3d)
  commentId: M:g3.MathUtil.Normal(g3.Vector3d,g3.Vector3d,g3.Vector3d)
  id: Normal(g3.Vector3d,g3.Vector3d,g3.Vector3d)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: Normal(Vector3d, Vector3d, Vector3d)
  nameWithType: MathUtil.Normal(Vector3d, Vector3d, Vector3d)
  fullName: g3.MathUtil.Normal(g3.Vector3d, g3.Vector3d, g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Normal
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 456
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector3d Normal(Vector3d v1, Vector3d v2, Vector3d v3)
    parameters:
    - id: v1
      type: g3.Vector3d
    - id: v2
      type: g3.Vector3d
    - id: v3
      type: g3.Vector3d
    return:
      type: g3.Vector3d
    content.vb: Public Shared Function Normal(v1 As Vector3d, v2 As Vector3d, v3 As Vector3d) As Vector3d
  overload: g3.MathUtil.Normal*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.FastNormalDirection(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@)
  commentId: M:g3.MathUtil.FastNormalDirection(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@)
  id: FastNormalDirection(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: FastNormalDirection(ref Vector3d, ref Vector3d, ref Vector3d)
  nameWithType: MathUtil.FastNormalDirection(ref Vector3d, ref Vector3d, ref Vector3d)
  fullName: g3.MathUtil.FastNormalDirection(ref g3.Vector3d, ref g3.Vector3d, ref g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: FastNormalDirection
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 465
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\ncompute vector in direction of triangle normal (cross-product). No normalization.\n"
  example: []
  syntax:
    content: public static Vector3d FastNormalDirection(ref Vector3d v1, ref Vector3d v2, ref Vector3d v3)
    parameters:
    - id: v1
      type: g3.Vector3d
    - id: v2
      type: g3.Vector3d
    - id: v3
      type: g3.Vector3d
    return:
      type: g3.Vector3d
      description: The normal direction.
    content.vb: Public Shared Function FastNormalDirection(ByRef v1 As Vector3d, ByRef v2 As Vector3d, ByRef v3 As Vector3d) As Vector3d
  overload: g3.MathUtil.FastNormalDirection*
  nameWithType.vb: MathUtil.FastNormalDirection(ByRef Vector3d, ByRef Vector3d, ByRef Vector3d)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.MathUtil.FastNormalDirection(ByRef g3.Vector3d, ByRef g3.Vector3d, ByRef g3.Vector3d)
  name.vb: FastNormalDirection(ByRef Vector3d, ByRef Vector3d, ByRef Vector3d)
- uid: g3.MathUtil.FastNormalArea(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@,System.Double@)
  commentId: M:g3.MathUtil.FastNormalArea(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@,System.Double@)
  id: FastNormalArea(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@,System.Double@)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: FastNormalArea(ref Vector3d, ref Vector3d, ref Vector3d, out Double)
  nameWithType: MathUtil.FastNormalArea(ref Vector3d, ref Vector3d, ref Vector3d, out Double)
  fullName: g3.MathUtil.FastNormalArea(ref g3.Vector3d, ref g3.Vector3d, ref g3.Vector3d, out System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: FastNormalArea
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 477
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nsimultaneously compute triangle normal and area, and only normalize after\ncross-product, not before (so, fewer normalizes then Normal())\n"
  example: []
  syntax:
    content: public static Vector3d FastNormalArea(ref Vector3d v1, ref Vector3d v2, ref Vector3d v3, out double area)
    parameters:
    - id: v1
      type: g3.Vector3d
    - id: v2
      type: g3.Vector3d
    - id: v3
      type: g3.Vector3d
    - id: area
      type: System.Double
    return:
      type: g3.Vector3d
    content.vb: Public Shared Function FastNormalArea(ByRef v1 As Vector3d, ByRef v2 As Vector3d, ByRef v3 As Vector3d, ByRef area As Double) As Vector3d
  overload: g3.MathUtil.FastNormalArea*
  nameWithType.vb: MathUtil.FastNormalArea(ByRef Vector3d, ByRef Vector3d, ByRef Vector3d, ByRef Double)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.MathUtil.FastNormalArea(ByRef g3.Vector3d, ByRef g3.Vector3d, ByRef g3.Vector3d, ByRef System.Double)
  name.vb: FastNormalArea(ByRef Vector3d, ByRef Vector3d, ByRef Vector3d, ByRef Double)
- uid: g3.MathUtil.AspectRatio(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@)
  commentId: M:g3.MathUtil.AspectRatio(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@)
  id: AspectRatio(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: AspectRatio(ref Vector3d, ref Vector3d, ref Vector3d)
  nameWithType: MathUtil.AspectRatio(ref Vector3d, ref Vector3d, ref Vector3d)
  fullName: g3.MathUtil.AspectRatio(ref g3.Vector3d, ref g3.Vector3d, ref g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AspectRatio
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 490
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\naspect ratio of triangle \n"
  example: []
  syntax:
    content: public static double AspectRatio(ref Vector3d v1, ref Vector3d v2, ref Vector3d v3)
    parameters:
    - id: v1
      type: g3.Vector3d
    - id: v2
      type: g3.Vector3d
    - id: v3
      type: g3.Vector3d
    return:
      type: System.Double
    content.vb: Public Shared Function AspectRatio(ByRef v1 As Vector3d, ByRef v2 As Vector3d, ByRef v3 As Vector3d) As Double
  overload: g3.MathUtil.AspectRatio*
  nameWithType.vb: MathUtil.AspectRatio(ByRef Vector3d, ByRef Vector3d, ByRef Vector3d)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.MathUtil.AspectRatio(ByRef g3.Vector3d, ByRef g3.Vector3d, ByRef g3.Vector3d)
  name.vb: AspectRatio(ByRef Vector3d, ByRef Vector3d, ByRef Vector3d)
- uid: g3.MathUtil.AspectRatio(g3.Vector3d,g3.Vector3d,g3.Vector3d)
  commentId: M:g3.MathUtil.AspectRatio(g3.Vector3d,g3.Vector3d,g3.Vector3d)
  id: AspectRatio(g3.Vector3d,g3.Vector3d,g3.Vector3d)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: AspectRatio(Vector3d, Vector3d, Vector3d)
  nameWithType: MathUtil.AspectRatio(Vector3d, Vector3d, Vector3d)
  fullName: g3.MathUtil.AspectRatio(g3.Vector3d, g3.Vector3d, g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AspectRatio
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 496
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double AspectRatio(Vector3d v1, Vector3d v2, Vector3d v3)
    parameters:
    - id: v1
      type: g3.Vector3d
    - id: v2
      type: g3.Vector3d
    - id: v3
      type: g3.Vector3d
    return:
      type: System.Double
    content.vb: Public Shared Function AspectRatio(v1 As Vector3d, v2 As Vector3d, v3 As Vector3d) As Double
  overload: g3.MathUtil.AspectRatio*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.VectorCot(g3.Vector3d,g3.Vector3d)
  commentId: M:g3.MathUtil.VectorCot(g3.Vector3d,g3.Vector3d)
  id: VectorCot(g3.Vector3d,g3.Vector3d)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: VectorCot(Vector3d, Vector3d)
  nameWithType: MathUtil.VectorCot(Vector3d, Vector3d)
  fullName: g3.MathUtil.VectorCot(g3.Vector3d, g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: VectorCot
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 505
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double VectorCot(Vector3d v1, Vector3d v2)
    parameters:
    - id: v1
      type: g3.Vector3d
    - id: v2
      type: g3.Vector3d
    return:
      type: System.Double
    content.vb: Public Shared Function VectorCot(v1 As Vector3d, v2 As Vector3d) As Double
  overload: g3.MathUtil.VectorCot*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.VectorTan(g3.Vector3d,g3.Vector3d)
  commentId: M:g3.MathUtil.VectorTan(g3.Vector3d,g3.Vector3d)
  id: VectorTan(g3.Vector3d,g3.Vector3d)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: VectorTan(Vector3d, Vector3d)
  nameWithType: MathUtil.VectorTan(Vector3d, Vector3d)
  fullName: g3.MathUtil.VectorTan(g3.Vector3d, g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: VectorTan
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 517
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double VectorTan(Vector3d v1, Vector3d v2)
    parameters:
    - id: v1
      type: g3.Vector3d
    - id: v2
      type: g3.Vector3d
    return:
      type: System.Double
    content.vb: Public Shared Function VectorTan(v1 As Vector3d, v2 As Vector3d) As Double
  overload: g3.MathUtil.VectorTan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.IsObtuse(g3.Vector3d,g3.Vector3d,g3.Vector3d)
  commentId: M:g3.MathUtil.IsObtuse(g3.Vector3d,g3.Vector3d,g3.Vector3d)
  id: IsObtuse(g3.Vector3d,g3.Vector3d,g3.Vector3d)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: IsObtuse(Vector3d, Vector3d, Vector3d)
  nameWithType: MathUtil.IsObtuse(Vector3d, Vector3d, Vector3d)
  fullName: g3.MathUtil.IsObtuse(g3.Vector3d, g3.Vector3d, g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IsObtuse
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 529
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static bool IsObtuse(Vector3d v1, Vector3d v2, Vector3d v3)
    parameters:
    - id: v1
      type: g3.Vector3d
    - id: v2
      type: g3.Vector3d
    - id: v3
      type: g3.Vector3d
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsObtuse(v1 As Vector3d, v2 As Vector3d, v3 As Vector3d) As Boolean
  overload: g3.MathUtil.IsObtuse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.IsLeft(g3.Vector2d,g3.Vector2d,g3.Vector2d)
  commentId: M:g3.MathUtil.IsLeft(g3.Vector2d,g3.Vector2d,g3.Vector2d)
  id: IsLeft(g3.Vector2d,g3.Vector2d,g3.Vector2d)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: IsLeft(Vector2d, Vector2d, Vector2d)
  nameWithType: MathUtil.IsLeft(Vector2d, Vector2d, Vector2d)
  fullName: g3.MathUtil.IsLeft(g3.Vector2d, g3.Vector2d, g3.Vector2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IsLeft
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 541
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double IsLeft(Vector2d P0, Vector2d P1, Vector2d P2)
    parameters:
    - id: P0
      type: g3.Vector2d
    - id: P1
      type: g3.Vector2d
    - id: P2
      type: g3.Vector2d
    return:
      type: System.Double
    content.vb: Public Shared Function IsLeft(P0 As Vector2d, P1 As Vector2d, P2 As Vector2d) As Double
  overload: g3.MathUtil.IsLeft*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.IsLeft(g3.Vector2d@,g3.Vector2d@,g3.Vector2d@)
  commentId: M:g3.MathUtil.IsLeft(g3.Vector2d@,g3.Vector2d@,g3.Vector2d@)
  id: IsLeft(g3.Vector2d@,g3.Vector2d@,g3.Vector2d@)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: IsLeft(ref Vector2d, ref Vector2d, ref Vector2d)
  nameWithType: MathUtil.IsLeft(ref Vector2d, ref Vector2d, ref Vector2d)
  fullName: g3.MathUtil.IsLeft(ref g3.Vector2d, ref g3.Vector2d, ref g3.Vector2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IsLeft
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 545
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double IsLeft(ref Vector2d P0, ref Vector2d P1, ref Vector2d P2)
    parameters:
    - id: P0
      type: g3.Vector2d
    - id: P1
      type: g3.Vector2d
    - id: P2
      type: g3.Vector2d
    return:
      type: System.Double
    content.vb: Public Shared Function IsLeft(ByRef P0 As Vector2d, ByRef P1 As Vector2d, ByRef P2 As Vector2d) As Double
  overload: g3.MathUtil.IsLeft*
  nameWithType.vb: MathUtil.IsLeft(ByRef Vector2d, ByRef Vector2d, ByRef Vector2d)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.MathUtil.IsLeft(ByRef g3.Vector2d, ByRef g3.Vector2d, ByRef g3.Vector2d)
  name.vb: IsLeft(ByRef Vector2d, ByRef Vector2d, ByRef Vector2d)
- uid: g3.MathUtil.BarycentricCoords(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@,g3.Vector3d@)
  commentId: M:g3.MathUtil.BarycentricCoords(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@,g3.Vector3d@)
  id: BarycentricCoords(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@,g3.Vector3d@)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: BarycentricCoords(ref Vector3d, ref Vector3d, ref Vector3d, ref Vector3d)
  nameWithType: MathUtil.BarycentricCoords(ref Vector3d, ref Vector3d, ref Vector3d, ref Vector3d)
  fullName: g3.MathUtil.BarycentricCoords(ref g3.Vector3d, ref g3.Vector3d, ref g3.Vector3d, ref g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: BarycentricCoords
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 556
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nCompute barycentric coordinates/weights of vPoint inside triangle (V0,V1,V2). \nIf point is in triangle plane and inside triangle, coords will be positive and sum to 1.\nie if result is a, then vPoint = a.x*V0 + a.y*V1 + a.z*V2.\n"
  example: []
  syntax:
    content: public static Vector3d BarycentricCoords(ref Vector3d vPoint, ref Vector3d V0, ref Vector3d V1, ref Vector3d V2)
    parameters:
    - id: vPoint
      type: g3.Vector3d
    - id: V0
      type: g3.Vector3d
    - id: V1
      type: g3.Vector3d
    - id: V2
      type: g3.Vector3d
    return:
      type: g3.Vector3d
    content.vb: Public Shared Function BarycentricCoords(ByRef vPoint As Vector3d, ByRef V0 As Vector3d, ByRef V1 As Vector3d, ByRef V2 As Vector3d) As Vector3d
  overload: g3.MathUtil.BarycentricCoords*
  nameWithType.vb: MathUtil.BarycentricCoords(ByRef Vector3d, ByRef Vector3d, ByRef Vector3d, ByRef Vector3d)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.MathUtil.BarycentricCoords(ByRef g3.Vector3d, ByRef g3.Vector3d, ByRef g3.Vector3d, ByRef g3.Vector3d)
  name.vb: BarycentricCoords(ByRef Vector3d, ByRef Vector3d, ByRef Vector3d, ByRef Vector3d)
- uid: g3.MathUtil.BarycentricCoords(g3.Vector3d,g3.Vector3d,g3.Vector3d,g3.Vector3d)
  commentId: M:g3.MathUtil.BarycentricCoords(g3.Vector3d,g3.Vector3d,g3.Vector3d,g3.Vector3d)
  id: BarycentricCoords(g3.Vector3d,g3.Vector3d,g3.Vector3d,g3.Vector3d)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: BarycentricCoords(Vector3d, Vector3d, Vector3d, Vector3d)
  nameWithType: MathUtil.BarycentricCoords(Vector3d, Vector3d, Vector3d, Vector3d)
  fullName: g3.MathUtil.BarycentricCoords(g3.Vector3d, g3.Vector3d, g3.Vector3d, g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: BarycentricCoords
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 573
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector3d BarycentricCoords(Vector3d vPoint, Vector3d V0, Vector3d V1, Vector3d V2)
    parameters:
    - id: vPoint
      type: g3.Vector3d
    - id: V0
      type: g3.Vector3d
    - id: V1
      type: g3.Vector3d
    - id: V2
      type: g3.Vector3d
    return:
      type: g3.Vector3d
    content.vb: Public Shared Function BarycentricCoords(vPoint As Vector3d, V0 As Vector3d, V1 As Vector3d, V2 As Vector3d) As Vector3d
  overload: g3.MathUtil.BarycentricCoords*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.BarycentricCoords(g3.Vector2d,g3.Vector2d,g3.Vector2d,g3.Vector2d)
  commentId: M:g3.MathUtil.BarycentricCoords(g3.Vector2d,g3.Vector2d,g3.Vector2d,g3.Vector2d)
  id: BarycentricCoords(g3.Vector2d,g3.Vector2d,g3.Vector2d,g3.Vector2d)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: BarycentricCoords(Vector2d, Vector2d, Vector2d, Vector2d)
  nameWithType: MathUtil.BarycentricCoords(Vector2d, Vector2d, Vector2d, Vector2d)
  fullName: g3.MathUtil.BarycentricCoords(g3.Vector2d, g3.Vector2d, g3.Vector2d, g3.Vector2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: BarycentricCoords
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 582
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nCompute barycentric coordinates/weights of vPoint inside triangle (V0,V1,V2). \nIf point is inside triangle, coords will pe positive and sum to 1.\nie if result is a, then vPoint = a.x*V0 + a.y*V1 + a.z*V2.\n"
  example: []
  syntax:
    content: public static Vector3d BarycentricCoords(Vector2d vPoint, Vector2d V0, Vector2d V1, Vector2d V2)
    parameters:
    - id: vPoint
      type: g3.Vector2d
    - id: V0
      type: g3.Vector2d
    - id: V1
      type: g3.Vector2d
    - id: V2
      type: g3.Vector2d
    return:
      type: g3.Vector3d
    content.vb: Public Shared Function BarycentricCoords(vPoint As Vector2d, V0 As Vector2d, V1 As Vector2d, V2 As Vector2d) As Vector3d
  overload: g3.MathUtil.BarycentricCoords*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.TriSolidAngle(g3.Vector3d,g3.Vector3d,g3.Vector3d,g3.Vector3d@)
  commentId: M:g3.MathUtil.TriSolidAngle(g3.Vector3d,g3.Vector3d,g3.Vector3d,g3.Vector3d@)
  id: TriSolidAngle(g3.Vector3d,g3.Vector3d,g3.Vector3d,g3.Vector3d@)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: TriSolidAngle(Vector3d, Vector3d, Vector3d, ref Vector3d)
  nameWithType: MathUtil.TriSolidAngle(Vector3d, Vector3d, Vector3d, ref Vector3d)
  fullName: g3.MathUtil.TriSolidAngle(g3.Vector3d, g3.Vector3d, g3.Vector3d, ref g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: TriSolidAngle
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 605
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nsigned winding angle of oriented triangle [a,b,c] wrt point p\nformula from Jacobson et al 13 http://igl.ethz.ch/projects/winding-number/\n"
  example: []
  syntax:
    content: public static double TriSolidAngle(Vector3d a, Vector3d b, Vector3d c, ref Vector3d p)
    parameters:
    - id: a
      type: g3.Vector3d
    - id: b
      type: g3.Vector3d
    - id: c
      type: g3.Vector3d
    - id: p
      type: g3.Vector3d
    return:
      type: System.Double
    content.vb: Public Shared Function TriSolidAngle(a As Vector3d, b As Vector3d, c As Vector3d, ByRef p As Vector3d) As Double
  overload: g3.MathUtil.TriSolidAngle*
  nameWithType.vb: MathUtil.TriSolidAngle(Vector3d, Vector3d, Vector3d, ByRef Vector3d)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.MathUtil.TriSolidAngle(g3.Vector3d, g3.Vector3d, g3.Vector3d, ByRef g3.Vector3d)
  name.vb: TriSolidAngle(Vector3d, Vector3d, Vector3d, ByRef Vector3d)
- uid: g3.MathUtil.SolveQuadratic(System.Double,System.Double,System.Double,System.Double@,System.Double@)
  commentId: M:g3.MathUtil.SolveQuadratic(System.Double,System.Double,System.Double,System.Double@,System.Double@)
  id: SolveQuadratic(System.Double,System.Double,System.Double,System.Double@,System.Double@)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: SolveQuadratic(Double, Double, Double, out Double, out Double)
  nameWithType: MathUtil.SolveQuadratic(Double, Double, Double, out Double, out Double)
  fullName: g3.MathUtil.SolveQuadratic(System.Double, System.Double, System.Double, out System.Double, out System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: SolveQuadratic
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 616
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static bool SolveQuadratic(double a, double b, double c, out double minT, out double maxT)
    parameters:
    - id: a
      type: System.Double
    - id: b
      type: System.Double
    - id: c
      type: System.Double
    - id: minT
      type: System.Double
    - id: maxT
      type: System.Double
    return:
      type: System.Boolean
    content.vb: Public Shared Function SolveQuadratic(a As Double, b As Double, c As Double, ByRef minT As Double, ByRef maxT As Double) As Boolean
  overload: g3.MathUtil.SolveQuadratic*
  nameWithType.vb: MathUtil.SolveQuadratic(Double, Double, Double, ByRef Double, ByRef Double)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.MathUtil.SolveQuadratic(System.Double, System.Double, System.Double, ByRef System.Double, ByRef System.Double)
  name.vb: SolveQuadratic(Double, Double, Double, ByRef Double, ByRef Double)
- uid: g3.MathUtil.PowerOf10(System.Int32)
  commentId: M:g3.MathUtil.PowerOf10(System.Int32)
  id: PowerOf10(System.Int32)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: PowerOf10(Int32)
  nameWithType: MathUtil.PowerOf10(Int32)
  fullName: g3.MathUtil.PowerOf10(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: PowerOf10
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 641
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static int PowerOf10(int n)
    parameters:
    - id: n
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function PowerOf10(n As Integer) As Integer
  overload: g3.MathUtil.PowerOf10*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.MathUtil.ModuloIteration(System.Int32,System.Int32)
  commentId: M:g3.MathUtil.ModuloIteration(System.Int32,System.Int32)
  id: ModuloIteration(System.Int32,System.Int32)
  parent: g3.MathUtil
  langs:
  - csharp
  - vb
  name: ModuloIteration(Int32, Int32)
  nameWithType: MathUtil.ModuloIteration(Int32, Int32)
  fullName: g3.MathUtil.ModuloIteration(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/MathUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ModuloIteration
    path: ../Assets/geometry3Sharp/math/MathUtil.cs
    startLine: 649
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nIterate from 0 to (nMax-1) using prime-modulo, so we see every index once, but not in-order\n"
  example: []
  syntax:
    content: public static IEnumerable<int> ModuloIteration(int nMaxExclusive, int nPrime = 31337)
    parameters:
    - id: nMaxExclusive
      type: System.Int32
    - id: nPrime
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{System.Int32}
    content.vb: Public Shared Function ModuloIteration(nMaxExclusive As Integer, nPrime As Integer = 31337) As IEnumerable(Of Integer)
  overload: g3.MathUtil.ModuloIteration*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: g3.MathUtil.IsFinite*
  commentId: Overload:g3.MathUtil.IsFinite
  name: IsFinite
  nameWithType: MathUtil.IsFinite
  fullName: g3.MathUtil.IsFinite
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: g3.MathUtil.EpsilonEqual*
  commentId: Overload:g3.MathUtil.EpsilonEqual
  name: EpsilonEqual
  nameWithType: MathUtil.EpsilonEqual
  fullName: g3.MathUtil.EpsilonEqual
- uid: g3.MathUtil.Clamp*
  commentId: Overload:g3.MathUtil.Clamp
  name: Clamp
  nameWithType: MathUtil.Clamp
  fullName: g3.MathUtil.Clamp
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: g3.MathUtil.ModuloClamp*
  commentId: Overload:g3.MathUtil.ModuloClamp
  name: ModuloClamp
  nameWithType: MathUtil.ModuloClamp
  fullName: g3.MathUtil.ModuloClamp
- uid: g3.MathUtil.RangeClamp*
  commentId: Overload:g3.MathUtil.RangeClamp
  name: RangeClamp
  nameWithType: MathUtil.RangeClamp
  fullName: g3.MathUtil.RangeClamp
- uid: g3.MathUtil.SignedClamp*
  commentId: Overload:g3.MathUtil.SignedClamp
  name: SignedClamp
  nameWithType: MathUtil.SignedClamp
  fullName: g3.MathUtil.SignedClamp
- uid: g3.MathUtil.InRange*
  commentId: Overload:g3.MathUtil.InRange
  name: InRange
  nameWithType: MathUtil.InRange
  fullName: g3.MathUtil.InRange
- uid: g3.MathUtil.ClampAngleDeg*
  commentId: Overload:g3.MathUtil.ClampAngleDeg
  name: ClampAngleDeg
  nameWithType: MathUtil.ClampAngleDeg
  fullName: g3.MathUtil.ClampAngleDeg
- uid: g3.MathUtil.ClampAngleRad*
  commentId: Overload:g3.MathUtil.ClampAngleRad
  name: ClampAngleRad
  nameWithType: MathUtil.ClampAngleRad
  fullName: g3.MathUtil.ClampAngleRad
- uid: g3.MathUtil.WrapSignedIndex*
  commentId: Overload:g3.MathUtil.WrapSignedIndex
  name: WrapSignedIndex
  nameWithType: MathUtil.WrapSignedIndex
  fullName: g3.MathUtil.WrapSignedIndex
- uid: g3.MathUtil.MinMax*
  commentId: Overload:g3.MathUtil.MinMax
  name: MinMax
  nameWithType: MathUtil.MinMax
  fullName: g3.MathUtil.MinMax
- uid: g3.MathUtil.Min*
  commentId: Overload:g3.MathUtil.Min
  name: Min
  nameWithType: MathUtil.Min
  fullName: g3.MathUtil.Min
- uid: g3.MathUtil.Max*
  commentId: Overload:g3.MathUtil.Max
  name: Max
  nameWithType: MathUtil.Max
  fullName: g3.MathUtil.Max
- uid: g3.MathUtil.InvSqrt*
  commentId: Overload:g3.MathUtil.InvSqrt
  name: InvSqrt
  nameWithType: MathUtil.InvSqrt
  fullName: g3.MathUtil.InvSqrt
- uid: g3.MathUtil.Atan2Positive*
  commentId: Overload:g3.MathUtil.Atan2Positive
  name: Atan2Positive
  nameWithType: MathUtil.Atan2Positive
  fullName: g3.MathUtil.Atan2Positive
- uid: g3.MathUtil.PlaneAngleD*
  commentId: Overload:g3.MathUtil.PlaneAngleD
  name: PlaneAngleD
  nameWithType: MathUtil.PlaneAngleD
  fullName: g3.MathUtil.PlaneAngleD
- uid: g3.Vector3f
  commentId: T:g3.Vector3f
  parent: g3
  name: Vector3f
  nameWithType: Vector3f
  fullName: g3.Vector3f
- uid: g3.Vector3d
  commentId: T:g3.Vector3d
  parent: g3
  name: Vector3d
  nameWithType: Vector3d
  fullName: g3.Vector3d
- uid: g3.MathUtil.PlaneAngleSignedD*
  commentId: Overload:g3.MathUtil.PlaneAngleSignedD
  name: PlaneAngleSignedD
  nameWithType: MathUtil.PlaneAngleSignedD
  fullName: g3.MathUtil.PlaneAngleSignedD
- uid: g3.Vector2f
  commentId: T:g3.Vector2f
  parent: g3
  name: Vector2f
  nameWithType: Vector2f
  fullName: g3.Vector2f
- uid: g3.Vector2d
  commentId: T:g3.Vector2d
  parent: g3
  name: Vector2d
  nameWithType: Vector2d
  fullName: g3.Vector2d
- uid: g3.MathUtil.MostParallelAxis*
  commentId: Overload:g3.MathUtil.MostParallelAxis
  name: MostParallelAxis
  nameWithType: MathUtil.MostParallelAxis
  fullName: g3.MathUtil.MostParallelAxis
- uid: g3.Frame3f
  commentId: T:g3.Frame3f
  parent: g3
  name: Frame3f
  nameWithType: Frame3f
  fullName: g3.Frame3f
- uid: g3.MathUtil.Lerp*
  commentId: Overload:g3.MathUtil.Lerp
  name: Lerp
  nameWithType: MathUtil.Lerp
  fullName: g3.MathUtil.Lerp
- uid: g3.MathUtil.SmoothStep*
  commentId: Overload:g3.MathUtil.SmoothStep
  name: SmoothStep
  nameWithType: MathUtil.SmoothStep
  fullName: g3.MathUtil.SmoothStep
- uid: g3.MathUtil.SmoothInterp*
  commentId: Overload:g3.MathUtil.SmoothInterp
  name: SmoothInterp
  nameWithType: MathUtil.SmoothInterp
  fullName: g3.MathUtil.SmoothInterp
- uid: g3.MathUtil.SmoothRise0To1*
  commentId: Overload:g3.MathUtil.SmoothRise0To1
  name: SmoothRise0To1
  nameWithType: MathUtil.SmoothRise0To1
  fullName: g3.MathUtil.SmoothRise0To1
- uid: g3.MathUtil.WyvillRise01*
  commentId: Overload:g3.MathUtil.WyvillRise01
  name: WyvillRise01
  nameWithType: MathUtil.WyvillRise01
  fullName: g3.MathUtil.WyvillRise01
- uid: g3.MathUtil.WyvillFalloff01*
  commentId: Overload:g3.MathUtil.WyvillFalloff01
  name: WyvillFalloff01
  nameWithType: MathUtil.WyvillFalloff01
  fullName: g3.MathUtil.WyvillFalloff01
- uid: g3.MathUtil.WyvillFalloff*
  commentId: Overload:g3.MathUtil.WyvillFalloff
  name: WyvillFalloff
  nameWithType: MathUtil.WyvillFalloff
  fullName: g3.MathUtil.WyvillFalloff
- uid: g3.MathUtil.LinearRampT*
  commentId: Overload:g3.MathUtil.LinearRampT
  name: LinearRampT
  nameWithType: MathUtil.LinearRampT
  fullName: g3.MathUtil.LinearRampT
- uid: g3.MathUtil.Area*
  commentId: Overload:g3.MathUtil.Area
  name: Area
  nameWithType: MathUtil.Area
  fullName: g3.MathUtil.Area
- uid: g3.MathUtil.Normal*
  commentId: Overload:g3.MathUtil.Normal
  name: Normal
  nameWithType: MathUtil.Normal
  fullName: g3.MathUtil.Normal
- uid: g3.MathUtil.FastNormalDirection*
  commentId: Overload:g3.MathUtil.FastNormalDirection
  name: FastNormalDirection
  nameWithType: MathUtil.FastNormalDirection
  fullName: g3.MathUtil.FastNormalDirection
- uid: g3.MathUtil.FastNormalArea*
  commentId: Overload:g3.MathUtil.FastNormalArea
  name: FastNormalArea
  nameWithType: MathUtil.FastNormalArea
  fullName: g3.MathUtil.FastNormalArea
- uid: g3.MathUtil.AspectRatio*
  commentId: Overload:g3.MathUtil.AspectRatio
  name: AspectRatio
  nameWithType: MathUtil.AspectRatio
  fullName: g3.MathUtil.AspectRatio
- uid: g3.MathUtil.VectorCot*
  commentId: Overload:g3.MathUtil.VectorCot
  name: VectorCot
  nameWithType: MathUtil.VectorCot
  fullName: g3.MathUtil.VectorCot
- uid: g3.MathUtil.VectorTan*
  commentId: Overload:g3.MathUtil.VectorTan
  name: VectorTan
  nameWithType: MathUtil.VectorTan
  fullName: g3.MathUtil.VectorTan
- uid: g3.MathUtil.IsObtuse*
  commentId: Overload:g3.MathUtil.IsObtuse
  name: IsObtuse
  nameWithType: MathUtil.IsObtuse
  fullName: g3.MathUtil.IsObtuse
- uid: g3.MathUtil.IsLeft*
  commentId: Overload:g3.MathUtil.IsLeft
  name: IsLeft
  nameWithType: MathUtil.IsLeft
  fullName: g3.MathUtil.IsLeft
- uid: g3.MathUtil.BarycentricCoords*
  commentId: Overload:g3.MathUtil.BarycentricCoords
  name: BarycentricCoords
  nameWithType: MathUtil.BarycentricCoords
  fullName: g3.MathUtil.BarycentricCoords
- uid: g3.MathUtil.TriSolidAngle*
  commentId: Overload:g3.MathUtil.TriSolidAngle
  name: TriSolidAngle
  nameWithType: MathUtil.TriSolidAngle
  fullName: g3.MathUtil.TriSolidAngle
- uid: g3.MathUtil.SolveQuadratic*
  commentId: Overload:g3.MathUtil.SolveQuadratic
  name: SolveQuadratic
  nameWithType: MathUtil.SolveQuadratic
  fullName: g3.MathUtil.SolveQuadratic
- uid: g3.MathUtil.PowerOf10*
  commentId: Overload:g3.MathUtil.PowerOf10
  name: PowerOf10
  nameWithType: MathUtil.PowerOf10
  fullName: g3.MathUtil.PowerOf10
- uid: g3.MathUtil.ModuloIteration*
  commentId: Overload:g3.MathUtil.ModuloIteration
  name: ModuloIteration
  nameWithType: MathUtil.ModuloIteration
  fullName: g3.MathUtil.ModuloIteration
- uid: System.Collections.Generic.IEnumerable{System.Int32}
  commentId: T:System.Collections.Generic.IEnumerable{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Int32>
  nameWithType: IEnumerable<Int32>
  fullName: System.Collections.Generic.IEnumerable<System.Int32>
  nameWithType.vb: IEnumerable(Of Int32)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Int32)
  name.vb: IEnumerable(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic

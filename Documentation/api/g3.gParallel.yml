### YamlMime:ManagedReference
items:
- uid: g3.gParallel
  commentId: T:g3.gParallel
  id: gParallel
  parent: g3
  children:
  - g3.gParallel.BlockStartEnd(System.Int32,System.Int32,System.Action{System.Int32,System.Int32},System.Int32,System.Boolean)
  - g3.gParallel.Evaluate(System.Action[])
  - g3.gParallel.ForEach_Sequential``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  - g3.gParallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  langs:
  - csharp
  - vb
  name: gParallel
  nameWithType: gParallel
  fullName: g3.gParallel
  type: Class
  source:
    remote:
      path: Assets/geometry3Sharp/core/gParallel.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: gParallel
    path: ../Assets/geometry3Sharp/core/gParallel.cs
    startLine: 12
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public class gParallel
    content.vb: Public Class gParallel
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: g3.gParallel.ForEach_Sequential``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  commentId: M:g3.gParallel.ForEach_Sequential``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  id: ForEach_Sequential``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  parent: g3.gParallel
  langs:
  - csharp
  - vb
  name: ForEach_Sequential<T>(IEnumerable<T>, Action<T>)
  nameWithType: gParallel.ForEach_Sequential<T>(IEnumerable<T>, Action<T>)
  fullName: g3.gParallel.ForEach_Sequential<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/gParallel.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ForEach_Sequential
    path: ../Assets/geometry3Sharp/core/gParallel.cs
    startLine: 15
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static void ForEach_Sequential<T>(IEnumerable<T> source, Action<T> body)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
    - id: body
      type: System.Action{{T}}
    typeParameters:
    - id: T
    content.vb: Public Shared Sub ForEach_Sequential(Of T)(source As IEnumerable(Of T), body As Action(Of T))
  overload: g3.gParallel.ForEach_Sequential*
  nameWithType.vb: gParallel.ForEach_Sequential(Of T)(IEnumerable(Of T), Action(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.gParallel.ForEach_Sequential(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Action(Of T))
  name.vb: ForEach_Sequential(Of T)(IEnumerable(Of T), Action(Of T))
- uid: g3.gParallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  commentId: M:g3.gParallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  id: ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  parent: g3.gParallel
  langs:
  - csharp
  - vb
  name: ForEach<T>(IEnumerable<T>, Action<T>)
  nameWithType: gParallel.ForEach<T>(IEnumerable<T>, Action<T>)
  fullName: g3.gParallel.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/gParallel.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ForEach
    path: ../Assets/geometry3Sharp/core/gParallel.cs
    startLine: 20
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static void ForEach<T>(IEnumerable<T> source, Action<T> body)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
    - id: body
      type: System.Action{{T}}
    typeParameters:
    - id: T
    content.vb: Public Shared Sub ForEach(Of T)(source As IEnumerable(Of T), body As Action(Of T))
  overload: g3.gParallel.ForEach*
  nameWithType.vb: gParallel.ForEach(Of T)(IEnumerable(Of T), Action(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.gParallel.ForEach(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Action(Of T))
  name.vb: ForEach(Of T)(IEnumerable(Of T), Action(Of T))
- uid: g3.gParallel.Evaluate(System.Action[])
  commentId: M:g3.gParallel.Evaluate(System.Action[])
  id: Evaluate(System.Action[])
  parent: g3.gParallel
  langs:
  - csharp
  - vb
  name: Evaluate(Action[])
  nameWithType: gParallel.Evaluate(Action[])
  fullName: g3.gParallel.Evaluate(System.Action[])
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/gParallel.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Evaluate
    path: ../Assets/geometry3Sharp/core/gParallel.cs
    startLine: 33
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nEvaluate input actions in parallel\n"
  example: []
  syntax:
    content: public static void Evaluate(params Action[] funcs)
    parameters:
    - id: funcs
      type: System.Action[]
    content.vb: Public Shared Sub Evaluate(ParamArray funcs As Action())
  overload: g3.gParallel.Evaluate*
  nameWithType.vb: gParallel.Evaluate(Action())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.gParallel.Evaluate(System.Action())
  name.vb: Evaluate(Action())
- uid: g3.gParallel.BlockStartEnd(System.Int32,System.Int32,System.Action{System.Int32,System.Int32},System.Int32,System.Boolean)
  commentId: M:g3.gParallel.BlockStartEnd(System.Int32,System.Int32,System.Action{System.Int32,System.Int32},System.Int32,System.Boolean)
  id: BlockStartEnd(System.Int32,System.Int32,System.Action{System.Int32,System.Int32},System.Int32,System.Boolean)
  parent: g3.gParallel
  langs:
  - csharp
  - vb
  name: BlockStartEnd(Int32, Int32, Action<Int32, Int32>, Int32, Boolean)
  nameWithType: gParallel.BlockStartEnd(Int32, Int32, Action<Int32, Int32>, Int32, Boolean)
  fullName: g3.gParallel.BlockStartEnd(System.Int32, System.Int32, System.Action<System.Int32, System.Int32>, System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/gParallel.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: BlockStartEnd
    path: ../Assets/geometry3Sharp/core/gParallel.cs
    startLine: 48
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nProcess indices [iStart,iEnd] *inclusive* by passing sub-intervals [start,end] to blockF.\nBlocksize is automatically determind unless you specify one.\nIterate over [start,end] *inclusive* in each block\n"
  example: []
  syntax:
    content: public static void BlockStartEnd(int iStart, int iEnd, Action<int, int> blockF, int iBlockSize = -1, bool bDisableParallel = false)
    parameters:
    - id: iStart
      type: System.Int32
    - id: iEnd
      type: System.Int32
    - id: blockF
      type: System.Action{System.Int32,System.Int32}
    - id: iBlockSize
      type: System.Int32
    - id: bDisableParallel
      type: System.Boolean
    content.vb: Public Shared Sub BlockStartEnd(iStart As Integer, iEnd As Integer, blockF As Action(Of Integer, Integer), iBlockSize As Integer = -1, bDisableParallel As Boolean = False)
  overload: g3.gParallel.BlockStartEnd*
  nameWithType.vb: gParallel.BlockStartEnd(Int32, Int32, Action(Of Int32, Int32), Int32, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.gParallel.BlockStartEnd(System.Int32, System.Int32, System.Action(Of System.Int32, System.Int32), System.Int32, System.Boolean)
  name.vb: BlockStartEnd(Int32, Int32, Action(Of Int32, Int32), Int32, Boolean)
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: g3.gParallel.ForEach_Sequential*
  commentId: Overload:g3.gParallel.ForEach_Sequential
  name: ForEach_Sequential
  nameWithType: gParallel.ForEach_Sequential
  fullName: g3.gParallel.ForEach_Sequential
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{{T}}
  commentId: T:System.Action{``0}
  parent: System
  definition: System.Action`1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.gParallel.ForEach*
  commentId: Overload:g3.gParallel.ForEach
  name: ForEach
  nameWithType: gParallel.ForEach
  fullName: g3.gParallel.ForEach
- uid: g3.gParallel.Evaluate*
  commentId: Overload:g3.gParallel.Evaluate
  name: Evaluate
  nameWithType: gParallel.Evaluate
  fullName: g3.gParallel.Evaluate
- uid: System.Action[]
  isExternal: true
  name: Action[]
  nameWithType: Action[]
  fullName: System.Action[]
  nameWithType.vb: Action()
  fullName.vb: System.Action()
  name.vb: Action()
  spec.csharp:
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: g3.gParallel.BlockStartEnd*
  commentId: Overload:g3.gParallel.BlockStartEnd
  name: BlockStartEnd
  nameWithType: gParallel.BlockStartEnd
  fullName: g3.gParallel.BlockStartEnd
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Action{System.Int32,System.Int32}
  commentId: T:System.Action{System.Int32,System.Int32}
  parent: System
  definition: System.Action`2
  name: Action<Int32, Int32>
  nameWithType: Action<Int32, Int32>
  fullName: System.Action<System.Int32, System.Int32>
  nameWithType.vb: Action(Of Int32, Int32)
  fullName.vb: System.Action(Of System.Int32, System.Int32)
  name.vb: Action(Of Int32, Int32)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )

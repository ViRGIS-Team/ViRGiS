### YamlMime:ManagedReference
items:
- uid: g3.Vector3d
  commentId: T:g3.Vector3d
  id: Vector3d
  parent: g3
  children:
  - g3.Vector3d.#ctor(g3.Vector3d)
  - g3.Vector3d.#ctor(g3.Vector3f)
  - g3.Vector3d.#ctor(System.Double)
  - g3.Vector3d.#ctor(System.Double,System.Double,System.Double)
  - g3.Vector3d.#ctor(System.Double[])
  - g3.Vector3d.Abs
  - g3.Vector3d.Add(g3.Vector3d)
  - g3.Vector3d.AngleD(g3.Vector3d)
  - g3.Vector3d.AngleD(g3.Vector3d,g3.Vector3d)
  - g3.Vector3d.AngleR(g3.Vector3d)
  - g3.Vector3d.AngleR(g3.Vector3d,g3.Vector3d)
  - g3.Vector3d.AxisX
  - g3.Vector3d.AxisY
  - g3.Vector3d.AxisZ
  - g3.Vector3d.CompareTo(g3.Vector3d)
  - g3.Vector3d.ComputeOrthogonalComplement(System.Int32,g3.Vector3d,g3.Vector3d@,g3.Vector3d@)
  - g3.Vector3d.Cross(g3.Vector3d)
  - g3.Vector3d.Cross(g3.Vector3d,g3.Vector3d)
  - g3.Vector3d.Cross(g3.Vector3d@)
  - g3.Vector3d.Distance(g3.Vector3d)
  - g3.Vector3d.Distance(g3.Vector3d@)
  - g3.Vector3d.DistanceSquared(g3.Vector3d)
  - g3.Vector3d.DistanceSquared(g3.Vector3d@)
  - g3.Vector3d.Dot(g3.Vector3d)
  - g3.Vector3d.Dot(g3.Vector3d,g3.Vector3d)
  - g3.Vector3d.Dot(g3.Vector3d@)
  - g3.Vector3d.EpsilonEqual(g3.Vector3d,System.Double)
  - g3.Vector3d.Equals(g3.Vector3d)
  - g3.Vector3d.Equals(System.Object)
  - g3.Vector3d.GenerateComplementBasis(g3.Vector3d@,g3.Vector3d@,g3.Vector3d)
  - g3.Vector3d.GetHashCode
  - g3.Vector3d.IsFinite
  - g3.Vector3d.IsNormalized
  - g3.Vector3d.Item(System.Int32)
  - g3.Vector3d.Length
  - g3.Vector3d.LengthL1
  - g3.Vector3d.LengthSquared
  - g3.Vector3d.Lerp(g3.Vector3d,g3.Vector3d,System.Double)
  - g3.Vector3d.Lerp(g3.Vector3d@,g3.Vector3d@,System.Double)
  - g3.Vector3d.MakePerpVectors(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@)
  - g3.Vector3d.Max
  - g3.Vector3d.MaxAbs
  - g3.Vector3d.MaxValue
  - g3.Vector3d.Min
  - g3.Vector3d.MinAbs
  - g3.Vector3d.MinValue
  - g3.Vector3d.Normalize(System.Double)
  - g3.Vector3d.Normalized
  - g3.Vector3d.One
  - g3.Vector3d.op_Addition(g3.Vector3d,g3.Vector3d)
  - g3.Vector3d.op_Addition(g3.Vector3d,System.Double)
  - g3.Vector3d.op_Division(g3.Vector3d,g3.Vector3d)
  - g3.Vector3d.op_Division(g3.Vector3d,System.Double)
  - g3.Vector3d.op_Division(System.Double,g3.Vector3d)
  - g3.Vector3d.op_Equality(g3.Vector3d,g3.Vector3d)
  - g3.Vector3d.op_Explicit(g3.Vector3d)~g3.Vector3f
  - g3.Vector3d.op_Implicit(g3.Vector3f)~g3.Vector3d
  - g3.Vector3d.op_Inequality(g3.Vector3d,g3.Vector3d)
  - g3.Vector3d.op_Multiply(g3.Vector3d,g3.Vector3d)
  - g3.Vector3d.op_Multiply(g3.Vector3d,System.Double)
  - g3.Vector3d.op_Multiply(System.Double,g3.Vector3d)
  - g3.Vector3d.op_Subtraction(g3.Vector3d,g3.Vector3d)
  - g3.Vector3d.op_Subtraction(g3.Vector3d,System.Double)
  - g3.Vector3d.op_UnaryNegation(g3.Vector3d)
  - g3.Vector3d.Orthonormalize(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@)
  - g3.Vector3d.Round(System.Int32)
  - g3.Vector3d.Set(g3.Vector3d)
  - g3.Vector3d.Set(System.Double,System.Double,System.Double)
  - g3.Vector3d.Subtract(g3.Vector3d)
  - g3.Vector3d.ToString
  - g3.Vector3d.ToString(System.String)
  - g3.Vector3d.UnitCross(g3.Vector3d)
  - g3.Vector3d.UnitCross(g3.Vector3d@)
  - g3.Vector3d.x
  - g3.Vector3d.xy
  - g3.Vector3d.xz
  - g3.Vector3d.y
  - g3.Vector3d.yz
  - g3.Vector3d.z
  - g3.Vector3d.Zero
  langs:
  - csharp
  - vb
  name: Vector3d
  nameWithType: Vector3d
  fullName: g3.Vector3d
  type: Struct
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Vector3d
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 10
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: 'public struct Vector3d : IComparable<Vector3d>, IEquatable<Vector3d>'
    content.vb: >-
      Public Structure Vector3d
          Implements IComparable(Of Vector3d), IEquatable(Of Vector3d)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: g3.Vector3d.x
  commentId: F:g3.Vector3d.x
  id: x
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: x
  nameWithType: Vector3d.x
  fullName: g3.Vector3d.x
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: x
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 12
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double x
    return:
      type: System.Double
    content.vb: Public x As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector3d.y
  commentId: F:g3.Vector3d.y
  id: y
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: y
  nameWithType: Vector3d.y
  fullName: g3.Vector3d.y
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: y
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 13
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double y
    return:
      type: System.Double
    content.vb: Public y As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector3d.z
  commentId: F:g3.Vector3d.z
  id: z
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: z
  nameWithType: Vector3d.z
  fullName: g3.Vector3d.z
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: z
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 14
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double z
    return:
      type: System.Double
    content.vb: Public z As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector3d.#ctor(System.Double)
  commentId: M:g3.Vector3d.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Vector3d(Double)
  nameWithType: Vector3d.Vector3d(Double)
  fullName: g3.Vector3d.Vector3d(System.Double)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 16
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector3d(double f)
    parameters:
    - id: f
      type: System.Double
    content.vb: Public Sub New(f As Double)
  overload: g3.Vector3d.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector3d.#ctor(System.Double,System.Double,System.Double)
  commentId: M:g3.Vector3d.#ctor(System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double)'
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Vector3d(Double, Double, Double)
  nameWithType: Vector3d.Vector3d(Double, Double, Double)
  fullName: g3.Vector3d.Vector3d(System.Double, System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 17
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector3d(double x, double y, double z)
    parameters:
    - id: x
      type: System.Double
    - id: y
      type: System.Double
    - id: z
      type: System.Double
    content.vb: Public Sub New(x As Double, y As Double, z As Double)
  overload: g3.Vector3d.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector3d.#ctor(System.Double[])
  commentId: M:g3.Vector3d.#ctor(System.Double[])
  id: '#ctor(System.Double[])'
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Vector3d(Double[])
  nameWithType: Vector3d.Vector3d(Double[])
  fullName: g3.Vector3d.Vector3d(System.Double[])
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 18
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector3d(double[] v2)
    parameters:
    - id: v2
      type: System.Double[]
    content.vb: Public Sub New(v2 As Double())
  overload: g3.Vector3d.#ctor*
  nameWithType.vb: Vector3d.Vector3d(Double())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.Vector3d.Vector3d(System.Double())
  name.vb: Vector3d(Double())
- uid: g3.Vector3d.#ctor(g3.Vector3d)
  commentId: M:g3.Vector3d.#ctor(g3.Vector3d)
  id: '#ctor(g3.Vector3d)'
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Vector3d(Vector3d)
  nameWithType: Vector3d.Vector3d(Vector3d)
  fullName: g3.Vector3d.Vector3d(g3.Vector3d)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 19
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector3d(Vector3d copy)
    parameters:
    - id: copy
      type: g3.Vector3d
    content.vb: Public Sub New(copy As Vector3d)
  overload: g3.Vector3d.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector3d.#ctor(g3.Vector3f)
  commentId: M:g3.Vector3d.#ctor(g3.Vector3f)
  id: '#ctor(g3.Vector3f)'
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Vector3d(Vector3f)
  nameWithType: Vector3d.Vector3d(Vector3f)
  fullName: g3.Vector3d.Vector3d(g3.Vector3f)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 20
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector3d(Vector3f copy)
    parameters:
    - id: copy
      type: g3.Vector3f
    content.vb: Public Sub New(copy As Vector3f)
  overload: g3.Vector3d.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector3d.Zero
  commentId: F:g3.Vector3d.Zero
  id: Zero
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: Vector3d.Zero
  fullName: g3.Vector3d.Zero
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Zero
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 22
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static readonly Vector3d Zero
    return:
      type: g3.Vector3d
    content.vb: Public Shared ReadOnly Zero As Vector3d
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: g3.Vector3d.One
  commentId: F:g3.Vector3d.One
  id: One
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: One
  nameWithType: Vector3d.One
  fullName: g3.Vector3d.One
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: One
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 23
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static readonly Vector3d One
    return:
      type: g3.Vector3d
    content.vb: Public Shared ReadOnly One As Vector3d
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: g3.Vector3d.AxisX
  commentId: F:g3.Vector3d.AxisX
  id: AxisX
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: AxisX
  nameWithType: Vector3d.AxisX
  fullName: g3.Vector3d.AxisX
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AxisX
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 24
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static readonly Vector3d AxisX
    return:
      type: g3.Vector3d
    content.vb: Public Shared ReadOnly AxisX As Vector3d
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: g3.Vector3d.AxisY
  commentId: F:g3.Vector3d.AxisY
  id: AxisY
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: AxisY
  nameWithType: Vector3d.AxisY
  fullName: g3.Vector3d.AxisY
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AxisY
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 25
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static readonly Vector3d AxisY
    return:
      type: g3.Vector3d
    content.vb: Public Shared ReadOnly AxisY As Vector3d
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: g3.Vector3d.AxisZ
  commentId: F:g3.Vector3d.AxisZ
  id: AxisZ
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: AxisZ
  nameWithType: Vector3d.AxisZ
  fullName: g3.Vector3d.AxisZ
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AxisZ
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 26
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static readonly Vector3d AxisZ
    return:
      type: g3.Vector3d
    content.vb: Public Shared ReadOnly AxisZ As Vector3d
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: g3.Vector3d.MaxValue
  commentId: F:g3.Vector3d.MaxValue
  id: MaxValue
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: MaxValue
  nameWithType: Vector3d.MaxValue
  fullName: g3.Vector3d.MaxValue
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: MaxValue
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 27
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static readonly Vector3d MaxValue
    return:
      type: g3.Vector3d
    content.vb: Public Shared ReadOnly MaxValue As Vector3d
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: g3.Vector3d.MinValue
  commentId: F:g3.Vector3d.MinValue
  id: MinValue
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: MinValue
  nameWithType: Vector3d.MinValue
  fullName: g3.Vector3d.MinValue
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: MinValue
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 28
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static readonly Vector3d MinValue
    return:
      type: g3.Vector3d
    content.vb: Public Shared ReadOnly MinValue As Vector3d
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: g3.Vector3d.Item(System.Int32)
  commentId: P:g3.Vector3d.Item(System.Int32)
  id: Item(System.Int32)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: Vector3d.Item[Int32]
  fullName: g3.Vector3d.Item[System.Int32]
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: this[]
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 30
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double this[int key] { get; set; }
    parameters:
    - id: key
      type: System.Int32
    return:
      type: System.Double
    content.vb: Public Property Item(key As Integer) As Double
  overload: g3.Vector3d.Item*
  nameWithType.vb: Vector3d.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: g3.Vector3d.Item(System.Int32)
  name.vb: Item(Int32)
- uid: g3.Vector3d.xy
  commentId: P:g3.Vector3d.xy
  id: xy
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: xy
  nameWithType: Vector3d.xy
  fullName: g3.Vector3d.xy
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: xy
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 36
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2d xy { get; set; }
    parameters: []
    return:
      type: g3.Vector2d
    content.vb: Public Property xy As Vector2d
  overload: g3.Vector3d.xy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: g3.Vector3d.xz
  commentId: P:g3.Vector3d.xz
  id: xz
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: xz
  nameWithType: Vector3d.xz
  fullName: g3.Vector3d.xz
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: xz
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 40
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2d xz { get; set; }
    parameters: []
    return:
      type: g3.Vector2d
    content.vb: Public Property xz As Vector2d
  overload: g3.Vector3d.xz*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: g3.Vector3d.yz
  commentId: P:g3.Vector3d.yz
  id: yz
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: yz
  nameWithType: Vector3d.yz
  fullName: g3.Vector3d.yz
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: yz
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 44
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2d yz { get; set; }
    parameters: []
    return:
      type: g3.Vector2d
    content.vb: Public Property yz As Vector2d
  overload: g3.Vector3d.yz*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: g3.Vector3d.LengthSquared
  commentId: P:g3.Vector3d.LengthSquared
  id: LengthSquared
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: LengthSquared
  nameWithType: Vector3d.LengthSquared
  fullName: g3.Vector3d.LengthSquared
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: LengthSquared
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 49
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double LengthSquared { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property LengthSquared As Double
  overload: g3.Vector3d.LengthSquared*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector3d.Length
  commentId: P:g3.Vector3d.Length
  id: Length
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: Vector3d.Length
  fullName: g3.Vector3d.Length
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Length
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 53
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double Length { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Length As Double
  overload: g3.Vector3d.Length*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector3d.LengthL1
  commentId: P:g3.Vector3d.LengthL1
  id: LengthL1
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: LengthL1
  nameWithType: Vector3d.LengthL1
  fullName: g3.Vector3d.LengthL1
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: LengthL1
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 58
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double LengthL1 { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property LengthL1 As Double
  overload: g3.Vector3d.LengthL1*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector3d.Max
  commentId: P:g3.Vector3d.Max
  id: Max
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Max
  nameWithType: Vector3d.Max
  fullName: g3.Vector3d.Max
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Max
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 63
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double Max { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Max As Double
  overload: g3.Vector3d.Max*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector3d.Min
  commentId: P:g3.Vector3d.Min
  id: Min
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Min
  nameWithType: Vector3d.Min
  fullName: g3.Vector3d.Min
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Min
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 66
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double Min { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Min As Double
  overload: g3.Vector3d.Min*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector3d.MaxAbs
  commentId: P:g3.Vector3d.MaxAbs
  id: MaxAbs
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: MaxAbs
  nameWithType: Vector3d.MaxAbs
  fullName: g3.Vector3d.MaxAbs
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: MaxAbs
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 69
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double MaxAbs { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property MaxAbs As Double
  overload: g3.Vector3d.MaxAbs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector3d.MinAbs
  commentId: P:g3.Vector3d.MinAbs
  id: MinAbs
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: MinAbs
  nameWithType: Vector3d.MinAbs
  fullName: g3.Vector3d.MinAbs
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: MinAbs
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 72
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double MinAbs { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property MinAbs As Double
  overload: g3.Vector3d.MinAbs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector3d.Abs
  commentId: P:g3.Vector3d.Abs
  id: Abs
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Abs
  nameWithType: Vector3d.Abs
  fullName: g3.Vector3d.Abs
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Abs
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 76
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector3d Abs { get; }
    parameters: []
    return:
      type: g3.Vector3d
    content.vb: Public ReadOnly Property Abs As Vector3d
  overload: g3.Vector3d.Abs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector3d.Normalize(System.Double)
  commentId: M:g3.Vector3d.Normalize(System.Double)
  id: Normalize(System.Double)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Normalize(Double)
  nameWithType: Vector3d.Normalize(Double)
  fullName: g3.Vector3d.Normalize(System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Normalize
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 80
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double Normalize(double epsilon = 2.2204460492503131E-16)
    parameters:
    - id: epsilon
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Function Normalize(epsilon As Double = 2.2204460492503131E-16) As Double
  overload: g3.Vector3d.Normalize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector3d.Normalized
  commentId: P:g3.Vector3d.Normalized
  id: Normalized
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Normalized
  nameWithType: Vector3d.Normalized
  fullName: g3.Vector3d.Normalized
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Normalized
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 94
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector3d Normalized { get; }
    parameters: []
    return:
      type: g3.Vector3d
    content.vb: Public ReadOnly Property Normalized As Vector3d
  overload: g3.Vector3d.Normalized*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector3d.IsNormalized
  commentId: P:g3.Vector3d.IsNormalized
  id: IsNormalized
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: IsNormalized
  nameWithType: Vector3d.IsNormalized
  fullName: g3.Vector3d.IsNormalized
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IsNormalized
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 106
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool IsNormalized { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNormalized As Boolean
  overload: g3.Vector3d.IsNormalized*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector3d.IsFinite
  commentId: P:g3.Vector3d.IsFinite
  id: IsFinite
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: IsFinite
  nameWithType: Vector3d.IsFinite
  fullName: g3.Vector3d.IsFinite
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IsFinite
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 110
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool IsFinite { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFinite As Boolean
  overload: g3.Vector3d.IsFinite*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector3d.Round(System.Int32)
  commentId: M:g3.Vector3d.Round(System.Int32)
  id: Round(System.Int32)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Round(Int32)
  nameWithType: Vector3d.Round(Int32)
  fullName: g3.Vector3d.Round(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Round
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 115
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Round(int nDecimals)
    parameters:
    - id: nDecimals
      type: System.Int32
    content.vb: Public Sub Round(nDecimals As Integer)
  overload: g3.Vector3d.Round*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector3d.Dot(g3.Vector3d)
  commentId: M:g3.Vector3d.Dot(g3.Vector3d)
  id: Dot(g3.Vector3d)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Dot(Vector3d)
  nameWithType: Vector3d.Dot(Vector3d)
  fullName: g3.Vector3d.Dot(g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Dot
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 122
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double Dot(Vector3d v2)
    parameters:
    - id: v2
      type: g3.Vector3d
    return:
      type: System.Double
    content.vb: Public Function Dot(v2 As Vector3d) As Double
  overload: g3.Vector3d.Dot*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector3d.Dot(g3.Vector3d@)
  commentId: M:g3.Vector3d.Dot(g3.Vector3d@)
  id: Dot(g3.Vector3d@)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Dot(ref Vector3d)
  nameWithType: Vector3d.Dot(ref Vector3d)
  fullName: g3.Vector3d.Dot(ref g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Dot
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 125
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double Dot(ref Vector3d v2)
    parameters:
    - id: v2
      type: g3.Vector3d
    return:
      type: System.Double
    content.vb: Public Function Dot(ByRef v2 As Vector3d) As Double
  overload: g3.Vector3d.Dot*
  nameWithType.vb: Vector3d.Dot(ByRef Vector3d)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.Vector3d.Dot(ByRef g3.Vector3d)
  name.vb: Dot(ByRef Vector3d)
- uid: g3.Vector3d.Dot(g3.Vector3d,g3.Vector3d)
  commentId: M:g3.Vector3d.Dot(g3.Vector3d,g3.Vector3d)
  id: Dot(g3.Vector3d,g3.Vector3d)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Dot(Vector3d, Vector3d)
  nameWithType: Vector3d.Dot(Vector3d, Vector3d)
  fullName: g3.Vector3d.Dot(g3.Vector3d, g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Dot
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 129
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double Dot(Vector3d v1, Vector3d v2)
    parameters:
    - id: v1
      type: g3.Vector3d
    - id: v2
      type: g3.Vector3d
    return:
      type: System.Double
    content.vb: Public Shared Function Dot(v1 As Vector3d, v2 As Vector3d) As Double
  overload: g3.Vector3d.Dot*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector3d.Cross(g3.Vector3d)
  commentId: M:g3.Vector3d.Cross(g3.Vector3d)
  id: Cross(g3.Vector3d)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Cross(Vector3d)
  nameWithType: Vector3d.Cross(Vector3d)
  fullName: g3.Vector3d.Cross(g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Cross
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 133
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector3d Cross(Vector3d v2)
    parameters:
    - id: v2
      type: g3.Vector3d
    return:
      type: g3.Vector3d
    content.vb: Public Function Cross(v2 As Vector3d) As Vector3d
  overload: g3.Vector3d.Cross*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector3d.Cross(g3.Vector3d@)
  commentId: M:g3.Vector3d.Cross(g3.Vector3d@)
  id: Cross(g3.Vector3d@)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Cross(ref Vector3d)
  nameWithType: Vector3d.Cross(ref Vector3d)
  fullName: g3.Vector3d.Cross(ref g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Cross
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 139
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector3d Cross(ref Vector3d v2)
    parameters:
    - id: v2
      type: g3.Vector3d
    return:
      type: g3.Vector3d
    content.vb: Public Function Cross(ByRef v2 As Vector3d) As Vector3d
  overload: g3.Vector3d.Cross*
  nameWithType.vb: Vector3d.Cross(ByRef Vector3d)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.Vector3d.Cross(ByRef g3.Vector3d)
  name.vb: Cross(ByRef Vector3d)
- uid: g3.Vector3d.Cross(g3.Vector3d,g3.Vector3d)
  commentId: M:g3.Vector3d.Cross(g3.Vector3d,g3.Vector3d)
  id: Cross(g3.Vector3d,g3.Vector3d)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Cross(Vector3d, Vector3d)
  nameWithType: Vector3d.Cross(Vector3d, Vector3d)
  fullName: g3.Vector3d.Cross(g3.Vector3d, g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Cross
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 145
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector3d Cross(Vector3d v1, Vector3d v2)
    parameters:
    - id: v1
      type: g3.Vector3d
    - id: v2
      type: g3.Vector3d
    return:
      type: g3.Vector3d
    content.vb: Public Shared Function Cross(v1 As Vector3d, v2 As Vector3d) As Vector3d
  overload: g3.Vector3d.Cross*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector3d.UnitCross(g3.Vector3d@)
  commentId: M:g3.Vector3d.UnitCross(g3.Vector3d@)
  id: UnitCross(g3.Vector3d@)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: UnitCross(ref Vector3d)
  nameWithType: Vector3d.UnitCross(ref Vector3d)
  fullName: g3.Vector3d.UnitCross(ref g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: UnitCross
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 149
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector3d UnitCross(ref Vector3d v2)
    parameters:
    - id: v2
      type: g3.Vector3d
    return:
      type: g3.Vector3d
    content.vb: Public Function UnitCross(ByRef v2 As Vector3d) As Vector3d
  overload: g3.Vector3d.UnitCross*
  nameWithType.vb: Vector3d.UnitCross(ByRef Vector3d)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.Vector3d.UnitCross(ByRef g3.Vector3d)
  name.vb: UnitCross(ByRef Vector3d)
- uid: g3.Vector3d.UnitCross(g3.Vector3d)
  commentId: M:g3.Vector3d.UnitCross(g3.Vector3d)
  id: UnitCross(g3.Vector3d)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: UnitCross(Vector3d)
  nameWithType: Vector3d.UnitCross(Vector3d)
  fullName: g3.Vector3d.UnitCross(g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: UnitCross
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 157
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector3d UnitCross(Vector3d v2)
    parameters:
    - id: v2
      type: g3.Vector3d
    return:
      type: g3.Vector3d
    content.vb: Public Function UnitCross(v2 As Vector3d) As Vector3d
  overload: g3.Vector3d.UnitCross*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector3d.AngleD(g3.Vector3d)
  commentId: M:g3.Vector3d.AngleD(g3.Vector3d)
  id: AngleD(g3.Vector3d)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: AngleD(Vector3d)
  nameWithType: Vector3d.AngleD(Vector3d)
  fullName: g3.Vector3d.AngleD(g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AngleD
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 162
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double AngleD(Vector3d v2)
    parameters:
    - id: v2
      type: g3.Vector3d
    return:
      type: System.Double
    content.vb: Public Function AngleD(v2 As Vector3d) As Double
  overload: g3.Vector3d.AngleD*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector3d.AngleD(g3.Vector3d,g3.Vector3d)
  commentId: M:g3.Vector3d.AngleD(g3.Vector3d,g3.Vector3d)
  id: AngleD(g3.Vector3d,g3.Vector3d)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: AngleD(Vector3d, Vector3d)
  nameWithType: Vector3d.AngleD(Vector3d, Vector3d)
  fullName: g3.Vector3d.AngleD(g3.Vector3d, g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AngleD
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 167
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double AngleD(Vector3d v1, Vector3d v2)
    parameters:
    - id: v1
      type: g3.Vector3d
    - id: v2
      type: g3.Vector3d
    return:
      type: System.Double
    content.vb: Public Shared Function AngleD(v1 As Vector3d, v2 As Vector3d) As Double
  overload: g3.Vector3d.AngleD*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector3d.AngleR(g3.Vector3d)
  commentId: M:g3.Vector3d.AngleR(g3.Vector3d)
  id: AngleR(g3.Vector3d)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: AngleR(Vector3d)
  nameWithType: Vector3d.AngleR(Vector3d)
  fullName: g3.Vector3d.AngleR(g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AngleR
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 171
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double AngleR(Vector3d v2)
    parameters:
    - id: v2
      type: g3.Vector3d
    return:
      type: System.Double
    content.vb: Public Function AngleR(v2 As Vector3d) As Double
  overload: g3.Vector3d.AngleR*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector3d.AngleR(g3.Vector3d,g3.Vector3d)
  commentId: M:g3.Vector3d.AngleR(g3.Vector3d,g3.Vector3d)
  id: AngleR(g3.Vector3d,g3.Vector3d)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: AngleR(Vector3d, Vector3d)
  nameWithType: Vector3d.AngleR(Vector3d, Vector3d)
  fullName: g3.Vector3d.AngleR(g3.Vector3d, g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AngleR
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 176
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double AngleR(Vector3d v1, Vector3d v2)
    parameters:
    - id: v1
      type: g3.Vector3d
    - id: v2
      type: g3.Vector3d
    return:
      type: System.Double
    content.vb: Public Shared Function AngleR(v1 As Vector3d, v2 As Vector3d) As Double
  overload: g3.Vector3d.AngleR*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector3d.DistanceSquared(g3.Vector3d)
  commentId: M:g3.Vector3d.DistanceSquared(g3.Vector3d)
  id: DistanceSquared(g3.Vector3d)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: DistanceSquared(Vector3d)
  nameWithType: Vector3d.DistanceSquared(Vector3d)
  fullName: g3.Vector3d.DistanceSquared(g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: DistanceSquared
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 181
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double DistanceSquared(Vector3d v2)
    parameters:
    - id: v2
      type: g3.Vector3d
    return:
      type: System.Double
    content.vb: Public Function DistanceSquared(v2 As Vector3d) As Double
  overload: g3.Vector3d.DistanceSquared*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector3d.DistanceSquared(g3.Vector3d@)
  commentId: M:g3.Vector3d.DistanceSquared(g3.Vector3d@)
  id: DistanceSquared(g3.Vector3d@)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: DistanceSquared(ref Vector3d)
  nameWithType: Vector3d.DistanceSquared(ref Vector3d)
  fullName: g3.Vector3d.DistanceSquared(ref g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: DistanceSquared
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 185
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double DistanceSquared(ref Vector3d v2)
    parameters:
    - id: v2
      type: g3.Vector3d
    return:
      type: System.Double
    content.vb: Public Function DistanceSquared(ByRef v2 As Vector3d) As Double
  overload: g3.Vector3d.DistanceSquared*
  nameWithType.vb: Vector3d.DistanceSquared(ByRef Vector3d)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.Vector3d.DistanceSquared(ByRef g3.Vector3d)
  name.vb: DistanceSquared(ByRef Vector3d)
- uid: g3.Vector3d.Distance(g3.Vector3d)
  commentId: M:g3.Vector3d.Distance(g3.Vector3d)
  id: Distance(g3.Vector3d)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Distance(Vector3d)
  nameWithType: Vector3d.Distance(Vector3d)
  fullName: g3.Vector3d.Distance(g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Distance
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 190
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double Distance(Vector3d v2)
    parameters:
    - id: v2
      type: g3.Vector3d
    return:
      type: System.Double
    content.vb: Public Function Distance(v2 As Vector3d) As Double
  overload: g3.Vector3d.Distance*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector3d.Distance(g3.Vector3d@)
  commentId: M:g3.Vector3d.Distance(g3.Vector3d@)
  id: Distance(g3.Vector3d@)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Distance(ref Vector3d)
  nameWithType: Vector3d.Distance(ref Vector3d)
  fullName: g3.Vector3d.Distance(ref g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Distance
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 194
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double Distance(ref Vector3d v2)
    parameters:
    - id: v2
      type: g3.Vector3d
    return:
      type: System.Double
    content.vb: Public Function Distance(ByRef v2 As Vector3d) As Double
  overload: g3.Vector3d.Distance*
  nameWithType.vb: Vector3d.Distance(ByRef Vector3d)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.Vector3d.Distance(ByRef g3.Vector3d)
  name.vb: Distance(ByRef Vector3d)
- uid: g3.Vector3d.Set(g3.Vector3d)
  commentId: M:g3.Vector3d.Set(g3.Vector3d)
  id: Set(g3.Vector3d)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Set(Vector3d)
  nameWithType: Vector3d.Set(Vector3d)
  fullName: g3.Vector3d.Set(g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Set
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 199
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Set(Vector3d o)
    parameters:
    - id: o
      type: g3.Vector3d
    content.vb: Public Sub Set(o As Vector3d)
  overload: g3.Vector3d.Set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector3d.Set(System.Double,System.Double,System.Double)
  commentId: M:g3.Vector3d.Set(System.Double,System.Double,System.Double)
  id: Set(System.Double,System.Double,System.Double)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Set(Double, Double, Double)
  nameWithType: Vector3d.Set(Double, Double, Double)
  fullName: g3.Vector3d.Set(System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Set
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 203
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Set(double fX, double fY, double fZ)
    parameters:
    - id: fX
      type: System.Double
    - id: fY
      type: System.Double
    - id: fZ
      type: System.Double
    content.vb: Public Sub Set(fX As Double, fY As Double, fZ As Double)
  overload: g3.Vector3d.Set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector3d.Add(g3.Vector3d)
  commentId: M:g3.Vector3d.Add(g3.Vector3d)
  id: Add(g3.Vector3d)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Add(Vector3d)
  nameWithType: Vector3d.Add(Vector3d)
  fullName: g3.Vector3d.Add(g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Add
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 207
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Add(Vector3d o)
    parameters:
    - id: o
      type: g3.Vector3d
    content.vb: Public Sub Add(o As Vector3d)
  overload: g3.Vector3d.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector3d.Subtract(g3.Vector3d)
  commentId: M:g3.Vector3d.Subtract(g3.Vector3d)
  id: Subtract(g3.Vector3d)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Subtract(Vector3d)
  nameWithType: Vector3d.Subtract(Vector3d)
  fullName: g3.Vector3d.Subtract(g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Subtract
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 211
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Subtract(Vector3d o)
    parameters:
    - id: o
      type: g3.Vector3d
    content.vb: Public Sub Subtract(o As Vector3d)
  overload: g3.Vector3d.Subtract*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector3d.op_UnaryNegation(g3.Vector3d)
  commentId: M:g3.Vector3d.op_UnaryNegation(g3.Vector3d)
  id: op_UnaryNegation(g3.Vector3d)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: UnaryNegation(Vector3d)
  nameWithType: Vector3d.UnaryNegation(Vector3d)
  fullName: g3.Vector3d.UnaryNegation(g3.Vector3d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_UnaryNegation
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 218
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector3d operator -(Vector3d v)
    parameters:
    - id: v
      type: g3.Vector3d
    return:
      type: g3.Vector3d
    content.vb: Public Shared Operator -(v As Vector3d) As Vector3d
  overload: g3.Vector3d.op_UnaryNegation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector3d.op_Multiply(System.Double,g3.Vector3d)
  commentId: M:g3.Vector3d.op_Multiply(System.Double,g3.Vector3d)
  id: op_Multiply(System.Double,g3.Vector3d)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Multiply(Double, Vector3d)
  nameWithType: Vector3d.Multiply(Double, Vector3d)
  fullName: g3.Vector3d.Multiply(System.Double, g3.Vector3d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Multiply
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 223
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector3d operator *(double f, Vector3d v)
    parameters:
    - id: f
      type: System.Double
    - id: v
      type: g3.Vector3d
    return:
      type: g3.Vector3d
    content.vb: Public Shared Operator *(f As Double, v As Vector3d) As Vector3d
  overload: g3.Vector3d.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector3d.op_Multiply(g3.Vector3d,System.Double)
  commentId: M:g3.Vector3d.op_Multiply(g3.Vector3d,System.Double)
  id: op_Multiply(g3.Vector3d,System.Double)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Multiply(Vector3d, Double)
  nameWithType: Vector3d.Multiply(Vector3d, Double)
  fullName: g3.Vector3d.Multiply(g3.Vector3d, System.Double)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Multiply
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 227
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector3d operator *(Vector3d v, double f)
    parameters:
    - id: v
      type: g3.Vector3d
    - id: f
      type: System.Double
    return:
      type: g3.Vector3d
    content.vb: Public Shared Operator *(v As Vector3d, f As Double) As Vector3d
  overload: g3.Vector3d.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector3d.op_Division(g3.Vector3d,System.Double)
  commentId: M:g3.Vector3d.op_Division(g3.Vector3d,System.Double)
  id: op_Division(g3.Vector3d,System.Double)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Division(Vector3d, Double)
  nameWithType: Vector3d.Division(Vector3d, Double)
  fullName: g3.Vector3d.Division(g3.Vector3d, System.Double)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Division
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 231
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector3d operator /(Vector3d v, double f)
    parameters:
    - id: v
      type: g3.Vector3d
    - id: f
      type: System.Double
    return:
      type: g3.Vector3d
    content.vb: Public Shared Operator /(v As Vector3d, f As Double) As Vector3d
  overload: g3.Vector3d.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector3d.op_Division(System.Double,g3.Vector3d)
  commentId: M:g3.Vector3d.op_Division(System.Double,g3.Vector3d)
  id: op_Division(System.Double,g3.Vector3d)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Division(Double, Vector3d)
  nameWithType: Vector3d.Division(Double, Vector3d)
  fullName: g3.Vector3d.Division(System.Double, g3.Vector3d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Division
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 235
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector3d operator /(double f, Vector3d v)
    parameters:
    - id: f
      type: System.Double
    - id: v
      type: g3.Vector3d
    return:
      type: g3.Vector3d
    content.vb: Public Shared Operator /(f As Double, v As Vector3d) As Vector3d
  overload: g3.Vector3d.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector3d.op_Multiply(g3.Vector3d,g3.Vector3d)
  commentId: M:g3.Vector3d.op_Multiply(g3.Vector3d,g3.Vector3d)
  id: op_Multiply(g3.Vector3d,g3.Vector3d)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Multiply(Vector3d, Vector3d)
  nameWithType: Vector3d.Multiply(Vector3d, Vector3d)
  fullName: g3.Vector3d.Multiply(g3.Vector3d, g3.Vector3d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Multiply
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 240
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector3d operator *(Vector3d a, Vector3d b)
    parameters:
    - id: a
      type: g3.Vector3d
    - id: b
      type: g3.Vector3d
    return:
      type: g3.Vector3d
    content.vb: Public Shared Operator *(a As Vector3d, b As Vector3d) As Vector3d
  overload: g3.Vector3d.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector3d.op_Division(g3.Vector3d,g3.Vector3d)
  commentId: M:g3.Vector3d.op_Division(g3.Vector3d,g3.Vector3d)
  id: op_Division(g3.Vector3d,g3.Vector3d)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Division(Vector3d, Vector3d)
  nameWithType: Vector3d.Division(Vector3d, Vector3d)
  fullName: g3.Vector3d.Division(g3.Vector3d, g3.Vector3d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Division
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 244
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector3d operator /(Vector3d a, Vector3d b)
    parameters:
    - id: a
      type: g3.Vector3d
    - id: b
      type: g3.Vector3d
    return:
      type: g3.Vector3d
    content.vb: Public Shared Operator /(a As Vector3d, b As Vector3d) As Vector3d
  overload: g3.Vector3d.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector3d.op_Addition(g3.Vector3d,g3.Vector3d)
  commentId: M:g3.Vector3d.op_Addition(g3.Vector3d,g3.Vector3d)
  id: op_Addition(g3.Vector3d,g3.Vector3d)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Addition(Vector3d, Vector3d)
  nameWithType: Vector3d.Addition(Vector3d, Vector3d)
  fullName: g3.Vector3d.Addition(g3.Vector3d, g3.Vector3d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Addition
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 250
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector3d operator +(Vector3d v0, Vector3d v1)
    parameters:
    - id: v0
      type: g3.Vector3d
    - id: v1
      type: g3.Vector3d
    return:
      type: g3.Vector3d
    content.vb: Public Shared Operator +(v0 As Vector3d, v1 As Vector3d) As Vector3d
  overload: g3.Vector3d.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector3d.op_Addition(g3.Vector3d,System.Double)
  commentId: M:g3.Vector3d.op_Addition(g3.Vector3d,System.Double)
  id: op_Addition(g3.Vector3d,System.Double)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Addition(Vector3d, Double)
  nameWithType: Vector3d.Addition(Vector3d, Double)
  fullName: g3.Vector3d.Addition(g3.Vector3d, System.Double)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Addition
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 254
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector3d operator +(Vector3d v0, double f)
    parameters:
    - id: v0
      type: g3.Vector3d
    - id: f
      type: System.Double
    return:
      type: g3.Vector3d
    content.vb: Public Shared Operator +(v0 As Vector3d, f As Double) As Vector3d
  overload: g3.Vector3d.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector3d.op_Subtraction(g3.Vector3d,g3.Vector3d)
  commentId: M:g3.Vector3d.op_Subtraction(g3.Vector3d,g3.Vector3d)
  id: op_Subtraction(g3.Vector3d,g3.Vector3d)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Subtraction(Vector3d, Vector3d)
  nameWithType: Vector3d.Subtraction(Vector3d, Vector3d)
  fullName: g3.Vector3d.Subtraction(g3.Vector3d, g3.Vector3d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Subtraction
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 259
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector3d operator -(Vector3d v0, Vector3d v1)
    parameters:
    - id: v0
      type: g3.Vector3d
    - id: v1
      type: g3.Vector3d
    return:
      type: g3.Vector3d
    content.vb: Public Shared Operator -(v0 As Vector3d, v1 As Vector3d) As Vector3d
  overload: g3.Vector3d.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector3d.op_Subtraction(g3.Vector3d,System.Double)
  commentId: M:g3.Vector3d.op_Subtraction(g3.Vector3d,System.Double)
  id: op_Subtraction(g3.Vector3d,System.Double)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Subtraction(Vector3d, Double)
  nameWithType: Vector3d.Subtraction(Vector3d, Double)
  fullName: g3.Vector3d.Subtraction(g3.Vector3d, System.Double)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Subtraction
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 263
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector3d operator -(Vector3d v0, double f)
    parameters:
    - id: v0
      type: g3.Vector3d
    - id: f
      type: System.Double
    return:
      type: g3.Vector3d
    content.vb: Public Shared Operator -(v0 As Vector3d, f As Double) As Vector3d
  overload: g3.Vector3d.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector3d.op_Equality(g3.Vector3d,g3.Vector3d)
  commentId: M:g3.Vector3d.op_Equality(g3.Vector3d,g3.Vector3d)
  id: op_Equality(g3.Vector3d,g3.Vector3d)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Equality(Vector3d, Vector3d)
  nameWithType: Vector3d.Equality(Vector3d, Vector3d)
  fullName: g3.Vector3d.Equality(g3.Vector3d, g3.Vector3d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Equality
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 270
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static bool operator ==(Vector3d a, Vector3d b)
    parameters:
    - id: a
      type: g3.Vector3d
    - id: b
      type: g3.Vector3d
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(a As Vector3d, b As Vector3d) As Boolean
  overload: g3.Vector3d.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector3d.op_Inequality(g3.Vector3d,g3.Vector3d)
  commentId: M:g3.Vector3d.op_Inequality(g3.Vector3d,g3.Vector3d)
  id: op_Inequality(g3.Vector3d,g3.Vector3d)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Inequality(Vector3d, Vector3d)
  nameWithType: Vector3d.Inequality(Vector3d, Vector3d)
  fullName: g3.Vector3d.Inequality(g3.Vector3d, g3.Vector3d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Inequality
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 274
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static bool operator !=(Vector3d a, Vector3d b)
    parameters:
    - id: a
      type: g3.Vector3d
    - id: b
      type: g3.Vector3d
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(a As Vector3d, b As Vector3d) As Boolean
  overload: g3.Vector3d.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector3d.Equals(System.Object)
  commentId: M:g3.Vector3d.Equals(System.Object)
  id: Equals(System.Object)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Vector3d.Equals(Object)
  fullName: g3.Vector3d.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Equals
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 278
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: g3.Vector3d.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: g3.Vector3d.GetHashCode
  commentId: M:g3.Vector3d.GetHashCode
  id: GetHashCode
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Vector3d.GetHashCode()
  fullName: g3.Vector3d.GetHashCode()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GetHashCode
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 282
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: g3.Vector3d.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: g3.Vector3d.CompareTo(g3.Vector3d)
  commentId: M:g3.Vector3d.CompareTo(g3.Vector3d)
  id: CompareTo(g3.Vector3d)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: CompareTo(Vector3d)
  nameWithType: Vector3d.CompareTo(Vector3d)
  fullName: g3.Vector3d.CompareTo(g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: CompareTo
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 294
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int CompareTo(Vector3d other)
    parameters:
    - id: other
      type: g3.Vector3d
    return:
      type: System.Int32
    content.vb: Public Function CompareTo(other As Vector3d) As Integer
  overload: g3.Vector3d.CompareTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector3d.Equals(g3.Vector3d)
  commentId: M:g3.Vector3d.Equals(g3.Vector3d)
  id: Equals(g3.Vector3d)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Equals(Vector3d)
  nameWithType: Vector3d.Equals(Vector3d)
  fullName: g3.Vector3d.Equals(g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Equals
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 304
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool Equals(Vector3d other)
    parameters:
    - id: other
      type: g3.Vector3d
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Vector3d) As Boolean
  overload: g3.Vector3d.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector3d.EpsilonEqual(g3.Vector3d,System.Double)
  commentId: M:g3.Vector3d.EpsilonEqual(g3.Vector3d,System.Double)
  id: EpsilonEqual(g3.Vector3d,System.Double)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: EpsilonEqual(Vector3d, Double)
  nameWithType: Vector3d.EpsilonEqual(Vector3d, Double)
  fullName: g3.Vector3d.EpsilonEqual(g3.Vector3d, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: EpsilonEqual
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 310
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool EpsilonEqual(Vector3d v2, double epsilon)
    parameters:
    - id: v2
      type: g3.Vector3d
    - id: epsilon
      type: System.Double
    return:
      type: System.Boolean
    content.vb: Public Function EpsilonEqual(v2 As Vector3d, epsilon As Double) As Boolean
  overload: g3.Vector3d.EpsilonEqual*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector3d.Lerp(g3.Vector3d,g3.Vector3d,System.Double)
  commentId: M:g3.Vector3d.Lerp(g3.Vector3d,g3.Vector3d,System.Double)
  id: Lerp(g3.Vector3d,g3.Vector3d,System.Double)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Lerp(Vector3d, Vector3d, Double)
  nameWithType: Vector3d.Lerp(Vector3d, Vector3d, Double)
  fullName: g3.Vector3d.Lerp(g3.Vector3d, g3.Vector3d, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Lerp
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 317
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector3d Lerp(Vector3d a, Vector3d b, double t)
    parameters:
    - id: a
      type: g3.Vector3d
    - id: b
      type: g3.Vector3d
    - id: t
      type: System.Double
    return:
      type: g3.Vector3d
    content.vb: Public Shared Function Lerp(a As Vector3d, b As Vector3d, t As Double) As Vector3d
  overload: g3.Vector3d.Lerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector3d.Lerp(g3.Vector3d@,g3.Vector3d@,System.Double)
  commentId: M:g3.Vector3d.Lerp(g3.Vector3d@,g3.Vector3d@,System.Double)
  id: Lerp(g3.Vector3d@,g3.Vector3d@,System.Double)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Lerp(ref Vector3d, ref Vector3d, Double)
  nameWithType: Vector3d.Lerp(ref Vector3d, ref Vector3d, Double)
  fullName: g3.Vector3d.Lerp(ref g3.Vector3d, ref g3.Vector3d, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Lerp
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 321
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector3d Lerp(ref Vector3d a, ref Vector3d b, double t)
    parameters:
    - id: a
      type: g3.Vector3d
    - id: b
      type: g3.Vector3d
    - id: t
      type: System.Double
    return:
      type: g3.Vector3d
    content.vb: Public Shared Function Lerp(ByRef a As Vector3d, ByRef b As Vector3d, t As Double) As Vector3d
  overload: g3.Vector3d.Lerp*
  nameWithType.vb: Vector3d.Lerp(ByRef Vector3d, ByRef Vector3d, Double)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.Vector3d.Lerp(ByRef g3.Vector3d, ByRef g3.Vector3d, System.Double)
  name.vb: Lerp(ByRef Vector3d, ByRef Vector3d, Double)
- uid: g3.Vector3d.ToString
  commentId: M:g3.Vector3d.ToString
  id: ToString
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Vector3d.ToString()
  fullName: g3.Vector3d.ToString()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ToString
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 328
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: g3.Vector3d.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: g3.Vector3d.ToString(System.String)
  commentId: M:g3.Vector3d.ToString(System.String)
  id: ToString(System.String)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: ToString(String)
  nameWithType: Vector3d.ToString(String)
  fullName: g3.Vector3d.ToString(System.String)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ToString
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 331
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public string ToString(string fmt)
    parameters:
    - id: fmt
      type: System.String
    return:
      type: System.String
    content.vb: Public Function ToString(fmt As String) As String
  overload: g3.Vector3d.ToString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector3d.op_Implicit(g3.Vector3f)~g3.Vector3d
  commentId: M:g3.Vector3d.op_Implicit(g3.Vector3f)~g3.Vector3d
  id: op_Implicit(g3.Vector3f)~g3.Vector3d
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Implicit(Vector3f to Vector3d)
  nameWithType: Vector3d.Implicit(Vector3f to Vector3d)
  fullName: g3.Vector3d.Implicit(g3.Vector3f to g3.Vector3d)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Implicit
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 337
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static implicit operator Vector3d(Vector3f v)
    parameters:
    - id: v
      type: g3.Vector3f
    return:
      type: g3.Vector3d
    content.vb: Public Shared Widening Operator CType(v As Vector3f) As Vector3d
  overload: g3.Vector3d.op_Implicit*
  nameWithType.vb: Vector3d.Widening(Vector3f to Vector3d)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.Vector3d.Widening(g3.Vector3f to g3.Vector3d)
  name.vb: Widening(Vector3f to Vector3d)
- uid: g3.Vector3d.op_Explicit(g3.Vector3d)~g3.Vector3f
  commentId: M:g3.Vector3d.op_Explicit(g3.Vector3d)~g3.Vector3f
  id: op_Explicit(g3.Vector3d)~g3.Vector3f
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Explicit(Vector3d to Vector3f)
  nameWithType: Vector3d.Explicit(Vector3d to Vector3f)
  fullName: g3.Vector3d.Explicit(g3.Vector3d to g3.Vector3f)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Explicit
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 341
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static explicit operator Vector3f(Vector3d v)
    parameters:
    - id: v
      type: g3.Vector3d
    return:
      type: g3.Vector3f
    content.vb: Public Shared Narrowing Operator CType(v As Vector3d) As Vector3f
  overload: g3.Vector3d.op_Explicit*
  nameWithType.vb: Vector3d.Narrowing(Vector3d to Vector3f)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.Vector3d.Narrowing(g3.Vector3d to g3.Vector3f)
  name.vb: Narrowing(Vector3d to Vector3f)
- uid: g3.Vector3d.Orthonormalize(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@)
  commentId: M:g3.Vector3d.Orthonormalize(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@)
  id: Orthonormalize(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: Orthonormalize(ref Vector3d, ref Vector3d, ref Vector3d)
  nameWithType: Vector3d.Orthonormalize(ref Vector3d, ref Vector3d, ref Vector3d)
  fullName: g3.Vector3d.Orthonormalize(ref g3.Vector3d, ref g3.Vector3d, ref g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Orthonormalize
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 370
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nGram-Schmidt orthonormalization of the input vectors.\n[RMS] this is from WildMagic5, but I added returning the minLength value\nfrom GTEngine, because I use this in place of GTEngine&apos;s Orthonormalize in\nComputeOrthogonalComplement below\n"
  example: []
  syntax:
    content: public static double Orthonormalize(ref Vector3d u, ref Vector3d v, ref Vector3d w)
    parameters:
    - id: u
      type: g3.Vector3d
    - id: v
      type: g3.Vector3d
    - id: w
      type: g3.Vector3d
    return:
      type: System.Double
    content.vb: Public Shared Function Orthonormalize(ByRef u As Vector3d, ByRef v As Vector3d, ByRef w As Vector3d) As Double
  overload: g3.Vector3d.Orthonormalize*
  nameWithType.vb: Vector3d.Orthonormalize(ByRef Vector3d, ByRef Vector3d, ByRef Vector3d)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.Vector3d.Orthonormalize(ByRef g3.Vector3d, ByRef g3.Vector3d, ByRef g3.Vector3d)
  name.vb: Orthonormalize(ByRef Vector3d, ByRef Vector3d, ByRef Vector3d)
- uid: g3.Vector3d.GenerateComplementBasis(g3.Vector3d@,g3.Vector3d@,g3.Vector3d)
  commentId: M:g3.Vector3d.GenerateComplementBasis(g3.Vector3d@,g3.Vector3d@,g3.Vector3d)
  id: GenerateComplementBasis(g3.Vector3d@,g3.Vector3d@,g3.Vector3d)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: GenerateComplementBasis(ref Vector3d, ref Vector3d, Vector3d)
  nameWithType: Vector3d.GenerateComplementBasis(ref Vector3d, ref Vector3d, Vector3d)
  fullName: g3.Vector3d.GenerateComplementBasis(ref g3.Vector3d, ref g3.Vector3d, g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GenerateComplementBasis
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 409
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nInput W must be a unit-length vector.  The output vectors {U,V} are\nunit length and mutually perpendicular, and {U,V,W} is an orthonormal basis.\nported from WildMagic5\n"
  example: []
  syntax:
    content: public static void GenerateComplementBasis(ref Vector3d u, ref Vector3d v, Vector3d w)
    parameters:
    - id: u
      type: g3.Vector3d
    - id: v
      type: g3.Vector3d
    - id: w
      type: g3.Vector3d
    content.vb: Public Shared Sub GenerateComplementBasis(ByRef u As Vector3d, ByRef v As Vector3d, w As Vector3d)
  overload: g3.Vector3d.GenerateComplementBasis*
  nameWithType.vb: Vector3d.GenerateComplementBasis(ByRef Vector3d, ByRef Vector3d, Vector3d)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.Vector3d.GenerateComplementBasis(ByRef g3.Vector3d, ByRef g3.Vector3d, g3.Vector3d)
  name.vb: GenerateComplementBasis(ByRef Vector3d, ByRef Vector3d, Vector3d)
- uid: g3.Vector3d.ComputeOrthogonalComplement(System.Int32,g3.Vector3d,g3.Vector3d@,g3.Vector3d@)
  commentId: M:g3.Vector3d.ComputeOrthogonalComplement(System.Int32,g3.Vector3d,g3.Vector3d@,g3.Vector3d@)
  id: ComputeOrthogonalComplement(System.Int32,g3.Vector3d,g3.Vector3d@,g3.Vector3d@)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: ComputeOrthogonalComplement(Int32, Vector3d, ref Vector3d, ref Vector3d)
  nameWithType: Vector3d.ComputeOrthogonalComplement(Int32, Vector3d, ref Vector3d, ref Vector3d)
  fullName: g3.Vector3d.ComputeOrthogonalComplement(System.Int32, g3.Vector3d, ref g3.Vector3d, ref g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ComputeOrthogonalComplement
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 444
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nthis function is ported from GTEngine.\nCompute a right-handed orthonormal basis for the orthogonal complement\nof the input vectors.  The function returns the smallest length of the\nunnormalized vectors computed during the process.  If this value is nearly\nzero, it is possible that the inputs are linearly dependent (within\nnumerical round-off errors).  On input, numInputs must be 1 or 2 and\nv0 through v(numInputs-1) must be initialized.  On output, the\nvectors v0 through v2 form an orthonormal set.\n"
  example: []
  syntax:
    content: public static double ComputeOrthogonalComplement(int numInputs, Vector3d v0, ref Vector3d v1, ref Vector3d v2)
    parameters:
    - id: numInputs
      type: System.Int32
    - id: v0
      type: g3.Vector3d
    - id: v1
      type: g3.Vector3d
    - id: v2
      type: g3.Vector3d
    return:
      type: System.Double
    content.vb: Public Shared Function ComputeOrthogonalComplement(numInputs As Integer, v0 As Vector3d, ByRef v1 As Vector3d, ByRef v2 As Vector3d) As Double
  overload: g3.Vector3d.ComputeOrthogonalComplement*
  nameWithType.vb: Vector3d.ComputeOrthogonalComplement(Int32, Vector3d, ByRef Vector3d, ByRef Vector3d)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.Vector3d.ComputeOrthogonalComplement(System.Int32, g3.Vector3d, ByRef g3.Vector3d, ByRef g3.Vector3d)
  name.vb: ComputeOrthogonalComplement(Int32, Vector3d, ByRef Vector3d, ByRef Vector3d)
- uid: g3.Vector3d.MakePerpVectors(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@)
  commentId: M:g3.Vector3d.MakePerpVectors(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@)
  id: MakePerpVectors(g3.Vector3d@,g3.Vector3d@,g3.Vector3d@)
  parent: g3.Vector3d
  langs:
  - csharp
  - vb
  name: MakePerpVectors(ref Vector3d, out Vector3d, out Vector3d)
  nameWithType: Vector3d.MakePerpVectors(ref Vector3d, out Vector3d, out Vector3d)
  fullName: g3.Vector3d.MakePerpVectors(ref g3.Vector3d, out g3.Vector3d, out g3.Vector3d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector3d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: MakePerpVectors
    path: ../Assets/geometry3Sharp/math/Vector3d.cs
    startLine: 472
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nReturns two vectors perpendicular to n, as efficiently as possible.\nDuff et all method, from https://graphics.pixar.com/library/OrthonormalB/paper.pdf\n"
  example: []
  syntax:
    content: public static void MakePerpVectors(ref Vector3d n, out Vector3d b1, out Vector3d b2)
    parameters:
    - id: n
      type: g3.Vector3d
    - id: b1
      type: g3.Vector3d
    - id: b2
      type: g3.Vector3d
    content.vb: Public Shared Sub MakePerpVectors(ByRef n As Vector3d, ByRef b1 As Vector3d, ByRef b2 As Vector3d)
  overload: g3.Vector3d.MakePerpVectors*
  nameWithType.vb: Vector3d.MakePerpVectors(ByRef Vector3d, ByRef Vector3d, ByRef Vector3d)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.Vector3d.MakePerpVectors(ByRef g3.Vector3d, ByRef g3.Vector3d, ByRef g3.Vector3d)
  name.vb: MakePerpVectors(ByRef Vector3d, ByRef Vector3d, ByRef Vector3d)
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: g3.Vector3d.#ctor*
  commentId: Overload:g3.Vector3d.#ctor
  name: Vector3d
  nameWithType: Vector3d.Vector3d
  fullName: g3.Vector3d.Vector3d
- uid: System.Double[]
  isExternal: true
  name: Double[]
  nameWithType: Double[]
  fullName: System.Double[]
  nameWithType.vb: Double()
  fullName.vb: System.Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: g3.Vector3d
  commentId: T:g3.Vector3d
  parent: g3
  name: Vector3d
  nameWithType: Vector3d
  fullName: g3.Vector3d
- uid: g3.Vector3f
  commentId: T:g3.Vector3f
  parent: g3
  name: Vector3f
  nameWithType: Vector3f
  fullName: g3.Vector3f
- uid: g3.Vector3d.Item*
  commentId: Overload:g3.Vector3d.Item
  name: Item
  nameWithType: Vector3d.Item
  fullName: g3.Vector3d.Item
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: g3.Vector3d.xy*
  commentId: Overload:g3.Vector3d.xy
  name: xy
  nameWithType: Vector3d.xy
  fullName: g3.Vector3d.xy
- uid: g3.Vector2d
  commentId: T:g3.Vector2d
  parent: g3
  name: Vector2d
  nameWithType: Vector2d
  fullName: g3.Vector2d
- uid: g3.Vector3d.xz*
  commentId: Overload:g3.Vector3d.xz
  name: xz
  nameWithType: Vector3d.xz
  fullName: g3.Vector3d.xz
- uid: g3.Vector3d.yz*
  commentId: Overload:g3.Vector3d.yz
  name: yz
  nameWithType: Vector3d.yz
  fullName: g3.Vector3d.yz
- uid: g3.Vector3d.LengthSquared*
  commentId: Overload:g3.Vector3d.LengthSquared
  name: LengthSquared
  nameWithType: Vector3d.LengthSquared
  fullName: g3.Vector3d.LengthSquared
- uid: g3.Vector3d.Length*
  commentId: Overload:g3.Vector3d.Length
  name: Length
  nameWithType: Vector3d.Length
  fullName: g3.Vector3d.Length
- uid: g3.Vector3d.LengthL1*
  commentId: Overload:g3.Vector3d.LengthL1
  name: LengthL1
  nameWithType: Vector3d.LengthL1
  fullName: g3.Vector3d.LengthL1
- uid: g3.Vector3d.Max*
  commentId: Overload:g3.Vector3d.Max
  name: Max
  nameWithType: Vector3d.Max
  fullName: g3.Vector3d.Max
- uid: g3.Vector3d.Min*
  commentId: Overload:g3.Vector3d.Min
  name: Min
  nameWithType: Vector3d.Min
  fullName: g3.Vector3d.Min
- uid: g3.Vector3d.MaxAbs*
  commentId: Overload:g3.Vector3d.MaxAbs
  name: MaxAbs
  nameWithType: Vector3d.MaxAbs
  fullName: g3.Vector3d.MaxAbs
- uid: g3.Vector3d.MinAbs*
  commentId: Overload:g3.Vector3d.MinAbs
  name: MinAbs
  nameWithType: Vector3d.MinAbs
  fullName: g3.Vector3d.MinAbs
- uid: g3.Vector3d.Abs*
  commentId: Overload:g3.Vector3d.Abs
  name: Abs
  nameWithType: Vector3d.Abs
  fullName: g3.Vector3d.Abs
- uid: g3.Vector3d.Normalize*
  commentId: Overload:g3.Vector3d.Normalize
  name: Normalize
  nameWithType: Vector3d.Normalize
  fullName: g3.Vector3d.Normalize
- uid: g3.Vector3d.Normalized*
  commentId: Overload:g3.Vector3d.Normalized
  name: Normalized
  nameWithType: Vector3d.Normalized
  fullName: g3.Vector3d.Normalized
- uid: g3.Vector3d.IsNormalized*
  commentId: Overload:g3.Vector3d.IsNormalized
  name: IsNormalized
  nameWithType: Vector3d.IsNormalized
  fullName: g3.Vector3d.IsNormalized
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: g3.Vector3d.IsFinite*
  commentId: Overload:g3.Vector3d.IsFinite
  name: IsFinite
  nameWithType: Vector3d.IsFinite
  fullName: g3.Vector3d.IsFinite
- uid: g3.Vector3d.Round*
  commentId: Overload:g3.Vector3d.Round
  name: Round
  nameWithType: Vector3d.Round
  fullName: g3.Vector3d.Round
- uid: g3.Vector3d.Dot*
  commentId: Overload:g3.Vector3d.Dot
  name: Dot
  nameWithType: Vector3d.Dot
  fullName: g3.Vector3d.Dot
- uid: g3.Vector3d.Cross*
  commentId: Overload:g3.Vector3d.Cross
  name: Cross
  nameWithType: Vector3d.Cross
  fullName: g3.Vector3d.Cross
- uid: g3.Vector3d.UnitCross*
  commentId: Overload:g3.Vector3d.UnitCross
  name: UnitCross
  nameWithType: Vector3d.UnitCross
  fullName: g3.Vector3d.UnitCross
- uid: g3.Vector3d.AngleD*
  commentId: Overload:g3.Vector3d.AngleD
  name: AngleD
  nameWithType: Vector3d.AngleD
  fullName: g3.Vector3d.AngleD
- uid: g3.Vector3d.AngleR*
  commentId: Overload:g3.Vector3d.AngleR
  name: AngleR
  nameWithType: Vector3d.AngleR
  fullName: g3.Vector3d.AngleR
- uid: g3.Vector3d.DistanceSquared*
  commentId: Overload:g3.Vector3d.DistanceSquared
  name: DistanceSquared
  nameWithType: Vector3d.DistanceSquared
  fullName: g3.Vector3d.DistanceSquared
- uid: g3.Vector3d.Distance*
  commentId: Overload:g3.Vector3d.Distance
  name: Distance
  nameWithType: Vector3d.Distance
  fullName: g3.Vector3d.Distance
- uid: g3.Vector3d.Set*
  commentId: Overload:g3.Vector3d.Set
  name: Set
  nameWithType: Vector3d.Set
  fullName: g3.Vector3d.Set
- uid: g3.Vector3d.Add*
  commentId: Overload:g3.Vector3d.Add
  name: Add
  nameWithType: Vector3d.Add
  fullName: g3.Vector3d.Add
- uid: g3.Vector3d.Subtract*
  commentId: Overload:g3.Vector3d.Subtract
  name: Subtract
  nameWithType: Vector3d.Subtract
  fullName: g3.Vector3d.Subtract
- uid: g3.Vector3d.op_UnaryNegation*
  commentId: Overload:g3.Vector3d.op_UnaryNegation
  name: UnaryNegation
  nameWithType: Vector3d.UnaryNegation
  fullName: g3.Vector3d.UnaryNegation
- uid: g3.Vector3d.op_Multiply*
  commentId: Overload:g3.Vector3d.op_Multiply
  name: Multiply
  nameWithType: Vector3d.Multiply
  fullName: g3.Vector3d.Multiply
- uid: g3.Vector3d.op_Division*
  commentId: Overload:g3.Vector3d.op_Division
  name: Division
  nameWithType: Vector3d.Division
  fullName: g3.Vector3d.Division
- uid: g3.Vector3d.op_Addition*
  commentId: Overload:g3.Vector3d.op_Addition
  name: Addition
  nameWithType: Vector3d.Addition
  fullName: g3.Vector3d.Addition
- uid: g3.Vector3d.op_Subtraction*
  commentId: Overload:g3.Vector3d.op_Subtraction
  name: Subtraction
  nameWithType: Vector3d.Subtraction
  fullName: g3.Vector3d.Subtraction
- uid: g3.Vector3d.op_Equality*
  commentId: Overload:g3.Vector3d.op_Equality
  name: Equality
  nameWithType: Vector3d.Equality
  fullName: g3.Vector3d.Equality
- uid: g3.Vector3d.op_Inequality*
  commentId: Overload:g3.Vector3d.op_Inequality
  name: Inequality
  nameWithType: Vector3d.Inequality
  fullName: g3.Vector3d.Inequality
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.Vector3d.Equals*
  commentId: Overload:g3.Vector3d.Equals
  name: Equals
  nameWithType: Vector3d.Equals
  fullName: g3.Vector3d.Equals
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.Vector3d.GetHashCode*
  commentId: Overload:g3.Vector3d.GetHashCode
  name: GetHashCode
  nameWithType: Vector3d.GetHashCode
  fullName: g3.Vector3d.GetHashCode
- uid: g3.Vector3d.CompareTo*
  commentId: Overload:g3.Vector3d.CompareTo
  name: CompareTo
  nameWithType: Vector3d.CompareTo
  fullName: g3.Vector3d.CompareTo
- uid: g3.Vector3d.EpsilonEqual*
  commentId: Overload:g3.Vector3d.EpsilonEqual
  name: EpsilonEqual
  nameWithType: Vector3d.EpsilonEqual
  fullName: g3.Vector3d.EpsilonEqual
- uid: g3.Vector3d.Lerp*
  commentId: Overload:g3.Vector3d.Lerp
  name: Lerp
  nameWithType: Vector3d.Lerp
  fullName: g3.Vector3d.Lerp
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.Vector3d.ToString*
  commentId: Overload:g3.Vector3d.ToString
  name: ToString
  nameWithType: Vector3d.ToString
  fullName: g3.Vector3d.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: g3.Vector3d.op_Implicit*
  commentId: Overload:g3.Vector3d.op_Implicit
  name: Implicit
  nameWithType: Vector3d.Implicit
  fullName: g3.Vector3d.Implicit
  nameWithType.vb: Vector3d.Widening
  fullName.vb: g3.Vector3d.Widening
  name.vb: Widening
- uid: g3.Vector3d.op_Explicit*
  commentId: Overload:g3.Vector3d.op_Explicit
  name: Explicit
  nameWithType: Vector3d.Explicit
  fullName: g3.Vector3d.Explicit
  nameWithType.vb: Vector3d.Narrowing
  fullName.vb: g3.Vector3d.Narrowing
  name.vb: Narrowing
- uid: g3.Vector3d.Orthonormalize*
  commentId: Overload:g3.Vector3d.Orthonormalize
  name: Orthonormalize
  nameWithType: Vector3d.Orthonormalize
  fullName: g3.Vector3d.Orthonormalize
- uid: g3.Vector3d.GenerateComplementBasis*
  commentId: Overload:g3.Vector3d.GenerateComplementBasis
  name: GenerateComplementBasis
  nameWithType: Vector3d.GenerateComplementBasis
  fullName: g3.Vector3d.GenerateComplementBasis
- uid: g3.Vector3d.ComputeOrthogonalComplement*
  commentId: Overload:g3.Vector3d.ComputeOrthogonalComplement
  name: ComputeOrthogonalComplement
  nameWithType: Vector3d.ComputeOrthogonalComplement
  fullName: g3.Vector3d.ComputeOrthogonalComplement
- uid: g3.Vector3d.MakePerpVectors*
  commentId: Overload:g3.Vector3d.MakePerpVectors
  name: MakePerpVectors
  nameWithType: Vector3d.MakePerpVectors
  fullName: g3.Vector3d.MakePerpVectors

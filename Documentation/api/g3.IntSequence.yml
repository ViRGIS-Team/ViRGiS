### YamlMime:ManagedReference
items:
- uid: g3.IntSequence
  commentId: T:g3.IntSequence
  id: IntSequence
  parent: g3
  children:
  - g3.IntSequence.#ctor(g3.Interval1i)
  - g3.IntSequence.#ctor(System.Int32,System.Int32)
  - g3.IntSequence.Add(System.Int32)
  - g3.IntSequence.Clear
  - g3.IntSequence.Contains(System.Int32)
  - g3.IntSequence.CopyTo(System.Int32[],System.Int32)
  - g3.IntSequence.Count
  - g3.IntSequence.FromToInclusive(System.Int32,System.Int32)
  - g3.IntSequence.GetEnumerator
  - g3.IntSequence.IndexOf(System.Int32)
  - g3.IntSequence.Insert(System.Int32,System.Int32)
  - g3.IntSequence.IsReadOnly
  - g3.IntSequence.Item(System.Int32)
  - g3.IntSequence.Range(System.Int32)
  - g3.IntSequence.Range(System.Int32,System.Int32)
  - g3.IntSequence.RangeInclusive(System.Int32)
  - g3.IntSequence.Remove(System.Int32)
  - g3.IntSequence.RemoveAt(System.Int32)
  langs:
  - csharp
  - vb
  name: IntSequence
  nameWithType: IntSequence
  fullName: g3.IntSequence
  type: Struct
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IntSequence
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 100
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nIList wrapper for an Interval1i, ie sequential list of integers\n"
  example: []
  syntax:
    content: 'public struct IntSequence : IList<int>, ICollection<int>, IEnumerable<int>, IEnumerable'
    content.vb: >-
      Public Structure IntSequence
          Implements IList(Of Integer), ICollection(Of Integer), IEnumerable(Of Integer), IEnumerable
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: g3.IntSequence.#ctor(g3.Interval1i)
  commentId: M:g3.IntSequence.#ctor(g3.Interval1i)
  id: '#ctor(g3.Interval1i)'
  parent: g3.IntSequence
  langs:
  - csharp
  - vb
  name: IntSequence(Interval1i)
  nameWithType: IntSequence.IntSequence(Interval1i)
  fullName: g3.IntSequence.IntSequence(g3.Interval1i)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 104
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IntSequence(Interval1i ival)
    parameters:
    - id: ival
      type: g3.Interval1i
    content.vb: Public Sub New(ival As Interval1i)
  overload: g3.IntSequence.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.IntSequence.#ctor(System.Int32,System.Int32)
  commentId: M:g3.IntSequence.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: g3.IntSequence
  langs:
  - csharp
  - vb
  name: IntSequence(Int32, Int32)
  nameWithType: IntSequence.IntSequence(Int32, Int32)
  fullName: g3.IntSequence.IntSequence(System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 107
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IntSequence(int iStart, int iEnd)
    parameters:
    - id: iStart
      type: System.Int32
    - id: iEnd
      type: System.Int32
    content.vb: Public Sub New(iStart As Integer, iEnd As Integer)
  overload: g3.IntSequence.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.IntSequence.Range(System.Int32)
  commentId: M:g3.IntSequence.Range(System.Int32)
  id: Range(System.Int32)
  parent: g3.IntSequence
  langs:
  - csharp
  - vb
  name: Range(Int32)
  nameWithType: IntSequence.Range(Int32)
  fullName: g3.IntSequence.Range(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Range
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 112
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: 'construct interval [0, N-1] '
  example: []
  syntax:
    content: public static IntSequence Range(int N)
    parameters:
    - id: N
      type: System.Int32
    return:
      type: g3.IntSequence
    content.vb: Public Shared Function Range(N As Integer) As IntSequence
  overload: g3.IntSequence.Range*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.IntSequence.RangeInclusive(System.Int32)
  commentId: M:g3.IntSequence.RangeInclusive(System.Int32)
  id: RangeInclusive(System.Int32)
  parent: g3.IntSequence
  langs:
  - csharp
  - vb
  name: RangeInclusive(Int32)
  nameWithType: IntSequence.RangeInclusive(Int32)
  fullName: g3.IntSequence.RangeInclusive(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: RangeInclusive
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 115
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: 'construct interval [0, N-1] '
  example: []
  syntax:
    content: public static IntSequence RangeInclusive(int N)
    parameters:
    - id: N
      type: System.Int32
    return:
      type: g3.IntSequence
    content.vb: Public Shared Function RangeInclusive(N As Integer) As IntSequence
  overload: g3.IntSequence.RangeInclusive*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.IntSequence.Range(System.Int32,System.Int32)
  commentId: M:g3.IntSequence.Range(System.Int32,System.Int32)
  id: Range(System.Int32,System.Int32)
  parent: g3.IntSequence
  langs:
  - csharp
  - vb
  name: Range(Int32, Int32)
  nameWithType: IntSequence.Range(Int32, Int32)
  fullName: g3.IntSequence.Range(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Range
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 118
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: 'construct interval [start, start+N-1] '
  example: []
  syntax:
    content: public static IntSequence Range(int start, int N)
    parameters:
    - id: start
      type: System.Int32
    - id: N
      type: System.Int32
    return:
      type: g3.IntSequence
    content.vb: Public Shared Function Range(start As Integer, N As Integer) As IntSequence
  overload: g3.IntSequence.Range*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.IntSequence.FromToInclusive(System.Int32,System.Int32)
  commentId: M:g3.IntSequence.FromToInclusive(System.Int32,System.Int32)
  id: FromToInclusive(System.Int32,System.Int32)
  parent: g3.IntSequence
  langs:
  - csharp
  - vb
  name: FromToInclusive(Int32, Int32)
  nameWithType: IntSequence.FromToInclusive(Int32, Int32)
  fullName: g3.IntSequence.FromToInclusive(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: FromToInclusive
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 122
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: 'construct interval [a, b] '
  example: []
  syntax:
    content: public static IntSequence FromToInclusive(int a, int b)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int32
    return:
      type: g3.IntSequence
    content.vb: Public Shared Function FromToInclusive(a As Integer, b As Integer) As IntSequence
  overload: g3.IntSequence.FromToInclusive*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.IntSequence.Item(System.Int32)
  commentId: P:g3.IntSequence.Item(System.Int32)
  id: Item(System.Int32)
  parent: g3.IntSequence
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: IntSequence.Item[Int32]
  fullName: g3.IntSequence.Item[System.Int32]
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: this[]
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 124
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Property Item(index As Integer) As Integer
  overload: g3.IntSequence.Item*
  nameWithType.vb: IntSequence.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: g3.IntSequence.Item(System.Int32)
  name.vb: Item(Int32)
- uid: g3.IntSequence.Count
  commentId: P:g3.IntSequence.Count
  id: Count
  parent: g3.IntSequence
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: IntSequence.Count
  fullName: g3.IntSequence.Count
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Count
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 128
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: g3.IntSequence.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.IntSequence.IsReadOnly
  commentId: P:g3.IntSequence.IsReadOnly
  id: IsReadOnly
  parent: g3.IntSequence
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: IntSequence.IsReadOnly
  fullName: g3.IntSequence.IsReadOnly
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IsReadOnly
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 129
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: g3.IntSequence.IsReadOnly*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.IntSequence.Add(System.Int32)
  commentId: M:g3.IntSequence.Add(System.Int32)
  id: Add(System.Int32)
  parent: g3.IntSequence
  langs:
  - csharp
  - vb
  name: Add(Int32)
  nameWithType: IntSequence.Add(Int32)
  fullName: g3.IntSequence.Add(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Add
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 131
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Add(int item)
    parameters:
    - id: item
      type: System.Int32
    content.vb: Public Sub Add(item As Integer)
  overload: g3.IntSequence.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.IntSequence.Clear
  commentId: M:g3.IntSequence.Clear
  id: Clear
  parent: g3.IntSequence
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: IntSequence.Clear()
  fullName: g3.IntSequence.Clear()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Clear
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 132
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: g3.IntSequence.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.IntSequence.Insert(System.Int32,System.Int32)
  commentId: M:g3.IntSequence.Insert(System.Int32,System.Int32)
  id: Insert(System.Int32,System.Int32)
  parent: g3.IntSequence
  langs:
  - csharp
  - vb
  name: Insert(Int32, Int32)
  nameWithType: IntSequence.Insert(Int32, Int32)
  fullName: g3.IntSequence.Insert(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Insert
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 133
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Insert(int index, int item)
    parameters:
    - id: index
      type: System.Int32
    - id: item
      type: System.Int32
    content.vb: Public Sub Insert(index As Integer, item As Integer)
  overload: g3.IntSequence.Insert*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.IntSequence.Remove(System.Int32)
  commentId: M:g3.IntSequence.Remove(System.Int32)
  id: Remove(System.Int32)
  parent: g3.IntSequence
  langs:
  - csharp
  - vb
  name: Remove(Int32)
  nameWithType: IntSequence.Remove(Int32)
  fullName: g3.IntSequence.Remove(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Remove
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 134
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool Remove(int item)
    parameters:
    - id: item
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function Remove(item As Integer) As Boolean
  overload: g3.IntSequence.Remove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.IntSequence.RemoveAt(System.Int32)
  commentId: M:g3.IntSequence.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: g3.IntSequence
  langs:
  - csharp
  - vb
  name: RemoveAt(Int32)
  nameWithType: IntSequence.RemoveAt(Int32)
  fullName: g3.IntSequence.RemoveAt(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: RemoveAt
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 135
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void RemoveAt(int index)
    parameters:
    - id: index
      type: System.Int32
    content.vb: Public Sub RemoveAt(index As Integer)
  overload: g3.IntSequence.RemoveAt*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.IntSequence.Contains(System.Int32)
  commentId: M:g3.IntSequence.Contains(System.Int32)
  id: Contains(System.Int32)
  parent: g3.IntSequence
  langs:
  - csharp
  - vb
  name: Contains(Int32)
  nameWithType: IntSequence.Contains(Int32)
  fullName: g3.IntSequence.Contains(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Contains
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 138
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool Contains(int item)
    parameters:
    - id: item
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function Contains(item As Integer) As Boolean
  overload: g3.IntSequence.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.IntSequence.IndexOf(System.Int32)
  commentId: M:g3.IntSequence.IndexOf(System.Int32)
  id: IndexOf(System.Int32)
  parent: g3.IntSequence
  langs:
  - csharp
  - vb
  name: IndexOf(Int32)
  nameWithType: IntSequence.IndexOf(Int32)
  fullName: g3.IntSequence.IndexOf(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IndexOf
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 139
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int IndexOf(int item)
    parameters:
    - id: item
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Function IndexOf(item As Integer) As Integer
  overload: g3.IntSequence.IndexOf*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.IntSequence.CopyTo(System.Int32[],System.Int32)
  commentId: M:g3.IntSequence.CopyTo(System.Int32[],System.Int32)
  id: CopyTo(System.Int32[],System.Int32)
  parent: g3.IntSequence
  langs:
  - csharp
  - vb
  name: CopyTo(Int32[], Int32)
  nameWithType: IntSequence.CopyTo(Int32[], Int32)
  fullName: g3.IntSequence.CopyTo(System.Int32[], System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: CopyTo
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 140
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void CopyTo(int[] array, int arrayIndex)
    parameters:
    - id: array
      type: System.Int32[]
    - id: arrayIndex
      type: System.Int32
    content.vb: Public Sub CopyTo(array As Integer(), arrayIndex As Integer)
  overload: g3.IntSequence.CopyTo*
  nameWithType.vb: IntSequence.CopyTo(Int32(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.IntSequence.CopyTo(System.Int32(), System.Int32)
  name.vb: CopyTo(Int32(), Int32)
- uid: g3.IntSequence.GetEnumerator
  commentId: M:g3.IntSequence.GetEnumerator
  id: GetEnumerator
  parent: g3.IntSequence
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: IntSequence.GetEnumerator()
  fullName: g3.IntSequence.GetEnumerator()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GetEnumerator
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 142
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IEnumerator<int> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.Int32}
    content.vb: Public Function GetEnumerator As IEnumerator(Of Integer)
  overload: g3.IntSequence.GetEnumerator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: g3.IntSequence.#ctor*
  commentId: Overload:g3.IntSequence.#ctor
  name: IntSequence
  nameWithType: IntSequence.IntSequence
  fullName: g3.IntSequence.IntSequence
- uid: g3.Interval1i
  commentId: T:g3.Interval1i
  parent: g3
  name: Interval1i
  nameWithType: Interval1i
  fullName: g3.Interval1i
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: g3.IntSequence.Range*
  commentId: Overload:g3.IntSequence.Range
  name: Range
  nameWithType: IntSequence.Range
  fullName: g3.IntSequence.Range
- uid: g3.IntSequence
  commentId: T:g3.IntSequence
  parent: g3
  name: IntSequence
  nameWithType: IntSequence
  fullName: g3.IntSequence
- uid: g3.IntSequence.RangeInclusive*
  commentId: Overload:g3.IntSequence.RangeInclusive
  name: RangeInclusive
  nameWithType: IntSequence.RangeInclusive
  fullName: g3.IntSequence.RangeInclusive
- uid: g3.IntSequence.FromToInclusive*
  commentId: Overload:g3.IntSequence.FromToInclusive
  name: FromToInclusive
  nameWithType: IntSequence.FromToInclusive
  fullName: g3.IntSequence.FromToInclusive
- uid: g3.IntSequence.Item*
  commentId: Overload:g3.IntSequence.Item
  name: Item
  nameWithType: IntSequence.Item
  fullName: g3.IntSequence.Item
- uid: g3.IntSequence.Count*
  commentId: Overload:g3.IntSequence.Count
  name: Count
  nameWithType: IntSequence.Count
  fullName: g3.IntSequence.Count
- uid: g3.IntSequence.IsReadOnly*
  commentId: Overload:g3.IntSequence.IsReadOnly
  name: IsReadOnly
  nameWithType: IntSequence.IsReadOnly
  fullName: g3.IntSequence.IsReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: g3.IntSequence.Add*
  commentId: Overload:g3.IntSequence.Add
  name: Add
  nameWithType: IntSequence.Add
  fullName: g3.IntSequence.Add
- uid: g3.IntSequence.Clear*
  commentId: Overload:g3.IntSequence.Clear
  name: Clear
  nameWithType: IntSequence.Clear
  fullName: g3.IntSequence.Clear
- uid: g3.IntSequence.Insert*
  commentId: Overload:g3.IntSequence.Insert
  name: Insert
  nameWithType: IntSequence.Insert
  fullName: g3.IntSequence.Insert
- uid: g3.IntSequence.Remove*
  commentId: Overload:g3.IntSequence.Remove
  name: Remove
  nameWithType: IntSequence.Remove
  fullName: g3.IntSequence.Remove
- uid: g3.IntSequence.RemoveAt*
  commentId: Overload:g3.IntSequence.RemoveAt
  name: RemoveAt
  nameWithType: IntSequence.RemoveAt
  fullName: g3.IntSequence.RemoveAt
- uid: g3.IntSequence.Contains*
  commentId: Overload:g3.IntSequence.Contains
  name: Contains
  nameWithType: IntSequence.Contains
  fullName: g3.IntSequence.Contains
- uid: g3.IntSequence.IndexOf*
  commentId: Overload:g3.IntSequence.IndexOf
  name: IndexOf
  nameWithType: IntSequence.IndexOf
  fullName: g3.IntSequence.IndexOf
- uid: g3.IntSequence.CopyTo*
  commentId: Overload:g3.IntSequence.CopyTo
  name: CopyTo
  nameWithType: IntSequence.CopyTo
  fullName: g3.IntSequence.CopyTo
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: g3.IntSequence.GetEnumerator*
  commentId: Overload:g3.IntSequence.GetEnumerator
  name: GetEnumerator
  nameWithType: IntSequence.GetEnumerator
  fullName: g3.IntSequence.GetEnumerator
- uid: System.Collections.Generic.IEnumerator{System.Int32}
  commentId: T:System.Collections.Generic.IEnumerator{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<Int32>
  nameWithType: IEnumerator<Int32>
  fullName: System.Collections.Generic.IEnumerator<System.Int32>
  nameWithType.vb: IEnumerator(Of Int32)
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Int32)
  name.vb: IEnumerator(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic

### YamlMime:ManagedReference
items:
- uid: g3.IBinaryVoxelGrid
  commentId: T:g3.IBinaryVoxelGrid
  id: IBinaryVoxelGrid
  parent: g3
  children:
  - g3.IBinaryVoxelGrid.Get(g3.Vector3i)
  - g3.IBinaryVoxelGrid.GridBounds
  - g3.IBinaryVoxelGrid.NonZeros
  langs:
  - csharp
  - vb
  name: IBinaryVoxelGrid
  nameWithType: IBinaryVoxelGrid
  fullName: g3.IBinaryVoxelGrid
  type: Interface
  source:
    remote:
      path: Assets/geometry3Sharp/spatial/Bitmap3.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IBinaryVoxelGrid
    path: ../Assets/geometry3Sharp/spatial/Bitmap3.cs
    startLine: 7
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public interface IBinaryVoxelGrid
    content.vb: Public Interface IBinaryVoxelGrid
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: g3.IBinaryVoxelGrid.GridBounds
  commentId: P:g3.IBinaryVoxelGrid.GridBounds
  id: GridBounds
  parent: g3.IBinaryVoxelGrid
  langs:
  - csharp
  - vb
  name: GridBounds
  nameWithType: IBinaryVoxelGrid.GridBounds
  fullName: g3.IBinaryVoxelGrid.GridBounds
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/spatial/Bitmap3.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GridBounds
    path: ../Assets/geometry3Sharp/spatial/Bitmap3.cs
    startLine: 9
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: AxisAlignedBox3i GridBounds { get; }
    parameters: []
    return:
      type: g3.AxisAlignedBox3i
    content.vb: ReadOnly Property GridBounds As AxisAlignedBox3i
  overload: g3.IBinaryVoxelGrid.GridBounds*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: g3.IBinaryVoxelGrid.Get(g3.Vector3i)
  commentId: M:g3.IBinaryVoxelGrid.Get(g3.Vector3i)
  id: Get(g3.Vector3i)
  parent: g3.IBinaryVoxelGrid
  langs:
  - csharp
  - vb
  name: Get(Vector3i)
  nameWithType: IBinaryVoxelGrid.Get(Vector3i)
  fullName: g3.IBinaryVoxelGrid.Get(g3.Vector3i)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/spatial/Bitmap3.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Get
    path: ../Assets/geometry3Sharp/spatial/Bitmap3.cs
    startLine: 10
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: bool Get(Vector3i i)
    parameters:
    - id: i
      type: g3.Vector3i
    return:
      type: System.Boolean
    content.vb: Function Get(i As Vector3i) As Boolean
  overload: g3.IBinaryVoxelGrid.Get*
- uid: g3.IBinaryVoxelGrid.NonZeros
  commentId: M:g3.IBinaryVoxelGrid.NonZeros
  id: NonZeros
  parent: g3.IBinaryVoxelGrid
  langs:
  - csharp
  - vb
  name: NonZeros()
  nameWithType: IBinaryVoxelGrid.NonZeros()
  fullName: g3.IBinaryVoxelGrid.NonZeros()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/spatial/Bitmap3.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: NonZeros
    path: ../Assets/geometry3Sharp/spatial/Bitmap3.cs
    startLine: 11
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: IEnumerable<Vector3i> NonZeros()
    return:
      type: System.Collections.Generic.IEnumerable{g3.Vector3i}
    content.vb: Function NonZeros As IEnumerable(Of Vector3i)
  overload: g3.IBinaryVoxelGrid.NonZeros*
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: g3.IBinaryVoxelGrid.GridBounds*
  commentId: Overload:g3.IBinaryVoxelGrid.GridBounds
  name: GridBounds
  nameWithType: IBinaryVoxelGrid.GridBounds
  fullName: g3.IBinaryVoxelGrid.GridBounds
- uid: g3.AxisAlignedBox3i
  commentId: T:g3.AxisAlignedBox3i
  parent: g3
  name: AxisAlignedBox3i
  nameWithType: AxisAlignedBox3i
  fullName: g3.AxisAlignedBox3i
- uid: g3.IBinaryVoxelGrid.Get*
  commentId: Overload:g3.IBinaryVoxelGrid.Get
  name: Get
  nameWithType: IBinaryVoxelGrid.Get
  fullName: g3.IBinaryVoxelGrid.Get
- uid: g3.Vector3i
  commentId: T:g3.Vector3i
  parent: g3
  name: Vector3i
  nameWithType: Vector3i
  fullName: g3.Vector3i
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: g3.IBinaryVoxelGrid.NonZeros*
  commentId: Overload:g3.IBinaryVoxelGrid.NonZeros
  name: NonZeros
  nameWithType: IBinaryVoxelGrid.NonZeros
  fullName: g3.IBinaryVoxelGrid.NonZeros
- uid: System.Collections.Generic.IEnumerable{g3.Vector3i}
  commentId: T:System.Collections.Generic.IEnumerable{g3.Vector3i}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Vector3i>
  nameWithType: IEnumerable<Vector3i>
  fullName: System.Collections.Generic.IEnumerable<g3.Vector3i>
  nameWithType.vb: IEnumerable(Of Vector3i)
  fullName.vb: System.Collections.Generic.IEnumerable(Of g3.Vector3i)
  name.vb: IEnumerable(Of Vector3i)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: g3.Vector3i
    name: Vector3i
    nameWithType: Vector3i
    fullName: g3.Vector3i
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: g3.Vector3i
    name: Vector3i
    nameWithType: Vector3i
    fullName: g3.Vector3i
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic

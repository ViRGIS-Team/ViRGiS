### YamlMime:ManagedReference
items:
- uid: g3.IndexRangeEnumerator
  commentId: T:g3.IndexRangeEnumerator
  id: IndexRangeEnumerator
  parent: g3
  children:
  - g3.IndexRangeEnumerator.#ctor(System.Int32)
  - g3.IndexRangeEnumerator.#ctor(System.Int32,System.Int32)
  - g3.IndexRangeEnumerator.GetEnumerator
  langs:
  - csharp
  - vb
  name: IndexRangeEnumerator
  nameWithType: IndexRangeEnumerator
  fullName: g3.IndexRangeEnumerator
  type: Class
  source:
    remote:
      path: Assets/geometry3Sharp/core/Indexing.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IndexRangeEnumerator
    path: ../Assets/geometry3Sharp/core/Indexing.cs
    startLine: 10
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: 'public class IndexRangeEnumerator : IEnumerable<int>, IEnumerable'
    content.vb: >-
      Public Class IndexRangeEnumerator
          Implements IEnumerable(Of Integer), IEnumerable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: g3.IndexRangeEnumerator.#ctor(System.Int32)
  commentId: M:g3.IndexRangeEnumerator.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: g3.IndexRangeEnumerator
  langs:
  - csharp
  - vb
  name: IndexRangeEnumerator(Int32)
  nameWithType: IndexRangeEnumerator.IndexRangeEnumerator(Int32)
  fullName: g3.IndexRangeEnumerator.IndexRangeEnumerator(System.Int32)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/core/Indexing.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/core/Indexing.cs
    startLine: 14
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IndexRangeEnumerator(int count)
    parameters:
    - id: count
      type: System.Int32
    content.vb: Public Sub New(count As Integer)
  overload: g3.IndexRangeEnumerator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.IndexRangeEnumerator.#ctor(System.Int32,System.Int32)
  commentId: M:g3.IndexRangeEnumerator.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: g3.IndexRangeEnumerator
  langs:
  - csharp
  - vb
  name: IndexRangeEnumerator(Int32, Int32)
  nameWithType: IndexRangeEnumerator.IndexRangeEnumerator(Int32, Int32)
  fullName: g3.IndexRangeEnumerator.IndexRangeEnumerator(System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/core/Indexing.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/core/Indexing.cs
    startLine: 15
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IndexRangeEnumerator(int start, int count)
    parameters:
    - id: start
      type: System.Int32
    - id: count
      type: System.Int32
    content.vb: Public Sub New(start As Integer, count As Integer)
  overload: g3.IndexRangeEnumerator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.IndexRangeEnumerator.GetEnumerator
  commentId: M:g3.IndexRangeEnumerator.GetEnumerator
  id: GetEnumerator
  parent: g3.IndexRangeEnumerator
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: IndexRangeEnumerator.GetEnumerator()
  fullName: g3.IndexRangeEnumerator.GetEnumerator()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/Indexing.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GetEnumerator
    path: ../Assets/geometry3Sharp/core/Indexing.cs
    startLine: 16
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IEnumerator<int> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.Int32}
    content.vb: Public Function GetEnumerator As IEnumerator(Of Integer)
  overload: g3.IndexRangeEnumerator.GetEnumerator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: g3.IndexRangeEnumerator.#ctor*
  commentId: Overload:g3.IndexRangeEnumerator.#ctor
  name: IndexRangeEnumerator
  nameWithType: IndexRangeEnumerator.IndexRangeEnumerator
  fullName: g3.IndexRangeEnumerator.IndexRangeEnumerator
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: g3.IndexRangeEnumerator.GetEnumerator*
  commentId: Overload:g3.IndexRangeEnumerator.GetEnumerator
  name: GetEnumerator
  nameWithType: IndexRangeEnumerator.GetEnumerator
  fullName: g3.IndexRangeEnumerator.GetEnumerator
- uid: System.Collections.Generic.IEnumerator{System.Int32}
  commentId: T:System.Collections.Generic.IEnumerator{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<Int32>
  nameWithType: IEnumerator<Int32>
  fullName: System.Collections.Generic.IEnumerator<System.Int32>
  nameWithType.vb: IEnumerator(Of Int32)
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Int32)
  name.vb: IEnumerator(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic

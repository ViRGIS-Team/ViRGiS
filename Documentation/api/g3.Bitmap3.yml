### YamlMime:ManagedReference
items:
- uid: g3.Bitmap3
  commentId: T:g3.Bitmap3
  id: Bitmap3
  parent: g3
  children:
  - g3.Bitmap3.#ctor(g3.Vector3i)
  - g3.Bitmap3.Bits
  - g3.Bitmap3.CreateNewGridElement(System.Boolean)
  - g3.Bitmap3.Dimensions
  - g3.Bitmap3.Filter(System.Int32)
  - g3.Bitmap3.Get(g3.Vector3i)
  - g3.Bitmap3.GridBounds
  - g3.Bitmap3.Indices
  - g3.Bitmap3.Item(g3.Vector3i)
  - g3.Bitmap3.Item(System.Int32)
  - g3.Bitmap3.NonZeros
  - g3.Bitmap3.SafeSet(g3.Vector3i,System.Boolean)
  - g3.Bitmap3.Set(g3.Vector3i,System.Boolean)
  - g3.Bitmap3.ToIndex(System.Int32)
  - g3.Bitmap3.ToLinear(g3.Vector3i)
  langs:
  - csharp
  - vb
  name: Bitmap3
  nameWithType: Bitmap3
  fullName: g3.Bitmap3
  type: Class
  source:
    remote:
      path: Assets/geometry3Sharp/spatial/Bitmap3.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Bitmap3
    path: ../Assets/geometry3Sharp/spatial/Bitmap3.cs
    startLine: 16
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: 'public class Bitmap3 : IBinaryVoxelGrid, IGridElement3, IFixedGrid3'
    content.vb: >-
      Public Class Bitmap3
          Implements IBinaryVoxelGrid, IGridElement3, IFixedGrid3
  inheritance:
  - System.Object
  implements:
  - g3.IBinaryVoxelGrid
  - g3.IGridElement3
  - g3.IFixedGrid3
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: g3.Bitmap3.Bits
  commentId: F:g3.Bitmap3.Bits
  id: Bits
  parent: g3.Bitmap3
  langs:
  - csharp
  - vb
  name: Bits
  nameWithType: Bitmap3.Bits
  fullName: g3.Bitmap3.Bits
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/spatial/Bitmap3.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Bits
    path: ../Assets/geometry3Sharp/spatial/Bitmap3.cs
    startLine: 18
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public BitArray Bits
    return:
      type: System.Collections.BitArray
    content.vb: Public Bits As BitArray
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Bitmap3.Dimensions
  commentId: P:g3.Bitmap3.Dimensions
  id: Dimensions
  parent: g3.Bitmap3
  langs:
  - csharp
  - vb
  name: Dimensions
  nameWithType: Bitmap3.Dimensions
  fullName: g3.Bitmap3.Dimensions
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/spatial/Bitmap3.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Dimensions
    path: ../Assets/geometry3Sharp/spatial/Bitmap3.cs
    startLine: 21
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector3i Dimensions { get; }
    parameters: []
    return:
      type: g3.Vector3i
    content.vb: Public ReadOnly Property Dimensions As Vector3i
  overload: g3.Bitmap3.Dimensions*
  implements:
  - g3.IFixedGrid3.Dimensions
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Bitmap3.#ctor(g3.Vector3i)
  commentId: M:g3.Bitmap3.#ctor(g3.Vector3i)
  id: '#ctor(g3.Vector3i)'
  parent: g3.Bitmap3
  langs:
  - csharp
  - vb
  name: Bitmap3(Vector3i)
  nameWithType: Bitmap3.Bitmap3(Vector3i)
  fullName: g3.Bitmap3.Bitmap3(g3.Vector3i)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/spatial/Bitmap3.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/spatial/Bitmap3.cs
    startLine: 29
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Bitmap3(Vector3i dims)
    parameters:
    - id: dims
      type: g3.Vector3i
    content.vb: Public Sub New(dims As Vector3i)
  overload: g3.Bitmap3.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Bitmap3.GridBounds
  commentId: P:g3.Bitmap3.GridBounds
  id: GridBounds
  parent: g3.Bitmap3
  langs:
  - csharp
  - vb
  name: GridBounds
  nameWithType: Bitmap3.GridBounds
  fullName: g3.Bitmap3.GridBounds
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/spatial/Bitmap3.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GridBounds
    path: ../Assets/geometry3Sharp/spatial/Bitmap3.cs
    startLine: 40
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public AxisAlignedBox3i GridBounds { get; }
    parameters: []
    return:
      type: g3.AxisAlignedBox3i
    content.vb: Public ReadOnly Property GridBounds As AxisAlignedBox3i
  overload: g3.Bitmap3.GridBounds*
  implements:
  - g3.IBinaryVoxelGrid.GridBounds
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Bitmap3.Item(System.Int32)
  commentId: P:g3.Bitmap3.Item(System.Int32)
  id: Item(System.Int32)
  parent: g3.Bitmap3
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: Bitmap3.Item[Int32]
  fullName: g3.Bitmap3.Item[System.Int32]
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/spatial/Bitmap3.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: this[]
    path: ../Assets/geometry3Sharp/spatial/Bitmap3.cs
    startLine: 44
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool this[int i] { get; set; }
    parameters:
    - id: i
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Property Item(i As Integer) As Boolean
  overload: g3.Bitmap3.Item*
  nameWithType.vb: Bitmap3.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: g3.Bitmap3.Item(System.Int32)
  name.vb: Item(Int32)
- uid: g3.Bitmap3.Item(g3.Vector3i)
  commentId: P:g3.Bitmap3.Item(g3.Vector3i)
  id: Item(g3.Vector3i)
  parent: g3.Bitmap3
  langs:
  - csharp
  - vb
  name: Item[Vector3i]
  nameWithType: Bitmap3.Item[Vector3i]
  fullName: g3.Bitmap3.Item[g3.Vector3i]
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/spatial/Bitmap3.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: this[]
    path: ../Assets/geometry3Sharp/spatial/Bitmap3.cs
    startLine: 51
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool this[Vector3i idx] { get; set; }
    parameters:
    - id: idx
      type: g3.Vector3i
    return:
      type: System.Boolean
    content.vb: Public Property Item(idx As Vector3i) As Boolean
  overload: g3.Bitmap3.Item*
  nameWithType.vb: Bitmap3.Item(Vector3i)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: g3.Bitmap3.Item(g3.Vector3i)
  name.vb: Item(Vector3i)
- uid: g3.Bitmap3.Set(g3.Vector3i,System.Boolean)
  commentId: M:g3.Bitmap3.Set(g3.Vector3i,System.Boolean)
  id: Set(g3.Vector3i,System.Boolean)
  parent: g3.Bitmap3
  langs:
  - csharp
  - vb
  name: Set(Vector3i, Boolean)
  nameWithType: Bitmap3.Set(Vector3i, Boolean)
  fullName: g3.Bitmap3.Set(g3.Vector3i, System.Boolean)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/spatial/Bitmap3.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Set
    path: ../Assets/geometry3Sharp/spatial/Bitmap3.cs
    startLine: 63
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Set(Vector3i idx, bool val)
    parameters:
    - id: idx
      type: g3.Vector3i
    - id: val
      type: System.Boolean
    content.vb: Public Sub Set(idx As Vector3i, val As Boolean)
  overload: g3.Bitmap3.Set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Bitmap3.SafeSet(g3.Vector3i,System.Boolean)
  commentId: M:g3.Bitmap3.SafeSet(g3.Vector3i,System.Boolean)
  id: SafeSet(g3.Vector3i,System.Boolean)
  parent: g3.Bitmap3
  langs:
  - csharp
  - vb
  name: SafeSet(Vector3i, Boolean)
  nameWithType: Bitmap3.SafeSet(Vector3i, Boolean)
  fullName: g3.Bitmap3.SafeSet(g3.Vector3i, System.Boolean)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/spatial/Bitmap3.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: SafeSet
    path: ../Assets/geometry3Sharp/spatial/Bitmap3.cs
    startLine: 69
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void SafeSet(Vector3i idx, bool val)
    parameters:
    - id: idx
      type: g3.Vector3i
    - id: val
      type: System.Boolean
    content.vb: Public Sub SafeSet(idx As Vector3i, val As Boolean)
  overload: g3.Bitmap3.SafeSet*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Bitmap3.Get(g3.Vector3i)
  commentId: M:g3.Bitmap3.Get(g3.Vector3i)
  id: Get(g3.Vector3i)
  parent: g3.Bitmap3
  langs:
  - csharp
  - vb
  name: Get(Vector3i)
  nameWithType: Bitmap3.Get(Vector3i)
  fullName: g3.Bitmap3.Get(g3.Vector3i)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/spatial/Bitmap3.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Get
    path: ../Assets/geometry3Sharp/spatial/Bitmap3.cs
    startLine: 78
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool Get(Vector3i idx)
    parameters:
    - id: idx
      type: g3.Vector3i
    return:
      type: System.Boolean
    content.vb: Public Function Get(idx As Vector3i) As Boolean
  overload: g3.Bitmap3.Get*
  implements:
  - g3.IBinaryVoxelGrid.Get(g3.Vector3i)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Bitmap3.ToIndex(System.Int32)
  commentId: M:g3.Bitmap3.ToIndex(System.Int32)
  id: ToIndex(System.Int32)
  parent: g3.Bitmap3
  langs:
  - csharp
  - vb
  name: ToIndex(Int32)
  nameWithType: Bitmap3.ToIndex(Int32)
  fullName: g3.Bitmap3.ToIndex(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/spatial/Bitmap3.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ToIndex
    path: ../Assets/geometry3Sharp/spatial/Bitmap3.cs
    startLine: 85
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector3i ToIndex(int i)
    parameters:
    - id: i
      type: System.Int32
    return:
      type: g3.Vector3i
    content.vb: Public Function ToIndex(i As Integer) As Vector3i
  overload: g3.Bitmap3.ToIndex*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Bitmap3.ToLinear(g3.Vector3i)
  commentId: M:g3.Bitmap3.ToLinear(g3.Vector3i)
  id: ToLinear(g3.Vector3i)
  parent: g3.Bitmap3
  langs:
  - csharp
  - vb
  name: ToLinear(Vector3i)
  nameWithType: Bitmap3.ToLinear(Vector3i)
  fullName: g3.Bitmap3.ToLinear(g3.Vector3i)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/spatial/Bitmap3.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ToLinear
    path: ../Assets/geometry3Sharp/spatial/Bitmap3.cs
    startLine: 92
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int ToLinear(Vector3i idx)
    parameters:
    - id: idx
      type: g3.Vector3i
    return:
      type: System.Int32
    content.vb: Public Function ToLinear(idx As Vector3i) As Integer
  overload: g3.Bitmap3.ToLinear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Bitmap3.Indices
  commentId: M:g3.Bitmap3.Indices
  id: Indices
  parent: g3.Bitmap3
  langs:
  - csharp
  - vb
  name: Indices()
  nameWithType: Bitmap3.Indices()
  fullName: g3.Bitmap3.Indices()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/spatial/Bitmap3.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Indices
    path: ../Assets/geometry3Sharp/spatial/Bitmap3.cs
    startLine: 98
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IEnumerable<Vector3i> Indices()
    return:
      type: System.Collections.Generic.IEnumerable{g3.Vector3i}
    content.vb: Public Function Indices As IEnumerable(Of Vector3i)
  overload: g3.Bitmap3.Indices*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Bitmap3.NonZeros
  commentId: M:g3.Bitmap3.NonZeros
  id: NonZeros
  parent: g3.Bitmap3
  langs:
  - csharp
  - vb
  name: NonZeros()
  nameWithType: Bitmap3.NonZeros()
  fullName: g3.Bitmap3.NonZeros()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/spatial/Bitmap3.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: NonZeros
    path: ../Assets/geometry3Sharp/spatial/Bitmap3.cs
    startLine: 109
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IEnumerable<Vector3i> NonZeros()
    return:
      type: System.Collections.Generic.IEnumerable{g3.Vector3i}
    content.vb: Public Function NonZeros As IEnumerable(Of Vector3i)
  overload: g3.Bitmap3.NonZeros*
  implements:
  - g3.IBinaryVoxelGrid.NonZeros
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Bitmap3.Filter(System.Int32)
  commentId: M:g3.Bitmap3.Filter(System.Int32)
  id: Filter(System.Int32)
  parent: g3.Bitmap3
  langs:
  - csharp
  - vb
  name: Filter(Int32)
  nameWithType: Bitmap3.Filter(Int32)
  fullName: g3.Bitmap3.Filter(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/spatial/Bitmap3.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Filter
    path: ../Assets/geometry3Sharp/spatial/Bitmap3.cs
    startLine: 125
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Filter(int nMinNbrs)
    parameters:
    - id: nMinNbrs
      type: System.Int32
    content.vb: Public Sub Filter(nMinNbrs As Integer)
  overload: g3.Bitmap3.Filter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Bitmap3.CreateNewGridElement(System.Boolean)
  commentId: M:g3.Bitmap3.CreateNewGridElement(System.Boolean)
  id: CreateNewGridElement(System.Boolean)
  parent: g3.Bitmap3
  langs:
  - csharp
  - vb
  name: CreateNewGridElement(Boolean)
  nameWithType: Bitmap3.CreateNewGridElement(Boolean)
  fullName: g3.Bitmap3.CreateNewGridElement(System.Boolean)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/spatial/Bitmap3.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: CreateNewGridElement
    path: ../Assets/geometry3Sharp/spatial/Bitmap3.cs
    startLine: 150
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public virtual IGridElement3 CreateNewGridElement(bool bCopy)
    parameters:
    - id: bCopy
      type: System.Boolean
    return:
      type: g3.IGridElement3
    content.vb: Public Overridable Function CreateNewGridElement(bCopy As Boolean) As IGridElement3
  overload: g3.Bitmap3.CreateNewGridElement*
  implements:
  - g3.IGridElement3.CreateNewGridElement(System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: g3.IBinaryVoxelGrid
  commentId: T:g3.IBinaryVoxelGrid
  parent: g3
  name: IBinaryVoxelGrid
  nameWithType: IBinaryVoxelGrid
  fullName: g3.IBinaryVoxelGrid
- uid: g3.IGridElement3
  commentId: T:g3.IGridElement3
  parent: g3
  name: IGridElement3
  nameWithType: IGridElement3
  fullName: g3.IGridElement3
- uid: g3.IFixedGrid3
  commentId: T:g3.IFixedGrid3
  parent: g3
  name: IFixedGrid3
  nameWithType: IFixedGrid3
  fullName: g3.IFixedGrid3
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.BitArray
  commentId: T:System.Collections.BitArray
  parent: System.Collections
  isExternal: true
  name: BitArray
  nameWithType: BitArray
  fullName: System.Collections.BitArray
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: g3.Bitmap3.Dimensions*
  commentId: Overload:g3.Bitmap3.Dimensions
  name: Dimensions
  nameWithType: Bitmap3.Dimensions
  fullName: g3.Bitmap3.Dimensions
- uid: g3.IFixedGrid3.Dimensions
  commentId: P:g3.IFixedGrid3.Dimensions
  parent: g3.IFixedGrid3
  name: Dimensions
  nameWithType: IFixedGrid3.Dimensions
  fullName: g3.IFixedGrid3.Dimensions
- uid: g3.Vector3i
  commentId: T:g3.Vector3i
  parent: g3
  name: Vector3i
  nameWithType: Vector3i
  fullName: g3.Vector3i
- uid: g3.Bitmap3.#ctor*
  commentId: Overload:g3.Bitmap3.#ctor
  name: Bitmap3
  nameWithType: Bitmap3.Bitmap3
  fullName: g3.Bitmap3.Bitmap3
- uid: g3.Bitmap3.GridBounds*
  commentId: Overload:g3.Bitmap3.GridBounds
  name: GridBounds
  nameWithType: Bitmap3.GridBounds
  fullName: g3.Bitmap3.GridBounds
- uid: g3.IBinaryVoxelGrid.GridBounds
  commentId: P:g3.IBinaryVoxelGrid.GridBounds
  parent: g3.IBinaryVoxelGrid
  name: GridBounds
  nameWithType: IBinaryVoxelGrid.GridBounds
  fullName: g3.IBinaryVoxelGrid.GridBounds
- uid: g3.AxisAlignedBox3i
  commentId: T:g3.AxisAlignedBox3i
  parent: g3
  name: AxisAlignedBox3i
  nameWithType: AxisAlignedBox3i
  fullName: g3.AxisAlignedBox3i
- uid: g3.Bitmap3.Item*
  commentId: Overload:g3.Bitmap3.Item
  name: Item
  nameWithType: Bitmap3.Item
  fullName: g3.Bitmap3.Item
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: g3.Bitmap3.Set*
  commentId: Overload:g3.Bitmap3.Set
  name: Set
  nameWithType: Bitmap3.Set
  fullName: g3.Bitmap3.Set
- uid: g3.Bitmap3.SafeSet*
  commentId: Overload:g3.Bitmap3.SafeSet
  name: SafeSet
  nameWithType: Bitmap3.SafeSet
  fullName: g3.Bitmap3.SafeSet
- uid: g3.Bitmap3.Get*
  commentId: Overload:g3.Bitmap3.Get
  name: Get
  nameWithType: Bitmap3.Get
  fullName: g3.Bitmap3.Get
- uid: g3.IBinaryVoxelGrid.Get(g3.Vector3i)
  commentId: M:g3.IBinaryVoxelGrid.Get(g3.Vector3i)
  parent: g3.IBinaryVoxelGrid
  name: Get(Vector3i)
  nameWithType: IBinaryVoxelGrid.Get(Vector3i)
  fullName: g3.IBinaryVoxelGrid.Get(g3.Vector3i)
  spec.csharp:
  - uid: g3.IBinaryVoxelGrid.Get(g3.Vector3i)
    name: Get
    nameWithType: IBinaryVoxelGrid.Get
    fullName: g3.IBinaryVoxelGrid.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: g3.Vector3i
    name: Vector3i
    nameWithType: Vector3i
    fullName: g3.Vector3i
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: g3.IBinaryVoxelGrid.Get(g3.Vector3i)
    name: Get
    nameWithType: IBinaryVoxelGrid.Get
    fullName: g3.IBinaryVoxelGrid.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: g3.Vector3i
    name: Vector3i
    nameWithType: Vector3i
    fullName: g3.Vector3i
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.Bitmap3.ToIndex*
  commentId: Overload:g3.Bitmap3.ToIndex
  name: ToIndex
  nameWithType: Bitmap3.ToIndex
  fullName: g3.Bitmap3.ToIndex
- uid: g3.Bitmap3.ToLinear*
  commentId: Overload:g3.Bitmap3.ToLinear
  name: ToLinear
  nameWithType: Bitmap3.ToLinear
  fullName: g3.Bitmap3.ToLinear
- uid: g3.Bitmap3.Indices*
  commentId: Overload:g3.Bitmap3.Indices
  name: Indices
  nameWithType: Bitmap3.Indices
  fullName: g3.Bitmap3.Indices
- uid: System.Collections.Generic.IEnumerable{g3.Vector3i}
  commentId: T:System.Collections.Generic.IEnumerable{g3.Vector3i}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Vector3i>
  nameWithType: IEnumerable<Vector3i>
  fullName: System.Collections.Generic.IEnumerable<g3.Vector3i>
  nameWithType.vb: IEnumerable(Of Vector3i)
  fullName.vb: System.Collections.Generic.IEnumerable(Of g3.Vector3i)
  name.vb: IEnumerable(Of Vector3i)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: g3.Vector3i
    name: Vector3i
    nameWithType: Vector3i
    fullName: g3.Vector3i
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: g3.Vector3i
    name: Vector3i
    nameWithType: Vector3i
    fullName: g3.Vector3i
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: g3.Bitmap3.NonZeros*
  commentId: Overload:g3.Bitmap3.NonZeros
  name: NonZeros
  nameWithType: Bitmap3.NonZeros
  fullName: g3.Bitmap3.NonZeros
- uid: g3.IBinaryVoxelGrid.NonZeros
  commentId: M:g3.IBinaryVoxelGrid.NonZeros
  parent: g3.IBinaryVoxelGrid
  name: NonZeros()
  nameWithType: IBinaryVoxelGrid.NonZeros()
  fullName: g3.IBinaryVoxelGrid.NonZeros()
  spec.csharp:
  - uid: g3.IBinaryVoxelGrid.NonZeros
    name: NonZeros
    nameWithType: IBinaryVoxelGrid.NonZeros
    fullName: g3.IBinaryVoxelGrid.NonZeros
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: g3.IBinaryVoxelGrid.NonZeros
    name: NonZeros
    nameWithType: IBinaryVoxelGrid.NonZeros
    fullName: g3.IBinaryVoxelGrid.NonZeros
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.Bitmap3.Filter*
  commentId: Overload:g3.Bitmap3.Filter
  name: Filter
  nameWithType: Bitmap3.Filter
  fullName: g3.Bitmap3.Filter
- uid: g3.Bitmap3.CreateNewGridElement*
  commentId: Overload:g3.Bitmap3.CreateNewGridElement
  name: CreateNewGridElement
  nameWithType: Bitmap3.CreateNewGridElement
  fullName: g3.Bitmap3.CreateNewGridElement
- uid: g3.IGridElement3.CreateNewGridElement(System.Boolean)
  commentId: M:g3.IGridElement3.CreateNewGridElement(System.Boolean)
  parent: g3.IGridElement3
  isExternal: true
  name: CreateNewGridElement(Boolean)
  nameWithType: IGridElement3.CreateNewGridElement(Boolean)
  fullName: g3.IGridElement3.CreateNewGridElement(System.Boolean)
  spec.csharp:
  - uid: g3.IGridElement3.CreateNewGridElement(System.Boolean)
    name: CreateNewGridElement
    nameWithType: IGridElement3.CreateNewGridElement
    fullName: g3.IGridElement3.CreateNewGridElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: g3.IGridElement3.CreateNewGridElement(System.Boolean)
    name: CreateNewGridElement
    nameWithType: IGridElement3.CreateNewGridElement
    fullName: g3.IGridElement3.CreateNewGridElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )

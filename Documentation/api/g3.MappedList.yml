### YamlMime:ManagedReference
items:
- uid: g3.MappedList
  commentId: T:g3.MappedList
  id: MappedList
  parent: g3
  children:
  - g3.MappedList.#ctor(System.Collections.Generic.IList{System.Int32},System.Int32[])
  - g3.MappedList.Add(System.Int32)
  - g3.MappedList.BaseList
  - g3.MappedList.Clear
  - g3.MappedList.Contains(System.Int32)
  - g3.MappedList.CopyTo(System.Int32[],System.Int32)
  - g3.MappedList.Count
  - g3.MappedList.GetEnumerator
  - g3.MappedList.IndexOf(System.Int32)
  - g3.MappedList.Insert(System.Int32,System.Int32)
  - g3.MappedList.IsReadOnly
  - g3.MappedList.Item(System.Int32)
  - g3.MappedList.MapF
  - g3.MappedList.Remove(System.Int32)
  - g3.MappedList.RemoveAt(System.Int32)
  langs:
  - csharp
  - vb
  name: MappedList
  nameWithType: MappedList
  fullName: g3.MappedList
  type: Class
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: MappedList
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 54
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nIList wrapper that remaps values via a Func (eg for index maps)\n"
  example: []
  syntax:
    content: 'public class MappedList : IList<int>, ICollection<int>, IEnumerable<int>, IEnumerable'
    content.vb: >-
      Public Class MappedList
          Implements IList(Of Integer), ICollection(Of Integer), IEnumerable(Of Integer), IEnumerable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: g3.MappedList.BaseList
  commentId: F:g3.MappedList.BaseList
  id: BaseList
  parent: g3.MappedList
  langs:
  - csharp
  - vb
  name: BaseList
  nameWithType: MappedList.BaseList
  fullName: g3.MappedList.BaseList
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: BaseList
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 56
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IList<int> BaseList
    return:
      type: System.Collections.Generic.IList{System.Int32}
    content.vb: Public BaseList As IList(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.MappedList.MapF
  commentId: F:g3.MappedList.MapF
  id: MapF
  parent: g3.MappedList
  langs:
  - csharp
  - vb
  name: MapF
  nameWithType: MappedList.MapF
  fullName: g3.MappedList.MapF
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: MapF
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 57
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Func<int, int> MapF
    return:
      type: System.Func{System.Int32,System.Int32}
    content.vb: Public MapF As Func(Of Integer, Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.MappedList.#ctor(System.Collections.Generic.IList{System.Int32},System.Int32[])
  commentId: M:g3.MappedList.#ctor(System.Collections.Generic.IList{System.Int32},System.Int32[])
  id: '#ctor(System.Collections.Generic.IList{System.Int32},System.Int32[])'
  parent: g3.MappedList
  langs:
  - csharp
  - vb
  name: MappedList(IList<Int32>, Int32[])
  nameWithType: MappedList.MappedList(IList<Int32>, Int32[])
  fullName: g3.MappedList.MappedList(System.Collections.Generic.IList<System.Int32>, System.Int32[])
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 59
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public MappedList(IList<int> list, int[] map)
    parameters:
    - id: list
      type: System.Collections.Generic.IList{System.Int32}
    - id: map
      type: System.Int32[]
    content.vb: Public Sub New(list As IList(Of Integer), map As Integer())
  overload: g3.MappedList.#ctor*
  nameWithType.vb: MappedList.MappedList(IList(Of Int32), Int32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.MappedList.MappedList(System.Collections.Generic.IList(Of System.Int32), System.Int32())
  name.vb: MappedList(IList(Of Int32), Int32())
- uid: g3.MappedList.Item(System.Int32)
  commentId: P:g3.MappedList.Item(System.Int32)
  id: Item(System.Int32)
  parent: g3.MappedList
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: MappedList.Item[Int32]
  fullName: g3.MappedList.Item[System.Int32]
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: this[]
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 65
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Property Item(index As Integer) As Integer
  overload: g3.MappedList.Item*
  nameWithType.vb: MappedList.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: g3.MappedList.Item(System.Int32)
  name.vb: Item(Int32)
- uid: g3.MappedList.Count
  commentId: P:g3.MappedList.Count
  id: Count
  parent: g3.MappedList
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: MappedList.Count
  fullName: g3.MappedList.Count
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Count
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 69
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: g3.MappedList.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.MappedList.IsReadOnly
  commentId: P:g3.MappedList.IsReadOnly
  id: IsReadOnly
  parent: g3.MappedList
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: MappedList.IsReadOnly
  fullName: g3.MappedList.IsReadOnly
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IsReadOnly
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 70
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: g3.MappedList.IsReadOnly*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.MappedList.Add(System.Int32)
  commentId: M:g3.MappedList.Add(System.Int32)
  id: Add(System.Int32)
  parent: g3.MappedList
  langs:
  - csharp
  - vb
  name: Add(Int32)
  nameWithType: MappedList.Add(Int32)
  fullName: g3.MappedList.Add(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Add
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 72
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Add(int item)
    parameters:
    - id: item
      type: System.Int32
    content.vb: Public Sub Add(item As Integer)
  overload: g3.MappedList.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.MappedList.Clear
  commentId: M:g3.MappedList.Clear
  id: Clear
  parent: g3.MappedList
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: MappedList.Clear()
  fullName: g3.MappedList.Clear()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Clear
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 73
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: g3.MappedList.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.MappedList.Insert(System.Int32,System.Int32)
  commentId: M:g3.MappedList.Insert(System.Int32,System.Int32)
  id: Insert(System.Int32,System.Int32)
  parent: g3.MappedList
  langs:
  - csharp
  - vb
  name: Insert(Int32, Int32)
  nameWithType: MappedList.Insert(Int32, Int32)
  fullName: g3.MappedList.Insert(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Insert
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 74
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Insert(int index, int item)
    parameters:
    - id: index
      type: System.Int32
    - id: item
      type: System.Int32
    content.vb: Public Sub Insert(index As Integer, item As Integer)
  overload: g3.MappedList.Insert*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.MappedList.Remove(System.Int32)
  commentId: M:g3.MappedList.Remove(System.Int32)
  id: Remove(System.Int32)
  parent: g3.MappedList
  langs:
  - csharp
  - vb
  name: Remove(Int32)
  nameWithType: MappedList.Remove(Int32)
  fullName: g3.MappedList.Remove(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Remove
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 75
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool Remove(int item)
    parameters:
    - id: item
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function Remove(item As Integer) As Boolean
  overload: g3.MappedList.Remove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.MappedList.RemoveAt(System.Int32)
  commentId: M:g3.MappedList.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: g3.MappedList
  langs:
  - csharp
  - vb
  name: RemoveAt(Int32)
  nameWithType: MappedList.RemoveAt(Int32)
  fullName: g3.MappedList.RemoveAt(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: RemoveAt
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 76
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void RemoveAt(int index)
    parameters:
    - id: index
      type: System.Int32
    content.vb: Public Sub RemoveAt(index As Integer)
  overload: g3.MappedList.RemoveAt*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.MappedList.Contains(System.Int32)
  commentId: M:g3.MappedList.Contains(System.Int32)
  id: Contains(System.Int32)
  parent: g3.MappedList
  langs:
  - csharp
  - vb
  name: Contains(Int32)
  nameWithType: MappedList.Contains(Int32)
  fullName: g3.MappedList.Contains(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Contains
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 79
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool Contains(int item)
    parameters:
    - id: item
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function Contains(item As Integer) As Boolean
  overload: g3.MappedList.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.MappedList.IndexOf(System.Int32)
  commentId: M:g3.MappedList.IndexOf(System.Int32)
  id: IndexOf(System.Int32)
  parent: g3.MappedList
  langs:
  - csharp
  - vb
  name: IndexOf(Int32)
  nameWithType: MappedList.IndexOf(Int32)
  fullName: g3.MappedList.IndexOf(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IndexOf
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 80
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int IndexOf(int item)
    parameters:
    - id: item
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Function IndexOf(item As Integer) As Integer
  overload: g3.MappedList.IndexOf*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.MappedList.CopyTo(System.Int32[],System.Int32)
  commentId: M:g3.MappedList.CopyTo(System.Int32[],System.Int32)
  id: CopyTo(System.Int32[],System.Int32)
  parent: g3.MappedList
  langs:
  - csharp
  - vb
  name: CopyTo(Int32[], Int32)
  nameWithType: MappedList.CopyTo(Int32[], Int32)
  fullName: g3.MappedList.CopyTo(System.Int32[], System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: CopyTo
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 81
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void CopyTo(int[] array, int arrayIndex)
    parameters:
    - id: array
      type: System.Int32[]
    - id: arrayIndex
      type: System.Int32
    content.vb: Public Sub CopyTo(array As Integer(), arrayIndex As Integer)
  overload: g3.MappedList.CopyTo*
  nameWithType.vb: MappedList.CopyTo(Int32(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.MappedList.CopyTo(System.Int32(), System.Int32)
  name.vb: CopyTo(Int32(), Int32)
- uid: g3.MappedList.GetEnumerator
  commentId: M:g3.MappedList.GetEnumerator
  id: GetEnumerator
  parent: g3.MappedList
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: MappedList.GetEnumerator()
  fullName: g3.MappedList.GetEnumerator()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GetEnumerator
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 83
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IEnumerator<int> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.Int32}
    content.vb: Public Function GetEnumerator As IEnumerator(Of Integer)
  overload: g3.MappedList.GetEnumerator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IList{System.Int32}
  commentId: T:System.Collections.Generic.IList{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Int32>
  nameWithType: IList<Int32>
  fullName: System.Collections.Generic.IList<System.Int32>
  nameWithType.vb: IList(Of Int32)
  fullName.vb: System.Collections.Generic.IList(Of System.Int32)
  name.vb: IList(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Func{System.Int32,System.Int32}
  commentId: T:System.Func{System.Int32,System.Int32}
  parent: System
  definition: System.Func`2
  name: Func<Int32, Int32>
  nameWithType: Func<Int32, Int32>
  fullName: System.Func<System.Int32, System.Int32>
  nameWithType.vb: Func(Of Int32, Int32)
  fullName.vb: System.Func(Of System.Int32, System.Int32)
  name.vb: Func(Of Int32, Int32)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.MappedList.#ctor*
  commentId: Overload:g3.MappedList.#ctor
  name: MappedList
  nameWithType: MappedList.MappedList
  fullName: g3.MappedList.MappedList
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: g3.MappedList.Item*
  commentId: Overload:g3.MappedList.Item
  name: Item
  nameWithType: MappedList.Item
  fullName: g3.MappedList.Item
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: g3.MappedList.Count*
  commentId: Overload:g3.MappedList.Count
  name: Count
  nameWithType: MappedList.Count
  fullName: g3.MappedList.Count
- uid: g3.MappedList.IsReadOnly*
  commentId: Overload:g3.MappedList.IsReadOnly
  name: IsReadOnly
  nameWithType: MappedList.IsReadOnly
  fullName: g3.MappedList.IsReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: g3.MappedList.Add*
  commentId: Overload:g3.MappedList.Add
  name: Add
  nameWithType: MappedList.Add
  fullName: g3.MappedList.Add
- uid: g3.MappedList.Clear*
  commentId: Overload:g3.MappedList.Clear
  name: Clear
  nameWithType: MappedList.Clear
  fullName: g3.MappedList.Clear
- uid: g3.MappedList.Insert*
  commentId: Overload:g3.MappedList.Insert
  name: Insert
  nameWithType: MappedList.Insert
  fullName: g3.MappedList.Insert
- uid: g3.MappedList.Remove*
  commentId: Overload:g3.MappedList.Remove
  name: Remove
  nameWithType: MappedList.Remove
  fullName: g3.MappedList.Remove
- uid: g3.MappedList.RemoveAt*
  commentId: Overload:g3.MappedList.RemoveAt
  name: RemoveAt
  nameWithType: MappedList.RemoveAt
  fullName: g3.MappedList.RemoveAt
- uid: g3.MappedList.Contains*
  commentId: Overload:g3.MappedList.Contains
  name: Contains
  nameWithType: MappedList.Contains
  fullName: g3.MappedList.Contains
- uid: g3.MappedList.IndexOf*
  commentId: Overload:g3.MappedList.IndexOf
  name: IndexOf
  nameWithType: MappedList.IndexOf
  fullName: g3.MappedList.IndexOf
- uid: g3.MappedList.CopyTo*
  commentId: Overload:g3.MappedList.CopyTo
  name: CopyTo
  nameWithType: MappedList.CopyTo
  fullName: g3.MappedList.CopyTo
- uid: g3.MappedList.GetEnumerator*
  commentId: Overload:g3.MappedList.GetEnumerator
  name: GetEnumerator
  nameWithType: MappedList.GetEnumerator
  fullName: g3.MappedList.GetEnumerator
- uid: System.Collections.Generic.IEnumerator{System.Int32}
  commentId: T:System.Collections.Generic.IEnumerator{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<Int32>
  nameWithType: IEnumerator<Int32>
  fullName: System.Collections.Generic.IEnumerator<System.Int32>
  nameWithType.vb: IEnumerator(Of Int32)
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Int32)
  name.vb: IEnumerator(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )

### YamlMime:ManagedReference
items:
- uid: g3.Integrate1d
  commentId: T:g3.Integrate1d
  id: Integrate1d
  parent: g3
  children:
  - g3.Integrate1d.GaussianQuadrature(System.Double,System.Double,System.Func{System.Double,System.Object,System.Double},System.Object)
  - g3.Integrate1d.RombergIntegral(System.Int32,System.Double,System.Double,System.Func{System.Double,System.Object,System.Double},System.Object)
  - g3.Integrate1d.TrapezoidRule(System.Int32,System.Double,System.Double,System.Func{System.Double,System.Object,System.Double},System.Object)
  langs:
  - csharp
  - vb
  name: Integrate1d
  nameWithType: Integrate1d
  fullName: g3.Integrate1d
  type: Class
  source:
    remote:
      path: Assets/geometry3Sharp/math/Integrate1d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Integrate1d
    path: ../Assets/geometry3Sharp/math/Integrate1d.cs
    startLine: 5
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static class Integrate1d
    content.vb: Public Module Integrate1d
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: g3.Integrate1d.RombergIntegral(System.Int32,System.Double,System.Double,System.Func{System.Double,System.Object,System.Double},System.Object)
  commentId: M:g3.Integrate1d.RombergIntegral(System.Int32,System.Double,System.Double,System.Func{System.Double,System.Object,System.Double},System.Object)
  id: RombergIntegral(System.Int32,System.Double,System.Double,System.Func{System.Double,System.Object,System.Double},System.Object)
  parent: g3.Integrate1d
  langs:
  - csharp
  - vb
  name: RombergIntegral(Int32, Double, Double, Func<Double, Object, Double>, Object)
  nameWithType: Integrate1d.RombergIntegral(Int32, Double, Double, Func<Double, Object, Double>, Object)
  fullName: g3.Integrate1d.RombergIntegral(System.Int32, System.Double, System.Double, System.Func<System.Double, System.Object, System.Double>, System.Object)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Integrate1d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: RombergIntegral
    path: ../Assets/geometry3Sharp/math/Integrate1d.cs
    startLine: 7
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double RombergIntegral(int order, double a, double b, Func<double, object, double> function, object userData)
    parameters:
    - id: order
      type: System.Int32
    - id: a
      type: System.Double
    - id: b
      type: System.Double
    - id: function
      type: System.Func{System.Double,System.Object,System.Double}
    - id: userData
      type: System.Object
    return:
      type: System.Double
    content.vb: Public Shared Function RombergIntegral(order As Integer, a As Double, b As Double, function As Func(Of Double, Object, Double), userData As Object) As Double
  overload: g3.Integrate1d.RombergIntegral*
  nameWithType.vb: Integrate1d.RombergIntegral(Int32, Double, Double, Func(Of Double, Object, Double), Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.Integrate1d.RombergIntegral(System.Int32, System.Double, System.Double, System.Func(Of System.Double, System.Object, System.Double), System.Object)
  name.vb: RombergIntegral(Int32, Double, Double, Func(Of Double, Object, Double), Object)
- uid: g3.Integrate1d.GaussianQuadrature(System.Double,System.Double,System.Func{System.Double,System.Object,System.Double},System.Object)
  commentId: M:g3.Integrate1d.GaussianQuadrature(System.Double,System.Double,System.Func{System.Double,System.Object,System.Double},System.Object)
  id: GaussianQuadrature(System.Double,System.Double,System.Func{System.Double,System.Object,System.Double},System.Object)
  parent: g3.Integrate1d
  langs:
  - csharp
  - vb
  name: GaussianQuadrature(Double, Double, Func<Double, Object, Double>, Object)
  nameWithType: Integrate1d.GaussianQuadrature(Double, Double, Func<Double, Object, Double>, Object)
  fullName: g3.Integrate1d.GaussianQuadrature(System.Double, System.Double, System.Func<System.Double, System.Object, System.Double>, System.Object)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Integrate1d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GaussianQuadrature
    path: ../Assets/geometry3Sharp/math/Integrate1d.cs
    startLine: 43
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double GaussianQuadrature(double a, double b, Func<double, object, double> function, object userData)
    parameters:
    - id: a
      type: System.Double
    - id: b
      type: System.Double
    - id: function
      type: System.Func{System.Double,System.Object,System.Double}
    - id: userData
      type: System.Object
    return:
      type: System.Double
    content.vb: Public Shared Function GaussianQuadrature(a As Double, b As Double, function As Func(Of Double, Object, Double), userData As Object) As Double
  overload: g3.Integrate1d.GaussianQuadrature*
  nameWithType.vb: Integrate1d.GaussianQuadrature(Double, Double, Func(Of Double, Object, Double), Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.Integrate1d.GaussianQuadrature(System.Double, System.Double, System.Func(Of System.Double, System.Object, System.Double), System.Object)
  name.vb: GaussianQuadrature(Double, Double, Func(Of Double, Object, Double), Object)
- uid: g3.Integrate1d.TrapezoidRule(System.Int32,System.Double,System.Double,System.Func{System.Double,System.Object,System.Double},System.Object)
  commentId: M:g3.Integrate1d.TrapezoidRule(System.Int32,System.Double,System.Double,System.Func{System.Double,System.Object,System.Double},System.Object)
  id: TrapezoidRule(System.Int32,System.Double,System.Double,System.Func{System.Double,System.Object,System.Double},System.Object)
  parent: g3.Integrate1d
  langs:
  - csharp
  - vb
  name: TrapezoidRule(Int32, Double, Double, Func<Double, Object, Double>, Object)
  nameWithType: Integrate1d.TrapezoidRule(Int32, Double, Double, Func<Double, Object, Double>, Object)
  fullName: g3.Integrate1d.TrapezoidRule(System.Int32, System.Double, System.Double, System.Func<System.Double, System.Object, System.Double>, System.Object)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Integrate1d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: TrapezoidRule
    path: ../Assets/geometry3Sharp/math/Integrate1d.cs
    startLine: 81
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static double TrapezoidRule(int numSamples, double a, double b, Func<double, object, double> function, object userData)
    parameters:
    - id: numSamples
      type: System.Int32
    - id: a
      type: System.Double
    - id: b
      type: System.Double
    - id: function
      type: System.Func{System.Double,System.Object,System.Double}
    - id: userData
      type: System.Object
    return:
      type: System.Double
    content.vb: Public Shared Function TrapezoidRule(numSamples As Integer, a As Double, b As Double, function As Func(Of Double, Object, Double), userData As Object) As Double
  overload: g3.Integrate1d.TrapezoidRule*
  nameWithType.vb: Integrate1d.TrapezoidRule(Int32, Double, Double, Func(Of Double, Object, Double), Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.Integrate1d.TrapezoidRule(System.Int32, System.Double, System.Double, System.Func(Of System.Double, System.Object, System.Double), System.Object)
  name.vb: TrapezoidRule(Int32, Double, Double, Func(Of Double, Object, Double), Object)
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: g3.Integrate1d.RombergIntegral*
  commentId: Overload:g3.Integrate1d.RombergIntegral
  name: RombergIntegral
  nameWithType: Integrate1d.RombergIntegral
  fullName: g3.Integrate1d.RombergIntegral
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Func{System.Double,System.Object,System.Double}
  commentId: T:System.Func{System.Double,System.Object,System.Double}
  parent: System
  definition: System.Func`3
  name: Func<Double, Object, Double>
  nameWithType: Func<Double, Object, Double>
  fullName: System.Func<System.Double, System.Object, System.Double>
  nameWithType.vb: Func(Of Double, Object, Double)
  fullName.vb: System.Func(Of System.Double, System.Object, System.Double)
  name.vb: Func(Of Double, Object, Double)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.Integrate1d.GaussianQuadrature*
  commentId: Overload:g3.Integrate1d.GaussianQuadrature
  name: GaussianQuadrature
  nameWithType: Integrate1d.GaussianQuadrature
  fullName: g3.Integrate1d.GaussianQuadrature
- uid: g3.Integrate1d.TrapezoidRule*
  commentId: Overload:g3.Integrate1d.TrapezoidRule
  name: TrapezoidRule
  nameWithType: Integrate1d.TrapezoidRule
  fullName: g3.Integrate1d.TrapezoidRule

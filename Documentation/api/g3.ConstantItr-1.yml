### YamlMime:ManagedReference
items:
- uid: g3.ConstantItr`1
  commentId: T:g3.ConstantItr`1
  id: ConstantItr`1
  parent: g3
  children:
  - g3.ConstantItr`1.#ctor(System.Int32,`0)
  - g3.ConstantItr`1.ConstantValue
  - g3.ConstantItr`1.GetEnumerator
  - g3.ConstantItr`1.N
  langs:
  - csharp
  - vb
  name: ConstantItr<T>
  nameWithType: ConstantItr<T>
  fullName: g3.ConstantItr<T>
  type: Class
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ConstantItr
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 14
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nIterator that just returns a constant value N times\n"
  example: []
  syntax:
    content: 'public class ConstantItr<T> : IEnumerable<T>, IEnumerable'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class ConstantItr(Of T)
          Implements IEnumerable(Of T), IEnumerable
  inheritance:
  - System.Object
  nameWithType.vb: ConstantItr(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: g3.ConstantItr(Of T)
  name.vb: ConstantItr(Of T)
- uid: g3.ConstantItr`1.ConstantValue
  commentId: F:g3.ConstantItr`1.ConstantValue
  id: ConstantValue
  parent: g3.ConstantItr`1
  langs:
  - csharp
  - vb
  name: ConstantValue
  nameWithType: ConstantItr<T>.ConstantValue
  fullName: g3.ConstantItr<T>.ConstantValue
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ConstantValue
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 16
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public T ConstantValue
    return:
      type: '{T}'
    content.vb: Public ConstantValue As T
  nameWithType.vb: ConstantItr(Of T).ConstantValue
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.ConstantItr(Of T).ConstantValue
- uid: g3.ConstantItr`1.N
  commentId: F:g3.ConstantItr`1.N
  id: N
  parent: g3.ConstantItr`1
  langs:
  - csharp
  - vb
  name: N
  nameWithType: ConstantItr<T>.N
  fullName: g3.ConstantItr<T>.N
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: N
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 17
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int N
    return:
      type: System.Int32
    content.vb: Public N As Integer
  nameWithType.vb: ConstantItr(Of T).N
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.ConstantItr(Of T).N
- uid: g3.ConstantItr`1.#ctor(System.Int32,`0)
  commentId: M:g3.ConstantItr`1.#ctor(System.Int32,`0)
  id: '#ctor(System.Int32,`0)'
  parent: g3.ConstantItr`1
  langs:
  - csharp
  - vb
  name: ConstantItr(Int32, T)
  nameWithType: ConstantItr<T>.ConstantItr(Int32, T)
  fullName: g3.ConstantItr<T>.ConstantItr(System.Int32, T)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 19
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public ConstantItr(int count, T constant)
    parameters:
    - id: count
      type: System.Int32
    - id: constant
      type: '{T}'
    content.vb: Public Sub New(count As Integer, constant As T)
  overload: g3.ConstantItr`1.#ctor*
  nameWithType.vb: ConstantItr(Of T).ConstantItr(Int32, T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.ConstantItr(Of T).ConstantItr(System.Int32, T)
- uid: g3.ConstantItr`1.GetEnumerator
  commentId: M:g3.ConstantItr`1.GetEnumerator
  id: GetEnumerator
  parent: g3.ConstantItr`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ConstantItr<T>.GetEnumerator()
  fullName: g3.ConstantItr<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/g3Iterators.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GetEnumerator
    path: ../Assets/geometry3Sharp/core/g3Iterators.cs
    startLine: 22
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IEnumerator<T> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
    content.vb: Public Function GetEnumerator As IEnumerator(Of T)
  overload: g3.ConstantItr`1.GetEnumerator*
  nameWithType.vb: ConstantItr(Of T).GetEnumerator()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.ConstantItr(Of T).GetEnumerator()
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: g3.ConstantItr`1.#ctor*
  commentId: Overload:g3.ConstantItr`1.#ctor
  name: ConstantItr
  nameWithType: ConstantItr<T>.ConstantItr
  fullName: g3.ConstantItr<T>.ConstantItr
  nameWithType.vb: ConstantItr(Of T).ConstantItr
  fullName.vb: g3.ConstantItr(Of T).ConstantItr
- uid: g3.ConstantItr`1.GetEnumerator*
  commentId: Overload:g3.ConstantItr`1.GetEnumerator
  name: GetEnumerator
  nameWithType: ConstantItr<T>.GetEnumerator
  fullName: g3.ConstantItr<T>.GetEnumerator
  nameWithType.vb: ConstantItr(Of T).GetEnumerator
  fullName.vb: g3.ConstantItr(Of T).GetEnumerator
- uid: System.Collections.Generic.IEnumerator{{T}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic

### YamlMime:ManagedReference
items:
- uid: g3.TilingUtil
  commentId: T:g3.TilingUtil
  id: TilingUtil
  parent: g3
  children:
  - g3.TilingUtil.BoundedCircleTiling2(g3.AxisAlignedBox2d,g3.AxisAlignedBox2d,System.Double)
  - g3.TilingUtil.BoundedRegularTiling2(g3.AxisAlignedBox2d,g3.AxisAlignedBox2d,System.Double)
  langs:
  - csharp
  - vb
  name: TilingUtil
  nameWithType: TilingUtil
  fullName: g3.TilingUtil
  type: Class
  source:
    remote:
      path: Assets/geometry3Sharp/containment/TilingUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: TilingUtil
    path: ../Assets/geometry3Sharp/containment/TilingUtil.cs
    startLine: 5
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static class TilingUtil
    content.vb: Public Module TilingUtil
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: g3.TilingUtil.BoundedRegularTiling2(g3.AxisAlignedBox2d,g3.AxisAlignedBox2d,System.Double)
  commentId: M:g3.TilingUtil.BoundedRegularTiling2(g3.AxisAlignedBox2d,g3.AxisAlignedBox2d,System.Double)
  id: BoundedRegularTiling2(g3.AxisAlignedBox2d,g3.AxisAlignedBox2d,System.Double)
  parent: g3.TilingUtil
  langs:
  - csharp
  - vb
  name: BoundedRegularTiling2(AxisAlignedBox2d, AxisAlignedBox2d, Double)
  nameWithType: TilingUtil.BoundedRegularTiling2(AxisAlignedBox2d, AxisAlignedBox2d, Double)
  fullName: g3.TilingUtil.BoundedRegularTiling2(g3.AxisAlignedBox2d, g3.AxisAlignedBox2d, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/containment/TilingUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: BoundedRegularTiling2
    path: ../Assets/geometry3Sharp/containment/TilingUtil.cs
    startLine: 14
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nRegular-grid tiling of element inside bounds, with spacing between elements\nReturns list of translations to element.\nAlways allows at least one row and column, even if element overflows bounds in that dimension.\n"
  example: []
  syntax:
    content: public static List<Vector2d> BoundedRegularTiling2(AxisAlignedBox2d element, AxisAlignedBox2d bounds, double spacing)
    parameters:
    - id: element
      type: g3.AxisAlignedBox2d
    - id: bounds
      type: g3.AxisAlignedBox2d
    - id: spacing
      type: System.Double
    return:
      type: System.Collections.Generic.List{g3.Vector2d}
    content.vb: Public Shared Function BoundedRegularTiling2(element As AxisAlignedBox2d, bounds As AxisAlignedBox2d, spacing As Double) As List(Of Vector2d)
  overload: g3.TilingUtil.BoundedRegularTiling2*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.TilingUtil.BoundedCircleTiling2(g3.AxisAlignedBox2d,g3.AxisAlignedBox2d,System.Double)
  commentId: M:g3.TilingUtil.BoundedCircleTiling2(g3.AxisAlignedBox2d,g3.AxisAlignedBox2d,System.Double)
  id: BoundedCircleTiling2(g3.AxisAlignedBox2d,g3.AxisAlignedBox2d,System.Double)
  parent: g3.TilingUtil
  langs:
  - csharp
  - vb
  name: BoundedCircleTiling2(AxisAlignedBox2d, AxisAlignedBox2d, Double)
  nameWithType: TilingUtil.BoundedCircleTiling2(AxisAlignedBox2d, AxisAlignedBox2d, Double)
  fullName: g3.TilingUtil.BoundedCircleTiling2(g3.AxisAlignedBox2d, g3.AxisAlignedBox2d, System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/containment/TilingUtil.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: BoundedCircleTiling2
    path: ../Assets/geometry3Sharp/containment/TilingUtil.cs
    startLine: 51
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nhex-grid tiling of circles inside bounds, with spacing between elements\nReturns list of translations to element.\nAlways allows at least one row and column, even if element overflows bounds in that dimension.\n"
  example: []
  syntax:
    content: public static List<Vector2d> BoundedCircleTiling2(AxisAlignedBox2d element, AxisAlignedBox2d bounds, double spacing)
    parameters:
    - id: element
      type: g3.AxisAlignedBox2d
    - id: bounds
      type: g3.AxisAlignedBox2d
    - id: spacing
      type: System.Double
    return:
      type: System.Collections.Generic.List{g3.Vector2d}
    content.vb: Public Shared Function BoundedCircleTiling2(element As AxisAlignedBox2d, bounds As AxisAlignedBox2d, spacing As Double) As List(Of Vector2d)
  overload: g3.TilingUtil.BoundedCircleTiling2*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: g3.TilingUtil.BoundedRegularTiling2*
  commentId: Overload:g3.TilingUtil.BoundedRegularTiling2
  name: BoundedRegularTiling2
  nameWithType: TilingUtil.BoundedRegularTiling2
  fullName: g3.TilingUtil.BoundedRegularTiling2
- uid: g3.AxisAlignedBox2d
  commentId: T:g3.AxisAlignedBox2d
  parent: g3
  name: AxisAlignedBox2d
  nameWithType: AxisAlignedBox2d
  fullName: g3.AxisAlignedBox2d
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Collections.Generic.List{g3.Vector2d}
  commentId: T:System.Collections.Generic.List{g3.Vector2d}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Vector2d>
  nameWithType: List<Vector2d>
  fullName: System.Collections.Generic.List<g3.Vector2d>
  nameWithType.vb: List(Of Vector2d)
  fullName.vb: System.Collections.Generic.List(Of g3.Vector2d)
  name.vb: List(Of Vector2d)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: g3.Vector2d
    name: Vector2d
    nameWithType: Vector2d
    fullName: g3.Vector2d
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: g3.Vector2d
    name: Vector2d
    nameWithType: Vector2d
    fullName: g3.Vector2d
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: g3.TilingUtil.BoundedCircleTiling2*
  commentId: Overload:g3.TilingUtil.BoundedCircleTiling2
  name: BoundedCircleTiling2
  nameWithType: TilingUtil.BoundedCircleTiling2
  fullName: g3.TilingUtil.BoundedCircleTiling2

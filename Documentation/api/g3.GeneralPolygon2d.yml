### YamlMime:ManagedReference
items:
- uid: g3.GeneralPolygon2d
  commentId: T:g3.GeneralPolygon2d
  id: GeneralPolygon2d
  parent: g3
  children:
  - g3.GeneralPolygon2d.#ctor
  - g3.GeneralPolygon2d.#ctor(g3.GeneralPolygon2d)
  - g3.GeneralPolygon2d.#ctor(g3.Polygon2d)
  - g3.GeneralPolygon2d.AddHole(g3.Polygon2d,System.Boolean,System.Boolean)
  - g3.GeneralPolygon2d.AllSegmentsItr
  - g3.GeneralPolygon2d.AllVerticesItr
  - g3.GeneralPolygon2d.Area
  - g3.GeneralPolygon2d.Bounds
  - g3.GeneralPolygon2d.ClearHoles
  - g3.GeneralPolygon2d.Contains(g3.Polygon2d)
  - g3.GeneralPolygon2d.Contains(g3.Segment2d)
  - g3.GeneralPolygon2d.Contains(g3.Vector2d)
  - g3.GeneralPolygon2d.DistanceSquared(g3.Vector2d,System.Int32@,System.Int32@,System.Double@)
  - g3.GeneralPolygon2d.Duplicate
  - g3.GeneralPolygon2d.GetNormal(System.Int32,System.Double,System.Int32)
  - g3.GeneralPolygon2d.HoleArea
  - g3.GeneralPolygon2d.Holes
  - g3.GeneralPolygon2d.Intersects(g3.Polygon2d)
  - g3.GeneralPolygon2d.Outer
  - g3.GeneralPolygon2d.Perimeter
  - g3.GeneralPolygon2d.PointAt(System.Int32,System.Double,System.Int32)
  - g3.GeneralPolygon2d.Reverse
  - g3.GeneralPolygon2d.Rotate(g3.Matrix2d,g3.Vector2d)
  - g3.GeneralPolygon2d.Scale(g3.Vector2d,g3.Vector2d)
  - g3.GeneralPolygon2d.Segment(System.Int32,System.Int32)
  - g3.GeneralPolygon2d.Simplify(System.Double,System.Double,System.Boolean)
  - g3.GeneralPolygon2d.Transform(System.Func{g3.Vector2d,g3.Vector2d})
  - g3.GeneralPolygon2d.Translate(g3.Vector2d)
  - g3.GeneralPolygon2d.VertexCount
  langs:
  - csharp
  - vb
  name: GeneralPolygon2d
  nameWithType: GeneralPolygon2d
  fullName: g3.GeneralPolygon2d
  type: Class
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GeneralPolygon2d
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 6
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: 'public class GeneralPolygon2d : IDuplicatable<GeneralPolygon2d>'
    content.vb: >-
      Public Class GeneralPolygon2d
          Implements IDuplicatable(Of GeneralPolygon2d)
  inheritance:
  - System.Object
  implements:
  - g3.IDuplicatable{g3.GeneralPolygon2d}
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: g3.GeneralPolygon2d.#ctor
  commentId: M:g3.GeneralPolygon2d.#ctor
  id: '#ctor'
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: GeneralPolygon2d()
  nameWithType: GeneralPolygon2d.GeneralPolygon2d()
  fullName: g3.GeneralPolygon2d.GeneralPolygon2d()
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 14
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public GeneralPolygon2d()
    content.vb: Public Sub New
  overload: g3.GeneralPolygon2d.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.GeneralPolygon2d.#ctor(g3.Polygon2d)
  commentId: M:g3.GeneralPolygon2d.#ctor(g3.Polygon2d)
  id: '#ctor(g3.Polygon2d)'
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: GeneralPolygon2d(Polygon2d)
  nameWithType: GeneralPolygon2d.GeneralPolygon2d(Polygon2d)
  fullName: g3.GeneralPolygon2d.GeneralPolygon2d(g3.Polygon2d)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 16
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public GeneralPolygon2d(Polygon2d outer)
    parameters:
    - id: outer
      type: g3.Polygon2d
    content.vb: Public Sub New(outer As Polygon2d)
  overload: g3.GeneralPolygon2d.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.GeneralPolygon2d.#ctor(g3.GeneralPolygon2d)
  commentId: M:g3.GeneralPolygon2d.#ctor(g3.GeneralPolygon2d)
  id: '#ctor(g3.GeneralPolygon2d)'
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: GeneralPolygon2d(GeneralPolygon2d)
  nameWithType: GeneralPolygon2d.GeneralPolygon2d(GeneralPolygon2d)
  fullName: g3.GeneralPolygon2d.GeneralPolygon2d(g3.GeneralPolygon2d)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 20
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public GeneralPolygon2d(GeneralPolygon2d copy)
    parameters:
    - id: copy
      type: g3.GeneralPolygon2d
    content.vb: Public Sub New(copy As GeneralPolygon2d)
  overload: g3.GeneralPolygon2d.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.GeneralPolygon2d.Duplicate
  commentId: M:g3.GeneralPolygon2d.Duplicate
  id: Duplicate
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: Duplicate()
  nameWithType: GeneralPolygon2d.Duplicate()
  fullName: g3.GeneralPolygon2d.Duplicate()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Duplicate
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 29
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public virtual GeneralPolygon2d Duplicate()
    return:
      type: g3.GeneralPolygon2d
    content.vb: Public Overridable Function Duplicate As GeneralPolygon2d
  overload: g3.GeneralPolygon2d.Duplicate*
  implements:
  - g3.IDuplicatable{g3.GeneralPolygon2d}.Duplicate
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: g3.GeneralPolygon2d.Outer
  commentId: P:g3.GeneralPolygon2d.Outer
  id: Outer
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: Outer
  nameWithType: GeneralPolygon2d.Outer
  fullName: g3.GeneralPolygon2d.Outer
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Outer
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 34
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Polygon2d Outer { get; set; }
    parameters: []
    return:
      type: g3.Polygon2d
    content.vb: Public Property Outer As Polygon2d
  overload: g3.GeneralPolygon2d.Outer*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: g3.GeneralPolygon2d.AddHole(g3.Polygon2d,System.Boolean,System.Boolean)
  commentId: M:g3.GeneralPolygon2d.AddHole(g3.Polygon2d,System.Boolean,System.Boolean)
  id: AddHole(g3.Polygon2d,System.Boolean,System.Boolean)
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: AddHole(Polygon2d, Boolean, Boolean)
  nameWithType: GeneralPolygon2d.AddHole(Polygon2d, Boolean, Boolean)
  fullName: g3.GeneralPolygon2d.AddHole(g3.Polygon2d, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AddHole
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 43
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void AddHole(Polygon2d hole, bool bCheckContainment = true, bool bCheckOrientation = true)
    parameters:
    - id: hole
      type: g3.Polygon2d
    - id: bCheckContainment
      type: System.Boolean
    - id: bCheckOrientation
      type: System.Boolean
    content.vb: Public Sub AddHole(hole As Polygon2d, bCheckContainment As Boolean = True, bCheckOrientation As Boolean = True)
  overload: g3.GeneralPolygon2d.AddHole*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.GeneralPolygon2d.ClearHoles
  commentId: M:g3.GeneralPolygon2d.ClearHoles
  id: ClearHoles
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: ClearHoles()
  nameWithType: GeneralPolygon2d.ClearHoles()
  fullName: g3.GeneralPolygon2d.ClearHoles()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ClearHoles
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 64
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void ClearHoles()
    content.vb: Public Sub ClearHoles
  overload: g3.GeneralPolygon2d.ClearHoles*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.GeneralPolygon2d.Holes
  commentId: P:g3.GeneralPolygon2d.Holes
  id: Holes
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: Holes
  nameWithType: GeneralPolygon2d.Holes
  fullName: g3.GeneralPolygon2d.Holes
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Holes
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 73
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public ReadOnlyCollection<Polygon2d> Holes { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{g3.Polygon2d}
    content.vb: Public ReadOnly Property Holes As ReadOnlyCollection(Of Polygon2d)
  overload: g3.GeneralPolygon2d.Holes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.GeneralPolygon2d.Area
  commentId: P:g3.GeneralPolygon2d.Area
  id: Area
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: Area
  nameWithType: GeneralPolygon2d.Area
  fullName: g3.GeneralPolygon2d.Area
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Area
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 79
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double Area { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Area As Double
  overload: g3.GeneralPolygon2d.Area*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.GeneralPolygon2d.HoleArea
  commentId: P:g3.GeneralPolygon2d.HoleArea
  id: HoleArea
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: HoleArea
  nameWithType: GeneralPolygon2d.HoleArea
  fullName: g3.GeneralPolygon2d.HoleArea
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: HoleArea
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 91
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double HoleArea { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property HoleArea As Double
  overload: g3.GeneralPolygon2d.HoleArea*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.GeneralPolygon2d.Perimeter
  commentId: P:g3.GeneralPolygon2d.Perimeter
  id: Perimeter
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: Perimeter
  nameWithType: GeneralPolygon2d.Perimeter
  fullName: g3.GeneralPolygon2d.Perimeter
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Perimeter
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 102
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double Perimeter { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Perimeter As Double
  overload: g3.GeneralPolygon2d.Perimeter*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.GeneralPolygon2d.Bounds
  commentId: P:g3.GeneralPolygon2d.Bounds
  id: Bounds
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: Bounds
  nameWithType: GeneralPolygon2d.Bounds
  fullName: g3.GeneralPolygon2d.Bounds
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Bounds
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 113
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public AxisAlignedBox2d Bounds { get; }
    parameters: []
    return:
      type: g3.AxisAlignedBox2d
    content.vb: Public ReadOnly Property Bounds As AxisAlignedBox2d
  overload: g3.GeneralPolygon2d.Bounds*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.GeneralPolygon2d.VertexCount
  commentId: P:g3.GeneralPolygon2d.VertexCount
  id: VertexCount
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: VertexCount
  nameWithType: GeneralPolygon2d.VertexCount
  fullName: g3.GeneralPolygon2d.VertexCount
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: VertexCount
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 123
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int VertexCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property VertexCount As Integer
  overload: g3.GeneralPolygon2d.VertexCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.GeneralPolygon2d.Translate(g3.Vector2d)
  commentId: M:g3.GeneralPolygon2d.Translate(g3.Vector2d)
  id: Translate(g3.Vector2d)
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: Translate(Vector2d)
  nameWithType: GeneralPolygon2d.Translate(Vector2d)
  fullName: g3.GeneralPolygon2d.Translate(g3.Vector2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Translate
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 133
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Translate(Vector2d translate)
    parameters:
    - id: translate
      type: g3.Vector2d
    content.vb: Public Sub Translate(translate As Vector2d)
  overload: g3.GeneralPolygon2d.Translate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.GeneralPolygon2d.Rotate(g3.Matrix2d,g3.Vector2d)
  commentId: M:g3.GeneralPolygon2d.Rotate(g3.Matrix2d,g3.Vector2d)
  id: Rotate(g3.Matrix2d,g3.Vector2d)
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: Rotate(Matrix2d, Vector2d)
  nameWithType: GeneralPolygon2d.Rotate(Matrix2d, Vector2d)
  fullName: g3.GeneralPolygon2d.Rotate(g3.Matrix2d, g3.Vector2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Rotate
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 139
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Rotate(Matrix2d rotation, Vector2d origin)
    parameters:
    - id: rotation
      type: g3.Matrix2d
    - id: origin
      type: g3.Vector2d
    content.vb: Public Sub Rotate(rotation As Matrix2d, origin As Vector2d)
  overload: g3.GeneralPolygon2d.Rotate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.GeneralPolygon2d.Scale(g3.Vector2d,g3.Vector2d)
  commentId: M:g3.GeneralPolygon2d.Scale(g3.Vector2d,g3.Vector2d)
  id: Scale(g3.Vector2d,g3.Vector2d)
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: Scale(Vector2d, Vector2d)
  nameWithType: GeneralPolygon2d.Scale(Vector2d, Vector2d)
  fullName: g3.GeneralPolygon2d.Scale(g3.Vector2d, g3.Vector2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Scale
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 146
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Scale(Vector2d scale, Vector2d origin)
    parameters:
    - id: scale
      type: g3.Vector2d
    - id: origin
      type: g3.Vector2d
    content.vb: Public Sub Scale(scale As Vector2d, origin As Vector2d)
  overload: g3.GeneralPolygon2d.Scale*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.GeneralPolygon2d.Transform(System.Func{g3.Vector2d,g3.Vector2d})
  commentId: M:g3.GeneralPolygon2d.Transform(System.Func{g3.Vector2d,g3.Vector2d})
  id: Transform(System.Func{g3.Vector2d,g3.Vector2d})
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: Transform(Func<Vector2d, Vector2d>)
  nameWithType: GeneralPolygon2d.Transform(Func<Vector2d, Vector2d>)
  fullName: g3.GeneralPolygon2d.Transform(System.Func<g3.Vector2d, g3.Vector2d>)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Transform
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 152
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Transform(Func<Vector2d, Vector2d> transformF)
    parameters:
    - id: transformF
      type: System.Func{g3.Vector2d,g3.Vector2d}
    content.vb: Public Sub Transform(transformF As Func(Of Vector2d, Vector2d))
  overload: g3.GeneralPolygon2d.Transform*
  nameWithType.vb: GeneralPolygon2d.Transform(Func(Of Vector2d, Vector2d))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.GeneralPolygon2d.Transform(System.Func(Of g3.Vector2d, g3.Vector2d))
  name.vb: Transform(Func(Of Vector2d, Vector2d))
- uid: g3.GeneralPolygon2d.Reverse
  commentId: M:g3.GeneralPolygon2d.Reverse
  id: Reverse
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: Reverse()
  nameWithType: GeneralPolygon2d.Reverse()
  fullName: g3.GeneralPolygon2d.Reverse()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Reverse
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 159
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Reverse()
    content.vb: Public Sub Reverse
  overload: g3.GeneralPolygon2d.Reverse*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.GeneralPolygon2d.Contains(g3.Vector2d)
  commentId: M:g3.GeneralPolygon2d.Contains(g3.Vector2d)
  id: Contains(g3.Vector2d)
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: Contains(Vector2d)
  nameWithType: GeneralPolygon2d.Contains(Vector2d)
  fullName: g3.GeneralPolygon2d.Contains(g3.Vector2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Contains
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 168
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool Contains(Vector2d vTest)
    parameters:
    - id: vTest
      type: g3.Vector2d
    return:
      type: System.Boolean
    content.vb: Public Function Contains(vTest As Vector2d) As Boolean
  overload: g3.GeneralPolygon2d.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.GeneralPolygon2d.Contains(g3.Polygon2d)
  commentId: M:g3.GeneralPolygon2d.Contains(g3.Polygon2d)
  id: Contains(g3.Polygon2d)
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: Contains(Polygon2d)
  nameWithType: GeneralPolygon2d.Contains(Polygon2d)
  fullName: g3.GeneralPolygon2d.Contains(g3.Polygon2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Contains
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 180
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool Contains(Polygon2d poly)
    parameters:
    - id: poly
      type: g3.Polygon2d
    return:
      type: System.Boolean
    content.vb: Public Function Contains(poly As Polygon2d) As Boolean
  overload: g3.GeneralPolygon2d.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.GeneralPolygon2d.Contains(g3.Segment2d)
  commentId: M:g3.GeneralPolygon2d.Contains(g3.Segment2d)
  id: Contains(g3.Segment2d)
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: Contains(Segment2d)
  nameWithType: GeneralPolygon2d.Contains(Segment2d)
  fullName: g3.GeneralPolygon2d.Contains(g3.Segment2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Contains
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 194
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: "\nChecks that all points on a segment are within the area defined by the GeneralPolygon2d;\nholes are included in the calculation.\n"
  example: []
  syntax:
    content: public bool Contains(Segment2d seg)
    parameters:
    - id: seg
      type: g3.Segment2d
    return:
      type: System.Boolean
    content.vb: Public Function Contains(seg As Segment2d) As Boolean
  overload: g3.GeneralPolygon2d.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.GeneralPolygon2d.Intersects(g3.Polygon2d)
  commentId: M:g3.GeneralPolygon2d.Intersects(g3.Polygon2d)
  id: Intersects(g3.Polygon2d)
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: Intersects(Polygon2d)
  nameWithType: GeneralPolygon2d.Intersects(Polygon2d)
  fullName: g3.GeneralPolygon2d.Intersects(g3.Polygon2d)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Intersects
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 207
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool Intersects(Polygon2d poly)
    parameters:
    - id: poly
      type: g3.Polygon2d
    return:
      type: System.Boolean
    content.vb: Public Function Intersects(poly As Polygon2d) As Boolean
  overload: g3.GeneralPolygon2d.Intersects*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.GeneralPolygon2d.PointAt(System.Int32,System.Double,System.Int32)
  commentId: M:g3.GeneralPolygon2d.PointAt(System.Int32,System.Double,System.Int32)
  id: PointAt(System.Int32,System.Double,System.Int32)
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: PointAt(Int32, Double, Int32)
  nameWithType: GeneralPolygon2d.PointAt(Int32, Double, Int32)
  fullName: g3.GeneralPolygon2d.PointAt(System.Int32, System.Double, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: PointAt
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 219
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2d PointAt(int iSegment, double fSegT, int iHoleIndex = -1)
    parameters:
    - id: iSegment
      type: System.Int32
    - id: fSegT
      type: System.Double
    - id: iHoleIndex
      type: System.Int32
    return:
      type: g3.Vector2d
    content.vb: Public Function PointAt(iSegment As Integer, fSegT As Double, iHoleIndex As Integer = -1) As Vector2d
  overload: g3.GeneralPolygon2d.PointAt*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.GeneralPolygon2d.Segment(System.Int32,System.Int32)
  commentId: M:g3.GeneralPolygon2d.Segment(System.Int32,System.Int32)
  id: Segment(System.Int32,System.Int32)
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: Segment(Int32, Int32)
  nameWithType: GeneralPolygon2d.Segment(Int32, Int32)
  fullName: g3.GeneralPolygon2d.Segment(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Segment
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 226
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Segment2d Segment(int iSegment, int iHoleIndex = -1)
    parameters:
    - id: iSegment
      type: System.Int32
    - id: iHoleIndex
      type: System.Int32
    return:
      type: g3.Segment2d
    content.vb: Public Function Segment(iSegment As Integer, iHoleIndex As Integer = -1) As Segment2d
  overload: g3.GeneralPolygon2d.Segment*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.GeneralPolygon2d.GetNormal(System.Int32,System.Double,System.Int32)
  commentId: M:g3.GeneralPolygon2d.GetNormal(System.Int32,System.Double,System.Int32)
  id: GetNormal(System.Int32,System.Double,System.Int32)
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: GetNormal(Int32, Double, Int32)
  nameWithType: GeneralPolygon2d.GetNormal(Int32, Double, Int32)
  fullName: g3.GeneralPolygon2d.GetNormal(System.Int32, System.Double, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GetNormal
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 233
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2d GetNormal(int iSegment, double segT, int iHoleIndex = -1)
    parameters:
    - id: iSegment
      type: System.Int32
    - id: segT
      type: System.Double
    - id: iHoleIndex
      type: System.Int32
    return:
      type: g3.Vector2d
    content.vb: Public Function GetNormal(iSegment As Integer, segT As Double, iHoleIndex As Integer = -1) As Vector2d
  overload: g3.GeneralPolygon2d.GetNormal*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.GeneralPolygon2d.DistanceSquared(g3.Vector2d,System.Int32@,System.Int32@,System.Double@)
  commentId: M:g3.GeneralPolygon2d.DistanceSquared(g3.Vector2d,System.Int32@,System.Int32@,System.Double@)
  id: DistanceSquared(g3.Vector2d,System.Int32@,System.Int32@,System.Double@)
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: DistanceSquared(Vector2d, out Int32, out Int32, out Double)
  nameWithType: GeneralPolygon2d.DistanceSquared(Vector2d, out Int32, out Int32, out Double)
  fullName: g3.GeneralPolygon2d.DistanceSquared(g3.Vector2d, out System.Int32, out System.Int32, out System.Double)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: DistanceSquared
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 241
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public double DistanceSquared(Vector2d p, out int iHoleIndex, out int iNearSeg, out double fNearSegT)
    parameters:
    - id: p
      type: g3.Vector2d
    - id: iHoleIndex
      type: System.Int32
    - id: iNearSeg
      type: System.Int32
    - id: fNearSegT
      type: System.Double
    return:
      type: System.Double
    content.vb: Public Function DistanceSquared(p As Vector2d, ByRef iHoleIndex As Integer, ByRef iNearSeg As Integer, ByRef fNearSegT As Double) As Double
  overload: g3.GeneralPolygon2d.DistanceSquared*
  nameWithType.vb: GeneralPolygon2d.DistanceSquared(Vector2d, ByRef Int32, ByRef Int32, ByRef Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.GeneralPolygon2d.DistanceSquared(g3.Vector2d, ByRef System.Int32, ByRef System.Int32, ByRef System.Double)
  name.vb: DistanceSquared(Vector2d, ByRef Int32, ByRef Int32, ByRef Double)
- uid: g3.GeneralPolygon2d.AllSegmentsItr
  commentId: M:g3.GeneralPolygon2d.AllSegmentsItr
  id: AllSegmentsItr
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: AllSegmentsItr()
  nameWithType: GeneralPolygon2d.AllSegmentsItr()
  fullName: g3.GeneralPolygon2d.AllSegmentsItr()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AllSegmentsItr
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 260
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IEnumerable<Segment2d> AllSegmentsItr()
    return:
      type: System.Collections.Generic.IEnumerable{g3.Segment2d}
    content.vb: Public Function AllSegmentsItr As IEnumerable(Of Segment2d)
  overload: g3.GeneralPolygon2d.AllSegmentsItr*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.GeneralPolygon2d.AllVerticesItr
  commentId: M:g3.GeneralPolygon2d.AllVerticesItr
  id: AllVerticesItr
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: AllVerticesItr()
  nameWithType: GeneralPolygon2d.AllVerticesItr()
  fullName: g3.GeneralPolygon2d.AllVerticesItr()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AllVerticesItr
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 270
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IEnumerable<Vector2d> AllVerticesItr()
    return:
      type: System.Collections.Generic.IEnumerable{g3.Vector2d}
    content.vb: Public Function AllVerticesItr As IEnumerable(Of Vector2d)
  overload: g3.GeneralPolygon2d.AllVerticesItr*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.GeneralPolygon2d.Simplify(System.Double,System.Double,System.Boolean)
  commentId: M:g3.GeneralPolygon2d.Simplify(System.Double,System.Double,System.Boolean)
  id: Simplify(System.Double,System.Double,System.Boolean)
  parent: g3.GeneralPolygon2d
  langs:
  - csharp
  - vb
  name: Simplify(Double, Double, Boolean)
  nameWithType: GeneralPolygon2d.Simplify(Double, Double, Boolean)
  fullName: g3.GeneralPolygon2d.Simplify(System.Double, System.Double, System.Boolean)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Simplify
    path: ../Assets/geometry3Sharp/curve/GeneralPolygon2d.cs
    startLine: 285
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Simplify(double clusterTol = 0.0001, double lineDeviationTol = 0.01, bool bSimplifyStraightLines = true)
    parameters:
    - id: clusterTol
      type: System.Double
    - id: lineDeviationTol
      type: System.Double
    - id: bSimplifyStraightLines
      type: System.Boolean
    content.vb: Public Sub Simplify(clusterTol As Double = 0.0001, lineDeviationTol As Double = 0.01, bSimplifyStraightLines As Boolean = True)
  overload: g3.GeneralPolygon2d.Simplify*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: g3.IDuplicatable{g3.GeneralPolygon2d}
  commentId: T:g3.IDuplicatable{g3.GeneralPolygon2d}
  parent: g3
  definition: g3.IDuplicatable`1
  name: IDuplicatable<GeneralPolygon2d>
  nameWithType: IDuplicatable<GeneralPolygon2d>
  fullName: g3.IDuplicatable<g3.GeneralPolygon2d>
  nameWithType.vb: IDuplicatable(Of GeneralPolygon2d)
  fullName.vb: g3.IDuplicatable(Of g3.GeneralPolygon2d)
  name.vb: IDuplicatable(Of GeneralPolygon2d)
  spec.csharp:
  - uid: g3.IDuplicatable`1
    name: IDuplicatable
    nameWithType: IDuplicatable
    fullName: g3.IDuplicatable
  - name: <
    nameWithType: <
    fullName: <
  - uid: g3.GeneralPolygon2d
    name: GeneralPolygon2d
    nameWithType: GeneralPolygon2d
    fullName: g3.GeneralPolygon2d
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: g3.IDuplicatable`1
    name: IDuplicatable
    nameWithType: IDuplicatable
    fullName: g3.IDuplicatable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: g3.GeneralPolygon2d
    name: GeneralPolygon2d
    nameWithType: GeneralPolygon2d
    fullName: g3.GeneralPolygon2d
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: g3.IDuplicatable`1
  commentId: T:g3.IDuplicatable`1
  name: IDuplicatable<T>
  nameWithType: IDuplicatable<T>
  fullName: g3.IDuplicatable<T>
  nameWithType.vb: IDuplicatable(Of T)
  fullName.vb: g3.IDuplicatable(Of T)
  name.vb: IDuplicatable(Of T)
  spec.csharp:
  - uid: g3.IDuplicatable`1
    name: IDuplicatable
    nameWithType: IDuplicatable
    fullName: g3.IDuplicatable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: g3.IDuplicatable`1
    name: IDuplicatable
    nameWithType: IDuplicatable
    fullName: g3.IDuplicatable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.GeneralPolygon2d.#ctor*
  commentId: Overload:g3.GeneralPolygon2d.#ctor
  name: GeneralPolygon2d
  nameWithType: GeneralPolygon2d.GeneralPolygon2d
  fullName: g3.GeneralPolygon2d.GeneralPolygon2d
- uid: g3.Polygon2d
  commentId: T:g3.Polygon2d
  parent: g3
  name: Polygon2d
  nameWithType: Polygon2d
  fullName: g3.Polygon2d
- uid: g3.GeneralPolygon2d
  commentId: T:g3.GeneralPolygon2d
  parent: g3
  name: GeneralPolygon2d
  nameWithType: GeneralPolygon2d
  fullName: g3.GeneralPolygon2d
- uid: g3.GeneralPolygon2d.Duplicate*
  commentId: Overload:g3.GeneralPolygon2d.Duplicate
  name: Duplicate
  nameWithType: GeneralPolygon2d.Duplicate
  fullName: g3.GeneralPolygon2d.Duplicate
- uid: g3.IDuplicatable{g3.GeneralPolygon2d}.Duplicate
  commentId: M:g3.IDuplicatable{g3.GeneralPolygon2d}.Duplicate
  parent: g3.IDuplicatable{g3.GeneralPolygon2d}
  definition: g3.IDuplicatable`1.Duplicate
  name: Duplicate()
  nameWithType: IDuplicatable<GeneralPolygon2d>.Duplicate()
  fullName: g3.IDuplicatable<g3.GeneralPolygon2d>.Duplicate()
  nameWithType.vb: IDuplicatable(Of GeneralPolygon2d).Duplicate()
  fullName.vb: g3.IDuplicatable(Of g3.GeneralPolygon2d).Duplicate()
  spec.csharp:
  - uid: g3.IDuplicatable`1.Duplicate
    name: Duplicate
    nameWithType: IDuplicatable<GeneralPolygon2d>.Duplicate
    fullName: g3.IDuplicatable<g3.GeneralPolygon2d>.Duplicate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: g3.IDuplicatable`1.Duplicate
    name: Duplicate
    nameWithType: IDuplicatable(Of GeneralPolygon2d).Duplicate
    fullName: g3.IDuplicatable(Of g3.GeneralPolygon2d).Duplicate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.IDuplicatable`1.Duplicate
  commentId: M:g3.IDuplicatable`1.Duplicate
  name: Duplicate()
  nameWithType: IDuplicatable<T>.Duplicate()
  fullName: g3.IDuplicatable<T>.Duplicate()
  nameWithType.vb: IDuplicatable(Of T).Duplicate()
  fullName.vb: g3.IDuplicatable(Of T).Duplicate()
  spec.csharp:
  - uid: g3.IDuplicatable`1.Duplicate
    name: Duplicate
    nameWithType: IDuplicatable<T>.Duplicate
    fullName: g3.IDuplicatable<T>.Duplicate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: g3.IDuplicatable`1.Duplicate
    name: Duplicate
    nameWithType: IDuplicatable(Of T).Duplicate
    fullName: g3.IDuplicatable(Of T).Duplicate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.GeneralPolygon2d.Outer*
  commentId: Overload:g3.GeneralPolygon2d.Outer
  name: Outer
  nameWithType: GeneralPolygon2d.Outer
  fullName: g3.GeneralPolygon2d.Outer
- uid: g3.GeneralPolygon2d.AddHole*
  commentId: Overload:g3.GeneralPolygon2d.AddHole
  name: AddHole
  nameWithType: GeneralPolygon2d.AddHole
  fullName: g3.GeneralPolygon2d.AddHole
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: g3.GeneralPolygon2d.ClearHoles*
  commentId: Overload:g3.GeneralPolygon2d.ClearHoles
  name: ClearHoles
  nameWithType: GeneralPolygon2d.ClearHoles
  fullName: g3.GeneralPolygon2d.ClearHoles
- uid: g3.GeneralPolygon2d.Holes*
  commentId: Overload:g3.GeneralPolygon2d.Holes
  name: Holes
  nameWithType: GeneralPolygon2d.Holes
  fullName: g3.GeneralPolygon2d.Holes
- uid: System.Collections.ObjectModel.ReadOnlyCollection{g3.Polygon2d}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{g3.Polygon2d}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<Polygon2d>
  nameWithType: ReadOnlyCollection<Polygon2d>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<g3.Polygon2d>
  nameWithType.vb: ReadOnlyCollection(Of Polygon2d)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of g3.Polygon2d)
  name.vb: ReadOnlyCollection(Of Polygon2d)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: g3.Polygon2d
    name: Polygon2d
    nameWithType: Polygon2d
    fullName: g3.Polygon2d
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: g3.Polygon2d
    name: Polygon2d
    nameWithType: Polygon2d
    fullName: g3.Polygon2d
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: g3.GeneralPolygon2d.Area*
  commentId: Overload:g3.GeneralPolygon2d.Area
  name: Area
  nameWithType: GeneralPolygon2d.Area
  fullName: g3.GeneralPolygon2d.Area
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: g3.GeneralPolygon2d.HoleArea*
  commentId: Overload:g3.GeneralPolygon2d.HoleArea
  name: HoleArea
  nameWithType: GeneralPolygon2d.HoleArea
  fullName: g3.GeneralPolygon2d.HoleArea
- uid: g3.GeneralPolygon2d.Perimeter*
  commentId: Overload:g3.GeneralPolygon2d.Perimeter
  name: Perimeter
  nameWithType: GeneralPolygon2d.Perimeter
  fullName: g3.GeneralPolygon2d.Perimeter
- uid: g3.GeneralPolygon2d.Bounds*
  commentId: Overload:g3.GeneralPolygon2d.Bounds
  name: Bounds
  nameWithType: GeneralPolygon2d.Bounds
  fullName: g3.GeneralPolygon2d.Bounds
- uid: g3.AxisAlignedBox2d
  commentId: T:g3.AxisAlignedBox2d
  parent: g3
  name: AxisAlignedBox2d
  nameWithType: AxisAlignedBox2d
  fullName: g3.AxisAlignedBox2d
- uid: g3.GeneralPolygon2d.VertexCount*
  commentId: Overload:g3.GeneralPolygon2d.VertexCount
  name: VertexCount
  nameWithType: GeneralPolygon2d.VertexCount
  fullName: g3.GeneralPolygon2d.VertexCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: g3.GeneralPolygon2d.Translate*
  commentId: Overload:g3.GeneralPolygon2d.Translate
  name: Translate
  nameWithType: GeneralPolygon2d.Translate
  fullName: g3.GeneralPolygon2d.Translate
- uid: g3.Vector2d
  commentId: T:g3.Vector2d
  parent: g3
  name: Vector2d
  nameWithType: Vector2d
  fullName: g3.Vector2d
- uid: g3.GeneralPolygon2d.Rotate*
  commentId: Overload:g3.GeneralPolygon2d.Rotate
  name: Rotate
  nameWithType: GeneralPolygon2d.Rotate
  fullName: g3.GeneralPolygon2d.Rotate
- uid: g3.Matrix2d
  commentId: T:g3.Matrix2d
  parent: g3
  name: Matrix2d
  nameWithType: Matrix2d
  fullName: g3.Matrix2d
- uid: g3.GeneralPolygon2d.Scale*
  commentId: Overload:g3.GeneralPolygon2d.Scale
  name: Scale
  nameWithType: GeneralPolygon2d.Scale
  fullName: g3.GeneralPolygon2d.Scale
- uid: g3.GeneralPolygon2d.Transform*
  commentId: Overload:g3.GeneralPolygon2d.Transform
  name: Transform
  nameWithType: GeneralPolygon2d.Transform
  fullName: g3.GeneralPolygon2d.Transform
- uid: System.Func{g3.Vector2d,g3.Vector2d}
  commentId: T:System.Func{g3.Vector2d,g3.Vector2d}
  parent: System
  definition: System.Func`2
  name: Func<Vector2d, Vector2d>
  nameWithType: Func<Vector2d, Vector2d>
  fullName: System.Func<g3.Vector2d, g3.Vector2d>
  nameWithType.vb: Func(Of Vector2d, Vector2d)
  fullName.vb: System.Func(Of g3.Vector2d, g3.Vector2d)
  name.vb: Func(Of Vector2d, Vector2d)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: g3.Vector2d
    name: Vector2d
    nameWithType: Vector2d
    fullName: g3.Vector2d
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: g3.Vector2d
    name: Vector2d
    nameWithType: Vector2d
    fullName: g3.Vector2d
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: g3.Vector2d
    name: Vector2d
    nameWithType: Vector2d
    fullName: g3.Vector2d
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: g3.Vector2d
    name: Vector2d
    nameWithType: Vector2d
    fullName: g3.Vector2d
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.GeneralPolygon2d.Reverse*
  commentId: Overload:g3.GeneralPolygon2d.Reverse
  name: Reverse
  nameWithType: GeneralPolygon2d.Reverse
  fullName: g3.GeneralPolygon2d.Reverse
- uid: g3.GeneralPolygon2d.Contains*
  commentId: Overload:g3.GeneralPolygon2d.Contains
  name: Contains
  nameWithType: GeneralPolygon2d.Contains
  fullName: g3.GeneralPolygon2d.Contains
- uid: g3.Segment2d
  commentId: T:g3.Segment2d
  parent: g3
  name: Segment2d
  nameWithType: Segment2d
  fullName: g3.Segment2d
- uid: g3.GeneralPolygon2d.Intersects*
  commentId: Overload:g3.GeneralPolygon2d.Intersects
  name: Intersects
  nameWithType: GeneralPolygon2d.Intersects
  fullName: g3.GeneralPolygon2d.Intersects
- uid: g3.GeneralPolygon2d.PointAt*
  commentId: Overload:g3.GeneralPolygon2d.PointAt
  name: PointAt
  nameWithType: GeneralPolygon2d.PointAt
  fullName: g3.GeneralPolygon2d.PointAt
- uid: g3.GeneralPolygon2d.Segment*
  commentId: Overload:g3.GeneralPolygon2d.Segment
  name: Segment
  nameWithType: GeneralPolygon2d.Segment
  fullName: g3.GeneralPolygon2d.Segment
- uid: g3.GeneralPolygon2d.GetNormal*
  commentId: Overload:g3.GeneralPolygon2d.GetNormal
  name: GetNormal
  nameWithType: GeneralPolygon2d.GetNormal
  fullName: g3.GeneralPolygon2d.GetNormal
- uid: g3.GeneralPolygon2d.DistanceSquared*
  commentId: Overload:g3.GeneralPolygon2d.DistanceSquared
  name: DistanceSquared
  nameWithType: GeneralPolygon2d.DistanceSquared
  fullName: g3.GeneralPolygon2d.DistanceSquared
- uid: g3.GeneralPolygon2d.AllSegmentsItr*
  commentId: Overload:g3.GeneralPolygon2d.AllSegmentsItr
  name: AllSegmentsItr
  nameWithType: GeneralPolygon2d.AllSegmentsItr
  fullName: g3.GeneralPolygon2d.AllSegmentsItr
- uid: System.Collections.Generic.IEnumerable{g3.Segment2d}
  commentId: T:System.Collections.Generic.IEnumerable{g3.Segment2d}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Segment2d>
  nameWithType: IEnumerable<Segment2d>
  fullName: System.Collections.Generic.IEnumerable<g3.Segment2d>
  nameWithType.vb: IEnumerable(Of Segment2d)
  fullName.vb: System.Collections.Generic.IEnumerable(Of g3.Segment2d)
  name.vb: IEnumerable(Of Segment2d)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: g3.Segment2d
    name: Segment2d
    nameWithType: Segment2d
    fullName: g3.Segment2d
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: g3.Segment2d
    name: Segment2d
    nameWithType: Segment2d
    fullName: g3.Segment2d
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: g3.GeneralPolygon2d.AllVerticesItr*
  commentId: Overload:g3.GeneralPolygon2d.AllVerticesItr
  name: AllVerticesItr
  nameWithType: GeneralPolygon2d.AllVerticesItr
  fullName: g3.GeneralPolygon2d.AllVerticesItr
- uid: System.Collections.Generic.IEnumerable{g3.Vector2d}
  commentId: T:System.Collections.Generic.IEnumerable{g3.Vector2d}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Vector2d>
  nameWithType: IEnumerable<Vector2d>
  fullName: System.Collections.Generic.IEnumerable<g3.Vector2d>
  nameWithType.vb: IEnumerable(Of Vector2d)
  fullName.vb: System.Collections.Generic.IEnumerable(Of g3.Vector2d)
  name.vb: IEnumerable(Of Vector2d)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: g3.Vector2d
    name: Vector2d
    nameWithType: Vector2d
    fullName: g3.Vector2d
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: g3.Vector2d
    name: Vector2d
    nameWithType: Vector2d
    fullName: g3.Vector2d
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.GeneralPolygon2d.Simplify*
  commentId: Overload:g3.GeneralPolygon2d.Simplify
  name: Simplify
  nameWithType: GeneralPolygon2d.Simplify
  fullName: g3.GeneralPolygon2d.Simplify

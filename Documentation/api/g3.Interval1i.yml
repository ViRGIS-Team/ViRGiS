### YamlMime:ManagedReference
items:
- uid: g3.Interval1i
  commentId: T:g3.Interval1i
  id: Interval1i
  parent: g3
  children:
  - g3.Interval1i.#ctor(g3.Interval1i)
  - g3.Interval1i.#ctor(System.Int32)
  - g3.Interval1i.#ctor(System.Int32,System.Int32)
  - g3.Interval1i.#ctor(System.Int32[])
  - g3.Interval1i.a
  - g3.Interval1i.b
  - g3.Interval1i.Center
  - g3.Interval1i.Contain(System.Int32)
  - g3.Interval1i.Contains(System.Int32)
  - g3.Interval1i.Dist(g3.Interval1i)
  - g3.Interval1i.Empty
  - g3.Interval1i.FromToInclusive(System.Int32,System.Int32)
  - g3.Interval1i.GetEnumerator
  - g3.Interval1i.Infinite
  - g3.Interval1i.Item(System.Int32)
  - g3.Interval1i.Length
  - g3.Interval1i.LengthSquared
  - g3.Interval1i.op_Addition(g3.Interval1i,System.Int32)
  - g3.Interval1i.op_Multiply(g3.Interval1i,System.Int32)
  - g3.Interval1i.op_Subtraction(g3.Interval1i,System.Int32)
  - g3.Interval1i.op_UnaryNegation(g3.Interval1i)
  - g3.Interval1i.Overlaps(g3.Interval1i)
  - g3.Interval1i.Range(System.Int32)
  - g3.Interval1i.Range(System.Int32,System.Int32)
  - g3.Interval1i.RangeInclusive(System.Int32)
  - g3.Interval1i.Set(g3.Interval1i)
  - g3.Interval1i.Set(System.Int32,System.Int32)
  - g3.Interval1i.SquaredDist(g3.Interval1i)
  - g3.Interval1i.ToString
  - g3.Interval1i.Zero
  langs:
  - csharp
  - vb
  name: Interval1i
  nameWithType: Interval1i
  fullName: g3.Interval1i
  type: Struct
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Interval1i
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 11
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: 'public struct Interval1i : IEnumerable<int>, IEnumerable'
    content.vb: >-
      Public Structure Interval1i
          Implements IEnumerable(Of Integer), IEnumerable
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: g3.Interval1i.a
  commentId: F:g3.Interval1i.a
  id: a
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: a
  nameWithType: Interval1i.a
  fullName: g3.Interval1i.a
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: a
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 13
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int a
    return:
      type: System.Int32
    content.vb: Public a As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Interval1i.b
  commentId: F:g3.Interval1i.b
  id: b
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: b
  nameWithType: Interval1i.b
  fullName: g3.Interval1i.b
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: b
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 14
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int b
    return:
      type: System.Int32
    content.vb: Public b As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Interval1i.#ctor(System.Int32)
  commentId: M:g3.Interval1i.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: Interval1i(Int32)
  nameWithType: Interval1i.Interval1i(Int32)
  fullName: g3.Interval1i.Interval1i(System.Int32)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 16
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Interval1i(int f)
    parameters:
    - id: f
      type: System.Int32
    content.vb: Public Sub New(f As Integer)
  overload: g3.Interval1i.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Interval1i.#ctor(System.Int32,System.Int32)
  commentId: M:g3.Interval1i.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: Interval1i(Int32, Int32)
  nameWithType: Interval1i.Interval1i(Int32, Int32)
  fullName: g3.Interval1i.Interval1i(System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 17
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Interval1i(int x, int y)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    content.vb: Public Sub New(x As Integer, y As Integer)
  overload: g3.Interval1i.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Interval1i.#ctor(System.Int32[])
  commentId: M:g3.Interval1i.#ctor(System.Int32[])
  id: '#ctor(System.Int32[])'
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: Interval1i(Int32[])
  nameWithType: Interval1i.Interval1i(Int32[])
  fullName: g3.Interval1i.Interval1i(System.Int32[])
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 18
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Interval1i(int[] v2)
    parameters:
    - id: v2
      type: System.Int32[]
    content.vb: Public Sub New(v2 As Integer())
  overload: g3.Interval1i.#ctor*
  nameWithType.vb: Interval1i.Interval1i(Int32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.Interval1i.Interval1i(System.Int32())
  name.vb: Interval1i(Int32())
- uid: g3.Interval1i.#ctor(g3.Interval1i)
  commentId: M:g3.Interval1i.#ctor(g3.Interval1i)
  id: '#ctor(g3.Interval1i)'
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: Interval1i(Interval1i)
  nameWithType: Interval1i.Interval1i(Interval1i)
  fullName: g3.Interval1i.Interval1i(g3.Interval1i)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 19
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Interval1i(Interval1i copy)
    parameters:
    - id: copy
      type: g3.Interval1i
    content.vb: Public Sub New(copy As Interval1i)
  overload: g3.Interval1i.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Interval1i.Zero
  commentId: F:g3.Interval1i.Zero
  id: Zero
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: Interval1i.Zero
  fullName: g3.Interval1i.Zero
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Zero
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 22
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static readonly Interval1i Zero
    return:
      type: g3.Interval1i
    content.vb: Public Shared ReadOnly Zero As Interval1i
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: g3.Interval1i.Empty
  commentId: F:g3.Interval1i.Empty
  id: Empty
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: Interval1i.Empty
  fullName: g3.Interval1i.Empty
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Empty
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 23
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static readonly Interval1i Empty
    return:
      type: g3.Interval1i
    content.vb: Public Shared ReadOnly Empty As Interval1i
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: g3.Interval1i.Infinite
  commentId: F:g3.Interval1i.Infinite
  id: Infinite
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: Infinite
  nameWithType: Interval1i.Infinite
  fullName: g3.Interval1i.Infinite
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Infinite
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 24
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static readonly Interval1i Infinite
    return:
      type: g3.Interval1i
    content.vb: Public Shared ReadOnly Infinite As Interval1i
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: g3.Interval1i.Range(System.Int32)
  commentId: M:g3.Interval1i.Range(System.Int32)
  id: Range(System.Int32)
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: Range(Int32)
  nameWithType: Interval1i.Range(Int32)
  fullName: g3.Interval1i.Range(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Range
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 27
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: 'construct interval [0, N-1] '
  example: []
  syntax:
    content: public static Interval1i Range(int N)
    parameters:
    - id: N
      type: System.Int32
    return:
      type: g3.Interval1i
    content.vb: Public Shared Function Range(N As Integer) As Interval1i
  overload: g3.Interval1i.Range*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Interval1i.RangeInclusive(System.Int32)
  commentId: M:g3.Interval1i.RangeInclusive(System.Int32)
  id: RangeInclusive(System.Int32)
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: RangeInclusive(Int32)
  nameWithType: Interval1i.RangeInclusive(Int32)
  fullName: g3.Interval1i.RangeInclusive(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: RangeInclusive
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 30
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: 'construct interval [0, N-1] '
  example: []
  syntax:
    content: public static Interval1i RangeInclusive(int N)
    parameters:
    - id: N
      type: System.Int32
    return:
      type: g3.Interval1i
    content.vb: Public Shared Function RangeInclusive(N As Integer) As Interval1i
  overload: g3.Interval1i.RangeInclusive*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Interval1i.Range(System.Int32,System.Int32)
  commentId: M:g3.Interval1i.Range(System.Int32,System.Int32)
  id: Range(System.Int32,System.Int32)
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: Range(Int32, Int32)
  nameWithType: Interval1i.Range(Int32, Int32)
  fullName: g3.Interval1i.Range(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Range
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 33
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: 'construct interval [start, start+N-1] '
  example: []
  syntax:
    content: public static Interval1i Range(int start, int N)
    parameters:
    - id: start
      type: System.Int32
    - id: N
      type: System.Int32
    return:
      type: g3.Interval1i
    content.vb: Public Shared Function Range(start As Integer, N As Integer) As Interval1i
  overload: g3.Interval1i.Range*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Interval1i.FromToInclusive(System.Int32,System.Int32)
  commentId: M:g3.Interval1i.FromToInclusive(System.Int32,System.Int32)
  id: FromToInclusive(System.Int32,System.Int32)
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: FromToInclusive(Int32, Int32)
  nameWithType: Interval1i.FromToInclusive(Int32, Int32)
  fullName: g3.Interval1i.FromToInclusive(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: FromToInclusive
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 37
  assemblies:
  - geometry3Sharp
  namespace: g3
  summary: 'construct interval [a, b] '
  example: []
  syntax:
    content: public static Interval1i FromToInclusive(int a, int b)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int32
    return:
      type: g3.Interval1i
    content.vb: Public Shared Function FromToInclusive(a As Integer, b As Integer) As Interval1i
  overload: g3.Interval1i.FromToInclusive*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Interval1i.Item(System.Int32)
  commentId: P:g3.Interval1i.Item(System.Int32)
  id: Item(System.Int32)
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: Interval1i.Item[Int32]
  fullName: g3.Interval1i.Item[System.Int32]
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: this[]
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 41
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int this[int key] { get; set; }
    parameters:
    - id: key
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Property Item(key As Integer) As Integer
  overload: g3.Interval1i.Item*
  nameWithType.vb: Interval1i.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: g3.Interval1i.Item(System.Int32)
  name.vb: Item(Int32)
- uid: g3.Interval1i.LengthSquared
  commentId: P:g3.Interval1i.LengthSquared
  id: LengthSquared
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: LengthSquared
  nameWithType: Interval1i.LengthSquared
  fullName: g3.Interval1i.LengthSquared
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: LengthSquared
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 48
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int LengthSquared { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property LengthSquared As Integer
  overload: g3.Interval1i.LengthSquared*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Interval1i.Length
  commentId: P:g3.Interval1i.Length
  id: Length
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: Interval1i.Length
  fullName: g3.Interval1i.Length
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Length
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 52
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int Length { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Length As Integer
  overload: g3.Interval1i.Length*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Interval1i.Center
  commentId: P:g3.Interval1i.Center
  id: Center
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: Center
  nameWithType: Interval1i.Center
  fullName: g3.Interval1i.Center
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Center
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 57
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int Center { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Center As Integer
  overload: g3.Interval1i.Center*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Interval1i.Contain(System.Int32)
  commentId: M:g3.Interval1i.Contain(System.Int32)
  id: Contain(System.Int32)
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: Contain(Int32)
  nameWithType: Interval1i.Contain(Int32)
  fullName: g3.Interval1i.Contain(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Contain
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 61
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Contain(int d)
    parameters:
    - id: d
      type: System.Int32
    content.vb: Public Sub Contain(d As Integer)
  overload: g3.Interval1i.Contain*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Interval1i.Contains(System.Int32)
  commentId: M:g3.Interval1i.Contains(System.Int32)
  id: Contains(System.Int32)
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: Contains(Int32)
  nameWithType: Interval1i.Contains(Int32)
  fullName: g3.Interval1i.Contains(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Contains
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 68
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool Contains(int d)
    parameters:
    - id: d
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function Contains(d As Integer) As Boolean
  overload: g3.Interval1i.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Interval1i.Overlaps(g3.Interval1i)
  commentId: M:g3.Interval1i.Overlaps(g3.Interval1i)
  id: Overlaps(g3.Interval1i)
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: Overlaps(Interval1i)
  nameWithType: Interval1i.Overlaps(Interval1i)
  fullName: g3.Interval1i.Overlaps(g3.Interval1i)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Overlaps
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 73
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool Overlaps(Interval1i o)
    parameters:
    - id: o
      type: g3.Interval1i
    return:
      type: System.Boolean
    content.vb: Public Function Overlaps(o As Interval1i) As Boolean
  overload: g3.Interval1i.Overlaps*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Interval1i.SquaredDist(g3.Interval1i)
  commentId: M:g3.Interval1i.SquaredDist(g3.Interval1i)
  id: SquaredDist(g3.Interval1i)
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: SquaredDist(Interval1i)
  nameWithType: Interval1i.SquaredDist(Interval1i)
  fullName: g3.Interval1i.SquaredDist(g3.Interval1i)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: SquaredDist
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 77
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int SquaredDist(Interval1i o)
    parameters:
    - id: o
      type: g3.Interval1i
    return:
      type: System.Int32
    content.vb: Public Function SquaredDist(o As Interval1i) As Integer
  overload: g3.Interval1i.SquaredDist*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Interval1i.Dist(g3.Interval1i)
  commentId: M:g3.Interval1i.Dist(g3.Interval1i)
  id: Dist(g3.Interval1i)
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: Dist(Interval1i)
  nameWithType: Interval1i.Dist(Interval1i)
  fullName: g3.Interval1i.Dist(g3.Interval1i)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Dist
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 85
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int Dist(Interval1i o)
    parameters:
    - id: o
      type: g3.Interval1i
    return:
      type: System.Int32
    content.vb: Public Function Dist(o As Interval1i) As Integer
  overload: g3.Interval1i.Dist*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Interval1i.Set(g3.Interval1i)
  commentId: M:g3.Interval1i.Set(g3.Interval1i)
  id: Set(g3.Interval1i)
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: Set(Interval1i)
  nameWithType: Interval1i.Set(Interval1i)
  fullName: g3.Interval1i.Set(g3.Interval1i)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Set
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 95
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Set(Interval1i o)
    parameters:
    - id: o
      type: g3.Interval1i
    content.vb: Public Sub Set(o As Interval1i)
  overload: g3.Interval1i.Set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Interval1i.Set(System.Int32,System.Int32)
  commentId: M:g3.Interval1i.Set(System.Int32,System.Int32)
  id: Set(System.Int32,System.Int32)
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: Set(Int32, Int32)
  nameWithType: Interval1i.Set(Int32, Int32)
  fullName: g3.Interval1i.Set(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Set
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 98
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Set(int fA, int fB)
    parameters:
    - id: fA
      type: System.Int32
    - id: fB
      type: System.Int32
    content.vb: Public Sub Set(fA As Integer, fB As Integer)
  overload: g3.Interval1i.Set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Interval1i.op_UnaryNegation(g3.Interval1i)
  commentId: M:g3.Interval1i.op_UnaryNegation(g3.Interval1i)
  id: op_UnaryNegation(g3.Interval1i)
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: UnaryNegation(Interval1i)
  nameWithType: Interval1i.UnaryNegation(Interval1i)
  fullName: g3.Interval1i.UnaryNegation(g3.Interval1i)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_UnaryNegation
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 104
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Interval1i operator -(Interval1i v)
    parameters:
    - id: v
      type: g3.Interval1i
    return:
      type: g3.Interval1i
    content.vb: Public Shared Operator -(v As Interval1i) As Interval1i
  overload: g3.Interval1i.op_UnaryNegation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Interval1i.op_Addition(g3.Interval1i,System.Int32)
  commentId: M:g3.Interval1i.op_Addition(g3.Interval1i,System.Int32)
  id: op_Addition(g3.Interval1i,System.Int32)
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: Addition(Interval1i, Int32)
  nameWithType: Interval1i.Addition(Interval1i, Int32)
  fullName: g3.Interval1i.Addition(g3.Interval1i, System.Int32)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Addition
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 109
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Interval1i operator +(Interval1i a, int f)
    parameters:
    - id: a
      type: g3.Interval1i
    - id: f
      type: System.Int32
    return:
      type: g3.Interval1i
    content.vb: Public Shared Operator +(a As Interval1i, f As Integer) As Interval1i
  overload: g3.Interval1i.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Interval1i.op_Subtraction(g3.Interval1i,System.Int32)
  commentId: M:g3.Interval1i.op_Subtraction(g3.Interval1i,System.Int32)
  id: op_Subtraction(g3.Interval1i,System.Int32)
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: Subtraction(Interval1i, Int32)
  nameWithType: Interval1i.Subtraction(Interval1i, Int32)
  fullName: g3.Interval1i.Subtraction(g3.Interval1i, System.Int32)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Subtraction
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 112
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Interval1i operator -(Interval1i a, int f)
    parameters:
    - id: a
      type: g3.Interval1i
    - id: f
      type: System.Int32
    return:
      type: g3.Interval1i
    content.vb: Public Shared Operator -(a As Interval1i, f As Integer) As Interval1i
  overload: g3.Interval1i.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Interval1i.op_Multiply(g3.Interval1i,System.Int32)
  commentId: M:g3.Interval1i.op_Multiply(g3.Interval1i,System.Int32)
  id: op_Multiply(g3.Interval1i,System.Int32)
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: Multiply(Interval1i, Int32)
  nameWithType: Interval1i.Multiply(Interval1i, Int32)
  fullName: g3.Interval1i.Multiply(g3.Interval1i, System.Int32)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Multiply
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 116
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Interval1i operator *(Interval1i a, int f)
    parameters:
    - id: a
      type: g3.Interval1i
    - id: f
      type: System.Int32
    return:
      type: g3.Interval1i
    content.vb: Public Shared Operator *(a As Interval1i, f As Integer) As Interval1i
  overload: g3.Interval1i.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Interval1i.GetEnumerator
  commentId: M:g3.Interval1i.GetEnumerator
  id: GetEnumerator
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: Interval1i.GetEnumerator()
  fullName: g3.Interval1i.GetEnumerator()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GetEnumerator
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 121
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IEnumerator<int> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.Int32}
    content.vb: Public Function GetEnumerator As IEnumerator(Of Integer)
  overload: g3.Interval1i.GetEnumerator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Interval1i.ToString
  commentId: M:g3.Interval1i.ToString
  id: ToString
  parent: g3.Interval1i
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Interval1i.ToString()
  fullName: g3.Interval1i.ToString()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Interval1i.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ToString
    path: ../Assets/geometry3Sharp/math/Interval1i.cs
    startLine: 129
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: g3.Interval1i.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: g3.Interval1i.#ctor*
  commentId: Overload:g3.Interval1i.#ctor
  name: Interval1i
  nameWithType: Interval1i.Interval1i
  fullName: g3.Interval1i.Interval1i
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: g3.Interval1i
  commentId: T:g3.Interval1i
  parent: g3
  name: Interval1i
  nameWithType: Interval1i
  fullName: g3.Interval1i
- uid: g3.Interval1i.Range*
  commentId: Overload:g3.Interval1i.Range
  name: Range
  nameWithType: Interval1i.Range
  fullName: g3.Interval1i.Range
- uid: g3.Interval1i.RangeInclusive*
  commentId: Overload:g3.Interval1i.RangeInclusive
  name: RangeInclusive
  nameWithType: Interval1i.RangeInclusive
  fullName: g3.Interval1i.RangeInclusive
- uid: g3.Interval1i.FromToInclusive*
  commentId: Overload:g3.Interval1i.FromToInclusive
  name: FromToInclusive
  nameWithType: Interval1i.FromToInclusive
  fullName: g3.Interval1i.FromToInclusive
- uid: g3.Interval1i.Item*
  commentId: Overload:g3.Interval1i.Item
  name: Item
  nameWithType: Interval1i.Item
  fullName: g3.Interval1i.Item
- uid: g3.Interval1i.LengthSquared*
  commentId: Overload:g3.Interval1i.LengthSquared
  name: LengthSquared
  nameWithType: Interval1i.LengthSquared
  fullName: g3.Interval1i.LengthSquared
- uid: g3.Interval1i.Length*
  commentId: Overload:g3.Interval1i.Length
  name: Length
  nameWithType: Interval1i.Length
  fullName: g3.Interval1i.Length
- uid: g3.Interval1i.Center*
  commentId: Overload:g3.Interval1i.Center
  name: Center
  nameWithType: Interval1i.Center
  fullName: g3.Interval1i.Center
- uid: g3.Interval1i.Contain*
  commentId: Overload:g3.Interval1i.Contain
  name: Contain
  nameWithType: Interval1i.Contain
  fullName: g3.Interval1i.Contain
- uid: g3.Interval1i.Contains*
  commentId: Overload:g3.Interval1i.Contains
  name: Contains
  nameWithType: Interval1i.Contains
  fullName: g3.Interval1i.Contains
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: g3.Interval1i.Overlaps*
  commentId: Overload:g3.Interval1i.Overlaps
  name: Overlaps
  nameWithType: Interval1i.Overlaps
  fullName: g3.Interval1i.Overlaps
- uid: g3.Interval1i.SquaredDist*
  commentId: Overload:g3.Interval1i.SquaredDist
  name: SquaredDist
  nameWithType: Interval1i.SquaredDist
  fullName: g3.Interval1i.SquaredDist
- uid: g3.Interval1i.Dist*
  commentId: Overload:g3.Interval1i.Dist
  name: Dist
  nameWithType: Interval1i.Dist
  fullName: g3.Interval1i.Dist
- uid: g3.Interval1i.Set*
  commentId: Overload:g3.Interval1i.Set
  name: Set
  nameWithType: Interval1i.Set
  fullName: g3.Interval1i.Set
- uid: g3.Interval1i.op_UnaryNegation*
  commentId: Overload:g3.Interval1i.op_UnaryNegation
  name: UnaryNegation
  nameWithType: Interval1i.UnaryNegation
  fullName: g3.Interval1i.UnaryNegation
- uid: g3.Interval1i.op_Addition*
  commentId: Overload:g3.Interval1i.op_Addition
  name: Addition
  nameWithType: Interval1i.Addition
  fullName: g3.Interval1i.Addition
- uid: g3.Interval1i.op_Subtraction*
  commentId: Overload:g3.Interval1i.op_Subtraction
  name: Subtraction
  nameWithType: Interval1i.Subtraction
  fullName: g3.Interval1i.Subtraction
- uid: g3.Interval1i.op_Multiply*
  commentId: Overload:g3.Interval1i.op_Multiply
  name: Multiply
  nameWithType: Interval1i.Multiply
  fullName: g3.Interval1i.Multiply
- uid: g3.Interval1i.GetEnumerator*
  commentId: Overload:g3.Interval1i.GetEnumerator
  name: GetEnumerator
  nameWithType: Interval1i.GetEnumerator
  fullName: g3.Interval1i.GetEnumerator
- uid: System.Collections.Generic.IEnumerator{System.Int32}
  commentId: T:System.Collections.Generic.IEnumerator{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<Int32>
  nameWithType: IEnumerator<Int32>
  fullName: System.Collections.Generic.IEnumerator<System.Int32>
  nameWithType.vb: IEnumerator(Of Int32)
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Int32)
  name.vb: IEnumerator(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.Interval1i.ToString*
  commentId: Overload:g3.Interval1i.ToString
  name: ToString
  nameWithType: Interval1i.ToString
  fullName: g3.Interval1i.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType

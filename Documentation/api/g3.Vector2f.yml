### YamlMime:ManagedReference
items:
- uid: g3.Vector2f
  commentId: T:g3.Vector2f
  id: Vector2f
  parent: g3
  children:
  - g3.Vector2f.#ctor(g3.Vector2d)
  - g3.Vector2f.#ctor(g3.Vector2f)
  - g3.Vector2f.#ctor(System.Double)
  - g3.Vector2f.#ctor(System.Double,System.Double)
  - g3.Vector2f.#ctor(System.Double[])
  - g3.Vector2f.#ctor(System.Single)
  - g3.Vector2f.#ctor(System.Single,System.Single)
  - g3.Vector2f.#ctor(System.Single[])
  - g3.Vector2f.Add(g3.Vector2f)
  - g3.Vector2f.AngleD(g3.Vector2f)
  - g3.Vector2f.AngleD(g3.Vector2f,g3.Vector2f)
  - g3.Vector2f.AngleR(g3.Vector2f)
  - g3.Vector2f.AngleR(g3.Vector2f,g3.Vector2f)
  - g3.Vector2f.AxisX
  - g3.Vector2f.AxisY
  - g3.Vector2f.CompareTo(g3.Vector2f)
  - g3.Vector2f.Cross(g3.Vector2f)
  - g3.Vector2f.Distance(g3.Vector2f)
  - g3.Vector2f.DistanceSquared(g3.Vector2f)
  - g3.Vector2f.Dot(g3.Vector2f)
  - g3.Vector2f.DotPerp(g3.Vector2f)
  - g3.Vector2f.EpsilonEqual(g3.Vector2f,System.Single)
  - g3.Vector2f.Equals(g3.Vector2f)
  - g3.Vector2f.Equals(System.Object)
  - g3.Vector2f.GetHashCode
  - g3.Vector2f.IsFinite
  - g3.Vector2f.IsNormalized
  - g3.Vector2f.Item(System.Int32)
  - g3.Vector2f.Length
  - g3.Vector2f.LengthSquared
  - g3.Vector2f.Lerp(g3.Vector2f,g3.Vector2f,System.Single)
  - g3.Vector2f.Lerp(g3.Vector2f@,g3.Vector2f@,System.Single)
  - g3.Vector2f.MaxValue
  - g3.Vector2f.MinValue
  - g3.Vector2f.Normalize(System.Single)
  - g3.Vector2f.Normalized
  - g3.Vector2f.One
  - g3.Vector2f.op_Addition(g3.Vector2f,g3.Vector2f)
  - g3.Vector2f.op_Addition(g3.Vector2f,System.Single)
  - g3.Vector2f.op_Division(g3.Vector2f,g3.Vector2f)
  - g3.Vector2f.op_Division(g3.Vector2f,System.Single)
  - g3.Vector2f.op_Division(System.Single,g3.Vector2f)
  - g3.Vector2f.op_Equality(g3.Vector2f,g3.Vector2f)
  - g3.Vector2f.op_Inequality(g3.Vector2f,g3.Vector2f)
  - g3.Vector2f.op_Multiply(g3.Vector2f,g3.Vector2f)
  - g3.Vector2f.op_Multiply(g3.Vector2f,System.Single)
  - g3.Vector2f.op_Multiply(System.Single,g3.Vector2f)
  - g3.Vector2f.op_Subtraction(g3.Vector2f,g3.Vector2f)
  - g3.Vector2f.op_Subtraction(g3.Vector2f,System.Single)
  - g3.Vector2f.op_UnaryNegation(g3.Vector2f)
  - g3.Vector2f.Perp
  - g3.Vector2f.Round(System.Int32)
  - g3.Vector2f.Set(g3.Vector2f)
  - g3.Vector2f.Set(System.Single,System.Single)
  - g3.Vector2f.Subtract(g3.Vector2f)
  - g3.Vector2f.ToString
  - g3.Vector2f.UnitPerp
  - g3.Vector2f.x
  - g3.Vector2f.y
  - g3.Vector2f.Zero
  langs:
  - csharp
  - vb
  name: Vector2f
  nameWithType: Vector2f
  fullName: g3.Vector2f
  type: Struct
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Vector2f
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 11
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: 'public struct Vector2f : IComparable<Vector2f>, IEquatable<Vector2f>'
    content.vb: >-
      Public Structure Vector2f
          Implements IComparable(Of Vector2f), IEquatable(Of Vector2f)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: g3.Vector2f.x
  commentId: F:g3.Vector2f.x
  id: x
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: x
  nameWithType: Vector2f.x
  fullName: g3.Vector2f.x
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: x
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 13
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public float x
    return:
      type: System.Single
    content.vb: Public x As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2f.y
  commentId: F:g3.Vector2f.y
  id: y
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: y
  nameWithType: Vector2f.y
  fullName: g3.Vector2f.y
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: y
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 14
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public float y
    return:
      type: System.Single
    content.vb: Public y As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2f.#ctor(System.Single)
  commentId: M:g3.Vector2f.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Vector2f(Single)
  nameWithType: Vector2f.Vector2f(Single)
  fullName: g3.Vector2f.Vector2f(System.Single)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 16
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2f(float f)
    parameters:
    - id: f
      type: System.Single
    content.vb: Public Sub New(f As Single)
  overload: g3.Vector2f.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2f.#ctor(System.Single,System.Single)
  commentId: M:g3.Vector2f.#ctor(System.Single,System.Single)
  id: '#ctor(System.Single,System.Single)'
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Vector2f(Single, Single)
  nameWithType: Vector2f.Vector2f(Single, Single)
  fullName: g3.Vector2f.Vector2f(System.Single, System.Single)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 17
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2f(float x, float y)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    content.vb: Public Sub New(x As Single, y As Single)
  overload: g3.Vector2f.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2f.#ctor(System.Single[])
  commentId: M:g3.Vector2f.#ctor(System.Single[])
  id: '#ctor(System.Single[])'
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Vector2f(Single[])
  nameWithType: Vector2f.Vector2f(Single[])
  fullName: g3.Vector2f.Vector2f(System.Single[])
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 18
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2f(float[] v2)
    parameters:
    - id: v2
      type: System.Single[]
    content.vb: Public Sub New(v2 As Single())
  overload: g3.Vector2f.#ctor*
  nameWithType.vb: Vector2f.Vector2f(Single())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.Vector2f.Vector2f(System.Single())
  name.vb: Vector2f(Single())
- uid: g3.Vector2f.#ctor(System.Double)
  commentId: M:g3.Vector2f.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Vector2f(Double)
  nameWithType: Vector2f.Vector2f(Double)
  fullName: g3.Vector2f.Vector2f(System.Double)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 19
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2f(double f)
    parameters:
    - id: f
      type: System.Double
    content.vb: Public Sub New(f As Double)
  overload: g3.Vector2f.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2f.#ctor(System.Double,System.Double)
  commentId: M:g3.Vector2f.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Vector2f(Double, Double)
  nameWithType: Vector2f.Vector2f(Double, Double)
  fullName: g3.Vector2f.Vector2f(System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 20
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2f(double x, double y)
    parameters:
    - id: x
      type: System.Double
    - id: y
      type: System.Double
    content.vb: Public Sub New(x As Double, y As Double)
  overload: g3.Vector2f.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2f.#ctor(System.Double[])
  commentId: M:g3.Vector2f.#ctor(System.Double[])
  id: '#ctor(System.Double[])'
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Vector2f(Double[])
  nameWithType: Vector2f.Vector2f(Double[])
  fullName: g3.Vector2f.Vector2f(System.Double[])
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 21
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2f(double[] v2)
    parameters:
    - id: v2
      type: System.Double[]
    content.vb: Public Sub New(v2 As Double())
  overload: g3.Vector2f.#ctor*
  nameWithType.vb: Vector2f.Vector2f(Double())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.Vector2f.Vector2f(System.Double())
  name.vb: Vector2f(Double())
- uid: g3.Vector2f.#ctor(g3.Vector2f)
  commentId: M:g3.Vector2f.#ctor(g3.Vector2f)
  id: '#ctor(g3.Vector2f)'
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Vector2f(Vector2f)
  nameWithType: Vector2f.Vector2f(Vector2f)
  fullName: g3.Vector2f.Vector2f(g3.Vector2f)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 22
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2f(Vector2f copy)
    parameters:
    - id: copy
      type: g3.Vector2f
    content.vb: Public Sub New(copy As Vector2f)
  overload: g3.Vector2f.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2f.#ctor(g3.Vector2d)
  commentId: M:g3.Vector2f.#ctor(g3.Vector2d)
  id: '#ctor(g3.Vector2d)'
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Vector2f(Vector2d)
  nameWithType: Vector2f.Vector2f(Vector2d)
  fullName: g3.Vector2f.Vector2f(g3.Vector2d)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 23
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2f(Vector2d copy)
    parameters:
    - id: copy
      type: g3.Vector2d
    content.vb: Public Sub New(copy As Vector2d)
  overload: g3.Vector2f.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2f.Zero
  commentId: F:g3.Vector2f.Zero
  id: Zero
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: Vector2f.Zero
  fullName: g3.Vector2f.Zero
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Zero
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 26
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static readonly Vector2f Zero
    return:
      type: g3.Vector2f
    content.vb: Public Shared ReadOnly Zero As Vector2f
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: g3.Vector2f.One
  commentId: F:g3.Vector2f.One
  id: One
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: One
  nameWithType: Vector2f.One
  fullName: g3.Vector2f.One
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: One
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 27
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static readonly Vector2f One
    return:
      type: g3.Vector2f
    content.vb: Public Shared ReadOnly One As Vector2f
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: g3.Vector2f.AxisX
  commentId: F:g3.Vector2f.AxisX
  id: AxisX
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: AxisX
  nameWithType: Vector2f.AxisX
  fullName: g3.Vector2f.AxisX
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AxisX
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 28
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static readonly Vector2f AxisX
    return:
      type: g3.Vector2f
    content.vb: Public Shared ReadOnly AxisX As Vector2f
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: g3.Vector2f.AxisY
  commentId: F:g3.Vector2f.AxisY
  id: AxisY
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: AxisY
  nameWithType: Vector2f.AxisY
  fullName: g3.Vector2f.AxisY
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AxisY
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 29
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static readonly Vector2f AxisY
    return:
      type: g3.Vector2f
    content.vb: Public Shared ReadOnly AxisY As Vector2f
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: g3.Vector2f.MaxValue
  commentId: F:g3.Vector2f.MaxValue
  id: MaxValue
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: MaxValue
  nameWithType: Vector2f.MaxValue
  fullName: g3.Vector2f.MaxValue
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: MaxValue
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 30
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static readonly Vector2f MaxValue
    return:
      type: g3.Vector2f
    content.vb: Public Shared ReadOnly MaxValue As Vector2f
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: g3.Vector2f.MinValue
  commentId: F:g3.Vector2f.MinValue
  id: MinValue
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: MinValue
  nameWithType: Vector2f.MinValue
  fullName: g3.Vector2f.MinValue
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: MinValue
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 31
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static readonly Vector2f MinValue
    return:
      type: g3.Vector2f
    content.vb: Public Shared ReadOnly MinValue As Vector2f
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: g3.Vector2f.Item(System.Int32)
  commentId: P:g3.Vector2f.Item(System.Int32)
  id: Item(System.Int32)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: Vector2f.Item[Int32]
  fullName: g3.Vector2f.Item[System.Int32]
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: this[]
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 33
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public float this[int key] { get; set; }
    parameters:
    - id: key
      type: System.Int32
    return:
      type: System.Single
    content.vb: Public Property Item(key As Integer) As Single
  overload: g3.Vector2f.Item*
  nameWithType.vb: Vector2f.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: g3.Vector2f.Item(System.Int32)
  name.vb: Item(Int32)
- uid: g3.Vector2f.LengthSquared
  commentId: P:g3.Vector2f.LengthSquared
  id: LengthSquared
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: LengthSquared
  nameWithType: Vector2f.LengthSquared
  fullName: g3.Vector2f.LengthSquared
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: LengthSquared
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 40
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public float LengthSquared { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property LengthSquared As Single
  overload: g3.Vector2f.LengthSquared*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector2f.Length
  commentId: P:g3.Vector2f.Length
  id: Length
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: Vector2f.Length
  fullName: g3.Vector2f.Length
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Length
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 44
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public float Length { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Length As Single
  overload: g3.Vector2f.Length*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector2f.Normalize(System.Single)
  commentId: M:g3.Vector2f.Normalize(System.Single)
  id: Normalize(System.Single)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Normalize(Single)
  nameWithType: Vector2f.Normalize(Single)
  fullName: g3.Vector2f.Normalize(System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Normalize
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 49
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public float Normalize(float epsilon = 1.1920929E-07F)
    parameters:
    - id: epsilon
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Function Normalize(epsilon As Single = 1.1920929E-07F) As Single
  overload: g3.Vector2f.Normalize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2f.Normalized
  commentId: P:g3.Vector2f.Normalized
  id: Normalized
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Normalized
  nameWithType: Vector2f.Normalized
  fullName: g3.Vector2f.Normalized
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Normalized
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 62
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2f Normalized { get; }
    parameters: []
    return:
      type: g3.Vector2f
    content.vb: Public ReadOnly Property Normalized As Vector2f
  overload: g3.Vector2f.Normalized*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector2f.IsNormalized
  commentId: P:g3.Vector2f.IsNormalized
  id: IsNormalized
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: IsNormalized
  nameWithType: Vector2f.IsNormalized
  fullName: g3.Vector2f.IsNormalized
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IsNormalized
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 74
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool IsNormalized { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNormalized As Boolean
  overload: g3.Vector2f.IsNormalized*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector2f.IsFinite
  commentId: P:g3.Vector2f.IsFinite
  id: IsFinite
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: IsFinite
  nameWithType: Vector2f.IsFinite
  fullName: g3.Vector2f.IsFinite
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: IsFinite
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 78
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool IsFinite { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFinite As Boolean
  overload: g3.Vector2f.IsFinite*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector2f.Round(System.Int32)
  commentId: M:g3.Vector2f.Round(System.Int32)
  id: Round(System.Int32)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Round(Int32)
  nameWithType: Vector2f.Round(Int32)
  fullName: g3.Vector2f.Round(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Round
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 83
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Round(int nDecimals)
    parameters:
    - id: nDecimals
      type: System.Int32
    content.vb: Public Sub Round(nDecimals As Integer)
  overload: g3.Vector2f.Round*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2f.Dot(g3.Vector2f)
  commentId: M:g3.Vector2f.Dot(g3.Vector2f)
  id: Dot(g3.Vector2f)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Dot(Vector2f)
  nameWithType: Vector2f.Dot(Vector2f)
  fullName: g3.Vector2f.Dot(g3.Vector2f)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Dot
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 88
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public float Dot(Vector2f v2)
    parameters:
    - id: v2
      type: g3.Vector2f
    return:
      type: System.Single
    content.vb: Public Function Dot(v2 As Vector2f) As Single
  overload: g3.Vector2f.Dot*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2f.Cross(g3.Vector2f)
  commentId: M:g3.Vector2f.Cross(g3.Vector2f)
  id: Cross(g3.Vector2f)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Cross(Vector2f)
  nameWithType: Vector2f.Cross(Vector2f)
  fullName: g3.Vector2f.Cross(g3.Vector2f)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Cross
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 94
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public float Cross(Vector2f v2)
    parameters:
    - id: v2
      type: g3.Vector2f
    return:
      type: System.Single
    content.vb: Public Function Cross(v2 As Vector2f) As Single
  overload: g3.Vector2f.Cross*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2f.Perp
  commentId: P:g3.Vector2f.Perp
  id: Perp
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Perp
  nameWithType: Vector2f.Perp
  fullName: g3.Vector2f.Perp
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Perp
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 99
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2f Perp { get; }
    parameters: []
    return:
      type: g3.Vector2f
    content.vb: Public ReadOnly Property Perp As Vector2f
  overload: g3.Vector2f.Perp*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector2f.UnitPerp
  commentId: P:g3.Vector2f.UnitPerp
  id: UnitPerp
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: UnitPerp
  nameWithType: Vector2f.UnitPerp
  fullName: g3.Vector2f.UnitPerp
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: UnitPerp
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 102
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public Vector2f UnitPerp { get; }
    parameters: []
    return:
      type: g3.Vector2f
    content.vb: Public ReadOnly Property UnitPerp As Vector2f
  overload: g3.Vector2f.UnitPerp*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: g3.Vector2f.DotPerp(g3.Vector2f)
  commentId: M:g3.Vector2f.DotPerp(g3.Vector2f)
  id: DotPerp(g3.Vector2f)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: DotPerp(Vector2f)
  nameWithType: Vector2f.DotPerp(Vector2f)
  fullName: g3.Vector2f.DotPerp(g3.Vector2f)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: DotPerp
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 105
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public float DotPerp(Vector2f v2)
    parameters:
    - id: v2
      type: g3.Vector2f
    return:
      type: System.Single
    content.vb: Public Function DotPerp(v2 As Vector2f) As Single
  overload: g3.Vector2f.DotPerp*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2f.AngleD(g3.Vector2f)
  commentId: M:g3.Vector2f.AngleD(g3.Vector2f)
  id: AngleD(g3.Vector2f)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: AngleD(Vector2f)
  nameWithType: Vector2f.AngleD(Vector2f)
  fullName: g3.Vector2f.AngleD(g3.Vector2f)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AngleD
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 110
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public float AngleD(Vector2f v2)
    parameters:
    - id: v2
      type: g3.Vector2f
    return:
      type: System.Single
    content.vb: Public Function AngleD(v2 As Vector2f) As Single
  overload: g3.Vector2f.AngleD*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2f.AngleD(g3.Vector2f,g3.Vector2f)
  commentId: M:g3.Vector2f.AngleD(g3.Vector2f,g3.Vector2f)
  id: AngleD(g3.Vector2f,g3.Vector2f)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: AngleD(Vector2f, Vector2f)
  nameWithType: Vector2f.AngleD(Vector2f, Vector2f)
  fullName: g3.Vector2f.AngleD(g3.Vector2f, g3.Vector2f)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AngleD
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 114
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static float AngleD(Vector2f v1, Vector2f v2)
    parameters:
    - id: v1
      type: g3.Vector2f
    - id: v2
      type: g3.Vector2f
    return:
      type: System.Single
    content.vb: Public Shared Function AngleD(v1 As Vector2f, v2 As Vector2f) As Single
  overload: g3.Vector2f.AngleD*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2f.AngleR(g3.Vector2f)
  commentId: M:g3.Vector2f.AngleR(g3.Vector2f)
  id: AngleR(g3.Vector2f)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: AngleR(Vector2f)
  nameWithType: Vector2f.AngleR(Vector2f)
  fullName: g3.Vector2f.AngleR(g3.Vector2f)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AngleR
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 117
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public float AngleR(Vector2f v2)
    parameters:
    - id: v2
      type: g3.Vector2f
    return:
      type: System.Single
    content.vb: Public Function AngleR(v2 As Vector2f) As Single
  overload: g3.Vector2f.AngleR*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2f.AngleR(g3.Vector2f,g3.Vector2f)
  commentId: M:g3.Vector2f.AngleR(g3.Vector2f,g3.Vector2f)
  id: AngleR(g3.Vector2f,g3.Vector2f)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: AngleR(Vector2f, Vector2f)
  nameWithType: Vector2f.AngleR(Vector2f, Vector2f)
  fullName: g3.Vector2f.AngleR(g3.Vector2f, g3.Vector2f)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: AngleR
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 121
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static float AngleR(Vector2f v1, Vector2f v2)
    parameters:
    - id: v1
      type: g3.Vector2f
    - id: v2
      type: g3.Vector2f
    return:
      type: System.Single
    content.vb: Public Shared Function AngleR(v1 As Vector2f, v2 As Vector2f) As Single
  overload: g3.Vector2f.AngleR*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2f.DistanceSquared(g3.Vector2f)
  commentId: M:g3.Vector2f.DistanceSquared(g3.Vector2f)
  id: DistanceSquared(g3.Vector2f)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: DistanceSquared(Vector2f)
  nameWithType: Vector2f.DistanceSquared(Vector2f)
  fullName: g3.Vector2f.DistanceSquared(g3.Vector2f)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: DistanceSquared
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 127
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public float DistanceSquared(Vector2f v2)
    parameters:
    - id: v2
      type: g3.Vector2f
    return:
      type: System.Single
    content.vb: Public Function DistanceSquared(v2 As Vector2f) As Single
  overload: g3.Vector2f.DistanceSquared*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2f.Distance(g3.Vector2f)
  commentId: M:g3.Vector2f.Distance(g3.Vector2f)
  id: Distance(g3.Vector2f)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Distance(Vector2f)
  nameWithType: Vector2f.Distance(Vector2f)
  fullName: g3.Vector2f.Distance(g3.Vector2f)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Distance
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 131
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public float Distance(Vector2f v2)
    parameters:
    - id: v2
      type: g3.Vector2f
    return:
      type: System.Single
    content.vb: Public Function Distance(v2 As Vector2f) As Single
  overload: g3.Vector2f.Distance*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2f.Set(g3.Vector2f)
  commentId: M:g3.Vector2f.Set(g3.Vector2f)
  id: Set(g3.Vector2f)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Set(Vector2f)
  nameWithType: Vector2f.Set(Vector2f)
  fullName: g3.Vector2f.Set(g3.Vector2f)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Set
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 137
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Set(Vector2f o)
    parameters:
    - id: o
      type: g3.Vector2f
    content.vb: Public Sub Set(o As Vector2f)
  overload: g3.Vector2f.Set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2f.Set(System.Single,System.Single)
  commentId: M:g3.Vector2f.Set(System.Single,System.Single)
  id: Set(System.Single,System.Single)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Set(Single, Single)
  nameWithType: Vector2f.Set(Single, Single)
  fullName: g3.Vector2f.Set(System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Set
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 140
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Set(float fX, float fY)
    parameters:
    - id: fX
      type: System.Single
    - id: fY
      type: System.Single
    content.vb: Public Sub Set(fX As Single, fY As Single)
  overload: g3.Vector2f.Set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2f.Add(g3.Vector2f)
  commentId: M:g3.Vector2f.Add(g3.Vector2f)
  id: Add(g3.Vector2f)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Add(Vector2f)
  nameWithType: Vector2f.Add(Vector2f)
  fullName: g3.Vector2f.Add(g3.Vector2f)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Add
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 143
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Add(Vector2f o)
    parameters:
    - id: o
      type: g3.Vector2f
    content.vb: Public Sub Add(o As Vector2f)
  overload: g3.Vector2f.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2f.Subtract(g3.Vector2f)
  commentId: M:g3.Vector2f.Subtract(g3.Vector2f)
  id: Subtract(g3.Vector2f)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Subtract(Vector2f)
  nameWithType: Vector2f.Subtract(Vector2f)
  fullName: g3.Vector2f.Subtract(g3.Vector2f)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Subtract
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 146
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Subtract(Vector2f o)
    parameters:
    - id: o
      type: g3.Vector2f
    content.vb: Public Sub Subtract(o As Vector2f)
  overload: g3.Vector2f.Subtract*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2f.op_UnaryNegation(g3.Vector2f)
  commentId: M:g3.Vector2f.op_UnaryNegation(g3.Vector2f)
  id: op_UnaryNegation(g3.Vector2f)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: UnaryNegation(Vector2f)
  nameWithType: Vector2f.UnaryNegation(Vector2f)
  fullName: g3.Vector2f.UnaryNegation(g3.Vector2f)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_UnaryNegation
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 151
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector2f operator -(Vector2f v)
    parameters:
    - id: v
      type: g3.Vector2f
    return:
      type: g3.Vector2f
    content.vb: Public Shared Operator -(v As Vector2f) As Vector2f
  overload: g3.Vector2f.op_UnaryNegation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2f.op_Addition(g3.Vector2f,g3.Vector2f)
  commentId: M:g3.Vector2f.op_Addition(g3.Vector2f,g3.Vector2f)
  id: op_Addition(g3.Vector2f,g3.Vector2f)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Addition(Vector2f, Vector2f)
  nameWithType: Vector2f.Addition(Vector2f, Vector2f)
  fullName: g3.Vector2f.Addition(g3.Vector2f, g3.Vector2f)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Addition
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 155
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector2f operator +(Vector2f a, Vector2f o)
    parameters:
    - id: a
      type: g3.Vector2f
    - id: o
      type: g3.Vector2f
    return:
      type: g3.Vector2f
    content.vb: Public Shared Operator +(a As Vector2f, o As Vector2f) As Vector2f
  overload: g3.Vector2f.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2f.op_Addition(g3.Vector2f,System.Single)
  commentId: M:g3.Vector2f.op_Addition(g3.Vector2f,System.Single)
  id: op_Addition(g3.Vector2f,System.Single)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Addition(Vector2f, Single)
  nameWithType: Vector2f.Addition(Vector2f, Single)
  fullName: g3.Vector2f.Addition(g3.Vector2f, System.Single)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Addition
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 158
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector2f operator +(Vector2f a, float f)
    parameters:
    - id: a
      type: g3.Vector2f
    - id: f
      type: System.Single
    return:
      type: g3.Vector2f
    content.vb: Public Shared Operator +(a As Vector2f, f As Single) As Vector2f
  overload: g3.Vector2f.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2f.op_Subtraction(g3.Vector2f,g3.Vector2f)
  commentId: M:g3.Vector2f.op_Subtraction(g3.Vector2f,g3.Vector2f)
  id: op_Subtraction(g3.Vector2f,g3.Vector2f)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Subtraction(Vector2f, Vector2f)
  nameWithType: Vector2f.Subtraction(Vector2f, Vector2f)
  fullName: g3.Vector2f.Subtraction(g3.Vector2f, g3.Vector2f)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Subtraction
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 162
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector2f operator -(Vector2f a, Vector2f o)
    parameters:
    - id: a
      type: g3.Vector2f
    - id: o
      type: g3.Vector2f
    return:
      type: g3.Vector2f
    content.vb: Public Shared Operator -(a As Vector2f, o As Vector2f) As Vector2f
  overload: g3.Vector2f.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2f.op_Subtraction(g3.Vector2f,System.Single)
  commentId: M:g3.Vector2f.op_Subtraction(g3.Vector2f,System.Single)
  id: op_Subtraction(g3.Vector2f,System.Single)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Subtraction(Vector2f, Single)
  nameWithType: Vector2f.Subtraction(Vector2f, Single)
  fullName: g3.Vector2f.Subtraction(g3.Vector2f, System.Single)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Subtraction
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 165
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector2f operator -(Vector2f a, float f)
    parameters:
    - id: a
      type: g3.Vector2f
    - id: f
      type: System.Single
    return:
      type: g3.Vector2f
    content.vb: Public Shared Operator -(a As Vector2f, f As Single) As Vector2f
  overload: g3.Vector2f.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2f.op_Multiply(g3.Vector2f,System.Single)
  commentId: M:g3.Vector2f.op_Multiply(g3.Vector2f,System.Single)
  id: op_Multiply(g3.Vector2f,System.Single)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Multiply(Vector2f, Single)
  nameWithType: Vector2f.Multiply(Vector2f, Single)
  fullName: g3.Vector2f.Multiply(g3.Vector2f, System.Single)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Multiply
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 169
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector2f operator *(Vector2f a, float f)
    parameters:
    - id: a
      type: g3.Vector2f
    - id: f
      type: System.Single
    return:
      type: g3.Vector2f
    content.vb: Public Shared Operator *(a As Vector2f, f As Single) As Vector2f
  overload: g3.Vector2f.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2f.op_Multiply(System.Single,g3.Vector2f)
  commentId: M:g3.Vector2f.op_Multiply(System.Single,g3.Vector2f)
  id: op_Multiply(System.Single,g3.Vector2f)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Multiply(Single, Vector2f)
  nameWithType: Vector2f.Multiply(Single, Vector2f)
  fullName: g3.Vector2f.Multiply(System.Single, g3.Vector2f)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Multiply
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 172
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector2f operator *(float f, Vector2f a)
    parameters:
    - id: f
      type: System.Single
    - id: a
      type: g3.Vector2f
    return:
      type: g3.Vector2f
    content.vb: Public Shared Operator *(f As Single, a As Vector2f) As Vector2f
  overload: g3.Vector2f.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2f.op_Division(g3.Vector2f,System.Single)
  commentId: M:g3.Vector2f.op_Division(g3.Vector2f,System.Single)
  id: op_Division(g3.Vector2f,System.Single)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Division(Vector2f, Single)
  nameWithType: Vector2f.Division(Vector2f, Single)
  fullName: g3.Vector2f.Division(g3.Vector2f, System.Single)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Division
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 175
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector2f operator /(Vector2f v, float f)
    parameters:
    - id: v
      type: g3.Vector2f
    - id: f
      type: System.Single
    return:
      type: g3.Vector2f
    content.vb: Public Shared Operator /(v As Vector2f, f As Single) As Vector2f
  overload: g3.Vector2f.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2f.op_Division(System.Single,g3.Vector2f)
  commentId: M:g3.Vector2f.op_Division(System.Single,g3.Vector2f)
  id: op_Division(System.Single,g3.Vector2f)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Division(Single, Vector2f)
  nameWithType: Vector2f.Division(Single, Vector2f)
  fullName: g3.Vector2f.Division(System.Single, g3.Vector2f)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Division
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 179
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector2f operator /(float f, Vector2f v)
    parameters:
    - id: f
      type: System.Single
    - id: v
      type: g3.Vector2f
    return:
      type: g3.Vector2f
    content.vb: Public Shared Operator /(f As Single, v As Vector2f) As Vector2f
  overload: g3.Vector2f.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2f.op_Multiply(g3.Vector2f,g3.Vector2f)
  commentId: M:g3.Vector2f.op_Multiply(g3.Vector2f,g3.Vector2f)
  id: op_Multiply(g3.Vector2f,g3.Vector2f)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Multiply(Vector2f, Vector2f)
  nameWithType: Vector2f.Multiply(Vector2f, Vector2f)
  fullName: g3.Vector2f.Multiply(g3.Vector2f, g3.Vector2f)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Multiply
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 184
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector2f operator *(Vector2f a, Vector2f b)
    parameters:
    - id: a
      type: g3.Vector2f
    - id: b
      type: g3.Vector2f
    return:
      type: g3.Vector2f
    content.vb: Public Shared Operator *(a As Vector2f, b As Vector2f) As Vector2f
  overload: g3.Vector2f.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2f.op_Division(g3.Vector2f,g3.Vector2f)
  commentId: M:g3.Vector2f.op_Division(g3.Vector2f,g3.Vector2f)
  id: op_Division(g3.Vector2f,g3.Vector2f)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Division(Vector2f, Vector2f)
  nameWithType: Vector2f.Division(Vector2f, Vector2f)
  fullName: g3.Vector2f.Division(g3.Vector2f, g3.Vector2f)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Division
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 188
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector2f operator /(Vector2f a, Vector2f b)
    parameters:
    - id: a
      type: g3.Vector2f
    - id: b
      type: g3.Vector2f
    return:
      type: g3.Vector2f
    content.vb: Public Shared Operator /(a As Vector2f, b As Vector2f) As Vector2f
  overload: g3.Vector2f.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2f.op_Equality(g3.Vector2f,g3.Vector2f)
  commentId: M:g3.Vector2f.op_Equality(g3.Vector2f,g3.Vector2f)
  id: op_Equality(g3.Vector2f,g3.Vector2f)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Equality(Vector2f, Vector2f)
  nameWithType: Vector2f.Equality(Vector2f, Vector2f)
  fullName: g3.Vector2f.Equality(g3.Vector2f, g3.Vector2f)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Equality
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 194
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static bool operator ==(Vector2f a, Vector2f b)
    parameters:
    - id: a
      type: g3.Vector2f
    - id: b
      type: g3.Vector2f
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(a As Vector2f, b As Vector2f) As Boolean
  overload: g3.Vector2f.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2f.op_Inequality(g3.Vector2f,g3.Vector2f)
  commentId: M:g3.Vector2f.op_Inequality(g3.Vector2f,g3.Vector2f)
  id: op_Inequality(g3.Vector2f,g3.Vector2f)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Inequality(Vector2f, Vector2f)
  nameWithType: Vector2f.Inequality(Vector2f, Vector2f)
  fullName: g3.Vector2f.Inequality(g3.Vector2f, g3.Vector2f)
  type: Operator
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: op_Inequality
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 198
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static bool operator !=(Vector2f a, Vector2f b)
    parameters:
    - id: a
      type: g3.Vector2f
    - id: b
      type: g3.Vector2f
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(a As Vector2f, b As Vector2f) As Boolean
  overload: g3.Vector2f.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2f.Equals(System.Object)
  commentId: M:g3.Vector2f.Equals(System.Object)
  id: Equals(System.Object)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Vector2f.Equals(Object)
  fullName: g3.Vector2f.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Equals
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 202
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: g3.Vector2f.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: g3.Vector2f.GetHashCode
  commentId: M:g3.Vector2f.GetHashCode
  id: GetHashCode
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Vector2f.GetHashCode()
  fullName: g3.Vector2f.GetHashCode()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GetHashCode
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 206
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: g3.Vector2f.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: g3.Vector2f.CompareTo(g3.Vector2f)
  commentId: M:g3.Vector2f.CompareTo(g3.Vector2f)
  id: CompareTo(g3.Vector2f)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: CompareTo(Vector2f)
  nameWithType: Vector2f.CompareTo(Vector2f)
  fullName: g3.Vector2f.CompareTo(g3.Vector2f)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: CompareTo
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 217
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int CompareTo(Vector2f other)
    parameters:
    - id: other
      type: g3.Vector2f
    return:
      type: System.Int32
    content.vb: Public Function CompareTo(other As Vector2f) As Integer
  overload: g3.Vector2f.CompareTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2f.Equals(g3.Vector2f)
  commentId: M:g3.Vector2f.Equals(g3.Vector2f)
  id: Equals(g3.Vector2f)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Equals(Vector2f)
  nameWithType: Vector2f.Equals(Vector2f)
  fullName: g3.Vector2f.Equals(g3.Vector2f)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Equals
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 225
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool Equals(Vector2f other)
    parameters:
    - id: other
      type: g3.Vector2f
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Vector2f) As Boolean
  overload: g3.Vector2f.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2f.EpsilonEqual(g3.Vector2f,System.Single)
  commentId: M:g3.Vector2f.EpsilonEqual(g3.Vector2f,System.Single)
  id: EpsilonEqual(g3.Vector2f,System.Single)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: EpsilonEqual(Vector2f, Single)
  nameWithType: Vector2f.EpsilonEqual(Vector2f, Single)
  fullName: g3.Vector2f.EpsilonEqual(g3.Vector2f, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: EpsilonEqual
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 231
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public bool EpsilonEqual(Vector2f v2, float epsilon)
    parameters:
    - id: v2
      type: g3.Vector2f
    - id: epsilon
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function EpsilonEqual(v2 As Vector2f, epsilon As Single) As Boolean
  overload: g3.Vector2f.EpsilonEqual*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: g3.Vector2f.Lerp(g3.Vector2f,g3.Vector2f,System.Single)
  commentId: M:g3.Vector2f.Lerp(g3.Vector2f,g3.Vector2f,System.Single)
  id: Lerp(g3.Vector2f,g3.Vector2f,System.Single)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Lerp(Vector2f, Vector2f, Single)
  nameWithType: Vector2f.Lerp(Vector2f, Vector2f, Single)
  fullName: g3.Vector2f.Lerp(g3.Vector2f, g3.Vector2f, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Lerp
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 237
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector2f Lerp(Vector2f a, Vector2f b, float t)
    parameters:
    - id: a
      type: g3.Vector2f
    - id: b
      type: g3.Vector2f
    - id: t
      type: System.Single
    return:
      type: g3.Vector2f
    content.vb: Public Shared Function Lerp(a As Vector2f, b As Vector2f, t As Single) As Vector2f
  overload: g3.Vector2f.Lerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: g3.Vector2f.Lerp(g3.Vector2f@,g3.Vector2f@,System.Single)
  commentId: M:g3.Vector2f.Lerp(g3.Vector2f@,g3.Vector2f@,System.Single)
  id: Lerp(g3.Vector2f@,g3.Vector2f@,System.Single)
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: Lerp(ref Vector2f, ref Vector2f, Single)
  nameWithType: Vector2f.Lerp(ref Vector2f, ref Vector2f, Single)
  fullName: g3.Vector2f.Lerp(ref g3.Vector2f, ref g3.Vector2f, System.Single)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Lerp
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 241
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public static Vector2f Lerp(ref Vector2f a, ref Vector2f b, float t)
    parameters:
    - id: a
      type: g3.Vector2f
    - id: b
      type: g3.Vector2f
    - id: t
      type: System.Single
    return:
      type: g3.Vector2f
    content.vb: Public Shared Function Lerp(ByRef a As Vector2f, ByRef b As Vector2f, t As Single) As Vector2f
  overload: g3.Vector2f.Lerp*
  nameWithType.vb: Vector2f.Lerp(ByRef Vector2f, ByRef Vector2f, Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: g3.Vector2f.Lerp(ByRef g3.Vector2f, ByRef g3.Vector2f, System.Single)
  name.vb: Lerp(ByRef Vector2f, ByRef Vector2f, Single)
- uid: g3.Vector2f.ToString
  commentId: M:g3.Vector2f.ToString
  id: ToString
  parent: g3.Vector2f
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Vector2f.ToString()
  fullName: g3.Vector2f.ToString()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/math/Vector2f.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: ToString
    path: ../Assets/geometry3Sharp/math/Vector2f.cs
    startLine: 247
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: g3.Vector2f.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: g3.Vector2f.#ctor*
  commentId: Overload:g3.Vector2f.#ctor
  name: Vector2f
  nameWithType: Vector2f.Vector2f
  fullName: g3.Vector2f.Vector2f
- uid: System.Single[]
  isExternal: true
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Double[]
  isExternal: true
  name: Double[]
  nameWithType: Double[]
  fullName: System.Double[]
  nameWithType.vb: Double()
  fullName.vb: System.Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: g3.Vector2f
  commentId: T:g3.Vector2f
  parent: g3
  name: Vector2f
  nameWithType: Vector2f
  fullName: g3.Vector2f
- uid: g3.Vector2d
  commentId: T:g3.Vector2d
  parent: g3
  name: Vector2d
  nameWithType: Vector2d
  fullName: g3.Vector2d
- uid: g3.Vector2f.Item*
  commentId: Overload:g3.Vector2f.Item
  name: Item
  nameWithType: Vector2f.Item
  fullName: g3.Vector2f.Item
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: g3.Vector2f.LengthSquared*
  commentId: Overload:g3.Vector2f.LengthSquared
  name: LengthSquared
  nameWithType: Vector2f.LengthSquared
  fullName: g3.Vector2f.LengthSquared
- uid: g3.Vector2f.Length*
  commentId: Overload:g3.Vector2f.Length
  name: Length
  nameWithType: Vector2f.Length
  fullName: g3.Vector2f.Length
- uid: g3.Vector2f.Normalize*
  commentId: Overload:g3.Vector2f.Normalize
  name: Normalize
  nameWithType: Vector2f.Normalize
  fullName: g3.Vector2f.Normalize
- uid: g3.Vector2f.Normalized*
  commentId: Overload:g3.Vector2f.Normalized
  name: Normalized
  nameWithType: Vector2f.Normalized
  fullName: g3.Vector2f.Normalized
- uid: g3.Vector2f.IsNormalized*
  commentId: Overload:g3.Vector2f.IsNormalized
  name: IsNormalized
  nameWithType: Vector2f.IsNormalized
  fullName: g3.Vector2f.IsNormalized
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: g3.Vector2f.IsFinite*
  commentId: Overload:g3.Vector2f.IsFinite
  name: IsFinite
  nameWithType: Vector2f.IsFinite
  fullName: g3.Vector2f.IsFinite
- uid: g3.Vector2f.Round*
  commentId: Overload:g3.Vector2f.Round
  name: Round
  nameWithType: Vector2f.Round
  fullName: g3.Vector2f.Round
- uid: g3.Vector2f.Dot*
  commentId: Overload:g3.Vector2f.Dot
  name: Dot
  nameWithType: Vector2f.Dot
  fullName: g3.Vector2f.Dot
- uid: g3.Vector2f.Cross*
  commentId: Overload:g3.Vector2f.Cross
  name: Cross
  nameWithType: Vector2f.Cross
  fullName: g3.Vector2f.Cross
- uid: g3.Vector2f.Perp*
  commentId: Overload:g3.Vector2f.Perp
  name: Perp
  nameWithType: Vector2f.Perp
  fullName: g3.Vector2f.Perp
- uid: g3.Vector2f.UnitPerp*
  commentId: Overload:g3.Vector2f.UnitPerp
  name: UnitPerp
  nameWithType: Vector2f.UnitPerp
  fullName: g3.Vector2f.UnitPerp
- uid: g3.Vector2f.DotPerp*
  commentId: Overload:g3.Vector2f.DotPerp
  name: DotPerp
  nameWithType: Vector2f.DotPerp
  fullName: g3.Vector2f.DotPerp
- uid: g3.Vector2f.AngleD*
  commentId: Overload:g3.Vector2f.AngleD
  name: AngleD
  nameWithType: Vector2f.AngleD
  fullName: g3.Vector2f.AngleD
- uid: g3.Vector2f.AngleR*
  commentId: Overload:g3.Vector2f.AngleR
  name: AngleR
  nameWithType: Vector2f.AngleR
  fullName: g3.Vector2f.AngleR
- uid: g3.Vector2f.DistanceSquared*
  commentId: Overload:g3.Vector2f.DistanceSquared
  name: DistanceSquared
  nameWithType: Vector2f.DistanceSquared
  fullName: g3.Vector2f.DistanceSquared
- uid: g3.Vector2f.Distance*
  commentId: Overload:g3.Vector2f.Distance
  name: Distance
  nameWithType: Vector2f.Distance
  fullName: g3.Vector2f.Distance
- uid: g3.Vector2f.Set*
  commentId: Overload:g3.Vector2f.Set
  name: Set
  nameWithType: Vector2f.Set
  fullName: g3.Vector2f.Set
- uid: g3.Vector2f.Add*
  commentId: Overload:g3.Vector2f.Add
  name: Add
  nameWithType: Vector2f.Add
  fullName: g3.Vector2f.Add
- uid: g3.Vector2f.Subtract*
  commentId: Overload:g3.Vector2f.Subtract
  name: Subtract
  nameWithType: Vector2f.Subtract
  fullName: g3.Vector2f.Subtract
- uid: g3.Vector2f.op_UnaryNegation*
  commentId: Overload:g3.Vector2f.op_UnaryNegation
  name: UnaryNegation
  nameWithType: Vector2f.UnaryNegation
  fullName: g3.Vector2f.UnaryNegation
- uid: g3.Vector2f.op_Addition*
  commentId: Overload:g3.Vector2f.op_Addition
  name: Addition
  nameWithType: Vector2f.Addition
  fullName: g3.Vector2f.Addition
- uid: g3.Vector2f.op_Subtraction*
  commentId: Overload:g3.Vector2f.op_Subtraction
  name: Subtraction
  nameWithType: Vector2f.Subtraction
  fullName: g3.Vector2f.Subtraction
- uid: g3.Vector2f.op_Multiply*
  commentId: Overload:g3.Vector2f.op_Multiply
  name: Multiply
  nameWithType: Vector2f.Multiply
  fullName: g3.Vector2f.Multiply
- uid: g3.Vector2f.op_Division*
  commentId: Overload:g3.Vector2f.op_Division
  name: Division
  nameWithType: Vector2f.Division
  fullName: g3.Vector2f.Division
- uid: g3.Vector2f.op_Equality*
  commentId: Overload:g3.Vector2f.op_Equality
  name: Equality
  nameWithType: Vector2f.Equality
  fullName: g3.Vector2f.Equality
- uid: g3.Vector2f.op_Inequality*
  commentId: Overload:g3.Vector2f.op_Inequality
  name: Inequality
  nameWithType: Vector2f.Inequality
  fullName: g3.Vector2f.Inequality
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.Vector2f.Equals*
  commentId: Overload:g3.Vector2f.Equals
  name: Equals
  nameWithType: Vector2f.Equals
  fullName: g3.Vector2f.Equals
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.Vector2f.GetHashCode*
  commentId: Overload:g3.Vector2f.GetHashCode
  name: GetHashCode
  nameWithType: Vector2f.GetHashCode
  fullName: g3.Vector2f.GetHashCode
- uid: g3.Vector2f.CompareTo*
  commentId: Overload:g3.Vector2f.CompareTo
  name: CompareTo
  nameWithType: Vector2f.CompareTo
  fullName: g3.Vector2f.CompareTo
- uid: g3.Vector2f.EpsilonEqual*
  commentId: Overload:g3.Vector2f.EpsilonEqual
  name: EpsilonEqual
  nameWithType: Vector2f.EpsilonEqual
  fullName: g3.Vector2f.EpsilonEqual
- uid: g3.Vector2f.Lerp*
  commentId: Overload:g3.Vector2f.Lerp
  name: Lerp
  nameWithType: Vector2f.Lerp
  fullName: g3.Vector2f.Lerp
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: g3.Vector2f.ToString*
  commentId: Overload:g3.Vector2f.ToString
  name: ToString
  nameWithType: Vector2f.ToString
  fullName: g3.Vector2f.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

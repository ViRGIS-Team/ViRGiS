### YamlMime:ManagedReference
items:
- uid: Virgis.VirgisComponent
  commentId: T:Virgis.VirgisComponent
  id: VirgisComponent
  parent: Virgis
  children:
  - Virgis.VirgisComponent.AddVertex(UnityEngine.Vector3)
  - Virgis.VirgisComponent.ExitEditSession(System.Boolean)
  - Virgis.VirgisComponent.GetClosest(UnityEngine.Vector3)
  - Virgis.VirgisComponent.GetGeometry``1
  - Virgis.VirgisComponent.gisId
  - Virgis.VirgisComponent.gisProperties
  - Virgis.VirgisComponent.id
  - Virgis.VirgisComponent.label
  - Virgis.VirgisComponent.mainMat
  - Virgis.VirgisComponent.MoveAxis(Virgis.MoveArgs)
  - Virgis.VirgisComponent.MoveTo(Virgis.MoveArgs)
  - Virgis.VirgisComponent.RemoveVertex(Virgis.VirgisComponent)
  - Virgis.VirgisComponent.Selected(Virgis.SelectionTypes)
  - Virgis.VirgisComponent.selectedMat
  - Virgis.VirgisComponent.SetMaterial(UnityEngine.Material,UnityEngine.Material)
  - Virgis.VirgisComponent.StartEditSession
  - Virgis.VirgisComponent.Translate(Virgis.MoveArgs)
  - Virgis.VirgisComponent.UnSelected(Virgis.SelectionTypes)
  - Virgis.VirgisComponent.VertexMove(Virgis.MoveArgs)
  langs:
  - csharp
  - vb
  name: VirgisComponent
  nameWithType: VirgisComponent
  fullName: Virgis.VirgisComponent
  type: Class
  source:
    remote:
      path: Assets/Scripts/Basic Types/VirgisComponent.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: VirgisComponent
    path: ../Assets/Scripts/Basic Types/VirgisComponent.cs
    startLine: 39
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: 'public abstract class VirgisComponent : MonoBehaviour, IVirgisComponent, IVirgisEntity'
    content.vb: >-
      Public MustInherit Class VirgisComponent
          Inherits MonoBehaviour
          Implements IVirgisComponent, IVirgisEntity
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  derivedClasses:
  - Virgis.Dataline
  - Virgis.Datapoint
  - Virgis.Datapolygon
  - Virgis.LineSegment
  implements:
  - Virgis.IVirgisComponent
  - Virgis.IVirgisEntity
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Virgis.VirgisComponent.mainMat
  commentId: F:Virgis.VirgisComponent.mainMat
  id: mainMat
  parent: Virgis.VirgisComponent
  langs:
  - csharp
  - vb
  name: mainMat
  nameWithType: VirgisComponent.mainMat
  fullName: Virgis.VirgisComponent.mainMat
  type: Field
  source:
    remote:
      path: Assets/Scripts/Basic Types/VirgisComponent.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: mainMat
    path: ../Assets/Scripts/Basic Types/VirgisComponent.cs
    startLine: 41
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: protected Material mainMat
    return:
      type: UnityEngine.Material
    content.vb: Protected mainMat As Material
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Virgis.VirgisComponent.selectedMat
  commentId: F:Virgis.VirgisComponent.selectedMat
  id: selectedMat
  parent: Virgis.VirgisComponent
  langs:
  - csharp
  - vb
  name: selectedMat
  nameWithType: VirgisComponent.selectedMat
  fullName: Virgis.VirgisComponent.selectedMat
  type: Field
  source:
    remote:
      path: Assets/Scripts/Basic Types/VirgisComponent.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: selectedMat
    path: ../Assets/Scripts/Basic Types/VirgisComponent.cs
    startLine: 42
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: protected Material selectedMat
    return:
      type: UnityEngine.Material
    content.vb: Protected selectedMat As Material
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Virgis.VirgisComponent.gisId
  commentId: F:Virgis.VirgisComponent.gisId
  id: gisId
  parent: Virgis.VirgisComponent
  langs:
  - csharp
  - vb
  name: gisId
  nameWithType: VirgisComponent.gisId
  fullName: Virgis.VirgisComponent.gisId
  type: Field
  source:
    remote:
      path: Assets/Scripts/Basic Types/VirgisComponent.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: gisId
    path: ../Assets/Scripts/Basic Types/VirgisComponent.cs
    startLine: 43
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public string gisId
    return:
      type: System.String
    content.vb: Public gisId As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.VirgisComponent.gisProperties
  commentId: F:Virgis.VirgisComponent.gisProperties
  id: gisProperties
  parent: Virgis.VirgisComponent
  langs:
  - csharp
  - vb
  name: gisProperties
  nameWithType: VirgisComponent.gisProperties
  fullName: Virgis.VirgisComponent.gisProperties
  type: Field
  source:
    remote:
      path: Assets/Scripts/Basic Types/VirgisComponent.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: gisProperties
    path: ../Assets/Scripts/Basic Types/VirgisComponent.cs
    startLine: 44
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public IDictionary<string, object> gisProperties
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public gisProperties As IDictionary(Of String, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.VirgisComponent.id
  commentId: F:Virgis.VirgisComponent.id
  id: id
  parent: Virgis.VirgisComponent
  langs:
  - csharp
  - vb
  name: id
  nameWithType: VirgisComponent.id
  fullName: Virgis.VirgisComponent.id
  type: Field
  source:
    remote:
      path: Assets/Scripts/Basic Types/VirgisComponent.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: id
    path: ../Assets/Scripts/Basic Types/VirgisComponent.cs
    startLine: 46
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public Guid id
    return:
      type: System.Guid
    content.vb: Public id As Guid
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.VirgisComponent.label
  commentId: F:Virgis.VirgisComponent.label
  id: label
  parent: Virgis.VirgisComponent
  langs:
  - csharp
  - vb
  name: label
  nameWithType: VirgisComponent.label
  fullName: Virgis.VirgisComponent.label
  type: Field
  source:
    remote:
      path: Assets/Scripts/Basic Types/VirgisComponent.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: label
    path: ../Assets/Scripts/Basic Types/VirgisComponent.cs
    startLine: 47
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  syntax:
    content: public Transform label
    return:
      type: UnityEngine.Transform
    content.vb: Public label As Transform
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Virgis.VirgisComponent.SetMaterial(UnityEngine.Material,UnityEngine.Material)
  commentId: M:Virgis.VirgisComponent.SetMaterial(UnityEngine.Material,UnityEngine.Material)
  id: SetMaterial(UnityEngine.Material,UnityEngine.Material)
  parent: Virgis.VirgisComponent
  langs:
  - csharp
  - vb
  name: SetMaterial(Material, Material)
  nameWithType: VirgisComponent.SetMaterial(Material, Material)
  fullName: Virgis.VirgisComponent.SetMaterial(UnityEngine.Material, UnityEngine.Material)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Basic Types/VirgisComponent.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: SetMaterial
    path: ../Assets/Scripts/Basic Types/VirgisComponent.cs
    startLine: 61
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  summary: "\nUse to set the material of the feature\n"
  example: []
  syntax:
    content: public virtual void SetMaterial(Material mainMat, Material selectedMat)
    parameters:
    - id: mainMat
      type: UnityEngine.Material
      description: Usual material
    - id: selectedMat
      type: UnityEngine.Material
      description: Material to be used when feature is selected
    content.vb: Public Overridable Sub SetMaterial(mainMat As Material, selectedMat As Material)
  overload: Virgis.VirgisComponent.SetMaterial*
  implements:
  - Virgis.IVirgisComponent.SetMaterial(UnityEngine.Material,UnityEngine.Material)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Virgis.VirgisComponent.Selected(Virgis.SelectionTypes)
  commentId: M:Virgis.VirgisComponent.Selected(Virgis.SelectionTypes)
  id: Selected(Virgis.SelectionTypes)
  parent: Virgis.VirgisComponent
  langs:
  - csharp
  - vb
  name: Selected(SelectionTypes)
  nameWithType: VirgisComponent.Selected(SelectionTypes)
  fullName: Virgis.VirgisComponent.Selected(Virgis.SelectionTypes)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Basic Types/VirgisComponent.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: Selected
    path: ../Assets/Scripts/Basic Types/VirgisComponent.cs
    startLine: 70
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  summary: "\nUse to tell the Component that it is selected\n"
  example: []
  syntax:
    content: public abstract void Selected(SelectionTypes button)
    parameters:
    - id: button
      type: Virgis.SelectionTypes
      description: SelectionType
    content.vb: Public MustOverride Sub Selected(button As SelectionTypes)
  overload: Virgis.VirgisComponent.Selected*
  implements:
  - Virgis.IVirgisEntity.Selected(Virgis.SelectionTypes)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Virgis.VirgisComponent.UnSelected(Virgis.SelectionTypes)
  commentId: M:Virgis.VirgisComponent.UnSelected(Virgis.SelectionTypes)
  id: UnSelected(Virgis.SelectionTypes)
  parent: Virgis.VirgisComponent
  langs:
  - csharp
  - vb
  name: UnSelected(SelectionTypes)
  nameWithType: VirgisComponent.UnSelected(SelectionTypes)
  fullName: Virgis.VirgisComponent.UnSelected(Virgis.SelectionTypes)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Basic Types/VirgisComponent.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: UnSelected
    path: ../Assets/Scripts/Basic Types/VirgisComponent.cs
    startLine: 76
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  summary: "\nUse to tell the Component that it is un selected\n"
  example: []
  syntax:
    content: public abstract void UnSelected(SelectionTypes button)
    parameters:
    - id: button
      type: Virgis.SelectionTypes
      description: SelectionType
    content.vb: Public MustOverride Sub UnSelected(button As SelectionTypes)
  overload: Virgis.VirgisComponent.UnSelected*
  implements:
  - Virgis.IVirgisEntity.UnSelected(Virgis.SelectionTypes)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Virgis.VirgisComponent.StartEditSession
  commentId: M:Virgis.VirgisComponent.StartEditSession
  id: StartEditSession
  parent: Virgis.VirgisComponent
  langs:
  - csharp
  - vb
  name: StartEditSession()
  nameWithType: VirgisComponent.StartEditSession()
  fullName: Virgis.VirgisComponent.StartEditSession()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Basic Types/VirgisComponent.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: StartEditSession
    path: ../Assets/Scripts/Basic Types/VirgisComponent.cs
    startLine: 81
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  summary: "\nCalled when an edit session starts\n"
  example: []
  syntax:
    content: public virtual void StartEditSession()
    content.vb: Public Overridable Sub StartEditSession
  overload: Virgis.VirgisComponent.StartEditSession*
  implements:
  - Virgis.IVirgisEntity.StartEditSession
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Virgis.VirgisComponent.ExitEditSession(System.Boolean)
  commentId: M:Virgis.VirgisComponent.ExitEditSession(System.Boolean)
  id: ExitEditSession(System.Boolean)
  parent: Virgis.VirgisComponent
  langs:
  - csharp
  - vb
  name: ExitEditSession(Boolean)
  nameWithType: VirgisComponent.ExitEditSession(Boolean)
  fullName: Virgis.VirgisComponent.ExitEditSession(System.Boolean)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Basic Types/VirgisComponent.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: ExitEditSession
    path: ../Assets/Scripts/Basic Types/VirgisComponent.cs
    startLine: 88
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  summary: "\nCalled when an edit session ends\n"
  example: []
  syntax:
    content: public virtual void ExitEditSession(bool saved)
    parameters:
    - id: saved
      type: System.Boolean
    content.vb: Public Overridable Sub ExitEditSession(saved As Boolean)
  overload: Virgis.VirgisComponent.ExitEditSession*
  implements:
  - Virgis.IVirgisEntity.ExitEditSession(System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Virgis.VirgisComponent.MoveTo(Virgis.MoveArgs)
  commentId: M:Virgis.VirgisComponent.MoveTo(Virgis.MoveArgs)
  id: MoveTo(Virgis.MoveArgs)
  parent: Virgis.VirgisComponent
  langs:
  - csharp
  - vb
  name: MoveTo(MoveArgs)
  nameWithType: VirgisComponent.MoveTo(MoveArgs)
  fullName: Virgis.VirgisComponent.MoveTo(Virgis.MoveArgs)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Basic Types/VirgisComponent.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: MoveTo
    path: ../Assets/Scripts/Basic Types/VirgisComponent.cs
    startLine: 96
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  summary: "\nSent by the UI to request this component to move.\n"
  example: []
  syntax:
    content: public abstract void MoveTo(MoveArgs args)
    parameters:
    - id: args
      type: Virgis.MoveArgs
      description: 'MoveArgs : Either a trabslate vectir OR a Vector position to move to, both in World space coordinates'
    content.vb: Public MustOverride Sub MoveTo(args As MoveArgs)
  overload: Virgis.VirgisComponent.MoveTo*
  implements:
  - Virgis.IVirgisComponent.MoveTo(Virgis.MoveArgs)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Virgis.VirgisComponent.MoveAxis(Virgis.MoveArgs)
  commentId: M:Virgis.VirgisComponent.MoveAxis(Virgis.MoveArgs)
  id: MoveAxis(Virgis.MoveArgs)
  parent: Virgis.VirgisComponent
  langs:
  - csharp
  - vb
  name: MoveAxis(MoveArgs)
  nameWithType: VirgisComponent.MoveAxis(MoveArgs)
  fullName: Virgis.VirgisComponent.MoveAxis(Virgis.MoveArgs)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Basic Types/VirgisComponent.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: MoveAxis
    path: ../Assets/Scripts/Basic Types/VirgisComponent.cs
    startLine: 102
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  summary: "\nreceived when a Move Axis request is made by the user\n"
  example: []
  syntax:
    content: public abstract void MoveAxis(MoveArgs args)
    parameters:
    - id: args
      type: Virgis.MoveArgs
    content.vb: Public MustOverride Sub MoveAxis(args As MoveArgs)
  overload: Virgis.VirgisComponent.MoveAxis*
  implements:
  - Virgis.IVirgisComponent.MoveAxis(Virgis.MoveArgs)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Virgis.VirgisComponent.Translate(Virgis.MoveArgs)
  commentId: M:Virgis.VirgisComponent.Translate(Virgis.MoveArgs)
  id: Translate(Virgis.MoveArgs)
  parent: Virgis.VirgisComponent
  langs:
  - csharp
  - vb
  name: Translate(MoveArgs)
  nameWithType: VirgisComponent.Translate(MoveArgs)
  fullName: Virgis.VirgisComponent.Translate(Virgis.MoveArgs)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Basic Types/VirgisComponent.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: Translate
    path: ../Assets/Scripts/Basic Types/VirgisComponent.cs
    startLine: 108
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  summary: "\nCalled when a child component is translated by User action\n"
  example: []
  syntax:
    content: public abstract void Translate(MoveArgs args)
    parameters:
    - id: args
      type: Virgis.MoveArgs
      description: MoveArgs
    content.vb: Public MustOverride Sub Translate(args As MoveArgs)
  overload: Virgis.VirgisComponent.Translate*
  implements:
  - Virgis.IVirgisComponent.Translate(Virgis.MoveArgs)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Virgis.VirgisComponent.VertexMove(Virgis.MoveArgs)
  commentId: M:Virgis.VirgisComponent.VertexMove(Virgis.MoveArgs)
  id: VertexMove(Virgis.MoveArgs)
  parent: Virgis.VirgisComponent
  langs:
  - csharp
  - vb
  name: VertexMove(MoveArgs)
  nameWithType: VirgisComponent.VertexMove(MoveArgs)
  fullName: Virgis.VirgisComponent.VertexMove(Virgis.MoveArgs)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Basic Types/VirgisComponent.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: VertexMove
    path: ../Assets/Scripts/Basic Types/VirgisComponent.cs
    startLine: 114
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  summary: "\nCalled when a child Vertex moves to the point in the MoveArgs - which is in World Coordinates\n"
  example: []
  syntax:
    content: public abstract void VertexMove(MoveArgs args)
    parameters:
    - id: args
      type: Virgis.MoveArgs
    content.vb: Public MustOverride Sub VertexMove(args As MoveArgs)
  overload: Virgis.VirgisComponent.VertexMove*
  implements:
  - Virgis.IVirgisComponent.VertexMove(Virgis.MoveArgs)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Virgis.VirgisComponent.GetClosest(UnityEngine.Vector3)
  commentId: M:Virgis.VirgisComponent.GetClosest(UnityEngine.Vector3)
  id: GetClosest(UnityEngine.Vector3)
  parent: Virgis.VirgisComponent
  langs:
  - csharp
  - vb
  name: GetClosest(Vector3)
  nameWithType: VirgisComponent.GetClosest(Vector3)
  fullName: Virgis.VirgisComponent.GetClosest(UnityEngine.Vector3)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Basic Types/VirgisComponent.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: GetClosest
    path: ../Assets/Scripts/Basic Types/VirgisComponent.cs
    startLine: 121
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  summary: "\nGets the closest point of the faeture geometry to the coordinates\n"
  example: []
  syntax:
    content: public abstract Vector3 GetClosest(Vector3 coords)
    parameters:
    - id: coords
      type: UnityEngine.Vector3
      description: 'Vector3 Target Coordinates '
    return:
      type: UnityEngine.Vector3
      description: 'Vector3 in world space coordinates '
    content.vb: Public MustOverride Function GetClosest(coords As Vector3) As Vector3
  overload: Virgis.VirgisComponent.GetClosest*
  implements:
  - Virgis.IVirgisComponent.GetClosest(UnityEngine.Vector3)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Virgis.VirgisComponent.AddVertex(UnityEngine.Vector3)
  commentId: M:Virgis.VirgisComponent.AddVertex(UnityEngine.Vector3)
  id: AddVertex(UnityEngine.Vector3)
  parent: Virgis.VirgisComponent
  langs:
  - csharp
  - vb
  name: AddVertex(Vector3)
  nameWithType: VirgisComponent.AddVertex(Vector3)
  fullName: Virgis.VirgisComponent.AddVertex(UnityEngine.Vector3)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Basic Types/VirgisComponent.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: AddVertex
    path: ../Assets/Scripts/Basic Types/VirgisComponent.cs
    startLine: 128
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  summary: "\ncall this to add a vertex to a feature.\n"
  example: []
  syntax:
    content: public virtual VirgisComponent AddVertex(Vector3 position)
    parameters:
    - id: position
      type: UnityEngine.Vector3
      description: Vector3
    return:
      type: Virgis.VirgisComponent
      description: VirgisComponent The new vertex
    content.vb: Public Overridable Function AddVertex(position As Vector3) As VirgisComponent
  overload: Virgis.VirgisComponent.AddVertex*
  implements:
  - Virgis.IVirgisComponent.AddVertex(UnityEngine.Vector3)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Virgis.VirgisComponent.RemoveVertex(Virgis.VirgisComponent)
  commentId: M:Virgis.VirgisComponent.RemoveVertex(Virgis.VirgisComponent)
  id: RemoveVertex(Virgis.VirgisComponent)
  parent: Virgis.VirgisComponent
  langs:
  - csharp
  - vb
  name: RemoveVertex(VirgisComponent)
  nameWithType: VirgisComponent.RemoveVertex(VirgisComponent)
  fullName: Virgis.VirgisComponent.RemoveVertex(Virgis.VirgisComponent)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Basic Types/VirgisComponent.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: RemoveVertex
    path: ../Assets/Scripts/Basic Types/VirgisComponent.cs
    startLine: 137
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  summary: "\ncall this to remove a vertxe from a feature\n"
  example: []
  syntax:
    content: public virtual void RemoveVertex(VirgisComponent vertex)
    parameters:
    - id: vertex
      type: Virgis.VirgisComponent
      description: Vertex to remove
    content.vb: Public Overridable Sub RemoveVertex(vertex As VirgisComponent)
  overload: Virgis.VirgisComponent.RemoveVertex*
  implements:
  - Virgis.IVirgisComponent.RemoveVertex(Virgis.VirgisComponent)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Virgis.VirgisComponent.GetGeometry``1
  commentId: M:Virgis.VirgisComponent.GetGeometry``1
  id: GetGeometry``1
  parent: Virgis.VirgisComponent
  langs:
  - csharp
  - vb
  name: GetGeometry<T>()
  nameWithType: VirgisComponent.GetGeometry<T>()
  fullName: Virgis.VirgisComponent.GetGeometry<T>()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Basic Types/VirgisComponent.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: GetGeometry
    path: ../Assets/Scripts/Basic Types/VirgisComponent.cs
    startLine: 147
  assemblies:
  - Assembly-CSharp
  namespace: Virgis
  summary: "\nGet Geometry from the Feature\n"
  example: []
  syntax:
    content: public abstract T GetGeometry<T>()
    typeParameters:
    - id: T
      description: The Type of the geometry
    return:
      type: '{T}'
      description: 'Gemoetry of type T '
    content.vb: Public MustOverride Function GetGeometry(Of T) As T
  overload: Virgis.VirgisComponent.GetGeometry*
  implements:
  - Virgis.IVirgisComponent.GetGeometry``1
  nameWithType.vb: VirgisComponent.GetGeometry(Of T)()
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Virgis.VirgisComponent.GetGeometry(Of T)()
  name.vb: GetGeometry(Of T)()
references:
- uid: Virgis
  commentId: N:Virgis
  name: Virgis
  nameWithType: Virgis
  fullName: Virgis
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: Virgis.IVirgisComponent
  commentId: T:Virgis.IVirgisComponent
  parent: Virgis
  name: IVirgisComponent
  nameWithType: IVirgisComponent
  fullName: Virgis.IVirgisComponent
- uid: Virgis.IVirgisEntity
  commentId: T:Virgis.IVirgisEntity
  parent: Virgis
  name: IVirgisEntity
  nameWithType: IVirgisEntity
  fullName: Virgis.IVirgisEntity
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: UnityEngine.Material
  commentId: T:UnityEngine.Material
  parent: UnityEngine
  isExternal: true
  name: Material
  nameWithType: Material
  fullName: UnityEngine.Material
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: UnityEngine.Transform
  commentId: T:UnityEngine.Transform
  parent: UnityEngine
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: UnityEngine.Transform
- uid: Virgis.VirgisComponent.SetMaterial*
  commentId: Overload:Virgis.VirgisComponent.SetMaterial
  name: SetMaterial
  nameWithType: VirgisComponent.SetMaterial
  fullName: Virgis.VirgisComponent.SetMaterial
- uid: Virgis.IVirgisComponent.SetMaterial(UnityEngine.Material,UnityEngine.Material)
  commentId: M:Virgis.IVirgisComponent.SetMaterial(UnityEngine.Material,UnityEngine.Material)
  parent: Virgis.IVirgisComponent
  isExternal: true
  name: SetMaterial(Material, Material)
  nameWithType: IVirgisComponent.SetMaterial(Material, Material)
  fullName: Virgis.IVirgisComponent.SetMaterial(UnityEngine.Material, UnityEngine.Material)
  spec.csharp:
  - uid: Virgis.IVirgisComponent.SetMaterial(UnityEngine.Material,UnityEngine.Material)
    name: SetMaterial
    nameWithType: IVirgisComponent.SetMaterial
    fullName: Virgis.IVirgisComponent.SetMaterial
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.IVirgisComponent.SetMaterial(UnityEngine.Material,UnityEngine.Material)
    name: SetMaterial
    nameWithType: IVirgisComponent.SetMaterial
    fullName: Virgis.IVirgisComponent.SetMaterial
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Material
    name: Material
    nameWithType: Material
    fullName: UnityEngine.Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisComponent.Selected*
  commentId: Overload:Virgis.VirgisComponent.Selected
  name: Selected
  nameWithType: VirgisComponent.Selected
  fullName: Virgis.VirgisComponent.Selected
- uid: Virgis.IVirgisEntity.Selected(Virgis.SelectionTypes)
  commentId: M:Virgis.IVirgisEntity.Selected(Virgis.SelectionTypes)
  parent: Virgis.IVirgisEntity
  name: Selected(SelectionTypes)
  nameWithType: IVirgisEntity.Selected(SelectionTypes)
  fullName: Virgis.IVirgisEntity.Selected(Virgis.SelectionTypes)
  spec.csharp:
  - uid: Virgis.IVirgisEntity.Selected(Virgis.SelectionTypes)
    name: Selected
    nameWithType: IVirgisEntity.Selected
    fullName: Virgis.IVirgisEntity.Selected
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.SelectionTypes
    name: SelectionTypes
    nameWithType: SelectionTypes
    fullName: Virgis.SelectionTypes
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.IVirgisEntity.Selected(Virgis.SelectionTypes)
    name: Selected
    nameWithType: IVirgisEntity.Selected
    fullName: Virgis.IVirgisEntity.Selected
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.SelectionTypes
    name: SelectionTypes
    nameWithType: SelectionTypes
    fullName: Virgis.SelectionTypes
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.SelectionTypes
  commentId: T:Virgis.SelectionTypes
  parent: Virgis
  name: SelectionTypes
  nameWithType: SelectionTypes
  fullName: Virgis.SelectionTypes
- uid: Virgis.VirgisComponent.UnSelected*
  commentId: Overload:Virgis.VirgisComponent.UnSelected
  name: UnSelected
  nameWithType: VirgisComponent.UnSelected
  fullName: Virgis.VirgisComponent.UnSelected
- uid: Virgis.IVirgisEntity.UnSelected(Virgis.SelectionTypes)
  commentId: M:Virgis.IVirgisEntity.UnSelected(Virgis.SelectionTypes)
  parent: Virgis.IVirgisEntity
  name: UnSelected(SelectionTypes)
  nameWithType: IVirgisEntity.UnSelected(SelectionTypes)
  fullName: Virgis.IVirgisEntity.UnSelected(Virgis.SelectionTypes)
  spec.csharp:
  - uid: Virgis.IVirgisEntity.UnSelected(Virgis.SelectionTypes)
    name: UnSelected
    nameWithType: IVirgisEntity.UnSelected
    fullName: Virgis.IVirgisEntity.UnSelected
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.SelectionTypes
    name: SelectionTypes
    nameWithType: SelectionTypes
    fullName: Virgis.SelectionTypes
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.IVirgisEntity.UnSelected(Virgis.SelectionTypes)
    name: UnSelected
    nameWithType: IVirgisEntity.UnSelected
    fullName: Virgis.IVirgisEntity.UnSelected
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.SelectionTypes
    name: SelectionTypes
    nameWithType: SelectionTypes
    fullName: Virgis.SelectionTypes
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisComponent.StartEditSession*
  commentId: Overload:Virgis.VirgisComponent.StartEditSession
  name: StartEditSession
  nameWithType: VirgisComponent.StartEditSession
  fullName: Virgis.VirgisComponent.StartEditSession
- uid: Virgis.IVirgisEntity.StartEditSession
  commentId: M:Virgis.IVirgisEntity.StartEditSession
  parent: Virgis.IVirgisEntity
  name: StartEditSession()
  nameWithType: IVirgisEntity.StartEditSession()
  fullName: Virgis.IVirgisEntity.StartEditSession()
  spec.csharp:
  - uid: Virgis.IVirgisEntity.StartEditSession
    name: StartEditSession
    nameWithType: IVirgisEntity.StartEditSession
    fullName: Virgis.IVirgisEntity.StartEditSession
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.IVirgisEntity.StartEditSession
    name: StartEditSession
    nameWithType: IVirgisEntity.StartEditSession
    fullName: Virgis.IVirgisEntity.StartEditSession
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisComponent.ExitEditSession*
  commentId: Overload:Virgis.VirgisComponent.ExitEditSession
  name: ExitEditSession
  nameWithType: VirgisComponent.ExitEditSession
  fullName: Virgis.VirgisComponent.ExitEditSession
- uid: Virgis.IVirgisEntity.ExitEditSession(System.Boolean)
  commentId: M:Virgis.IVirgisEntity.ExitEditSession(System.Boolean)
  parent: Virgis.IVirgisEntity
  isExternal: true
  name: ExitEditSession(Boolean)
  nameWithType: IVirgisEntity.ExitEditSession(Boolean)
  fullName: Virgis.IVirgisEntity.ExitEditSession(System.Boolean)
  spec.csharp:
  - uid: Virgis.IVirgisEntity.ExitEditSession(System.Boolean)
    name: ExitEditSession
    nameWithType: IVirgisEntity.ExitEditSession
    fullName: Virgis.IVirgisEntity.ExitEditSession
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.IVirgisEntity.ExitEditSession(System.Boolean)
    name: ExitEditSession
    nameWithType: IVirgisEntity.ExitEditSession
    fullName: Virgis.IVirgisEntity.ExitEditSession
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Virgis.VirgisComponent.MoveTo*
  commentId: Overload:Virgis.VirgisComponent.MoveTo
  name: MoveTo
  nameWithType: VirgisComponent.MoveTo
  fullName: Virgis.VirgisComponent.MoveTo
- uid: Virgis.IVirgisComponent.MoveTo(Virgis.MoveArgs)
  commentId: M:Virgis.IVirgisComponent.MoveTo(Virgis.MoveArgs)
  parent: Virgis.IVirgisComponent
  name: MoveTo(MoveArgs)
  nameWithType: IVirgisComponent.MoveTo(MoveArgs)
  fullName: Virgis.IVirgisComponent.MoveTo(Virgis.MoveArgs)
  spec.csharp:
  - uid: Virgis.IVirgisComponent.MoveTo(Virgis.MoveArgs)
    name: MoveTo
    nameWithType: IVirgisComponent.MoveTo
    fullName: Virgis.IVirgisComponent.MoveTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.IVirgisComponent.MoveTo(Virgis.MoveArgs)
    name: MoveTo
    nameWithType: IVirgisComponent.MoveTo
    fullName: Virgis.IVirgisComponent.MoveTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.MoveArgs
  commentId: T:Virgis.MoveArgs
  parent: Virgis
  name: MoveArgs
  nameWithType: MoveArgs
  fullName: Virgis.MoveArgs
- uid: Virgis.VirgisComponent.MoveAxis*
  commentId: Overload:Virgis.VirgisComponent.MoveAxis
  name: MoveAxis
  nameWithType: VirgisComponent.MoveAxis
  fullName: Virgis.VirgisComponent.MoveAxis
- uid: Virgis.IVirgisComponent.MoveAxis(Virgis.MoveArgs)
  commentId: M:Virgis.IVirgisComponent.MoveAxis(Virgis.MoveArgs)
  parent: Virgis.IVirgisComponent
  name: MoveAxis(MoveArgs)
  nameWithType: IVirgisComponent.MoveAxis(MoveArgs)
  fullName: Virgis.IVirgisComponent.MoveAxis(Virgis.MoveArgs)
  spec.csharp:
  - uid: Virgis.IVirgisComponent.MoveAxis(Virgis.MoveArgs)
    name: MoveAxis
    nameWithType: IVirgisComponent.MoveAxis
    fullName: Virgis.IVirgisComponent.MoveAxis
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.IVirgisComponent.MoveAxis(Virgis.MoveArgs)
    name: MoveAxis
    nameWithType: IVirgisComponent.MoveAxis
    fullName: Virgis.IVirgisComponent.MoveAxis
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisComponent.Translate*
  commentId: Overload:Virgis.VirgisComponent.Translate
  name: Translate
  nameWithType: VirgisComponent.Translate
  fullName: Virgis.VirgisComponent.Translate
- uid: Virgis.IVirgisComponent.Translate(Virgis.MoveArgs)
  commentId: M:Virgis.IVirgisComponent.Translate(Virgis.MoveArgs)
  parent: Virgis.IVirgisComponent
  name: Translate(MoveArgs)
  nameWithType: IVirgisComponent.Translate(MoveArgs)
  fullName: Virgis.IVirgisComponent.Translate(Virgis.MoveArgs)
  spec.csharp:
  - uid: Virgis.IVirgisComponent.Translate(Virgis.MoveArgs)
    name: Translate
    nameWithType: IVirgisComponent.Translate
    fullName: Virgis.IVirgisComponent.Translate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.IVirgisComponent.Translate(Virgis.MoveArgs)
    name: Translate
    nameWithType: IVirgisComponent.Translate
    fullName: Virgis.IVirgisComponent.Translate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisComponent.VertexMove*
  commentId: Overload:Virgis.VirgisComponent.VertexMove
  name: VertexMove
  nameWithType: VirgisComponent.VertexMove
  fullName: Virgis.VirgisComponent.VertexMove
- uid: Virgis.IVirgisComponent.VertexMove(Virgis.MoveArgs)
  commentId: M:Virgis.IVirgisComponent.VertexMove(Virgis.MoveArgs)
  parent: Virgis.IVirgisComponent
  name: VertexMove(MoveArgs)
  nameWithType: IVirgisComponent.VertexMove(MoveArgs)
  fullName: Virgis.IVirgisComponent.VertexMove(Virgis.MoveArgs)
  spec.csharp:
  - uid: Virgis.IVirgisComponent.VertexMove(Virgis.MoveArgs)
    name: VertexMove
    nameWithType: IVirgisComponent.VertexMove
    fullName: Virgis.IVirgisComponent.VertexMove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.IVirgisComponent.VertexMove(Virgis.MoveArgs)
    name: VertexMove
    nameWithType: IVirgisComponent.VertexMove
    fullName: Virgis.IVirgisComponent.VertexMove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.MoveArgs
    name: MoveArgs
    nameWithType: MoveArgs
    fullName: Virgis.MoveArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisComponent.GetClosest*
  commentId: Overload:Virgis.VirgisComponent.GetClosest
  name: GetClosest
  nameWithType: VirgisComponent.GetClosest
  fullName: Virgis.VirgisComponent.GetClosest
- uid: Virgis.IVirgisComponent.GetClosest(UnityEngine.Vector3)
  commentId: M:Virgis.IVirgisComponent.GetClosest(UnityEngine.Vector3)
  parent: Virgis.IVirgisComponent
  isExternal: true
  name: GetClosest(Vector3)
  nameWithType: IVirgisComponent.GetClosest(Vector3)
  fullName: Virgis.IVirgisComponent.GetClosest(UnityEngine.Vector3)
  spec.csharp:
  - uid: Virgis.IVirgisComponent.GetClosest(UnityEngine.Vector3)
    name: GetClosest
    nameWithType: IVirgisComponent.GetClosest
    fullName: Virgis.IVirgisComponent.GetClosest
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.IVirgisComponent.GetClosest(UnityEngine.Vector3)
    name: GetClosest
    nameWithType: IVirgisComponent.GetClosest
    fullName: Virgis.IVirgisComponent.GetClosest
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: Virgis.VirgisComponent.AddVertex*
  commentId: Overload:Virgis.VirgisComponent.AddVertex
  name: AddVertex
  nameWithType: VirgisComponent.AddVertex
  fullName: Virgis.VirgisComponent.AddVertex
- uid: Virgis.IVirgisComponent.AddVertex(UnityEngine.Vector3)
  commentId: M:Virgis.IVirgisComponent.AddVertex(UnityEngine.Vector3)
  parent: Virgis.IVirgisComponent
  isExternal: true
  name: AddVertex(Vector3)
  nameWithType: IVirgisComponent.AddVertex(Vector3)
  fullName: Virgis.IVirgisComponent.AddVertex(UnityEngine.Vector3)
  spec.csharp:
  - uid: Virgis.IVirgisComponent.AddVertex(UnityEngine.Vector3)
    name: AddVertex
    nameWithType: IVirgisComponent.AddVertex
    fullName: Virgis.IVirgisComponent.AddVertex
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.IVirgisComponent.AddVertex(UnityEngine.Vector3)
    name: AddVertex
    nameWithType: IVirgisComponent.AddVertex
    fullName: Virgis.IVirgisComponent.AddVertex
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisComponent
  commentId: T:Virgis.VirgisComponent
  parent: Virgis
  name: VirgisComponent
  nameWithType: VirgisComponent
  fullName: Virgis.VirgisComponent
- uid: Virgis.VirgisComponent.RemoveVertex*
  commentId: Overload:Virgis.VirgisComponent.RemoveVertex
  name: RemoveVertex
  nameWithType: VirgisComponent.RemoveVertex
  fullName: Virgis.VirgisComponent.RemoveVertex
- uid: Virgis.IVirgisComponent.RemoveVertex(Virgis.VirgisComponent)
  commentId: M:Virgis.IVirgisComponent.RemoveVertex(Virgis.VirgisComponent)
  parent: Virgis.IVirgisComponent
  name: RemoveVertex(VirgisComponent)
  nameWithType: IVirgisComponent.RemoveVertex(VirgisComponent)
  fullName: Virgis.IVirgisComponent.RemoveVertex(Virgis.VirgisComponent)
  spec.csharp:
  - uid: Virgis.IVirgisComponent.RemoveVertex(Virgis.VirgisComponent)
    name: RemoveVertex
    nameWithType: IVirgisComponent.RemoveVertex
    fullName: Virgis.IVirgisComponent.RemoveVertex
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.VirgisComponent
    name: VirgisComponent
    nameWithType: VirgisComponent
    fullName: Virgis.VirgisComponent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.IVirgisComponent.RemoveVertex(Virgis.VirgisComponent)
    name: RemoveVertex
    nameWithType: IVirgisComponent.RemoveVertex
    fullName: Virgis.IVirgisComponent.RemoveVertex
  - name: (
    nameWithType: (
    fullName: (
  - uid: Virgis.VirgisComponent
    name: VirgisComponent
    nameWithType: VirgisComponent
    fullName: Virgis.VirgisComponent
  - name: )
    nameWithType: )
    fullName: )
- uid: Virgis.VirgisComponent.GetGeometry*
  commentId: Overload:Virgis.VirgisComponent.GetGeometry
  name: GetGeometry
  nameWithType: VirgisComponent.GetGeometry
  fullName: Virgis.VirgisComponent.GetGeometry
- uid: Virgis.IVirgisComponent.GetGeometry``1
  commentId: M:Virgis.IVirgisComponent.GetGeometry``1
  parent: Virgis.IVirgisComponent
  name: GetGeometry<T>()
  nameWithType: IVirgisComponent.GetGeometry<T>()
  fullName: Virgis.IVirgisComponent.GetGeometry<T>()
  nameWithType.vb: IVirgisComponent.GetGeometry(Of T)()
  fullName.vb: Virgis.IVirgisComponent.GetGeometry(Of T)()
  name.vb: GetGeometry(Of T)()
  spec.csharp:
  - uid: Virgis.IVirgisComponent.GetGeometry``1
    name: GetGeometry<T>
    nameWithType: IVirgisComponent.GetGeometry<T>
    fullName: Virgis.IVirgisComponent.GetGeometry<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Virgis.IVirgisComponent.GetGeometry``1
    name: GetGeometry(Of T)
    nameWithType: IVirgisComponent.GetGeometry(Of T)
    fullName: Virgis.IVirgisComponent.GetGeometry(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T

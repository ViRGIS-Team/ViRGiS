### YamlMime:ManagedReference
items:
- uid: g3.VectorArray2`1
  commentId: T:g3.VectorArray2`1
  id: VectorArray2`1
  parent: g3
  children:
  - g3.VectorArray2`1.#ctor(`0[])
  - g3.VectorArray2`1.#ctor(System.Int32)
  - g3.VectorArray2`1.array
  - g3.VectorArray2`1.Count
  - g3.VectorArray2`1.GetEnumerator
  - g3.VectorArray2`1.Resize(System.Int32)
  - g3.VectorArray2`1.Set(System.Int32,`0,`0)
  - g3.VectorArray2`1.Set(System.Int32,System.Int32,g3.VectorArray2{`0})
  langs:
  - csharp
  - vb
  name: VectorArray2<T>
  nameWithType: VectorArray2<T>
  fullName: g3.VectorArray2<T>
  type: Class
  source:
    remote:
      path: Assets/geometry3Sharp/core/VectorArray.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: VectorArray2
    path: ../Assets/geometry3Sharp/core/VectorArray.cs
    startLine: 174
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: 'public class VectorArray2<T> : IEnumerable<T>, IEnumerable'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class VectorArray2(Of T)
          Implements IEnumerable(Of T), IEnumerable
  inheritance:
  - System.Object
  derivedClasses:
  - g3.IndexArray2i
  - g3.VectorArray2d
  - g3.VectorArray2f
  nameWithType.vb: VectorArray2(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: g3.VectorArray2(Of T)
  name.vb: VectorArray2(Of T)
- uid: g3.VectorArray2`1.array
  commentId: F:g3.VectorArray2`1.array
  id: array
  parent: g3.VectorArray2`1
  langs:
  - csharp
  - vb
  name: array
  nameWithType: VectorArray2<T>.array
  fullName: g3.VectorArray2<T>.array
  type: Field
  source:
    remote:
      path: Assets/geometry3Sharp/core/VectorArray.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: array
    path: ../Assets/geometry3Sharp/core/VectorArray.cs
    startLine: 176
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public T[] array
    return:
      type: '{T}[]'
    content.vb: Public array As T()
  nameWithType.vb: VectorArray2(Of T).array
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.VectorArray2(Of T).array
- uid: g3.VectorArray2`1.#ctor(System.Int32)
  commentId: M:g3.VectorArray2`1.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: g3.VectorArray2`1
  langs:
  - csharp
  - vb
  name: VectorArray2(Int32)
  nameWithType: VectorArray2<T>.VectorArray2(Int32)
  fullName: g3.VectorArray2<T>.VectorArray2(System.Int32)
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/core/VectorArray.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/core/VectorArray.cs
    startLine: 178
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public VectorArray2(int nCount = 0)
    parameters:
    - id: nCount
      type: System.Int32
    content.vb: Public Sub New(nCount As Integer = 0)
  overload: g3.VectorArray2`1.#ctor*
  nameWithType.vb: VectorArray2(Of T).VectorArray2(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.VectorArray2(Of T).VectorArray2(System.Int32)
- uid: g3.VectorArray2`1.#ctor(`0[])
  commentId: M:g3.VectorArray2`1.#ctor(`0[])
  id: '#ctor(`0[])'
  parent: g3.VectorArray2`1
  langs:
  - csharp
  - vb
  name: VectorArray2(T[])
  nameWithType: VectorArray2<T>.VectorArray2(T[])
  fullName: g3.VectorArray2<T>.VectorArray2(T[])
  type: Constructor
  source:
    remote:
      path: Assets/geometry3Sharp/core/VectorArray.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/geometry3Sharp/core/VectorArray.cs
    startLine: 183
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public VectorArray2(T[] data)
    parameters:
    - id: data
      type: '{T}[]'
    content.vb: Public Sub New(data As T())
  overload: g3.VectorArray2`1.#ctor*
  nameWithType.vb: VectorArray2(Of T).VectorArray2(T())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.VectorArray2(Of T).VectorArray2(T())
  name.vb: VectorArray2(T())
- uid: g3.VectorArray2`1.Count
  commentId: P:g3.VectorArray2`1.Count
  id: Count
  parent: g3.VectorArray2`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: VectorArray2<T>.Count
  fullName: g3.VectorArray2<T>.Count
  type: Property
  source:
    remote:
      path: Assets/geometry3Sharp/core/VectorArray.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Count
    path: ../Assets/geometry3Sharp/core/VectorArray.cs
    startLine: 188
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: g3.VectorArray2`1.Count*
  nameWithType.vb: VectorArray2(Of T).Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: g3.VectorArray2(Of T).Count
- uid: g3.VectorArray2`1.GetEnumerator
  commentId: M:g3.VectorArray2`1.GetEnumerator
  id: GetEnumerator
  parent: g3.VectorArray2`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: VectorArray2<T>.GetEnumerator()
  fullName: g3.VectorArray2<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/VectorArray.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: GetEnumerator
    path: ../Assets/geometry3Sharp/core/VectorArray.cs
    startLine: 193
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public IEnumerator<T> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
    content.vb: Public Function GetEnumerator As IEnumerator(Of T)
  overload: g3.VectorArray2`1.GetEnumerator*
  nameWithType.vb: VectorArray2(Of T).GetEnumerator()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.VectorArray2(Of T).GetEnumerator()
- uid: g3.VectorArray2`1.Resize(System.Int32)
  commentId: M:g3.VectorArray2`1.Resize(System.Int32)
  id: Resize(System.Int32)
  parent: g3.VectorArray2`1
  langs:
  - csharp
  - vb
  name: Resize(Int32)
  nameWithType: VectorArray2<T>.Resize(Int32)
  fullName: g3.VectorArray2<T>.Resize(System.Int32)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/VectorArray.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Resize
    path: ../Assets/geometry3Sharp/core/VectorArray.cs
    startLine: 199
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Resize(int Count)
    parameters:
    - id: Count
      type: System.Int32
    content.vb: Public Sub Resize(Count As Integer)
  overload: g3.VectorArray2`1.Resize*
  nameWithType.vb: VectorArray2(Of T).Resize(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.VectorArray2(Of T).Resize(System.Int32)
- uid: g3.VectorArray2`1.Set(System.Int32,`0,`0)
  commentId: M:g3.VectorArray2`1.Set(System.Int32,`0,`0)
  id: Set(System.Int32,`0,`0)
  parent: g3.VectorArray2`1
  langs:
  - csharp
  - vb
  name: Set(Int32, T, T)
  nameWithType: VectorArray2<T>.Set(Int32, T, T)
  fullName: g3.VectorArray2<T>.Set(System.Int32, T, T)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/VectorArray.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Set
    path: ../Assets/geometry3Sharp/core/VectorArray.cs
    startLine: 204
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Set(int i, T a, T b)
    parameters:
    - id: i
      type: System.Int32
    - id: a
      type: '{T}'
    - id: b
      type: '{T}'
    content.vb: Public Sub Set(i As Integer, a As T, b As T)
  overload: g3.VectorArray2`1.Set*
  nameWithType.vb: VectorArray2(Of T).Set(Int32, T, T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.VectorArray2(Of T).Set(System.Int32, T, T)
- uid: g3.VectorArray2`1.Set(System.Int32,System.Int32,g3.VectorArray2{`0})
  commentId: M:g3.VectorArray2`1.Set(System.Int32,System.Int32,g3.VectorArray2{`0})
  id: Set(System.Int32,System.Int32,g3.VectorArray2{`0})
  parent: g3.VectorArray2`1
  langs:
  - csharp
  - vb
  name: Set(Int32, Int32, VectorArray2<T>)
  nameWithType: VectorArray2<T>.Set(Int32, Int32, VectorArray2<T>)
  fullName: g3.VectorArray2<T>.Set(System.Int32, System.Int32, g3.VectorArray2<T>)
  type: Method
  source:
    remote:
      path: Assets/geometry3Sharp/core/VectorArray.cs
      branch: gh-pages
      repo: https://github.com/runette/ViRGIS.git
    id: Set
    path: ../Assets/geometry3Sharp/core/VectorArray.cs
    startLine: 210
  assemblies:
  - geometry3Sharp
  namespace: g3
  syntax:
    content: public void Set(int iStart, int iCount, VectorArray2<T> source)
    parameters:
    - id: iStart
      type: System.Int32
    - id: iCount
      type: System.Int32
    - id: source
      type: g3.VectorArray2`1
    content.vb: Public Sub Set(iStart As Integer, iCount As Integer, source As VectorArray2(Of T))
  overload: g3.VectorArray2`1.Set*
  nameWithType.vb: VectorArray2(Of T).Set(Int32, Int32, VectorArray2(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: g3.VectorArray2(Of T).Set(System.Int32, System.Int32, g3.VectorArray2(Of T))
  name.vb: Set(Int32, Int32, VectorArray2(Of T))
references:
- uid: g3
  commentId: N:g3
  name: g3
  nameWithType: g3
  fullName: g3
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: g3.VectorArray2`1.#ctor*
  commentId: Overload:g3.VectorArray2`1.#ctor
  name: VectorArray2
  nameWithType: VectorArray2<T>.VectorArray2
  fullName: g3.VectorArray2<T>.VectorArray2
  nameWithType.vb: VectorArray2(Of T).VectorArray2
  fullName.vb: g3.VectorArray2(Of T).VectorArray2
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: g3.VectorArray2`1.Count*
  commentId: Overload:g3.VectorArray2`1.Count
  name: Count
  nameWithType: VectorArray2<T>.Count
  fullName: g3.VectorArray2<T>.Count
  nameWithType.vb: VectorArray2(Of T).Count
  fullName.vb: g3.VectorArray2(Of T).Count
- uid: g3.VectorArray2`1.GetEnumerator*
  commentId: Overload:g3.VectorArray2`1.GetEnumerator
  name: GetEnumerator
  nameWithType: VectorArray2<T>.GetEnumerator
  fullName: g3.VectorArray2<T>.GetEnumerator
  nameWithType.vb: VectorArray2(Of T).GetEnumerator
  fullName.vb: g3.VectorArray2(Of T).GetEnumerator
- uid: System.Collections.Generic.IEnumerator{{T}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: g3.VectorArray2`1.Resize*
  commentId: Overload:g3.VectorArray2`1.Resize
  name: Resize
  nameWithType: VectorArray2<T>.Resize
  fullName: g3.VectorArray2<T>.Resize
  nameWithType.vb: VectorArray2(Of T).Resize
  fullName.vb: g3.VectorArray2(Of T).Resize
- uid: g3.VectorArray2`1.Set*
  commentId: Overload:g3.VectorArray2`1.Set
  name: Set
  nameWithType: VectorArray2<T>.Set
  fullName: g3.VectorArray2<T>.Set
  nameWithType.vb: VectorArray2(Of T).Set
  fullName.vb: g3.VectorArray2(Of T).Set
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: g3.VectorArray2`1
  commentId: T:g3.VectorArray2`1
  parent: g3
  name: VectorArray2<T>
  nameWithType: VectorArray2<T>
  fullName: g3.VectorArray2<T>
  nameWithType.vb: VectorArray2(Of T)
  fullName.vb: g3.VectorArray2(Of T)
  name.vb: VectorArray2(Of T)
  spec.csharp:
  - uid: g3.VectorArray2`1
    name: VectorArray2
    nameWithType: VectorArray2
    fullName: g3.VectorArray2
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: g3.VectorArray2`1
    name: VectorArray2
    nameWithType: VectorArray2
    fullName: g3.VectorArray2
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )

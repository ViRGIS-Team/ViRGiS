### YamlMime:ManagedReference
items:
- uid: Project.SerializableColor
  commentId: T:Project.SerializableColor
  id: SerializableColor
  parent: Project
  children:
  - Project.SerializableColor.#ctor
  - Project.SerializableColor.#ctor(System.Single,System.Single,System.Single,System.Single)
  - Project.SerializableColor.a
  - Project.SerializableColor.b
  - Project.SerializableColor.g
  - Project.SerializableColor.op_Implicit(Project.SerializableColor)~UnityEngine.Color
  - Project.SerializableColor.op_Implicit(UnityEngine.Color)~Project.SerializableColor
  - Project.SerializableColor.r
  - Project.SerializableColor.ToArray
  - Project.SerializableColor.ToString
  - Project.SerializableColor.Update(System.Collections.Generic.IList{System.Single})
  langs:
  - csharp
  - vb
  name: SerializableColor
  nameWithType: SerializableColor
  fullName: Project.SerializableColor
  type: Class
  source:
    remote:
      path: Assets/Scripts/Basic Types/Serializeables.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: SerializableColor
    path: ../Assets/Scripts/Basic Types/Serializeables.cs
    startLine: 182
  assemblies:
  - Assembly-CSharp
  namespace: Project
  syntax:
    content: >-
      [Serializable]

      public class SerializableColor : Serializable
    content.vb: >-
      <Serializable>

      Public Class SerializableColor
          Inherits Serializable
  inheritance:
  - System.Object
  - Project.Serializable
  inheritedMembers:
  - Project.Serializable.magnitude
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Project.SerializableColor.r
  commentId: F:Project.SerializableColor.r
  id: r
  parent: Project.SerializableColor
  langs:
  - csharp
  - vb
  name: r
  nameWithType: SerializableColor.r
  fullName: Project.SerializableColor.r
  type: Field
  source:
    remote:
      path: Assets/Scripts/Basic Types/Serializeables.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: r
    path: ../Assets/Scripts/Basic Types/Serializeables.cs
    startLine: 186
  assemblies:
  - Assembly-CSharp
  namespace: Project
  syntax:
    content: public float r
    return:
      type: System.Single
    content.vb: Public r As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Project.SerializableColor.g
  commentId: F:Project.SerializableColor.g
  id: g
  parent: Project.SerializableColor
  langs:
  - csharp
  - vb
  name: g
  nameWithType: SerializableColor.g
  fullName: Project.SerializableColor.g
  type: Field
  source:
    remote:
      path: Assets/Scripts/Basic Types/Serializeables.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: g
    path: ../Assets/Scripts/Basic Types/Serializeables.cs
    startLine: 187
  assemblies:
  - Assembly-CSharp
  namespace: Project
  syntax:
    content: public float g
    return:
      type: System.Single
    content.vb: Public g As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Project.SerializableColor.b
  commentId: F:Project.SerializableColor.b
  id: b
  parent: Project.SerializableColor
  langs:
  - csharp
  - vb
  name: b
  nameWithType: SerializableColor.b
  fullName: Project.SerializableColor.b
  type: Field
  source:
    remote:
      path: Assets/Scripts/Basic Types/Serializeables.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: b
    path: ../Assets/Scripts/Basic Types/Serializeables.cs
    startLine: 188
  assemblies:
  - Assembly-CSharp
  namespace: Project
  syntax:
    content: public float b
    return:
      type: System.Single
    content.vb: Public b As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Project.SerializableColor.a
  commentId: F:Project.SerializableColor.a
  id: a
  parent: Project.SerializableColor
  langs:
  - csharp
  - vb
  name: a
  nameWithType: SerializableColor.a
  fullName: Project.SerializableColor.a
  type: Field
  source:
    remote:
      path: Assets/Scripts/Basic Types/Serializeables.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: a
    path: ../Assets/Scripts/Basic Types/Serializeables.cs
    startLine: 189
  assemblies:
  - Assembly-CSharp
  namespace: Project
  syntax:
    content: public float a
    return:
      type: System.Single
    content.vb: Public a As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Project.SerializableColor.#ctor(System.Single,System.Single,System.Single,System.Single)
  commentId: M:Project.SerializableColor.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: Project.SerializableColor
  langs:
  - csharp
  - vb
  name: SerializableColor(Single, Single, Single, Single)
  nameWithType: SerializableColor.SerializableColor(Single, Single, Single, Single)
  fullName: Project.SerializableColor.SerializableColor(System.Single, System.Single, System.Single, System.Single)
  type: Constructor
  source:
    remote:
      path: Assets/Scripts/Basic Types/Serializeables.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/Scripts/Basic Types/Serializeables.cs
    startLine: 192
  assemblies:
  - Assembly-CSharp
  namespace: Project
  syntax:
    content: public SerializableColor(float rr, float rg, float rb, float ra)
    parameters:
    - id: rr
      type: System.Single
    - id: rg
      type: System.Single
    - id: rb
      type: System.Single
    - id: ra
      type: System.Single
    content.vb: Public Sub New(rr As Single, rg As Single, rb As Single, ra As Single)
  overload: Project.SerializableColor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Project.SerializableColor.#ctor
  commentId: M:Project.SerializableColor.#ctor
  id: '#ctor'
  parent: Project.SerializableColor
  langs:
  - csharp
  - vb
  name: SerializableColor()
  nameWithType: SerializableColor.SerializableColor()
  fullName: Project.SerializableColor.SerializableColor()
  type: Constructor
  source:
    remote:
      path: Assets/Scripts/Basic Types/Serializeables.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: .ctor
    path: ../Assets/Scripts/Basic Types/Serializeables.cs
    startLine: 200
  assemblies:
  - Assembly-CSharp
  namespace: Project
  syntax:
    content: public SerializableColor()
    content.vb: Public Sub New
  overload: Project.SerializableColor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Project.SerializableColor.Update(System.Collections.Generic.IList{System.Single})
  commentId: M:Project.SerializableColor.Update(System.Collections.Generic.IList{System.Single})
  id: Update(System.Collections.Generic.IList{System.Single})
  parent: Project.SerializableColor
  langs:
  - csharp
  - vb
  name: Update(IList<Single>)
  nameWithType: SerializableColor.Update(IList<Single>)
  fullName: Project.SerializableColor.Update(System.Collections.Generic.IList<System.Single>)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Basic Types/Serializeables.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: Update
    path: ../Assets/Scripts/Basic Types/Serializeables.cs
    startLine: 202
  assemblies:
  - Assembly-CSharp
  namespace: Project
  syntax:
    content: public override void Update(IList<float> color)
    parameters:
    - id: color
      type: System.Collections.Generic.IList{System.Single}
    content.vb: Public Overrides Sub Update(color As IList(Of Single))
  overridden: Project.Serializable.Update(System.Collections.Generic.IList{System.Single})
  overload: Project.SerializableColor.Update*
  nameWithType.vb: SerializableColor.Update(IList(Of Single))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Project.SerializableColor.Update(System.Collections.Generic.IList(Of System.Single))
  name.vb: Update(IList(Of Single))
- uid: Project.SerializableColor.op_Implicit(Project.SerializableColor)~UnityEngine.Color
  commentId: M:Project.SerializableColor.op_Implicit(Project.SerializableColor)~UnityEngine.Color
  id: op_Implicit(Project.SerializableColor)~UnityEngine.Color
  parent: Project.SerializableColor
  langs:
  - csharp
  - vb
  name: Implicit(SerializableColor to Color)
  nameWithType: SerializableColor.Implicit(SerializableColor to Color)
  fullName: Project.SerializableColor.Implicit(Project.SerializableColor to UnityEngine.Color)
  type: Operator
  source:
    remote:
      path: Assets/Scripts/Basic Types/Serializeables.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: op_Implicit
    path: ../Assets/Scripts/Basic Types/Serializeables.cs
    startLine: 211
  assemblies:
  - Assembly-CSharp
  namespace: Project
  syntax:
    content: public static implicit operator Color(SerializableColor r)
    parameters:
    - id: r
      type: Project.SerializableColor
    return:
      type: UnityEngine.Color
    content.vb: Public Shared Widening Operator CType(r As SerializableColor) As Color
  overload: Project.SerializableColor.op_Implicit*
  nameWithType.vb: SerializableColor.Widening(SerializableColor to Color)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Project.SerializableColor.Widening(Project.SerializableColor to UnityEngine.Color)
  name.vb: Widening(SerializableColor to Color)
- uid: Project.SerializableColor.op_Implicit(UnityEngine.Color)~Project.SerializableColor
  commentId: M:Project.SerializableColor.op_Implicit(UnityEngine.Color)~Project.SerializableColor
  id: op_Implicit(UnityEngine.Color)~Project.SerializableColor
  parent: Project.SerializableColor
  langs:
  - csharp
  - vb
  name: Implicit(Color to SerializableColor)
  nameWithType: SerializableColor.Implicit(Color to SerializableColor)
  fullName: Project.SerializableColor.Implicit(UnityEngine.Color to Project.SerializableColor)
  type: Operator
  source:
    remote:
      path: Assets/Scripts/Basic Types/Serializeables.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: op_Implicit
    path: ../Assets/Scripts/Basic Types/Serializeables.cs
    startLine: 217
  assemblies:
  - Assembly-CSharp
  namespace: Project
  syntax:
    content: public static implicit operator SerializableColor(Color color)
    parameters:
    - id: color
      type: UnityEngine.Color
    return:
      type: Project.SerializableColor
    content.vb: Public Shared Widening Operator CType(color As Color) As SerializableColor
  overload: Project.SerializableColor.op_Implicit*
  nameWithType.vb: SerializableColor.Widening(Color to SerializableColor)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Project.SerializableColor.Widening(UnityEngine.Color to Project.SerializableColor)
  name.vb: Widening(Color to SerializableColor)
- uid: Project.SerializableColor.ToString
  commentId: M:Project.SerializableColor.ToString
  id: ToString
  parent: Project.SerializableColor
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SerializableColor.ToString()
  fullName: Project.SerializableColor.ToString()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Basic Types/Serializeables.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: ToString
    path: ../Assets/Scripts/Basic Types/Serializeables.cs
    startLine: 222
  assemblies:
  - Assembly-CSharp
  namespace: Project
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Project.SerializableColor.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Project.SerializableColor.ToArray
  commentId: M:Project.SerializableColor.ToArray
  id: ToArray
  parent: Project.SerializableColor
  langs:
  - csharp
  - vb
  name: ToArray()
  nameWithType: SerializableColor.ToArray()
  fullName: Project.SerializableColor.ToArray()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Basic Types/Serializeables.cs
      branch: doc
      repo: https://github.com/runette/ViRGIS.git
    id: ToArray
    path: ../Assets/Scripts/Basic Types/Serializeables.cs
    startLine: 227
  assemblies:
  - Assembly-CSharp
  namespace: Project
  syntax:
    content: public override float[] ToArray()
    return:
      type: System.Single[]
    content.vb: Public Overrides Function ToArray As Single()
  overridden: Project.Serializable.ToArray
  overload: Project.SerializableColor.ToArray*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Project
  commentId: N:Project
  name: Project
  nameWithType: Project
  fullName: Project
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Project.Serializable
  commentId: T:Project.Serializable
  parent: Project
  name: Serializable
  nameWithType: Serializable
  fullName: Project.Serializable
- uid: Project.Serializable.magnitude
  commentId: F:Project.Serializable.magnitude
  parent: Project.Serializable
  name: magnitude
  nameWithType: Serializable.magnitude
  fullName: Project.Serializable.magnitude
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Project.SerializableColor.#ctor*
  commentId: Overload:Project.SerializableColor.#ctor
  name: SerializableColor
  nameWithType: SerializableColor.SerializableColor
  fullName: Project.SerializableColor.SerializableColor
- uid: Project.Serializable.Update(System.Collections.Generic.IList{System.Single})
  commentId: M:Project.Serializable.Update(System.Collections.Generic.IList{System.Single})
  parent: Project.Serializable
  isExternal: true
  name: Update(IList<Single>)
  nameWithType: Serializable.Update(IList<Single>)
  fullName: Project.Serializable.Update(System.Collections.Generic.IList<System.Single>)
  nameWithType.vb: Serializable.Update(IList(Of Single))
  fullName.vb: Project.Serializable.Update(System.Collections.Generic.IList(Of System.Single))
  name.vb: Update(IList(Of Single))
  spec.csharp:
  - uid: Project.Serializable.Update(System.Collections.Generic.IList{System.Single})
    name: Update
    nameWithType: Serializable.Update
    fullName: Project.Serializable.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Project.Serializable.Update(System.Collections.Generic.IList{System.Single})
    name: Update
    nameWithType: Serializable.Update
    fullName: Project.Serializable.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Project.SerializableColor.Update*
  commentId: Overload:Project.SerializableColor.Update
  name: Update
  nameWithType: SerializableColor.Update
  fullName: Project.SerializableColor.Update
- uid: System.Collections.Generic.IList{System.Single}
  commentId: T:System.Collections.Generic.IList{System.Single}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Single>
  nameWithType: IList<Single>
  fullName: System.Collections.Generic.IList<System.Single>
  nameWithType.vb: IList(Of Single)
  fullName.vb: System.Collections.Generic.IList(Of System.Single)
  name.vb: IList(Of Single)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Project.SerializableColor.op_Implicit*
  commentId: Overload:Project.SerializableColor.op_Implicit
  name: Implicit
  nameWithType: SerializableColor.Implicit
  fullName: Project.SerializableColor.Implicit
  nameWithType.vb: SerializableColor.Widening
  fullName.vb: Project.SerializableColor.Widening
  name.vb: Widening
- uid: Project.SerializableColor
  commentId: T:Project.SerializableColor
  parent: Project
  name: SerializableColor
  nameWithType: SerializableColor
  fullName: Project.SerializableColor
- uid: UnityEngine.Color
  commentId: T:UnityEngine.Color
  parent: UnityEngine
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Project.SerializableColor.ToString*
  commentId: Overload:Project.SerializableColor.ToString
  name: ToString
  nameWithType: SerializableColor.ToString
  fullName: Project.SerializableColor.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Project.Serializable.ToArray
  commentId: M:Project.Serializable.ToArray
  parent: Project.Serializable
  name: ToArray()
  nameWithType: Serializable.ToArray()
  fullName: Project.Serializable.ToArray()
  spec.csharp:
  - uid: Project.Serializable.ToArray
    name: ToArray
    nameWithType: Serializable.ToArray
    fullName: Project.Serializable.ToArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Project.Serializable.ToArray
    name: ToArray
    nameWithType: Serializable.ToArray
    fullName: Project.Serializable.ToArray
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Project.SerializableColor.ToArray*
  commentId: Overload:Project.SerializableColor.ToArray
  name: ToArray
  nameWithType: SerializableColor.ToArray
  fullName: Project.SerializableColor.ToArray
- uid: System.Single[]
  isExternal: true
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()

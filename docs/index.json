{
  "api/g3.AddTrianglesMeshChange.html": {
    "href": "api/g3.AddTrianglesMeshChange.html",
    "title": "Class AddTrianglesMeshChange | ViRGIS VR GIS",
    "keywords": "Class AddTrianglesMeshChange Add triangles from mesh and store necessary data to be able to reverse the change. Vertex and Triangle IDs will be restored on Revert() Currently does not restore the same EdgeIDs Inheritance Object AddTrianglesMeshChange Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class AddTrianglesMeshChange Constructors | Improve this Doc View Source AddTrianglesMeshChange() Declaration public AddTrianglesMeshChange() Fields | Improve this Doc View Source AddedT Declaration protected DVector<int> AddedT Field Value Type Description DVector < Int32 > | Improve this Doc View Source AddedV Declaration protected DVector<int> AddedV Field Value Type Description DVector < Int32 > | Improve this Doc View Source Colors Declaration protected DVector<Vector3f> Colors Field Value Type Description DVector < Vector3f > | Improve this Doc View Source Normals Declaration protected DVector<Vector3f> Normals Field Value Type Description DVector < Vector3f > | Improve this Doc View Source OnApplyF Declaration public Action<IEnumerable<int>, IEnumerable<int>> OnApplyF Field Value Type Description Action < IEnumerable < Int32 >, IEnumerable < Int32 >> | Improve this Doc View Source OnRevertF Declaration public Action<IEnumerable<int>, IEnumerable<int>> OnRevertF Field Value Type Description Action < IEnumerable < Int32 >, IEnumerable < Int32 >> | Improve this Doc View Source Positions Declaration protected DVector<Vector3d> Positions Field Value Type Description DVector < Vector3d > | Improve this Doc View Source Triangles Declaration protected DVector<Index4i> Triangles Field Value Type Description DVector < Index4i > | Improve this Doc View Source UVs Declaration protected DVector<Vector2f> UVs Field Value Type Description DVector < Vector2f > Methods | Improve this Doc View Source Apply(DMesh3) Declaration public void Apply(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh | Improve this Doc View Source InitializeFromExisting(DMesh3, IEnumerable<Int32>, IEnumerable<Int32>) Declaration public void InitializeFromExisting(DMesh3 mesh, IEnumerable<int> added_v, IEnumerable<int> added_t) Parameters Type Name Description DMesh3 mesh IEnumerable < Int32 > added_v IEnumerable < Int32 > added_t | Improve this Doc View Source Revert(DMesh3) Declaration public void Revert(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh"
  },
  "api/g3.Arc2d.html": {
    "href": "api/g3.Arc2d.html",
    "title": "Class Arc2d | ViRGIS VR GIS",
    "keywords": "Class Arc2d Inheritance Object Arc2d Implements IParametricCurve2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class Arc2d : IParametricCurve2d Constructors | Improve this Doc View Source Arc2d(Vector2d, Vector2d, Vector2d) Create Arc around center, clockwise from start to end points. Points must both be the same distance from center (ie on circle) Declaration public Arc2d(Vector2d vCenter, Vector2d vStart, Vector2d vEnd) Parameters Type Name Description Vector2d vCenter Vector2d vStart Vector2d vEnd | Improve this Doc View Source Arc2d(Vector2d, Double, Double, Double) Declaration public Arc2d(Vector2d center, double radius, double startDeg, double endDeg) Parameters Type Name Description Vector2d center Double radius Double startDeg Double endDeg Fields | Improve this Doc View Source AngleEndDeg Declaration public double AngleEndDeg Field Value Type Description Double | Improve this Doc View Source AngleStartDeg Declaration public double AngleStartDeg Field Value Type Description Double | Improve this Doc View Source Center Declaration public Vector2d Center Field Value Type Description Vector2d | Improve this Doc View Source IsReversed Declaration public bool IsReversed Field Value Type Description Boolean | Improve this Doc View Source Radius Declaration public double Radius Field Value Type Description Double Properties | Improve this Doc View Source ArcLength Declaration public double ArcLength { get; } Property Value Type Description Double | Improve this Doc View Source Bounds Declaration public AxisAlignedBox2d Bounds { get; } Property Value Type Description AxisAlignedBox2d | Improve this Doc View Source Curvature Declaration public double Curvature { get; } Property Value Type Description Double | Improve this Doc View Source HasArcLength Declaration public bool HasArcLength { get; } Property Value Type Description Boolean | Improve this Doc View Source IsClosed Declaration public bool IsClosed { get; } Property Value Type Description Boolean | Improve this Doc View Source IsTransformable Declaration public bool IsTransformable { get; } Property Value Type Description Boolean | Improve this Doc View Source P0 Declaration public Vector2d P0 { get; } Property Value Type Description Vector2d | Improve this Doc View Source P1 Declaration public Vector2d P1 { get; } Property Value Type Description Vector2d | Improve this Doc View Source ParamLength Declaration public double ParamLength { get; } Property Value Type Description Double | Improve this Doc View Source SignedCurvature Declaration public double SignedCurvature { get; } Property Value Type Description Double Methods | Improve this Doc View Source Clone() Declaration public IParametricCurve2d Clone() Returns Type Description IParametricCurve2d | Improve this Doc View Source Distance(Vector2d) Declaration public double Distance(Vector2d point) Parameters Type Name Description Vector2d point Returns Type Description Double | Improve this Doc View Source NearestPoint(Vector2d) Declaration public Vector2d NearestPoint(Vector2d point) Parameters Type Name Description Vector2d point Returns Type Description Vector2d | Improve this Doc View Source Reverse() Declaration public void Reverse() | Improve this Doc View Source SampleArcLength(Double) Declaration public Vector2d SampleArcLength(double a) Parameters Type Name Description Double a Returns Type Description Vector2d | Improve this Doc View Source SampleT(Double) Declaration public Vector2d SampleT(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source SetFromCenterAndPoints(Vector2d, Vector2d, Vector2d) Initialize Arc around center, clockwise from start to end points. Points must both be the same distance from center (ie on circle) Declaration public void SetFromCenterAndPoints(Vector2d vCenter, Vector2d vStart, Vector2d vEnd) Parameters Type Name Description Vector2d vCenter Vector2d vStart Vector2d vEnd | Improve this Doc View Source TangentT(Double) Declaration public Vector2d TangentT(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source Transform(ITransform2) Declaration public void Transform(ITransform2 xform) Parameters Type Name Description ITransform2 xform Implements IParametricCurve2d"
  },
  "api/g3.ArcLengthSoftTranslation.html": {
    "href": "api/g3.ArcLengthSoftTranslation.html",
    "title": "Class ArcLengthSoftTranslation | ViRGIS VR GIS",
    "keywords": "Class ArcLengthSoftTranslation Inheritance Object ArcLengthSoftTranslation Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ArcLengthSoftTranslation Constructors | Improve this Doc View Source ArcLengthSoftTranslation() Declaration public ArcLengthSoftTranslation() Fields | Improve this Doc View Source roi_index Declaration public int[] roi_index Field Value Type Description Int32 [] | Improve this Doc View Source roi_weights Declaration public double[] roi_weights Field Value Type Description Double [] | Improve this Doc View Source start_positions Declaration public Vector3d[] start_positions Field Value Type Description Vector3d [] Properties | Improve this Doc View Source ArcRadius Declaration public double ArcRadius { get; set; } Property Value Type Description Double | Improve this Doc View Source Curve Declaration public DCurve3 Curve { get; set; } Property Value Type Description DCurve3 | Improve this Doc View Source Handle Declaration public Vector3d Handle { get; set; } Property Value Type Description Vector3d | Improve this Doc View Source WeightFunc Declaration public Func<double, double, double> WeightFunc { get; set; } Property Value Type Description Func < Double , Double , Double > Methods | Improve this Doc View Source BeginDeformation() Declaration public void BeginDeformation() | Improve this Doc View Source EndDeformation() Declaration public void EndDeformation() | Improve this Doc View Source UpdateDeformation(Vector3d) Declaration public void UpdateDeformation(Vector3d newHandlePos) Parameters Type Name Description Vector3d newHandlePos | Improve this Doc View Source UpdateROI(Int32) Declaration public void UpdateROI(int nNearVertexHint = -1) Parameters Type Name Description Int32 nNearVertexHint"
  },
  "api/g3.Arrangement2d.html": {
    "href": "api/g3.Arrangement2d.html",
    "title": "Class Arrangement2d | ViRGIS VR GIS",
    "keywords": "Class Arrangement2d Arrangement2d constructs a planar arrangement of a set of 2D line segments. When a segment is inserted, existing edges are split, and the inserted segment becomes multiple graph edges. So, the resulting DGraph2 should not have any edges that intersect. Calculations are performed in double-precision, so there is no guarantee of correctness. [TODO] multi-level segment has to accelerate find_intersecting_edges() [TODO] maybe smarter handling Inheritance Object Arrangement2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class Arrangement2d Constructors | Improve this Doc View Source Arrangement2d(AxisAlignedBox2d) Declaration public Arrangement2d(AxisAlignedBox2d boundsHint) Parameters Type Name Description AxisAlignedBox2d boundsHint Fields | Improve this Doc View Source Graph Declaration public DGraph2 Graph Field Value Type Description DGraph2 | Improve this Doc View Source PointHash Declaration public PointHashGrid2d<int> PointHash Field Value Type Description PointHashGrid2d < Int32 > | Improve this Doc View Source VertexSnapTol Declaration public double VertexSnapTol Field Value Type Description Double Methods | Improve this Doc View Source ConnectOpenBoundaries(Double) connect open boundary vertices within distThresh, by inserting new segments Declaration public void ConnectOpenBoundaries(double distThresh) Parameters Type Name Description Double distThresh | Improve this Doc View Source find_existing_vertex(Vector2d) find existing vertex at point, if it exists Declaration protected int find_existing_vertex(Vector2d pt) Parameters Type Name Description Vector2d pt Returns Type Description Int32 | Improve this Doc View Source find_intersecting_edges(ref Vector2d, ref Vector2d, List<Arrangement2d.Intersection>, Double) find set of edges in graph that intersect with edge [a,b] Declaration protected bool find_intersecting_edges(ref Vector2d a, ref Vector2d b, List<Arrangement2d.Intersection> hits, double tol = 0) Parameters Type Name Description Vector2d a Vector2d b List < Arrangement2d.Intersection > hits Double tol Returns Type Description Boolean | Improve this Doc View Source find_nearest_boundary_vertex(Vector2d, Double, Int32) find nearest boundary vertex, within searchRadius Declaration protected int find_nearest_boundary_vertex(Vector2d pt, double searchRadius, int ignore_vid = -1) Parameters Type Name Description Vector2d pt Double searchRadius Int32 ignore_vid Returns Type Description Int32 | Improve this Doc View Source find_nearest_vertex(Vector2d, Double, Int32) find closest vertex, within searchRadius Declaration protected int find_nearest_vertex(Vector2d pt, double searchRadius, int ignore_vid = -1) Parameters Type Name Description Vector2d pt Double searchRadius Int32 ignore_vid Returns Type Description Int32 | Improve this Doc View Source Insert(Polygon2d, Int32) sequentially insert segments of polygon Declaration public void Insert(Polygon2d poly, int gid = -1) Parameters Type Name Description Polygon2d poly Int32 gid | Improve this Doc View Source Insert(PolyLine2d, Int32) sequentially insert segments of polyline Declaration public void Insert(PolyLine2d pline, int gid = -1) Parameters Type Name Description PolyLine2d pline Int32 gid | Improve this Doc View Source Insert(Segment2d, Int32) insert segment into the arrangement Declaration public void Insert(Segment2d segment, int gid = -1) Parameters Type Name Description Segment2d segment Int32 gid | Improve this Doc View Source Insert(Vector2d, Vector2d, Int32) insert segment [a,b] into the arrangement Declaration public void Insert(Vector2d a, Vector2d b, int gid = -1) Parameters Type Name Description Vector2d a Vector2d b Int32 gid | Improve this Doc View Source insert_segment(Vector2d, Vector2d, Int32, Double) Declaration protected bool insert_segment(Vector2d a, Vector2d b, int gid = -1, double tol = 0) Parameters Type Name Description Vector2d a Vector2d b Int32 gid Double tol Returns Type Description Boolean | Improve this Doc View Source insert_segment(ref Vector2d, ref Vector2d, Int32, Double) insert edge [a,b] into the arrangement, splitting existing edges as necessary Declaration protected bool insert_segment(ref Vector2d a, ref Vector2d b, int gid = -1, double tol = 0) Parameters Type Name Description Vector2d a Vector2d b Int32 gid Double tol Returns Type Description Boolean | Improve this Doc View Source split_segment_at_t(Int32, Double, Double) insert new point into segment eid at parameter value t If t is within tol of endpoint of segment, we use that instead. Declaration protected Index2i split_segment_at_t(int eid, double t, double tol) Parameters Type Name Description Int32 eid Double t Double tol Returns Type Description Index2i"
  },
  "api/g3.Arrangement2d.Intersection.html": {
    "href": "api/g3.Arrangement2d.Intersection.html",
    "title": "Struct Arrangement2d.Intersection | ViRGIS VR GIS",
    "keywords": "Struct Arrangement2d.Intersection Namespace : g3 Assembly : geometry3Sharp.dll Syntax protected struct Intersection Fields | Improve this Doc View Source eid Declaration public int eid Field Value Type Description Int32 | Improve this Doc View Source intr Declaration public IntrSegment2Segment2 intr Field Value Type Description IntrSegment2Segment2 | Improve this Doc View Source sidex Declaration public int sidex Field Value Type Description Int32 | Improve this Doc View Source sidey Declaration public int sidey Field Value Type Description Int32"
  },
  "api/g3.Arrangement2d.SegmentPoint.html": {
    "href": "api/g3.Arrangement2d.SegmentPoint.html",
    "title": "Struct Arrangement2d.SegmentPoint | ViRGIS VR GIS",
    "keywords": "Struct Arrangement2d.SegmentPoint Namespace : g3 Assembly : geometry3Sharp.dll Syntax protected struct SegmentPoint Fields | Improve this Doc View Source t Declaration public double t Field Value Type Description Double | Improve this Doc View Source vid Declaration public int vid Field Value Type Description Int32"
  },
  "api/g3.ArrayAlias-1.html": {
    "href": "api/g3.ArrayAlias-1.html",
    "title": "Struct ArrayAlias<T> | ViRGIS VR GIS",
    "keywords": "Struct ArrayAlias<T> Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct ArrayAlias<T> Type Parameters Name Description T Constructors | Improve this Doc View Source ArrayAlias(T[], Int32) Declaration public ArrayAlias(T[] source, int i) Parameters Type Name Description T[] source Int32 i Fields | Improve this Doc View Source Index Declaration public int Index Field Value Type Description Int32 | Improve this Doc View Source Source Declaration public T[] Source Field Value Type Description T[] Properties | Improve this Doc View Source Item[Int32] Declaration public T this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description T"
  },
  "api/g3.AxisAlignedBox2d.html": {
    "href": "api/g3.AxisAlignedBox2d.html",
    "title": "Struct AxisAlignedBox2d | ViRGIS VR GIS",
    "keywords": "Struct AxisAlignedBox2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct AxisAlignedBox2d Constructors | Improve this Doc View Source AxisAlignedBox2d(AxisAlignedBox2d) Declaration public AxisAlignedBox2d(AxisAlignedBox2d o) Parameters Type Name Description AxisAlignedBox2d o | Improve this Doc View Source AxisAlignedBox2d(Vector2d) Declaration public AxisAlignedBox2d(Vector2d vCenter) Parameters Type Name Description Vector2d vCenter | Improve this Doc View Source AxisAlignedBox2d(Vector2d, Vector2d) Declaration public AxisAlignedBox2d(Vector2d vMin, Vector2d vMax) Parameters Type Name Description Vector2d vMin Vector2d vMax | Improve this Doc View Source AxisAlignedBox2d(Vector2d, Double) Declaration public AxisAlignedBox2d(Vector2d vCenter, double fHalfWidth) Parameters Type Name Description Vector2d vCenter Double fHalfWidth | Improve this Doc View Source AxisAlignedBox2d(Vector2d, Double, Double) Declaration public AxisAlignedBox2d(Vector2d vCenter, double fHalfWidth, double fHalfHeight) Parameters Type Name Description Vector2d vCenter Double fHalfWidth Double fHalfHeight | Improve this Doc View Source AxisAlignedBox2d(Boolean) Declaration public AxisAlignedBox2d(bool bIgnore) Parameters Type Name Description Boolean bIgnore | Improve this Doc View Source AxisAlignedBox2d(Double) Declaration public AxisAlignedBox2d(double fSquareSize) Parameters Type Name Description Double fSquareSize | Improve this Doc View Source AxisAlignedBox2d(Double, Double) Declaration public AxisAlignedBox2d(double fWidth, double fHeight) Parameters Type Name Description Double fWidth Double fHeight | Improve this Doc View Source AxisAlignedBox2d(Double, Double, Double, Double) Declaration public AxisAlignedBox2d(double xmin, double ymin, double xmax, double ymax) Parameters Type Name Description Double xmin Double ymin Double xmax Double ymax Fields | Improve this Doc View Source Empty Declaration public static readonly AxisAlignedBox2d Empty Field Value Type Description AxisAlignedBox2d | Improve this Doc View Source Infinite Declaration public static readonly AxisAlignedBox2d Infinite Field Value Type Description AxisAlignedBox2d | Improve this Doc View Source Max Declaration public Vector2d Max Field Value Type Description Vector2d | Improve this Doc View Source Min Declaration public Vector2d Min Field Value Type Description Vector2d | Improve this Doc View Source UnitPositive Declaration public static readonly AxisAlignedBox2d UnitPositive Field Value Type Description AxisAlignedBox2d | Improve this Doc View Source Zero Declaration public static readonly AxisAlignedBox2d Zero Field Value Type Description AxisAlignedBox2d Properties | Improve this Doc View Source Area Declaration public double Area { get; } Property Value Type Description Double | Improve this Doc View Source Center Declaration public Vector2d Center { get; } Property Value Type Description Vector2d | Improve this Doc View Source Diagonal Declaration public Vector2d Diagonal { get; } Property Value Type Description Vector2d | Improve this Doc View Source DiagonalLength Declaration public double DiagonalLength { get; } Property Value Type Description Double | Improve this Doc View Source Height Declaration public double Height { get; } Property Value Type Description Double | Improve this Doc View Source MaxDim Declaration public double MaxDim { get; } Property Value Type Description Double | Improve this Doc View Source MaxUnsignedCoordinate returns absolute value of largest min/max x/y coordinate (ie max axis distance to origin) Declaration public double MaxUnsignedCoordinate { get; } Property Value Type Description Double | Improve this Doc View Source MinDim Declaration public double MinDim { get; } Property Value Type Description Double | Improve this Doc View Source Width Declaration public double Width { get; } Property Value Type Description Double Methods | Improve this Doc View Source Add(Double, Double, Double, Double) Declaration public void Add(double left, double right, double bottom, double top) Parameters Type Name Description Double left Double right Double bottom Double top | Improve this Doc View Source Contain(AxisAlignedBox2d) Declaration public void Contain(AxisAlignedBox2d box) Parameters Type Name Description AxisAlignedBox2d box | Improve this Doc View Source Contain(ref AxisAlignedBox2d) Declaration public void Contain(ref AxisAlignedBox2d box) Parameters Type Name Description AxisAlignedBox2d box | Improve this Doc View Source Contain(Vector2d) Declaration public void Contain(Vector2d v) Parameters Type Name Description Vector2d v | Improve this Doc View Source Contain(ref Vector2d) Declaration public void Contain(ref Vector2d v) Parameters Type Name Description Vector2d v | Improve this Doc View Source Contain(IList<Vector2d>) Declaration public void Contain(IList<Vector2d> points) Parameters Type Name Description IList < Vector2d > points | Improve this Doc View Source Contains(AxisAlignedBox2d) Declaration public bool Contains(AxisAlignedBox2d box2) Parameters Type Name Description AxisAlignedBox2d box2 Returns Type Description Boolean | Improve this Doc View Source Contains(ref AxisAlignedBox2d) Declaration public bool Contains(ref AxisAlignedBox2d box2) Parameters Type Name Description AxisAlignedBox2d box2 Returns Type Description Boolean | Improve this Doc View Source Contains(Vector2d) Declaration public bool Contains(Vector2d v) Parameters Type Name Description Vector2d v Returns Type Description Boolean | Improve this Doc View Source Contains(ref Vector2d) Declaration public bool Contains(ref Vector2d v) Parameters Type Name Description Vector2d v Returns Type Description Boolean | Improve this Doc View Source Contract(Double) Declaration public void Contract(double fRadius) Parameters Type Name Description Double fRadius | Improve this Doc View Source Distance(Vector2d) Declaration public double Distance(Vector2d v) Parameters Type Name Description Vector2d v Returns Type Description Double | Improve this Doc View Source Expand(Double) Declaration public void Expand(double fRadius) Parameters Type Name Description Double fRadius | Improve this Doc View Source GetCorner(Int32) Declaration public Vector2d GetCorner(int i) Parameters Type Name Description Int32 i Returns Type Description Vector2d | Improve this Doc View Source Intersect(AxisAlignedBox2d) Declaration public AxisAlignedBox2d Intersect(AxisAlignedBox2d box) Parameters Type Name Description AxisAlignedBox2d box Returns Type Description AxisAlignedBox2d | Improve this Doc View Source Intersects(AxisAlignedBox2d) Declaration public bool Intersects(AxisAlignedBox2d box) Parameters Type Name Description AxisAlignedBox2d box Returns Type Description Boolean | Improve this Doc View Source Intersects(ref AxisAlignedBox2d) Declaration public bool Intersects(ref AxisAlignedBox2d box) Parameters Type Name Description AxisAlignedBox2d box Returns Type Description Boolean | Improve this Doc View Source MoveMin(Vector2d) Declaration public void MoveMin(Vector2d vNewMin) Parameters Type Name Description Vector2d vNewMin | Improve this Doc View Source MoveMin(Double, Double) Declaration public void MoveMin(double fNewX, double fNewY) Parameters Type Name Description Double fNewX Double fNewY | Improve this Doc View Source Pad(Double, Double, Double, Double) Declaration [Obsolete(\"This method name is confusing. Will remove in future. Use Add() instead\")] public void Pad(double fPadLeft, double fPadRight, double fPadBottom, double fPadTop) Parameters Type Name Description Double fPadLeft Double fPadRight Double fPadBottom Double fPadTop | Improve this Doc View Source SampleT(Double, Double) Point inside box where t,s are in range [0,1] Declaration public Vector2d SampleT(double tx, double sy) Parameters Type Name Description Double tx Double sy Returns Type Description Vector2d | Improve this Doc View Source Scale(Double) Declaration public void Scale(double scale) Parameters Type Name Description Double scale | Improve this Doc View Source Scale(Double, Vector2d) Declaration public void Scale(double scale, Vector2d origin) Parameters Type Name Description Double scale Vector2d origin | Improve this Doc View Source SetHeight(Double, AxisAlignedBox2d.ScaleMode) Declaration public void SetHeight(double fNewHeight, AxisAlignedBox2d.ScaleMode eScaleMode) Parameters Type Name Description Double fNewHeight AxisAlignedBox2d.ScaleMode eScaleMode | Improve this Doc View Source SetWidth(Double, AxisAlignedBox2d.ScaleMode) Declaration public void SetWidth(double fNewWidth, AxisAlignedBox2d.ScaleMode eScaleMode) Parameters Type Name Description Double fNewWidth AxisAlignedBox2d.ScaleMode eScaleMode | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() | Improve this Doc View Source Translate(Vector2d) Declaration public void Translate(Vector2d vTranslate) Parameters Type Name Description Vector2d vTranslate"
  },
  "api/g3.AxisAlignedBox2d.ScaleMode.html": {
    "href": "api/g3.AxisAlignedBox2d.ScaleMode.html",
    "title": "Enum AxisAlignedBox2d.ScaleMode | ViRGIS VR GIS",
    "keywords": "Enum AxisAlignedBox2d.ScaleMode Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum ScaleMode Fields Name Description ScaleCenter ScaleDown ScaleLeft ScaleRight ScaleUp"
  },
  "api/g3.AxisAlignedBox2f.html": {
    "href": "api/g3.AxisAlignedBox2f.html",
    "title": "Struct AxisAlignedBox2f | ViRGIS VR GIS",
    "keywords": "Struct AxisAlignedBox2f Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct AxisAlignedBox2f Constructors | Improve this Doc View Source AxisAlignedBox2f(AxisAlignedBox2f) Declaration public AxisAlignedBox2f(AxisAlignedBox2f o) Parameters Type Name Description AxisAlignedBox2f o | Improve this Doc View Source AxisAlignedBox2f(Vector2f) Declaration public AxisAlignedBox2f(Vector2f vCenter) Parameters Type Name Description Vector2f vCenter | Improve this Doc View Source AxisAlignedBox2f(Vector2f, Vector2f) Declaration public AxisAlignedBox2f(Vector2f vMin, Vector2f vMax) Parameters Type Name Description Vector2f vMin Vector2f vMax | Improve this Doc View Source AxisAlignedBox2f(Vector2f, Single) Declaration public AxisAlignedBox2f(Vector2f vCenter, float fHalfWidth) Parameters Type Name Description Vector2f vCenter Single fHalfWidth | Improve this Doc View Source AxisAlignedBox2f(Vector2f, Single, Single) Declaration public AxisAlignedBox2f(Vector2f vCenter, float fHalfWidth, float fHalfHeight) Parameters Type Name Description Vector2f vCenter Single fHalfWidth Single fHalfHeight | Improve this Doc View Source AxisAlignedBox2f(Boolean) Declaration public AxisAlignedBox2f(bool bIgnore) Parameters Type Name Description Boolean bIgnore | Improve this Doc View Source AxisAlignedBox2f(Single) Declaration public AxisAlignedBox2f(float fSquareSize) Parameters Type Name Description Single fSquareSize | Improve this Doc View Source AxisAlignedBox2f(Single, Single) Declaration public AxisAlignedBox2f(float fWidth, float fHeight) Parameters Type Name Description Single fWidth Single fHeight | Improve this Doc View Source AxisAlignedBox2f(Single, Single, Single, Single) Declaration public AxisAlignedBox2f(float xmin, float ymin, float xmax, float ymax) Parameters Type Name Description Single xmin Single ymin Single xmax Single ymax Fields | Improve this Doc View Source Empty Declaration public static readonly AxisAlignedBox2f Empty Field Value Type Description AxisAlignedBox2f | Improve this Doc View Source Infinite Declaration public static readonly AxisAlignedBox2f Infinite Field Value Type Description AxisAlignedBox2f | Improve this Doc View Source Max Declaration public Vector2f Max Field Value Type Description Vector2f | Improve this Doc View Source Min Declaration public Vector2f Min Field Value Type Description Vector2f | Improve this Doc View Source UnitPositive Declaration public static readonly AxisAlignedBox2f UnitPositive Field Value Type Description AxisAlignedBox2f | Improve this Doc View Source Zero Declaration public static readonly AxisAlignedBox2f Zero Field Value Type Description AxisAlignedBox2f Properties | Improve this Doc View Source Area Declaration public float Area { get; } Property Value Type Description Single | Improve this Doc View Source BottomLeft Declaration public Vector2f BottomLeft { get; } Property Value Type Description Vector2f | Improve this Doc View Source BottomRight Declaration public Vector2f BottomRight { get; } Property Value Type Description Vector2f | Improve this Doc View Source Center Declaration public Vector2f Center { get; } Property Value Type Description Vector2f | Improve this Doc View Source CenterBottom Declaration public Vector2f CenterBottom { get; } Property Value Type Description Vector2f | Improve this Doc View Source CenterLeft Declaration public Vector2f CenterLeft { get; } Property Value Type Description Vector2f | Improve this Doc View Source CenterRight Declaration public Vector2f CenterRight { get; } Property Value Type Description Vector2f | Improve this Doc View Source CenterTop Declaration public Vector2f CenterTop { get; } Property Value Type Description Vector2f | Improve this Doc View Source Diagonal Declaration public Vector2f Diagonal { get; } Property Value Type Description Vector2f | Improve this Doc View Source DiagonalLength Declaration public float DiagonalLength { get; } Property Value Type Description Single | Improve this Doc View Source Height Declaration public float Height { get; } Property Value Type Description Single | Improve this Doc View Source MaxDim Declaration public float MaxDim { get; } Property Value Type Description Single | Improve this Doc View Source TopLeft Declaration public Vector2f TopLeft { get; } Property Value Type Description Vector2f | Improve this Doc View Source TopRight Declaration public Vector2f TopRight { get; } Property Value Type Description Vector2f | Improve this Doc View Source Width Declaration public float Width { get; } Property Value Type Description Single Methods | Improve this Doc View Source Add(Single, Single, Single, Single) Declaration public void Add(float left, float right, float bottom, float top) Parameters Type Name Description Single left Single right Single bottom Single top | Improve this Doc View Source Contain(AxisAlignedBox2f) Declaration public void Contain(AxisAlignedBox2f box) Parameters Type Name Description AxisAlignedBox2f box | Improve this Doc View Source Contain(Vector2f) Declaration public void Contain(Vector2f v) Parameters Type Name Description Vector2f v | Improve this Doc View Source Contains(Vector2f) Declaration public bool Contains(Vector2f v) Parameters Type Name Description Vector2f v Returns Type Description Boolean | Improve this Doc View Source Contract(Single) Declaration public void Contract(float fRadius) Parameters Type Name Description Single fRadius | Improve this Doc View Source Distance(Vector2f) Declaration public float Distance(Vector2f v) Parameters Type Name Description Vector2f v Returns Type Description Single | Improve this Doc View Source Expand(Single) Declaration public void Expand(float fRadius) Parameters Type Name Description Single fRadius | Improve this Doc View Source GetCorner(Int32) Declaration public Vector2f GetCorner(int i) Parameters Type Name Description Int32 i Returns Type Description Vector2f | Improve this Doc View Source Intersect(AxisAlignedBox2f) Declaration public AxisAlignedBox2f Intersect(AxisAlignedBox2f box) Parameters Type Name Description AxisAlignedBox2f box Returns Type Description AxisAlignedBox2f | Improve this Doc View Source Intersects(AxisAlignedBox2f) Declaration public bool Intersects(AxisAlignedBox2f box) Parameters Type Name Description AxisAlignedBox2f box Returns Type Description Boolean | Improve this Doc View Source MoveMin(Vector2f) Declaration public void MoveMin(Vector2f vNewMin) Parameters Type Name Description Vector2f vNewMin | Improve this Doc View Source MoveMin(Single, Single) Declaration public void MoveMin(float fNewX, float fNewY) Parameters Type Name Description Single fNewX Single fNewY | Improve this Doc View Source Pad(Single, Single, Single, Single) Declaration [Obsolete(\"This method name is confusing. Will remove in future. Use Add() instead\")] public void Pad(float fPadLeft, float fPadRight, float fPadBottom, float fPadTop) Parameters Type Name Description Single fPadLeft Single fPadRight Single fPadBottom Single fPadTop | Improve this Doc View Source SetHeight(Single, AxisAlignedBox2f.ScaleMode) Declaration public void SetHeight(float fNewHeight, AxisAlignedBox2f.ScaleMode eScaleMode) Parameters Type Name Description Single fNewHeight AxisAlignedBox2f.ScaleMode eScaleMode | Improve this Doc View Source SetWidth(Single, AxisAlignedBox2f.ScaleMode) Declaration public void SetWidth(float fNewWidth, AxisAlignedBox2f.ScaleMode eScaleMode) Parameters Type Name Description Single fNewWidth AxisAlignedBox2f.ScaleMode eScaleMode | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() | Improve this Doc View Source Translate(Vector2f) Declaration public void Translate(Vector2f vTranslate) Parameters Type Name Description Vector2f vTranslate"
  },
  "api/g3.AxisAlignedBox2f.ScaleMode.html": {
    "href": "api/g3.AxisAlignedBox2f.ScaleMode.html",
    "title": "Enum AxisAlignedBox2f.ScaleMode | ViRGIS VR GIS",
    "keywords": "Enum AxisAlignedBox2f.ScaleMode Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum ScaleMode Fields Name Description ScaleCenter ScaleDown ScaleLeft ScaleRight ScaleUp"
  },
  "api/g3.AxisAlignedBox2i.html": {
    "href": "api/g3.AxisAlignedBox2i.html",
    "title": "Struct AxisAlignedBox2i | ViRGIS VR GIS",
    "keywords": "Struct AxisAlignedBox2i Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct AxisAlignedBox2i : IComparable<AxisAlignedBox2i>, IEquatable<AxisAlignedBox2i> Constructors | Improve this Doc View Source AxisAlignedBox2i(Vector2i) Declaration public AxisAlignedBox2i(Vector2i vCenter) Parameters Type Name Description Vector2i vCenter | Improve this Doc View Source AxisAlignedBox2i(Vector2i, Vector2i) Declaration public AxisAlignedBox2i(Vector2i vMin, Vector2i vMax) Parameters Type Name Description Vector2i vMin Vector2i vMax | Improve this Doc View Source AxisAlignedBox2i(Vector2i, Int32) Declaration public AxisAlignedBox2i(Vector2i vCenter, int fHalfSize) Parameters Type Name Description Vector2i vCenter Int32 fHalfSize | Improve this Doc View Source AxisAlignedBox2i(Vector2i, Int32, Int32, Int32) Declaration public AxisAlignedBox2i(Vector2i vCenter, int fHalfWidth, int fHalfHeight, int fHalfDepth) Parameters Type Name Description Vector2i vCenter Int32 fHalfWidth Int32 fHalfHeight Int32 fHalfDepth | Improve this Doc View Source AxisAlignedBox2i(Boolean) Declaration public AxisAlignedBox2i(bool bIgnore) Parameters Type Name Description Boolean bIgnore | Improve this Doc View Source AxisAlignedBox2i(Int32) Declaration public AxisAlignedBox2i(int fCubeSize) Parameters Type Name Description Int32 fCubeSize | Improve this Doc View Source AxisAlignedBox2i(Int32, Int32) Declaration public AxisAlignedBox2i(int fWidth, int fHeight) Parameters Type Name Description Int32 fWidth Int32 fHeight | Improve this Doc View Source AxisAlignedBox2i(Int32, Int32, Int32, Int32) Declaration public AxisAlignedBox2i(int xmin, int ymin, int xmax, int ymax) Parameters Type Name Description Int32 xmin Int32 ymin Int32 xmax Int32 ymax Fields | Improve this Doc View Source Empty Declaration public static readonly AxisAlignedBox2i Empty Field Value Type Description AxisAlignedBox2i | Improve this Doc View Source Infinite Declaration public static readonly AxisAlignedBox2i Infinite Field Value Type Description AxisAlignedBox2i | Improve this Doc View Source Max Declaration public Vector2i Max Field Value Type Description Vector2i | Improve this Doc View Source Min Declaration public Vector2i Min Field Value Type Description Vector2i | Improve this Doc View Source UnitPositive Declaration public static readonly AxisAlignedBox2i UnitPositive Field Value Type Description AxisAlignedBox2i | Improve this Doc View Source Zero Declaration public static readonly AxisAlignedBox2i Zero Field Value Type Description AxisAlignedBox2i Properties | Improve this Doc View Source Area Declaration public int Area { get; } Property Value Type Description Int32 | Improve this Doc View Source Center Declaration public Vector2i Center { get; } Property Value Type Description Vector2i | Improve this Doc View Source Diagonal Declaration public Vector2i Diagonal { get; } Property Value Type Description Vector2i | Improve this Doc View Source DiagonalLength Declaration public int DiagonalLength { get; } Property Value Type Description Int32 | Improve this Doc View Source Extents Declaration public Vector2i Extents { get; } Property Value Type Description Vector2i | Improve this Doc View Source Height Declaration public int Height { get; } Property Value Type Description Int32 | Improve this Doc View Source MaxDim Declaration public int MaxDim { get; } Property Value Type Description Int32 | Improve this Doc View Source Width Declaration public int Width { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source CompareTo(AxisAlignedBox2i) Declaration public int CompareTo(AxisAlignedBox2i other) Parameters Type Name Description AxisAlignedBox2i other Returns Type Description Int32 | Improve this Doc View Source Contain(AxisAlignedBox2i) Declaration public void Contain(AxisAlignedBox2i box) Parameters Type Name Description AxisAlignedBox2i box | Improve this Doc View Source Contain(AxisAlignedBox3d) Declaration public void Contain(AxisAlignedBox3d box) Parameters Type Name Description AxisAlignedBox3d box | Improve this Doc View Source Contain(Vector2i) Declaration public void Contain(Vector2i v) Parameters Type Name Description Vector2i v | Improve this Doc View Source Contain(Vector3d) Declaration public void Contain(Vector3d v) Parameters Type Name Description Vector3d v | Improve this Doc View Source Contains(AxisAlignedBox2i) Declaration public bool Contains(AxisAlignedBox2i box) Parameters Type Name Description AxisAlignedBox2i box Returns Type Description Boolean | Improve this Doc View Source Contains(ref AxisAlignedBox2i) Declaration public bool Contains(ref AxisAlignedBox2i box) Parameters Type Name Description AxisAlignedBox2i box Returns Type Description Boolean | Improve this Doc View Source Contains(Vector2i) Declaration public bool Contains(Vector2i v) Parameters Type Name Description Vector2i v Returns Type Description Boolean | Improve this Doc View Source Contains(ref Vector2i) Declaration public bool Contains(ref Vector2i v) Parameters Type Name Description Vector2i v Returns Type Description Boolean | Improve this Doc View Source Contract(Int32) Declaration public void Contract(int nRadius) Parameters Type Name Description Int32 nRadius | Improve this Doc View Source Distance(Vector2i) Declaration public int Distance(Vector2i v) Parameters Type Name Description Vector2i v Returns Type Description Int32 | Improve this Doc View Source DistanceSquared(Vector2i) Declaration public double DistanceSquared(Vector2i v) Parameters Type Name Description Vector2i v Returns Type Description Double | Improve this Doc View Source Equals(AxisAlignedBox2i) Declaration public bool Equals(AxisAlignedBox2i other) Parameters Type Name Description AxisAlignedBox2i other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source Expand(Int32) Declaration public void Expand(int nRadius) Parameters Type Name Description Int32 nRadius | Improve this Doc View Source GetCorner(Int32) Declaration public Vector2i GetCorner(int i) Parameters Type Name Description Int32 i Returns Type Description Vector2i | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source IndicesExclusive() Declaration public IEnumerable<Vector2i> IndicesExclusive() Returns Type Description IEnumerable < Vector2i > | Improve this Doc View Source IndicesInclusive() Declaration public IEnumerable<Vector2i> IndicesInclusive() Returns Type Description IEnumerable < Vector2i > | Improve this Doc View Source Intersect(AxisAlignedBox2i) Declaration public AxisAlignedBox2i Intersect(AxisAlignedBox2i box) Parameters Type Name Description AxisAlignedBox2i box Returns Type Description AxisAlignedBox2i | Improve this Doc View Source Intersects(AxisAlignedBox2i) Declaration public bool Intersects(AxisAlignedBox2i box) Parameters Type Name Description AxisAlignedBox2i box Returns Type Description Boolean | Improve this Doc View Source MoveMin(Vector2i) Declaration public void MoveMin(Vector2i vNewMin) Parameters Type Name Description Vector2i vNewMin | Improve this Doc View Source MoveMin(Int32, Int32) Declaration public void MoveMin(int fNewX, int fNewY) Parameters Type Name Description Int32 fNewX Int32 fNewY | Improve this Doc View Source NearestPoint(Vector2i) Declaration public Vector2i NearestPoint(Vector2i v) Parameters Type Name Description Vector2i v Returns Type Description Vector2i | Improve this Doc View Source Scale(Int32, Int32, Int32) Declaration public void Scale(int sx, int sy, int sz) Parameters Type Name Description Int32 sx Int32 sy Int32 sz | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() | Improve this Doc View Source Translate(Vector2i) Declaration public void Translate(Vector2i vTranslate) Parameters Type Name Description Vector2i vTranslate Operators | Improve this Doc View Source Equality(AxisAlignedBox2i, AxisAlignedBox2i) Declaration public static bool operator ==(AxisAlignedBox2i a, AxisAlignedBox2i b) Parameters Type Name Description AxisAlignedBox2i a AxisAlignedBox2i b Returns Type Description Boolean | Improve this Doc View Source Inequality(AxisAlignedBox2i, AxisAlignedBox2i) Declaration public static bool operator !=(AxisAlignedBox2i a, AxisAlignedBox2i b) Parameters Type Name Description AxisAlignedBox2i a AxisAlignedBox2i b Returns Type Description Boolean"
  },
  "api/g3.AxisAlignedBox3d.html": {
    "href": "api/g3.AxisAlignedBox3d.html",
    "title": "Struct AxisAlignedBox3d | ViRGIS VR GIS",
    "keywords": "Struct AxisAlignedBox3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct AxisAlignedBox3d : IComparable<AxisAlignedBox3d>, IEquatable<AxisAlignedBox3d> Constructors | Improve this Doc View Source AxisAlignedBox3d(Vector3d) Declaration public AxisAlignedBox3d(Vector3d vCenter) Parameters Type Name Description Vector3d vCenter | Improve this Doc View Source AxisAlignedBox3d(Vector3d, Vector3d) Declaration public AxisAlignedBox3d(Vector3d vMin, Vector3d vMax) Parameters Type Name Description Vector3d vMin Vector3d vMax | Improve this Doc View Source AxisAlignedBox3d(Vector3d, Double) Declaration public AxisAlignedBox3d(Vector3d vCenter, double fHalfSize) Parameters Type Name Description Vector3d vCenter Double fHalfSize | Improve this Doc View Source AxisAlignedBox3d(Vector3d, Double, Double, Double) Declaration public AxisAlignedBox3d(Vector3d vCenter, double fHalfWidth, double fHalfHeight, double fHalfDepth) Parameters Type Name Description Vector3d vCenter Double fHalfWidth Double fHalfHeight Double fHalfDepth | Improve this Doc View Source AxisAlignedBox3d(ref Vector3d, ref Vector3d) Declaration public AxisAlignedBox3d(ref Vector3d vMin, ref Vector3d vMax) Parameters Type Name Description Vector3d vMin Vector3d vMax | Improve this Doc View Source AxisAlignedBox3d(ref Vector3d, Double, Double, Double) Declaration public AxisAlignedBox3d(ref Vector3d vCenter, double fHalfWidth, double fHalfHeight, double fHalfDepth) Parameters Type Name Description Vector3d vCenter Double fHalfWidth Double fHalfHeight Double fHalfDepth | Improve this Doc View Source AxisAlignedBox3d(Boolean) Declaration public AxisAlignedBox3d(bool bIgnore) Parameters Type Name Description Boolean bIgnore | Improve this Doc View Source AxisAlignedBox3d(Double) init box [0,size] x [0,size] x [0,size] Declaration public AxisAlignedBox3d(double fCubeSize) Parameters Type Name Description Double fCubeSize | Improve this Doc View Source AxisAlignedBox3d(Double, Double, Double) Init box [0,width] x [0,height] x [0,depth] Declaration public AxisAlignedBox3d(double fWidth, double fHeight, double fDepth) Parameters Type Name Description Double fWidth Double fHeight Double fDepth | Improve this Doc View Source AxisAlignedBox3d(Double, Double, Double, Double, Double, Double) Declaration public AxisAlignedBox3d(double xmin, double ymin, double zmin, double xmax, double ymax, double zmax) Parameters Type Name Description Double xmin Double ymin Double zmin Double xmax Double ymax Double zmax Fields | Improve this Doc View Source Empty Declaration public static readonly AxisAlignedBox3d Empty Field Value Type Description AxisAlignedBox3d | Improve this Doc View Source Infinite Declaration public static readonly AxisAlignedBox3d Infinite Field Value Type Description AxisAlignedBox3d | Improve this Doc View Source Max Declaration public Vector3d Max Field Value Type Description Vector3d | Improve this Doc View Source Min Declaration public Vector3d Min Field Value Type Description Vector3d | Improve this Doc View Source UnitPositive Declaration public static readonly AxisAlignedBox3d UnitPositive Field Value Type Description AxisAlignedBox3d | Improve this Doc View Source Zero Declaration public static readonly AxisAlignedBox3d Zero Field Value Type Description AxisAlignedBox3d Properties | Improve this Doc View Source Center Declaration public Vector3d Center { get; } Property Value Type Description Vector3d | Improve this Doc View Source Depth Declaration public double Depth { get; } Property Value Type Description Double | Improve this Doc View Source Diagonal Declaration public Vector3d Diagonal { get; } Property Value Type Description Vector3d | Improve this Doc View Source DiagonalLength Declaration public double DiagonalLength { get; } Property Value Type Description Double | Improve this Doc View Source Extents Declaration public Vector3d Extents { get; } Property Value Type Description Vector3d | Improve this Doc View Source Height Declaration public double Height { get; } Property Value Type Description Double | Improve this Doc View Source MaxDim Declaration public double MaxDim { get; } Property Value Type Description Double | Improve this Doc View Source Volume Declaration public double Volume { get; } Property Value Type Description Double | Improve this Doc View Source Width Declaration public double Width { get; } Property Value Type Description Double Methods | Improve this Doc View Source CompareTo(AxisAlignedBox3d) Declaration public int CompareTo(AxisAlignedBox3d other) Parameters Type Name Description AxisAlignedBox3d other Returns Type Description Int32 | Improve this Doc View Source Contain(AxisAlignedBox3d) Declaration public void Contain(AxisAlignedBox3d box) Parameters Type Name Description AxisAlignedBox3d box | Improve this Doc View Source Contain(ref AxisAlignedBox3d) Declaration public void Contain(ref AxisAlignedBox3d box) Parameters Type Name Description AxisAlignedBox3d box | Improve this Doc View Source Contain(Vector3d) Declaration public void Contain(Vector3d v) Parameters Type Name Description Vector3d v | Improve this Doc View Source Contain(ref Vector3d) Declaration public void Contain(ref Vector3d v) Parameters Type Name Description Vector3d v | Improve this Doc View Source Contains(AxisAlignedBox3d) Declaration public bool Contains(AxisAlignedBox3d box2) Parameters Type Name Description AxisAlignedBox3d box2 Returns Type Description Boolean | Improve this Doc View Source Contains(ref AxisAlignedBox3d) Declaration public bool Contains(ref AxisAlignedBox3d box2) Parameters Type Name Description AxisAlignedBox3d box2 Returns Type Description Boolean | Improve this Doc View Source Contains(Vector3d) Declaration public bool Contains(Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Boolean | Improve this Doc View Source Contains(ref Vector3d) Declaration public bool Contains(ref Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Boolean | Improve this Doc View Source Contract(Double) Declaration public void Contract(double fRadius) Parameters Type Name Description Double fRadius | Improve this Doc View Source Contracted(Double) Declaration public AxisAlignedBox3d Contracted(double fRadius) Parameters Type Name Description Double fRadius Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Corner(Int32) Declaration public Vector3d Corner(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3d | Improve this Doc View Source Distance(Vector3d) Declaration public double Distance(Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Double | Improve this Doc View Source DistanceSquared(ref AxisAlignedBox3d) Declaration public double DistanceSquared(ref AxisAlignedBox3d box2) Parameters Type Name Description AxisAlignedBox3d box2 Returns Type Description Double | Improve this Doc View Source DistanceSquared(Vector3d) Declaration public double DistanceSquared(Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Double | Improve this Doc View Source Equals(AxisAlignedBox3d) Declaration public bool Equals(AxisAlignedBox3d other) Parameters Type Name Description AxisAlignedBox3d other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source Expand(Double) Declaration public void Expand(double fRadius) Parameters Type Name Description Double fRadius | Improve this Doc View Source Expanded(Double) Declaration public AxisAlignedBox3d Expanded(double fRadius) Parameters Type Name Description Double fRadius Returns Type Description AxisAlignedBox3d | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source Intersect(AxisAlignedBox3d) Declaration public AxisAlignedBox3d Intersect(AxisAlignedBox3d box) Parameters Type Name Description AxisAlignedBox3d box Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Intersects(AxisAlignedBox3d) Declaration public bool Intersects(AxisAlignedBox3d box) Parameters Type Name Description AxisAlignedBox3d box Returns Type Description Boolean | Improve this Doc View Source MoveMin(Vector3d) Declaration public void MoveMin(Vector3d vNewMin) Parameters Type Name Description Vector3d vNewMin | Improve this Doc View Source MoveMin(Double, Double, Double) Declaration public void MoveMin(double fNewX, double fNewY, double fNewZ) Parameters Type Name Description Double fNewX Double fNewY Double fNewZ | Improve this Doc View Source Point(Int32, Int32, Int32) Returns point on face/edge/corner. For each coord value neg==min, 0==center, pos==max Declaration public Vector3d Point(int xi, int yi, int zi) Parameters Type Name Description Int32 xi Int32 yi Int32 zi Returns Type Description Vector3d | Improve this Doc View Source Scale(Double, Double, Double) Declaration public void Scale(double sx, double sy, double sz) Parameters Type Name Description Double sx Double sy Double sz | Improve this Doc View Source SignedDistance(Vector3d) Declaration public double SignedDistance(Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Double | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() | Improve this Doc View Source Translate(Vector3d) Declaration public void Translate(Vector3d vTranslate) Parameters Type Name Description Vector3d vTranslate Operators | Improve this Doc View Source Equality(AxisAlignedBox3d, AxisAlignedBox3d) Declaration public static bool operator ==(AxisAlignedBox3d a, AxisAlignedBox3d b) Parameters Type Name Description AxisAlignedBox3d a AxisAlignedBox3d b Returns Type Description Boolean | Improve this Doc View Source Explicit(AxisAlignedBox3d to AxisAlignedBox3f) Declaration public static explicit operator AxisAlignedBox3f(AxisAlignedBox3d v) Parameters Type Name Description AxisAlignedBox3d v Returns Type Description AxisAlignedBox3f | Improve this Doc View Source Implicit(AxisAlignedBox3f to AxisAlignedBox3d) Declaration public static implicit operator AxisAlignedBox3d(AxisAlignedBox3f v) Parameters Type Name Description AxisAlignedBox3f v Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Inequality(AxisAlignedBox3d, AxisAlignedBox3d) Declaration public static bool operator !=(AxisAlignedBox3d a, AxisAlignedBox3d b) Parameters Type Name Description AxisAlignedBox3d a AxisAlignedBox3d b Returns Type Description Boolean"
  },
  "api/g3.AxisAlignedBox3f.html": {
    "href": "api/g3.AxisAlignedBox3f.html",
    "title": "Struct AxisAlignedBox3f | ViRGIS VR GIS",
    "keywords": "Struct AxisAlignedBox3f Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct AxisAlignedBox3f : IComparable<AxisAlignedBox3f>, IEquatable<AxisAlignedBox3f> Constructors | Improve this Doc View Source AxisAlignedBox3f(Vector3f) Declaration public AxisAlignedBox3f(Vector3f vCenter) Parameters Type Name Description Vector3f vCenter | Improve this Doc View Source AxisAlignedBox3f(Vector3f, Vector3f) Declaration public AxisAlignedBox3f(Vector3f vMin, Vector3f vMax) Parameters Type Name Description Vector3f vMin Vector3f vMax | Improve this Doc View Source AxisAlignedBox3f(Vector3f, Single) Declaration public AxisAlignedBox3f(Vector3f vCenter, float fHalfSize) Parameters Type Name Description Vector3f vCenter Single fHalfSize | Improve this Doc View Source AxisAlignedBox3f(Vector3f, Single, Single, Single) Declaration public AxisAlignedBox3f(Vector3f vCenter, float fHalfWidth, float fHalfHeight, float fHalfDepth) Parameters Type Name Description Vector3f vCenter Single fHalfWidth Single fHalfHeight Single fHalfDepth | Improve this Doc View Source AxisAlignedBox3f(ref Vector3f, ref Vector3f) Declaration public AxisAlignedBox3f(ref Vector3f vMin, ref Vector3f vMax) Parameters Type Name Description Vector3f vMin Vector3f vMax | Improve this Doc View Source AxisAlignedBox3f(ref Vector3f, Single, Single, Single) Declaration public AxisAlignedBox3f(ref Vector3f vCenter, float fHalfWidth, float fHalfHeight, float fHalfDepth) Parameters Type Name Description Vector3f vCenter Single fHalfWidth Single fHalfHeight Single fHalfDepth | Improve this Doc View Source AxisAlignedBox3f(Boolean) Declaration public AxisAlignedBox3f(bool bIgnore) Parameters Type Name Description Boolean bIgnore | Improve this Doc View Source AxisAlignedBox3f(Single) Declaration public AxisAlignedBox3f(float fCubeSize) Parameters Type Name Description Single fCubeSize | Improve this Doc View Source AxisAlignedBox3f(Single, Single, Single) Declaration public AxisAlignedBox3f(float fWidth, float fHeight, float fDepth) Parameters Type Name Description Single fWidth Single fHeight Single fDepth | Improve this Doc View Source AxisAlignedBox3f(Single, Single, Single, Single, Single, Single) Declaration public AxisAlignedBox3f(float xmin, float ymin, float zmin, float xmax, float ymax, float zmax) Parameters Type Name Description Single xmin Single ymin Single zmin Single xmax Single ymax Single zmax Fields | Improve this Doc View Source Empty Declaration public static readonly AxisAlignedBox3f Empty Field Value Type Description AxisAlignedBox3f | Improve this Doc View Source Infinite Declaration public static readonly AxisAlignedBox3f Infinite Field Value Type Description AxisAlignedBox3f | Improve this Doc View Source Max Declaration public Vector3f Max Field Value Type Description Vector3f | Improve this Doc View Source Min Declaration public Vector3f Min Field Value Type Description Vector3f | Improve this Doc View Source UnitPositive Declaration public static readonly AxisAlignedBox3f UnitPositive Field Value Type Description AxisAlignedBox3f | Improve this Doc View Source Zero Declaration public static readonly AxisAlignedBox3f Zero Field Value Type Description AxisAlignedBox3f Properties | Improve this Doc View Source Center Declaration public Vector3f Center { get; } Property Value Type Description Vector3f | Improve this Doc View Source Depth Declaration public float Depth { get; } Property Value Type Description Single | Improve this Doc View Source Diagonal Declaration public Vector3f Diagonal { get; } Property Value Type Description Vector3f | Improve this Doc View Source DiagonalLength Declaration public float DiagonalLength { get; } Property Value Type Description Single | Improve this Doc View Source Extents Declaration public Vector3f Extents { get; } Property Value Type Description Vector3f | Improve this Doc View Source Height Declaration public float Height { get; } Property Value Type Description Single | Improve this Doc View Source MaxDim Declaration public float MaxDim { get; } Property Value Type Description Single | Improve this Doc View Source Volume Declaration public float Volume { get; } Property Value Type Description Single | Improve this Doc View Source Width Declaration public float Width { get; } Property Value Type Description Single Methods | Improve this Doc View Source CompareTo(AxisAlignedBox3f) Declaration public int CompareTo(AxisAlignedBox3f other) Parameters Type Name Description AxisAlignedBox3f other Returns Type Description Int32 | Improve this Doc View Source Contain(AxisAlignedBox3d) Declaration public void Contain(AxisAlignedBox3d box) Parameters Type Name Description AxisAlignedBox3d box | Improve this Doc View Source Contain(AxisAlignedBox3f) Declaration public void Contain(AxisAlignedBox3f box) Parameters Type Name Description AxisAlignedBox3f box | Improve this Doc View Source Contain(Vector3d) Declaration public void Contain(Vector3d v) Parameters Type Name Description Vector3d v | Improve this Doc View Source Contain(Vector3f) Declaration public void Contain(Vector3f v) Parameters Type Name Description Vector3f v | Improve this Doc View Source Contains(Vector3f) Declaration public bool Contains(Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description Boolean | Improve this Doc View Source Contract(Single) Declaration public void Contract(float fRadius) Parameters Type Name Description Single fRadius | Improve this Doc View Source Corner(Int32) Declaration public Vector3f Corner(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3f | Improve this Doc View Source Distance(Vector3f) Declaration public float Distance(Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description Single | Improve this Doc View Source DistanceSquared(Vector3f) Declaration public double DistanceSquared(Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description Double | Improve this Doc View Source Equals(AxisAlignedBox3f) Declaration public bool Equals(AxisAlignedBox3f other) Parameters Type Name Description AxisAlignedBox3f other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source Expand(Single) Declaration public void Expand(float fRadius) Parameters Type Name Description Single fRadius | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source Intersect(AxisAlignedBox3f) Declaration public AxisAlignedBox3f Intersect(AxisAlignedBox3f box) Parameters Type Name Description AxisAlignedBox3f box Returns Type Description AxisAlignedBox3f | Improve this Doc View Source Intersects(AxisAlignedBox3f) Declaration public bool Intersects(AxisAlignedBox3f box) Parameters Type Name Description AxisAlignedBox3f box Returns Type Description Boolean | Improve this Doc View Source MoveMin(Vector3f) Declaration public void MoveMin(Vector3f vNewMin) Parameters Type Name Description Vector3f vNewMin | Improve this Doc View Source MoveMin(Single, Single, Single) Declaration public void MoveMin(float fNewX, float fNewY, float fNewZ) Parameters Type Name Description Single fNewX Single fNewY Single fNewZ | Improve this Doc View Source NearestPoint(Vector3f) Declaration public Vector3f NearestPoint(Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description Vector3f | Improve this Doc View Source Point(Int32, Int32, Int32) Returns point on face/edge/corner. For each coord value neg==min, 0==center, pos==max Declaration public Vector3f Point(int xi, int yi, int zi) Parameters Type Name Description Int32 xi Int32 yi Int32 zi Returns Type Description Vector3f | Improve this Doc View Source Scale(Single, Single, Single) Declaration public void Scale(float sx, float sy, float sz) Parameters Type Name Description Single sx Single sy Single sz | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() | Improve this Doc View Source Translate(Vector3f) Declaration public void Translate(Vector3f vTranslate) Parameters Type Name Description Vector3f vTranslate Operators | Improve this Doc View Source Equality(AxisAlignedBox3f, AxisAlignedBox3f) Declaration public static bool operator ==(AxisAlignedBox3f a, AxisAlignedBox3f b) Parameters Type Name Description AxisAlignedBox3f a AxisAlignedBox3f b Returns Type Description Boolean | Improve this Doc View Source Inequality(AxisAlignedBox3f, AxisAlignedBox3f) Declaration public static bool operator !=(AxisAlignedBox3f a, AxisAlignedBox3f b) Parameters Type Name Description AxisAlignedBox3f a AxisAlignedBox3f b Returns Type Description Boolean"
  },
  "api/g3.AxisAlignedBox3i.html": {
    "href": "api/g3.AxisAlignedBox3i.html",
    "title": "Struct AxisAlignedBox3i | ViRGIS VR GIS",
    "keywords": "Struct AxisAlignedBox3i Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct AxisAlignedBox3i : IComparable<AxisAlignedBox3i>, IEquatable<AxisAlignedBox3i> Constructors | Improve this Doc View Source AxisAlignedBox3i(Vector3i) Declaration public AxisAlignedBox3i(Vector3i vCenter) Parameters Type Name Description Vector3i vCenter | Improve this Doc View Source AxisAlignedBox3i(Vector3i, Vector3i) Declaration public AxisAlignedBox3i(Vector3i vMin, Vector3i vMax) Parameters Type Name Description Vector3i vMin Vector3i vMax | Improve this Doc View Source AxisAlignedBox3i(Vector3i, Int32) Declaration public AxisAlignedBox3i(Vector3i vCenter, int fHalfSize) Parameters Type Name Description Vector3i vCenter Int32 fHalfSize | Improve this Doc View Source AxisAlignedBox3i(Vector3i, Int32, Int32, Int32) Declaration public AxisAlignedBox3i(Vector3i vCenter, int fHalfWidth, int fHalfHeight, int fHalfDepth) Parameters Type Name Description Vector3i vCenter Int32 fHalfWidth Int32 fHalfHeight Int32 fHalfDepth | Improve this Doc View Source AxisAlignedBox3i(Boolean) Declaration public AxisAlignedBox3i(bool bIgnore) Parameters Type Name Description Boolean bIgnore | Improve this Doc View Source AxisAlignedBox3i(Int32) Declaration public AxisAlignedBox3i(int fCubeSize) Parameters Type Name Description Int32 fCubeSize | Improve this Doc View Source AxisAlignedBox3i(Int32, Int32, Int32) Declaration public AxisAlignedBox3i(int fWidth, int fHeight, int fDepth) Parameters Type Name Description Int32 fWidth Int32 fHeight Int32 fDepth | Improve this Doc View Source AxisAlignedBox3i(Int32, Int32, Int32, Int32, Int32, Int32) Declaration public AxisAlignedBox3i(int xmin, int ymin, int zmin, int xmax, int ymax, int zmax) Parameters Type Name Description Int32 xmin Int32 ymin Int32 zmin Int32 xmax Int32 ymax Int32 zmax Fields | Improve this Doc View Source Empty Declaration public static readonly AxisAlignedBox3i Empty Field Value Type Description AxisAlignedBox3i | Improve this Doc View Source Infinite Declaration public static readonly AxisAlignedBox3i Infinite Field Value Type Description AxisAlignedBox3i | Improve this Doc View Source Max Declaration public Vector3i Max Field Value Type Description Vector3i | Improve this Doc View Source Min Declaration public Vector3i Min Field Value Type Description Vector3i | Improve this Doc View Source UnitPositive Declaration public static readonly AxisAlignedBox3i UnitPositive Field Value Type Description AxisAlignedBox3i | Improve this Doc View Source Zero Declaration public static readonly AxisAlignedBox3i Zero Field Value Type Description AxisAlignedBox3i Properties | Improve this Doc View Source Center Declaration public Vector3i Center { get; } Property Value Type Description Vector3i | Improve this Doc View Source Depth Declaration public int Depth { get; } Property Value Type Description Int32 | Improve this Doc View Source Diagonal Declaration public Vector3i Diagonal { get; } Property Value Type Description Vector3i | Improve this Doc View Source DiagonalLength Declaration public int DiagonalLength { get; } Property Value Type Description Int32 | Improve this Doc View Source Extents Declaration public Vector3i Extents { get; } Property Value Type Description Vector3i | Improve this Doc View Source Height Declaration public int Height { get; } Property Value Type Description Int32 | Improve this Doc View Source MaxDim Declaration public int MaxDim { get; } Property Value Type Description Int32 | Improve this Doc View Source Volume Declaration public int Volume { get; } Property Value Type Description Int32 | Improve this Doc View Source Width Declaration public int Width { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source ClampExclusive(Vector3i) clamp v to grid bounds [min,max) Declaration public Vector3i ClampExclusive(Vector3i v) Parameters Type Name Description Vector3i v Returns Type Description Vector3i | Improve this Doc View Source ClampInclusive(Vector3i) Clamp v to grid bounds [min, max] Declaration public Vector3i ClampInclusive(Vector3i v) Parameters Type Name Description Vector3i v Returns Type Description Vector3i | Improve this Doc View Source CompareTo(AxisAlignedBox3i) Declaration public int CompareTo(AxisAlignedBox3i other) Parameters Type Name Description AxisAlignedBox3i other Returns Type Description Int32 | Improve this Doc View Source Contain(AxisAlignedBox3d) Declaration public void Contain(AxisAlignedBox3d box) Parameters Type Name Description AxisAlignedBox3d box | Improve this Doc View Source Contain(AxisAlignedBox3i) Declaration public void Contain(AxisAlignedBox3i box) Parameters Type Name Description AxisAlignedBox3i box | Improve this Doc View Source Contain(Vector3d) Declaration public void Contain(Vector3d v) Parameters Type Name Description Vector3d v | Improve this Doc View Source Contain(Vector3i) Declaration public void Contain(Vector3i v) Parameters Type Name Description Vector3i v | Improve this Doc View Source Contains(Vector3i) Declaration public bool Contains(Vector3i v) Parameters Type Name Description Vector3i v Returns Type Description Boolean | Improve this Doc View Source Contract(Int32) Declaration public void Contract(int nRadius) Parameters Type Name Description Int32 nRadius | Improve this Doc View Source Distance(Vector3i) Declaration public int Distance(Vector3i v) Parameters Type Name Description Vector3i v Returns Type Description Int32 | Improve this Doc View Source DistanceSquared(Vector3i) Declaration public double DistanceSquared(Vector3i v) Parameters Type Name Description Vector3i v Returns Type Description Double | Improve this Doc View Source Equals(AxisAlignedBox3i) Declaration public bool Equals(AxisAlignedBox3i other) Parameters Type Name Description AxisAlignedBox3i other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source Expand(Int32) Declaration public void Expand(int nRadius) Parameters Type Name Description Int32 nRadius | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source IndicesExclusive() Declaration public IEnumerable<Vector3i> IndicesExclusive() Returns Type Description IEnumerable < Vector3i > | Improve this Doc View Source IndicesInclusive() Declaration public IEnumerable<Vector3i> IndicesInclusive() Returns Type Description IEnumerable < Vector3i > | Improve this Doc View Source Intersect(AxisAlignedBox3i) Declaration public AxisAlignedBox3i Intersect(AxisAlignedBox3i box) Parameters Type Name Description AxisAlignedBox3i box Returns Type Description AxisAlignedBox3i | Improve this Doc View Source Intersects(AxisAlignedBox3i) Declaration public bool Intersects(AxisAlignedBox3i box) Parameters Type Name Description AxisAlignedBox3i box Returns Type Description Boolean | Improve this Doc View Source MoveMin(Vector3i) Declaration public void MoveMin(Vector3i vNewMin) Parameters Type Name Description Vector3i vNewMin | Improve this Doc View Source MoveMin(Int32, Int32, Int32) Declaration public void MoveMin(int fNewX, int fNewY, int fNewZ) Parameters Type Name Description Int32 fNewX Int32 fNewY Int32 fNewZ | Improve this Doc View Source NearestPoint(Vector3i) Declaration public Vector3i NearestPoint(Vector3i v) Parameters Type Name Description Vector3i v Returns Type Description Vector3i | Improve this Doc View Source Scale(Int32, Int32, Int32) Declaration public void Scale(int sx, int sy, int sz) Parameters Type Name Description Int32 sx Int32 sy Int32 sz | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() | Improve this Doc View Source Translate(Vector3i) Declaration public void Translate(Vector3i vTranslate) Parameters Type Name Description Vector3i vTranslate Operators | Improve this Doc View Source Equality(AxisAlignedBox3i, AxisAlignedBox3i) Declaration public static bool operator ==(AxisAlignedBox3i a, AxisAlignedBox3i b) Parameters Type Name Description AxisAlignedBox3i a AxisAlignedBox3i b Returns Type Description Boolean | Improve this Doc View Source Inequality(AxisAlignedBox3i, AxisAlignedBox3i) Declaration public static bool operator !=(AxisAlignedBox3i a, AxisAlignedBox3i b) Parameters Type Name Description AxisAlignedBox3i a AxisAlignedBox3i b Returns Type Description Boolean"
  },
  "api/g3.BaseCurve2.html": {
    "href": "api/g3.BaseCurve2.html",
    "title": "Class BaseCurve2 | ViRGIS VR GIS",
    "keywords": "Class BaseCurve2 Inheritance Object BaseCurve2 BezierCurve2 NURBSCurve2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public abstract class BaseCurve2 Constructors | Improve this Doc View Source BaseCurve2(Double, Double) Declaration public BaseCurve2(double tmin, double tmax) Parameters Type Name Description Double tmin Double tmax Fields | Improve this Doc View Source mTMax Declaration protected double mTMax Field Value Type Description Double | Improve this Doc View Source mTMin Declaration protected double mTMin Field Value Type Description Double Methods | Improve this Doc View Source GetCurvature(Double) Declaration public double GetCurvature(double t) Parameters Type Name Description Double t Returns Type Description Double | Improve this Doc View Source GetFirstDerivative(Double) Declaration public abstract Vector2d GetFirstDerivative(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source GetFrame(Double, ref Vector2d, ref Vector2d, ref Vector2d) Declaration public void GetFrame(double t, ref Vector2d position, ref Vector2d tangent, ref Vector2d normal) Parameters Type Name Description Double t Vector2d position Vector2d tangent Vector2d normal | Improve this Doc View Source GetLength(Double, Double) Declaration public virtual double GetLength(double t0, double t1) Parameters Type Name Description Double t0 Double t1 Returns Type Description Double | Improve this Doc View Source GetMaxTime() Declaration public double GetMaxTime() Returns Type Description Double | Improve this Doc View Source GetMinTime() Declaration public double GetMinTime() Returns Type Description Double | Improve this Doc View Source GetNormal(Double) Declaration public Vector2d GetNormal(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source GetPosition(Double) Declaration public abstract Vector2d GetPosition(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source GetSecondDerivative(Double) Declaration public abstract Vector2d GetSecondDerivative(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source GetSpeed(Double) Declaration public double GetSpeed(double t) Parameters Type Name Description Double t Returns Type Description Double | Improve this Doc View Source GetTangent(Double) Declaration public Vector2d GetTangent(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source GetThirdDerivative(Double) Declaration public abstract Vector2d GetThirdDerivative(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source GetTime(Double, Int32, Double) Declaration public virtual double GetTime(double length, int iterations = 32, double tolerance = 1E-06) Parameters Type Name Description Double length Int32 iterations Double tolerance Returns Type Description Double | Improve this Doc View Source GetTotalLength() Declaration public double GetTotalLength() Returns Type Description Double | Improve this Doc View Source SetTimeInterval(Double, Double) Declaration public void SetTimeInterval(double tmin, double tmax) Parameters Type Name Description Double tmin Double tmax"
  },
  "api/g3.BezierCurve2.html": {
    "href": "api/g3.BezierCurve2.html",
    "title": "Class BezierCurve2 | ViRGIS VR GIS",
    "keywords": "Class BezierCurve2 2D Bezier curve of arbitrary degree Ported from WildMagic5 Wm5BezierCurve2 Inheritance Object BaseCurve2 BezierCurve2 Implements IParametricCurve2d Inherited Members BaseCurve2.mTMin BaseCurve2.mTMax BaseCurve2.GetMinTime() BaseCurve2.GetMaxTime() BaseCurve2.SetTimeInterval(Double, Double) BaseCurve2.GetSpeed(Double) BaseCurve2.GetLength(Double, Double) BaseCurve2.GetTotalLength() BaseCurve2.GetTangent(Double) BaseCurve2.GetNormal(Double) BaseCurve2.GetFrame(Double, Vector2d, Vector2d, Vector2d) BaseCurve2.GetCurvature(Double) BaseCurve2.GetTime(Double, Int32, Double) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class BezierCurve2 : BaseCurve2, IParametricCurve2d Constructors | Improve this Doc View Source BezierCurve2() Declaration protected BezierCurve2() | Improve this Doc View Source BezierCurve2(Int32, Vector2d[], Boolean) Declaration public BezierCurve2(int degree, Vector2d[] ctrlPoint, bool bTakeOwnership = false) Parameters Type Name Description Int32 degree Vector2d [] ctrlPoint Boolean bTakeOwnership Properties | Improve this Doc View Source ArcLength Declaration public double ArcLength { get; } Property Value Type Description Double | Improve this Doc View Source ControlPoints Declaration public Vector2d[] ControlPoints { get; } Property Value Type Description Vector2d [] | Improve this Doc View Source Degree Declaration public int Degree { get; } Property Value Type Description Int32 | Improve this Doc View Source HasArcLength Declaration public bool HasArcLength { get; } Property Value Type Description Boolean | Improve this Doc View Source IsClosed Declaration public bool IsClosed { get; } Property Value Type Description Boolean | Improve this Doc View Source IsTransformable Declaration public bool IsTransformable { get; } Property Value Type Description Boolean | Improve this Doc View Source ParamLength Declaration public double ParamLength { get; } Property Value Type Description Double Methods | Improve this Doc View Source Clone() Declaration public IParametricCurve2d Clone() Returns Type Description IParametricCurve2d | Improve this Doc View Source GetFirstDerivative(Double) Declaration public override Vector2d GetFirstDerivative(double t) Parameters Type Name Description Double t Returns Type Description Vector2d Overrides BaseCurve2.GetFirstDerivative(Double) | Improve this Doc View Source GetPosition(Double) Declaration public override Vector2d GetPosition(double t) Parameters Type Name Description Double t Returns Type Description Vector2d Overrides BaseCurve2.GetPosition(Double) | Improve this Doc View Source GetSecondDerivative(Double) Declaration public override Vector2d GetSecondDerivative(double t) Parameters Type Name Description Double t Returns Type Description Vector2d Overrides BaseCurve2.GetSecondDerivative(Double) | Improve this Doc View Source GetThirdDerivative(Double) Declaration public override Vector2d GetThirdDerivative(double t) Parameters Type Name Description Double t Returns Type Description Vector2d Overrides BaseCurve2.GetThirdDerivative(Double) | Improve this Doc View Source Reverse() Declaration public void Reverse() | Improve this Doc View Source SampleArcLength(Double) Declaration public Vector2d SampleArcLength(double a) Parameters Type Name Description Double a Returns Type Description Vector2d | Improve this Doc View Source SampleT(Double) Declaration public Vector2d SampleT(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source TangentT(Double) Declaration public Vector2d TangentT(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source Transform(ITransform2) Declaration public void Transform(ITransform2 xform) Parameters Type Name Description ITransform2 xform Implements IParametricCurve2d"
  },
  "api/g3.BiArcFit2.html": {
    "href": "api/g3.BiArcFit2.html",
    "title": "Class BiArcFit2 | ViRGIS VR GIS",
    "keywords": "Class BiArcFit2 Inheritance Object BiArcFit2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class BiArcFit2 Constructors | Improve this Doc View Source BiArcFit2(Vector2d, Vector2d, Vector2d, Vector2d) Declaration public BiArcFit2(Vector2d point1, Vector2d tangent1, Vector2d point2, Vector2d tangent2) Parameters Type Name Description Vector2d point1 Vector2d tangent1 Vector2d point2 Vector2d tangent2 | Improve this Doc View Source BiArcFit2(Vector2d, Vector2d, Vector2d, Vector2d, Double) Declaration public BiArcFit2(Vector2d point1, Vector2d tangent1, Vector2d point2, Vector2d tangent2, double d1) Parameters Type Name Description Vector2d point1 Vector2d tangent1 Vector2d point2 Vector2d tangent2 Double d1 Fields | Improve this Doc View Source Arc1 Declaration public Arc2d Arc1 Field Value Type Description Arc2d | Improve this Doc View Source Arc1IsSegment Declaration public bool Arc1IsSegment Field Value Type Description Boolean | Improve this Doc View Source Arc2 Declaration public Arc2d Arc2 Field Value Type Description Arc2d | Improve this Doc View Source Arc2IsSegment Declaration public bool Arc2IsSegment Field Value Type Description Boolean | Improve this Doc View Source Epsilon Declaration public double Epsilon Field Value Type Description Double | Improve this Doc View Source FitD1 Declaration public double FitD1 Field Value Type Description Double | Improve this Doc View Source FitD2 Declaration public double FitD2 Field Value Type Description Double | Improve this Doc View Source Point1 Declaration public Vector2d Point1 Field Value Type Description Vector2d | Improve this Doc View Source Point2 Declaration public Vector2d Point2 Field Value Type Description Vector2d | Improve this Doc View Source Segment1 Declaration public Segment2d Segment1 Field Value Type Description Segment2d | Improve this Doc View Source Segment2 Declaration public Segment2d Segment2 Field Value Type Description Segment2d | Improve this Doc View Source Tangent1 Declaration public Vector2d Tangent1 Field Value Type Description Vector2d | Improve this Doc View Source Tangent2 Declaration public Vector2d Tangent2 Field Value Type Description Vector2d Properties | Improve this Doc View Source Curve1 Declaration public IParametricCurve2d Curve1 { get; } Property Value Type Description IParametricCurve2d | Improve this Doc View Source Curve2 Declaration public IParametricCurve2d Curve2 { get; } Property Value Type Description IParametricCurve2d | Improve this Doc View Source Curves Declaration public List<IParametricCurve2d> Curves { get; } Property Value Type Description List < IParametricCurve2d > Methods | Improve this Doc View Source DebugPrint() Declaration public void DebugPrint() | Improve this Doc View Source Distance(Vector2d) Declaration public double Distance(Vector2d point) Parameters Type Name Description Vector2d point Returns Type Description Double | Improve this Doc View Source NearestPoint(Vector2d) Declaration public Vector2d NearestPoint(Vector2d point) Parameters Type Name Description Vector2d point Returns Type Description Vector2d"
  },
  "api/g3.BiGrid3-1.html": {
    "href": "api/g3.BiGrid3-1.html",
    "title": "Class BiGrid3<BlockType> | ViRGIS VR GIS",
    "keywords": "Class BiGrid3<BlockType> BiGrid3 is a two-level multiresolution grid data structure. You provide exemplar object that implements suitable interfaces, and the class automatically generates necessary data structures. Functions to act on parent/child grids are in-progress... Inheritance Object BiGrid3<BlockType> Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class BiGrid3<BlockType> where BlockType : class, IGridElement3, IFixedGrid3 Type Parameters Name Description BlockType Constructors | Improve this Doc View Source BiGrid3(BlockType) Declaration public BiGrid3(BlockType exemplar) Parameters Type Name Description BlockType exemplar Properties | Improve this Doc View Source BlockGrid Declaration public DSparseGrid3<BlockType> BlockGrid { get; } Property Value Type Description DSparseGrid3 <BlockType> | Improve this Doc View Source BlockSize Declaration public Vector3i BlockSize { get; } Property Value Type Description Vector3i | Improve this Doc View Source Indexer Declaration public MultigridIndexer3 Indexer { get; } Property Value Type Description MultigridIndexer3 Methods | Improve this Doc View Source AllocatedBlocks() Declaration public IEnumerable<KeyValuePair<Vector3i, BlockType>> AllocatedBlocks() Returns Type Description IEnumerable < KeyValuePair < Vector3i , BlockType>> | Improve this Doc View Source Update(Index3i, Action<BlockType, Vector3i>) map index into correct block and let client update that block at the correct local index Declaration public void Update(Index3i index, Action<BlockType, Vector3i> UpdateF) Parameters Type Name Description Index3i index Action <BlockType, Vector3i > UpdateF"
  },
  "api/g3.BinaryG3FormatReader.html": {
    "href": "api/g3.BinaryG3FormatReader.html",
    "title": "Class BinaryG3FormatReader | ViRGIS VR GIS",
    "keywords": "Class BinaryG3FormatReader Inheritance Object BinaryG3FormatReader Implements MeshFormatReader Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class BinaryG3FormatReader : MeshFormatReader Properties | Improve this Doc View Source SupportedExtensions Declaration public List<string> SupportedExtensions { get; } Property Value Type Description List < String > Methods | Improve this Doc View Source ReadFile(Stream, IMeshBuilder, ReadOptions, ParsingMessagesHandler) Declaration public IOReadResult ReadFile(Stream stream, IMeshBuilder builder, ReadOptions options, ParsingMessagesHandler messages) Parameters Type Name Description Stream stream IMeshBuilder builder ReadOptions options ParsingMessagesHandler messages Returns Type Description IOReadResult | Improve this Doc View Source ReadFile(String, IMeshBuilder, ReadOptions, ParsingMessagesHandler) Declaration public IOReadResult ReadFile(string sFilename, IMeshBuilder builder, ReadOptions options, ParsingMessagesHandler messages) Parameters Type Name Description String sFilename IMeshBuilder builder ReadOptions options ParsingMessagesHandler messages Returns Type Description IOReadResult Implements MeshFormatReader"
  },
  "api/g3.BinaryG3Reader.html": {
    "href": "api/g3.BinaryG3Reader.html",
    "title": "Class BinaryG3Reader | ViRGIS VR GIS",
    "keywords": "Class BinaryG3Reader Inheritance Object BinaryG3Reader Implements IMeshReader Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class BinaryG3Reader : IMeshReader Methods | Improve this Doc View Source Read(BinaryReader, ReadOptions, IMeshBuilder) Declaration public IOReadResult Read(BinaryReader reader, ReadOptions options, IMeshBuilder builder) Parameters Type Name Description BinaryReader reader ReadOptions options IMeshBuilder builder Returns Type Description IOReadResult | Improve this Doc View Source Read(TextReader, ReadOptions, IMeshBuilder) Declaration public IOReadResult Read(TextReader reader, ReadOptions options, IMeshBuilder builder) Parameters Type Name Description TextReader reader ReadOptions options IMeshBuilder builder Returns Type Description IOReadResult Implements IMeshReader"
  },
  "api/g3.BinaryG3Writer.html": {
    "href": "api/g3.BinaryG3Writer.html",
    "title": "Class BinaryG3Writer | ViRGIS VR GIS",
    "keywords": "Class BinaryG3Writer Inheritance Object BinaryG3Writer Implements IMeshWriter Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class BinaryG3Writer : IMeshWriter Methods | Improve this Doc View Source Write(BinaryWriter, List<WriteMesh>, WriteOptions) Declaration public IOWriteResult Write(BinaryWriter writer, List<WriteMesh> vMeshes, WriteOptions options) Parameters Type Name Description BinaryWriter writer List < WriteMesh > vMeshes WriteOptions options Returns Type Description IOWriteResult | Improve this Doc View Source Write(TextWriter, List<WriteMesh>, WriteOptions) Declaration public IOWriteResult Write(TextWriter writer, List<WriteMesh> vMeshes, WriteOptions options) Parameters Type Name Description TextWriter writer List < WriteMesh > vMeshes WriteOptions options Returns Type Description IOWriteResult Implements IMeshWriter"
  },
  "api/g3.Bitmap2.html": {
    "href": "api/g3.Bitmap2.html",
    "title": "Class Bitmap2 | ViRGIS VR GIS",
    "keywords": "Class Bitmap2 Inheritance Object Bitmap2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class Bitmap2 Constructors | Improve this Doc View Source Bitmap2(Vector2i) Declaration public Bitmap2(Vector2i dims) Parameters Type Name Description Vector2i dims | Improve this Doc View Source Bitmap2(Int32, Int32) Declaration public Bitmap2(int Width, int Height) Parameters Type Name Description Int32 Width Int32 Height Fields | Improve this Doc View Source Bits Declaration public BitArray Bits Field Value Type Description BitArray Properties | Improve this Doc View Source Dimensions Declaration public Vector2i Dimensions { get; } Property Value Type Description Vector2i | Improve this Doc View Source GridBounds Declaration public AxisAlignedBox2i GridBounds { get; } Property Value Type Description AxisAlignedBox2i | Improve this Doc View Source Item[Vector2i] Declaration public bool this[Vector2i idx] { get; set; } Parameters Type Name Description Vector2i idx Property Value Type Description Boolean | Improve this Doc View Source Item[Int32] Declaration public bool this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Boolean | Improve this Doc View Source Item[Int32, Int32] Declaration public bool this[int r, int c] { get; set; } Parameters Type Name Description Int32 r Int32 c Property Value Type Description Boolean Methods | Improve this Doc View Source Get(Vector2i) Declaration public bool Get(Vector2i idx) Parameters Type Name Description Vector2i idx Returns Type Description Boolean | Improve this Doc View Source Indices() Declaration public IEnumerable<Vector2i> Indices() Returns Type Description IEnumerable < Vector2i > | Improve this Doc View Source NonZeros() Declaration public IEnumerable<Vector2i> NonZeros() Returns Type Description IEnumerable < Vector2i > | Improve this Doc View Source Resize(Vector2i) Declaration public void Resize(Vector2i dims) Parameters Type Name Description Vector2i dims | Improve this Doc View Source Set(Vector2i, Boolean) Declaration public void Set(Vector2i idx, bool val) Parameters Type Name Description Vector2i idx Boolean val | Improve this Doc View Source ToIndex(Int32) Declaration public Vector2i ToIndex(int i) Parameters Type Name Description Int32 i Returns Type Description Vector2i | Improve this Doc View Source ToLinear(Vector2i) Declaration public int ToLinear(Vector2i idx) Parameters Type Name Description Vector2i idx Returns Type Description Int32"
  },
  "api/g3.Bitmap3.html": {
    "href": "api/g3.Bitmap3.html",
    "title": "Class Bitmap3 | ViRGIS VR GIS",
    "keywords": "Class Bitmap3 Inheritance Object Bitmap3 Implements IBinaryVoxelGrid IGridElement3 IFixedGrid3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class Bitmap3 : IBinaryVoxelGrid, IGridElement3, IFixedGrid3 Constructors | Improve this Doc View Source Bitmap3(Vector3i) Declaration public Bitmap3(Vector3i dims) Parameters Type Name Description Vector3i dims Fields | Improve this Doc View Source Bits Declaration public BitArray Bits Field Value Type Description BitArray Properties | Improve this Doc View Source Dimensions Declaration public Vector3i Dimensions { get; } Property Value Type Description Vector3i | Improve this Doc View Source GridBounds Declaration public AxisAlignedBox3i GridBounds { get; } Property Value Type Description AxisAlignedBox3i | Improve this Doc View Source Item[Vector3i] Declaration public bool this[Vector3i idx] { get; set; } Parameters Type Name Description Vector3i idx Property Value Type Description Boolean | Improve this Doc View Source Item[Int32] Declaration public bool this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Boolean Methods | Improve this Doc View Source CreateNewGridElement(Boolean) Declaration public virtual IGridElement3 CreateNewGridElement(bool bCopy) Parameters Type Name Description Boolean bCopy Returns Type Description IGridElement3 | Improve this Doc View Source Filter(Int32) Declaration public void Filter(int nMinNbrs) Parameters Type Name Description Int32 nMinNbrs | Improve this Doc View Source Get(Vector3i) Declaration public bool Get(Vector3i idx) Parameters Type Name Description Vector3i idx Returns Type Description Boolean | Improve this Doc View Source Indices() Declaration public IEnumerable<Vector3i> Indices() Returns Type Description IEnumerable < Vector3i > | Improve this Doc View Source NonZeros() Declaration public IEnumerable<Vector3i> NonZeros() Returns Type Description IEnumerable < Vector3i > | Improve this Doc View Source SafeSet(Vector3i, Boolean) Declaration public void SafeSet(Vector3i idx, bool val) Parameters Type Name Description Vector3i idx Boolean val | Improve this Doc View Source Set(Vector3i, Boolean) Declaration public void Set(Vector3i idx, bool val) Parameters Type Name Description Vector3i idx Boolean val | Improve this Doc View Source ToIndex(Int32) Declaration public Vector3i ToIndex(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3i | Improve this Doc View Source ToLinear(Vector3i) Declaration public int ToLinear(Vector3i idx) Parameters Type Name Description Vector3i idx Returns Type Description Int32 Implements IBinaryVoxelGrid IGridElement3 IFixedGrid3"
  },
  "api/g3.BlockTimer.html": {
    "href": "api/g3.BlockTimer.html",
    "title": "Class BlockTimer | ViRGIS VR GIS",
    "keywords": "Class BlockTimer Inheritance Object BlockTimer Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class BlockTimer Constructors | Improve this Doc View Source BlockTimer(String, Boolean) Declaration public BlockTimer(string label, bool bStart) Parameters Type Name Description String label Boolean bStart Fields | Improve this Doc View Source Accumulated Declaration public TimeSpan Accumulated Field Value Type Description TimeSpan | Improve this Doc View Source Label Declaration public string Label Field Value Type Description String | Improve this Doc View Source Watch Declaration public Stopwatch Watch Field Value Type Description Stopwatch Properties | Improve this Doc View Source AccumulatedString Declaration public string AccumulatedString { get; } Property Value Type Description String | Improve this Doc View Source Running Declaration public bool Running { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Accumulate(Boolean) Declaration public void Accumulate(bool bReset = false) Parameters Type Name Description Boolean bReset | Improve this Doc View Source Reset() Declaration public void Reset() | Improve this Doc View Source Start() Declaration public void Start() | Improve this Doc View Source Stop() Declaration public void Stop() | Improve this Doc View Source TimeFormatString(TimeSpan) Declaration public static string TimeFormatString(TimeSpan span) Parameters Type Name Description TimeSpan span Returns Type Description String | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/g3.BoundedImplicitFunction3d.html": {
    "href": "api/g3.BoundedImplicitFunction3d.html",
    "title": "Interface BoundedImplicitFunction3d | ViRGIS VR GIS",
    "keywords": "Interface BoundedImplicitFunction3d Bounded implicit function has a bounding box within which the \"interesting\" part of the function is contained (eg the surface) Inherited Members ImplicitFunction3d.Value(Vector3d) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface BoundedImplicitFunction3d : ImplicitFunction3d Methods | Improve this Doc View Source Bounds() Declaration AxisAlignedBox3d Bounds() Returns Type Description AxisAlignedBox3d"
  },
  "api/g3.BoundsUtil.html": {
    "href": "api/g3.BoundsUtil.html",
    "title": "Class BoundsUtil | ViRGIS VR GIS",
    "keywords": "Class BoundsUtil Inheritance Object BoundsUtil Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class BoundsUtil Methods | Improve this Doc View Source Bounds(ref AxisAlignedBox3d, Func<Vector3d, Vector3d>) Declaration public static AxisAlignedBox3d Bounds(ref AxisAlignedBox3d boxIn, Func<Vector3d, Vector3d> TransformF) Parameters Type Name Description AxisAlignedBox3d boxIn Func < Vector3d , Vector3d > TransformF Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Bounds(IPointSet) Declaration public static AxisAlignedBox3d Bounds(IPointSet source) Parameters Type Name Description IPointSet source Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Bounds(ref Triangle3d) Declaration public static AxisAlignedBox3d Bounds(ref Triangle3d tri) Parameters Type Name Description Triangle3d tri Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Bounds(ref Vector2d, ref Vector2d, ref Vector2d) Declaration public static AxisAlignedBox2d Bounds(ref Vector2d v0, ref Vector2d v1, ref Vector2d v2) Parameters Type Name Description Vector2d v0 Vector2d v1 Vector2d v2 Returns Type Description AxisAlignedBox2d | Improve this Doc View Source Bounds(ref Vector3d, ref Vector3d, ref Vector3d) Declaration public static AxisAlignedBox3d Bounds(ref Vector3d v0, ref Vector3d v1, ref Vector3d v2) Parameters Type Name Description Vector3d v0 Vector3d v1 Vector3d v2 Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Bounds(IEnumerable<DMesh3>) Declaration public static AxisAlignedBox3d Bounds(IEnumerable<DMesh3> meshes) Parameters Type Name Description IEnumerable < DMesh3 > meshes Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Bounds(IEnumerable<Vector2d>) Declaration public static AxisAlignedBox2d Bounds(IEnumerable<Vector2d> positions) Parameters Type Name Description IEnumerable < Vector2d > positions Returns Type Description AxisAlignedBox2d | Improve this Doc View Source Bounds(IEnumerable<Vector2f>) Declaration public static AxisAlignedBox2f Bounds(IEnumerable<Vector2f> positions) Parameters Type Name Description IEnumerable < Vector2f > positions Returns Type Description AxisAlignedBox2f | Improve this Doc View Source Bounds(IEnumerable<Vector3d>) Declaration public static AxisAlignedBox3d Bounds(IEnumerable<Vector3d> positions) Parameters Type Name Description IEnumerable < Vector3d > positions Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Bounds(IEnumerable<Vector3d>, TransformSequence) compute axis-aligned bounds of set of points after transforming Declaration public static AxisAlignedBox3d Bounds(IEnumerable<Vector3d> values, TransformSequence xform) Parameters Type Name Description IEnumerable < Vector3d > values TransformSequence xform Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Bounds(IEnumerable<Vector3f>) Declaration public static AxisAlignedBox3f Bounds(IEnumerable<Vector3f> positions) Parameters Type Name Description IEnumerable < Vector3f > positions Returns Type Description AxisAlignedBox3f | Improve this Doc View Source Bounds<T>(IEnumerable<T>, Func<T, Vector3d>) Declaration public static AxisAlignedBox3d Bounds<T>(IEnumerable<T> values, Func<T, Vector3d> PositionF) Parameters Type Name Description IEnumerable <T> values Func <T, Vector3d > PositionF Returns Type Description AxisAlignedBox3d Type Parameters Name Description T | Improve this Doc View Source Bounds<T>(IEnumerable<T>, Func<T, Vector3f>) Declaration public static AxisAlignedBox3f Bounds<T>(IEnumerable<T> values, Func<T, Vector3f> PositionF) Parameters Type Name Description IEnumerable <T> values Func <T, Vector3f > PositionF Returns Type Description AxisAlignedBox3f Type Parameters Name Description T | Improve this Doc View Source BoundsInFrame(IEnumerable<Vector3d>, Frame3f) compute axis-aligned bounds of set of points after transforming into frame f Declaration public static AxisAlignedBox3d BoundsInFrame(IEnumerable<Vector3d> values, Frame3f f) Parameters Type Name Description IEnumerable < Vector3d > values Frame3f f Returns Type Description AxisAlignedBox3d | Improve this Doc View Source TrianglesContained(DMesh3, Func<Vector3d, Int32, Boolean>, Action<Int32>, Int32) Declaration public static void TrianglesContained(DMesh3 mesh, Func<Vector3d, int, bool> ContainF, Action<int> AddF, int nMode = 0) Parameters Type Name Description DMesh3 mesh Func < Vector3d , Int32 , Boolean > ContainF Action < Int32 > AddF Int32 nMode"
  },
  "api/g3.Box2d.html": {
    "href": "api/g3.Box2d.html",
    "title": "Struct Box2d | ViRGIS VR GIS",
    "keywords": "Struct Box2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Box2d Constructors | Improve this Doc View Source Box2d(AxisAlignedBox2d) Declaration public Box2d(AxisAlignedBox2d aaBox) Parameters Type Name Description AxisAlignedBox2d aaBox | Improve this Doc View Source Box2d(Segment2d) Declaration public Box2d(Segment2d seg) Parameters Type Name Description Segment2d seg | Improve this Doc View Source Box2d(Vector2d) Declaration public Box2d(Vector2d center) Parameters Type Name Description Vector2d center | Improve this Doc View Source Box2d(Vector2d, Vector2d) Declaration public Box2d(Vector2d center, Vector2d extent) Parameters Type Name Description Vector2d center Vector2d extent | Improve this Doc View Source Box2d(Vector2d, Vector2d, Vector2d, Vector2d) Declaration public Box2d(Vector2d center, Vector2d x, Vector2d y, Vector2d extent) Parameters Type Name Description Vector2d center Vector2d x Vector2d y Vector2d extent Fields | Improve this Doc View Source AxisX Declaration public Vector2d AxisX Field Value Type Description Vector2d | Improve this Doc View Source AxisY Declaration public Vector2d AxisY Field Value Type Description Vector2d | Improve this Doc View Source Center Declaration public Vector2d Center Field Value Type Description Vector2d | Improve this Doc View Source Empty Declaration public static readonly Box2d Empty Field Value Type Description Box2d | Improve this Doc View Source Extent Declaration public Vector2d Extent Field Value Type Description Vector2d Properties | Improve this Doc View Source Area Declaration public double Area { get; } Property Value Type Description Double | Improve this Doc View Source Diagonal Declaration public Vector2d Diagonal { get; } Property Value Type Description Vector2d | Improve this Doc View Source MaxExtent Declaration public double MaxExtent { get; } Property Value Type Description Double | Improve this Doc View Source MinExtent Declaration public double MinExtent { get; } Property Value Type Description Double Methods | Improve this Doc View Source Axis(Int32) Declaration public Vector2d Axis(int i) Parameters Type Name Description Int32 i Returns Type Description Vector2d | Improve this Doc View Source ClosestPoint(Vector2d) Declaration public Vector2d ClosestPoint(Vector2d v) Parameters Type Name Description Vector2d v Returns Type Description Vector2d | Improve this Doc View Source ComputeVertices() Declaration public Vector2d[] ComputeVertices() Returns Type Description Vector2d [] | Improve this Doc View Source ComputeVertices(Vector2d[]) Declaration public void ComputeVertices(Vector2d[] vertex) Parameters Type Name Description Vector2d [] vertex | Improve this Doc View Source ComputeVertices(ref Vector2dTuple4) Declaration public void ComputeVertices(ref Vector2dTuple4 vertex) Parameters Type Name Description Vector2dTuple4 vertex | Improve this Doc View Source Contain(Box2d) Declaration public void Contain(Box2d o) Parameters Type Name Description Box2d o | Improve this Doc View Source Contain(Vector2d) Declaration public void Contain(Vector2d v) Parameters Type Name Description Vector2d v | Improve this Doc View Source Contains(Vector2d) Declaration public bool Contains(Vector2d v) Parameters Type Name Description Vector2d v Returns Type Description Boolean | Improve this Doc View Source DistanceSquared(Vector2d) Returns distance to box, or 0 if point is inside box. Ported from WildMagic5 Wm5DistPoint2Box2.cpp Declaration public double DistanceSquared(Vector2d v) Parameters Type Name Description Vector2d v Returns Type Description Double | Improve this Doc View Source Expand(Double) Declaration public void Expand(double f) Parameters Type Name Description Double f | Improve this Doc View Source Merge(ref Box2d, ref Box2d) Declaration public static Box2d Merge(ref Box2d box0, ref Box2d box1) Parameters Type Name Description Box2d box0 Box2d box1 Returns Type Description Box2d | Improve this Doc View Source RotateAxes(Matrix2d) Declaration public void RotateAxes(Matrix2d m) Parameters Type Name Description Matrix2d m | Improve this Doc View Source Translate(Vector2d) Declaration public void Translate(Vector2d v) Parameters Type Name Description Vector2d v Operators | Improve this Doc View Source Explicit(Box2d to Box2f) Declaration public static explicit operator Box2f(Box2d v) Parameters Type Name Description Box2d v Returns Type Description Box2f | Improve this Doc View Source Implicit(Box2f to Box2d) Declaration public static implicit operator Box2d(Box2f v) Parameters Type Name Description Box2f v Returns Type Description Box2d"
  },
  "api/g3.Box2f.html": {
    "href": "api/g3.Box2f.html",
    "title": "Struct Box2f | ViRGIS VR GIS",
    "keywords": "Struct Box2f Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Box2f Constructors | Improve this Doc View Source Box2f(AxisAlignedBox2f) Declaration public Box2f(AxisAlignedBox2f aaBox) Parameters Type Name Description AxisAlignedBox2f aaBox | Improve this Doc View Source Box2f(Vector2f) Declaration public Box2f(Vector2f center) Parameters Type Name Description Vector2f center | Improve this Doc View Source Box2f(Vector2f, Vector2f) Declaration public Box2f(Vector2f center, Vector2f extent) Parameters Type Name Description Vector2f center Vector2f extent | Improve this Doc View Source Box2f(Vector2f, Vector2f, Vector2f, Vector2f) Declaration public Box2f(Vector2f center, Vector2f x, Vector2f y, Vector2f extent) Parameters Type Name Description Vector2f center Vector2f x Vector2f y Vector2f extent Fields | Improve this Doc View Source AxisX Declaration public Vector2f AxisX Field Value Type Description Vector2f | Improve this Doc View Source AxisY Declaration public Vector2f AxisY Field Value Type Description Vector2f | Improve this Doc View Source Center Declaration public Vector2f Center Field Value Type Description Vector2f | Improve this Doc View Source Empty Declaration public static readonly Box2f Empty Field Value Type Description Box2f | Improve this Doc View Source Extent Declaration public Vector2f Extent Field Value Type Description Vector2f Properties | Improve this Doc View Source Area Declaration public double Area { get; } Property Value Type Description Double | Improve this Doc View Source Diagonal Declaration public Vector2f Diagonal { get; } Property Value Type Description Vector2f | Improve this Doc View Source MaxExtent Declaration public double MaxExtent { get; } Property Value Type Description Double | Improve this Doc View Source MinExtent Declaration public double MinExtent { get; } Property Value Type Description Double Methods | Improve this Doc View Source Axis(Int32) Declaration public Vector2f Axis(int i) Parameters Type Name Description Int32 i Returns Type Description Vector2f | Improve this Doc View Source ComputeVertices() Declaration public Vector2f[] ComputeVertices() Returns Type Description Vector2f [] | Improve this Doc View Source ComputeVertices(Vector2f[]) Declaration public void ComputeVertices(Vector2f[] vertex) Parameters Type Name Description Vector2f [] vertex | Improve this Doc View Source Contain(Box2f) Declaration public void Contain(Box2f o) Parameters Type Name Description Box2f o | Improve this Doc View Source Contain(Vector2f) Declaration public void Contain(Vector2f v) Parameters Type Name Description Vector2f v | Improve this Doc View Source Contains(Vector2f) Declaration public bool Contains(Vector2f v) Parameters Type Name Description Vector2f v Returns Type Description Boolean | Improve this Doc View Source Expand(Single) Declaration public void Expand(float f) Parameters Type Name Description Single f | Improve this Doc View Source Translate(Vector2f) Declaration public void Translate(Vector2f v) Parameters Type Name Description Vector2f v"
  },
  "api/g3.Box3d.html": {
    "href": "api/g3.Box3d.html",
    "title": "Struct Box3d | ViRGIS VR GIS",
    "keywords": "Struct Box3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Box3d Constructors | Improve this Doc View Source Box3d(AxisAlignedBox3d) Declaration public Box3d(AxisAlignedBox3d aaBox) Parameters Type Name Description AxisAlignedBox3d aaBox | Improve this Doc View Source Box3d(Frame3f, Vector3d) Declaration public Box3d(Frame3f frame, Vector3d extent) Parameters Type Name Description Frame3f frame Vector3d extent | Improve this Doc View Source Box3d(Segment3d) Declaration public Box3d(Segment3d seg) Parameters Type Name Description Segment3d seg | Improve this Doc View Source Box3d(Vector3d) Declaration public Box3d(Vector3d center) Parameters Type Name Description Vector3d center | Improve this Doc View Source Box3d(Vector3d, Vector3d) Declaration public Box3d(Vector3d center, Vector3d extent) Parameters Type Name Description Vector3d center Vector3d extent | Improve this Doc View Source Box3d(Vector3d, Vector3d, Vector3d, Vector3d, Vector3d) Declaration public Box3d(Vector3d center, Vector3d x, Vector3d y, Vector3d z, Vector3d extent) Parameters Type Name Description Vector3d center Vector3d x Vector3d y Vector3d z Vector3d extent Fields | Improve this Doc View Source AxisX Declaration public Vector3d AxisX Field Value Type Description Vector3d | Improve this Doc View Source AxisY Declaration public Vector3d AxisY Field Value Type Description Vector3d | Improve this Doc View Source AxisZ Declaration public Vector3d AxisZ Field Value Type Description Vector3d | Improve this Doc View Source Center Declaration public Vector3d Center Field Value Type Description Vector3d | Improve this Doc View Source Empty Declaration public static readonly Box3d Empty Field Value Type Description Box3d | Improve this Doc View Source Extent Declaration public Vector3d Extent Field Value Type Description Vector3d | Improve this Doc View Source UnitPositive Declaration public static readonly Box3d UnitPositive Field Value Type Description Box3d | Improve this Doc View Source UnitZeroCentered Declaration public static readonly Box3d UnitZeroCentered Field Value Type Description Box3d Properties | Improve this Doc View Source Diagonal Declaration public Vector3d Diagonal { get; } Property Value Type Description Vector3d | Improve this Doc View Source MaxExtent Declaration public double MaxExtent { get; } Property Value Type Description Double | Improve this Doc View Source MinExtent Declaration public double MinExtent { get; } Property Value Type Description Double | Improve this Doc View Source Volume Declaration public double Volume { get; } Property Value Type Description Double Methods | Improve this Doc View Source Axis(Int32) Declaration public Vector3d Axis(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3d | Improve this Doc View Source ClosestPoint(Vector3d) Returns distance to box, or 0 if point is inside box. Ported from WildMagic5 Wm5DistPoint3Box3.cpp Declaration public Vector3d ClosestPoint(Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Vector3d | Improve this Doc View Source ComputeVertices() Declaration public Vector3d[] ComputeVertices() Returns Type Description Vector3d [] | Improve this Doc View Source ComputeVertices(Vector3d[]) Declaration public void ComputeVertices(Vector3d[] vertex) Parameters Type Name Description Vector3d [] vertex | Improve this Doc View Source Contain(Box3d) Declaration public void Contain(Box3d o) Parameters Type Name Description Box3d o | Improve this Doc View Source Contain(Vector3d) Declaration public void Contain(Vector3d v) Parameters Type Name Description Vector3d v | Improve this Doc View Source Contain(IEnumerable<Vector3d>) update the box to contain set of input points. More efficient tha ncalling Contain() many times code ported from GTEngine GteContOrientedBox3.h Declaration public void Contain(IEnumerable<Vector3d> points) Parameters Type Name Description IEnumerable < Vector3d > points | Improve this Doc View Source Contains(Vector3d) Declaration public bool Contains(Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Boolean | Improve this Doc View Source Corner(Int32) Declaration public Vector3d Corner(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3d | Improve this Doc View Source DistanceSquared(Vector3d) Returns distance to box, or 0 if point is inside box. Ported from WildMagic5 Wm5DistPoint3Box3.cpp Declaration public double DistanceSquared(Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Double | Improve this Doc View Source Expand(Double) Declaration public void Expand(double f) Parameters Type Name Description Double f | Improve this Doc View Source Merge(ref Box3d, ref Box3d) Declaration public static Box3d Merge(ref Box3d box0, ref Box3d box1) Parameters Type Name Description Box3d box0 Box3d box1 Returns Type Description Box3d | Improve this Doc View Source Scale(Vector3d) Declaration public void Scale(Vector3d s) Parameters Type Name Description Vector3d s | Improve this Doc View Source ScaleExtents(Vector3d) Declaration public void ScaleExtents(Vector3d s) Parameters Type Name Description Vector3d s | Improve this Doc View Source ToAABB() Declaration public AxisAlignedBox3d ToAABB() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Translate(Vector3d) Declaration public void Translate(Vector3d v) Parameters Type Name Description Vector3d v | Improve this Doc View Source VerticesItr() Declaration public IEnumerable<Vector3d> VerticesItr() Returns Type Description IEnumerable < Vector3d > Operators | Improve this Doc View Source Explicit(Box3d to Box3f) Declaration public static explicit operator Box3f(Box3d v) Parameters Type Name Description Box3d v Returns Type Description Box3f | Improve this Doc View Source Implicit(Box3f to Box3d) Declaration public static implicit operator Box3d(Box3f v) Parameters Type Name Description Box3f v Returns Type Description Box3d"
  },
  "api/g3.Box3f.html": {
    "href": "api/g3.Box3f.html",
    "title": "Struct Box3f | ViRGIS VR GIS",
    "keywords": "Struct Box3f Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Box3f Constructors | Improve this Doc View Source Box3f(AxisAlignedBox3f) Declaration public Box3f(AxisAlignedBox3f aaBox) Parameters Type Name Description AxisAlignedBox3f aaBox | Improve this Doc View Source Box3f(Vector3f) Declaration public Box3f(Vector3f center) Parameters Type Name Description Vector3f center | Improve this Doc View Source Box3f(Vector3f, Vector3f) Declaration public Box3f(Vector3f center, Vector3f extent) Parameters Type Name Description Vector3f center Vector3f extent | Improve this Doc View Source Box3f(Vector3f, Vector3f, Vector3f, Vector3f, Vector3f) Declaration public Box3f(Vector3f center, Vector3f x, Vector3f y, Vector3f z, Vector3f extent) Parameters Type Name Description Vector3f center Vector3f x Vector3f y Vector3f z Vector3f extent Fields | Improve this Doc View Source AxisX Declaration public Vector3f AxisX Field Value Type Description Vector3f | Improve this Doc View Source AxisY Declaration public Vector3f AxisY Field Value Type Description Vector3f | Improve this Doc View Source AxisZ Declaration public Vector3f AxisZ Field Value Type Description Vector3f | Improve this Doc View Source Center Declaration public Vector3f Center Field Value Type Description Vector3f | Improve this Doc View Source Empty Declaration public static readonly Box3f Empty Field Value Type Description Box3f | Improve this Doc View Source Extent Declaration public Vector3f Extent Field Value Type Description Vector3f Properties | Improve this Doc View Source Diagonal Declaration public Vector3f Diagonal { get; } Property Value Type Description Vector3f | Improve this Doc View Source MaxExtent Declaration public double MaxExtent { get; } Property Value Type Description Double | Improve this Doc View Source MinExtent Declaration public double MinExtent { get; } Property Value Type Description Double | Improve this Doc View Source Volume Declaration public double Volume { get; } Property Value Type Description Double Methods | Improve this Doc View Source Axis(Int32) Declaration public Vector3f Axis(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3f | Improve this Doc View Source ComputeVertices() Declaration public Vector3f[] ComputeVertices() Returns Type Description Vector3f [] | Improve this Doc View Source ComputeVertices(Vector3f[]) Declaration public void ComputeVertices(Vector3f[] vertex) Parameters Type Name Description Vector3f [] vertex | Improve this Doc View Source Contain(Box3f) Declaration public void Contain(Box3f o) Parameters Type Name Description Box3f o | Improve this Doc View Source Contain(Vector3f) Declaration public void Contain(Vector3f v) Parameters Type Name Description Vector3f v | Improve this Doc View Source Contains(Vector3f) Declaration public bool Contains(Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description Boolean | Improve this Doc View Source Expand(Single) Declaration public void Expand(float f) Parameters Type Name Description Single f | Improve this Doc View Source Scale(Vector3f) Declaration public void Scale(Vector3f s) Parameters Type Name Description Vector3f s | Improve this Doc View Source ScaleExtents(Vector3f) Declaration public void ScaleExtents(Vector3f s) Parameters Type Name Description Vector3f s | Improve this Doc View Source ToAABB() Declaration public AxisAlignedBox3f ToAABB() Returns Type Description AxisAlignedBox3f | Improve this Doc View Source Translate(Vector3f) Declaration public void Translate(Vector3f v) Parameters Type Name Description Vector3f v | Improve this Doc View Source VerticesItr() Declaration public IEnumerable<Vector3f> VerticesItr() Returns Type Description IEnumerable < Vector3f >"
  },
  "api/g3.BSplineBasis.html": {
    "href": "api/g3.BSplineBasis.html",
    "title": "Class BSplineBasis | ViRGIS VR GIS",
    "keywords": "Class BSplineBasis Inheritance Object BSplineBasis Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class BSplineBasis Constructors | Improve this Doc View Source BSplineBasis() Declaration protected BSplineBasis() | Improve this Doc View Source BSplineBasis(Int32, Int32, Boolean) Declaration public BSplineBasis(int numCtrlPoints, int degree, bool open) Parameters Type Name Description Int32 numCtrlPoints Int32 degree Boolean open | Improve this Doc View Source BSplineBasis(Int32, Int32, Double[], Boolean) Declaration public BSplineBasis(int numCtrlPoints, int degree, double[] knots, bool bIsInteriorKnots) Parameters Type Name Description Int32 numCtrlPoints Int32 degree Double [] knots Boolean bIsInteriorKnots Fields | Improve this Doc View Source mBD0 Declaration protected double[, ] mBD0 Field Value Type Description Double [,] | Improve this Doc View Source mBD1 Declaration protected double[, ] mBD1 Field Value Type Description Double [,] | Improve this Doc View Source mBD2 Declaration protected double[, ] mBD2 Field Value Type Description Double [,] | Improve this Doc View Source mBD3 Declaration protected double[, ] mBD3 Field Value Type Description Double [,] | Improve this Doc View Source mDegree Declaration protected int mDegree Field Value Type Description Int32 | Improve this Doc View Source mKnot Declaration protected double[] mKnot Field Value Type Description Double [] | Improve this Doc View Source mNumCtrlPoints Declaration protected int mNumCtrlPoints Field Value Type Description Int32 | Improve this Doc View Source mOpen Declaration protected bool mOpen Field Value Type Description Boolean | Improve this Doc View Source mUniform Declaration protected bool mUniform Field Value Type Description Boolean Properties | Improve this Doc View Source InteriorKnotCount Declaration public int InteriorKnotCount { get; } Property Value Type Description Int32 | Improve this Doc View Source KnotCount Declaration public int KnotCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Allocate() Declaration protected double[, ] Allocate() Returns Type Description Double [,] | Improve this Doc View Source Clone() Declaration public BSplineBasis Clone() Returns Type Description BSplineBasis | Improve this Doc View Source Compute(Double, Int32, ref Int32, ref Int32) Declaration public void Compute(double t, int order, ref int minIndex, ref int maxIndex) Parameters Type Name Description Double t Int32 order Int32 minIndex Int32 maxIndex | Improve this Doc View Source GetD0(Int32) Declaration public double GetD0(int i) Parameters Type Name Description Int32 i Returns Type Description Double | Improve this Doc View Source GetD1(Int32) Declaration public double GetD1(int i) Parameters Type Name Description Int32 i Returns Type Description Double | Improve this Doc View Source GetD2(Int32) Declaration public double GetD2(int i) Parameters Type Name Description Int32 i Returns Type Description Double | Improve this Doc View Source GetD3(Int32) Declaration public double GetD3(int i) Parameters Type Name Description Int32 i Returns Type Description Double | Improve this Doc View Source GetDegree() Declaration public int GetDegree() Returns Type Description Int32 | Improve this Doc View Source GetInteriorKnot(Int32) Declaration public double GetInteriorKnot(int j) Parameters Type Name Description Int32 j Returns Type Description Double | Improve this Doc View Source GetKey(ref Double) Declaration protected int GetKey(ref double t) Parameters Type Name Description Double t Returns Type Description Int32 | Improve this Doc View Source GetKnot(Int32) Declaration public double GetKnot(int j) Parameters Type Name Description Int32 j Returns Type Description Double | Improve this Doc View Source GetNumCtrlPoints() Declaration public int GetNumCtrlPoints() Returns Type Description Int32 | Improve this Doc View Source Initialize(Int32, Int32, Boolean) Declaration protected int Initialize(int numCtrlPoints, int degree, bool open) Parameters Type Name Description Int32 numCtrlPoints Int32 degree Boolean open Returns Type Description Int32 | Improve this Doc View Source IsOpen() Declaration public bool IsOpen() Returns Type Description Boolean | Improve this Doc View Source IsUniform() Declaration public bool IsUniform() Returns Type Description Boolean | Improve this Doc View Source SetInteriorKnot(Int32, Double) Declaration public void SetInteriorKnot(int j, double value) Parameters Type Name Description Int32 j Double value | Improve this Doc View Source SetKnot(Int32, Double) Declaration public void SetKnot(int j, double value) Parameters Type Name Description Int32 j Double value"
  },
  "api/g3.BufferUtil.html": {
    "href": "api/g3.BufferUtil.html",
    "title": "Class BufferUtil | ViRGIS VR GIS",
    "keywords": "Class BufferUtil Inheritance Object BufferUtil Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class BufferUtil Methods | Improve this Doc View Source AllocNxM(Int32, Int32) Declaration public static double[][] AllocNxM(int N, int M) Parameters Type Name Description Int32 N Int32 M Returns Type Description Double [][] | Improve this Doc View Source CompressZLib(Byte[], Boolean) Compress a byte buffer using Deflate/ZLib compression. Declaration public static byte[] CompressZLib(byte[] buffer, bool bFast) Parameters Type Name Description Byte [] buffer Boolean bFast Returns Type Description Byte [] | Improve this Doc View Source CountValid<T>(T[], Func<T, Boolean>, Int32) Count number of elements in array (or up to max_i) that pass FilterF test Declaration public static int CountValid<T>(T[] data, Func<T, bool> FilterF, int max_i = -1) Parameters Type Name Description T[] data Func <T, Boolean > FilterF Int32 max_i Returns Type Description Int32 Type Parameters Name Description T | Improve this Doc View Source DecompressZLib(Byte[]) Decompress a byte buffer that has been compressed using Deflate/ZLib compression Declaration public static byte[] DecompressZLib(byte[] zBuffer) Parameters Type Name Description Byte [] zBuffer Returns Type Description Byte [] | Improve this Doc View Source DistanceSquared(Double[], Double[]) Declaration public static double DistanceSquared(double[] a, double[] b) Parameters Type Name Description Double [] a Double [] b Returns Type Description Double | Improve this Doc View Source Dot(Double[], Double[]) Declaration public static double Dot(double[] a, double[] b) Parameters Type Name Description Double [] a Double [] b Returns Type Description Double | Improve this Doc View Source Filter<T>(T[], Func<T, Boolean>, Int32) return a new array containing only elements (or up to max_i) that pass FilterF test Declaration public static T[] Filter<T>(T[] data, Func<T, bool> FilterF, int max_i = -1) Parameters Type Name Description T[] data Func <T, Boolean > FilterF Int32 max_i Returns Type Description T[] Type Parameters Name Description T | Improve this Doc View Source FilterInPlace<T>(T[], Func<T, Boolean>, Int32) shifts elements of array (or up to max_i) that pass FilterF to front of list, and returns number that passed Declaration public static int FilterInPlace<T>(T[] data, Func<T, bool> FilterF, int max_i = -1) Parameters Type Name Description T[] data Func <T, Boolean > FilterF Int32 max_i Returns Type Description Int32 Type Parameters Name Description T | Improve this Doc View Source InitNxM(Int32, Int32, Double[][]) Declaration public static double[][] InitNxM(int N, int M, double[][] init) Parameters Type Name Description Int32 N Int32 M Double [][] init Returns Type Description Double [][] | Improve this Doc View Source MultiplyAdd(Double[], Double, Double[]) Declaration public static void MultiplyAdd(double[] dest, double multiply, double[] add) Parameters Type Name Description Double [] dest Double multiply Double [] add | Improve this Doc View Source MultiplyAdd(Double[], Double[], Double[]) Declaration public static void MultiplyAdd(double[] dest, double[] multiply, double[] add) Parameters Type Name Description Double [] dest Double [] multiply Double [] add | Improve this Doc View Source MultiplyAdd_GetSqrSum(Double[], Double, Double[]) Declaration public static double MultiplyAdd_GetSqrSum(double[] dest, double multiply, double[] add) Parameters Type Name Description Double [] dest Double multiply Double [] add Returns Type Description Double | Improve this Doc View Source ParallelDot(Double[], Double[][], Double[][]) Declaration public static void ParallelDot(double[] a, double[][] b, double[][] result) Parameters Type Name Description Double [] a Double [][] b Double [][] result | Improve this Doc View Source SetTriangle(Int32[], Int32, Int32, Int32, Int32) Declaration public static void SetTriangle(int[] v, int i, int a, int b, int c) Parameters Type Name Description Int32 [] v Int32 i Int32 a Int32 b Int32 c | Improve this Doc View Source SetVertex2(Double[], Int32, Double, Double) Declaration public static void SetVertex2(double[] v, int i, double x, double y) Parameters Type Name Description Double [] v Int32 i Double x Double y | Improve this Doc View Source SetVertex2(Single[], Int32, Single, Single) Declaration public static void SetVertex2(float[] v, int i, float x, float y) Parameters Type Name Description Single [] v Int32 i Single x Single y | Improve this Doc View Source SetVertex3(Double[], Int32, Double, Double, Double) Declaration public static void SetVertex3(double[] v, int i, double x, double y, double z) Parameters Type Name Description Double [] v Int32 i Double x Double y Double z | Improve this Doc View Source SetVertex3(Single[], Int32, Single, Single, Single) Declaration public static void SetVertex3(float[] v, int i, float x, float y, float z) Parameters Type Name Description Single [] v Int32 i Single x Single y Single z | Improve this Doc View Source ToBytes(Double[]) convert double array to bytes Declaration public static byte[] ToBytes(double[] array) Parameters Type Name Description Double [] array Returns Type Description Byte [] | Improve this Doc View Source ToBytes(Int16[]) convert short array to bytes Declaration public static byte[] ToBytes(short[] array) Parameters Type Name Description Int16 [] array Returns Type Description Byte [] | Improve this Doc View Source ToBytes(Int32[]) convert int array to bytes Declaration public static byte[] ToBytes(int[] array) Parameters Type Name Description Int32 [] array Returns Type Description Byte [] | Improve this Doc View Source ToBytes(Single[]) convert float array to bytes Declaration public static byte[] ToBytes(float[] array) Parameters Type Name Description Single [] array Returns Type Description Byte [] | Improve this Doc View Source ToDouble(Byte[]) convert byte array to double array Declaration public static double[] ToDouble(byte[] buffer) Parameters Type Name Description Byte [] buffer Returns Type Description Double [] | Improve this Doc View Source ToFloat(Byte[]) convert byte array to float array Declaration public static float[] ToFloat(byte[] buffer) Parameters Type Name Description Byte [] buffer Returns Type Description Single [] | Improve this Doc View Source ToIndex3i<T>(IEnumerable<T>) convert input set into Index3i. Supports packed list of int tuples, list of Vector3i/Index3i Declaration public static Index3i[] ToIndex3i<T>(IEnumerable<T> values) Parameters Type Name Description IEnumerable <T> values Returns Type Description Index3i [] Type Parameters Name Description T | Improve this Doc View Source ToIndexArray4i(Byte[]) convert byte array to IndexArray4i Declaration public static IndexArray4i ToIndexArray4i(byte[] buffer) Parameters Type Name Description Byte [] buffer Returns Type Description IndexArray4i | Improve this Doc View Source ToInt(Byte[]) convert byte array to int array Declaration public static int[] ToInt(byte[] buffer) Parameters Type Name Description Byte [] buffer Returns Type Description Int32 [] | Improve this Doc View Source ToShort(Byte[]) convert byte array to short array Declaration public static short[] ToShort(byte[] buffer) Parameters Type Name Description Byte [] buffer Returns Type Description Int16 [] | Improve this Doc View Source ToVector3d<T>(IEnumerable<T>) convert input set into Vector3d. Supports packed list of float/double tuples, list of Vector3f/Vector3d Declaration public static Vector3d[] ToVector3d<T>(IEnumerable<T> values) Parameters Type Name Description IEnumerable <T> values Returns Type Description Vector3d [] Type Parameters Name Description T | Improve this Doc View Source ToVector3f<T>(IEnumerable<T>) convert input set into Vector3f. Supports packed list of float/double tuples, list of Vector3f/Vector3d Declaration public static Vector3f[] ToVector3f<T>(IEnumerable<T> values) Parameters Type Name Description IEnumerable <T> values Returns Type Description Vector3f [] Type Parameters Name Description T | Improve this Doc View Source ToVectorArray2f(Byte[]) convert byte array to VectorArray2f Declaration public static VectorArray2f ToVectorArray2f(byte[] buffer) Parameters Type Name Description Byte [] buffer Returns Type Description VectorArray2f | Improve this Doc View Source ToVectorArray3d(Byte[]) convert byte array to VectorArray3d Declaration public static VectorArray3d ToVectorArray3d(byte[] buffer) Parameters Type Name Description Byte [] buffer Returns Type Description VectorArray3d | Improve this Doc View Source ToVectorArray3f(Byte[]) convert byte array to VectorArray3f Declaration public static VectorArray3f ToVectorArray3f(byte[] buffer) Parameters Type Name Description Byte [] buffer Returns Type Description VectorArray3f | Improve this Doc View Source ToVectorArray3i(Byte[]) convert byte array to VectorArray3i Declaration public static VectorArray3i ToVectorArray3i(byte[] buffer) Parameters Type Name Description Byte [] buffer Returns Type Description VectorArray3i"
  },
  "api/g3.CachingDenseGridTrilinearImplicit.html": {
    "href": "api/g3.CachingDenseGridTrilinearImplicit.html",
    "title": "Class CachingDenseGridTrilinearImplicit | ViRGIS VR GIS",
    "keywords": "Class CachingDenseGridTrilinearImplicit [RMS] variant of DenseGridTrilinearImplicit that does lazy evaluation of Grid values. Tri-linear interpolant for a 3D dense grid. Supports grid translation via GridOrigin, but does not support scaling or rotation. If you need those, you can wrap this in something that does the xform. Inheritance Object CachingDenseGridTrilinearImplicit Implements BoundedImplicitFunction3d ImplicitFunction3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class CachingDenseGridTrilinearImplicit : BoundedImplicitFunction3d, ImplicitFunction3d Constructors | Improve this Doc View Source CachingDenseGridTrilinearImplicit(Vector3d, Double, Vector3i) Declaration public CachingDenseGridTrilinearImplicit(Vector3d gridOrigin, double cellSize, Vector3i gridDimensions) Parameters Type Name Description Vector3d gridOrigin Double cellSize Vector3i gridDimensions Fields | Improve this Doc View Source AnalyticF Declaration public ImplicitFunction3d AnalyticF Field Value Type Description ImplicitFunction3d | Improve this Doc View Source CellSize Declaration public double CellSize Field Value Type Description Double | Improve this Doc View Source Grid Declaration public DenseGrid3f Grid Field Value Type Description DenseGrid3f | Improve this Doc View Source GridOrigin Declaration public Vector3d GridOrigin Field Value Type Description Vector3d | Improve this Doc View Source Invalid Declaration public float Invalid Field Value Type Description Single | Improve this Doc View Source Outside Declaration public double Outside Field Value Type Description Double Methods | Improve this Doc View Source Bounds() Declaration public AxisAlignedBox3d Bounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Gradient(ref Vector3d) Declaration public Vector3d Gradient(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Vector3d | Improve this Doc View Source Value(ref Vector3d) Declaration public double Value(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Double Implements BoundedImplicitFunction3d ImplicitFunction3d"
  },
  "api/g3.CachingMeshSDF.html": {
    "href": "api/g3.CachingMeshSDF.html",
    "title": "Class CachingMeshSDF | ViRGIS VR GIS",
    "keywords": "Class CachingMeshSDF [RMS] this is variant of MeshSignedDistanceGrid that does lazy evaluation of actual distances, using mesh spatial data structure. This is much faster if we are doing continuation-method marching cubes as only values on surface will be computed! Compute discretely-sampled (ie gridded) signed distance field for a mesh The basic approach is, first compute exact distances in a narrow band, and then extend out to rest of grid using fast \"sweeping\" (ie like a distance transform). The resulting unsigned grid is then signed using ray-intersection counting, which is also computed on the grid, so no BVH is necessary If you set ComputeMode to NarrowBandOnly, result is a narrow-band signed distance field. This is quite a bit faster as the sweeping is the most computationally-intensive step. Caveats: the \"narrow band\" is based on triangle bounding boxes, so it is not necessarily that \"narrow\" if you have large triangles on a diagonal to grid axes Potential optimizations: Often we have a spatial data structure that would allow faster computation of the narrow-band distances (which become quite expensive if we want a wider band!) Not clear how to take advantage of this though. Perhaps we could have a binary grid that, in first pass, we set bits inside triangle bboxes to 1? Or perhaps same as current code, but we use spatial-dist, and so for each ijk we only compute once? (then have to test for computed value at each cell of each triangle...) This code is based on the C++ implementation found at https://github.com/christopherbatty/SDFGen Original license was public domain. Permission granted by Christopher Batty to include C# port under Boost license. Inheritance Object CachingMeshSDF Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class CachingMeshSDF Constructors | Improve this Doc View Source CachingMeshSDF(DMesh3, Double, DMeshAABBTree3) Declaration public CachingMeshSDF(DMesh3 mesh, double cellSize, DMeshAABBTree3 spatial) Parameters Type Name Description DMesh3 mesh Double cellSize DMeshAABBTree3 spatial Fields | Improve this Doc View Source CancelF if this function returns true, we should abort calculation Declaration public Func<bool> CancelF Field Value Type Description Func < Boolean > | Improve this Doc View Source CellSize Declaration public float CellSize Field Value Type Description Single | Improve this Doc View Source ComputeSigns Declaration public bool ComputeSigns Field Value Type Description Boolean | Improve this Doc View Source DebugPrint Declaration public bool DebugPrint Field Value Type Description Boolean | Improve this Doc View Source ExpandBounds Declaration public Vector3d ExpandBounds Field Value Type Description Vector3d | Improve this Doc View Source InsideMode Declaration public CachingMeshSDF.InsideModes InsideMode Field Value Type Description CachingMeshSDF.InsideModes | Improve this Doc View Source MaxOffsetDistance Declaration public float MaxOffsetDistance Field Value Type Description Single | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 | Improve this Doc View Source Spatial Declaration public DMeshAABBTree3 Spatial Field Value Type Description DMeshAABBTree3 | Improve this Doc View Source UseParallel Declaration public bool UseParallel Field Value Type Description Boolean | Improve this Doc View Source WantClosestTriGrid Declaration public bool WantClosestTriGrid Field Value Type Description Boolean | Improve this Doc View Source WantIntersectionsGrid Declaration public bool WantIntersectionsGrid Field Value Type Description Boolean Properties | Improve this Doc View Source ClosestTriGrid Declaration public DenseGrid3i ClosestTriGrid { get; } Property Value Type Description DenseGrid3i | Improve this Doc View Source Dimensions Declaration public Vector3i Dimensions { get; } Property Value Type Description Vector3i | Improve this Doc View Source Grid SDF grid available after calling Compute() Declaration public DenseGrid3f Grid { get; } Property Value Type Description DenseGrid3f | Improve this Doc View Source GridOrigin Origin of the SDF grid, in same coordinates as mesh Declaration public Vector3f GridOrigin { get; } Property Value Type Description Vector3f | Improve this Doc View Source IntersectionsGrid Declaration public DenseGrid3i IntersectionsGrid { get; } Property Value Type Description DenseGrid3i | Improve this Doc View Source Item[Vector3i] Declaration public float this[Vector3i idx] { get; } Parameters Type Name Description Vector3i idx Property Value Type Description Single | Improve this Doc View Source Item[Int32, Int32, Int32] Declaration public float this[int i, int j, int k] { get; } Parameters Type Name Description Int32 i Int32 j Int32 k Property Value Type Description Single Methods | Improve this Doc View Source CellCenter(Int32, Int32, Int32) Declaration public Vector3f CellCenter(int i, int j, int k) Parameters Type Name Description Int32 i Int32 j Int32 k Returns Type Description Vector3f | Improve this Doc View Source GetValue(Vector3i) Declaration public float GetValue(Vector3i idx) Parameters Type Name Description Vector3i idx Returns Type Description Single | Improve this Doc View Source Initialize() Declaration public void Initialize() | Improve this Doc View Source orientation(Double, Double, Double, Double, out Double) Declaration public static int orientation(double x1, double y1, double x2, double y2, out double twice_signed_area) Parameters Type Name Description Double x1 Double y1 Double x2 Double y2 Double twice_signed_area Returns Type Description Int32 | Improve this Doc View Source point_in_triangle_2d(Double, Double, Double, Double, Double, Double, Double, Double, out Double, out Double, out Double) Declaration public static bool point_in_triangle_2d(double x0, double y0, double x1, double y1, double x2, double y2, double x3, double y3, out double a, out double b, out double c) Parameters Type Name Description Double x0 Double y0 Double x1 Double y1 Double x2 Double y2 Double x3 Double y3 Double a Double b Double c Returns Type Description Boolean"
  },
  "api/g3.CachingMeshSDF.InsideModes.html": {
    "href": "api/g3.CachingMeshSDF.InsideModes.html",
    "title": "Enum CachingMeshSDF.InsideModes | ViRGIS VR GIS",
    "keywords": "Enum CachingMeshSDF.InsideModes Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum InsideModes Fields Name Description CrossingCount ParityCount"
  },
  "api/g3.CachingMeshSDFImplicit.html": {
    "href": "api/g3.CachingMeshSDFImplicit.html",
    "title": "Class CachingMeshSDFImplicit | ViRGIS VR GIS",
    "keywords": "Class CachingMeshSDFImplicit Tri-linear interpolant for a 3D dense grid. Supports grid translation via GridOrigin, but does not support scaling or rotation. If you need those, you can wrap this in something that does the xform. Inheritance Object CachingMeshSDFImplicit Implements BoundedImplicitFunction3d ImplicitFunction3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class CachingMeshSDFImplicit : BoundedImplicitFunction3d, ImplicitFunction3d Constructors | Improve this Doc View Source CachingMeshSDFImplicit(CachingMeshSDF) Declaration public CachingMeshSDFImplicit(CachingMeshSDF sdf) Parameters Type Name Description CachingMeshSDF sdf Fields | Improve this Doc View Source CellSize Declaration public double CellSize Field Value Type Description Double | Improve this Doc View Source GridOrigin Declaration public Vector3d GridOrigin Field Value Type Description Vector3d | Improve this Doc View Source Outside Declaration public double Outside Field Value Type Description Double | Improve this Doc View Source SDF Declaration public CachingMeshSDF SDF Field Value Type Description CachingMeshSDF Methods | Improve this Doc View Source Bounds() Declaration public AxisAlignedBox3d Bounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Gradient(ref Vector3d) Declaration public Vector3d Gradient(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Vector3d | Improve this Doc View Source Value(ref Vector3d) Declaration public double Value(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Double Implements BoundedImplicitFunction3d ImplicitFunction3d"
  },
  "api/g3.CancelFunction.html": {
    "href": "api/g3.CancelFunction.html",
    "title": "Class CancelFunction | ViRGIS VR GIS",
    "keywords": "Class CancelFunction Inheritance Object CancelFunction Implements ICancelSource Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class CancelFunction : ICancelSource Constructors | Improve this Doc View Source CancelFunction(Func<Boolean>) Declaration public CancelFunction(Func<bool> cancelF) Parameters Type Name Description Func < Boolean > cancelF Fields | Improve this Doc View Source CancelF Declaration public Func<bool> CancelF Field Value Type Description Func < Boolean > Methods | Improve this Doc View Source Cancelled() Declaration public bool Cancelled() Returns Type Description Boolean Implements ICancelSource"
  },
  "api/g3.CappedCylinderGenerator.html": {
    "href": "api/g3.CappedCylinderGenerator.html",
    "title": "Class CappedCylinderGenerator | ViRGIS VR GIS",
    "keywords": "Class CappedCylinderGenerator Generate a Cylinder with caps. Supports sections of cylinder as well (eg wedges). Curently UV islands are overlapping for different mesh components, if NoSharedVertices Positioned along Y axis such that base-center is at Origin, and top is at Y=Height You get a cone unless BaseRadius = TopRadius No subdivisions along top/base rings or height steps. cylinder triangles have groupid = 1, top cap = 2, bottom cap = 3, wedge faces 5 and 6 Inheritance Object MeshGenerator CappedCylinderGenerator Inherited Members MeshGenerator.vertices MeshGenerator.uv MeshGenerator.normals MeshGenerator.triangles MeshGenerator.groups MeshGenerator.WantUVs MeshGenerator.WantNormals MeshGenerator.WantGroups MeshGenerator.Clockwise MeshGenerator.MakeMesh(SimpleMesh) MeshGenerator.MakeSimpleMesh() MeshGenerator.MakeMesh(DMesh3) MeshGenerator.MakeDMesh() MeshGenerator.MakeMesh(NTMesh3) MeshGenerator.MakeNTMesh() MeshGenerator.duplicate_vertex_span(Int32, Int32) MeshGenerator.append_disc(Int32, Int32, Int32, Boolean, Boolean, Int32, Int32) MeshGenerator.append_rectangle(Int32, Int32, Int32, Int32, Boolean, Int32, Int32) MeshGenerator.append_2d_disc_segment(Int32, Int32, Int32, Int32, Boolean, Int32, Int32, Int32, Double) MeshGenerator.estimate_normal(Int32, Int32, Int32) MeshGenerator.bilerp(Vector3d, Vector3d, Vector3d, Vector3d, Double, Double) MeshGenerator.bilerp(Vector2d, Vector2d, Vector2d, Vector2d, Double, Double) MeshGenerator.bilerp(Vector2f, Vector2f, Vector2f, Vector2f, Single, Single) MeshGenerator.bilerp(Vector3i, Vector3i, Vector3i, Vector3i, Double, Double) MeshGenerator.lerp(Vector3i, Vector3i, Double) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class CappedCylinderGenerator : MeshGenerator Fields | Improve this Doc View Source BaseRadius Declaration public float BaseRadius Field Value Type Description Single | Improve this Doc View Source EndAngleDeg Declaration public float EndAngleDeg Field Value Type Description Single | Improve this Doc View Source Height Declaration public float Height Field Value Type Description Single | Improve this Doc View Source NoSharedVertices Declaration public bool NoSharedVertices Field Value Type Description Boolean | Improve this Doc View Source Slices Declaration public int Slices Field Value Type Description Int32 | Improve this Doc View Source StartAngleDeg Declaration public float StartAngleDeg Field Value Type Description Single | Improve this Doc View Source TopRadius Declaration public float TopRadius Field Value Type Description Single Methods | Improve this Doc View Source Generate() Declaration public override MeshGenerator Generate() Returns Type Description MeshGenerator Overrides MeshGenerator.Generate()"
  },
  "api/g3.CholeskyDecomposition.html": {
    "href": "api/g3.CholeskyDecomposition.html",
    "title": "Class CholeskyDecomposition | ViRGIS VR GIS",
    "keywords": "Class CholeskyDecomposition Computes Cholesky decomposition/factorization L of matrix A A must be symmetric and positive-definite computed lower-triangular matrix L satisfies L*L^T = A. https://en.wikipedia.org/wiki/Cholesky_decomposition Inheritance Object CholeskyDecomposition Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class CholeskyDecomposition Constructors | Improve this Doc View Source CholeskyDecomposition(DenseMatrix) Declaration public CholeskyDecomposition(DenseMatrix m) Parameters Type Name Description DenseMatrix m Fields | Improve this Doc View Source A Declaration public DenseMatrix A Field Value Type Description DenseMatrix | Improve this Doc View Source L Declaration public DenseMatrix L Field Value Type Description DenseMatrix Methods | Improve this Doc View Source Compute() Declaration public bool Compute() Returns Type Description Boolean | Improve this Doc View Source ComputeParallel() Parallel version of Cholesky Decomposition, is about 2x faster on 4-cpu/8-HT Declaration public bool ComputeParallel() Returns Type Description Boolean | Improve this Doc View Source Solve(Double[], Double[], Double[]) Solve A*X=B via backsubstitution in cholesky factorization Requires temporary vector Y Declaration public void Solve(double[] B, double[] X, double[] Y) Parameters Type Name Description Double [] B Double [] X Double [] Y"
  },
  "api/g3.Circle2d.html": {
    "href": "api/g3.Circle2d.html",
    "title": "Class Circle2d | ViRGIS VR GIS",
    "keywords": "Class Circle2d Inheritance Object Circle2d Implements IParametricCurve2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class Circle2d : IParametricCurve2d Constructors | Improve this Doc View Source Circle2d(Vector2d, Double) Declaration public Circle2d(Vector2d center, double radius) Parameters Type Name Description Vector2d center Double radius | Improve this Doc View Source Circle2d(Double) Declaration public Circle2d(double radius) Parameters Type Name Description Double radius Fields | Improve this Doc View Source Center Declaration public Vector2d Center Field Value Type Description Vector2d | Improve this Doc View Source IsReversed Declaration public bool IsReversed Field Value Type Description Boolean | Improve this Doc View Source Radius Declaration public double Radius Field Value Type Description Double Properties | Improve this Doc View Source ArcLength Declaration public double ArcLength { get; } Property Value Type Description Double | Improve this Doc View Source Area Declaration public double Area { get; set; } Property Value Type Description Double | Improve this Doc View Source Bounds Declaration public AxisAlignedBox2d Bounds { get; } Property Value Type Description AxisAlignedBox2d | Improve this Doc View Source Circumference Declaration public double Circumference { get; set; } Property Value Type Description Double | Improve this Doc View Source Curvature Declaration public double Curvature { get; } Property Value Type Description Double | Improve this Doc View Source Diameter Declaration public double Diameter { get; set; } Property Value Type Description Double | Improve this Doc View Source HasArcLength Declaration public bool HasArcLength { get; } Property Value Type Description Boolean | Improve this Doc View Source IsClosed Declaration public bool IsClosed { get; } Property Value Type Description Boolean | Improve this Doc View Source IsTransformable Declaration public bool IsTransformable { get; } Property Value Type Description Boolean | Improve this Doc View Source ParamLength Declaration public double ParamLength { get; } Property Value Type Description Double | Improve this Doc View Source SignedCurvature Declaration public double SignedCurvature { get; } Property Value Type Description Double Methods | Improve this Doc View Source BoundingPolygonRadius(Double, Int32) Radius of n-sided regular polygon that contains circle of radius r Declaration public static double BoundingPolygonRadius(double r, int n) Parameters Type Name Description Double r Int32 n Returns Type Description Double | Improve this Doc View Source Clone() Declaration public IParametricCurve2d Clone() Returns Type Description IParametricCurve2d | Improve this Doc View Source Contains(Vector2d) Declaration public bool Contains(Vector2d p) Parameters Type Name Description Vector2d p Returns Type Description Boolean | Improve this Doc View Source Distance(Vector2d) Declaration public double Distance(Vector2d pt) Parameters Type Name Description Vector2d pt Returns Type Description Double | Improve this Doc View Source RadiusArea(Double) Declaration public static double RadiusArea(double r) Parameters Type Name Description Double r Returns Type Description Double | Improve this Doc View Source RadiusCircumference(Double) Declaration public static double RadiusCircumference(double r) Parameters Type Name Description Double r Returns Type Description Double | Improve this Doc View Source Reverse() Declaration public void Reverse() | Improve this Doc View Source SampleArcLength(Double) Declaration public Vector2d SampleArcLength(double a) Parameters Type Name Description Double a Returns Type Description Vector2d | Improve this Doc View Source SampleDeg(Double) Declaration public Vector2d SampleDeg(double degrees) Parameters Type Name Description Double degrees Returns Type Description Vector2d | Improve this Doc View Source SampleRad(Double) Declaration public Vector2d SampleRad(double radians) Parameters Type Name Description Double radians Returns Type Description Vector2d | Improve this Doc View Source SampleT(Double) Declaration public Vector2d SampleT(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source SignedDistance(Vector2d) Declaration public double SignedDistance(Vector2d pt) Parameters Type Name Description Vector2d pt Returns Type Description Double | Improve this Doc View Source TangentT(Double) Declaration public Vector2d TangentT(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source Transform(ITransform2) Declaration public void Transform(ITransform2 xform) Parameters Type Name Description ITransform2 xform Implements IParametricCurve2d"
  },
  "api/g3.Circle3d.html": {
    "href": "api/g3.Circle3d.html",
    "title": "Class Circle3d | ViRGIS VR GIS",
    "keywords": "Class Circle3d Inheritance Object Circle3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class Circle3d Constructors | Improve this Doc View Source Circle3d(Frame3f, Double, Int32) Declaration public Circle3d(Frame3f frame, double radius, int nNormalAxis = 1) Parameters Type Name Description Frame3f frame Double radius Int32 nNormalAxis | Improve this Doc View Source Circle3d(Vector3d, Double) Declaration public Circle3d(Vector3d center, double radius) Parameters Type Name Description Vector3d center Double radius | Improve this Doc View Source Circle3d(Vector3d, Double, Vector3d, Vector3d, Vector3d) Declaration public Circle3d(Vector3d center, double radius, Vector3d axis0, Vector3d axis1, Vector3d normal) Parameters Type Name Description Vector3d center Double radius Vector3d axis0 Vector3d axis1 Vector3d normal Fields | Improve this Doc View Source Center Declaration public Vector3d Center Field Value Type Description Vector3d | Improve this Doc View Source IsReversed Declaration public bool IsReversed Field Value Type Description Boolean | Improve this Doc View Source Normal Declaration public Vector3d Normal Field Value Type Description Vector3d | Improve this Doc View Source PlaneX Declaration public Vector3d PlaneX Field Value Type Description Vector3d | Improve this Doc View Source PlaneY Declaration public Vector3d PlaneY Field Value Type Description Vector3d | Improve this Doc View Source Radius Declaration public double Radius Field Value Type Description Double Properties | Improve this Doc View Source ArcLength Declaration public double ArcLength { get; } Property Value Type Description Double | Improve this Doc View Source Area Declaration public double Area { get; } Property Value Type Description Double | Improve this Doc View Source Circumference Declaration public double Circumference { get; } Property Value Type Description Double | Improve this Doc View Source Diameter Declaration public double Diameter { get; } Property Value Type Description Double | Improve this Doc View Source HasArcLength Declaration public bool HasArcLength { get; } Property Value Type Description Boolean | Improve this Doc View Source IsClosed Declaration public bool IsClosed { get; } Property Value Type Description Boolean | Improve this Doc View Source ParamLength Declaration public double ParamLength { get; } Property Value Type Description Double Methods | Improve this Doc View Source Reverse() Declaration public void Reverse() | Improve this Doc View Source SampleArcLength(Double) Declaration public Vector3d SampleArcLength(double a) Parameters Type Name Description Double a Returns Type Description Vector3d | Improve this Doc View Source SampleDeg(Double) Declaration public Vector3d SampleDeg(double degrees) Parameters Type Name Description Double degrees Returns Type Description Vector3d | Improve this Doc View Source SampleRad(Double) Declaration public Vector3d SampleRad(double radians) Parameters Type Name Description Double radians Returns Type Description Vector3d | Improve this Doc View Source SampleT(Double) Declaration public Vector3d SampleT(double t) Parameters Type Name Description Double t Returns Type Description Vector3d"
  },
  "api/g3.CircleProjectionTarget.html": {
    "href": "api/g3.CircleProjectionTarget.html",
    "title": "Class CircleProjectionTarget | ViRGIS VR GIS",
    "keywords": "Class CircleProjectionTarget Inheritance Object CircleProjectionTarget Implements IProjectionTarget Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class CircleProjectionTarget : IProjectionTarget Fields | Improve this Doc View Source Circle Declaration public Circle3d Circle Field Value Type Description Circle3d Methods | Improve this Doc View Source Project(Vector3d, Int32) Declaration public Vector3d Project(Vector3d vPoint, int identifier = -1) Parameters Type Name Description Vector3d vPoint Int32 identifier Returns Type Description Vector3d Implements IProjectionTarget"
  },
  "api/g3.Colorb.html": {
    "href": "api/g3.Colorb.html",
    "title": "Struct Colorb | ViRGIS VR GIS",
    "keywords": "Struct Colorb Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Colorb Constructors | Improve this Doc View Source Colorb(Colorb) Declaration public Colorb(Colorb copy) Parameters Type Name Description Colorb copy | Improve this Doc View Source Colorb(Colorb, Byte) Declaration public Colorb(Colorb copy, byte newAlpha) Parameters Type Name Description Colorb copy Byte newAlpha | Improve this Doc View Source Colorb(Byte, Byte) Declaration public Colorb(byte greylevel, byte a = 1) Parameters Type Name Description Byte greylevel Byte a | Improve this Doc View Source Colorb(Byte, Byte, Byte, Byte) Declaration public Colorb(byte r, byte g, byte b, byte a = 1) Parameters Type Name Description Byte r Byte g Byte b Byte a | Improve this Doc View Source Colorb(Byte[]) Declaration public Colorb(byte[] v2) Parameters Type Name Description Byte [] v2 | Improve this Doc View Source Colorb(Single, Single, Single, Single) Declaration public Colorb(float r, float g, float b, float a = 1F) Parameters Type Name Description Single r Single g Single b Single a Fields | Improve this Doc View Source a Declaration public byte a Field Value Type Description Byte | Improve this Doc View Source b Declaration public byte b Field Value Type Description Byte | Improve this Doc View Source g Declaration public byte g Field Value Type Description Byte | Improve this Doc View Source r Declaration public byte r Field Value Type Description Byte Properties | Improve this Doc View Source Item[Int32] Declaration public byte this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Byte"
  },
  "api/g3.Colorf.html": {
    "href": "api/g3.Colorf.html",
    "title": "Struct Colorf | ViRGIS VR GIS",
    "keywords": "Struct Colorf Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Colorf : IComparable<Colorf>, IEquatable<Colorf> Constructors | Improve this Doc View Source Colorf(Colorf) Declaration public Colorf(Colorf copy) Parameters Type Name Description Colorf copy | Improve this Doc View Source Colorf(Colorf, Single) Declaration public Colorf(Colorf copy, float newAlpha) Parameters Type Name Description Colorf copy Single newAlpha | Improve this Doc View Source Colorf(Int32, Int32, Int32, Int32) Declaration public Colorf(int r, int g, int b, int a = 255) Parameters Type Name Description Int32 r Int32 g Int32 b Int32 a | Improve this Doc View Source Colorf(Single, Single) Declaration public Colorf(float greylevel, float a = 1F) Parameters Type Name Description Single greylevel Single a | Improve this Doc View Source Colorf(Single, Single, Single, Single) Declaration public Colorf(float r, float g, float b, float a = 1F) Parameters Type Name Description Single r Single g Single b Single a | Improve this Doc View Source Colorf(Single[]) Declaration public Colorf(float[] v2) Parameters Type Name Description Single [] v2 Fields | Improve this Doc View Source a Declaration public float a Field Value Type Description Single | Improve this Doc View Source b Declaration public float b Field Value Type Description Single | Improve this Doc View Source Black Declaration public static readonly Colorf Black Field Value Type Description Colorf | Improve this Doc View Source Blue Declaration public static readonly Colorf Blue Field Value Type Description Colorf | Improve this Doc View Source BlueMetal Declaration public static readonly Colorf BlueMetal Field Value Type Description Colorf | Improve this Doc View Source CornflowerBlue Declaration public static readonly Colorf CornflowerBlue Field Value Type Description Colorf | Improve this Doc View Source Cyan Declaration public static readonly Colorf Cyan Field Value Type Description Colorf | Improve this Doc View Source DarkBlue Declaration public static readonly Colorf DarkBlue Field Value Type Description Colorf | Improve this Doc View Source DarkGrey Declaration public static readonly Colorf DarkGrey Field Value Type Description Colorf | Improve this Doc View Source DarkRed Declaration public static readonly Colorf DarkRed Field Value Type Description Colorf | Improve this Doc View Source DarkSlateBlue Declaration public static readonly Colorf DarkSlateBlue Field Value Type Description Colorf | Improve this Doc View Source DarkSlateGrey Declaration public static readonly Colorf DarkSlateGrey Field Value Type Description Colorf | Improve this Doc View Source DarkYellow Declaration public static readonly Colorf DarkYellow Field Value Type Description Colorf | Improve this Doc View Source DimGrey Declaration public static readonly Colorf DimGrey Field Value Type Description Colorf | Improve this Doc View Source FireBrick Declaration public static readonly Colorf FireBrick Field Value Type Description Colorf | Improve this Doc View Source ForestGreen Declaration public static readonly Colorf ForestGreen Field Value Type Description Colorf | Improve this Doc View Source g Declaration public float g Field Value Type Description Single | Improve this Doc View Source Gold Declaration public static readonly Colorf Gold Field Value Type Description Colorf | Improve this Doc View Source Goldenrod Declaration public static readonly Colorf Goldenrod Field Value Type Description Colorf | Improve this Doc View Source Green Declaration public static readonly Colorf Green Field Value Type Description Colorf | Improve this Doc View Source Grey Declaration public static readonly Colorf Grey Field Value Type Description Colorf | Improve this Doc View Source HotPink Declaration public static readonly Colorf HotPink Field Value Type Description Colorf | Improve this Doc View Source LightGreen Declaration public static readonly Colorf LightGreen Field Value Type Description Colorf | Improve this Doc View Source LightGrey Declaration public static readonly Colorf LightGrey Field Value Type Description Colorf | Improve this Doc View Source LightPink Declaration public static readonly Colorf LightPink Field Value Type Description Colorf | Improve this Doc View Source LightSlateGrey Declaration public static readonly Colorf LightSlateGrey Field Value Type Description Colorf | Improve this Doc View Source LightSteelBlue Declaration public static readonly Colorf LightSteelBlue Field Value Type Description Colorf | Improve this Doc View Source Magenta Declaration public static readonly Colorf Magenta Field Value Type Description Colorf | Improve this Doc View Source Navy Declaration public static readonly Colorf Navy Field Value Type Description Colorf | Improve this Doc View Source Orange Declaration public static readonly Colorf Orange Field Value Type Description Colorf | Improve this Doc View Source PivotYellow Declaration public static readonly Colorf PivotYellow Field Value Type Description Colorf | Improve this Doc View Source Purple Declaration public static readonly Colorf Purple Field Value Type Description Colorf | Improve this Doc View Source r Declaration public float r Field Value Type Description Single | Improve this Doc View Source Red Declaration public static readonly Colorf Red Field Value Type Description Colorf | Improve this Doc View Source SaddleBrown Declaration public static readonly Colorf SaddleBrown Field Value Type Description Colorf | Improve this Doc View Source SelectionGold Declaration public static readonly Colorf SelectionGold Field Value Type Description Colorf | Improve this Doc View Source SiennaBrown Declaration public static readonly Colorf SiennaBrown Field Value Type Description Colorf | Improve this Doc View Source Silver Declaration public static readonly Colorf Silver Field Value Type Description Colorf | Improve this Doc View Source SlateGrey Declaration public static readonly Colorf SlateGrey Field Value Type Description Colorf | Improve this Doc View Source StandardBeige Declaration public static readonly Colorf StandardBeige Field Value Type Description Colorf | Improve this Doc View Source Teal Declaration public static readonly Colorf Teal Field Value Type Description Colorf | Improve this Doc View Source TransparentBlack Declaration public static readonly Colorf TransparentBlack Field Value Type Description Colorf | Improve this Doc View Source TransparentWhite Declaration public static readonly Colorf TransparentWhite Field Value Type Description Colorf | Improve this Doc View Source VideoBlack Declaration public static readonly Colorf VideoBlack Field Value Type Description Colorf | Improve this Doc View Source VideoBlue Declaration public static readonly Colorf VideoBlue Field Value Type Description Colorf | Improve this Doc View Source VideoCyan Declaration public static readonly Colorf VideoCyan Field Value Type Description Colorf | Improve this Doc View Source VideoGreen Declaration public static readonly Colorf VideoGreen Field Value Type Description Colorf | Improve this Doc View Source VideoMagenta Declaration public static readonly Colorf VideoMagenta Field Value Type Description Colorf | Improve this Doc View Source VideoRed Declaration public static readonly Colorf VideoRed Field Value Type Description Colorf | Improve this Doc View Source VideoWhite Declaration public static readonly Colorf VideoWhite Field Value Type Description Colorf | Improve this Doc View Source VideoYellow Declaration public static readonly Colorf VideoYellow Field Value Type Description Colorf | Improve this Doc View Source Wheat Declaration public static readonly Colorf Wheat Field Value Type Description Colorf | Improve this Doc View Source White Declaration public static readonly Colorf White Field Value Type Description Colorf | Improve this Doc View Source Yellow Declaration public static readonly Colorf Yellow Field Value Type Description Colorf Properties | Improve this Doc View Source Item[Int32] Declaration public float this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Single Methods | Improve this Doc View Source Add(Colorf) Declaration public void Add(Colorf o) Parameters Type Name Description Colorf o | Improve this Doc View Source Clone(Single) Declaration public Colorf Clone(float fAlphaMultiply = 1F) Parameters Type Name Description Single fAlphaMultiply Returns Type Description Colorf | Improve this Doc View Source CompareTo(Colorf) Declaration public int CompareTo(Colorf other) Parameters Type Name Description Colorf other Returns Type Description Int32 | Improve this Doc View Source Equals(Colorf) Declaration public bool Equals(Colorf other) Parameters Type Name Description Colorf other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source Lerp(Colorf, Colorf, Single) Declaration public static Colorf Lerp(Colorf a, Colorf b, float t) Parameters Type Name Description Colorf a Colorf b Single t Returns Type Description Colorf | Improve this Doc View Source Set(Colorf) Declaration public void Set(Colorf o) Parameters Type Name Description Colorf o | Improve this Doc View Source Set(Single, Single, Single, Single) Declaration public void Set(float fR, float fG, float fB, float fA) Parameters Type Name Description Single fR Single fG Single fB Single fA | Improve this Doc View Source SetAlpha(Single) Declaration public Colorf SetAlpha(float a) Parameters Type Name Description Single a Returns Type Description Colorf | Improve this Doc View Source SqrDistance(Colorf) Declaration public float SqrDistance(Colorf v2) Parameters Type Name Description Colorf v2 Returns Type Description Single | Improve this Doc View Source Subtract(Colorf) Declaration public void Subtract(Colorf o) Parameters Type Name Description Colorf o | Improve this Doc View Source ToBytes() Declaration public Colorb ToBytes() Returns Type Description Colorb | Improve this Doc View Source ToRGB() Declaration public Vector3f ToRGB() Returns Type Description Vector3f | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() | Improve this Doc View Source ToString(String) Declaration public string ToString(string fmt) Parameters Type Name Description String fmt Returns Type Description String | Improve this Doc View Source WithAlpha(Single) Declaration public Colorf WithAlpha(float newAlpha) Parameters Type Name Description Single newAlpha Returns Type Description Colorf Operators | Improve this Doc View Source Addition(Colorf, Colorf) Declaration public static Colorf operator +(Colorf v0, Colorf v1) Parameters Type Name Description Colorf v0 Colorf v1 Returns Type Description Colorf | Improve this Doc View Source Addition(Colorf, Single) Declaration public static Colorf operator +(Colorf v0, float f) Parameters Type Name Description Colorf v0 Single f Returns Type Description Colorf | Improve this Doc View Source Equality(Colorf, Colorf) Declaration public static bool operator ==(Colorf a, Colorf b) Parameters Type Name Description Colorf a Colorf b Returns Type Description Boolean | Improve this Doc View Source Implicit(Colorf to Vector3f) Declaration public static implicit operator Vector3f(Colorf c) Parameters Type Name Description Colorf c Returns Type Description Vector3f | Improve this Doc View Source Implicit(Vector3f to Colorf) Declaration public static implicit operator Colorf(Vector3f c) Parameters Type Name Description Vector3f c Returns Type Description Colorf | Improve this Doc View Source Inequality(Colorf, Colorf) Declaration public static bool operator !=(Colorf a, Colorf b) Parameters Type Name Description Colorf a Colorf b Returns Type Description Boolean | Improve this Doc View Source Multiply(Colorf, Single) Declaration public static Colorf operator *(Colorf v, float f) Parameters Type Name Description Colorf v Single f Returns Type Description Colorf | Improve this Doc View Source Multiply(Single, Colorf) Declaration public static Colorf operator *(float f, Colorf v) Parameters Type Name Description Single f Colorf v Returns Type Description Colorf | Improve this Doc View Source Subtraction(Colorf, Colorf) Declaration public static Colorf operator -(Colorf v0, Colorf v1) Parameters Type Name Description Colorf v0 Colorf v1 Returns Type Description Colorf | Improve this Doc View Source Subtraction(Colorf, Single) Declaration public static Colorf operator -(Colorf v0, float f) Parameters Type Name Description Colorf v0 Single f Returns Type Description Colorf | Improve this Doc View Source UnaryNegation(Colorf) Declaration public static Colorf operator -(Colorf v) Parameters Type Name Description Colorf v Returns Type Description Colorf"
  },
  "api/g3.ColorHSV.html": {
    "href": "api/g3.ColorHSV.html",
    "title": "Class ColorHSV | ViRGIS VR GIS",
    "keywords": "Class ColorHSV Inheritance Object ColorHSV Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ColorHSV Constructors | Improve this Doc View Source ColorHSV(Colorf) Declaration public ColorHSV(Colorf rgb) Parameters Type Name Description Colorf rgb | Improve this Doc View Source ColorHSV(Single, Single, Single, Single) Declaration public ColorHSV(float h, float s, float v, float a = 1F) Parameters Type Name Description Single h Single s Single v Single a Fields | Improve this Doc View Source a Declaration public float a Field Value Type Description Single | Improve this Doc View Source h Declaration public float h Field Value Type Description Single | Improve this Doc View Source s Declaration public float s Field Value Type Description Single | Improve this Doc View Source v Declaration public float v Field Value Type Description Single Properties | Improve this Doc View Source RGBA Declaration public Colorf RGBA { get; set; } Property Value Type Description Colorf Methods | Improve this Doc View Source ConvertFromRGB(Colorf) Declaration public void ConvertFromRGB(Colorf rgb) Parameters Type Name Description Colorf rgb | Improve this Doc View Source ConvertToRGB() Declaration public Colorf ConvertToRGB() Returns Type Description Colorf"
  },
  "api/g3.ColorMap.html": {
    "href": "api/g3.ColorMap.html",
    "title": "Class ColorMap | ViRGIS VR GIS",
    "keywords": "Class ColorMap Inheritance Object ColorMap Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ColorMap Constructors | Improve this Doc View Source ColorMap() Declaration public ColorMap() | Improve this Doc View Source ColorMap(Single[], Colorf[]) Declaration public ColorMap(float[] t, Colorf[] c) Parameters Type Name Description Single [] t Colorf [] c Methods | Improve this Doc View Source AddPoint(Single, Colorf) Declaration public void AddPoint(float t, Colorf c) Parameters Type Name Description Single t Colorf c | Improve this Doc View Source Linear(Single) Declaration public Colorf Linear(float t) Parameters Type Name Description Single t Returns Type Description Colorf"
  },
  "api/g3.ColorMixer.html": {
    "href": "api/g3.ColorMixer.html",
    "title": "Class ColorMixer | ViRGIS VR GIS",
    "keywords": "Class ColorMixer Inheritance Object ColorMixer Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class ColorMixer Methods | Improve this Doc View Source CopyHue(Colorf, Colorf, Single) Declaration public static Colorf CopyHue(Colorf BaseColor, Colorf TakeHue, float fBlendAlpha) Parameters Type Name Description Colorf BaseColor Colorf TakeHue Single fBlendAlpha Returns Type Description Colorf | Improve this Doc View Source Darken(Colorf, Single) Declaration public static Colorf Darken(Colorf baseColor, float fValueMult = 0.75F) Parameters Type Name Description Colorf baseColor Single fValueMult Returns Type Description Colorf | Improve this Doc View Source Lighten(Colorf, Single) Declaration public static Colorf Lighten(Colorf baseColor, float fValueMult = 1.25F) Parameters Type Name Description Colorf baseColor Single fValueMult Returns Type Description Colorf"
  },
  "api/g3.CommandArgumentSet.html": {
    "href": "api/g3.CommandArgumentSet.html",
    "title": "Class CommandArgumentSet | ViRGIS VR GIS",
    "keywords": "Class CommandArgumentSet Inheritance Object CommandArgumentSet Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class CommandArgumentSet Fields | Improve this Doc View Source Filenames Declaration public List<string> Filenames Field Value Type Description List < String > | Improve this Doc View Source Flags Declaration public Dictionary<string, bool> Flags Field Value Type Description Dictionary < String , Boolean > | Improve this Doc View Source Floats Declaration public Dictionary<string, float> Floats Field Value Type Description Dictionary < String , Single > | Improve this Doc View Source Integers Declaration public Dictionary<string, int> Integers Field Value Type Description Dictionary < String , Int32 > | Improve this Doc View Source SawArguments Declaration public HashSet<string> SawArguments Field Value Type Description HashSet < String > | Improve this Doc View Source Strings Declaration public Dictionary<string, string> Strings Field Value Type Description Dictionary < String , String > Methods | Improve this Doc View Source error_invalid_value(String, String) Declaration protected virtual void error_invalid_value(string arg, string value) Parameters Type Name Description String arg String value | Improve this Doc View Source error_missing_argument(String) Declaration protected virtual void error_missing_argument(string arg) Parameters Type Name Description String arg | Improve this Doc View Source Parse(String[]) Declaration public bool Parse(string[] arguments) Parameters Type Name Description String [] arguments Returns Type Description Boolean | Improve this Doc View Source Register(String, Boolean) Declaration public void Register(string argument, bool defaultValue) Parameters Type Name Description String argument Boolean defaultValue | Improve this Doc View Source Register(String, Int32) Declaration public void Register(string argument, int defaultValue) Parameters Type Name Description String argument Int32 defaultValue | Improve this Doc View Source Register(String, Single) Declaration public void Register(string argument, float defaultValue) Parameters Type Name Description String argument Single defaultValue | Improve this Doc View Source Register(String, String) Declaration public void Register(string argument, string defaultValue) Parameters Type Name Description String argument String defaultValue | Improve this Doc View Source Saw(String) Declaration public bool Saw(string argument) Parameters Type Name Description String argument Returns Type Description Boolean | Improve this Doc View Source Validate(String, String[]) Declaration public bool Validate(string sParam, params string[] values) Parameters Type Name Description String sParam String [] values Returns Type Description Boolean"
  },
  "api/g3.ComplexEndpoint2d.html": {
    "href": "api/g3.ComplexEndpoint2d.html",
    "title": "Struct ComplexEndpoint2d | ViRGIS VR GIS",
    "keywords": "Struct ComplexEndpoint2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct ComplexEndpoint2d Fields | Improve this Doc View Source element Declaration public PlanarComplex.SmoothCurveElement element Field Value Type Description PlanarComplex.SmoothCurveElement | Improve this Doc View Source isStart Declaration public bool isStart Field Value Type Description Boolean | Improve this Doc View Source v Declaration public Vector2d v Field Value Type Description Vector2d"
  },
  "api/g3.ComplexSegment2d.html": {
    "href": "api/g3.ComplexSegment2d.html",
    "title": "Struct ComplexSegment2d | ViRGIS VR GIS",
    "keywords": "Struct ComplexSegment2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct ComplexSegment2d Fields | Improve this Doc View Source element Declaration public PlanarComplex.Element element Field Value Type Description PlanarComplex.Element | Improve this Doc View Source isClosed Declaration public bool isClosed Field Value Type Description Boolean | Improve this Doc View Source seg Declaration public Segment2d seg Field Value Type Description Segment2d"
  },
  "api/g3.ConeGenerator.html": {
    "href": "api/g3.ConeGenerator.html",
    "title": "Class ConeGenerator | ViRGIS VR GIS",
    "keywords": "Class ConeGenerator Inheritance Object MeshGenerator ConeGenerator Inherited Members MeshGenerator.vertices MeshGenerator.uv MeshGenerator.normals MeshGenerator.triangles MeshGenerator.groups MeshGenerator.WantUVs MeshGenerator.WantNormals MeshGenerator.WantGroups MeshGenerator.Clockwise MeshGenerator.MakeMesh(SimpleMesh) MeshGenerator.MakeSimpleMesh() MeshGenerator.MakeMesh(DMesh3) MeshGenerator.MakeDMesh() MeshGenerator.MakeMesh(NTMesh3) MeshGenerator.MakeNTMesh() MeshGenerator.duplicate_vertex_span(Int32, Int32) MeshGenerator.append_disc(Int32, Int32, Int32, Boolean, Boolean, Int32, Int32) MeshGenerator.append_rectangle(Int32, Int32, Int32, Int32, Boolean, Int32, Int32) MeshGenerator.append_2d_disc_segment(Int32, Int32, Int32, Int32, Boolean, Int32, Int32, Int32, Double) MeshGenerator.estimate_normal(Int32, Int32, Int32) MeshGenerator.bilerp(Vector3d, Vector3d, Vector3d, Vector3d, Double, Double) MeshGenerator.bilerp(Vector2d, Vector2d, Vector2d, Vector2d, Double, Double) MeshGenerator.bilerp(Vector2f, Vector2f, Vector2f, Vector2f, Single, Single) MeshGenerator.bilerp(Vector3i, Vector3i, Vector3i, Vector3i, Double, Double) MeshGenerator.lerp(Vector3i, Vector3i, Double) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ConeGenerator : MeshGenerator Fields | Improve this Doc View Source BaseRadius Declaration public float BaseRadius Field Value Type Description Single | Improve this Doc View Source EndAngleDeg Declaration public float EndAngleDeg Field Value Type Description Single | Improve this Doc View Source Height Declaration public float Height Field Value Type Description Single | Improve this Doc View Source NoSharedVertices Declaration public bool NoSharedVertices Field Value Type Description Boolean | Improve this Doc View Source Slices Declaration public int Slices Field Value Type Description Int32 | Improve this Doc View Source StartAngleDeg Declaration public float StartAngleDeg Field Value Type Description Single Methods | Improve this Doc View Source Generate() Declaration public override MeshGenerator Generate() Returns Type Description MeshGenerator Overrides MeshGenerator.Generate()"
  },
  "api/g3.ConstantIndexMap.html": {
    "href": "api/g3.ConstantIndexMap.html",
    "title": "Class ConstantIndexMap | ViRGIS VR GIS",
    "keywords": "Class ConstantIndexMap Inheritance Object ConstantIndexMap Implements IIndexMap Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ConstantIndexMap : IIndexMap Constructors | Improve this Doc View Source ConstantIndexMap(Int32) Declaration public ConstantIndexMap(int c) Parameters Type Name Description Int32 c Fields | Improve this Doc View Source Constant Declaration public int Constant Field Value Type Description Int32 Properties | Improve this Doc View Source Item[Int32] Declaration public int this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description Int32 Implements IIndexMap"
  },
  "api/g3.ConstantItr-1.html": {
    "href": "api/g3.ConstantItr-1.html",
    "title": "Class ConstantItr<T> | ViRGIS VR GIS",
    "keywords": "Class ConstantItr<T> Iterator that just returns a constant value N times Inheritance Object ConstantItr<T> Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ConstantItr<T> : IEnumerable<T>, IEnumerable Type Parameters Name Description T Constructors | Improve this Doc View Source ConstantItr(Int32, T) Declaration public ConstantItr(int count, T constant) Parameters Type Name Description Int32 count T constant Fields | Improve this Doc View Source ConstantValue Declaration public T ConstantValue Field Value Type Description T | Improve this Doc View Source N Declaration public int N Field Value Type Description Int32 Methods | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T>"
  },
  "api/g3.ContMinBox2.html": {
    "href": "api/g3.ContMinBox2.html",
    "title": "Class ContMinBox2 | ViRGIS VR GIS",
    "keywords": "Class ContMinBox2 Fit minimal bounding-box to a set of 2D points. Result is in MinBox. Inheritance Object ContMinBox2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ContMinBox2 Constructors | Improve this Doc View Source ContMinBox2(IList<Vector2d>, Double, QueryNumberType, Boolean) Declaration public ContMinBox2(IList<Vector2d> points, double epsilon, QueryNumberType queryType, bool isConvexPolygon) Parameters Type Name Description IList < Vector2d > points Double epsilon QueryNumberType queryType Boolean isConvexPolygon Properties | Improve this Doc View Source MinBox Declaration public Box2d MinBox { get; } Property Value Type Description Box2d Methods | Improve this Doc View Source UpdateBox(Vector2d, Vector2d, Vector2d, Vector2d, ref Vector2d, ref Vector2d, ref Double) Declaration protected void UpdateBox(Vector2d LPoint, Vector2d RPoint, Vector2d BPoint, Vector2d TPoint, ref Vector2d U, ref Vector2d V, ref double minAreaDiv4) Parameters Type Name Description Vector2d LPoint Vector2d RPoint Vector2d BPoint Vector2d TPoint Vector2d U Vector2d V Double minAreaDiv4"
  },
  "api/g3.ContMinBox2.RCFlags.html": {
    "href": "api/g3.ContMinBox2.RCFlags.html",
    "title": "Enum ContMinBox2.RCFlags | ViRGIS VR GIS",
    "keywords": "Enum ContMinBox2.RCFlags Namespace : g3 Assembly : geometry3Sharp.dll Syntax protected enum RCFlags Fields Name Description F_BOTTOM F_LEFT F_NONE F_RIGHT F_TOP"
  },
  "api/g3.ContMinCircle2.html": {
    "href": "api/g3.ContMinCircle2.html",
    "title": "Class ContMinCircle2 | ViRGIS VR GIS",
    "keywords": "Class ContMinCircle2 Fit minimal bounding-circle to a set of 2D points Inheritance Object ContMinCircle2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ContMinCircle2 Constructors | Improve this Doc View Source ContMinCircle2(IList<Vector2d>, Double) Declaration public ContMinCircle2(IList<Vector2d> pointsIn, double epsilon = 1E-05) Parameters Type Name Description IList < Vector2d > pointsIn Double epsilon Fields | Improve this Doc View Source Result Declaration public Circle2d Result Field Value Type Description Circle2d"
  },
  "api/g3.ContMinCircle2.Support.html": {
    "href": "api/g3.ContMinCircle2.Support.html",
    "title": "Class ContMinCircle2.Support | ViRGIS VR GIS",
    "keywords": "Class ContMinCircle2.Support Inheritance Object ContMinCircle2.Support Namespace : g3 Assembly : geometry3Sharp.dll Syntax protected class Support Fields | Improve this Doc View Source Index Declaration public Index3i Index Field Value Type Description Index3i | Improve this Doc View Source Quantity Declaration public int Quantity Field Value Type Description Int32 Methods | Improve this Doc View Source Contains(Int32, IList<Vector2d>, Int32[], Double) Declaration public bool Contains(int index, IList<Vector2d> Points, int[] permutation, double epsilon) Parameters Type Name Description Int32 index IList < Vector2d > Points Int32 [] permutation Double epsilon Returns Type Description Boolean"
  },
  "api/g3.ContOrientedBox3.html": {
    "href": "api/g3.ContOrientedBox3.html",
    "title": "Class ContOrientedBox3 | ViRGIS VR GIS",
    "keywords": "Class ContOrientedBox3 Inheritance Object ContOrientedBox3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ContOrientedBox3 Constructors | Improve this Doc View Source ContOrientedBox3(IEnumerable<Vector3d>) Declaration public ContOrientedBox3(IEnumerable<Vector3d> points) Parameters Type Name Description IEnumerable < Vector3d > points | Improve this Doc View Source ContOrientedBox3(IEnumerable<Vector3d>, IEnumerable<Double>) Declaration public ContOrientedBox3(IEnumerable<Vector3d> points, IEnumerable<double> pointWeights) Parameters Type Name Description IEnumerable < Vector3d > points IEnumerable < Double > pointWeights Fields | Improve this Doc View Source Box Declaration public Box3d Box Field Value Type Description Box3d | Improve this Doc View Source ResultValid Declaration public bool ResultValid Field Value Type Description Boolean"
  },
  "api/g3.ConvexHull2.Edge.html": {
    "href": "api/g3.ConvexHull2.Edge.html",
    "title": "Class ConvexHull2.Edge | ViRGIS VR GIS",
    "keywords": "Class ConvexHull2.Edge Internal class that represents edge of hull, and neighbours Inheritance Object ConvexHull2.Edge Namespace : g3 Assembly : geometry3Sharp.dll Syntax protected class Edge Constructors | Improve this Doc View Source Edge(Int32, Int32) Declaration public Edge(int v0, int v1) Parameters Type Name Description Int32 v0 Int32 v1 Fields | Improve this Doc View Source E0 Declaration public ConvexHull2.Edge E0 Field Value Type Description ConvexHull2.Edge | Improve this Doc View Source E1 Declaration public ConvexHull2.Edge E1 Field Value Type Description ConvexHull2.Edge | Improve this Doc View Source Sign Declaration public int Sign Field Value Type Description Int32 | Improve this Doc View Source Time Declaration public int Time Field Value Type Description Int32 | Improve this Doc View Source V Declaration public Vector2i V Field Value Type Description Vector2i Methods | Improve this Doc View Source DeleteSelf() Declaration public void DeleteSelf() | Improve this Doc View Source GetIndices(ref Int32, ref Int32[]) Declaration public void GetIndices(ref int numIndices, ref int[] indices) Parameters Type Name Description Int32 numIndices Int32 [] indices | Improve this Doc View Source GetSign(Int32, Query2) Declaration public int GetSign(int i, Query2 query) Parameters Type Name Description Int32 i Query2 query Returns Type Description Int32 | Improve this Doc View Source Insert(ConvexHull2.Edge, ConvexHull2.Edge) Declaration public void Insert(ConvexHull2.Edge adj0, ConvexHull2.Edge adj1) Parameters Type Name Description ConvexHull2.Edge adj0 ConvexHull2.Edge adj1"
  },
  "api/g3.ConvexHull2.html": {
    "href": "api/g3.ConvexHull2.html",
    "title": "Class ConvexHull2 | ViRGIS VR GIS",
    "keywords": "Class ConvexHull2 Construct convex hull of a set of 2D points, with various accuracy levels. HullIndices provides ordered indices of vertices of input points that form hull. Inheritance Object ConvexHull2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ConvexHull2 Constructors | Improve this Doc View Source ConvexHull2(IList<Vector2d>, Double, QueryNumberType) Compute convex hull of input points. epsilon is only used for check if points lie on a line (1d hull), not for rest of compute. Declaration public ConvexHull2(IList<Vector2d> vertices, double epsilon, QueryNumberType queryType) Parameters Type Name Description IList < Vector2d > vertices Double epsilon QueryNumberType queryType Properties | Improve this Doc View Source Dimension Declaration public int Dimension { get; } Property Value Type Description Int32 | Improve this Doc View Source HullIndices array of indices into V that represent the convex polygon edges (NumSimplices total elements) The i-th edge has vertices vertex[0] = V[I[i]] vertex[1] = V[I[(i+1) % SQ]] Declaration public int[] HullIndices { get; } Property Value Type Description Int32 [] | Improve this Doc View Source NumSimplices Number of convex polygon edges Declaration public int NumSimplices { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Get1DHullInfo(out Vector2d, out Vector2d) If the resulting Dimension == 1, then you can use this to get some info... Declaration public void Get1DHullInfo(out Vector2d origin, out Vector2d direction) Parameters Type Name Description Vector2d origin Vector2d direction | Improve this Doc View Source GetHullPolygon() Extract convex hull polygon from input points Declaration public Polygon2d GetHullPolygon() Returns Type Description Polygon2d"
  },
  "api/g3.Curve3Axis3RevolveGenerator.html": {
    "href": "api/g3.Curve3Axis3RevolveGenerator.html",
    "title": "Class Curve3Axis3RevolveGenerator | ViRGIS VR GIS",
    "keywords": "Class Curve3Axis3RevolveGenerator Inheritance Object MeshGenerator Curve3Axis3RevolveGenerator Inherited Members MeshGenerator.vertices MeshGenerator.uv MeshGenerator.normals MeshGenerator.triangles MeshGenerator.groups MeshGenerator.WantUVs MeshGenerator.WantNormals MeshGenerator.WantGroups MeshGenerator.Clockwise MeshGenerator.MakeMesh(SimpleMesh) MeshGenerator.MakeSimpleMesh() MeshGenerator.MakeMesh(DMesh3) MeshGenerator.MakeDMesh() MeshGenerator.MakeMesh(NTMesh3) MeshGenerator.MakeNTMesh() MeshGenerator.duplicate_vertex_span(Int32, Int32) MeshGenerator.append_disc(Int32, Int32, Int32, Boolean, Boolean, Int32, Int32) MeshGenerator.append_rectangle(Int32, Int32, Int32, Int32, Boolean, Int32, Int32) MeshGenerator.append_2d_disc_segment(Int32, Int32, Int32, Int32, Boolean, Int32, Int32, Int32, Double) MeshGenerator.estimate_normal(Int32, Int32, Int32) MeshGenerator.bilerp(Vector3d, Vector3d, Vector3d, Vector3d, Double, Double) MeshGenerator.bilerp(Vector2d, Vector2d, Vector2d, Vector2d, Double, Double) MeshGenerator.bilerp(Vector2f, Vector2f, Vector2f, Vector2f, Single, Single) MeshGenerator.bilerp(Vector3i, Vector3i, Vector3i, Vector3i, Double, Double) MeshGenerator.lerp(Vector3i, Vector3i, Double) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class Curve3Axis3RevolveGenerator : MeshGenerator Fields | Improve this Doc View Source Axis Declaration public Frame3f Axis Field Value Type Description Frame3f | Improve this Doc View Source Capped Declaration public bool Capped Field Value Type Description Boolean | Improve this Doc View Source Curve Declaration public Vector3d[] Curve Field Value Type Description Vector3d [] | Improve this Doc View Source endCapCenterIndex Declaration public int endCapCenterIndex Field Value Type Description Int32 | Improve this Doc View Source NoSharedVertices Declaration public bool NoSharedVertices Field Value Type Description Boolean | Improve this Doc View Source RevolveAxis Declaration public int RevolveAxis Field Value Type Description Int32 | Improve this Doc View Source Slices Declaration public int Slices Field Value Type Description Int32 | Improve this Doc View Source startCapCenterIndex Declaration public int startCapCenterIndex Field Value Type Description Int32 Methods | Improve this Doc View Source Generate() Declaration public override MeshGenerator Generate() Returns Type Description MeshGenerator Overrides MeshGenerator.Generate()"
  },
  "api/g3.Curve3Curve3RevolveGenerator.html": {
    "href": "api/g3.Curve3Curve3RevolveGenerator.html",
    "title": "Class Curve3Curve3RevolveGenerator | ViRGIS VR GIS",
    "keywords": "Class Curve3Curve3RevolveGenerator Inheritance Object MeshGenerator Curve3Curve3RevolveGenerator Inherited Members MeshGenerator.vertices MeshGenerator.uv MeshGenerator.normals MeshGenerator.triangles MeshGenerator.groups MeshGenerator.WantUVs MeshGenerator.WantNormals MeshGenerator.WantGroups MeshGenerator.Clockwise MeshGenerator.MakeMesh(SimpleMesh) MeshGenerator.MakeSimpleMesh() MeshGenerator.MakeMesh(DMesh3) MeshGenerator.MakeDMesh() MeshGenerator.MakeMesh(NTMesh3) MeshGenerator.MakeNTMesh() MeshGenerator.duplicate_vertex_span(Int32, Int32) MeshGenerator.append_disc(Int32, Int32, Int32, Boolean, Boolean, Int32, Int32) MeshGenerator.append_rectangle(Int32, Int32, Int32, Int32, Boolean, Int32, Int32) MeshGenerator.append_2d_disc_segment(Int32, Int32, Int32, Int32, Boolean, Int32, Int32, Int32, Double) MeshGenerator.estimate_normal(Int32, Int32, Int32) MeshGenerator.bilerp(Vector3d, Vector3d, Vector3d, Vector3d, Double, Double) MeshGenerator.bilerp(Vector2d, Vector2d, Vector2d, Vector2d, Double, Double) MeshGenerator.bilerp(Vector2f, Vector2f, Vector2f, Vector2f, Single, Single) MeshGenerator.bilerp(Vector3i, Vector3i, Vector3i, Vector3i, Double, Double) MeshGenerator.lerp(Vector3i, Vector3i, Double) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class Curve3Curve3RevolveGenerator : MeshGenerator Fields | Improve this Doc View Source Axis Declaration public Vector3d[] Axis Field Value Type Description Vector3d [] | Improve this Doc View Source Capped Declaration public bool Capped Field Value Type Description Boolean | Improve this Doc View Source Curve Declaration public Vector3d[] Curve Field Value Type Description Vector3d [] | Improve this Doc View Source endCapCenterIndex Declaration public int endCapCenterIndex Field Value Type Description Int32 | Improve this Doc View Source NoSharedVertices Declaration public bool NoSharedVertices Field Value Type Description Boolean | Improve this Doc View Source Slices Declaration public int Slices Field Value Type Description Int32 | Improve this Doc View Source startCapCenterIndex Declaration public int startCapCenterIndex Field Value Type Description Int32 Methods | Improve this Doc View Source Generate() Declaration public override MeshGenerator Generate() Returns Type Description MeshGenerator Overrides MeshGenerator.Generate()"
  },
  "api/g3.CurveGenerator.html": {
    "href": "api/g3.CurveGenerator.html",
    "title": "Class CurveGenerator | ViRGIS VR GIS",
    "keywords": "Class CurveGenerator Inheritance Object CurveGenerator LineGenerator Namespace : g3 Assembly : geometry3Sharp.dll Syntax public abstract class CurveGenerator Fields | Improve this Doc View Source closed Declaration public bool closed Field Value Type Description Boolean | Improve this Doc View Source vertices Declaration public VectorArray3d vertices Field Value Type Description VectorArray3d Methods | Improve this Doc View Source Generate() Declaration public abstract void Generate() | Improve this Doc View Source Make(DCurve3) Declaration public void Make(DCurve3 c) Parameters Type Name Description DCurve3 c"
  },
  "api/g3.CurveResampler.html": {
    "href": "api/g3.CurveResampler.html",
    "title": "Class CurveResampler | ViRGIS VR GIS",
    "keywords": "Class CurveResampler Inheritance Object CurveResampler Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class CurveResampler Methods | Improve this Doc View Source SplitCollapseResample(ISampledCurve3d, Double, Double) Declaration public List<Vector3d> SplitCollapseResample(ISampledCurve3d curve, double fMaxEdgeLen, double fMinEdgeLen) Parameters Type Name Description ISampledCurve3d curve Double fMaxEdgeLen Double fMinEdgeLen Returns Type Description List < Vector3d > | Improve this Doc View Source SplitResample(ISampledCurve3d, Double) Declaration public List<Vector3d> SplitResample(ISampledCurve3d curve, double fMaxEdgeLen) Parameters Type Name Description ISampledCurve3d curve Double fMaxEdgeLen Returns Type Description List < Vector3d >"
  },
  "api/g3.CurveSample.html": {
    "href": "api/g3.CurveSample.html",
    "title": "Struct CurveSample | ViRGIS VR GIS",
    "keywords": "Struct CurveSample Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct CurveSample Constructors | Improve this Doc View Source CurveSample(Vector3d, Vector3d) Declaration public CurveSample(Vector3d p, Vector3d t) Parameters Type Name Description Vector3d p Vector3d t Fields | Improve this Doc View Source position Declaration public Vector3d position Field Value Type Description Vector3d | Improve this Doc View Source tangent Declaration public Vector3d tangent Field Value Type Description Vector3d"
  },
  "api/g3.CurveSample2d.html": {
    "href": "api/g3.CurveSample2d.html",
    "title": "Struct CurveSample2d | ViRGIS VR GIS",
    "keywords": "Struct CurveSample2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct CurveSample2d Constructors | Improve this Doc View Source CurveSample2d(Vector2d, Vector2d) Declaration public CurveSample2d(Vector2d p, Vector2d t) Parameters Type Name Description Vector2d p Vector2d t Fields | Improve this Doc View Source position Declaration public Vector2d position Field Value Type Description Vector2d | Improve this Doc View Source tangent Declaration public Vector2d tangent Field Value Type Description Vector2d"
  },
  "api/g3.CurveSampler2.html": {
    "href": "api/g3.CurveSampler2.html",
    "title": "Class CurveSampler2 | ViRGIS VR GIS",
    "keywords": "Class CurveSampler2 Inheritance Object CurveSampler2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class CurveSampler2 Methods | Improve this Doc View Source AutoSample(IParametricCurve2d, Double, Double) Declaration public static VectorArray2d AutoSample(IParametricCurve2d curve, double fSpacingLength, double fSpacingT) Parameters Type Name Description IParametricCurve2d curve Double fSpacingLength Double fSpacingT Returns Type Description VectorArray2d | Improve this Doc View Source AutoSample(ParametricCurveSequence2, Double, Double) Declaration public static VectorArray2d AutoSample(ParametricCurveSequence2 curves, double fSpacingLength, double fSpacingT) Parameters Type Name Description ParametricCurveSequence2 curves Double fSpacingLength Double fSpacingT Returns Type Description VectorArray2d | Improve this Doc View Source SampleArcLen(IParametricCurve2d, Double) Declaration public static VectorArray2d SampleArcLen(IParametricCurve2d curve, double fSpacing) Parameters Type Name Description IParametricCurve2d curve Double fSpacing Returns Type Description VectorArray2d | Improve this Doc View Source SampleNURBSHybrid(NURBSCurve2, Double) Declaration public static VectorArray2d SampleNURBSHybrid(NURBSCurve2 curve, double fSpacing) Parameters Type Name Description NURBSCurve2 curve Double fSpacing Returns Type Description VectorArray2d | Improve this Doc View Source SampleT(IParametricCurve2d, Double) Declaration public static VectorArray2d SampleT(IParametricCurve2d curve, double fSpacing) Parameters Type Name Description IParametricCurve2d curve Double fSpacing Returns Type Description VectorArray2d | Improve this Doc View Source SampleT(IParametricCurve2d, Int32) Declaration public static VectorArray2d SampleT(IParametricCurve2d curve, int N) Parameters Type Name Description IParametricCurve2d curve Int32 N Returns Type Description VectorArray2d | Improve this Doc View Source SampleTRange(IParametricCurve2d, Int32, Double, Double) Declaration public static VectorArray2d SampleTRange(IParametricCurve2d curve, int N, double t0, double t1) Parameters Type Name Description IParametricCurve2d curve Int32 N Double t0 Double t1 Returns Type Description VectorArray2d"
  },
  "api/g3.CurveUtils.html": {
    "href": "api/g3.CurveUtils.html",
    "title": "Class CurveUtils | ViRGIS VR GIS",
    "keywords": "Class CurveUtils Inheritance Object CurveUtils Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class CurveUtils Methods | Improve this Doc View Source ArcLength(Vector3d[], Boolean) Declaration public static double ArcLength(Vector3d[] vertices, bool bLoop = false) Parameters Type Name Description Vector3d [] vertices Boolean bLoop Returns Type Description Double | Improve this Doc View Source ArcLength(IEnumerable<Vector3d>) Declaration public static double ArcLength(IEnumerable<Vector3d> vertices) Parameters Type Name Description IEnumerable < Vector3d > vertices Returns Type Description Double | Improve this Doc View Source ArcLength(List<Vector3d>, Boolean) Declaration public static double ArcLength(List<Vector3d> vertices, bool bLoop = false) Parameters Type Name Description List < Vector3d > vertices Boolean bLoop Returns Type Description Double | Improve this Doc View Source FindClosestRayIntersection(ISampledCurve3d, Double, Ray3d, out Double) Declaration public static bool FindClosestRayIntersection(ISampledCurve3d c, double segRadius, Ray3d ray, out double minRayT) Parameters Type Name Description ISampledCurve3d c Double segRadius Ray3d ray Double minRayT Returns Type Description Boolean | Improve this Doc View Source FindNearestIndex(ISampledCurve3d, Vector3d) Declaration public static int FindNearestIndex(ISampledCurve3d c, Vector3d v) Parameters Type Name Description ISampledCurve3d c Vector3d v Returns Type Description Int32 | Improve this Doc View Source GetTangent(List<Vector3d>, Int32, Boolean) Declaration public static Vector3d GetTangent(List<Vector3d> vertices, int i, bool bLoop = false) Parameters Type Name Description List < Vector3d > vertices Int32 i Boolean bLoop Returns Type Description Vector3d | Improve this Doc View Source InPlaceSmooth(IList<Vector3d>, Double, Int32, Boolean) smooth set of vertices in-place (will not produce a symmetric result, but does not require extra buffer) Declaration public static void InPlaceSmooth(IList<Vector3d> vertices, double alpha, int nIterations, bool bClosed) Parameters Type Name Description IList < Vector3d > vertices Double alpha Int32 nIterations Boolean bClosed | Improve this Doc View Source InPlaceSmooth(IList<Vector3d>, Int32, Int32, Double, Int32, Boolean) smooth set of vertices in-place (will not produce a symmetric result, but does not require extra buffer) Declaration public static void InPlaceSmooth(IList<Vector3d> vertices, int iStart, int iEnd, double alpha, int nIterations, bool bClosed) Parameters Type Name Description IList < Vector3d > vertices Int32 iStart Int32 iEnd Double alpha Int32 nIterations Boolean bClosed | Improve this Doc View Source IterativeSmooth(IList<Vector3d>, Double, Int32, Boolean) smooth set of vertices using extra buffer Declaration public static void IterativeSmooth(IList<Vector3d> vertices, double alpha, int nIterations, bool bClosed) Parameters Type Name Description IList < Vector3d > vertices Double alpha Int32 nIterations Boolean bClosed | Improve this Doc View Source IterativeSmooth(IList<Vector3d>, Int32, Int32, Double, Int32, Boolean, Vector3d[]) smooth set of vertices using extra buffer Declaration public static void IterativeSmooth(IList<Vector3d> vertices, int iStart, int iEnd, double alpha, int nIterations, bool bClosed, Vector3d[] buffer = null) Parameters Type Name Description IList < Vector3d > vertices Int32 iStart Int32 iEnd Double alpha Int32 nIterations Boolean bClosed Vector3d [] buffer"
  },
  "api/g3.CurveUtils2.html": {
    "href": "api/g3.CurveUtils2.html",
    "title": "Class CurveUtils2 | ViRGIS VR GIS",
    "keywords": "Class CurveUtils2 Inheritance Object CurveUtils2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class CurveUtils2 Methods | Improve this Doc View Source CentroidVtx(IEnumerable<Vector2d>) Declaration public static Vector2d CentroidVtx(IEnumerable<Vector2d> vertices) Parameters Type Name Description IEnumerable < Vector2d > vertices Returns Type Description Vector2d | Improve this Doc View Source Convert(Polygon2d) Declaration public static IParametricCurve2d Convert(Polygon2d poly) Parameters Type Name Description Polygon2d poly Returns Type Description IParametricCurve2d | Improve this Doc View Source Filter<T>(List<T>, Func<T, Boolean>) return list of objects for which keepF(obj) returns true Declaration public static List<T> Filter<T>(List<T> objects, Func<T, bool> keepF) Parameters Type Name Description List <T> objects Func <T, Boolean > keepF Returns Type Description List <T> Type Parameters Name Description T | Improve this Doc View Source FilterDegenerate(List<GeneralPolygon2d>, Double) Remove polygons and polygon-holes smaller than minArea Declaration public static List<GeneralPolygon2d> FilterDegenerate(List<GeneralPolygon2d> polygons, double minArea) Parameters Type Name Description List < GeneralPolygon2d > polygons Double minArea Returns Type Description List < GeneralPolygon2d > | Improve this Doc View Source FindNearestVertex(Vector2d, IEnumerable<Vector2d>) Declaration public static int FindNearestVertex(Vector2d pt, IEnumerable<Vector2d> vertices) Parameters Type Name Description Vector2d pt IEnumerable < Vector2d > vertices Returns Type Description Int32 | Improve this Doc View Source Flatten(IParametricCurve2d) Declaration public static List<IParametricCurve2d> Flatten(IParametricCurve2d curve) Parameters Type Name Description IParametricCurve2d curve Returns Type Description List < IParametricCurve2d > | Improve this Doc View Source Flatten(List<IParametricCurve2d>) Declaration public static List<IParametricCurve2d> Flatten(List<IParametricCurve2d> curves) Parameters Type Name Description List < IParametricCurve2d > curves Returns Type Description List < IParametricCurve2d > | Improve this Doc View Source GetMaxOriginDistances(IEnumerable<Vector2d>) Declaration public static Vector2d GetMaxOriginDistances(IEnumerable<Vector2d> vertices) Parameters Type Name Description IEnumerable < Vector2d > vertices Returns Type Description Vector2d | Improve this Doc View Source LaplacianSmooth(IList<Vector2d>, Double, Int32, Boolean, Boolean) Declaration public static void LaplacianSmooth(IList<Vector2d> vertices, double alpha, int iterations, bool is_loop, bool in_place = false) Parameters Type Name Description IList < Vector2d > vertices Double alpha Int32 iterations Boolean is_loop Boolean in_place | Improve this Doc View Source LaplacianSmoothConstrained(GeneralPolygon2d, Double, Int32, Double, Boolean, Boolean) Declaration public static void LaplacianSmoothConstrained(GeneralPolygon2d solid, double alpha, int iterations, double max_dist, bool bAllowShrink, bool bAllowGrow) Parameters Type Name Description GeneralPolygon2d solid Double alpha Int32 iterations Double max_dist Boolean bAllowShrink Boolean bAllowGrow | Improve this Doc View Source LaplacianSmoothConstrained(Polygon2d, Double, Int32, Double, Boolean, Boolean, Boolean) Constrained laplacian smoothing of input polygon, alpha X iterations. vertices are only allowed to move at most max_dist from constraint if bAllowShrink == false, vertices are kept outside input polygon if bAllowGrow == false, vertices are kept inside input polygon max_dist is measured from vertex[i] to original_vertex[i], unless you set bPerVertexDistances = false, then distance to original polygon is used (which is much more expensive) [TODO] this is pretty hacky...could be better in lots of ways... Declaration public static void LaplacianSmoothConstrained(Polygon2d poly, double alpha, int iterations, double max_dist, bool bAllowShrink, bool bAllowGrow, bool bPerVertexDistances = true) Parameters Type Name Description Polygon2d poly Double alpha Int32 iterations Double max_dist Boolean bAllowShrink Boolean bAllowGrow Boolean bPerVertexDistances | Improve this Doc View Source LeafCurvesIteration(IParametricCurve2d) if the children of C are a tree, iterate through all the leaves Declaration public static IEnumerable<IParametricCurve2d> LeafCurvesIteration(IParametricCurve2d c) Parameters Type Name Description IParametricCurve2d c Returns Type Description IEnumerable < IParametricCurve2d > | Improve this Doc View Source SampledDistance(IParametricCurve2d, Vector2d, Int32) Declaration public static double SampledDistance(IParametricCurve2d c, Vector2d point, int N = 100) Parameters Type Name Description IParametricCurve2d c Vector2d point Int32 N Returns Type Description Double | Improve this Doc View Source Split<T>(List<T>, out List<T>, out List<T>, Func<T, Boolean>) Split the input list into two new lists, based on predicate (set1 == true) Declaration public static void Split<T>(List<T> objects, out List<T> set1, out List<T> set2, Func<T, bool> splitF) Parameters Type Name Description List <T> objects List <T> set1 List <T> set2 Func <T, Boolean > splitF Type Parameters Name Description T | Improve this Doc View Source SplitToTargetLength(Polygon2d, Double) Declaration public static Polygon2d SplitToTargetLength(Polygon2d poly, double length) Parameters Type Name Description Polygon2d poly Double length Returns Type Description Polygon2d"
  },
  "api/g3.Cylinder3d.html": {
    "href": "api/g3.Cylinder3d.html",
    "title": "Class Cylinder3d | ViRGIS VR GIS",
    "keywords": "Class Cylinder3d Inheritance Object Cylinder3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class Cylinder3d Constructors | Improve this Doc View Source Cylinder3d(Frame3f, Double, Double, Int32) Declaration public Cylinder3d(Frame3f frame, double radius, double height, int nNormalAxis = 1) Parameters Type Name Description Frame3f frame Double radius Double height Int32 nNormalAxis | Improve this Doc View Source Cylinder3d(Line3d, Double, Double) Declaration public Cylinder3d(Line3d axis, double radius, double height) Parameters Type Name Description Line3d axis Double radius Double height | Improve this Doc View Source Cylinder3d(Vector3d, Vector3d, Double, Double) Declaration public Cylinder3d(Vector3d center, Vector3d axis, double radius, double height) Parameters Type Name Description Vector3d center Vector3d axis Double radius Double height | Improve this Doc View Source Cylinder3d(Double, Double) Declaration public Cylinder3d(double radius, double height) Parameters Type Name Description Double radius Double height Fields | Improve this Doc View Source Axis Declaration public Line3d Axis Field Value Type Description Line3d | Improve this Doc View Source Height Declaration public double Height Field Value Type Description Double | Improve this Doc View Source Radius Declaration public double Radius Field Value Type Description Double Properties | Improve this Doc View Source Circumference Declaration public double Circumference { get; } Property Value Type Description Double | Improve this Doc View Source Diameter Declaration public double Diameter { get; } Property Value Type Description Double | Improve this Doc View Source Volume Declaration public double Volume { get; } Property Value Type Description Double"
  },
  "api/g3.CylinderProjectionTarget.html": {
    "href": "api/g3.CylinderProjectionTarget.html",
    "title": "Class CylinderProjectionTarget | ViRGIS VR GIS",
    "keywords": "Class CylinderProjectionTarget Inheritance Object CylinderProjectionTarget Implements IProjectionTarget Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class CylinderProjectionTarget : IProjectionTarget Fields | Improve this Doc View Source Cylinder Declaration public Cylinder3d Cylinder Field Value Type Description Cylinder3d Methods | Improve this Doc View Source Project(Vector3d, Int32) Declaration public Vector3d Project(Vector3d vPoint, int identifer = -1) Parameters Type Name Description Vector3d vPoint Int32 identifer Returns Type Description Vector3d Implements IProjectionTarget"
  },
  "api/g3.DCurve3.html": {
    "href": "api/g3.DCurve3.html",
    "title": "Class DCurve3 | ViRGIS VR GIS",
    "keywords": "Class DCurve3 DCurve3 is a 3D polyline, either open or closed (via .Closed) Despite the D prefix, it is not dynamic Inheritance Object DCurve3 Implements ISampledCurve3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DCurve3 : ISampledCurve3d Constructors | Improve this Doc View Source DCurve3() Declaration public DCurve3() | Improve this Doc View Source DCurve3(DCurve3) Declaration public DCurve3(DCurve3 copy) Parameters Type Name Description DCurve3 copy | Improve this Doc View Source DCurve3(ISampledCurve3d) Declaration public DCurve3(ISampledCurve3d icurve) Parameters Type Name Description ISampledCurve3d icurve | Improve this Doc View Source DCurve3(Polygon2d, Int32, Int32) Declaration public DCurve3(Polygon2d poly, int ix = 0, int iy = 1) Parameters Type Name Description Polygon2d poly Int32 ix Int32 iy | Improve this Doc View Source DCurve3(IEnumerable<Vector3d>, Boolean) Declaration public DCurve3(IEnumerable<Vector3d> verticesIn, bool bClosed) Parameters Type Name Description IEnumerable < Vector3d > verticesIn Boolean bClosed | Improve this Doc View Source DCurve3(List<Vector3d>, Boolean, Boolean) Declaration public DCurve3(List<Vector3d> verticesIn, bool bClosed, bool bTakeOwnership = false) Parameters Type Name Description List < Vector3d > verticesIn Boolean bClosed Boolean bTakeOwnership Fields | Improve this Doc View Source Timestamp Declaration public int Timestamp Field Value Type Description Int32 | Improve this Doc View Source vertices Declaration protected List<Vector3d> vertices Field Value Type Description List < Vector3d > Properties | Improve this Doc View Source ArcLength Declaration public double ArcLength { get; } Property Value Type Description Double | Improve this Doc View Source Closed Declaration public bool Closed { get; set; } Property Value Type Description Boolean | Improve this Doc View Source End Declaration public Vector3d End { get; } Property Value Type Description Vector3d | Improve this Doc View Source Item[Int32] Declaration public Vector3d this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Vector3d | Improve this Doc View Source SegmentCount Declaration public int SegmentCount { get; } Property Value Type Description Int32 | Improve this Doc View Source Start Declaration public Vector3d Start { get; } Property Value Type Description Vector3d | Improve this Doc View Source VertexCount Declaration public int VertexCount { get; } Property Value Type Description Int32 | Improve this Doc View Source Vertices Declaration public IEnumerable<Vector3d> Vertices { get; } Property Value Type Description IEnumerable < Vector3d > Methods | Improve this Doc View Source AppendVertex(Vector3d) Declaration public void AppendVertex(Vector3d v) Parameters Type Name Description Vector3d v | Improve this Doc View Source Centroid(Int32) Declaration public Vector3d Centroid(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3d | Improve this Doc View Source ClearVertices() Declaration public void ClearVertices() | Improve this Doc View Source DistanceSquared(Vector3d) Declaration public double DistanceSquared(Vector3d p) Parameters Type Name Description Vector3d p Returns Type Description Double | Improve this Doc View Source DistanceSquared(Vector3d, out Int32, out Double) find squared distance from p to nearest segment on polyline Declaration public double DistanceSquared(Vector3d p, out int iNearSeg, out double fNearSegT) Parameters Type Name Description Vector3d p Int32 iNearSeg Double fNearSegT Returns Type Description Double | Improve this Doc View Source GetBoundingBox() Declaration public AxisAlignedBox3d GetBoundingBox() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source GetSegment(Int32) Declaration public Segment3d GetSegment(int iSegment) Parameters Type Name Description Int32 iSegment Returns Type Description Segment3d | Improve this Doc View Source GetVertex(Int32) Declaration public Vector3d GetVertex(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3d | Improve this Doc View Source NearestVertex(Vector3d) Find nearest vertex to point p Declaration public int NearestVertex(Vector3d p) Parameters Type Name Description Vector3d p Returns Type Description Int32 | Improve this Doc View Source Neighbours(Int32) Declaration public Index2i Neighbours(int i) Parameters Type Name Description Int32 i Returns Type Description Index2i | Improve this Doc View Source OpeningAngleDeg(Int32) Compute opening angle at vertex i in degrees Declaration public double OpeningAngleDeg(int i) Parameters Type Name Description Int32 i Returns Type Description Double | Improve this Doc View Source PointAt(Int32, Double) Declaration public Vector3d PointAt(int iSegment, double fSegT) Parameters Type Name Description Int32 iSegment Double fSegT Returns Type Description Vector3d | Improve this Doc View Source RemoveVertex(Int32) Declaration public void RemoveVertex(int idx) Parameters Type Name Description Int32 idx | Improve this Doc View Source ResampleSharpTurns(Double, Double, Double) Resample curve so that: if opening angle at vertex is > sharp_thresh, we emit two more vertices at +/- corner_t, where the t is used in prev/next lerps if opening angle is > flat_thresh, we skip the vertex entirely (simplification) This is mainly useful to get nicer polylines to use as the basis for (eg) creating 3D tubes, rendering, etc [TODO] skip tiny segments? Declaration public DCurve3 ResampleSharpTurns(double sharp_thresh = 90, double flat_thresh = 189, double corner_t = 0.01) Parameters Type Name Description Double sharp_thresh Double flat_thresh Double corner_t Returns Type Description DCurve3 | Improve this Doc View Source Reverse() Declaration public void Reverse() | Improve this Doc View Source SegmentItr() Declaration public IEnumerable<Segment3d> SegmentItr() Returns Type Description IEnumerable < Segment3d > | Improve this Doc View Source SetVertex(Int32, Vector3d) Declaration public void SetVertex(int i, Vector3d v) Parameters Type Name Description Int32 i Vector3d v | Improve this Doc View Source SetVertices(VectorArray3d) Declaration public void SetVertices(VectorArray3d v) Parameters Type Name Description VectorArray3d v | Improve this Doc View Source SetVertices(IEnumerable<Vector3d>) Declaration public void SetVertices(IEnumerable<Vector3d> v) Parameters Type Name Description IEnumerable < Vector3d > v | Improve this Doc View Source SetVertices(List<Vector3d>, Boolean) Declaration public void SetVertices(List<Vector3d> vertices, bool bTakeOwnership) Parameters Type Name Description List < Vector3d > vertices Boolean bTakeOwnership | Improve this Doc View Source Tangent(Int32) Declaration public Vector3d Tangent(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3d Implements ISampledCurve3d Extension Methods DcurveExtensions.Vector3(DCurve3, Vector3[], Boolean) DcurveExtensions.Center(DCurve3) DcurveExtensions.CenterMark(DCurve3) DcurveExtensions.NearestSegment(DCurve3, Vector3d)"
  },
  "api/g3.DCurve3BoxTree.html": {
    "href": "api/g3.DCurve3BoxTree.html",
    "title": "Class DCurve3BoxTree | ViRGIS VR GIS",
    "keywords": "Class DCurve3BoxTree tree of Oriented Boxes (OBB) for a DCurve3. Construction is sequential, ie pairs of segments are merged into boxes, then pairs of boxes, and so on [TODO] is this the best strategy? is there maybe some kind of sorting/sweepline algo? [TODO] would it make more sense to have more than just 2 segments at lowest level? Inheritance Object DCurve3BoxTree Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DCurve3BoxTree Constructors | Improve this Doc View Source DCurve3BoxTree(DCurve3) Declaration public DCurve3BoxTree(DCurve3 curve) Parameters Type Name Description DCurve3 curve Fields | Improve this Doc View Source Curve Declaration public DCurve3 Curve Field Value Type Description DCurve3 Methods | Improve this Doc View Source Distance(Vector3d) Declaration public double Distance(Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Double | Improve this Doc View Source DistanceSquared(Vector3d) Declaration public double DistanceSquared(Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Double | Improve this Doc View Source FindClosestRayIntersction(Ray3d, Double, out Int32, out Double) Find min-distance between ray and curve. Pass max_dist if you only care about a certain distance TODO: not 100% sure this is working properly... ? Declaration public bool FindClosestRayIntersction(Ray3d ray, double radius, out int hitSegment, out double fRayT) Parameters Type Name Description Ray3d ray Double radius Int32 hitSegment Double fRayT Returns Type Description Boolean | Improve this Doc View Source NearestPoint(Vector3d) Declaration public Vector3d NearestPoint(Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Vector3d | Improve this Doc View Source SquaredDistance(Ray3d, out Int32, out Double, out Double, Double) Find min-distance between ray and curve. Pass max_dist if you only care about a certain distance TODO: not 100% sure this is working properly... ? Declaration public double SquaredDistance(Ray3d ray, out int iNearSeg, out double fNearSegT, out double fRayT, double max_dist = 1.7976931348623157E+308) Parameters Type Name Description Ray3d ray Int32 iNearSeg Double fNearSegT Double fRayT Double max_dist Returns Type Description Double | Improve this Doc View Source SquaredDistance(Vector3d, out Int32, out Double, Double) Declaration public double SquaredDistance(Vector3d pt, out int iNearSeg, out double fNearSegT, double max_dist = 1.7976931348623157E+308) Parameters Type Name Description Vector3d pt Int32 iNearSeg Double fNearSegT Double max_dist Returns Type Description Double"
  },
  "api/g3.DCurveProjectionTarget.html": {
    "href": "api/g3.DCurveProjectionTarget.html",
    "title": "Class DCurveProjectionTarget | ViRGIS VR GIS",
    "keywords": "Class DCurveProjectionTarget Inheritance Object DCurveProjectionTarget Implements IProjectionTarget Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DCurveProjectionTarget : IProjectionTarget Constructors | Improve this Doc View Source DCurveProjectionTarget(DCurve3) Declaration public DCurveProjectionTarget(DCurve3 curve) Parameters Type Name Description DCurve3 curve Fields | Improve this Doc View Source Curve Declaration public DCurve3 Curve Field Value Type Description DCurve3 Methods | Improve this Doc View Source Project(Vector3d, Int32) Declaration public Vector3d Project(Vector3d vPoint, int identifier = -1) Parameters Type Name Description Vector3d vPoint Int32 identifier Returns Type Description Vector3d Implements IProjectionTarget"
  },
  "api/g3.DeepCopy.html": {
    "href": "api/g3.DeepCopy.html",
    "title": "Class DeepCopy | ViRGIS VR GIS",
    "keywords": "Class DeepCopy Collection of utility functions for one-line deep copies of lists Inheritance Object DeepCopy Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class DeepCopy Methods | Improve this Doc View Source Array<T>(IEnumerable<T>) Declaration public static T[] Array<T>(IEnumerable<T> Input) where T : IDuplicatable<T> Parameters Type Name Description IEnumerable <T> Input Returns Type Description T[] Type Parameters Name Description T | Improve this Doc View Source List<T>(IEnumerable<T>) Declaration public static List<T> List<T>(IEnumerable<T> Input) where T : IDuplicatable<T> Parameters Type Name Description IEnumerable <T> Input Returns Type Description List <T> Type Parameters Name Description T"
  },
  "api/g3.DenseGrid2f.html": {
    "href": "api/g3.DenseGrid2f.html",
    "title": "Class DenseGrid2f | ViRGIS VR GIS",
    "keywords": "Class DenseGrid2f 2D dense grid of floating-point scalar values. Inheritance Object DenseGrid2f Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DenseGrid2f Constructors | Improve this Doc View Source DenseGrid2f() Declaration public DenseGrid2f() | Improve this Doc View Source DenseGrid2f(DenseGrid2f) Declaration public DenseGrid2f(DenseGrid2f copy) Parameters Type Name Description DenseGrid2f copy | Improve this Doc View Source DenseGrid2f(Int32, Int32, Single) Declaration public DenseGrid2f(int ni, int nj, float initialValue) Parameters Type Name Description Int32 ni Int32 nj Single initialValue Fields | Improve this Doc View Source Buffer Declaration public float[] Buffer Field Value Type Description Single [] | Improve this Doc View Source ni Declaration public int ni Field Value Type Description Int32 | Improve this Doc View Source nj Declaration public int nj Field Value Type Description Int32 Properties | Improve this Doc View Source Bounds Declaration public AxisAlignedBox2i Bounds { get; } Property Value Type Description AxisAlignedBox2i | Improve this Doc View Source Item[Vector2i] Declaration public float this[Vector2i ijk] { get; set; } Parameters Type Name Description Vector2i ijk Property Value Type Description Single | Improve this Doc View Source Item[Int32] Declaration public float this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Single | Improve this Doc View Source Item[Int32, Int32] Declaration public float this[int i, int j] { get; set; } Parameters Type Name Description Int32 i Int32 j Property Value Type Description Single | Improve this Doc View Source size Declaration public int size { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source apply(Func<Single, Single>) Declaration public void apply(Func<float, float> f) Parameters Type Name Description Func < Single , Single > f | Improve this Doc View Source assign(Single) Declaration public void assign(float value) Parameters Type Name Description Single value | Improve this Doc View Source assign_border(Single, Int32) Declaration public void assign_border(float value, int rings) Parameters Type Name Description Single value Int32 rings | Improve this Doc View Source clear() Declaration public void clear() | Improve this Doc View Source copy(DenseGrid2f) Declaration public void copy(DenseGrid2f copy) Parameters Type Name Description DenseGrid2f copy | Improve this Doc View Source get_x_pair(Int32, Int32, out Double, out Double) Declaration public void get_x_pair(int i0, int j, out double a, out double b) Parameters Type Name Description Int32 i0 Int32 j Double a Double b | Improve this Doc View Source Indices() Declaration public IEnumerable<Vector2i> Indices() Returns Type Description IEnumerable < Vector2i > | Improve this Doc View Source InsetIndices(Int32) Declaration public IEnumerable<Vector2i> InsetIndices(int border_width) Parameters Type Name Description Int32 border_width Returns Type Description IEnumerable < Vector2i > | Improve this Doc View Source resize(Int32, Int32) Declaration public void resize(int ni, int nj) Parameters Type Name Description Int32 ni Int32 nj | Improve this Doc View Source set_max(DenseGrid2f) Declaration public void set_max(DenseGrid2f grid2) Parameters Type Name Description DenseGrid2f grid2 | Improve this Doc View Source set_min(DenseGrid2f) Declaration public void set_min(DenseGrid2f grid2) Parameters Type Name Description DenseGrid2f grid2 | Improve this Doc View Source swap(DenseGrid2f) Declaration public void swap(DenseGrid2f g2) Parameters Type Name Description DenseGrid2f g2"
  },
  "api/g3.DenseGrid2i.html": {
    "href": "api/g3.DenseGrid2i.html",
    "title": "Class DenseGrid2i | ViRGIS VR GIS",
    "keywords": "Class DenseGrid2i 2D dense grid of integers. Inheritance Object DenseGrid2i Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DenseGrid2i Constructors | Improve this Doc View Source DenseGrid2i() Declaration public DenseGrid2i() | Improve this Doc View Source DenseGrid2i(DenseGrid2i) Declaration public DenseGrid2i(DenseGrid2i copy) Parameters Type Name Description DenseGrid2i copy | Improve this Doc View Source DenseGrid2i(Int32, Int32, Int32) Declaration public DenseGrid2i(int ni, int nj, int initialValue) Parameters Type Name Description Int32 ni Int32 nj Int32 initialValue Fields | Improve this Doc View Source Buffer Declaration public int[] Buffer Field Value Type Description Int32 [] | Improve this Doc View Source ni Declaration public int ni Field Value Type Description Int32 | Improve this Doc View Source nj Declaration public int nj Field Value Type Description Int32 Properties | Improve this Doc View Source Item[Vector2i] Declaration public int this[Vector2i ijk] { get; set; } Parameters Type Name Description Vector2i ijk Property Value Type Description Int32 | Improve this Doc View Source Item[Int32] Declaration public int this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Int32 | Improve this Doc View Source Item[Int32, Int32] Declaration public int this[int i, int j] { get; set; } Parameters Type Name Description Int32 i Int32 j Property Value Type Description Int32 | Improve this Doc View Source size Declaration public int size { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source assign(Int32) Declaration public void assign(int value) Parameters Type Name Description Int32 value | Improve this Doc View Source atomic_decrement(Int32, Int32) Declaration public void atomic_decrement(int i, int j) Parameters Type Name Description Int32 i Int32 j | Improve this Doc View Source atomic_incdec(Int32, Int32, Boolean) Declaration public void atomic_incdec(int i, int j, bool decrement = false) Parameters Type Name Description Int32 i Int32 j Boolean decrement | Improve this Doc View Source atomic_increment(Int32, Int32) Declaration public void atomic_increment(int i, int j) Parameters Type Name Description Int32 i Int32 j | Improve this Doc View Source clear() Declaration public void clear() | Improve this Doc View Source copy(DenseGrid2i) Declaration public void copy(DenseGrid2i copy) Parameters Type Name Description DenseGrid2i copy | Improve this Doc View Source decrement(Int32, Int32) Declaration public void decrement(int i, int j) Parameters Type Name Description Int32 i Int32 j | Improve this Doc View Source increment(Int32, Int32) Declaration public void increment(int i, int j) Parameters Type Name Description Int32 i Int32 j | Improve this Doc View Source Indices() Declaration public IEnumerable<Vector2i> Indices() Returns Type Description IEnumerable < Vector2i > | Improve this Doc View Source InsetIndices(Int32) Declaration public IEnumerable<Vector2i> InsetIndices(int border_width) Parameters Type Name Description Int32 border_width Returns Type Description IEnumerable < Vector2i > | Improve this Doc View Source resize(Int32, Int32) Declaration public void resize(int ni, int nj) Parameters Type Name Description Int32 ni Int32 nj | Improve this Doc View Source sum() Declaration public int sum() Returns Type Description Int32"
  },
  "api/g3.DenseGrid3f.html": {
    "href": "api/g3.DenseGrid3f.html",
    "title": "Class DenseGrid3f | ViRGIS VR GIS",
    "keywords": "Class DenseGrid3f 3D dense grid of floating-point scalar values. Inheritance Object DenseGrid3f Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DenseGrid3f Constructors | Improve this Doc View Source DenseGrid3f() Declaration public DenseGrid3f() | Improve this Doc View Source DenseGrid3f(DenseGrid3f) Declaration public DenseGrid3f(DenseGrid3f copy) Parameters Type Name Description DenseGrid3f copy | Improve this Doc View Source DenseGrid3f(Int32, Int32, Int32, Single) Declaration public DenseGrid3f(int ni, int nj, int nk, float initialValue) Parameters Type Name Description Int32 ni Int32 nj Int32 nk Single initialValue Fields | Improve this Doc View Source Buffer Declaration public float[] Buffer Field Value Type Description Single [] | Improve this Doc View Source ni Declaration public int ni Field Value Type Description Int32 | Improve this Doc View Source nj Declaration public int nj Field Value Type Description Int32 | Improve this Doc View Source nk Declaration public int nk Field Value Type Description Int32 Properties | Improve this Doc View Source Bounds Declaration public AxisAlignedBox3i Bounds { get; } Property Value Type Description AxisAlignedBox3i | Improve this Doc View Source BoundsInclusive Declaration public AxisAlignedBox3i BoundsInclusive { get; } Property Value Type Description AxisAlignedBox3i | Improve this Doc View Source Item[Vector3i] Declaration public float this[Vector3i ijk] { get; set; } Parameters Type Name Description Vector3i ijk Property Value Type Description Single | Improve this Doc View Source Item[Int32] Declaration public float this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Single | Improve this Doc View Source Item[Int32, Int32, Int32] Declaration public float this[int i, int j, int k] { get; set; } Parameters Type Name Description Int32 i Int32 j Int32 k Property Value Type Description Single | Improve this Doc View Source size Declaration public int size { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source apply(Func<Single, Single>) Declaration public void apply(Func<float, float> f) Parameters Type Name Description Func < Single , Single > f | Improve this Doc View Source assign(Single) Declaration public void assign(float value) Parameters Type Name Description Single value | Improve this Doc View Source get_slice(Int32, Int32) Declaration public DenseGrid2f get_slice(int slice_i, int dimension) Parameters Type Name Description Int32 slice_i Int32 dimension Returns Type Description DenseGrid2f | Improve this Doc View Source get_x_pair(Int32, Int32, Int32, out Double, out Double) Declaration public void get_x_pair(int i0, int j, int k, out double a, out double b) Parameters Type Name Description Int32 i0 Int32 j Int32 k Double a Double b | Improve this Doc View Source get_x_pair(Int32, Int32, Int32, out Single, out Single) Declaration public void get_x_pair(int i0, int j, int k, out float a, out float b) Parameters Type Name Description Int32 i0 Int32 j Int32 k Single a Single b | Improve this Doc View Source Indices() Declaration public IEnumerable<Vector3i> Indices() Returns Type Description IEnumerable < Vector3i > | Improve this Doc View Source InsetIndices(Int32) Declaration public IEnumerable<Vector3i> InsetIndices(int border_width) Parameters Type Name Description Int32 border_width Returns Type Description IEnumerable < Vector3i > | Improve this Doc View Source resize(Int32, Int32, Int32) Declaration public void resize(int ni, int nj, int nk) Parameters Type Name Description Int32 ni Int32 nj Int32 nk | Improve this Doc View Source set_max(ref Vector3i, Single) Declaration public void set_max(ref Vector3i ijk, float f) Parameters Type Name Description Vector3i ijk Single f | Improve this Doc View Source set_min(ref Vector3i, Single) Declaration public void set_min(ref Vector3i ijk, float f) Parameters Type Name Description Vector3i ijk Single f | Improve this Doc View Source set_slice(DenseGrid2f, Int32, Int32) Declaration public void set_slice(DenseGrid2f slice, int slice_i, int dimension) Parameters Type Name Description DenseGrid2f slice Int32 slice_i Int32 dimension | Improve this Doc View Source swap(DenseGrid3f) Declaration public void swap(DenseGrid3f g2) Parameters Type Name Description DenseGrid3f g2 | Improve this Doc View Source to_index(Int32) Declaration public Vector3i to_index(int idx) Parameters Type Name Description Int32 idx Returns Type Description Vector3i | Improve this Doc View Source to_linear(Vector3i) Declaration public int to_linear(Vector3i ijk) Parameters Type Name Description Vector3i ijk Returns Type Description Int32 | Improve this Doc View Source to_linear(ref Vector3i) Declaration public int to_linear(ref Vector3i ijk) Parameters Type Name Description Vector3i ijk Returns Type Description Int32 | Improve this Doc View Source to_linear(Int32, Int32, Int32) Declaration public int to_linear(int i, int j, int k) Parameters Type Name Description Int32 i Int32 j Int32 k Returns Type Description Int32"
  },
  "api/g3.DenseGrid3i.html": {
    "href": "api/g3.DenseGrid3i.html",
    "title": "Class DenseGrid3i | ViRGIS VR GIS",
    "keywords": "Class DenseGrid3i 3D dense grid of integers. Inheritance Object DenseGrid3i Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DenseGrid3i Constructors | Improve this Doc View Source DenseGrid3i() Declaration public DenseGrid3i() | Improve this Doc View Source DenseGrid3i(Int32, Int32, Int32, Int32) Declaration public DenseGrid3i(int ni, int nj, int nk, int initialValue) Parameters Type Name Description Int32 ni Int32 nj Int32 nk Int32 initialValue Fields | Improve this Doc View Source Buffer Declaration public int[] Buffer Field Value Type Description Int32 [] | Improve this Doc View Source ni Declaration public int ni Field Value Type Description Int32 | Improve this Doc View Source nj Declaration public int nj Field Value Type Description Int32 | Improve this Doc View Source nk Declaration public int nk Field Value Type Description Int32 Properties | Improve this Doc View Source Item[Vector3i] Declaration public int this[Vector3i ijk] { get; set; } Parameters Type Name Description Vector3i ijk Property Value Type Description Int32 | Improve this Doc View Source Item[Int32] Declaration public int this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Int32 | Improve this Doc View Source Item[Int32, Int32, Int32] Declaration public int this[int i, int j, int k] { get; set; } Parameters Type Name Description Int32 i Int32 j Int32 k Property Value Type Description Int32 | Improve this Doc View Source size Declaration public int size { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source assign(Int32) Declaration public void assign(int value) Parameters Type Name Description Int32 value | Improve this Doc View Source atomic_decrement(Int32, Int32, Int32) Declaration public void atomic_decrement(int i, int j, int k) Parameters Type Name Description Int32 i Int32 j Int32 k | Improve this Doc View Source atomic_incdec(Int32, Int32, Int32, Boolean) Declaration public void atomic_incdec(int i, int j, int k, bool decrement = false) Parameters Type Name Description Int32 i Int32 j Int32 k Boolean decrement | Improve this Doc View Source atomic_increment(Int32, Int32, Int32) Declaration public void atomic_increment(int i, int j, int k) Parameters Type Name Description Int32 i Int32 j Int32 k | Improve this Doc View Source decrement(Int32, Int32, Int32) Declaration public void decrement(int i, int j, int k) Parameters Type Name Description Int32 i Int32 j Int32 k | Improve this Doc View Source get_bitmap(Int32) convert to binary bitmap Declaration public Bitmap3 get_bitmap(int thresh = 0) Parameters Type Name Description Int32 thresh Returns Type Description Bitmap3 | Improve this Doc View Source get_slice(Int32, Int32) Declaration public DenseGrid2i get_slice(int slice_i, int dimension) Parameters Type Name Description Int32 slice_i Int32 dimension Returns Type Description DenseGrid2i | Improve this Doc View Source increment(Int32, Int32, Int32) Declaration public void increment(int i, int j, int k) Parameters Type Name Description Int32 i Int32 j Int32 k | Improve this Doc View Source Indices() Declaration public IEnumerable<Vector3i> Indices() Returns Type Description IEnumerable < Vector3i > | Improve this Doc View Source InsetIndices(Int32) Declaration public IEnumerable<Vector3i> InsetIndices(int border_width) Parameters Type Name Description Int32 border_width Returns Type Description IEnumerable < Vector3i > | Improve this Doc View Source resize(Int32, Int32, Int32) Declaration public void resize(int ni, int nj, int nk) Parameters Type Name Description Int32 ni Int32 nj Int32 nk"
  },
  "api/g3.DenseGridTrilinearImplicit.html": {
    "href": "api/g3.DenseGridTrilinearImplicit.html",
    "title": "Class DenseGridTrilinearImplicit | ViRGIS VR GIS",
    "keywords": "Class DenseGridTrilinearImplicit Tri-linear interpolant for a 3D dense grid. Supports grid translation via GridOrigin, but does not support scaling or rotation. If you need those, you can wrap this in something that does the xform. Inheritance Object DenseGridTrilinearImplicit Implements BoundedImplicitFunction3d ImplicitFunction3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DenseGridTrilinearImplicit : BoundedImplicitFunction3d, ImplicitFunction3d Constructors | Improve this Doc View Source DenseGridTrilinearImplicit(DenseGrid3f, Vector3d, Double) Declaration public DenseGridTrilinearImplicit(DenseGrid3f grid, Vector3d gridOrigin, double cellSize) Parameters Type Name Description DenseGrid3f grid Vector3d gridOrigin Double cellSize | Improve this Doc View Source DenseGridTrilinearImplicit(MeshSignedDistanceGrid) Declaration public DenseGridTrilinearImplicit(MeshSignedDistanceGrid sdf_grid) Parameters Type Name Description MeshSignedDistanceGrid sdf_grid Fields | Improve this Doc View Source CellSize Declaration public double CellSize Field Value Type Description Double | Improve this Doc View Source Grid Declaration public DenseGrid3f Grid Field Value Type Description DenseGrid3f | Improve this Doc View Source GridOrigin Declaration public Vector3d GridOrigin Field Value Type Description Vector3d | Improve this Doc View Source Outside Declaration public double Outside Field Value Type Description Double Methods | Improve this Doc View Source Bounds() Declaration public AxisAlignedBox3d Bounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Gradient(ref Vector3d) Declaration public Vector3d Gradient(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Vector3d | Improve this Doc View Source Value(ref Vector3d) Declaration public double Value(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Double Implements BoundedImplicitFunction3d ImplicitFunction3d"
  },
  "api/g3.DenseMatrix.html": {
    "href": "api/g3.DenseMatrix.html",
    "title": "Class DenseMatrix | ViRGIS VR GIS",
    "keywords": "Class DenseMatrix Row-major dense matrix Inheritance Object DenseMatrix Implements IMatrix Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DenseMatrix : IMatrix Constructors | Improve this Doc View Source DenseMatrix(DenseMatrix) Declaration public DenseMatrix(DenseMatrix copy) Parameters Type Name Description DenseMatrix copy | Improve this Doc View Source DenseMatrix(Int32, Int32) Declaration public DenseMatrix(int Nrows, int Mcols) Parameters Type Name Description Int32 Nrows Int32 Mcols Properties | Improve this Doc View Source Buffer Declaration public double[] Buffer { get; } Property Value Type Description Double [] | Improve this Doc View Source Columns Declaration public int Columns { get; } Property Value Type Description Int32 | Improve this Doc View Source Item[Int32] Declaration public double this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Double | Improve this Doc View Source Item[Int32, Int32] Declaration public double this[int r, int c] { get; set; } Parameters Type Name Description Int32 r Int32 c Property Value Type Description Double | Improve this Doc View Source Length Declaration public int Length { get; } Property Value Type Description Int32 | Improve this Doc View Source Rows Declaration public int Rows { get; } Property Value Type Description Int32 | Improve this Doc View Source Size Declaration public Index2i Size { get; } Property Value Type Description Index2i Methods | Improve this Doc View Source Add(DenseMatrix) Declaration public void Add(DenseMatrix M2) Parameters Type Name Description DenseMatrix M2 | Improve this Doc View Source Add(IMatrix) Declaration public void Add(IMatrix M2) Parameters Type Name Description IMatrix M2 | Improve this Doc View Source Column(Int32) Declaration public DenseVector Column(int c) Parameters Type Name Description Int32 c Returns Type Description DenseVector | Improve this Doc View Source Diagonal() Declaration public DenseVector Diagonal() Returns Type Description DenseVector | Improve this Doc View Source EpsilonEquals(DenseMatrix, Double) Declaration public bool EpsilonEquals(DenseMatrix m2, double epsilon = 1E-08) Parameters Type Name Description DenseMatrix m2 Double epsilon Returns Type Description Boolean | Improve this Doc View Source IsPositiveDefinite() Declaration public bool IsPositiveDefinite() Returns Type Description Boolean | Improve this Doc View Source IsSymmetric(Double) Declaration public bool IsSymmetric(double dTolerance = 2.2204460492503131E-16) Parameters Type Name Description Double dTolerance Returns Type Description Boolean | Improve this Doc View Source MulAdd(DenseMatrix, Double) Declaration public void MulAdd(DenseMatrix M2, double s) Parameters Type Name Description DenseMatrix M2 Double s | Improve this Doc View Source MulAdd(IMatrix, Double) Declaration public void MulAdd(IMatrix M2, double s) Parameters Type Name Description IMatrix M2 Double s | Improve this Doc View Source Multiply(DenseMatrix, ref DenseMatrix, Boolean) Declaration public void Multiply(DenseMatrix M2, ref DenseMatrix R, bool bParallel = true) Parameters Type Name Description DenseMatrix M2 DenseMatrix R Boolean bParallel | Improve this Doc View Source Multiply(DenseMatrix, Boolean) Declaration public DenseMatrix Multiply(DenseMatrix M2, bool bParallel = true) Parameters Type Name Description DenseMatrix M2 Boolean bParallel Returns Type Description DenseMatrix | Improve this Doc View Source Multiply(DenseVector) Declaration public DenseVector Multiply(DenseVector X) Parameters Type Name Description DenseVector X Returns Type Description DenseVector | Improve this Doc View Source Multiply(DenseVector, DenseVector) Declaration public void Multiply(DenseVector X, DenseVector R) Parameters Type Name Description DenseVector X DenseVector R | Improve this Doc View Source Multiply(Double[], Double[]) Declaration public void Multiply(double[] X, double[] Result) Parameters Type Name Description Double [] X Double [] Result | Improve this Doc View Source Row(Int32) Declaration public DenseVector Row(int r) Parameters Type Name Description Int32 r Returns Type Description DenseVector | Improve this Doc View Source Set(Double[]) Declaration public void Set(double[] values) Parameters Type Name Description Double [] values | Improve this Doc View Source Set(Int32, Int32, Double) Declaration public void Set(int r, int c, double value) Parameters Type Name Description Int32 r Int32 c Double value | Improve this Doc View Source Transpose() Declaration public DenseMatrix Transpose() Returns Type Description DenseMatrix | Improve this Doc View Source TransposeInPlace() Declaration public void TransposeInPlace() Implements IMatrix"
  },
  "api/g3.DenseUVMesh.html": {
    "href": "api/g3.DenseUVMesh.html",
    "title": "Class DenseUVMesh | ViRGIS VR GIS",
    "keywords": "Class DenseUVMesh Inheritance Object DenseUVMesh Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DenseUVMesh Constructors | Improve this Doc View Source DenseUVMesh() Declaration public DenseUVMesh() Fields | Improve this Doc View Source TriangleUVs Declaration public DVector<Index3i> TriangleUVs Field Value Type Description DVector < Index3i > | Improve this Doc View Source UVs Declaration public DVector<Vector2f> UVs Field Value Type Description DVector < Vector2f > Methods | Improve this Doc View Source AppendUV(Vector2f) Declaration public int AppendUV(Vector2f uv) Parameters Type Name Description Vector2f uv Returns Type Description Int32"
  },
  "api/g3.DenseVector.html": {
    "href": "api/g3.DenseVector.html",
    "title": "Class DenseVector | ViRGIS VR GIS",
    "keywords": "Class DenseVector Inheritance Object DenseVector Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DenseVector Constructors | Improve this Doc View Source DenseVector(Int32) Declaration public DenseVector(int N) Parameters Type Name Description Int32 N Properties | Improve this Doc View Source Buffer Declaration public double[] Buffer { get; } Property Value Type Description Double [] | Improve this Doc View Source Item[Int32] Declaration public double this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Double | Improve this Doc View Source Length Declaration public int Length { get; } Property Value Type Description Int32 | Improve this Doc View Source Size Declaration public int Size { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Dot(DenseVector) Declaration public double Dot(DenseVector v2) Parameters Type Name Description DenseVector v2 Returns Type Description Double | Improve this Doc View Source Dot(Double[]) Declaration public double Dot(double[] v2) Parameters Type Name Description Double [] v2 Returns Type Description Double | Improve this Doc View Source Set(Int32, Double) Declaration public void Set(int i, double value) Parameters Type Name Description Int32 i Double value"
  },
  "api/g3.DGraph.EdgeCollapseInfo.html": {
    "href": "api/g3.DGraph.EdgeCollapseInfo.html",
    "title": "Struct DGraph.EdgeCollapseInfo | ViRGIS VR GIS",
    "keywords": "Struct DGraph.EdgeCollapseInfo Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct EdgeCollapseInfo Fields | Improve this Doc View Source eCollapsed Declaration public int eCollapsed Field Value Type Description Int32 | Improve this Doc View Source vKept Declaration public int vKept Field Value Type Description Int32 | Improve this Doc View Source vRemoved Declaration public int vRemoved Field Value Type Description Int32"
  },
  "api/g3.DGraph.EdgeSplitInfo.html": {
    "href": "api/g3.DGraph.EdgeSplitInfo.html",
    "title": "Struct DGraph.EdgeSplitInfo | ViRGIS VR GIS",
    "keywords": "Struct DGraph.EdgeSplitInfo Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct EdgeSplitInfo Fields | Improve this Doc View Source eNewBN Declaration public int eNewBN Field Value Type Description Int32 | Improve this Doc View Source vNew Declaration public int vNew Field Value Type Description Int32"
  },
  "api/g3.DGraph.FailMode.html": {
    "href": "api/g3.DGraph.FailMode.html",
    "title": "Enum DGraph.FailMode | ViRGIS VR GIS",
    "keywords": "Enum DGraph.FailMode Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum FailMode Fields Name Description DebugAssert gDevAssert ReturnOnly Throw"
  },
  "api/g3.DGraph.html": {
    "href": "api/g3.DGraph.html",
    "title": "Class DGraph | ViRGIS VR GIS",
    "keywords": "Class DGraph Base class for Arbitrary-Topology Graphs. Similar structure to topology parts of DMesh3. Each vertex can be connected to an arbitrary number of edges. Each edge can have an integer GroupID. See DGraph2 and DGraph3 for 3d implementations. Use DGraphN if you would like a topology-only graph. You cannot instantiate DGraph directly. Inheritance Object DGraph DGraph2 DGraph3 DGraphN Namespace : g3 Assembly : geometry3Sharp.dll Syntax public abstract class DGraph Constructors | Improve this Doc View Source DGraph() Declaration public DGraph() Fields | Improve this Doc View Source DuplicateEdgeID Declaration public const int DuplicateEdgeID = -2 Field Value Type Description Int32 | Improve this Doc View Source edges Declaration protected DVector<int> edges Field Value Type Description DVector < Int32 > | Improve this Doc View Source edges_refcount Declaration protected RefCountVector edges_refcount Field Value Type Description RefCountVector | Improve this Doc View Source InvalidEdge3 Declaration public static readonly Index3i InvalidEdge3 Field Value Type Description Index3i | Improve this Doc View Source InvalidEdgeV Declaration public static readonly Index2i InvalidEdgeV Field Value Type Description Index2i | Improve this Doc View Source InvalidID Declaration public const int InvalidID = -1 Field Value Type Description Int32 | Improve this Doc View Source max_group_id Declaration protected int max_group_id Field Value Type Description Int32 | Improve this Doc View Source shape_timestamp Declaration protected int shape_timestamp Field Value Type Description Int32 | Improve this Doc View Source timestamp Declaration protected int timestamp Field Value Type Description Int32 | Improve this Doc View Source vertex_edges Declaration protected DVector<List<int>> vertex_edges Field Value Type Description DVector < List < Int32 >> | Improve this Doc View Source vertices_refcount Declaration protected RefCountVector vertices_refcount Field Value Type Description RefCountVector Properties | Improve this Doc View Source EdgeCount Declaration public int EdgeCount { get; } Property Value Type Description Int32 | Improve this Doc View Source IsCompact Declaration public bool IsCompact { get; } Property Value Type Description Boolean | Improve this Doc View Source IsCompactV Declaration public bool IsCompactV { get; } Property Value Type Description Boolean | Improve this Doc View Source MaxEdgeID Declaration public int MaxEdgeID { get; } Property Value Type Description Int32 | Improve this Doc View Source MaxGroupID Declaration public int MaxGroupID { get; } Property Value Type Description Int32 | Improve this Doc View Source MaxVertexID Declaration public int MaxVertexID { get; } Property Value Type Description Int32 | Improve this Doc View Source ShapeTimestamp Declaration public int ShapeTimestamp { get; } Property Value Type Description Int32 | Improve this Doc View Source Timestamp Declaration public int Timestamp { get; } Property Value Type Description Int32 | Improve this Doc View Source VertexCount Declaration public int VertexCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source add_edge(Int32, Int32, Int32) Declaration protected int add_edge(int a, int b, int gid) Parameters Type Name Description Int32 a Int32 b Int32 gid Returns Type Description Int32 | Improve this Doc View Source AllocateEdgeGroup() Declaration public int AllocateEdgeGroup() Returns Type Description Int32 | Improve this Doc View Source append_new_split_vertex(Int32, Int32) Declaration protected virtual int append_new_split_vertex(int a, int b) Parameters Type Name Description Int32 a Int32 b Returns Type Description Int32 | Improve this Doc View Source append_vertex_internal() Declaration protected int append_vertex_internal() Returns Type Description Int32 | Improve this Doc View Source AppendEdge(Index2i, Int32) Declaration public int AppendEdge(Index2i ev, int gid = -1) Parameters Type Name Description Index2i ev Int32 gid Returns Type Description Int32 | Improve this Doc View Source AppendEdge(Int32, Int32, Int32) Declaration public int AppendEdge(int v0, int v1, int gid = -1) Parameters Type Name Description Int32 v0 Int32 v1 Int32 gid Returns Type Description Int32 | Improve this Doc View Source CheckValidity(DGraph.FailMode) Declaration public virtual bool CheckValidity(DGraph.FailMode eFailMode = DGraph.FailMode.Throw) Parameters Type Name Description DGraph.FailMode eFailMode Returns Type Description Boolean | Improve this Doc View Source CollapseEdge(Int32, Int32, out DGraph.EdgeCollapseInfo) Declaration public MeshResult CollapseEdge(int vKeep, int vRemove, out DGraph.EdgeCollapseInfo collapse) Parameters Type Name Description Int32 vKeep Int32 vRemove DGraph.EdgeCollapseInfo collapse Returns Type Description MeshResult | Improve this Doc View Source debug_check_is_edge(Int32) Declaration [Conditional(\"DEBUG\")] public void debug_check_is_edge(int e) Parameters Type Name Description Int32 e | Improve this Doc View Source debug_check_is_vertex(Int32) Declaration [Conditional(\"DEBUG\")] public void debug_check_is_vertex(int v) Parameters Type Name Description Int32 v | Improve this Doc View Source edge_has_v(Int32, Int32) Declaration protected bool edge_has_v(int eid, int vid) Parameters Type Name Description Int32 eid Int32 vid Returns Type Description Boolean | Improve this Doc View Source edge_other_v(Int32, Int32) Declaration protected int edge_other_v(int eID, int vID) Parameters Type Name Description Int32 eID Int32 vID Returns Type Description Int32 | Improve this Doc View Source EdgeIndices() Declaration public IEnumerable<int> EdgeIndices() Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source Edges() Declaration public IEnumerable<Index3i> Edges() Returns Type Description IEnumerable < Index3i > | Improve this Doc View Source FindEdge(Int32, Int32) Declaration public int FindEdge(int vA, int vB) Parameters Type Name Description Int32 vA Int32 vB Returns Type Description Int32 | Improve this Doc View Source GetEdge(Int32) Declaration public Index3i GetEdge(int eID) Parameters Type Name Description Int32 eID Returns Type Description Index3i | Improve this Doc View Source GetEdgeGroup(Int32) Declaration public int GetEdgeGroup(int eid) Parameters Type Name Description Int32 eid Returns Type Description Int32 | Improve this Doc View Source GetEdgeV(Int32) Declaration public Index2i GetEdgeV(int eID) Parameters Type Name Description Int32 eID Returns Type Description Index2i | Improve this Doc View Source GetMaxVtxEdgeCount() Declaration public int GetMaxVtxEdgeCount() Returns Type Description Int32 | Improve this Doc View Source GetVtxEdgeCount(Int32) Declaration public int GetVtxEdgeCount(int vID) Parameters Type Name Description Int32 vID Returns Type Description Int32 | Improve this Doc View Source GetVtxEdges(Int32) Declaration public ReadOnlyCollection<int> GetVtxEdges(int vID) Parameters Type Name Description Int32 vID Returns Type Description ReadOnlyCollection < Int32 > | Improve this Doc View Source IsBoundaryVertex(Int32) Declaration public bool IsBoundaryVertex(int vID) Parameters Type Name Description Int32 vID Returns Type Description Boolean | Improve this Doc View Source IsEdge(Int32) Declaration public bool IsEdge(int eID) Parameters Type Name Description Int32 eID Returns Type Description Boolean | Improve this Doc View Source IsJunctionVertex(Int32) Declaration public bool IsJunctionVertex(int vID) Parameters Type Name Description Int32 vID Returns Type Description Boolean | Improve this Doc View Source IsRegularVertex(Int32) Declaration public bool IsRegularVertex(int vID) Parameters Type Name Description Int32 vID Returns Type Description Boolean | Improve this Doc View Source IsVertex(Int32) Declaration public bool IsVertex(int vID) Parameters Type Name Description Int32 vID Returns Type Description Boolean | Improve this Doc View Source RemoveEdge(Int32, Boolean) Declaration public MeshResult RemoveEdge(int eID, bool bRemoveIsolatedVertices) Parameters Type Name Description Int32 eID Boolean bRemoveIsolatedVertices Returns Type Description MeshResult | Improve this Doc View Source RemoveVertex(Int32, Boolean) Declaration public MeshResult RemoveVertex(int vid, bool bRemoveIsolatedVertices) Parameters Type Name Description Int32 vid Boolean bRemoveIsolatedVertices Returns Type Description MeshResult | Improve this Doc View Source replace_edge_vertex(Int32, Int32, Int32) Declaration protected int replace_edge_vertex(int eID, int vOld, int vNew) Parameters Type Name Description Int32 eID Int32 vOld Int32 vNew Returns Type Description Int32 | Improve this Doc View Source SetEdgeGroup(Int32, Int32) Declaration public void SetEdgeGroup(int eid, int group_id) Parameters Type Name Description Int32 eid Int32 group_id | Improve this Doc View Source SplitEdge(Int32, out DGraph.EdgeSplitInfo) Declaration public MeshResult SplitEdge(int eab, out DGraph.EdgeSplitInfo split) Parameters Type Name Description Int32 eab DGraph.EdgeSplitInfo split Returns Type Description MeshResult | Improve this Doc View Source SplitEdge(Int32, Int32, out DGraph.EdgeSplitInfo) Declaration public MeshResult SplitEdge(int vA, int vB, out DGraph.EdgeSplitInfo split) Parameters Type Name Description Int32 vA Int32 vB DGraph.EdgeSplitInfo split Returns Type Description MeshResult | Improve this Doc View Source subclass_validity_checks(Action<Boolean>) Declaration protected virtual void subclass_validity_checks(Action<bool> CheckOrFailF) Parameters Type Name Description Action < Boolean > CheckOrFailF | Improve this Doc View Source updateTimeStamp(Boolean) Declaration protected void updateTimeStamp(bool bShapeChange) Parameters Type Name Description Boolean bShapeChange | Improve this Doc View Source VertexIndices() Declaration public IEnumerable<int> VertexIndices() Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source VtxEdgesItr(Int32) Declaration public IEnumerable<int> VtxEdgesItr(int vID) Parameters Type Name Description Int32 vID Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source VtxVerticesItr(Int32) Declaration public IEnumerable<int> VtxVerticesItr(int vID) Parameters Type Name Description Int32 vID Returns Type Description IEnumerable < Int32 >"
  },
  "api/g3.DGraph2.html": {
    "href": "api/g3.DGraph2.html",
    "title": "Class DGraph2 | ViRGIS VR GIS",
    "keywords": "Class DGraph2 Arbitrary-Topology 2D Graph. This is similar to DMesh3 but without faces. Each vertex can be connected to an arbitrary number of edges. Each vertex can have a 3-float color, and edge edge can have an integer GroupID Inheritance Object DGraph DGraph2 Inherited Members DGraph.InvalidID DGraph.DuplicateEdgeID DGraph.InvalidEdgeV DGraph.InvalidEdge3 DGraph.vertices_refcount DGraph.vertex_edges DGraph.edges_refcount DGraph.edges DGraph.timestamp DGraph.shape_timestamp DGraph.max_group_id DGraph.updateTimeStamp(Boolean) DGraph.Timestamp DGraph.ShapeTimestamp DGraph.VertexCount DGraph.EdgeCount DGraph.MaxVertexID DGraph.MaxEdgeID DGraph.MaxGroupID DGraph.IsVertex(Int32) DGraph.IsEdge(Int32) DGraph.GetVtxEdges(Int32) DGraph.GetVtxEdgeCount(Int32) DGraph.GetMaxVtxEdgeCount() DGraph.GetEdgeGroup(Int32) DGraph.SetEdgeGroup(Int32, Int32) DGraph.AllocateEdgeGroup() DGraph.GetEdgeV(Int32) DGraph.GetEdge(Int32) DGraph.append_vertex_internal() DGraph.AppendEdge(Int32, Int32, Int32) DGraph.AppendEdge(Index2i, Int32) DGraph.add_edge(Int32, Int32, Int32) DGraph.VertexIndices() DGraph.EdgeIndices() DGraph.Edges() DGraph.VtxVerticesItr(Int32) DGraph.VtxEdgesItr(Int32) DGraph.FindEdge(Int32, Int32) DGraph.RemoveEdge(Int32, Boolean) DGraph.RemoveVertex(Int32, Boolean) DGraph.SplitEdge(Int32, Int32, DGraph.EdgeSplitInfo) DGraph.SplitEdge(Int32, DGraph.EdgeSplitInfo) DGraph.CollapseEdge(Int32, Int32, DGraph.EdgeCollapseInfo) DGraph.edge_has_v(Int32, Int32) DGraph.edge_other_v(Int32, Int32) DGraph.replace_edge_vertex(Int32, Int32, Int32) DGraph.IsCompact DGraph.IsCompactV DGraph.IsBoundaryVertex(Int32) DGraph.IsJunctionVertex(Int32) DGraph.IsRegularVertex(Int32) DGraph.CheckValidity(DGraph.FailMode) DGraph.debug_check_is_vertex(Int32) DGraph.debug_check_is_edge(Int32) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DGraph2 : DGraph Constructors | Improve this Doc View Source DGraph2() Declaration public DGraph2() | Improve this Doc View Source DGraph2(DGraph2) Declaration public DGraph2(DGraph2 copy) Parameters Type Name Description DGraph2 copy Fields | Improve this Doc View Source InvalidVertex Declaration public static readonly Vector2d InvalidVertex Field Value Type Description Vector2d Properties | Improve this Doc View Source CachedBounds Declaration public AxisAlignedBox2d CachedBounds { get; } Property Value Type Description AxisAlignedBox2d | Improve this Doc View Source HasVertexColors Declaration public bool HasVertexColors { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source append_new_split_vertex(Int32, Int32) Declaration protected override int append_new_split_vertex(int a, int b) Parameters Type Name Description Int32 a Int32 b Returns Type Description Int32 Overrides DGraph.append_new_split_vertex(Int32, Int32) | Improve this Doc View Source AppendGraph(DGraph2, Int32) Declaration public void AppendGraph(DGraph2 graph, int gid = -1) Parameters Type Name Description DGraph2 graph Int32 gid | Improve this Doc View Source AppendPolygon(GeneralPolygon2d, Int32) Declaration public void AppendPolygon(GeneralPolygon2d poly, int gid = -1) Parameters Type Name Description GeneralPolygon2d poly Int32 gid | Improve this Doc View Source AppendPolygon(Polygon2d, Int32) Declaration public void AppendPolygon(Polygon2d poly, int gid = -1) Parameters Type Name Description Polygon2d poly Int32 gid | Improve this Doc View Source AppendPolyline(PolyLine2d, Int32) Declaration public void AppendPolyline(PolyLine2d poly, int gid = -1) Parameters Type Name Description PolyLine2d poly Int32 gid | Improve this Doc View Source AppendVertex(Vector2d) Declaration public int AppendVertex(Vector2d v) Parameters Type Name Description Vector2d v Returns Type Description Int32 | Improve this Doc View Source AppendVertex(Vector2d, Vector3f) Declaration public int AppendVertex(Vector2d v, Vector3f c) Parameters Type Name Description Vector2d v Vector3f c Returns Type Description Int32 | Improve this Doc View Source DiscardVertexColors() Declaration public void DiscardVertexColors() | Improve this Doc View Source EnableVertexColors(Vector3f) Declaration public void EnableVertexColors(Vector3f initial_color) Parameters Type Name Description Vector3f initial_color | Improve this Doc View Source GetBounds() Declaration public AxisAlignedBox2d GetBounds() Returns Type Description AxisAlignedBox2d | Improve this Doc View Source GetEdgeCenter(Int32) Declaration public Vector2d GetEdgeCenter(int eID) Parameters Type Name Description Int32 eID Returns Type Description Vector2d | Improve this Doc View Source GetEdgeSegment(Int32) Declaration public Segment2d GetEdgeSegment(int eID) Parameters Type Name Description Int32 eID Returns Type Description Segment2d | Improve this Doc View Source GetEdgeV(Int32, ref Vector2d, ref Vector2d) Declaration public bool GetEdgeV(int eID, ref Vector2d a, ref Vector2d b) Parameters Type Name Description Int32 eID Vector2d a Vector2d b Returns Type Description Boolean | Improve this Doc View Source GetVertex(Int32) Declaration public Vector2d GetVertex(int vID) Parameters Type Name Description Int32 vID Returns Type Description Vector2d | Improve this Doc View Source GetVertexColor(Int32) Declaration public Vector3f GetVertexColor(int vID) Parameters Type Name Description Int32 vID Returns Type Description Vector3f | Improve this Doc View Source OpeningAngle(Int32, Double) Compute opening angle at vertex vID. If not a vertex, or valence != 2, returns invalidValue argument. If either edge is degenerate, returns invalidValue argument. Declaration public double OpeningAngle(int vID, double invalidValue = 1.7976931348623157E+308) Parameters Type Name Description Int32 vID Double invalidValue Returns Type Description Double | Improve this Doc View Source SetVertex(Int32, Vector2d) Declaration public void SetVertex(int vID, Vector2d vNewPos) Parameters Type Name Description Int32 vID Vector2d vNewPos | Improve this Doc View Source SetVertexColor(Int32, Vector3f) Declaration public void SetVertexColor(int vID, Vector3f vNewColor) Parameters Type Name Description Int32 vID Vector3f vNewColor | Improve this Doc View Source SortedVtxEdges(Int32) return edges around vID sorted by angle, in clockwise order Declaration public int[] SortedVtxEdges(int vID) Parameters Type Name Description Int32 vID Returns Type Description Int32 [] | Improve this Doc View Source subclass_validity_checks(Action<Boolean>) Declaration protected override void subclass_validity_checks(Action<bool> CheckOrFailF) Parameters Type Name Description Action < Boolean > CheckOrFailF Overrides DGraph.subclass_validity_checks(Action<Boolean>) | Improve this Doc View Source Vertices() Declaration public IEnumerable<Vector2d> Vertices() Returns Type Description IEnumerable < Vector2d >"
  },
  "api/g3.DGraph2Resampler.html": {
    "href": "api/g3.DGraph2Resampler.html",
    "title": "Class DGraph2Resampler | ViRGIS VR GIS",
    "keywords": "Class DGraph2Resampler \"Remesher\" for DGraph2 Inheritance Object DGraph2Resampler Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DGraph2Resampler Constructors | Improve this Doc View Source DGraph2Resampler(DGraph2) Declaration public DGraph2Resampler(DGraph2 graph) Parameters Type Name Description DGraph2 graph Fields | Improve this Doc View Source FixedEdgeFilterF Declaration public Func<int, bool> FixedEdgeFilterF Field Value Type Description Func < Int32 , Boolean > | Improve this Doc View Source Graph Declaration public DGraph2 Graph Field Value Type Description DGraph2 Methods | Improve this Doc View Source CollapseDegenerateEdges(Double) Declaration public void CollapseDegenerateEdges(double fDegenLenThresh = 1.1920928955078125E-07) Parameters Type Name Description Double fDegenLenThresh | Improve this Doc View Source CollapseFlatVertices(Double) Remove vertices that are colinear w/ their two neighbours, within angle tolerance Declaration public void CollapseFlatVertices(double fMaxDeviationDeg = 5) Parameters Type Name Description Double fMaxDeviationDeg | Improve this Doc View Source CollapseToMinEdgeLength(Double) Declaration public void CollapseToMinEdgeLength(double fMinLen) Parameters Type Name Description Double fMinLen | Improve this Doc View Source SplitToMaxEdgeLength(Double) Declaration public void SplitToMaxEdgeLength(double fMaxLen) Parameters Type Name Description Double fMaxLen"
  },
  "api/g3.DGraph2Util.Curves.html": {
    "href": "api/g3.DGraph2Util.Curves.html",
    "title": "Class DGraph2Util.Curves | ViRGIS VR GIS",
    "keywords": "Class DGraph2Util.Curves Inheritance Object DGraph2Util.Curves Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class Curves Fields | Improve this Doc View Source Loops Declaration public List<Polygon2d> Loops Field Value Type Description List < Polygon2d > | Improve this Doc View Source Paths Declaration public List<PolyLine2d> Paths Field Value Type Description List < PolyLine2d >"
  },
  "api/g3.DGraph2Util.html": {
    "href": "api/g3.DGraph2Util.html",
    "title": "Class DGraph2Util | ViRGIS VR GIS",
    "keywords": "Class DGraph2Util Utility functions for DGraph2 data structure Inheritance Object DGraph2Util Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class DGraph2Util Methods | Improve this Doc View Source ChainOpenPaths(DGraph2Util.Curves, Double) merge members of c.Paths that have unique endpoint pairings. Does not extract closed loops that contain junction vertices, unless the 'other' end of those junctions is dangling. Also, horribly innefficient! Declaration public static void ChainOpenPaths(DGraph2Util.Curves c, double epsilon = 2.2204460492503131E-16) Parameters Type Name Description DGraph2Util.Curves c Double epsilon | Improve this Doc View Source DisconnectJunction(DGraph2, Int32, Double) foreach edge [vid,b] connected to junction vertex vid, remove, add new vertex c, and then add new edge [b,c]. Optionally move c a bit back along edge from vid. Declaration public static void DisconnectJunction(DGraph2 graph, int vid, double shrinkFactor = 1) Parameters Type Name Description DGraph2 graph Int32 vid Double shrinkFactor | Improve this Doc View Source DisconnectJunctions(DGraph2) Find and remove any junction (ie valence>2) vertices of the graph. At a junction, the pair of best-aligned (ie straightest) edges are left connected, and all the other edges are disconnected [TODO] currently there is no DGraph2.SetEdge(), so the 'other' edges are deleted and new edges inserted. Hence, edge IDs are not preserved. Declaration public static int DisconnectJunctions(DGraph2 graph) Parameters Type Name Description DGraph2 graph Returns Type Description Int32 | Improve this Doc View Source ExtractCurves(DGraph2) Decompose graph into simple polylines and polygons. Declaration public static DGraph2Util.Curves ExtractCurves(DGraph2 graph) Parameters Type Name Description DGraph2 graph Returns Type Description DGraph2Util.Curves | Improve this Doc View Source FindRayIntersection(Vector2d, Vector2d, out Int32, out Double, DGraph2) Declaration public static bool FindRayIntersection(Vector2d o, Vector2d d, out int hit_eid, out double hit_ray_t, DGraph2 graph) Parameters Type Name Description Vector2d o Vector2d d Int32 hit_eid Double hit_ray_t DGraph2 graph Returns Type Description Boolean | Improve this Doc View Source NextEdgeAndVtx(Int32, Int32, DGraph2) If we are at edge eid, which as one vertex prev_vid, find 'other' vertex, and other edge connected to that vertex, and return pair [next_edge, shared_vtx] Returns [int.MaxValue, shared_vtx] if shared_vtx is not valence=2 (ie stops at boundaries and complex junctions) Declaration public static Index2i NextEdgeAndVtx(int eid, int prev_vid, DGraph2 graph) Parameters Type Name Description Int32 eid Int32 prev_vid DGraph2 graph Returns Type Description Index2i | Improve this Doc View Source PathLength(DGraph2, IList<Int32>) compute length of path through graph Declaration public static double PathLength(DGraph2 graph, IList<int> pathVertices) Parameters Type Name Description DGraph2 graph IList < Int32 > pathVertices Returns Type Description Double | Improve this Doc View Source VertexLaplacian(DGraph2, Int32, out Boolean) If vid has two or more neighbours, returns uniform laplacian, otherwise returns vid position Declaration public static Vector2d VertexLaplacian(DGraph2 graph, int vid, out bool isValid) Parameters Type Name Description DGraph2 graph Int32 vid Boolean isValid Returns Type Description Vector2d | Improve this Doc View Source WalkToNextNonRegularVtx(DGraph2, Int32, Int32) walk through graph from fromVtx, in direction of eid, until we hit the next junction vertex Declaration public static List<int> WalkToNextNonRegularVtx(DGraph2 graph, int fromVtx, int eid) Parameters Type Name Description DGraph2 graph Int32 fromVtx Int32 eid Returns Type Description List < Int32 >"
  },
  "api/g3.DGraph3.html": {
    "href": "api/g3.DGraph3.html",
    "title": "Class DGraph3 | ViRGIS VR GIS",
    "keywords": "Class DGraph3 Arbitrary-Topology 3D Graph. This is similar to DMesh3 but without faces. Each vertex can be connected to an arbitrary number of edges. Each vertex can have a 3-float color, and edge edge can have an integer GroupID Inheritance Object DGraph DGraph3 Inherited Members DGraph.InvalidID DGraph.DuplicateEdgeID DGraph.InvalidEdgeV DGraph.InvalidEdge3 DGraph.vertices_refcount DGraph.vertex_edges DGraph.edges_refcount DGraph.edges DGraph.timestamp DGraph.shape_timestamp DGraph.max_group_id DGraph.updateTimeStamp(Boolean) DGraph.Timestamp DGraph.ShapeTimestamp DGraph.VertexCount DGraph.EdgeCount DGraph.MaxVertexID DGraph.MaxEdgeID DGraph.MaxGroupID DGraph.IsVertex(Int32) DGraph.IsEdge(Int32) DGraph.GetVtxEdges(Int32) DGraph.GetVtxEdgeCount(Int32) DGraph.GetMaxVtxEdgeCount() DGraph.GetEdgeGroup(Int32) DGraph.SetEdgeGroup(Int32, Int32) DGraph.AllocateEdgeGroup() DGraph.GetEdgeV(Int32) DGraph.GetEdge(Int32) DGraph.append_vertex_internal() DGraph.AppendEdge(Int32, Int32, Int32) DGraph.AppendEdge(Index2i, Int32) DGraph.add_edge(Int32, Int32, Int32) DGraph.VertexIndices() DGraph.EdgeIndices() DGraph.Edges() DGraph.VtxVerticesItr(Int32) DGraph.VtxEdgesItr(Int32) DGraph.FindEdge(Int32, Int32) DGraph.RemoveEdge(Int32, Boolean) DGraph.RemoveVertex(Int32, Boolean) DGraph.SplitEdge(Int32, Int32, DGraph.EdgeSplitInfo) DGraph.SplitEdge(Int32, DGraph.EdgeSplitInfo) DGraph.CollapseEdge(Int32, Int32, DGraph.EdgeCollapseInfo) DGraph.edge_has_v(Int32, Int32) DGraph.edge_other_v(Int32, Int32) DGraph.replace_edge_vertex(Int32, Int32, Int32) DGraph.IsCompact DGraph.IsCompactV DGraph.IsBoundaryVertex(Int32) DGraph.IsJunctionVertex(Int32) DGraph.IsRegularVertex(Int32) DGraph.CheckValidity(DGraph.FailMode) DGraph.debug_check_is_vertex(Int32) DGraph.debug_check_is_edge(Int32) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DGraph3 : DGraph Constructors | Improve this Doc View Source DGraph3() Declaration public DGraph3() | Improve this Doc View Source DGraph3(DGraph3) Declaration public DGraph3(DGraph3 copy) Parameters Type Name Description DGraph3 copy Fields | Improve this Doc View Source InvalidVertex Declaration public static readonly Vector3d InvalidVertex Field Value Type Description Vector3d Properties | Improve this Doc View Source CachedBounds Declaration public AxisAlignedBox3d CachedBounds { get; } Property Value Type Description AxisAlignedBox3d | Improve this Doc View Source HasVertexColors Declaration public bool HasVertexColors { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source append_new_split_vertex(Int32, Int32) Declaration protected override int append_new_split_vertex(int a, int b) Parameters Type Name Description Int32 a Int32 b Returns Type Description Int32 Overrides DGraph.append_new_split_vertex(Int32, Int32) | Improve this Doc View Source AppendGraph(DGraph3, Int32) Declaration public void AppendGraph(DGraph3 graph, int gid = -1) Parameters Type Name Description DGraph3 graph Int32 gid | Improve this Doc View Source AppendVertex(Vector3d) Declaration public int AppendVertex(Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Int32 | Improve this Doc View Source AppendVertex(Vector3d, Vector3f) Declaration public int AppendVertex(Vector3d v, Vector3f c) Parameters Type Name Description Vector3d v Vector3f c Returns Type Description Int32 | Improve this Doc View Source DiscardVertexColors() Declaration public void DiscardVertexColors() | Improve this Doc View Source EnableVertexColors(Vector3f) Declaration public void EnableVertexColors(Vector3f initial_color) Parameters Type Name Description Vector3f initial_color | Improve this Doc View Source GetBounds() Declaration public AxisAlignedBox3d GetBounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source GetEdgeCenter(Int32) Declaration public Vector3d GetEdgeCenter(int eID) Parameters Type Name Description Int32 eID Returns Type Description Vector3d | Improve this Doc View Source GetEdgeSegment(Int32) Declaration public Segment3d GetEdgeSegment(int eID) Parameters Type Name Description Int32 eID Returns Type Description Segment3d | Improve this Doc View Source GetEdgeV(Int32, ref Vector3d, ref Vector3d) Declaration public bool GetEdgeV(int eID, ref Vector3d a, ref Vector3d b) Parameters Type Name Description Int32 eID Vector3d a Vector3d b Returns Type Description Boolean | Improve this Doc View Source GetVertex(Int32) Declaration public Vector3d GetVertex(int vID) Parameters Type Name Description Int32 vID Returns Type Description Vector3d | Improve this Doc View Source GetVertexColor(Int32) Declaration public Vector3f GetVertexColor(int vID) Parameters Type Name Description Int32 vID Returns Type Description Vector3f | Improve this Doc View Source Segments() Declaration public IEnumerable<Segment3d> Segments() Returns Type Description IEnumerable < Segment3d > | Improve this Doc View Source SetVertex(Int32, Vector3d) Declaration public void SetVertex(int vID, Vector3d vNewPos) Parameters Type Name Description Int32 vID Vector3d vNewPos | Improve this Doc View Source SetVertexColor(Int32, Vector3f) Declaration public void SetVertexColor(int vID, Vector3f vNewColor) Parameters Type Name Description Int32 vID Vector3f vNewColor | Improve this Doc View Source subclass_validity_checks(Action<Boolean>) Declaration protected override void subclass_validity_checks(Action<bool> CheckOrFailF) Parameters Type Name Description Action < Boolean > CheckOrFailF Overrides DGraph.subclass_validity_checks(Action<Boolean>) | Improve this Doc View Source Vertices() Declaration public IEnumerable<Vector3d> Vertices() Returns Type Description IEnumerable < Vector3d >"
  },
  "api/g3.DGraph3Util.Curves.html": {
    "href": "api/g3.DGraph3Util.Curves.html",
    "title": "Struct DGraph3Util.Curves | ViRGIS VR GIS",
    "keywords": "Struct DGraph3Util.Curves Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Curves Fields | Improve this Doc View Source BoundaryV Declaration public HashSet<int> BoundaryV Field Value Type Description HashSet < Int32 > | Improve this Doc View Source JunctionV Declaration public HashSet<int> JunctionV Field Value Type Description HashSet < Int32 > | Improve this Doc View Source LoopEdges Declaration public List<List<int>> LoopEdges Field Value Type Description List < List < Int32 >> | Improve this Doc View Source Loops Declaration public List<DCurve3> Loops Field Value Type Description List < DCurve3 > | Improve this Doc View Source PathEdges Declaration public List<List<int>> PathEdges Field Value Type Description List < List < Int32 >> | Improve this Doc View Source Paths Declaration public List<DCurve3> Paths Field Value Type Description List < DCurve3 >"
  },
  "api/g3.DGraph3Util.html": {
    "href": "api/g3.DGraph3Util.html",
    "title": "Class DGraph3Util | ViRGIS VR GIS",
    "keywords": "Class DGraph3Util Utility functions for DGraph3 data structure Inheritance Object DGraph3Util Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class DGraph3Util Methods | Improve this Doc View Source DisconnectJunction(DGraph3, Int32, Double) foreach edge [vid,b] connected to junction vertex vid, remove, add new vertex c, and then add new edge [b,c]. Optionally move c a bit back along edge from vid. Declaration public static void DisconnectJunction(DGraph3 graph, int vid, double shrinkFactor = 1) Parameters Type Name Description DGraph3 graph Int32 vid Double shrinkFactor | Improve this Doc View Source ErodeOpenSpurs(DGraph3) Erode inwards from open boundary vertices of graph (ie vtx with single edge). Resulting graph is not compact (!) Declaration public static void ErodeOpenSpurs(DGraph3 graph) Parameters Type Name Description DGraph3 graph | Improve this Doc View Source ExtractCurves(DGraph3, Boolean, Func<Int32, Boolean>) Decompose graph into simple polylines and polygons. Declaration public static DGraph3Util.Curves ExtractCurves(DGraph3 graph, bool bWantLoopIndices = false, Func<int, bool> CurveOrientationF = null) Parameters Type Name Description DGraph3 graph Boolean bWantLoopIndices Func < Int32 , Boolean > CurveOrientationF Returns Type Description DGraph3Util.Curves | Improve this Doc View Source NextEdgeAndVtx(Int32, Int32, DGraph3) If we are at edge eid, which as one vertex prev_vid, find 'other' vertex, and other edge connected to that vertex, and return pair [next_edge, shared_vtx] Returns [int.MaxValue, shared_vtx] if shared_vtx is not valence=2 (ie stops at boundaries and complex junctions) Declaration public static Index2i NextEdgeAndVtx(int eid, int prev_vid, DGraph3 graph) Parameters Type Name Description Int32 eid Int32 prev_vid DGraph3 graph Returns Type Description Index2i | Improve this Doc View Source WalkToNextNonRegularVtx(DGraph3, Int32, Int32) walk through graph from fromVtx, in direction of eid, until we hit the next junction vertex Declaration public static List<int> WalkToNextNonRegularVtx(DGraph3 graph, int fromVtx, int eid) Parameters Type Name Description DGraph3 graph Int32 fromVtx Int32 eid Returns Type Description List < Int32 >"
  },
  "api/g3.DGraphN.html": {
    "href": "api/g3.DGraphN.html",
    "title": "Class DGraphN | ViRGIS VR GIS",
    "keywords": "Class DGraphN Implementation of DGraph that has no dimensionality, ie no data stored for vertieces besides indices. Inheritance Object DGraph DGraphN Inherited Members DGraph.InvalidID DGraph.DuplicateEdgeID DGraph.InvalidEdgeV DGraph.InvalidEdge3 DGraph.vertices_refcount DGraph.vertex_edges DGraph.edges_refcount DGraph.edges DGraph.timestamp DGraph.shape_timestamp DGraph.max_group_id DGraph.updateTimeStamp(Boolean) DGraph.Timestamp DGraph.ShapeTimestamp DGraph.VertexCount DGraph.EdgeCount DGraph.MaxVertexID DGraph.MaxEdgeID DGraph.MaxGroupID DGraph.IsVertex(Int32) DGraph.IsEdge(Int32) DGraph.GetVtxEdges(Int32) DGraph.GetVtxEdgeCount(Int32) DGraph.GetMaxVtxEdgeCount() DGraph.GetEdgeGroup(Int32) DGraph.SetEdgeGroup(Int32, Int32) DGraph.AllocateEdgeGroup() DGraph.GetEdgeV(Int32) DGraph.GetEdge(Int32) DGraph.append_vertex_internal() DGraph.AppendEdge(Int32, Int32, Int32) DGraph.AppendEdge(Index2i, Int32) DGraph.add_edge(Int32, Int32, Int32) DGraph.VertexIndices() DGraph.EdgeIndices() DGraph.Edges() DGraph.VtxVerticesItr(Int32) DGraph.VtxEdgesItr(Int32) DGraph.FindEdge(Int32, Int32) DGraph.RemoveEdge(Int32, Boolean) DGraph.RemoveVertex(Int32, Boolean) DGraph.SplitEdge(Int32, Int32, DGraph.EdgeSplitInfo) DGraph.SplitEdge(Int32, DGraph.EdgeSplitInfo) DGraph.CollapseEdge(Int32, Int32, DGraph.EdgeCollapseInfo) DGraph.edge_has_v(Int32, Int32) DGraph.edge_other_v(Int32, Int32) DGraph.replace_edge_vertex(Int32, Int32, Int32) DGraph.IsCompact DGraph.IsCompactV DGraph.IsBoundaryVertex(Int32) DGraph.IsJunctionVertex(Int32) DGraph.IsRegularVertex(Int32) DGraph.CheckValidity(DGraph.FailMode) DGraph.subclass_validity_checks(Action<Boolean>) DGraph.debug_check_is_vertex(Int32) DGraph.debug_check_is_edge(Int32) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DGraphN : DGraph Methods | Improve this Doc View Source append_new_split_vertex(Int32, Int32) Declaration protected override int append_new_split_vertex(int a, int b) Parameters Type Name Description Int32 a Int32 b Returns Type Description Int32 Overrides DGraph.append_new_split_vertex(Int32, Int32) | Improve this Doc View Source AppendVertex() Declaration public int AppendVertex() Returns Type Description Int32"
  },
  "api/g3.DiagonalMatrix.html": {
    "href": "api/g3.DiagonalMatrix.html",
    "title": "Class DiagonalMatrix | ViRGIS VR GIS",
    "keywords": "Class DiagonalMatrix Inheritance Object DiagonalMatrix Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DiagonalMatrix Constructors | Improve this Doc View Source DiagonalMatrix(Int32) Declaration public DiagonalMatrix(int N) Parameters Type Name Description Int32 N Fields | Improve this Doc View Source D Declaration public double[] D Field Value Type Description Double [] Properties | Improve this Doc View Source Columns Declaration public int Columns { get; } Property Value Type Description Int32 | Improve this Doc View Source Item[Int32, Int32] Declaration public double this[int r, int c] { get; set; } Parameters Type Name Description Int32 r Int32 c Property Value Type Description Double | Improve this Doc View Source Rows Declaration public int Rows { get; } Property Value Type Description Int32 | Improve this Doc View Source Size Declaration public Index2i Size { get; } Property Value Type Description Index2i Methods | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source Multiply(Double[], Double[]) Declaration public void Multiply(double[] X, double[] Result) Parameters Type Name Description Double [] X Double [] Result | Improve this Doc View Source Set(Int32, Int32, Double) Declaration public void Set(int r, int c, double value) Parameters Type Name Description Int32 r Int32 c Double value"
  },
  "api/g3.DijkstraGraphDistance.html": {
    "href": "api/g3.DijkstraGraphDistance.html",
    "title": "Class DijkstraGraphDistance | ViRGIS VR GIS",
    "keywords": "Class DijkstraGraphDistance Compute Dijkstra shortest-path algorithm on a graph. Computation is index-based, but can use sparse data structures if the index space will be sparse. Construction is somewhat complicated, but see shortcut static methods at end of file for common construction cases: MeshVertices(mesh) - compute on vertices of mesh MeshVertices(mesh) - compute on vertices of mesh Inheritance Object DijkstraGraphDistance Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DijkstraGraphDistance Constructors | Improve this Doc View Source DijkstraGraphDistance(Int32, Boolean, Func<Int32, Boolean>, Func<Int32, Int32, Single>, Func<Int32, IEnumerable<Int32>>, IEnumerable<Vector2d>) Constructor configures the graph as well. Graph is not specified explicitly, is provided via functions, for maximum flexibility. nMaxID: maximum ID that will be added. bSparse: is ID space large but sparse? this will save memory nodeFilterF: restrict to a subset of nodes (eg if you want to filter neighbours but not change neighboursF nodeDistanceF: must return (symmetric) distance between two nodes a and b neighboursF: return enumeration of neighbours of a seeds: although Vector2d, are actually pairs (id, seedvalue) (or use AddSeed later) Declaration public DijkstraGraphDistance(int nMaxID, bool bSparse, Func<int, bool> nodeFilterF, Func<int, int, float> nodeDistanceF, Func<int, IEnumerable<int>> neighboursF, IEnumerable<Vector2d> seeds = null) Parameters Type Name Description Int32 nMaxID Boolean bSparse Func < Int32 , Boolean > nodeFilterF Func < Int32 , Int32 , Single > nodeDistanceF Func < Int32 , IEnumerable < Int32 >> neighboursF IEnumerable < Vector2d > seeds Fields | Improve this Doc View Source InvalidValue Declaration public const float InvalidValue = 3.40282347E+38F Field Value Type Description Single | Improve this Doc View Source TrackOrder if you enable this, then you can call GetOrder() Declaration public bool TrackOrder Field Value Type Description Boolean Properties | Improve this Doc View Source MaxDistance Get the maximum distance encountered during the Compute() Declaration public float MaxDistance { get; } Property Value Type Description Single Methods | Improve this Doc View Source AddSeed(Int32, Single) Add seed point as id/distance pair Declaration public void AddSeed(int id, float seed_dist) Parameters Type Name Description Int32 id Single seed_dist | Improve this Doc View Source Compute() Compute distances from seeds to all other ids. Declaration public void Compute() | Improve this Doc View Source Compute_Dense() Declaration protected void Compute_Dense() | Improve this Doc View Source Compute_Sparse() Declaration protected void Compute_Sparse() | Improve this Doc View Source ComputeToMaxDistance(Single) Compute distances that are less/equal to fMaxDistance from the seeds Terminates early, so Queue may not be empty Declaration public void ComputeToMaxDistance(float fMaxDistance) Parameters Type Name Description Single fMaxDistance | Improve this Doc View Source ComputeToMaxDistance_Dense(Single) Declaration protected void ComputeToMaxDistance_Dense(float fMaxDistance) Parameters Type Name Description Single fMaxDistance | Improve this Doc View Source ComputeToMaxDistance_Sparse(Single) Declaration protected void ComputeToMaxDistance_Sparse(float fMaxDistance) Parameters Type Name Description Single fMaxDistance | Improve this Doc View Source ComputeToNode(Func<Int32, Boolean>, Single) Compute distances until node_id is frozen, or (optional) max distance is reached Terminates early, so Queue may not be empty Declaration public int ComputeToNode(Func<int, bool> terminatingNodeF, float fMaxDistance = 3.40282347E+38F) Parameters Type Name Description Func < Int32 , Boolean > terminatingNodeF Single fMaxDistance Returns Type Description Int32 | Improve this Doc View Source ComputeToNode(Int32, Single) Compute distances until node_id is frozen, or (optional) max distance is reached Terminates early, so Queue may not be empty [TODO] can reimplement this w/ internal call to ComputeToNode(func) ? Declaration public void ComputeToNode(int node_id, float fMaxDistance = 3.40282347E+38F) Parameters Type Name Description Int32 node_id Single fMaxDistance | Improve this Doc View Source ComputeToNode_Dense(Func<Int32, Boolean>, Single) Declaration protected int ComputeToNode_Dense(Func<int, bool> terminatingNodeF, float fMaxDistance) Parameters Type Name Description Func < Int32 , Boolean > terminatingNodeF Single fMaxDistance Returns Type Description Int32 | Improve this Doc View Source ComputeToNode_Dense(Int32, Single) Declaration protected void ComputeToNode_Dense(int node_id, float fMaxDistance) Parameters Type Name Description Int32 node_id Single fMaxDistance | Improve this Doc View Source ComputeToNode_Sparse(Func<Int32, Boolean>, Single) Declaration protected int ComputeToNode_Sparse(Func<int, bool> terminatingNodeF, float fMaxDistance) Parameters Type Name Description Func < Int32 , Boolean > terminatingNodeF Single fMaxDistance Returns Type Description Int32 | Improve this Doc View Source ComputeToNode_Sparse(Int32, Single) Declaration protected void ComputeToNode_Sparse(int node_id, float fMaxDistance) Parameters Type Name Description Int32 node_id Single fMaxDistance | Improve this Doc View Source GetDistance(Int32) Get the computed distance at node id. returns InvalidValue if node was not computed. Declaration public float GetDistance(int id) Parameters Type Name Description Int32 id Returns Type Description Single | Improve this Doc View Source GetOrder() Get (internal) list of frozen nodes in increasing distance-order. Requries that TrackOrder=true before Compute call. Declaration public List<int> GetOrder() Returns Type Description List < Int32 > | Improve this Doc View Source GetPathToSeed(Int32, List<Int32>) Walk from node fromv back to the (graph-)nearest seed point. Declaration public bool GetPathToSeed(int fromv, List<int> path) Parameters Type Name Description Int32 fromv List < Int32 > path Returns Type Description Boolean | Improve this Doc View Source IsSeed(Int32) Declaration public bool IsSeed(int id) Parameters Type Name Description Int32 id Returns Type Description Boolean | Improve this Doc View Source MeshTriangles(DMesh3, Boolean) shortcut to construct graph for mesh triangles Declaration public static DijkstraGraphDistance MeshTriangles(DMesh3 mesh, bool bSparse = false) Parameters Type Name Description DMesh3 mesh Boolean bSparse Returns Type Description DijkstraGraphDistance | Improve this Doc View Source MeshVertices(DMesh3, Boolean) shortcut to construct graph for mesh vertices Declaration public static DijkstraGraphDistance MeshVertices(DMesh3 mesh, bool bSparse = false) Parameters Type Name Description DMesh3 mesh Boolean bSparse Returns Type Description DijkstraGraphDistance | Improve this Doc View Source Reset() reset internal data structures/etc Declaration public void Reset()"
  },
  "api/g3.DIndexArray2i.html": {
    "href": "api/g3.DIndexArray2i.html",
    "title": "Class DIndexArray2i | ViRGIS VR GIS",
    "keywords": "Class DIndexArray2i Inheritance Object DVectorArray2 < Int32 > DIndexArray2i Inherited Members DVectorArray2<Int32>.vector DVectorArray2<Int32>.Count DVectorArray2<Int32>.GetEnumerator() DVectorArray2<Int32>.Resize(Int32) DVectorArray2<Int32>.Set(Int32, Int32, Int32) DVectorArray2<Int32>.Append(Int32, Int32) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DIndexArray2i : DVectorArray2<int>, IEnumerable<int>, IEnumerable Constructors | Improve this Doc View Source DIndexArray2i(Int32) Declaration public DIndexArray2i(int nCount = 0) Parameters Type Name Description Int32 nCount | Improve this Doc View Source DIndexArray2i(Int32[]) Declaration public DIndexArray2i(int[] data) Parameters Type Name Description Int32 [] data Properties | Improve this Doc View Source Item[Int32] Declaration public Index2i this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Index2i Methods | Improve this Doc View Source AsIndex2i() Declaration public IEnumerable<Index2i> AsIndex2i() Returns Type Description IEnumerable < Index2i >"
  },
  "api/g3.DIndexArray3i.html": {
    "href": "api/g3.DIndexArray3i.html",
    "title": "Class DIndexArray3i | ViRGIS VR GIS",
    "keywords": "Class DIndexArray3i Inheritance Object DVectorArray3 < Int32 > DIndexArray3i Inherited Members DVectorArray3<Int32>.vector DVectorArray3<Int32>.Count DVectorArray3<Int32>.GetEnumerator() DVectorArray3<Int32>.Resize(Int32) DVectorArray3<Int32>.Set(Int32, Int32, Int32, Int32) DVectorArray3<Int32>.Append(Int32, Int32, Int32) DVectorArray3<Int32>.Clear() Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DIndexArray3i : DVectorArray3<int>, IEnumerable<int>, IEnumerable Constructors | Improve this Doc View Source DIndexArray3i(Int32) Declaration public DIndexArray3i(int nCount = 0) Parameters Type Name Description Int32 nCount | Improve this Doc View Source DIndexArray3i(Int32[]) Declaration public DIndexArray3i(int[] data) Parameters Type Name Description Int32 [] data Properties | Improve this Doc View Source Item[Int32] Declaration public Index3i this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Index3i Methods | Improve this Doc View Source AsIndex3i() Declaration public IEnumerable<Index3i> AsIndex3i() Returns Type Description IEnumerable < Index3i > | Improve this Doc View Source Set(Int32, Int32, Int32, Int32, Boolean) Declaration public void Set(int i, int a, int b, int c, bool bCycle = false) Parameters Type Name Description Int32 i Int32 a Int32 b Int32 c Boolean bCycle"
  },
  "api/g3.Distance.html": {
    "href": "api/g3.Distance.html",
    "title": "Class Distance | ViRGIS VR GIS",
    "keywords": "Class Distance Inheritance Object Distance Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class Distance Methods | Improve this Doc View Source ClosestPointOnLineT(Vector3f, Vector3f, Vector3f) Declaration public static float ClosestPointOnLineT(Vector3f p0, Vector3f dir, Vector3f pt) Parameters Type Name Description Vector3f p0 Vector3f dir Vector3f pt Returns Type Description Single"
  },
  "api/g3.DistanceFieldToSkeletalField.html": {
    "href": "api/g3.DistanceFieldToSkeletalField.html",
    "title": "Class DistanceFieldToSkeletalField | ViRGIS VR GIS",
    "keywords": "Class DistanceFieldToSkeletalField This class converts the interval [-falloff,falloff] to [0,1], Then applies Wyvill falloff function (1-t^2)^3. The result is a skeletal-primitive-like shape with the distance=0 isocontour lying just before midway in the range (at the .ZeroIsocontour constant) Inheritance Object DistanceFieldToSkeletalField Implements BoundedImplicitFunction3d ImplicitFunction3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DistanceFieldToSkeletalField : BoundedImplicitFunction3d, ImplicitFunction3d Fields | Improve this Doc View Source DistanceField Declaration public BoundedImplicitFunction3d DistanceField Field Value Type Description BoundedImplicitFunction3d | Improve this Doc View Source FalloffDistance Declaration public double FalloffDistance Field Value Type Description Double | Improve this Doc View Source ZeroIsocontour Declaration public const double ZeroIsocontour = 0.421875 Field Value Type Description Double Methods | Improve this Doc View Source Bounds() Declaration public AxisAlignedBox3d Bounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Value(ref Vector3d) Declaration public double Value(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Double Implements BoundedImplicitFunction3d ImplicitFunction3d"
  },
  "api/g3.DistLine2Line2.html": {
    "href": "api/g3.DistLine2Line2.html",
    "title": "Class DistLine2Line2 | ViRGIS VR GIS",
    "keywords": "Class DistLine2Line2 Inheritance Object DistLine2Line2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DistLine2Line2 Constructors | Improve this Doc View Source DistLine2Line2(Line2d, Line2d) Declaration public DistLine2Line2(Line2d Line1, Line2d Line2) Parameters Type Name Description Line2d Line1 Line2d Line2 Fields | Improve this Doc View Source DistanceSquared Declaration public double DistanceSquared Field Value Type Description Double | Improve this Doc View Source Line1Closest Declaration public Vector2d Line1Closest Field Value Type Description Vector2d | Improve this Doc View Source Line1Parameter Declaration public double Line1Parameter Field Value Type Description Double | Improve this Doc View Source Line2Closest Declaration public Vector2d Line2Closest Field Value Type Description Vector2d | Improve this Doc View Source Line2Parameter Declaration public double Line2Parameter Field Value Type Description Double Properties | Improve this Doc View Source Line Declaration public Line2d Line { get; set; } Property Value Type Description Line2d | Improve this Doc View Source Line2 Declaration public Line2d Line2 { get; set; } Property Value Type Description Line2d Methods | Improve this Doc View Source Compute() Declaration public DistLine2Line2 Compute() Returns Type Description DistLine2Line2 | Improve this Doc View Source Get() Declaration public double Get() Returns Type Description Double | Improve this Doc View Source GetSquared() Declaration public double GetSquared() Returns Type Description Double | Improve this Doc View Source MinDistance(Line2d, Line2d) Declaration public static double MinDistance(Line2d line1, Line2d line2) Parameters Type Name Description Line2d line1 Line2d line2 Returns Type Description Double"
  },
  "api/g3.DistLine2Segment2.html": {
    "href": "api/g3.DistLine2Segment2.html",
    "title": "Class DistLine2Segment2 | ViRGIS VR GIS",
    "keywords": "Class DistLine2Segment2 Inheritance Object DistLine2Segment2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DistLine2Segment2 Constructors | Improve this Doc View Source DistLine2Segment2(Line2d, Segment2d) Declaration public DistLine2Segment2(Line2d LineIn, Segment2d SegmentIn) Parameters Type Name Description Line2d LineIn Segment2d SegmentIn Fields | Improve this Doc View Source DistanceSquared Declaration public double DistanceSquared Field Value Type Description Double | Improve this Doc View Source LineClosest Declaration public Vector2d LineClosest Field Value Type Description Vector2d | Improve this Doc View Source LineParameter Declaration public double LineParameter Field Value Type Description Double | Improve this Doc View Source SegmentClosest Declaration public Vector2d SegmentClosest Field Value Type Description Vector2d | Improve this Doc View Source SegmentParameter Declaration public double SegmentParameter Field Value Type Description Double Properties | Improve this Doc View Source Line Declaration public Line2d Line { get; set; } Property Value Type Description Line2d | Improve this Doc View Source Segment Declaration public Segment2d Segment { get; set; } Property Value Type Description Segment2d Methods | Improve this Doc View Source Compute() Declaration public DistLine2Segment2 Compute() Returns Type Description DistLine2Segment2 | Improve this Doc View Source Get() Declaration public double Get() Returns Type Description Double | Improve this Doc View Source GetSquared() Declaration public double GetSquared() Returns Type Description Double | Improve this Doc View Source MinDistance(Line2d, Segment2d) Declaration public static double MinDistance(Line2d line, Segment2d segment) Parameters Type Name Description Line2d line Segment2d segment Returns Type Description Double"
  },
  "api/g3.DistLine3Ray3.html": {
    "href": "api/g3.DistLine3Ray3.html",
    "title": "Class DistLine3Ray3 | ViRGIS VR GIS",
    "keywords": "Class DistLine3Ray3 Inheritance Object DistLine3Ray3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DistLine3Ray3 Constructors | Improve this Doc View Source DistLine3Ray3(Ray3d, Line3d) Declaration public DistLine3Ray3(Ray3d rayIn, Line3d LineIn) Parameters Type Name Description Ray3d rayIn Line3d LineIn Fields | Improve this Doc View Source DistanceSquared Declaration public double DistanceSquared Field Value Type Description Double | Improve this Doc View Source LineClosest Declaration public Vector3d LineClosest Field Value Type Description Vector3d | Improve this Doc View Source LineParameter Declaration public double LineParameter Field Value Type Description Double | Improve this Doc View Source RayClosest Declaration public Vector3d RayClosest Field Value Type Description Vector3d | Improve this Doc View Source RayParameter Declaration public double RayParameter Field Value Type Description Double Properties | Improve this Doc View Source Line Declaration public Line3d Line { get; set; } Property Value Type Description Line3d | Improve this Doc View Source Ray Declaration public Ray3d Ray { get; set; } Property Value Type Description Ray3d Methods | Improve this Doc View Source Compute() Declaration public DistLine3Ray3 Compute() Returns Type Description DistLine3Ray3 | Improve this Doc View Source Get() Declaration public double Get() Returns Type Description Double | Improve this Doc View Source GetSquared() Declaration public double GetSquared() Returns Type Description Double | Improve this Doc View Source MinDistance(Ray3d, Line3d) Declaration public static double MinDistance(Ray3d r, Line3d s) Parameters Type Name Description Ray3d r Line3d s Returns Type Description Double | Improve this Doc View Source MinDistanceLineParam(Ray3d, Line3d) Declaration public static double MinDistanceLineParam(Ray3d r, Line3d s) Parameters Type Name Description Ray3d r Line3d s Returns Type Description Double"
  },
  "api/g3.DistLine3Segment3.html": {
    "href": "api/g3.DistLine3Segment3.html",
    "title": "Class DistLine3Segment3 | ViRGIS VR GIS",
    "keywords": "Class DistLine3Segment3 Inheritance Object DistLine3Segment3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DistLine3Segment3 Constructors | Improve this Doc View Source DistLine3Segment3(Line3d, Segment3d) Declaration public DistLine3Segment3(Line3d LineIn, Segment3d SegmentIn) Parameters Type Name Description Line3d LineIn Segment3d SegmentIn Fields | Improve this Doc View Source DistanceSquared Declaration public double DistanceSquared Field Value Type Description Double | Improve this Doc View Source LineClosest Declaration public Vector3d LineClosest Field Value Type Description Vector3d | Improve this Doc View Source LineParameter Declaration public double LineParameter Field Value Type Description Double | Improve this Doc View Source SegmentClosest Declaration public Vector3d SegmentClosest Field Value Type Description Vector3d | Improve this Doc View Source SegmentParameter Declaration public double SegmentParameter Field Value Type Description Double Properties | Improve this Doc View Source Line Declaration public Line3d Line { get; set; } Property Value Type Description Line3d | Improve this Doc View Source Segment Declaration public Segment3d Segment { get; set; } Property Value Type Description Segment3d Methods | Improve this Doc View Source Compute() Declaration public DistLine3Segment3 Compute() Returns Type Description DistLine3Segment3 | Improve this Doc View Source Get() Declaration public double Get() Returns Type Description Double | Improve this Doc View Source GetSquared() Declaration public double GetSquared() Returns Type Description Double | Improve this Doc View Source MinDistance(Line3d, Segment3d) Declaration public static double MinDistance(Line3d line, Segment3d segment) Parameters Type Name Description Line3d line Segment3d segment Returns Type Description Double | Improve this Doc View Source MinDistanceLineParam(Line3d, Segment3d) Declaration public static double MinDistanceLineParam(Line3d line, Segment3d segment) Parameters Type Name Description Line3d line Segment3d segment Returns Type Description Double"
  },
  "api/g3.DistLine3Triangle3.html": {
    "href": "api/g3.DistLine3Triangle3.html",
    "title": "Class DistLine3Triangle3 | ViRGIS VR GIS",
    "keywords": "Class DistLine3Triangle3 Inheritance Object DistLine3Triangle3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DistLine3Triangle3 Constructors | Improve this Doc View Source DistLine3Triangle3(Line3d, Triangle3d) Declaration public DistLine3Triangle3(Line3d LineIn, Triangle3d TriangleIn) Parameters Type Name Description Line3d LineIn Triangle3d TriangleIn Fields | Improve this Doc View Source DistanceSquared Declaration public double DistanceSquared Field Value Type Description Double | Improve this Doc View Source LineClosest Declaration public Vector3d LineClosest Field Value Type Description Vector3d | Improve this Doc View Source LineParam Declaration public double LineParam Field Value Type Description Double | Improve this Doc View Source TriangleBaryCoords Declaration public Vector3d TriangleBaryCoords Field Value Type Description Vector3d | Improve this Doc View Source TriangleClosest Declaration public Vector3d TriangleClosest Field Value Type Description Vector3d Properties | Improve this Doc View Source Line Declaration public Line3d Line { get; set; } Property Value Type Description Line3d | Improve this Doc View Source Triangle Declaration public Triangle3d Triangle { get; set; } Property Value Type Description Triangle3d Methods | Improve this Doc View Source Compute() Declaration public DistLine3Triangle3 Compute() Returns Type Description DistLine3Triangle3 | Improve this Doc View Source Get() Declaration public double Get() Returns Type Description Double | Improve this Doc View Source GetSquared() Declaration public double GetSquared() Returns Type Description Double"
  },
  "api/g3.DistPoint2Box2.html": {
    "href": "api/g3.DistPoint2Box2.html",
    "title": "Class DistPoint2Box2 | ViRGIS VR GIS",
    "keywords": "Class DistPoint2Box2 Inheritance Object DistPoint2Box2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DistPoint2Box2 Constructors | Improve this Doc View Source DistPoint2Box2(Vector2d, Box2d) Declaration public DistPoint2Box2(Vector2d PointIn, Box2d boxIn) Parameters Type Name Description Vector2d PointIn Box2d boxIn Fields | Improve this Doc View Source BoxClosest Declaration public Vector2d BoxClosest Field Value Type Description Vector2d | Improve this Doc View Source DistanceSquared Declaration public double DistanceSquared Field Value Type Description Double Properties | Improve this Doc View Source Box Declaration public Box2d Box { get; set; } Property Value Type Description Box2d | Improve this Doc View Source Point Declaration public Vector2d Point { get; set; } Property Value Type Description Vector2d Methods | Improve this Doc View Source Compute() Declaration public DistPoint2Box2 Compute() Returns Type Description DistPoint2Box2 | Improve this Doc View Source Get() Declaration public double Get() Returns Type Description Double | Improve this Doc View Source GetSquared() Declaration public double GetSquared() Returns Type Description Double"
  },
  "api/g3.DistPoint2Circle2.html": {
    "href": "api/g3.DistPoint2Circle2.html",
    "title": "Class DistPoint2Circle2 | ViRGIS VR GIS",
    "keywords": "Class DistPoint2Circle2 Inheritance Object DistPoint2Circle2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DistPoint2Circle2 Constructors | Improve this Doc View Source DistPoint2Circle2(Vector2d, Circle2d) Declaration public DistPoint2Circle2(Vector2d PointIn, Circle2d circleIn) Parameters Type Name Description Vector2d PointIn Circle2d circleIn Fields | Improve this Doc View Source AllCirclePointsEquidistant Declaration public bool AllCirclePointsEquidistant Field Value Type Description Boolean | Improve this Doc View Source CircleClosest Declaration public Vector2d CircleClosest Field Value Type Description Vector2d | Improve this Doc View Source DistanceSquared Declaration public double DistanceSquared Field Value Type Description Double Properties | Improve this Doc View Source Circle Declaration public Circle2d Circle { get; set; } Property Value Type Description Circle2d | Improve this Doc View Source Point Declaration public Vector2d Point { get; set; } Property Value Type Description Vector2d Methods | Improve this Doc View Source Compute() Declaration public DistPoint2Circle2 Compute() Returns Type Description DistPoint2Circle2 | Improve this Doc View Source Get() Declaration public double Get() Returns Type Description Double | Improve this Doc View Source GetSquared() Declaration public double GetSquared() Returns Type Description Double"
  },
  "api/g3.DistPoint3Circle3.html": {
    "href": "api/g3.DistPoint3Circle3.html",
    "title": "Class DistPoint3Circle3 | ViRGIS VR GIS",
    "keywords": "Class DistPoint3Circle3 Inheritance Object DistPoint3Circle3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DistPoint3Circle3 Constructors | Improve this Doc View Source DistPoint3Circle3(Vector3d, Circle3d) Declaration public DistPoint3Circle3(Vector3d PointIn, Circle3d circleIn) Parameters Type Name Description Vector3d PointIn Circle3d circleIn Fields | Improve this Doc View Source AllCirclePointsEquidistant Declaration public bool AllCirclePointsEquidistant Field Value Type Description Boolean | Improve this Doc View Source CircleClosest Declaration public Vector3d CircleClosest Field Value Type Description Vector3d | Improve this Doc View Source DistanceSquared Declaration public double DistanceSquared Field Value Type Description Double Properties | Improve this Doc View Source Circle Declaration public Circle3d Circle { get; set; } Property Value Type Description Circle3d | Improve this Doc View Source Point Declaration public Vector3d Point { get; set; } Property Value Type Description Vector3d Methods | Improve this Doc View Source Compute() Declaration public DistPoint3Circle3 Compute() Returns Type Description DistPoint3Circle3 | Improve this Doc View Source Get() Declaration public double Get() Returns Type Description Double | Improve this Doc View Source GetSquared() Declaration public double GetSquared() Returns Type Description Double"
  },
  "api/g3.DistPoint3Cylinder3.html": {
    "href": "api/g3.DistPoint3Cylinder3.html",
    "title": "Class DistPoint3Cylinder3 | ViRGIS VR GIS",
    "keywords": "Class DistPoint3Cylinder3 Inheritance Object DistPoint3Cylinder3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DistPoint3Cylinder3 Constructors | Improve this Doc View Source DistPoint3Cylinder3(Vector3d, Cylinder3d) Declaration public DistPoint3Cylinder3(Vector3d PointIn, Cylinder3d CylinderIn) Parameters Type Name Description Vector3d PointIn Cylinder3d CylinderIn Fields | Improve this Doc View Source CylinderClosest Declaration public Vector3d CylinderClosest Field Value Type Description Vector3d | Improve this Doc View Source DistanceSquared Declaration public double DistanceSquared Field Value Type Description Double | Improve this Doc View Source SignedDistance Declaration public double SignedDistance Field Value Type Description Double Properties | Improve this Doc View Source Cylinder Declaration public Cylinder3d Cylinder { get; set; } Property Value Type Description Cylinder3d | Improve this Doc View Source IsInside Declaration public bool IsInside { get; } Property Value Type Description Boolean | Improve this Doc View Source Point Declaration public Vector3d Point { get; set; } Property Value Type Description Vector3d | Improve this Doc View Source SolidDistance Declaration public double SolidDistance { get; } Property Value Type Description Double Methods | Improve this Doc View Source Compute() Declaration public DistPoint3Cylinder3 Compute() Returns Type Description DistPoint3Cylinder3 | Improve this Doc View Source Get() Declaration public double Get() Returns Type Description Double | Improve this Doc View Source get_squared_infinite() Declaration public double get_squared_infinite() Returns Type Description Double | Improve this Doc View Source GetSquared() Declaration public double GetSquared() Returns Type Description Double"
  },
  "api/g3.DistPoint3Triangle3.html": {
    "href": "api/g3.DistPoint3Triangle3.html",
    "title": "Class DistPoint3Triangle3 | ViRGIS VR GIS",
    "keywords": "Class DistPoint3Triangle3 Inheritance Object DistPoint3Triangle3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DistPoint3Triangle3 Constructors | Improve this Doc View Source DistPoint3Triangle3(Vector3d, Triangle3d) Declaration public DistPoint3Triangle3(Vector3d PointIn, Triangle3d TriangleIn) Parameters Type Name Description Vector3d PointIn Triangle3d TriangleIn Fields | Improve this Doc View Source DistanceSquared Declaration public double DistanceSquared Field Value Type Description Double | Improve this Doc View Source TriangleBaryCoords Declaration public Vector3d TriangleBaryCoords Field Value Type Description Vector3d | Improve this Doc View Source TriangleClosest Declaration public Vector3d TriangleClosest Field Value Type Description Vector3d Properties | Improve this Doc View Source Point Declaration public Vector3d Point { get; set; } Property Value Type Description Vector3d | Improve this Doc View Source Triangle Declaration public Triangle3d Triangle { get; set; } Property Value Type Description Triangle3d Methods | Improve this Doc View Source Compute() Declaration public DistPoint3Triangle3 Compute() Returns Type Description DistPoint3Triangle3 | Improve this Doc View Source DistanceSqr(ref Vector3d, ref Triangle3d, out Vector3d, out Vector3d) Declaration public static double DistanceSqr(ref Vector3d point, ref Triangle3d triangle, out Vector3d closestPoint, out Vector3d baryCoords) Parameters Type Name Description Vector3d point Triangle3d triangle Vector3d closestPoint Vector3d baryCoords Returns Type Description Double | Improve this Doc View Source Get() Declaration public double Get() Returns Type Description Double | Improve this Doc View Source GetSquared() Declaration public double GetSquared() Returns Type Description Double"
  },
  "api/g3.DistRay3Ray3.html": {
    "href": "api/g3.DistRay3Ray3.html",
    "title": "Class DistRay3Ray3 | ViRGIS VR GIS",
    "keywords": "Class DistRay3Ray3 Inheritance Object DistRay3Ray3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DistRay3Ray3 Constructors | Improve this Doc View Source DistRay3Ray3(Ray3d, Ray3d) Declaration public DistRay3Ray3(Ray3d ray1, Ray3d ray2) Parameters Type Name Description Ray3d ray1 Ray3d ray2 Fields | Improve this Doc View Source DistanceSquared Declaration public double DistanceSquared Field Value Type Description Double | Improve this Doc View Source Ray1Closest Declaration public Vector3d Ray1Closest Field Value Type Description Vector3d | Improve this Doc View Source Ray1Parameter Declaration public double Ray1Parameter Field Value Type Description Double | Improve this Doc View Source Ray2Closest Declaration public Vector3d Ray2Closest Field Value Type Description Vector3d | Improve this Doc View Source Ray2Parameter Declaration public double Ray2Parameter Field Value Type Description Double Properties | Improve this Doc View Source Ray1 Declaration public Ray3d Ray1 { get; set; } Property Value Type Description Ray3d | Improve this Doc View Source Ray2 Declaration public Ray3d Ray2 { get; set; } Property Value Type Description Ray3d Methods | Improve this Doc View Source Compute() Declaration public DistRay3Ray3 Compute() Returns Type Description DistRay3Ray3 | Improve this Doc View Source Get() Declaration public double Get() Returns Type Description Double | Improve this Doc View Source GetSquared() Declaration public double GetSquared() Returns Type Description Double | Improve this Doc View Source MinDistance(Ray3d, Ray3d) Declaration public static double MinDistance(Ray3d r1, Ray3d r2) Parameters Type Name Description Ray3d r1 Ray3d r2 Returns Type Description Double | Improve this Doc View Source MinDistanceRay2Param(Ray3d, Ray3d) Declaration public static double MinDistanceRay2Param(Ray3d r1, Ray3d r2) Parameters Type Name Description Ray3d r1 Ray3d r2 Returns Type Description Double"
  },
  "api/g3.DistRay3Segment3.html": {
    "href": "api/g3.DistRay3Segment3.html",
    "title": "Class DistRay3Segment3 | ViRGIS VR GIS",
    "keywords": "Class DistRay3Segment3 Distance between ray and segment ported from WildMagic5 Inheritance Object DistRay3Segment3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DistRay3Segment3 Constructors | Improve this Doc View Source DistRay3Segment3(Ray3d, Segment3d) Declaration public DistRay3Segment3(Ray3d rayIn, Segment3d segmentIn) Parameters Type Name Description Ray3d rayIn Segment3d segmentIn Fields | Improve this Doc View Source DistanceSquared Declaration public double DistanceSquared Field Value Type Description Double | Improve this Doc View Source RayClosest Declaration public Vector3d RayClosest Field Value Type Description Vector3d | Improve this Doc View Source RayParameter Declaration public double RayParameter Field Value Type Description Double | Improve this Doc View Source SegmentClosest Declaration public Vector3d SegmentClosest Field Value Type Description Vector3d | Improve this Doc View Source SegmentParameter Declaration public double SegmentParameter Field Value Type Description Double Properties | Improve this Doc View Source Ray Declaration public Ray3d Ray { get; set; } Property Value Type Description Ray3d | Improve this Doc View Source Segment Declaration public Segment3d Segment { get; set; } Property Value Type Description Segment3d Methods | Improve this Doc View Source Compute() Declaration public DistRay3Segment3 Compute() Returns Type Description DistRay3Segment3 | Improve this Doc View Source Get() Declaration public double Get() Returns Type Description Double | Improve this Doc View Source GetSquared() Declaration public double GetSquared() Returns Type Description Double | Improve this Doc View Source MinDistance(Ray3d, Segment3d) Declaration public static double MinDistance(Ray3d r, Segment3d s) Parameters Type Name Description Ray3d r Segment3d s Returns Type Description Double | Improve this Doc View Source MinDistanceSegmentParam(Ray3d, Segment3d) Declaration public static double MinDistanceSegmentParam(Ray3d r, Segment3d s) Parameters Type Name Description Ray3d r Segment3d s Returns Type Description Double | Improve this Doc View Source SquaredDistance(ref Ray3d, ref Segment3d, out Double, out Double) compute w/o allocating temporaries/etc Declaration public static double SquaredDistance(ref Ray3d ray, ref Segment3d segment, out double rayT, out double segT) Parameters Type Name Description Ray3d ray Segment3d segment Double rayT Double segT Returns Type Description Double"
  },
  "api/g3.DistSegment2Segment2.html": {
    "href": "api/g3.DistSegment2Segment2.html",
    "title": "Class DistSegment2Segment2 | ViRGIS VR GIS",
    "keywords": "Class DistSegment2Segment2 Inheritance Object DistSegment2Segment2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DistSegment2Segment2 Constructors | Improve this Doc View Source DistSegment2Segment2(Segment2d, Segment2d) Declaration public DistSegment2Segment2(Segment2d Segment1, Segment2d Segment2) Parameters Type Name Description Segment2d Segment1 Segment2d Segment2 Fields | Improve this Doc View Source DistanceSquared Declaration public double DistanceSquared Field Value Type Description Double | Improve this Doc View Source Segment1Closest Declaration public Vector2d Segment1Closest Field Value Type Description Vector2d | Improve this Doc View Source Segment1Parameter Declaration public double Segment1Parameter Field Value Type Description Double | Improve this Doc View Source Segment2Closest Declaration public Vector2d Segment2Closest Field Value Type Description Vector2d | Improve this Doc View Source Segment2Parameter Declaration public double Segment2Parameter Field Value Type Description Double Properties | Improve this Doc View Source Segment1 Declaration public Segment2d Segment1 { get; set; } Property Value Type Description Segment2d | Improve this Doc View Source Segment2 Declaration public Segment2d Segment2 { get; set; } Property Value Type Description Segment2d Methods | Improve this Doc View Source Compute() Declaration public DistSegment2Segment2 Compute() Returns Type Description DistSegment2Segment2 | Improve this Doc View Source Get() Declaration public double Get() Returns Type Description Double | Improve this Doc View Source GetSquared() Declaration public double GetSquared() Returns Type Description Double | Improve this Doc View Source MinDistance(Segment2d, Segment2d) Declaration public static double MinDistance(Segment2d Segment1, Segment2d Segment2) Parameters Type Name Description Segment2d Segment1 Segment2d Segment2 Returns Type Description Double"
  },
  "api/g3.DistSegment3Triangle3.html": {
    "href": "api/g3.DistSegment3Triangle3.html",
    "title": "Class DistSegment3Triangle3 | ViRGIS VR GIS",
    "keywords": "Class DistSegment3Triangle3 Inheritance Object DistSegment3Triangle3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DistSegment3Triangle3 Constructors | Improve this Doc View Source DistSegment3Triangle3(Segment3d, Triangle3d) Declaration public DistSegment3Triangle3(Segment3d SegmentIn, Triangle3d TriangleIn) Parameters Type Name Description Segment3d SegmentIn Triangle3d TriangleIn Fields | Improve this Doc View Source DistanceSquared Declaration public double DistanceSquared Field Value Type Description Double | Improve this Doc View Source SegmentClosest Declaration public Vector3d SegmentClosest Field Value Type Description Vector3d | Improve this Doc View Source SegmentParam Declaration public double SegmentParam Field Value Type Description Double | Improve this Doc View Source TriangleBaryCoords Declaration public Vector3d TriangleBaryCoords Field Value Type Description Vector3d | Improve this Doc View Source TriangleClosest Declaration public Vector3d TriangleClosest Field Value Type Description Vector3d Properties | Improve this Doc View Source Segment Declaration public Segment3d Segment { get; set; } Property Value Type Description Segment3d | Improve this Doc View Source Triangle Declaration public Triangle3d Triangle { get; set; } Property Value Type Description Triangle3d Methods | Improve this Doc View Source Compute() Declaration public DistSegment3Triangle3 Compute() Returns Type Description DistSegment3Triangle3 | Improve this Doc View Source Get() Declaration public double Get() Returns Type Description Double | Improve this Doc View Source GetSquared() Declaration public double GetSquared() Returns Type Description Double"
  },
  "api/g3.DistTriangle3Triangle3.html": {
    "href": "api/g3.DistTriangle3Triangle3.html",
    "title": "Class DistTriangle3Triangle3 | ViRGIS VR GIS",
    "keywords": "Class DistTriangle3Triangle3 Inheritance Object DistTriangle3Triangle3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DistTriangle3Triangle3 Constructors | Improve this Doc View Source DistTriangle3Triangle3(Triangle3d, Triangle3d) Declaration public DistTriangle3Triangle3(Triangle3d Triangle0in, Triangle3d Triangle1in) Parameters Type Name Description Triangle3d Triangle0in Triangle3d Triangle1in Fields | Improve this Doc View Source DistanceSquared Declaration public double DistanceSquared Field Value Type Description Double | Improve this Doc View Source Triangle0BaryCoords Declaration public Vector3d Triangle0BaryCoords Field Value Type Description Vector3d | Improve this Doc View Source Triangle0Closest Declaration public Vector3d Triangle0Closest Field Value Type Description Vector3d | Improve this Doc View Source Triangle1BaryCoords Declaration public Vector3d Triangle1BaryCoords Field Value Type Description Vector3d | Improve this Doc View Source Triangle1Closest Declaration public Vector3d Triangle1Closest Field Value Type Description Vector3d Properties | Improve this Doc View Source Triangle0 Declaration public Triangle3d Triangle0 { get; set; } Property Value Type Description Triangle3d | Improve this Doc View Source Triangle1 Declaration public Triangle3d Triangle1 { get; set; } Property Value Type Description Triangle3d Methods | Improve this Doc View Source Compute() Declaration public DistTriangle3Triangle3 Compute() Returns Type Description DistTriangle3Triangle3 | Improve this Doc View Source Get() Declaration public double Get() Returns Type Description Double | Improve this Doc View Source GetSquared() Declaration public double GetSquared() Returns Type Description Double"
  },
  "api/g3.DMesh3.CompactInfo.html": {
    "href": "api/g3.DMesh3.CompactInfo.html",
    "title": "Struct DMesh3.CompactInfo | ViRGIS VR GIS",
    "keywords": "Struct DMesh3.CompactInfo Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct CompactInfo Fields | Improve this Doc View Source MapV Declaration public IIndexMap MapV Field Value Type Description IIndexMap"
  },
  "api/g3.DMesh3.EdgeCollapseInfo.html": {
    "href": "api/g3.DMesh3.EdgeCollapseInfo.html",
    "title": "Struct DMesh3.EdgeCollapseInfo | ViRGIS VR GIS",
    "keywords": "Struct DMesh3.EdgeCollapseInfo Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct EdgeCollapseInfo Fields | Improve this Doc View Source bIsBoundary Declaration public bool bIsBoundary Field Value Type Description Boolean | Improve this Doc View Source eCollapsed Declaration public int eCollapsed Field Value Type Description Int32 | Improve this Doc View Source eKept0 Declaration public int eKept0 Field Value Type Description Int32 | Improve this Doc View Source eKept1 Declaration public int eKept1 Field Value Type Description Int32 | Improve this Doc View Source eRemoved0 Declaration public int eRemoved0 Field Value Type Description Int32 | Improve this Doc View Source eRemoved1 Declaration public int eRemoved1 Field Value Type Description Int32 | Improve this Doc View Source tRemoved0 Declaration public int tRemoved0 Field Value Type Description Int32 | Improve this Doc View Source tRemoved1 Declaration public int tRemoved1 Field Value Type Description Int32 | Improve this Doc View Source vKept Declaration public int vKept Field Value Type Description Int32 | Improve this Doc View Source vRemoved Declaration public int vRemoved Field Value Type Description Int32"
  },
  "api/g3.DMesh3.EdgeFlipInfo.html": {
    "href": "api/g3.DMesh3.EdgeFlipInfo.html",
    "title": "Struct DMesh3.EdgeFlipInfo | ViRGIS VR GIS",
    "keywords": "Struct DMesh3.EdgeFlipInfo Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct EdgeFlipInfo Fields | Improve this Doc View Source eID Declaration public int eID Field Value Type Description Int32 | Improve this Doc View Source ov0 Declaration public int ov0 Field Value Type Description Int32 | Improve this Doc View Source ov1 Declaration public int ov1 Field Value Type Description Int32 | Improve this Doc View Source t0 Declaration public int t0 Field Value Type Description Int32 | Improve this Doc View Source t1 Declaration public int t1 Field Value Type Description Int32 | Improve this Doc View Source v0 Declaration public int v0 Field Value Type Description Int32 | Improve this Doc View Source v1 Declaration public int v1 Field Value Type Description Int32"
  },
  "api/g3.DMesh3.EdgeSplitInfo.html": {
    "href": "api/g3.DMesh3.EdgeSplitInfo.html",
    "title": "Struct DMesh3.EdgeSplitInfo | ViRGIS VR GIS",
    "keywords": "Struct DMesh3.EdgeSplitInfo Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct EdgeSplitInfo Fields | Improve this Doc View Source bIsBoundary Declaration public bool bIsBoundary Field Value Type Description Boolean | Improve this Doc View Source eNewBN Declaration public int eNewBN Field Value Type Description Int32 | Improve this Doc View Source eNewCN Declaration public int eNewCN Field Value Type Description Int32 | Improve this Doc View Source eNewDN Declaration public int eNewDN Field Value Type Description Int32 | Improve this Doc View Source eNewT2 Declaration public int eNewT2 Field Value Type Description Int32 | Improve this Doc View Source eNewT3 Declaration public int eNewT3 Field Value Type Description Int32 | Improve this Doc View Source vNew Declaration public int vNew Field Value Type Description Int32"
  },
  "api/g3.DMesh3.html": {
    "href": "api/g3.DMesh3.html",
    "title": "Class DMesh3 | ViRGIS VR GIS",
    "keywords": "Class DMesh3 Inheritance Object DMesh3 Implements IDeformableMesh IMesh IPointSet Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DMesh3 : IDeformableMesh, IMesh, IPointSet Constructors | Improve this Doc View Source DMesh3(DMesh3, Boolean, MeshComponents) Declaration public DMesh3(DMesh3 copy, bool bCompact, MeshComponents flags) Parameters Type Name Description DMesh3 copy Boolean bCompact MeshComponents flags | Improve this Doc View Source DMesh3(DMesh3, Boolean, Boolean, Boolean, Boolean) Declaration public DMesh3(DMesh3 copy, bool bCompact = false, bool bWantNormals = true, bool bWantColors = true, bool bWantUVs = true) Parameters Type Name Description DMesh3 copy Boolean bCompact Boolean bWantNormals Boolean bWantColors Boolean bWantUVs | Improve this Doc View Source DMesh3(IMesh, MeshHints, MeshComponents) Declaration public DMesh3(IMesh copy, MeshHints hints, MeshComponents flags) Parameters Type Name Description IMesh copy MeshHints hints MeshComponents flags | Improve this Doc View Source DMesh3(IMesh, MeshHints, Boolean, Boolean, Boolean) Declaration public DMesh3(IMesh copy, MeshHints hints, bool bWantNormals = true, bool bWantColors = true, bool bWantUVs = true) Parameters Type Name Description IMesh copy MeshHints hints Boolean bWantNormals Boolean bWantColors Boolean bWantUVs | Improve this Doc View Source DMesh3(MeshComponents) Declaration public DMesh3(MeshComponents flags) Parameters Type Name Description MeshComponents flags | Improve this Doc View Source DMesh3(Boolean, Boolean, Boolean, Boolean) Declaration public DMesh3(bool bWantNormals = true, bool bWantColors = false, bool bWantUVs = false, bool bWantTriGroups = false) Parameters Type Name Description Boolean bWantNormals Boolean bWantColors Boolean bWantUVs Boolean bWantTriGroups Fields | Improve this Doc View Source InvalidEdge Declaration public static readonly Index2i InvalidEdge Field Value Type Description Index2i | Improve this Doc View Source InvalidID Declaration public const int InvalidID = -1 Field Value Type Description Int32 | Improve this Doc View Source InvalidTriangle Declaration public static readonly Index3i InvalidTriangle Field Value Type Description Index3i | Improve this Doc View Source InvalidVertex Declaration public static readonly Vector3d InvalidVertex Field Value Type Description Vector3d | Improve this Doc View Source NonManifoldID Declaration public const int NonManifoldID = -2 Field Value Type Description Int32 Properties | Improve this Doc View Source CachedBounds cached bounding box, lazily re-computed on access if mesh has changed Declaration public AxisAlignedBox3d CachedBounds { get; } Property Value Type Description AxisAlignedBox3d | Improve this Doc View Source CachedIsClosed Declaration public bool CachedIsClosed { get; } Property Value Type Description Boolean | Improve this Doc View Source ColorsBuffer Declaration public DVector<float> ColorsBuffer { get; set; } Property Value Type Description DVector < Single > | Improve this Doc View Source CompactMetric returns measure of compactness in range [0,1], where 1 is fully compacted Declaration public double CompactMetric { get; } Property Value Type Description Double | Improve this Doc View Source Components Declaration public MeshComponents Components { get; } Property Value Type Description MeshComponents | Improve this Doc View Source EdgeCount Declaration public int EdgeCount { get; } Property Value Type Description Int32 | Improve this Doc View Source EdgesBuffer Declaration public DVector<int> EdgesBuffer { get; set; } Property Value Type Description DVector < Int32 > | Improve this Doc View Source EdgesRefCounts Declaration public RefCountVector EdgesRefCounts { get; set; } Property Value Type Description RefCountVector | Improve this Doc View Source GroupsBuffer Declaration public DVector<int> GroupsBuffer { get; set; } Property Value Type Description DVector < Int32 > | Improve this Doc View Source HasMetadata Declaration public bool HasMetadata { get; } Property Value Type Description Boolean | Improve this Doc View Source HasTriangleGroups Declaration public bool HasTriangleGroups { get; } Property Value Type Description Boolean | Improve this Doc View Source HasVertexColors Declaration public bool HasVertexColors { get; } Property Value Type Description Boolean | Improve this Doc View Source HasVertexNormals Declaration public bool HasVertexNormals { get; } Property Value Type Description Boolean | Improve this Doc View Source HasVertexUVs Declaration public bool HasVertexUVs { get; } Property Value Type Description Boolean | Improve this Doc View Source IsCompact returns true if vertices, edges, and triangles are all \"dense\" (Count == MaxID) Declaration public bool IsCompact { get; } Property Value Type Description Boolean | Improve this Doc View Source IsCompactT returns true if triangle count == max triangle id Declaration public bool IsCompactT { get; } Property Value Type Description Boolean | Improve this Doc View Source IsCompactV Returns true if vertex count == max vertex id Declaration public bool IsCompactV { get; } Property Value Type Description Boolean | Improve this Doc View Source MaxEdgeID Declaration public int MaxEdgeID { get; } Property Value Type Description Int32 | Improve this Doc View Source MaxGroupID Declaration public int MaxGroupID { get; } Property Value Type Description Int32 | Improve this Doc View Source MaxTriangleID Declaration public int MaxTriangleID { get; } Property Value Type Description Int32 | Improve this Doc View Source MaxVertexID Declaration public int MaxVertexID { get; } Property Value Type Description Int32 | Improve this Doc View Source NormalsBuffer Declaration public DVector<float> NormalsBuffer { get; set; } Property Value Type Description DVector < Single > | Improve this Doc View Source ShapeTimestamp ShapeTimestamp is incremented any time any vertex position is changed or the mesh topology is modified Declaration public int ShapeTimestamp { get; } Property Value Type Description Int32 | Improve this Doc View Source Timestamp Timestamp is incremented any time any change is made to the mesh Declaration public int Timestamp { get; } Property Value Type Description Int32 | Improve this Doc View Source TriangleCount Declaration public int TriangleCount { get; } Property Value Type Description Int32 | Improve this Doc View Source TrianglesBuffer Declaration public DVector<int> TrianglesBuffer { get; set; } Property Value Type Description DVector < Int32 > | Improve this Doc View Source TrianglesRefCounts Declaration public RefCountVector TrianglesRefCounts { get; set; } Property Value Type Description RefCountVector | Improve this Doc View Source UVBuffer Declaration public DVector<float> UVBuffer { get; set; } Property Value Type Description DVector < Single > | Improve this Doc View Source VertexCount Declaration public int VertexCount { get; } Property Value Type Description Int32 | Improve this Doc View Source VertexEdges Declaration public SmallListSet VertexEdges { get; set; } Property Value Type Description SmallListSet | Improve this Doc View Source VerticesBuffer Declaration public DVector<double> VerticesBuffer { get; set; } Property Value Type Description DVector < Double > | Improve this Doc View Source VerticesRefCounts Declaration public RefCountVector VerticesRefCounts { get; set; } Property Value Type Description RefCountVector Methods | Improve this Doc View Source AllocateTriangleGroup() Declaration public int AllocateTriangleGroup() Returns Type Description Int32 | Improve this Doc View Source AppendTriangle(Index3i, Int32) Declaration public int AppendTriangle(Index3i tv, int gid = -1) Parameters Type Name Description Index3i tv Int32 gid Returns Type Description Int32 | Improve this Doc View Source AppendTriangle(Int32, Int32, Int32, Int32) Declaration public int AppendTriangle(int v0, int v1, int v2, int gid = -1) Parameters Type Name Description Int32 v0 Int32 v1 Int32 v2 Int32 gid Returns Type Description Int32 | Improve this Doc View Source AppendVertex(DMesh3, Int32) copy vertex fromVID from existing source mesh, returns new vid Declaration public int AppendVertex(DMesh3 from, int fromVID) Parameters Type Name Description DMesh3 from Int32 fromVID Returns Type Description Int32 | Improve this Doc View Source AppendVertex(NewVertexInfo) Declaration public int AppendVertex(NewVertexInfo info) Parameters Type Name Description NewVertexInfo info Returns Type Description Int32 | Improve this Doc View Source AppendVertex(ref NewVertexInfo) Append new vertex at position and other fields, returns new vid Declaration public int AppendVertex(ref NewVertexInfo info) Parameters Type Name Description NewVertexInfo info Returns Type Description Int32 | Improve this Doc View Source AppendVertex(Vector3d) Append new vertex at position, returns new vid Declaration public int AppendVertex(Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Int32 | Improve this Doc View Source AttachMetadata(String, Object) Declaration public void AttachMetadata(string key, object o) Parameters Type Name Description String key Object o | Improve this Doc View Source BeginUnsafeTrianglesInsert() Declaration public virtual void BeginUnsafeTrianglesInsert() | Improve this Doc View Source BeginUnsafeVerticesInsert() Declaration public virtual void BeginUnsafeVerticesInsert() | Improve this Doc View Source BoundaryEdgeIndices() Enumerate ids of boundary edges Declaration public IEnumerable<int> BoundaryEdgeIndices() Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source CheckValidity(Boolean, FailMode) Declaration public bool CheckValidity(bool bAllowNonManifoldVertices = false, FailMode eFailMode = FailMode.Throw) Parameters Type Name Description Boolean bAllowNonManifoldVertices FailMode eFailMode Returns Type Description Boolean | Improve this Doc View Source ClearMetadata() Declaration public void ClearMetadata() | Improve this Doc View Source CollapseEdge(Int32, Int32, out DMesh3.EdgeCollapseInfo) Declaration public MeshResult CollapseEdge(int vKeep, int vRemove, out DMesh3.EdgeCollapseInfo collapse) Parameters Type Name Description Int32 vKeep Int32 vRemove DMesh3.EdgeCollapseInfo collapse Returns Type Description MeshResult | Improve this Doc View Source CompactCopy(DMesh3, Boolean, Boolean, Boolean) Declaration public DMesh3.CompactInfo CompactCopy(DMesh3 copy, bool bNormals = true, bool bColors = true, bool bUVs = true) Parameters Type Name Description DMesh3 copy Boolean bNormals Boolean bColors Boolean bUVs Returns Type Description DMesh3.CompactInfo | Improve this Doc View Source CompactInPlace(Boolean) Compact mesh in-place, by moving vertices around and rewriting indices. Should be faster if the amount of compacting is not too significant, and is useful in some places. [TODO] vertex_edges is not compacted. does not affect indices, but does keep memory. If bComputeCompactInfo=false, the returned CompactInfo is not initialized Declaration public DMesh3.CompactInfo CompactInPlace(bool bComputeCompactInfo = false) Parameters Type Name Description Boolean bComputeCompactInfo Returns Type Description DMesh3.CompactInfo | Improve this Doc View Source Copy(DMesh3, Boolean, Boolean, Boolean) Declaration public void Copy(DMesh3 copy, bool bNormals = true, bool bColors = true, bool bUVs = true) Parameters Type Name Description DMesh3 copy Boolean bNormals Boolean bColors Boolean bUVs | Improve this Doc View Source Copy(IMesh, MeshHints, Boolean, Boolean, Boolean) Copy IMesh into this mesh. Currently always compacts. [TODO] if we get dense hint, we could be smarter w/ vertex map, etc Declaration public DMesh3.CompactInfo Copy(IMesh copy, MeshHints hints, bool bNormals = true, bool bColors = true, bool bUVs = true) Parameters Type Name Description IMesh copy MeshHints hints Boolean bNormals Boolean bColors Boolean bUVs Returns Type Description DMesh3.CompactInfo | Improve this Doc View Source debug_check_is_edge(Int32) Declaration [Conditional(\"DEBUG\")] public void debug_check_is_edge(int e) Parameters Type Name Description Int32 e | Improve this Doc View Source debug_check_is_triangle(Int32) Declaration [Conditional(\"DEBUG\")] public void debug_check_is_triangle(int t) Parameters Type Name Description Int32 t | Improve this Doc View Source debug_check_is_vertex(Int32) Declaration [Conditional(\"DEBUG\")] public void debug_check_is_vertex(int v) Parameters Type Name Description Int32 v | Improve this Doc View Source debug_print_mesh() Declaration public void debug_print_mesh() | Improve this Doc View Source debug_print_vertex(Int32) Declaration public void debug_print_vertex(int v) Parameters Type Name Description Int32 v | Improve this Doc View Source DiscardTriangleGroups() Declaration public void DiscardTriangleGroups() | Improve this Doc View Source DiscardVertexColors() Declaration public void DiscardVertexColors() | Improve this Doc View Source DiscardVertexNormals() Declaration public void DiscardVertexNormals() | Improve this Doc View Source DiscardVertexUVs() Declaration public void DiscardVertexUVs() | Improve this Doc View Source edge_has_t(Int32, Int32) Declaration public bool edge_has_t(int eid, int tid) Parameters Type Name Description Int32 eid Int32 tid Returns Type Description Boolean | Improve this Doc View Source edge_has_v(Int32, Int32) Declaration public bool edge_has_v(int eid, int vid) Parameters Type Name Description Int32 eid Int32 vid Returns Type Description Boolean | Improve this Doc View Source edge_is_boundary(Int32) Declaration [Obsolete(\"edge_is_boundary will be removed in future, use IsBoundaryEdge instead\")] public bool edge_is_boundary(int eid) Parameters Type Name Description Int32 eid Returns Type Description Boolean | Improve this Doc View Source edge_other_t(Int32, Int32) Declaration public int edge_other_t(int eID, int tid) Parameters Type Name Description Int32 eID Int32 tid Returns Type Description Int32 | Improve this Doc View Source edge_other_v(Int32, Int32) Declaration public int edge_other_v(int eID, int vID) Parameters Type Name Description Int32 eID Int32 vID Returns Type Description Int32 | Improve this Doc View Source EdgeIndices() Declaration public IEnumerable<int> EdgeIndices() Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source Edges() Enumerage edges. return value is [v0,v1,t0,t1], where t1 will be InvalidID if this is a boundary edge Declaration public IEnumerable<Index4i> Edges() Returns Type Description IEnumerable < Index4i > | Improve this Doc View Source EnableTriangleGroups(Int32) Declaration public void EnableTriangleGroups(int initial_group = 0) Parameters Type Name Description Int32 initial_group | Improve this Doc View Source EnableVertexColors(Vector3f) Declaration public void EnableVertexColors(Vector3f initial_color) Parameters Type Name Description Vector3f initial_color | Improve this Doc View Source EnableVertexNormals(Vector3f) Declaration public void EnableVertexNormals(Vector3f initial_normal) Parameters Type Name Description Vector3f initial_normal | Improve this Doc View Source EnableVertexUVs(Vector2f) Declaration public void EnableVertexUVs(Vector2f initial_uv) Parameters Type Name Description Vector2f initial_uv | Improve this Doc View Source EndUnsafeTrianglesInsert() Declaration public virtual void EndUnsafeTrianglesInsert() | Improve this Doc View Source EndUnsafeVerticesInsert() Declaration public virtual void EndUnsafeVerticesInsert() | Improve this Doc View Source find_tri_neighbour_edge(Int32, Int32, Int32) Declaration public int find_tri_neighbour_edge(int tID, int vA, int vB) Parameters Type Name Description Int32 tID Int32 vA Int32 vB Returns Type Description Int32 | Improve this Doc View Source find_tri_neighbour_index(Int32, Int32, Int32) Declaration public int find_tri_neighbour_index(int tID, int vA, int vB) Parameters Type Name Description Int32 tID Int32 vA Int32 vB Returns Type Description Int32 | Improve this Doc View Source FindEdge(Int32, Int32) Find edgeid for edge [a,b] Declaration public int FindEdge(int vA, int vB) Parameters Type Name Description Int32 vA Int32 vB Returns Type Description Int32 | Improve this Doc View Source FindEdgeFromTri(Int32, Int32, Int32) Find edgeid for edge [a,b] from triangle that contains the edge. This is faster than FindEdge() because it is constant-time Declaration public int FindEdgeFromTri(int vA, int vB, int tID) Parameters Type Name Description Int32 vA Int32 vB Int32 tID Returns Type Description Int32 | Improve this Doc View Source FindMetadata(String) Declaration public object FindMetadata(string key) Parameters Type Name Description String key Returns Type Description Object | Improve this Doc View Source FindTriangle(Int32, Int32, Int32) Find triangle made up of any permutation of vertices [a,b,c] Declaration public int FindTriangle(int a, int b, int c) Parameters Type Name Description Int32 a Int32 b Int32 c Returns Type Description Int32 | Improve this Doc View Source FlipEdge(Int32, out DMesh3.EdgeFlipInfo) Declaration public MeshResult FlipEdge(int eab, out DMesh3.EdgeFlipInfo flip) Parameters Type Name Description Int32 eab DMesh3.EdgeFlipInfo flip Returns Type Description MeshResult | Improve this Doc View Source FlipEdge(Int32, Int32, out DMesh3.EdgeFlipInfo) Declaration public MeshResult FlipEdge(int vA, int vB, out DMesh3.EdgeFlipInfo flip) Parameters Type Name Description Int32 vA Int32 vB DMesh3.EdgeFlipInfo flip Returns Type Description MeshResult | Improve this Doc View Source GetAllVertexGroups(Int32) Declaration public List<int> GetAllVertexGroups(int vID) Parameters Type Name Description Int32 vID Returns Type Description List < Int32 > | Improve this Doc View Source GetAllVertexGroups(Int32, ref List<Int32>) returns all group IDs at vertex Declaration public bool GetAllVertexGroups(int vID, ref List<int> groups) Parameters Type Name Description Int32 vID List < Int32 > groups Returns Type Description Boolean | Improve this Doc View Source GetBounds() Computes bounding box of all vertices. Declaration public AxisAlignedBox3d GetBounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source GetEdge(Int32) return [v0,v1,t0,t1], or Index4i.Max if eid is invalid Declaration public Index4i GetEdge(int eID) Parameters Type Name Description Int32 eID Returns Type Description Index4i | Improve this Doc View Source GetEdge(Int32, ref Int32, ref Int32, ref Int32, ref Int32) Declaration public bool GetEdge(int eID, ref int a, ref int b, ref int t0, ref int t1) Parameters Type Name Description Int32 eID Int32 a Int32 b Int32 t0 Int32 t1 Returns Type Description Boolean | Improve this Doc View Source GetEdgeNormal(Int32) Declaration public Vector3d GetEdgeNormal(int eID) Parameters Type Name Description Int32 eID Returns Type Description Vector3d | Improve this Doc View Source GetEdgeOpposingV(Int32) If edge has vertices [a,b], and is connected two triangles [a,b,c] and [a,b,d], this returns [c,d], or [c,InvalidID] for a boundary edge Declaration public Index2i GetEdgeOpposingV(int eID) Parameters Type Name Description Int32 eID Returns Type Description Index2i | Improve this Doc View Source GetEdgePoint(Int32, Double) Declaration public Vector3d GetEdgePoint(int eID, double t) Parameters Type Name Description Int32 eID Double t Returns Type Description Vector3d | Improve this Doc View Source GetEdgeT(Int32) Declaration public Index2i GetEdgeT(int eID) Parameters Type Name Description Int32 eID Returns Type Description Index2i | Improve this Doc View Source GetEdgeV(Int32) Declaration public Index2i GetEdgeV(int eID) Parameters Type Name Description Int32 eID Returns Type Description Index2i | Improve this Doc View Source GetEdgeV(Int32, ref Vector3d, ref Vector3d) Declaration public bool GetEdgeV(int eID, ref Vector3d a, ref Vector3d b) Parameters Type Name Description Int32 eID Vector3d a Vector3d b Returns Type Description Boolean | Improve this Doc View Source GetMaxVtxEdgeCount() Declaration public int GetMaxVtxEdgeCount() Returns Type Description Int32 | Improve this Doc View Source GetOrientedBoundaryEdgeV(Int32) Declaration public Index2i GetOrientedBoundaryEdgeV(int eID) Parameters Type Name Description Int32 eID Returns Type Description Index2i | Improve this Doc View Source GetTriangle(Int32) Declaration public Index3i GetTriangle(int tID) Parameters Type Name Description Int32 tID Returns Type Description Index3i | Improve this Doc View Source GetTriangleGroup(Int32) Declaration public int GetTriangleGroup(int tID) Parameters Type Name Description Int32 tID Returns Type Description Int32 | Improve this Doc View Source GetTriArea(Int32) Declaration public double GetTriArea(int tID) Parameters Type Name Description Int32 tID Returns Type Description Double | Improve this Doc View Source GetTriBaryNormal(Int32, Double, Double, Double) interpolate vertex normals of triangle using barycentric coordinates Declaration public Vector3d GetTriBaryNormal(int tID, double bary0, double bary1, double bary2) Parameters Type Name Description Int32 tID Double bary0 Double bary1 Double bary2 Returns Type Description Vector3d | Improve this Doc View Source GetTriBaryPoint(Int32, Double, Double, Double) Declaration public Vector3d GetTriBaryPoint(int tID, double bary0, double bary1, double bary2) Parameters Type Name Description Int32 tID Double bary0 Double bary1 Double bary2 Returns Type Description Vector3d | Improve this Doc View Source GetTriBaryPoint(Int32, Double, Double, Double, out NewVertexInfo) Compute interpolated vertex attributes at point of triangle Declaration public void GetTriBaryPoint(int tID, double bary0, double bary1, double bary2, out NewVertexInfo vinfo) Parameters Type Name Description Int32 tID Double bary0 Double bary1 Double bary2 NewVertexInfo vinfo | Improve this Doc View Source GetTriBounds(Int32) construct bounding box of triangle as efficiently as possible Declaration public AxisAlignedBox3d GetTriBounds(int tID) Parameters Type Name Description Int32 tID Returns Type Description AxisAlignedBox3d | Improve this Doc View Source GetTriCentroid(Int32) efficiently compute centroid of triangle Declaration public Vector3d GetTriCentroid(int tID) Parameters Type Name Description Int32 tID Returns Type Description Vector3d | Improve this Doc View Source GetTriEdge(Int32, Int32) Declaration public int GetTriEdge(int tid, int j) Parameters Type Name Description Int32 tid Int32 j Returns Type Description Int32 | Improve this Doc View Source GetTriEdges(Int32) Declaration public Index3i GetTriEdges(int tID) Parameters Type Name Description Int32 tID Returns Type Description Index3i | Improve this Doc View Source GetTriFrame(Int32, Int32) Construct stable frame at triangle centroid, where frame.Z is face normal, and frame.X is aligned with edge nEdge of triangle. Declaration public Frame3f GetTriFrame(int tID, int nEdge = 0) Parameters Type Name Description Int32 tID Int32 nEdge Returns Type Description Frame3f | Improve this Doc View Source GetTriInfo(Int32, out Vector3d, out Double, out Vector3d) Declaration public void GetTriInfo(int tID, out Vector3d normal, out double fArea, out Vector3d vCentroid) Parameters Type Name Description Int32 tID Vector3d normal Double fArea Vector3d vCentroid | Improve this Doc View Source GetTriInternalAngleR(Int32, Int32) compute internal angle at vertex i of triangle (where i is 0,1,2); TODO can be more efficient here, probably... Declaration public double GetTriInternalAngleR(int tID, int i) Parameters Type Name Description Int32 tID Int32 i Returns Type Description Double | Improve this Doc View Source GetTriNeighbourTris(Int32) Declaration public Index3i GetTriNeighbourTris(int tID) Parameters Type Name Description Int32 tID Returns Type Description Index3i | Improve this Doc View Source GetTriNormal(Int32) Declaration public Vector3d GetTriNormal(int tID) Parameters Type Name Description Int32 tID Returns Type Description Vector3d | Improve this Doc View Source GetTriSolidAngle(Int32, ref Vector3d) compute solid angle of oriented triangle tID relative to point p - see WindingNumber() Declaration public double GetTriSolidAngle(int tID, ref Vector3d p) Parameters Type Name Description Int32 tID Vector3d p Returns Type Description Double | Improve this Doc View Source GetTriVertex(Int32, Int32) Declaration public Vector3d GetTriVertex(int tid, int j) Parameters Type Name Description Int32 tid Int32 j Returns Type Description Vector3d | Improve this Doc View Source GetTriVertices(Int32, ref Vector3d, ref Vector3d, ref Vector3d) Declaration public void GetTriVertices(int tID, ref Vector3d v0, ref Vector3d v1, ref Vector3d v2) Parameters Type Name Description Int32 tID Vector3d v0 Vector3d v1 Vector3d v2 | Improve this Doc View Source GetVertex(Int32) Declaration public Vector3d GetVertex(int vID) Parameters Type Name Description Int32 vID Returns Type Description Vector3d | Improve this Doc View Source GetVertex(Int32, ref NewVertexInfo, Boolean, Boolean, Boolean) Declaration public bool GetVertex(int vID, ref NewVertexInfo vinfo, bool bWantNormals, bool bWantColors, bool bWantUVs) Parameters Type Name Description Int32 vID NewVertexInfo vinfo Boolean bWantNormals Boolean bWantColors Boolean bWantUVs Returns Type Description Boolean | Improve this Doc View Source GetVertexAll(Int32) Declaration public NewVertexInfo GetVertexAll(int i) Parameters Type Name Description Int32 i Returns Type Description NewVertexInfo | Improve this Doc View Source GetVertexColor(Int32) Declaration public Vector3f GetVertexColor(int vID) Parameters Type Name Description Int32 vID Returns Type Description Vector3f | Improve this Doc View Source GetVertexf(Int32) Declaration public Vector3f GetVertexf(int vID) Parameters Type Name Description Int32 vID Returns Type Description Vector3f | Improve this Doc View Source GetVertexFrame(Int32, Boolean) Compute a normal/tangent frame at vertex that is \"stable\" as long as the mesh topology doesn't change, meaning that one axis of the frame will be computed from projection of outgoing edge. Requires that vertex normals are available. by default, frame.Z is normal, and .X points along mesh edge if bFrameNormalY, then frame.Y is normal (X still points along mesh edge) Declaration public Frame3f GetVertexFrame(int vID, bool bFrameNormalY = false) Parameters Type Name Description Int32 vID Boolean bFrameNormalY Returns Type Description Frame3f | Improve this Doc View Source GetVertexGroups(Int32, out Index4i) returns up to 4 group IDs at vertex. Returns false if > 4 encountered Declaration public bool GetVertexGroups(int vID, out Index4i groups) Parameters Type Name Description Int32 vID Index4i groups Returns Type Description Boolean | Improve this Doc View Source GetVertexNormal(Int32) Declaration public Vector3f GetVertexNormal(int vID) Parameters Type Name Description Int32 vID Returns Type Description Vector3f | Improve this Doc View Source GetVertexUV(Int32) Declaration public Vector2f GetVertexUV(int vID) Parameters Type Name Description Int32 vID Returns Type Description Vector2f | Improve this Doc View Source GetVtxEdgeCount(Int32) Declaration public int GetVtxEdgeCount(int vID) Parameters Type Name Description Int32 vID Returns Type Description Int32 | Improve this Doc View Source GetVtxEdges(Int32) Declaration [Obsolete(\"GetVtxEdges will be removed in future, use VtxEdgesItr instead\")] public ReadOnlyCollection<int> GetVtxEdges(int vID) Parameters Type Name Description Int32 vID Returns Type Description ReadOnlyCollection < Int32 > | Improve this Doc View Source GetVtxEdgeValence(Int32) Declaration [Obsolete(\"GetVtxEdgeValence will be removed in future, use GetVtxEdgeCount instead\")] public int GetVtxEdgeValence(int vID) Parameters Type Name Description Int32 vID Returns Type Description Int32 | Improve this Doc View Source GetVtxNbrhood(Int32, Int32, ref Int32, ref Int32, ref Int32, ref Int32, ref Int32) from edge and vert, returns other vert, two opposing verts, and two triangles Declaration public void GetVtxNbrhood(int eID, int vID, ref int vOther, ref int oppV1, ref int oppV2, ref int t1, ref int t2) Parameters Type Name Description Int32 eID Int32 vID Int32 vOther Int32 oppV1 Int32 oppV2 Int32 t1 Int32 t2 | Improve this Doc View Source GetVtxTriangleCount(Int32, Boolean) return # of triangles attached to vID, or -1 if invalid vertex if bBruteForce = true, explicitly checks, which creates a list and is expensive default is false, uses orientation, no memory allocation Declaration public int GetVtxTriangleCount(int vID, bool bBruteForce = false) Parameters Type Name Description Int32 vID Boolean bBruteForce Returns Type Description Int32 | Improve this Doc View Source GetVtxTriangles(Int32, List<Int32>, Boolean) Get triangle one-ring at vertex. bUseOrientation is more efficient but returns incorrect result if vertex is a bowtie Declaration public MeshResult GetVtxTriangles(int vID, List<int> vTriangles, bool bUseOrientation) Parameters Type Name Description Int32 vID List < Int32 > vTriangles Boolean bUseOrientation Returns Type Description MeshResult | Improve this Doc View Source InsertTriangle(Int32, Index3i, Int32, Boolean) Insert triangle at given index, assuming it is unused. If bUnsafe, we use fast id allocation that does not update free list. You should only be using this between BeginUnsafeTrianglesInsert() / EndUnsafeTrianglesInsert() calls Declaration public MeshResult InsertTriangle(int tid, Index3i tv, int gid = -1, bool bUnsafe = false) Parameters Type Name Description Int32 tid Index3i tv Int32 gid Boolean bUnsafe Returns Type Description MeshResult | Improve this Doc View Source InsertVertex(Int32, NewVertexInfo) Declaration public MeshResult InsertVertex(int vid, NewVertexInfo info) Parameters Type Name Description Int32 vid NewVertexInfo info Returns Type Description MeshResult | Improve this Doc View Source InsertVertex(Int32, ref NewVertexInfo, Boolean) insert vertex at given index, assuming it is unused If bUnsafe, we use fast id allocation that does not update free list. You should only be using this between BeginUnsafeVerticesInsert() / EndUnsafeVerticesInsert() calls Declaration public MeshResult InsertVertex(int vid, ref NewVertexInfo info, bool bUnsafe = false) Parameters Type Name Description Int32 vid NewVertexInfo info Boolean bUnsafe Returns Type Description MeshResult | Improve this Doc View Source IsBoundaryEdge(Int32) Declaration public bool IsBoundaryEdge(int eid) Parameters Type Name Description Int32 eid Returns Type Description Boolean | Improve this Doc View Source IsBoundaryTriangle(Int32) Returns true if any edge of triangle is a boundary edge Declaration public bool IsBoundaryTriangle(int tID) Parameters Type Name Description Int32 tID Returns Type Description Boolean | Improve this Doc View Source IsBoundaryVertex(Int32) Declaration public bool IsBoundaryVertex(int vID) Parameters Type Name Description Int32 vID Returns Type Description Boolean | Improve this Doc View Source IsBowtieVertex(Int32) returns true if vID is a \"bowtie\" vertex, ie multiple disjoint triangle sets in one-ring Declaration public bool IsBowtieVertex(int vID) Parameters Type Name Description Int32 vID Returns Type Description Boolean | Improve this Doc View Source IsClosed() Declaration public bool IsClosed() Returns Type Description Boolean | Improve this Doc View Source IsEdge(Int32) Declaration public bool IsEdge(int eID) Parameters Type Name Description Int32 eID Returns Type Description Boolean | Improve this Doc View Source IsGroupBoundaryEdge(Int32) Returns true if the two triangles connected to edge have different group IDs Declaration public bool IsGroupBoundaryEdge(int eID) Parameters Type Name Description Int32 eID Returns Type Description Boolean | Improve this Doc View Source IsGroupBoundaryVertex(Int32) returns true if vertex has more than one tri group in its tri nbrhood Declaration public bool IsGroupBoundaryVertex(int vID) Parameters Type Name Description Int32 vID Returns Type Description Boolean | Improve this Doc View Source IsGroupJunctionVertex(Int32) returns true if more than two group boundary edges meet at vertex (ie 3+ groups meet at this vertex) Declaration public bool IsGroupJunctionVertex(int vID) Parameters Type Name Description Int32 vID Returns Type Description Boolean | Improve this Doc View Source IsSameMesh(DMesh3, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Single) Check if this m2 is the same as this mesh. By default only checks vertices and triangles, turn on other parameters w/ flags Declaration public bool IsSameMesh(DMesh3 m2, bool bCheckConnectivity, bool bCheckEdgeIDs = false, bool bCheckNormals = false, bool bCheckColors = false, bool bCheckUVs = false, bool bCheckGroups = false, float Epsilon = 1.1920929E-07F) Parameters Type Name Description DMesh3 m2 Boolean bCheckConnectivity Boolean bCheckEdgeIDs Boolean bCheckNormals Boolean bCheckColors Boolean bCheckUVs Boolean bCheckGroups Single Epsilon Returns Type Description Boolean | Improve this Doc View Source IsTriangle(Int32) Declaration public bool IsTriangle(int tID) Parameters Type Name Description Int32 tID Returns Type Description Boolean | Improve this Doc View Source IsVertex(Int32) Declaration public bool IsVertex(int vID) Parameters Type Name Description Int32 vID Returns Type Description Boolean | Improve this Doc View Source MergeEdges(Int32, Int32, out DMesh3.MergeEdgesInfo) Declaration public MeshResult MergeEdges(int eKeep, int eDiscard, out DMesh3.MergeEdgesInfo merge_info) Parameters Type Name Description Int32 eKeep Int32 eDiscard DMesh3.MergeEdgesInfo merge_info Returns Type Description MeshResult | Improve this Doc View Source MeshInfoString() Declaration public string MeshInfoString() Returns Type Description String | Improve this Doc View Source PokeTriangle(Int32, out DMesh3.PokeTriangleInfo) Declaration public virtual MeshResult PokeTriangle(int tid, out DMesh3.PokeTriangleInfo result) Parameters Type Name Description Int32 tid DMesh3.PokeTriangleInfo result Returns Type Description MeshResult | Improve this Doc View Source PokeTriangle(Int32, Vector3d, out DMesh3.PokeTriangleInfo) Declaration public virtual MeshResult PokeTriangle(int tid, Vector3d baryCoordinates, out DMesh3.PokeTriangleInfo result) Parameters Type Name Description Int32 tid Vector3d baryCoordinates DMesh3.PokeTriangleInfo result Returns Type Description MeshResult | Improve this Doc View Source RebuildFromEdgeRefcounts() Rebuild mesh topology. assumes that we have initialized vertices, triangles, and edges buffers, and edges refcounts. Rebuilds vertex and tri refcounts, triangle edges, vertex edges. Declaration public void RebuildFromEdgeRefcounts() | Improve this Doc View Source RemoveMetadata(String) Declaration public bool RemoveMetadata(string key) Parameters Type Name Description String key Returns Type Description Boolean | Improve this Doc View Source RemoveTriangle(Int32, Boolean, Boolean) Remove a tID from the mesh. Also removes any unreferenced edges after tri is removed. If bRemoveIsolatedVertices is false, then if you remove all tris from a vert, that vert is also removed. If bPreserveManifold, we check that you will not create a bowtie vertex (and return false). If this check is not done, you have to make sure you don't create a bowtie, because other code assumes we don't have bowties, and will not handle it properly Declaration public MeshResult RemoveTriangle(int tID, bool bRemoveIsolatedVertices = true, bool bPreserveManifold = false) Parameters Type Name Description Int32 tID Boolean bRemoveIsolatedVertices Boolean bPreserveManifold Returns Type Description MeshResult | Improve this Doc View Source RemoveVertex(Int32, Boolean, Boolean) Remove vertex vID, and all connected triangles if bRemoveAllTriangles = true (if false, them throws exception if there are still any triangles!) if bPreserveManifold, checks that we will not create a bowtie vertex first Declaration public MeshResult RemoveVertex(int vID, bool bRemoveAllTriangles = true, bool bPreserveManifold = false) Parameters Type Name Description Int32 vID Boolean bRemoveAllTriangles Boolean bPreserveManifold Returns Type Description MeshResult | Improve this Doc View Source ReverseOrientation(Boolean) Declaration public void ReverseOrientation(bool bFlipNormals = true) Parameters Type Name Description Boolean bFlipNormals | Improve this Doc View Source ReverseTriOrientation(Int32) Declaration public MeshResult ReverseTriOrientation(int tID) Parameters Type Name Description Int32 tID Returns Type Description MeshResult | Improve this Doc View Source SetTriangle(Int32, Index3i, Boolean) Declaration public virtual MeshResult SetTriangle(int tID, Index3i newv, bool bRemoveIsolatedVertices = true) Parameters Type Name Description Int32 tID Index3i newv Boolean bRemoveIsolatedVertices Returns Type Description MeshResult | Improve this Doc View Source SetTriangleGroup(Int32, Int32) Declaration public void SetTriangleGroup(int tid, int group_id) Parameters Type Name Description Int32 tid Int32 group_id | Improve this Doc View Source SetVertex(Int32, Vector3d) Declaration public void SetVertex(int vID, Vector3d vNewPos) Parameters Type Name Description Int32 vID Vector3d vNewPos | Improve this Doc View Source SetVertexColor(Int32, Vector3f) Declaration public void SetVertexColor(int vID, Vector3f vNewColor) Parameters Type Name Description Int32 vID Vector3f vNewColor | Improve this Doc View Source SetVertexNormal(Int32, Vector3f) Declaration public void SetVertexNormal(int vID, Vector3f vNewNormal) Parameters Type Name Description Int32 vID Vector3f vNewNormal | Improve this Doc View Source SetVertexUV(Int32, Vector2f) Declaration public void SetVertexUV(int vID, Vector2f vNewUV) Parameters Type Name Description Int32 vID Vector2f vNewUV | Improve this Doc View Source SplitEdge(Int32, out DMesh3.EdgeSplitInfo, Double) Split edge eab. split_t defines position along edge, and is assumed to be based on order of vertices returned by GetEdgeV() Declaration public MeshResult SplitEdge(int eab, out DMesh3.EdgeSplitInfo split, double split_t = 0.5) Parameters Type Name Description Int32 eab DMesh3.EdgeSplitInfo split Double split_t Returns Type Description MeshResult | Improve this Doc View Source SplitEdge(Int32, Int32, out DMesh3.EdgeSplitInfo) Declaration public MeshResult SplitEdge(int vA, int vB, out DMesh3.EdgeSplitInfo split) Parameters Type Name Description Int32 vA Int32 vB DMesh3.EdgeSplitInfo split Returns Type Description MeshResult | Improve this Doc View Source tri_has_neighbour_t(Int32, Int32) Declaration public bool tri_has_neighbour_t(int tCheck, int tNbr) Parameters Type Name Description Int32 tCheck Int32 tNbr Returns Type Description Boolean | Improve this Doc View Source tri_has_sequential_v(Int32, Int32, Int32) Declaration public bool tri_has_sequential_v(int tID, int vA, int vB) Parameters Type Name Description Int32 tID Int32 vA Int32 vB Returns Type Description Boolean | Improve this Doc View Source tri_has_v(Int32, Int32) Declaration public bool tri_has_v(int tID, int vID) Parameters Type Name Description Int32 tID Int32 vID Returns Type Description Boolean | Improve this Doc View Source tri_is_boundary(Int32) Declaration public bool tri_is_boundary(int tID) Parameters Type Name Description Int32 tID Returns Type Description Boolean | Improve this Doc View Source TriangleIndices() Declaration public IEnumerable<int> TriangleIndices() Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source Triangles() Enumerate triangles Declaration public IEnumerable<Index3i> Triangles() Returns Type Description IEnumerable < Index3i > | Improve this Doc View Source TriTrianglesItr(Int32) Declaration public IEnumerable<int> TriTrianglesItr(int tID) Parameters Type Name Description Int32 tID Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source vertex_is_boundary(Int32) Declaration [Obsolete(\"vertex_is_boundary will be removed in future, use IsBoundaryVertex instead\")] public bool vertex_is_boundary(int vID) Parameters Type Name Description Int32 vID Returns Type Description Boolean | Improve this Doc View Source VertexIndices() Declaration public IEnumerable<int> VertexIndices() Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source Vertices() Enumerate vertices Declaration public IEnumerable<Vector3d> Vertices() Returns Type Description IEnumerable < Vector3d > | Improve this Doc View Source VtxAllBoundaryEdges(Int32, Int32[]) Find edge ids of boundary edges connected to vertex. e needs to be large enough (ie call VtxBoundaryEdges, or as large as max one-ring) returns count, ie number of elements of e that were filled Declaration public int VtxAllBoundaryEdges(int vID, int[] e) Parameters Type Name Description Int32 vID Int32 [] e Returns Type Description Int32 | Improve this Doc View Source VtxBoundaryEdges(Int32, ref Int32, ref Int32) Returns count of boundary edges at vertex, and the first two boundary edges if found. If return is > 2, call VtxAllBoundaryEdges Declaration public int VtxBoundaryEdges(int vID, ref int e0, ref int e1) Parameters Type Name Description Int32 vID Int32 e0 Int32 e1 Returns Type Description Int32 | Improve this Doc View Source VtxEdgesItr(Int32) Enumerate edge ids connected to vertex (ie edge one-ring) Declaration public IEnumerable<int> VtxEdgesItr(int vID) Parameters Type Name Description Int32 vID Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source VtxOneRingCentroid(Int32, ref Vector3d) Fastest possible one-ring centroid. This is used inside many other algorithms so it helps to have it be maximally efficient Declaration public void VtxOneRingCentroid(int vID, ref Vector3d centroid) Parameters Type Name Description Int32 vID Vector3d centroid | Improve this Doc View Source VtxTrianglesItr(Int32) iterate over triangle IDs of vertex one-ring Declaration public IEnumerable<int> VtxTrianglesItr(int vID) Parameters Type Name Description Int32 vID Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source VtxVerticesItr(Int32) Enumerate \"other\" vertices of edges connected to vertex (ie vertex one-ring) Declaration public IEnumerable<int> VtxVerticesItr(int vID) Parameters Type Name Description Int32 vID Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source WindingNumber(Vector3d) Compute mesh winding number, from Jacobson et al, Robust Inside-Outside Segmentation using Generalized Winding Numbers http://igl.ethz.ch/projects/winding-number/ returns ~0 for points outside a closed, consistently oriented mesh, and a positive or negative integer for points inside, with value > 1 depending on how many \"times\" the point inside the mesh (like in 2D polygon winding) Declaration public double WindingNumber(Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Double Implements IDeformableMesh IMesh IPointSet"
  },
  "api/g3.DMesh3.MergeEdgesInfo.html": {
    "href": "api/g3.DMesh3.MergeEdgesInfo.html",
    "title": "Struct DMesh3.MergeEdgesInfo | ViRGIS VR GIS",
    "keywords": "Struct DMesh3.MergeEdgesInfo Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct MergeEdgesInfo Fields | Improve this Doc View Source eKept Declaration public int eKept Field Value Type Description Int32 | Improve this Doc View Source eKeptExtra Declaration public Vector2i eKeptExtra Field Value Type Description Vector2i | Improve this Doc View Source eRemoved Declaration public int eRemoved Field Value Type Description Int32 | Improve this Doc View Source eRemovedExtra Declaration public Vector2i eRemovedExtra Field Value Type Description Vector2i | Improve this Doc View Source vKept Declaration public Vector2i vKept Field Value Type Description Vector2i | Improve this Doc View Source vRemoved Declaration public Vector2i vRemoved Field Value Type Description Vector2i"
  },
  "api/g3.DMesh3.PokeTriangleInfo.html": {
    "href": "api/g3.DMesh3.PokeTriangleInfo.html",
    "title": "Struct DMesh3.PokeTriangleInfo | ViRGIS VR GIS",
    "keywords": "Struct DMesh3.PokeTriangleInfo Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct PokeTriangleInfo Fields | Improve this Doc View Source new_edges Declaration public Index3i new_edges Field Value Type Description Index3i | Improve this Doc View Source new_t1 Declaration public int new_t1 Field Value Type Description Int32 | Improve this Doc View Source new_t2 Declaration public int new_t2 Field Value Type Description Int32 | Improve this Doc View Source new_vid Declaration public int new_vid Field Value Type Description Int32"
  },
  "api/g3.DMesh3Builder.AddTriangleFailBehaviors.html": {
    "href": "api/g3.DMesh3Builder.AddTriangleFailBehaviors.html",
    "title": "Enum DMesh3Builder.AddTriangleFailBehaviors | ViRGIS VR GIS",
    "keywords": "Enum DMesh3Builder.AddTriangleFailBehaviors Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum AddTriangleFailBehaviors Fields Name Description DiscardTriangle DuplicateAllVertices"
  },
  "api/g3.DMesh3Builder.html": {
    "href": "api/g3.DMesh3Builder.html",
    "title": "Class DMesh3Builder | ViRGIS VR GIS",
    "keywords": "Class DMesh3Builder Inheritance Object DMesh3Builder Implements IMeshBuilder Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DMesh3Builder : IMeshBuilder Constructors | Improve this Doc View Source DMesh3Builder() Declaration public DMesh3Builder() Fields | Improve this Doc View Source DuplicateTriBehavior What should we do when AddTriangle() fails because the triangle already exists? Declaration public DMesh3Builder.AddTriangleFailBehaviors DuplicateTriBehavior Field Value Type Description DMesh3Builder.AddTriangleFailBehaviors | Improve this Doc View Source MaterialAssignment Declaration public List<int> MaterialAssignment Field Value Type Description List < Int32 > | Improve this Doc View Source Materials Declaration public List<GenericMaterial> Materials Field Value Type Description List < GenericMaterial > | Improve this Doc View Source Meshes Declaration public List<DMesh3> Meshes Field Value Type Description List < DMesh3 > | Improve this Doc View Source Metadata Declaration public List<Dictionary<string, object>> Metadata Field Value Type Description List < Dictionary < String , Object >> | Improve this Doc View Source NonManifoldTriBehavior What should we do when AddTriangle() fails because triangle is non-manifold? Declaration public DMesh3Builder.AddTriangleFailBehaviors NonManifoldTriBehavior Field Value Type Description DMesh3Builder.AddTriangleFailBehaviors Properties | Improve this Doc View Source SupportsMetaData Declaration public bool SupportsMetaData { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source AppendMetaData(String, Object) Declaration public void AppendMetaData(string identifier, object data) Parameters Type Name Description String identifier Object data | Improve this Doc View Source AppendNewMesh(DMesh3) Declaration public int AppendNewMesh(DMesh3 existingMesh) Parameters Type Name Description DMesh3 existingMesh Returns Type Description Int32 | Improve this Doc View Source AppendNewMesh(Boolean, Boolean, Boolean, Boolean) Declaration public int AppendNewMesh(bool bHaveVtxNormals, bool bHaveVtxColors, bool bHaveVtxUVs, bool bHaveFaceGroups) Parameters Type Name Description Boolean bHaveVtxNormals Boolean bHaveVtxColors Boolean bHaveVtxUVs Boolean bHaveFaceGroups Returns Type Description Int32 | Improve this Doc View Source AppendTriangle(Int32, Int32, Int32) Declaration public int AppendTriangle(int i, int j, int k) Parameters Type Name Description Int32 i Int32 j Int32 k Returns Type Description Int32 | Improve this Doc View Source AppendTriangle(Int32, Int32, Int32, Int32) Declaration public int AppendTriangle(int i, int j, int k, int g) Parameters Type Name Description Int32 i Int32 j Int32 k Int32 g Returns Type Description Int32 | Improve this Doc View Source AppendVertex(NewVertexInfo) Declaration public int AppendVertex(NewVertexInfo info) Parameters Type Name Description NewVertexInfo info Returns Type Description Int32 | Improve this Doc View Source AppendVertex(Double, Double, Double) Declaration public int AppendVertex(double x, double y, double z) Parameters Type Name Description Double x Double y Double z Returns Type Description Int32 | Improve this Doc View Source AssignMaterial(Int32, Int32) Declaration public void AssignMaterial(int materialID, int meshID) Parameters Type Name Description Int32 materialID Int32 meshID | Improve this Doc View Source Build<VType, TType, NType>(IEnumerable<VType>, IEnumerable<TType>, IEnumerable<NType>, IEnumerable<Int32>) ultimate generic mesh-builder, pass it arrays of floats/doubles, or lists of Vector3d, or anything in-between. Will figure out how to interpret Declaration public static DMesh3 Build<VType, TType, NType>(IEnumerable<VType> Vertices, IEnumerable<TType> Triangles, IEnumerable<NType> Normals = null, IEnumerable<int> TriGroups = null) Parameters Type Name Description IEnumerable <VType> Vertices IEnumerable <TType> Triangles IEnumerable <NType> Normals IEnumerable < Int32 > TriGroups Returns Type Description DMesh3 Type Parameters Name Description VType TType NType | Improve this Doc View Source BuildMaterial(GenericMaterial) Declaration public int BuildMaterial(GenericMaterial m) Parameters Type Name Description GenericMaterial m Returns Type Description Int32 | Improve this Doc View Source SetActiveMesh(Int32) Declaration public void SetActiveMesh(int id) Parameters Type Name Description Int32 id Implements IMeshBuilder"
  },
  "api/g3.DMeshAABBTree3.BuildStrategy.html": {
    "href": "api/g3.DMeshAABBTree3.BuildStrategy.html",
    "title": "Enum DMeshAABBTree3.BuildStrategy | ViRGIS VR GIS",
    "keywords": "Enum DMeshAABBTree3.BuildStrategy Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum BuildStrategy Fields Name Description BottomUpFromOneRings Default TopDownMedian TopDownMidpoint"
  },
  "api/g3.DMeshAABBTree3.ClusterFunctionType.html": {
    "href": "api/g3.DMeshAABBTree3.ClusterFunctionType.html",
    "title": "Delegate DMeshAABBTree3.ClusterFunctionType | ViRGIS VR GIS",
    "keywords": "Delegate DMeshAABBTree3.ClusterFunctionType Namespace : g3 Assembly : geometry3Sharp.dll Syntax public delegate int ClusterFunctionType(int iStart, int iCount, ref int iBoxCur, ref int iIndicesCur); Parameters Type Name Description Int32 iStart Int32 iCount Int32 iBoxCur Int32 iIndicesCur Returns Type Description Int32"
  },
  "api/g3.DMeshAABBTree3.ClusterPolicy.html": {
    "href": "api/g3.DMeshAABBTree3.ClusterPolicy.html",
    "title": "Enum DMeshAABBTree3.ClusterPolicy | ViRGIS VR GIS",
    "keywords": "Enum DMeshAABBTree3.ClusterPolicy Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum ClusterPolicy Fields Name Description Default Fastest FastVolumeMetric MinimalVolume"
  },
  "api/g3.DMeshAABBTree3.html": {
    "href": "api/g3.DMeshAABBTree3.html",
    "title": "Class DMeshAABBTree3 | ViRGIS VR GIS",
    "keywords": "Class DMeshAABBTree3 Hierarchical Axis-Aligned-Bounding-Box tree for a DMesh3 mesh. This class supports a variety of spatial queries, listed below. Various construction strategies are also available, the default is the fastest to build but if you are doing a lot of queries, you might experiment with the others (eg TopDownMedian) Available queries: FindNearestTriangle(point, maxdist) FindNearestHitTriangle(ray, maxdist) FindAllHitTriangles(ray, maxdist) TestIntersection(triangle) TestIntersection(mesh) TestIntersection(otherAABBTree) FindAllIntersections(otherAABBTree) FindNearestTriangles(otherAABBTree, maxdist) IsInside(point) WindingNumber(point) FastWindingNumber(point) DoTraversal(generic_traversal_object) Inheritance Object DMeshAABBTree3 Implements ISpatial Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DMeshAABBTree3 : ISpatial Constructors | Improve this Doc View Source DMeshAABBTree3(DMesh3, Boolean) Declaration public DMeshAABBTree3(DMesh3 m, bool autoBuild = false) Parameters Type Name Description DMesh3 m Boolean autoBuild Fields | Improve this Doc View Source BottomUpClusterLookahead Declaration public int BottomUpClusterLookahead Field Value Type Description Int32 | Improve this Doc View Source box_centers Declaration protected DVector<Vector3f> box_centers Field Value Type Description DVector < Vector3f > | Improve this Doc View Source box_extents Declaration protected DVector<Vector3f> box_extents Field Value Type Description DVector < Vector3f > | Improve this Doc View Source box_to_index Declaration protected DVector<int> box_to_index Field Value Type Description DVector < Int32 > | Improve this Doc View Source FWNApproxOrder FWN approximation order. can be 1 or 2. 2 is more accurate, obviously. Declaration public int FWNApproxOrder Field Value Type Description Int32 | Improve this Doc View Source FWNBeta FWN beta parameter - is 2.0 in paper Declaration public double FWNBeta Field Value Type Description Double | Improve this Doc View Source index_list Declaration protected DVector<int> index_list Field Value Type Description DVector < Int32 > | Improve this Doc View Source mesh Declaration protected DMesh3 mesh Field Value Type Description DMesh3 | Improve this Doc View Source mesh_timestamp Declaration protected int mesh_timestamp Field Value Type Description Int32 | Improve this Doc View Source root_index Declaration protected int root_index Field Value Type Description Int32 | Improve this Doc View Source TopDownLeafMaxTriCount Declaration public int TopDownLeafMaxTriCount Field Value Type Description Int32 | Improve this Doc View Source TriangleFilterF If non-null, only triangle IDs that pass this filter (ie filter is true) are considered Declaration public Func<int, bool> TriangleFilterF Field Value Type Description Func < Int32 , Boolean > | Improve this Doc View Source triangles_end Declaration protected int triangles_end Field Value Type Description Int32 Properties | Improve this Doc View Source Bounds Root bounding box of tree (note: tree must be generated by calling a query function first!) Declaration public AxisAlignedBox3d Bounds { get; } Property Value Type Description AxisAlignedBox3d | Improve this Doc View Source IsValid Declaration public bool IsValid { get; } Property Value Type Description Boolean | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh { get; } Property Value Type Description DMesh3 | Improve this Doc View Source SupportsNearestTriangle Does this ISpatial implementation support nearest-point query? (yes) Declaration public bool SupportsNearestTriangle { get; } Property Value Type Description Boolean | Improve this Doc View Source SupportsPointContainment Does this ISpatial support IsInside() test (yes!) Declaration public bool SupportsPointContainment { get; } Property Value Type Description Boolean | Improve this Doc View Source SupportsTriangleRayIntersection Does this ISpatial implementation support ray-triangle intersection? (yes) Declaration public bool SupportsTriangleRayIntersection { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source box_contains(Int32, Vector3d) Declaration protected bool box_contains(int iBox, Vector3d p) Parameters Type Name Description Int32 iBox Vector3d p Returns Type Description Boolean | Improve this Doc View Source branch_fast_winding_num(Int32, Vector3d) Declaration protected double branch_fast_winding_num(int iBox, Vector3d p) Parameters Type Name Description Int32 iBox Vector3d p Returns Type Description Double | Improve this Doc View Source branch_winding_num(Int32, Vector3d) Declaration protected double branch_winding_num(int iBox, Vector3d p) Parameters Type Name Description Int32 iBox Vector3d p Returns Type Description Double | Improve this Doc View Source Build(DMeshAABBTree3.BuildStrategy, DMeshAABBTree3.ClusterPolicy) Declaration public void Build(DMeshAABBTree3.BuildStrategy eStrategy = DMeshAABBTree3.BuildStrategy.TopDownMidpoint, DMeshAABBTree3.ClusterPolicy ePolicy = DMeshAABBTree3.ClusterPolicy.Default) Parameters Type Name Description DMeshAABBTree3.BuildStrategy eStrategy DMeshAABBTree3.ClusterPolicy ePolicy | Improve this Doc View Source build_fast_winding_cache() Declaration protected void build_fast_winding_cache() | Improve this Doc View Source build_fast_winding_cache(Int32, Int32, Int32, out HashSet<Int32>, MeshTriInfoCache) Declaration protected int build_fast_winding_cache(int iBox, int depth, int tri_count_thresh, out HashSet<int> tri_hash, MeshTriInfoCache triCache) Parameters Type Name Description Int32 iBox Int32 depth Int32 tri_count_thresh HashSet < Int32 > tri_hash MeshTriInfoCache triCache Returns Type Description Int32 | Improve this Doc View Source build_winding_cache() Declaration protected void build_winding_cache() | Improve this Doc View Source build_winding_cache(Int32, Int32, Int32, out HashSet<Int32>) Declaration protected int build_winding_cache(int iBox, int depth, int tri_count_thresh, out HashSet<int> tri_hash) Parameters Type Name Description Int32 iBox Int32 depth Int32 tri_count_thresh HashSet < Int32 > tri_hash Returns Type Description Int32 | Improve this Doc View Source can_use_fast_winding_cache(Int32, ref Vector3d) Declaration protected bool can_use_fast_winding_cache(int iBox, ref Vector3d q) Parameters Type Name Description Int32 iBox Vector3d q Returns Type Description Boolean | Improve this Doc View Source collect_triangles(Int32, HashSet<Int32>) Declaration protected void collect_triangles(int iBox, HashSet<int> triangles) Parameters Type Name Description Int32 iBox HashSet < Int32 > triangles | Improve this Doc View Source DoTraversal(DMeshAABBTree3.TreeTraversal) Hierarchically descend through the tree nodes, calling the TreeTrversal functions at each level Declaration public virtual void DoTraversal(DMeshAABBTree3.TreeTraversal traversal) Parameters Type Name Description DMeshAABBTree3.TreeTraversal traversal | Improve this Doc View Source evaluate_box_fast_winding_cache(Int32, ref Vector3d) Declaration protected double evaluate_box_fast_winding_cache(int iBox, ref Vector3d q) Parameters Type Name Description Int32 iBox Vector3d q Returns Type Description Double | Improve this Doc View Source evaluate_box_winding_cache(Int32, Vector3d) Declaration protected double evaluate_box_winding_cache(int iBox, Vector3d p) Parameters Type Name Description Int32 iBox Vector3d p Returns Type Description Double | Improve this Doc View Source FastWindingNumber(Vector3d) Fast approximation of winding number using far-field approximations Declaration public virtual double FastWindingNumber(Vector3d p) Parameters Type Name Description Vector3d p Returns Type Description Double | Improve this Doc View Source find_all_hit_triangles(Int32, List<Int32>, ref Ray3d, Double) Declaration protected int find_all_hit_triangles(int iBox, List<int> hitTriangles, ref Ray3d ray, double fMaxDist) Parameters Type Name Description Int32 iBox List < Int32 > hitTriangles Ray3d ray Double fMaxDist Returns Type Description Int32 | Improve this Doc View Source find_any_intersection(Int32, DMeshAABBTree3, Func<Vector3d, Vector3d>, Int32, Int32) Declaration protected bool find_any_intersection(int iBox, DMeshAABBTree3 otherTree, Func<Vector3d, Vector3d> TransformF, int oBox, int depth) Parameters Type Name Description Int32 iBox DMeshAABBTree3 otherTree Func < Vector3d , Vector3d > TransformF Int32 oBox Int32 depth Returns Type Description Boolean | Improve this Doc View Source find_any_intersection(Int32, ref Triangle3d, ref AxisAlignedBox3d) Declaration protected int find_any_intersection(int iBox, ref Triangle3d triangle, ref AxisAlignedBox3d triBounds) Parameters Type Name Description Int32 iBox Triangle3d triangle AxisAlignedBox3d triBounds Returns Type Description Int32 | Improve this Doc View Source find_hit_triangle(Int32, ref Ray3d, ref Double, ref Int32) Declaration protected void find_hit_triangle(int iBox, ref Ray3d ray, ref double fNearestT, ref int tID) Parameters Type Name Description Int32 iBox Ray3d ray Double fNearestT Int32 tID | Improve this Doc View Source find_intersections(Int32, DMeshAABBTree3, Func<Vector3d, Vector3d>, Int32, Int32, IntrTriangle3Triangle3, DMeshAABBTree3.IntersectionsQueryResult) Declaration protected void find_intersections(int iBox, DMeshAABBTree3 otherTree, Func<Vector3d, Vector3d> TransformF, int oBox, int depth, IntrTriangle3Triangle3 intr, DMeshAABBTree3.IntersectionsQueryResult result) Parameters Type Name Description Int32 iBox DMeshAABBTree3 otherTree Func < Vector3d , Vector3d > TransformF Int32 oBox Int32 depth IntrTriangle3Triangle3 intr DMeshAABBTree3.IntersectionsQueryResult result | Improve this Doc View Source find_nearest_tri(Int32, Vector3d, ref Double, ref Int32) Declaration protected void find_nearest_tri(int iBox, Vector3d p, ref double fNearestSqr, ref int tID) Parameters Type Name Description Int32 iBox Vector3d p Double fNearestSqr Int32 tID | Improve this Doc View Source find_nearest_triangles(Int32, DMeshAABBTree3, Func<Vector3d, Vector3d>, Int32, Int32, ref Double, ref Index2i) Declaration protected void find_nearest_triangles(int iBox, DMeshAABBTree3 otherTree, Func<Vector3d, Vector3d> TransformF, int oBox, int depth, ref double nearest_sqr, ref Index2i nearest_pair) Parameters Type Name Description Int32 iBox DMeshAABBTree3 otherTree Func < Vector3d , Vector3d > TransformF Int32 oBox Int32 depth Double nearest_sqr Index2i nearest_pair | Improve this Doc View Source find_nearest_vtx(Int32, Vector3d, ref Double, ref Int32) Declaration protected void find_nearest_vtx(int iBox, Vector3d p, ref double fNearestSqr, ref int vid) Parameters Type Name Description Int32 iBox Vector3d p Double fNearestSqr Int32 vid | Improve this Doc View Source FindAllHitTriangles(Ray3d, List<Int32>, Double) Find the ids of all the triangles that they ray intersects, within distance fMaxDist from ray origin Returns count of triangles. Declaration public virtual int FindAllHitTriangles(Ray3d ray, List<int> hitTriangles = null, double fMaxDist = 1.7976931348623157E+308) Parameters Type Name Description Ray3d ray List < Int32 > hitTriangles Double fMaxDist Returns Type Description Int32 | Improve this Doc View Source FindAllIntersections(DMeshAABBTree3, Func<Vector3d, Vector3d>) Compute all intersections between two Meshes. TransformF argument transforms vertices of otherTree to our tree (can be null if in same coord space) Returns pairs of intersecting triangles, which could intersect in either point or segment Currently does not return coplanar intersections. Declaration public virtual DMeshAABBTree3.IntersectionsQueryResult FindAllIntersections(DMeshAABBTree3 otherTree, Func<Vector3d, Vector3d> TransformF = null) Parameters Type Name Description DMeshAABBTree3 otherTree Func < Vector3d , Vector3d > TransformF Returns Type Description DMeshAABBTree3.IntersectionsQueryResult | Improve this Doc View Source FindNearestHitTriangle(Ray3d, Double) find id of first triangle that ray hits, within distance fMaxDist, or return DMesh3.InvalidID Use MeshQueries.TriangleIntersection() to get more information Declaration public virtual int FindNearestHitTriangle(Ray3d ray, double fMaxDist = 1.7976931348623157E+308) Parameters Type Name Description Ray3d ray Double fMaxDist Returns Type Description Int32 | Improve this Doc View Source FindNearestTriangle(Vector3d, Double) Find the triangle closest to p, within distance fMaxDist, or return InvalidID Use MeshQueries.TriangleDistance() to get more information Declaration public virtual int FindNearestTriangle(Vector3d p, double fMaxDist = 1.7976931348623157E+308) Parameters Type Name Description Vector3d p Double fMaxDist Returns Type Description Int32 | Improve this Doc View Source FindNearestTriangle(Vector3d, out Double, Double) Find the triangle closest to p, and distance to it, within distance fMaxDist, or return InvalidID Use MeshQueries.TriangleDistance() to get more information Declaration public virtual int FindNearestTriangle(Vector3d p, out double fNearestDistSqr, double fMaxDist = 1.7976931348623157E+308) Parameters Type Name Description Vector3d p Double fNearestDistSqr Double fMaxDist Returns Type Description Int32 | Improve this Doc View Source FindNearestTriangles(DMeshAABBTree3, Func<Vector3d, Vector3d>, out Double, Double) Find nearest pair of triangles on this tree with otherTree, within max_dist. TransformF transforms vertices of otherTree into our coordinates. can be null. returns triangle-id pair (my_tri,other_tri), or Index2i.Max if not found within max_dist Use MeshQueries.TrianglesDistance() to get more information Declaration public virtual Index2i FindNearestTriangles(DMeshAABBTree3 otherTree, Func<Vector3d, Vector3d> TransformF, out double distance, double max_dist = 1.7976931348623157E+308) Parameters Type Name Description DMeshAABBTree3 otherTree Func < Vector3d , Vector3d > TransformF Double distance Double max_dist Returns Type Description Index2i | Improve this Doc View Source FindNearestVertex(Vector3d, Double) Find the vertex closest to p, within distance fMaxDist, or return InvalidID Declaration public virtual int FindNearestVertex(Vector3d p, double fMaxDist = 1.7976931348623157E+308) Parameters Type Name Description Vector3d p Double fMaxDist Returns Type Description Int32 | Improve this Doc View Source IsInside(Vector3d) Returns true if point p is inside this mesh. Declaration public virtual bool IsInside(Vector3d p) Parameters Type Name Description Vector3d p Returns Type Description Boolean | Improve this Doc View Source make_box_fast_winding_cache(Int32, IEnumerable<Int32>, MeshTriInfoCache) Declaration protected void make_box_fast_winding_cache(int iBox, IEnumerable<int> triangles, MeshTriInfoCache triCache) Parameters Type Name Description Int32 iBox IEnumerable < Int32 > triangles MeshTriInfoCache triCache | Improve this Doc View Source make_box_winding_cache(Int32, HashSet<Int32>) Declaration protected void make_box_winding_cache(int iBox, HashSet<int> triangles) Parameters Type Name Description Int32 iBox HashSet < Int32 > triangles | Improve this Doc View Source TestCoverage() Declaration public void TestCoverage() | Improve this Doc View Source TestIntersection(DMeshAABBTree3, Func<Vector3d, Vector3d>) Returns true if there is any intersection between our mesh and 'other' mesh. TransformF takes vertices of otherTree into our tree - can be null if in same coord space Declaration public virtual bool TestIntersection(DMeshAABBTree3 otherTree, Func<Vector3d, Vector3d> TransformF = null) Parameters Type Name Description DMeshAABBTree3 otherTree Func < Vector3d , Vector3d > TransformF Returns Type Description Boolean | Improve this Doc View Source TestIntersection(IMesh, Func<Vector3d, Vector3d>, Boolean) return true if any triangle of testMesh intersects with our tree. Use TransformF to transform vertices of testMesh into space of this tree. if boundsCheck is false, we skip bbox/bbox early-out Declaration public virtual bool TestIntersection(IMesh testMesh, Func<Vector3d, Vector3d> TransformF = null, bool bBoundsCheck = true) Parameters Type Name Description IMesh testMesh Func < Vector3d , Vector3d > TransformF Boolean bBoundsCheck Returns Type Description Boolean | Improve this Doc View Source TestIntersection(Triangle3d) Returns true if triangle intersects any triangle of our mesh Declaration public virtual bool TestIntersection(Triangle3d triangle) Parameters Type Name Description Triangle3d triangle Returns Type Description Boolean | Improve this Doc View Source TotalExtentSum() Total sum-of-extents over all boxes in the tree. Mainly useful to evaluate tree quality. Declaration public double TotalExtentSum() Returns Type Description Double | Improve this Doc View Source TotalVolume() Total sum of volumes of all boxes in the tree. Mainly useful to evaluate tree quality. Declaration public double TotalVolume() Returns Type Description Double | Improve this Doc View Source tree_traversal(Int32, Int32, DMeshAABBTree3.TreeTraversal) Declaration protected virtual void tree_traversal(int iBox, int depth, DMeshAABBTree3.TreeTraversal traversal) Parameters Type Name Description Int32 iBox Int32 depth DMeshAABBTree3.TreeTraversal traversal | Improve this Doc View Source WindingNumber(Vector3d) Evaluate the mesh winding number at point. To do this, we must construct additional information to short-circuit tree branches. This happens on the first evaluation. This does consume some additional memory, mainly temporary memory during construction. (eg on a 500k sphere, about 30mb to construct, but then only 2-5mb is stored at the end) If you don't want this, just use Mesh.WindingNumber() directly. Also note that if you are only evaluating a few times, it is not sensible - assume you need at least hundreds of evaluations to see speed improvements. Declaration public virtual double WindingNumber(Vector3d p) Parameters Type Name Description Vector3d p Returns Type Description Double Implements ISpatial"
  },
  "api/g3.DMeshAABBTree3.IntersectionsQueryResult.html": {
    "href": "api/g3.DMeshAABBTree3.IntersectionsQueryResult.html",
    "title": "Class DMeshAABBTree3.IntersectionsQueryResult | ViRGIS VR GIS",
    "keywords": "Class DMeshAABBTree3.IntersectionsQueryResult Inheritance Object DMeshAABBTree3.IntersectionsQueryResult Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class IntersectionsQueryResult Fields | Improve this Doc View Source Points Declaration public List<DMeshAABBTree3.PointIntersection> Points Field Value Type Description List < DMeshAABBTree3.PointIntersection > | Improve this Doc View Source Segments Declaration public List<DMeshAABBTree3.SegmentIntersection> Segments Field Value Type Description List < DMeshAABBTree3.SegmentIntersection >"
  },
  "api/g3.DMeshAABBTree3.PointIntersection.html": {
    "href": "api/g3.DMeshAABBTree3.PointIntersection.html",
    "title": "Struct DMeshAABBTree3.PointIntersection | ViRGIS VR GIS",
    "keywords": "Struct DMeshAABBTree3.PointIntersection Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct PointIntersection Fields | Improve this Doc View Source point Declaration public Vector3d point Field Value Type Description Vector3d | Improve this Doc View Source t0 Declaration public int t0 Field Value Type Description Int32 | Improve this Doc View Source t1 Declaration public int t1 Field Value Type Description Int32"
  },
  "api/g3.DMeshAABBTree3.SegmentIntersection.html": {
    "href": "api/g3.DMeshAABBTree3.SegmentIntersection.html",
    "title": "Struct DMeshAABBTree3.SegmentIntersection | ViRGIS VR GIS",
    "keywords": "Struct DMeshAABBTree3.SegmentIntersection Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct SegmentIntersection Fields | Improve this Doc View Source point0 Declaration public Vector3d point0 Field Value Type Description Vector3d | Improve this Doc View Source point1 Declaration public Vector3d point1 Field Value Type Description Vector3d | Improve this Doc View Source t0 Declaration public int t0 Field Value Type Description Int32 | Improve this Doc View Source t1 Declaration public int t1 Field Value Type Description Int32"
  },
  "api/g3.DMeshAABBTree3.TreeTraversal.html": {
    "href": "api/g3.DMeshAABBTree3.TreeTraversal.html",
    "title": "Class DMeshAABBTree3.TreeTraversal | ViRGIS VR GIS",
    "keywords": "Class DMeshAABBTree3.TreeTraversal Instances of this class can be passed in to the DoTraversal() function to implement your own tree-traversal queries. NextBoxF() is called for each box node. Return false from this function to halt terminate that branch of the traversal, or true to descend into that box's children (boxes or triangles). NextTriangleF() is called for each triangle. Inheritance Object DMeshAABBTree3.TreeTraversal Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class TreeTraversal Fields | Improve this Doc View Source NextBoxF Declaration public Func<AxisAlignedBox3f, int, bool> NextBoxF Field Value Type Description Func < AxisAlignedBox3f , Int32 , Boolean > | Improve this Doc View Source NextTriangleF Declaration public Action<int> NextTriangleF Field Value Type Description Action < Int32 >"
  },
  "api/g3.DMeshIntersectionTarget.html": {
    "href": "api/g3.DMeshIntersectionTarget.html",
    "title": "Class DMeshIntersectionTarget | ViRGIS VR GIS",
    "keywords": "Class DMeshIntersectionTarget Inheritance Object DMeshIntersectionTarget Implements IIntersectionTarget Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DMeshIntersectionTarget : IIntersectionTarget Constructors | Improve this Doc View Source DMeshIntersectionTarget() Declaration public DMeshIntersectionTarget() | Improve this Doc View Source DMeshIntersectionTarget(DMesh3, ISpatial) Declaration public DMeshIntersectionTarget(DMesh3 mesh, ISpatial spatial) Parameters Type Name Description DMesh3 mesh ISpatial spatial Fields | Improve this Doc View Source UseFaceNormal Declaration public bool UseFaceNormal Field Value Type Description Boolean Properties | Improve this Doc View Source HasNormal Declaration public bool HasNormal { get; } Property Value Type Description Boolean | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh { get; set; } Property Value Type Description DMesh3 | Improve this Doc View Source Spatial Declaration public ISpatial Spatial { get; set; } Property Value Type Description ISpatial Methods | Improve this Doc View Source RayIntersect(Ray3d, out Vector3d, out Vector3d) Declaration public bool RayIntersect(Ray3d ray, out Vector3d vHit, out Vector3d vHitNormal) Parameters Type Name Description Ray3d ray Vector3d vHit Vector3d vHitNormal Returns Type Description Boolean Implements IIntersectionTarget"
  },
  "api/g3.DPolyLine2f.Edge.html": {
    "href": "api/g3.DPolyLine2f.Edge.html",
    "title": "Struct DPolyLine2f.Edge | ViRGIS VR GIS",
    "keywords": "Struct DPolyLine2f.Edge Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Edge Constructors | Improve this Doc View Source Edge(Int32, Int32) Declaration public Edge(int vertex1, int vertex2) Parameters Type Name Description Int32 vertex1 Int32 vertex2 Fields | Improve this Doc View Source v1 Declaration public int v1 Field Value Type Description Int32 | Improve this Doc View Source v2 Declaration public int v2 Field Value Type Description Int32"
  },
  "api/g3.DPolyLine2f.html": {
    "href": "api/g3.DPolyLine2f.html",
    "title": "Class DPolyLine2f | ViRGIS VR GIS",
    "keywords": "Class DPolyLine2f Summary description for PolyLine. Inheritance Object DPolyLine2f Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DPolyLine2f Constructors | Improve this Doc View Source DPolyLine2f() Declaration public DPolyLine2f() | Improve this Doc View Source DPolyLine2f(DPolyLine2f) Declaration public DPolyLine2f(DPolyLine2f copy) Parameters Type Name Description DPolyLine2f copy Properties | Improve this Doc View Source EdgeCount Declaration public int EdgeCount { get; } Property Value Type Description Int32 | Improve this Doc View Source Edges Declaration public List<DPolyLine2f.Edge> Edges { get; } Property Value Type Description List < DPolyLine2f.Edge > | Improve this Doc View Source VertexCount Declaration public int VertexCount { get; } Property Value Type Description Int32 | Improve this Doc View Source Vertices Declaration public List<DPolyLine2f.Vertex> Vertices { get; } Property Value Type Description List < DPolyLine2f.Vertex > Methods | Improve this Doc View Source AddEdge(Int32, Int32) Declaration public int AddEdge(int v1, int v2) Parameters Type Name Description Int32 v1 Int32 v2 Returns Type Description Int32 | Improve this Doc View Source AddVertex(Single, Single) Declaration public int AddVertex(float fX, float fY) Parameters Type Name Description Single fX Single fY Returns Type Description Int32 | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source GetVertex(Int32) Declaration public DPolyLine2f.Vertex GetVertex(int i) Parameters Type Name Description Int32 i Returns Type Description DPolyLine2f.Vertex | Improve this Doc View Source OrderVertices() Declaration public bool OrderVertices() Returns Type Description Boolean"
  },
  "api/g3.DPolyLine2f.Vertex.html": {
    "href": "api/g3.DPolyLine2f.Vertex.html",
    "title": "Struct DPolyLine2f.Vertex | ViRGIS VR GIS",
    "keywords": "Struct DPolyLine2f.Vertex Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Vertex Constructors | Improve this Doc View Source Vertex(Single, Single, Int32) Declaration public Vertex(float fX, float fY, int nIndex) Parameters Type Name Description Single fX Single fY Int32 nIndex Fields | Improve this Doc View Source index Declaration public int index Field Value Type Description Int32 | Improve this Doc View Source x Declaration public float x Field Value Type Description Single | Improve this Doc View Source y Declaration public float y Field Value Type Description Single"
  },
  "api/g3.DSparseGrid3-1.html": {
    "href": "api/g3.DSparseGrid3-1.html",
    "title": "Class DSparseGrid3<ElemType> | ViRGIS VR GIS",
    "keywords": "Class DSparseGrid3<ElemType> Dynamic sparse 3D grid. Idea is that we have grid of some type of object and we don't want to pre-allocate full grid of them. So we allocate on-demand. This can be used to implement multi-grid schemes, eg for example the GridElement type could be Bitmap3 of a fixed dimension. Inheritance Object DSparseGrid3<ElemType> Implements IGrid3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DSparseGrid3<ElemType> : IGrid3 where ElemType : class, IGridElement3 Type Parameters Name Description ElemType Constructors | Improve this Doc View Source DSparseGrid3(ElemType) Must provide a sample instance of the element type that we can Duplicate() to make additional copies. Should be no data in here Declaration public DSparseGrid3(ElemType toDuplicate) Parameters Type Name Description ElemType toDuplicate Properties | Improve this Doc View Source BoundsInclusive returns integer-aabb where indices range from min,max Declaration public AxisAlignedBox3i BoundsInclusive { get; } Property Value Type Description AxisAlignedBox3i | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source Density Declaration public double Density { get; } Property Value Type Description Double | Improve this Doc View Source Dimensions Declaration public Vector3i Dimensions { get; } Property Value Type Description Vector3i Methods | Improve this Doc View Source Allocated() Declaration public IEnumerable<KeyValuePair<Vector3i, ElemType>> Allocated() Returns Type Description IEnumerable < KeyValuePair < Vector3i , ElemType>> | Improve this Doc View Source AllocatedIndices() Declaration public IEnumerable<Vector3i> AllocatedIndices() Returns Type Description IEnumerable < Vector3i > | Improve this Doc View Source Free(Vector3i) Declaration public bool Free(Vector3i index) Parameters Type Name Description Vector3i index Returns Type Description Boolean | Improve this Doc View Source FreeAll() Declaration public void FreeAll() | Improve this Doc View Source Get(Vector3i, Boolean) Declaration public ElemType Get(Vector3i index, bool allocateIfMissing = true) Parameters Type Name Description Vector3i index Boolean allocateIfMissing Returns Type Description ElemType | Improve this Doc View Source Has(Vector3i) Declaration public bool Has(Vector3i index) Parameters Type Name Description Vector3i index Returns Type Description Boolean Implements IGrid3"
  },
  "api/g3.DSubmesh3.html": {
    "href": "api/g3.DSubmesh3.html",
    "title": "Class DSubmesh3 | ViRGIS VR GIS",
    "keywords": "Class DSubmesh3 Inheritance Object DSubmesh3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DSubmesh3 Constructors | Improve this Doc View Source DSubmesh3(DMesh3) Declaration public DSubmesh3(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh | Improve this Doc View Source DSubmesh3(DMesh3, IEnumerable<Int32>, Int32) Declaration public DSubmesh3(DMesh3 mesh, IEnumerable<int> subTriangles, int nTriEstimate = 0) Parameters Type Name Description DMesh3 mesh IEnumerable < Int32 > subTriangles Int32 nTriEstimate | Improve this Doc View Source DSubmesh3(DMesh3, Int32[]) Declaration public DSubmesh3(DMesh3 mesh, int[] subTriangles) Parameters Type Name Description DMesh3 mesh Int32 [] subTriangles Fields | Improve this Doc View Source BaseBorderE Declaration public IndexHashSet BaseBorderE Field Value Type Description IndexHashSet | Improve this Doc View Source BaseBorderV Declaration public IndexHashSet BaseBorderV Field Value Type Description IndexHashSet | Improve this Doc View Source BaseBoundaryE Declaration public IndexHashSet BaseBoundaryE Field Value Type Description IndexHashSet | Improve this Doc View Source BaseMesh Declaration public DMesh3 BaseMesh Field Value Type Description DMesh3 | Improve this Doc View Source BaseSubmeshV Declaration public IndexFlagSet BaseSubmeshV Field Value Type Description IndexFlagSet | Improve this Doc View Source BaseToSubT Declaration public IndexMap BaseToSubT Field Value Type Description IndexMap | Improve this Doc View Source BaseToSubV Declaration public IndexMap BaseToSubV Field Value Type Description IndexMap | Improve this Doc View Source ComputeTriMaps Declaration public bool ComputeTriMaps Field Value Type Description Boolean | Improve this Doc View Source OverrideGroupID Declaration public int OverrideGroupID Field Value Type Description Int32 | Improve this Doc View Source SubMesh Declaration public DMesh3 SubMesh Field Value Type Description DMesh3 | Improve this Doc View Source SubToBaseT Declaration public DVector<int> SubToBaseT Field Value Type Description DVector < Int32 > | Improve this Doc View Source SubToBaseV Declaration public DVector<int> SubToBaseV Field Value Type Description DVector < Int32 > | Improve this Doc View Source WantComponents Declaration public MeshComponents WantComponents Field Value Type Description MeshComponents Methods | Improve this Doc View Source Compute(IEnumerable<Int32>, Int32) Declaration public void Compute(IEnumerable<int> subTriangles, int nTriEstimate = 0) Parameters Type Name Description IEnumerable < Int32 > subTriangles Int32 nTriEstimate | Improve this Doc View Source Compute(Int32[]) Declaration public void Compute(int[] subTriangles) Parameters Type Name Description Int32 [] subTriangles | Improve this Doc View Source ComputeBoundaryInfo(IEnumerable<Int32>, Int32) Declaration public void ComputeBoundaryInfo(IEnumerable<int> triangles, int tri_count_est) Parameters Type Name Description IEnumerable < Int32 > triangles Int32 tri_count_est | Improve this Doc View Source ComputeBoundaryInfo(Int32[]) Declaration public void ComputeBoundaryInfo(int[] subTriangles) Parameters Type Name Description Int32 [] subTriangles | Improve this Doc View Source MapEdgesToSubmesh(Int32[]) Declaration public void MapEdgesToSubmesh(int[] edges) Parameters Type Name Description Int32 [] edges | Improve this Doc View Source MapEdgeToBaseMesh(Int32) Declaration public int MapEdgeToBaseMesh(int sub_eid) Parameters Type Name Description Int32 sub_eid Returns Type Description Int32 | Improve this Doc View Source MapEdgeToSubmesh(Int32) Declaration public int MapEdgeToSubmesh(int base_eid) Parameters Type Name Description Int32 base_eid Returns Type Description Int32 | Improve this Doc View Source MapTrianglesToSubmesh(Int32[]) Declaration public void MapTrianglesToSubmesh(int[] triangles) Parameters Type Name Description Int32 [] triangles | Improve this Doc View Source MapTriangleToBaseMesh(Int32) Declaration public int MapTriangleToBaseMesh(int sub_tID) Parameters Type Name Description Int32 sub_tID Returns Type Description Int32 | Improve this Doc View Source MapTriangleToSubmesh(Int32) Declaration public int MapTriangleToSubmesh(int base_tID) Parameters Type Name Description Int32 base_tID Returns Type Description Int32 | Improve this Doc View Source MapVertexToBaseMesh(Int32) Declaration public int MapVertexToBaseMesh(int sub_vID) Parameters Type Name Description Int32 sub_vID Returns Type Description Int32 | Improve this Doc View Source MapVertexToSubmesh(Int32) Declaration public int MapVertexToSubmesh(int base_vID) Parameters Type Name Description Int32 base_vID Returns Type Description Int32 | Improve this Doc View Source MapVerticesToBaseMesh(Index2i) Declaration public Index2i MapVerticesToBaseMesh(Index2i v) Parameters Type Name Description Index2i v Returns Type Description Index2i | Improve this Doc View Source MapVerticesToSubmesh(Index2i) Declaration public Index2i MapVerticesToSubmesh(Index2i v) Parameters Type Name Description Index2i v Returns Type Description Index2i | Improve this Doc View Source MapVerticesToSubmesh(Int32[]) Declaration public void MapVerticesToSubmesh(int[] vertices) Parameters Type Name Description Int32 [] vertices | Improve this Doc View Source QuickSubmesh(DMesh3, IEnumerable<Int32>) Declaration public static DMesh3 QuickSubmesh(DMesh3 mesh, IEnumerable<int> triangles) Parameters Type Name Description DMesh3 mesh IEnumerable < Int32 > triangles Returns Type Description DMesh3 | Improve this Doc View Source QuickSubmesh(DMesh3, Int32[]) Declaration public static DMesh3 QuickSubmesh(DMesh3 mesh, int[] triangles) Parameters Type Name Description DMesh3 mesh Int32 [] triangles Returns Type Description DMesh3"
  },
  "api/g3.DSubmesh3Set.html": {
    "href": "api/g3.DSubmesh3Set.html",
    "title": "Class DSubmesh3Set | ViRGIS VR GIS",
    "keywords": "Class DSubmesh3Set A set of submeshes of a base mesh. You provide a set of keys, and a Func that returns the triangle index list for a given key. The set of DSubmesh3 objects are computed on construction. Inheritance Object DSubmesh3Set Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DSubmesh3Set : IEnumerable<DSubmesh3>, IEnumerable Constructors | Improve this Doc View Source DSubmesh3Set(DMesh3, MeshConnectedComponents) Construct submesh set for an already-computed MeshConnectedComponents instance Declaration public DSubmesh3Set(DMesh3 mesh, MeshConnectedComponents components) Parameters Type Name Description DMesh3 mesh MeshConnectedComponents components | Improve this Doc View Source DSubmesh3Set(DMesh3, IEnumerable<Object>, Func<Object, IEnumerable<Int32>>) Construct submesh set from given keys and key-to-indices Func Declaration public DSubmesh3Set(DMesh3 mesh, IEnumerable<object> keys, Func<object, IEnumerable<int>> indexSetsF) Parameters Type Name Description DMesh3 mesh IEnumerable < Object > keys Func < Object , IEnumerable < Int32 >> indexSetsF Fields | Improve this Doc View Source KeyToMesh Mapping from keys to submeshes Declaration public Dictionary<object, DSubmesh3> KeyToMesh Field Value Type Description Dictionary < Object , DSubmesh3 > | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 | Improve this Doc View Source Submeshes List of computed submeshes Declaration public List<DSubmesh3> Submeshes Field Value Type Description List < DSubmesh3 > | Improve this Doc View Source TriangleSetF Declaration public Func<object, IEnumerable<int>> TriangleSetF Field Value Type Description Func < Object , IEnumerable < Int32 >> | Improve this Doc View Source TriangleSetKeys Declaration public IEnumerable<object> TriangleSetKeys Field Value Type Description IEnumerable < Object > Methods | Improve this Doc View Source ComputeSubMeshes() Declaration protected virtual void ComputeSubMeshes() | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<DSubmesh3> GetEnumerator() Returns Type Description IEnumerator < DSubmesh3 >"
  },
  "api/g3.DVector-1.DBlock.html": {
    "href": "api/g3.DVector-1.DBlock.html",
    "title": "Struct DVector<T>.DBlock | ViRGIS VR GIS",
    "keywords": "Struct DVector<T>.DBlock Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct DBlock Fields | Improve this Doc View Source data Declaration public T[] data Field Value Type Description T[] | Improve this Doc View Source usedCount Declaration public int usedCount Field Value Type Description Int32"
  },
  "api/g3.DVector-1.html": {
    "href": "api/g3.DVector-1.html",
    "title": "Class DVector<T> | ViRGIS VR GIS",
    "keywords": "Class DVector<T> Inheritance Object DVector<T> Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DVector<T> : IEnumerable<T>, IEnumerable Type Parameters Name Description T Constructors | Improve this Doc View Source DVector() Declaration public DVector() | Improve this Doc View Source DVector(T[]) Declaration public DVector(T[] data) Parameters Type Name Description T[] data | Improve this Doc View Source DVector(DVector<T>) Declaration public DVector(DVector<T> copy) Parameters Type Name Description DVector <T> copy | Improve this Doc View Source DVector(IEnumerable<T>) Declaration public DVector(IEnumerable<T> init) Parameters Type Name Description IEnumerable <T> init Properties | Improve this Doc View Source back Declaration public T back { get; set; } Property Value Type Description T | Improve this Doc View Source BlockCount Declaration public int BlockCount { get; } Property Value Type Description Int32 | Improve this Doc View Source empty Declaration public bool empty { get; } Property Value Type Description Boolean | Improve this Doc View Source front Declaration public T front { get; set; } Property Value Type Description T | Improve this Doc View Source Item[Int32] Declaration public T this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description T | Improve this Doc View Source Length Declaration public int Length { get; } Property Value Type Description Int32 | Improve this Doc View Source MemoryUsageBytes Declaration public int MemoryUsageBytes { get; } Property Value Type Description Int32 | Improve this Doc View Source size Declaration public int size { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Add(T) Declaration public void Add(T value) Parameters Type Name Description T value | Improve this Doc View Source Add(T, Int32) Declaration public void Add(T value, int nRepeat) Parameters Type Name Description T value Int32 nRepeat | Improve this Doc View Source Add(T[]) Declaration public void Add(T[] values) Parameters Type Name Description T[] values | Improve this Doc View Source Add(T[], Int32) Declaration public void Add(T[] values, int nRepeat) Parameters Type Name Description T[] values Int32 nRepeat | Improve this Doc View Source Apply(Action<T, Int32>) Apply action to each element of vector. Iterates by block so this is more efficient. Declaration public void Apply(Action<T, int> applyF) Parameters Type Name Description Action <T, Int32 > applyF | Improve this Doc View Source ApplyReplace(Func<T, Int32, T>) set vec[i] = applyF(vec[i], i) for each element of vector Declaration public void ApplyReplace(Func<T, int, T> applyF) Parameters Type Name Description Func <T, Int32 , T> applyF | Improve this Doc View Source BlockIterator() Declaration public IEnumerable<DVector<T>.DBlock> BlockIterator() Returns Type Description IEnumerable < DVector.DBlock <>> | Improve this Doc View Source Clear() Calls Array.Clear() on each block, which sets value to 'default' for type Declaration public void Clear() | Improve this Doc View Source copy(DVector<T>) Declaration public void copy(DVector<T> copyIn) Parameters Type Name Description DVector <T> copyIn | Improve this Doc View Source FastGetBuffer(DVector<Double>, Double*) Declaration public static void FastGetBuffer(DVector<double> v, double *pBuffer) Parameters Type Name Description DVector < Double > v Double * pBuffer | Improve this Doc View Source FastGetBuffer(DVector<Int32>, Int32*) Declaration public static void FastGetBuffer(DVector<int> v, int *pBuffer) Parameters Type Name Description DVector < Int32 > v Int32 * pBuffer | Improve this Doc View Source FastGetBuffer(DVector<Single>, Single*) Declaration public static void FastGetBuffer(DVector<float> v, float *pBuffer) Parameters Type Name Description DVector < Single > v Single * pBuffer | Improve this Doc View Source GetBuffer() Declaration public T[] GetBuffer() Returns Type Description T[] | Improve this Doc View Source GetBuffer(T[]) Declaration public void GetBuffer(T[] data) Parameters Type Name Description T[] data | Improve this Doc View Source GetBufferCast<T2>() Declaration public T2[] GetBufferCast<T2>() Returns Type Description T2[] Type Parameters Name Description T2 | Improve this Doc View Source GetBytes() Declaration public byte[] GetBytes() Returns Type Description Byte [] | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> | Improve this Doc View Source Initialize(T[]) Declaration public void Initialize(T[] data) Parameters Type Name Description T[] data | Improve this Doc View Source insert(T, Int32) Declaration public void insert(T value, int index) Parameters Type Name Description T value Int32 index | Improve this Doc View Source insertAt(T, Int32) Declaration public void insertAt(T value, int index) Parameters Type Name Description T value Int32 index | Improve this Doc View Source pop_back() Declaration public void pop_back() | Improve this Doc View Source push_back(T) Declaration public void push_back(T value) Parameters Type Name Description T value | Improve this Doc View Source resize(Int32) Declaration public void resize(int count) Parameters Type Name Description Int32 count | Improve this Doc View Source ToArray() Declaration public T[] ToArray() Returns Type Description T[]"
  },
  "api/g3.DVectorArray2-1.html": {
    "href": "api/g3.DVectorArray2-1.html",
    "title": "Class DVectorArray2<T> | ViRGIS VR GIS",
    "keywords": "Class DVectorArray2<T> Inheritance Object DVectorArray2<T> DIndexArray2i DVectorArray2d DVectorArray2f Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DVectorArray2<T> : IEnumerable<T>, IEnumerable Type Parameters Name Description T Constructors | Improve this Doc View Source DVectorArray2(T[]) Declaration public DVectorArray2(T[] data) Parameters Type Name Description T[] data | Improve this Doc View Source DVectorArray2(Int32) Declaration public DVectorArray2(int nCount = 0) Parameters Type Name Description Int32 nCount Fields | Improve this Doc View Source vector Declaration public DVector<T> vector Field Value Type Description DVector <T> Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Append(T, T) Declaration public void Append(T a, T b) Parameters Type Name Description T a T b | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> | Improve this Doc View Source Resize(Int32) Declaration public void Resize(int count) Parameters Type Name Description Int32 count | Improve this Doc View Source Set(Int32, T, T) Declaration public void Set(int i, T a, T b) Parameters Type Name Description Int32 i T a T b"
  },
  "api/g3.DVectorArray2d.html": {
    "href": "api/g3.DVectorArray2d.html",
    "title": "Class DVectorArray2d | ViRGIS VR GIS",
    "keywords": "Class DVectorArray2d Inheritance Object DVectorArray2 < Double > DVectorArray2d Inherited Members DVectorArray2<Double>.vector DVectorArray2<Double>.Count DVectorArray2<Double>.GetEnumerator() DVectorArray2<Double>.Resize(Int32) DVectorArray2<Double>.Set(Int32, Double, Double) DVectorArray2<Double>.Append(Double, Double) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DVectorArray2d : DVectorArray2<double>, IEnumerable<double>, IEnumerable Constructors | Improve this Doc View Source DVectorArray2d(Double[]) Declaration public DVectorArray2d(double[] data) Parameters Type Name Description Double [] data | Improve this Doc View Source DVectorArray2d(Int32) Declaration public DVectorArray2d(int nCount = 0) Parameters Type Name Description Int32 nCount Properties | Improve this Doc View Source Item[Int32] Declaration public Vector2d this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Vector2d Methods | Improve this Doc View Source AsVector2d() Declaration public IEnumerable<Vector2d> AsVector2d() Returns Type Description IEnumerable < Vector2d >"
  },
  "api/g3.DVectorArray2f.html": {
    "href": "api/g3.DVectorArray2f.html",
    "title": "Class DVectorArray2f | ViRGIS VR GIS",
    "keywords": "Class DVectorArray2f Inheritance Object DVectorArray2 < Single > DVectorArray2f Inherited Members DVectorArray2<Single>.vector DVectorArray2<Single>.Count DVectorArray2<Single>.GetEnumerator() DVectorArray2<Single>.Resize(Int32) DVectorArray2<Single>.Set(Int32, Single, Single) DVectorArray2<Single>.Append(Single, Single) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DVectorArray2f : DVectorArray2<float>, IEnumerable<float>, IEnumerable Constructors | Improve this Doc View Source DVectorArray2f(Int32) Declaration public DVectorArray2f(int nCount = 0) Parameters Type Name Description Int32 nCount | Improve this Doc View Source DVectorArray2f(Single[]) Declaration public DVectorArray2f(float[] data) Parameters Type Name Description Single [] data Properties | Improve this Doc View Source Item[Int32] Declaration public Vector2f this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Vector2f Methods | Improve this Doc View Source AsVector2f() Declaration public IEnumerable<Vector2d> AsVector2f() Returns Type Description IEnumerable < Vector2d >"
  },
  "api/g3.DVectorArray3-1.html": {
    "href": "api/g3.DVectorArray3-1.html",
    "title": "Class DVectorArray3<T> | ViRGIS VR GIS",
    "keywords": "Class DVectorArray3<T> Inheritance Object DVectorArray3<T> DIndexArray3i DVectorArray3d DVectorArray3f DVectorArray3i Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DVectorArray3<T> : IEnumerable<T>, IEnumerable Type Parameters Name Description T Constructors | Improve this Doc View Source DVectorArray3(T[]) Declaration public DVectorArray3(T[] data) Parameters Type Name Description T[] data | Improve this Doc View Source DVectorArray3(Int32) Declaration public DVectorArray3(int nCount = 0) Parameters Type Name Description Int32 nCount Fields | Improve this Doc View Source vector Declaration public DVector<T> vector Field Value Type Description DVector <T> Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Append(T, T, T) Declaration public void Append(T a, T b, T c) Parameters Type Name Description T a T b T c | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> | Improve this Doc View Source Resize(Int32) Declaration public void Resize(int count) Parameters Type Name Description Int32 count | Improve this Doc View Source Set(Int32, T, T, T) Declaration public void Set(int i, T a, T b, T c) Parameters Type Name Description Int32 i T a T b T c"
  },
  "api/g3.DVectorArray3d.html": {
    "href": "api/g3.DVectorArray3d.html",
    "title": "Class DVectorArray3d | ViRGIS VR GIS",
    "keywords": "Class DVectorArray3d Inheritance Object DVectorArray3 < Double > DVectorArray3d Inherited Members DVectorArray3<Double>.vector DVectorArray3<Double>.Count DVectorArray3<Double>.GetEnumerator() DVectorArray3<Double>.Resize(Int32) DVectorArray3<Double>.Set(Int32, Double, Double, Double) DVectorArray3<Double>.Append(Double, Double, Double) DVectorArray3<Double>.Clear() Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DVectorArray3d : DVectorArray3<double>, IEnumerable<double>, IEnumerable Constructors | Improve this Doc View Source DVectorArray3d(Double[]) Declaration public DVectorArray3d(double[] data) Parameters Type Name Description Double [] data | Improve this Doc View Source DVectorArray3d(Int32) Declaration public DVectorArray3d(int nCount = 0) Parameters Type Name Description Int32 nCount Properties | Improve this Doc View Source Item[Int32] Declaration public Vector3d this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Vector3d Methods | Improve this Doc View Source AsVector3d() Declaration public IEnumerable<Vector3d> AsVector3d() Returns Type Description IEnumerable < Vector3d >"
  },
  "api/g3.DVectorArray3f.html": {
    "href": "api/g3.DVectorArray3f.html",
    "title": "Class DVectorArray3f | ViRGIS VR GIS",
    "keywords": "Class DVectorArray3f Inheritance Object DVectorArray3 < Single > DVectorArray3f Inherited Members DVectorArray3<Single>.vector DVectorArray3<Single>.Count DVectorArray3<Single>.GetEnumerator() DVectorArray3<Single>.Resize(Int32) DVectorArray3<Single>.Set(Int32, Single, Single, Single) DVectorArray3<Single>.Append(Single, Single, Single) DVectorArray3<Single>.Clear() Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DVectorArray3f : DVectorArray3<float>, IEnumerable<float>, IEnumerable Constructors | Improve this Doc View Source DVectorArray3f(Int32) Declaration public DVectorArray3f(int nCount = 0) Parameters Type Name Description Int32 nCount | Improve this Doc View Source DVectorArray3f(Single[]) Declaration public DVectorArray3f(float[] data) Parameters Type Name Description Single [] data Properties | Improve this Doc View Source Item[Int32] Declaration public Vector3f this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Vector3f Methods | Improve this Doc View Source AsVector3f() Declaration public IEnumerable<Vector3f> AsVector3f() Returns Type Description IEnumerable < Vector3f >"
  },
  "api/g3.DVectorArray3i.html": {
    "href": "api/g3.DVectorArray3i.html",
    "title": "Class DVectorArray3i | ViRGIS VR GIS",
    "keywords": "Class DVectorArray3i Inheritance Object DVectorArray3 < Int32 > DVectorArray3i Inherited Members DVectorArray3<Int32>.vector DVectorArray3<Int32>.Count DVectorArray3<Int32>.GetEnumerator() DVectorArray3<Int32>.Resize(Int32) DVectorArray3<Int32>.Set(Int32, Int32, Int32, Int32) DVectorArray3<Int32>.Append(Int32, Int32, Int32) DVectorArray3<Int32>.Clear() Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DVectorArray3i : DVectorArray3<int>, IEnumerable<int>, IEnumerable Constructors | Improve this Doc View Source DVectorArray3i(Int32) Declaration public DVectorArray3i(int nCount = 0) Parameters Type Name Description Int32 nCount | Improve this Doc View Source DVectorArray3i(Int32[]) Declaration public DVectorArray3i(int[] data) Parameters Type Name Description Int32 [] data Properties | Improve this Doc View Source Item[Int32] Declaration public Vector3i this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Vector3i Methods | Improve this Doc View Source AsVector3i() Declaration public IEnumerable<Vector3i> AsVector3i() Returns Type Description IEnumerable < Vector3i > | Improve this Doc View Source Set(Int32, Int32, Int32, Int32, Boolean) Declaration public void Set(int i, int a, int b, int c, bool bCycle = false) Parameters Type Name Description Int32 i Int32 a Int32 b Int32 c Boolean bCycle"
  },
  "api/g3.DynamicPriorityQueue-1.html": {
    "href": "api/g3.DynamicPriorityQueue-1.html",
    "title": "Class DynamicPriorityQueue<T> | ViRGIS VR GIS",
    "keywords": "Class DynamicPriorityQueue<T> Inheritance Object DynamicPriorityQueue<T> Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class DynamicPriorityQueue<T> : IEnumerable<T>, IEnumerable where T : DynamicPriorityQueueNode Type Parameters Name Description T Constructors | Improve this Doc View Source DynamicPriorityQueue() Declaration public DynamicPriorityQueue() Fields | Improve this Doc View Source EnableDebugChecks Declaration public bool EnableDebugChecks Field Value Type Description Boolean Properties | Improve this Doc View Source Count number of nodes currently in queue Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source First node at head of queue Declaration public T First { get; } Property Value Type Description T | Improve this Doc View Source FirstPriority Priority of node at head of queue Declaration public float FirstPriority { get; } Property Value Type Description Single Methods | Improve this Doc View Source Clear(Boolean) reset the queue to empty state. if bFreeMemory is false, we don't discard internal data structures, so there will be less allocation next time (this does not make a huge difference...) Declaration public void Clear(bool bFreeMemory = true) Parameters Type Name Description Boolean bFreeMemory | Improve this Doc View Source Contains(T) constant-time check to see if node is already in queue Declaration public bool Contains(T node) Parameters Type Name Description T node Returns Type Description Boolean | Improve this Doc View Source DebugPrint() Declaration public void DebugPrint() | Improve this Doc View Source Dequeue() remove node at head of queue, update queue, and return that node Declaration public T Dequeue() Returns Type Description T | Improve this Doc View Source Enqueue(T, Single) Add node to list w/ given priority Behavior is undefined if you call w/ same node twice Declaration public void Enqueue(T node, float priority) Parameters Type Name Description T node Single priority | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> | Improve this Doc View Source IsValidQueue() Check if queue has been corrupted Declaration public bool IsValidQueue() Returns Type Description Boolean | Improve this Doc View Source Remove(T) remove this node from queue. Undefined behavior if called w/ same node twice! Behavior is undefined if you call w/ node that is not in queue Declaration public void Remove(T node) Parameters Type Name Description T node | Improve this Doc View Source Update(T, Single) update priority at node, and then move it to correct position in queue Behavior is undefined if you call w/ node that is not in queue Declaration public void Update(T node, float priority) Parameters Type Name Description T node Single priority"
  },
  "api/g3.DynamicPriorityQueueNode.html": {
    "href": "api/g3.DynamicPriorityQueueNode.html",
    "title": "Class DynamicPriorityQueueNode | ViRGIS VR GIS",
    "keywords": "Class DynamicPriorityQueueNode To use DynamicPriorityQueue, your queue node type needs to subclass this one. However the priority and index members are for internal queue use, not yours! Inheritance Object DynamicPriorityQueueNode Namespace : g3 Assembly : geometry3Sharp.dll Syntax public abstract class DynamicPriorityQueueNode Properties | Improve this Doc View Source priority Declaration public float priority { get; protected set; } Property Value Type Description Single"
  },
  "api/g3.EdgeConstraint.html": {
    "href": "api/g3.EdgeConstraint.html",
    "title": "Struct EdgeConstraint | ViRGIS VR GIS",
    "keywords": "Struct EdgeConstraint Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct EdgeConstraint Constructors | Improve this Doc View Source EdgeConstraint(EdgeRefineFlags) Declaration public EdgeConstraint(EdgeRefineFlags rflags) Parameters Type Name Description EdgeRefineFlags rflags | Improve this Doc View Source EdgeConstraint(EdgeRefineFlags, IProjectionTarget) Declaration public EdgeConstraint(EdgeRefineFlags rflags, IProjectionTarget target) Parameters Type Name Description EdgeRefineFlags rflags IProjectionTarget target Fields | Improve this Doc View Source FullyConstrained Declaration public static readonly EdgeConstraint FullyConstrained Field Value Type Description EdgeConstraint | Improve this Doc View Source NoFlips Declaration public static readonly EdgeConstraint NoFlips Field Value Type Description EdgeConstraint | Improve this Doc View Source Target Declaration public IProjectionTarget Target Field Value Type Description IProjectionTarget | Improve this Doc View Source TrackingSetID Declaration public int TrackingSetID Field Value Type Description Int32 | Improve this Doc View Source Unconstrained Declaration public static readonly EdgeConstraint Unconstrained Field Value Type Description EdgeConstraint Properties | Improve this Doc View Source CanCollapse Declaration public bool CanCollapse { get; } Property Value Type Description Boolean | Improve this Doc View Source CanFlip Declaration public bool CanFlip { get; } Property Value Type Description Boolean | Improve this Doc View Source CanSplit Declaration public bool CanSplit { get; } Property Value Type Description Boolean | Improve this Doc View Source IsUnconstrained Declaration public bool IsUnconstrained { get; } Property Value Type Description Boolean | Improve this Doc View Source NoModifications Declaration public bool NoModifications { get; } Property Value Type Description Boolean"
  },
  "api/g3.EdgeLoop.html": {
    "href": "api/g3.EdgeLoop.html",
    "title": "Class EdgeLoop | ViRGIS VR GIS",
    "keywords": "Class EdgeLoop Sequential set of vertices/edges in a mesh, that form a closed loop. If all you have are the vertices, use EdgeLoop.VertexLoopToEdgeLoop() to construct an EdgeLoop Inheritance Object EdgeLoop Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class EdgeLoop Constructors | Improve this Doc View Source EdgeLoop(DMesh3) Declaration public EdgeLoop(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh | Improve this Doc View Source EdgeLoop(DMesh3, Int32[], Int32[], Boolean) Declaration public EdgeLoop(DMesh3 mesh, int[] vertices, int[] edges, bool bCopyArrays) Parameters Type Name Description DMesh3 mesh Int32 [] vertices Int32 [] edges Boolean bCopyArrays | Improve this Doc View Source EdgeLoop(EdgeLoop) Declaration public EdgeLoop(EdgeLoop copy) Parameters Type Name Description EdgeLoop copy Fields | Improve this Doc View Source BowtieVertices Declaration public int[] BowtieVertices Field Value Type Description Int32 [] | Improve this Doc View Source Edges Declaration public int[] Edges Field Value Type Description Int32 [] | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 | Improve this Doc View Source Vertices Declaration public int[] Vertices Field Value Type Description Int32 [] Properties | Improve this Doc View Source EdgeCount Declaration public int EdgeCount { get; } Property Value Type Description Int32 | Improve this Doc View Source VertexCount Declaration public int VertexCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source CheckValidity(FailMode) Exhaustively check that verts and edges of this EdgeLoop are consistent. Not for production use. Declaration public bool CheckValidity(FailMode eFailMode = FailMode.Throw) Parameters Type Name Description FailMode eFailMode Returns Type Description Boolean | Improve this Doc View Source CorrectOrientation() if this is a border edge-loop, we can check that it is oriented correctly, and if not, reverse it. Returns true if we reversed orientation. Declaration public bool CorrectOrientation() Returns Type Description Boolean | Improve this Doc View Source CountWithinTolerance(Vector3d, Double, out Int32) Declaration public int CountWithinTolerance(Vector3d v, double tol, out int last_in_tol) Parameters Type Name Description Vector3d v Double tol Int32 last_in_tol Returns Type Description Int32 | Improve this Doc View Source FindNearestVertex(Vector3d) find index of vertices of loop that is closest to point v Declaration public int FindNearestVertex(Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Int32 | Improve this Doc View Source FindVertexIndex(Int32) find index of vertex vID in Vertices list, or -1 if not found Declaration public int FindVertexIndex(int vID) Parameters Type Name Description Int32 vID Returns Type Description Int32 | Improve this Doc View Source FromEdges(DMesh3, IList<Int32>) construct EdgeLoop from a list of edges of mesh Declaration public static EdgeLoop FromEdges(DMesh3 mesh, IList<int> edges) Parameters Type Name Description DMesh3 mesh IList < Int32 > edges Returns Type Description EdgeLoop | Improve this Doc View Source FromVertices(DMesh3, IList<Int32>) construct EdgeLoop from a list of vertices of mesh Declaration public static EdgeLoop FromVertices(DMesh3 mesh, IList<int> vertices) Parameters Type Name Description DMesh3 mesh IList < Int32 > vertices Returns Type Description EdgeLoop | Improve this Doc View Source FromVertices(DMesh3, IList<Int32>, Boolean) construct EdgeLoop from a list of vertices of mesh if loop is a boundary edge, we can correct orientation if requested Declaration public static EdgeLoop FromVertices(DMesh3 mesh, IList<int> vertices, bool bAutoOrient = true) Parameters Type Name Description DMesh3 mesh IList < Int32 > vertices Boolean bAutoOrient Returns Type Description EdgeLoop | Improve this Doc View Source GetBounds() Declaration public AxisAlignedBox3d GetBounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source GetVertex(Int32) Declaration public Vector3d GetVertex(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3d | Improve this Doc View Source GetVertexSpan(Int32, Int32, Int32[], Boolean) stores vertices [starti, starti+1, ... starti+count-1] in span, and returns span, or null if invalid range Declaration public int[] GetVertexSpan(int starti, int count, int[] span, bool reverse = false) Parameters Type Name Description Int32 starti Int32 count Int32 [] span Boolean reverse Returns Type Description Int32 [] | Improve this Doc View Source IsBoundaryLoop(DMesh3) Check if all edges of this loop are boundary edges. If testMesh != null, will check that mesh instead of internal Mesh Declaration public bool IsBoundaryLoop(DMesh3 testMesh = null) Parameters Type Name Description DMesh3 testMesh Returns Type Description Boolean | Improve this Doc View Source IsInternalLoop() check if all edges of this loop are internal edges (ie none on boundary) Declaration public bool IsInternalLoop() Returns Type Description Boolean | Improve this Doc View Source IsSameLoop(EdgeLoop, Boolean, Double) Declaration public bool IsSameLoop(EdgeLoop Loop2, bool bReverse2 = false, double tolerance = 1E-08) Parameters Type Name Description EdgeLoop Loop2 Boolean bReverse2 Double tolerance Returns Type Description Boolean | Improve this Doc View Source Reverse() Declaration public void Reverse() | Improve this Doc View Source ToCurve(DMesh3) Declaration public DCurve3 ToCurve(DMesh3 sourceMesh = null) Parameters Type Name Description DMesh3 sourceMesh Returns Type Description DCurve3 | Improve this Doc View Source VertexLoopToEdgeLoop(DMesh3, Int32[]) Convert a vertex loop to an edge loop. This should be somewhere else... Declaration public static int[] VertexLoopToEdgeLoop(DMesh3 mesh, int[] vertex_loop) Parameters Type Name Description DMesh3 mesh Int32 [] vertex_loop Returns Type Description Int32 []"
  },
  "api/g3.EdgeLoopRemesher.html": {
    "href": "api/g3.EdgeLoopRemesher.html",
    "title": "Class EdgeLoopRemesher | ViRGIS VR GIS",
    "keywords": "Class EdgeLoopRemesher This is a custom Remesher that only affects the edges along an EdgeLoop. The edges are only split and collapsed, flipping is not permitted. The loop vertices are smoothed along the loop, ie using curve laplacian rather than one-ring laplacian. [TODO] avoid rebuild_edge_list(). requires handling various cases below... [TODO] Precompute() seems overly expensive...? [TODO] local-smoothing impl is not very efficient. Should not be necessary to rebuild nbrhood each time if we are not changing it. Inheritance Object MeshRefinerBase Remesher EdgeLoopRemesher Inherited Members Remesher.EnableFlips Remesher.EnableCollapses Remesher.EnableSplits Remesher.EnableSmoothing Remesher.PreventNormalFlips Remesher.MinEdgeLength Remesher.MaxEdgeLength Remesher.SmoothSpeedT Remesher.SmoothType Remesher.CustomSmoothF Remesher.VertexControlF Remesher.DebugEdges Remesher.ProjectionMode Remesher.EnableParallelProjection Remesher.EnableParallelSmooth Remesher.EnableSmoothInPlace Remesher.ProjectionTarget Remesher.SetProjectionTarget(IProjectionTarget) Remesher.SetTargetEdgeLength(Double) Remesher.ENABLE_PROFILING Remesher.ModifiedEdgesLastPass Remesher.BasicRemeshPass() Remesher.ProcessEdge(Int32) Remesher.update_after_split(Int32, Int32, Int32, DMesh3.EdgeSplitInfo) Remesher.project_vertex(Int32, IProjectionTarget) Remesher.get_projected_collapse_position(Int32, Vector3d) Remesher.FullSmoothPass_InPlace(Boolean) Remesher.FullSmoothPass_Buffer(Boolean) Remesher.vBufferV Remesher.vModifiedV Remesher.InitializeVertexBufferForPass() Remesher.ApplyVertexBuffer(Boolean) Remesher.ComputeSmoothedVertexPos(Int32, Func<DMesh3, Int32, Double, Vector3d>, Boolean) Remesher.FullProjectionPass() Remesher.ENABLE_DEBUG_CHECKS Remesher.DoDebugChecks() Remesher.begin_pass() Remesher.begin_ops() Remesher.end_ops() Remesher.end_smooth() Remesher.begin_project() Remesher.end_project() Remesher.begin_collapse() Remesher.end_collapse() Remesher.begin_flip() Remesher.end_flip() Remesher.begin_split() Remesher.end_split() MeshRefinerBase.mesh MeshRefinerBase.constraints MeshRefinerBase.AllowCollapseFixedVertsWithSameSetID MeshRefinerBase.EdgeFlipTolerance MeshRefinerBase.edge_flip_tol MeshRefinerBase.Mesh MeshRefinerBase.Constraints MeshRefinerBase.SetExternalConstraints(MeshConstraints) MeshRefinerBase.Progress MeshRefinerBase.Cancelled() MeshRefinerBase.edge_flip_metric(Vector3d, Vector3d) MeshRefinerBase.collapse_creates_flip_or_invalid(Int32, Int32, Vector3d, Int32, Int32) MeshRefinerBase.flip_inverts_normals(Int32, Int32, Int32, Int32, Int32) MeshRefinerBase.can_collapse_constraints(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32) MeshRefinerBase.can_collapse_vtx(Int32, Int32, Int32, Int32) MeshRefinerBase.vertex_is_fixed(Int32) MeshRefinerBase.vertex_is_constrained(Int32) MeshRefinerBase.get_vertex_constraint(Int32) MeshRefinerBase.get_vertex_constraint(Int32, VertexConstraint) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class EdgeLoopRemesher : Remesher Constructors | Improve this Doc View Source EdgeLoopRemesher(DMesh3, EdgeLoop) Declaration public EdgeLoopRemesher(DMesh3 m, EdgeLoop loop) Parameters Type Name Description DMesh3 m EdgeLoop loop Fields | Improve this Doc View Source InputLoop Declaration public EdgeLoop InputLoop Field Value Type Description EdgeLoop | Improve this Doc View Source LocalSmoothingRings Can optionally include N one-rings around the loop in the smoothing/projection pass. This will produce cleaner results. Declaration public int LocalSmoothingRings Field Value Type Description Int32 | Improve this Doc View Source OutputLoop Declaration public EdgeLoop OutputLoop Field Value Type Description EdgeLoop Methods | Improve this Doc View Source begin_smooth() Declaration protected override void begin_smooth() Overrides Remesher.begin_smooth() | Improve this Doc View Source end_pass() Declaration protected override void end_pass() Overrides Remesher.end_pass() | Improve this Doc View Source next_edge(Int32, out Boolean) Declaration protected override int next_edge(int cur_eid, out bool bDone) Parameters Type Name Description Int32 cur_eid Boolean bDone Returns Type Description Int32 Overrides Remesher.next_edge(Int32, out Boolean) | Improve this Doc View Source OnEdgeCollapse(Int32, Int32, Int32, DMesh3.EdgeCollapseInfo) Declaration protected override void OnEdgeCollapse(int edgeID, int va, int vb, DMesh3.EdgeCollapseInfo collapseInfo) Parameters Type Name Description Int32 edgeID Int32 va Int32 vb DMesh3.EdgeCollapseInfo collapseInfo Overrides Remesher.OnEdgeCollapse(Int32, Int32, Int32, DMesh3.EdgeCollapseInfo) | Improve this Doc View Source OnEdgeSplit(Int32, Int32, Int32, DMesh3.EdgeSplitInfo) Declaration protected override void OnEdgeSplit(int edgeID, int va, int vb, DMesh3.EdgeSplitInfo splitInfo) Parameters Type Name Description Int32 edgeID Int32 va Int32 vb DMesh3.EdgeSplitInfo splitInfo Overrides Remesher.OnEdgeSplit(Int32, Int32, Int32, DMesh3.EdgeSplitInfo) | Improve this Doc View Source Precompute() Declaration public override void Precompute() Overrides Remesher.Precompute() | Improve this Doc View Source project_vertices() Declaration protected override IEnumerable<int> project_vertices() Returns Type Description IEnumerable < Int32 > Overrides Remesher.project_vertices() | Improve this Doc View Source smooth_vertices() Declaration protected override IEnumerable<int> smooth_vertices() Returns Type Description IEnumerable < Int32 > Overrides Remesher.smooth_vertices() | Improve this Doc View Source start_edges() Declaration protected override int start_edges() Returns Type Description Int32 Overrides Remesher.start_edges() | Improve this Doc View Source UpdateLoop(EdgeLoop) Declaration public void UpdateLoop(EdgeLoop loop) Parameters Type Name Description EdgeLoop loop"
  },
  "api/g3.EdgeRefineFlags.html": {
    "href": "api/g3.EdgeRefineFlags.html",
    "title": "Enum EdgeRefineFlags | ViRGIS VR GIS",
    "keywords": "Enum EdgeRefineFlags Namespace : g3 Assembly : geometry3Sharp.dll Syntax [Flags] public enum EdgeRefineFlags Fields Name Description FullyConstrained NoCollapse NoConstraint NoFlip NoSplit PreserveTopology"
  },
  "api/g3.EdgeSpan.html": {
    "href": "api/g3.EdgeSpan.html",
    "title": "Class EdgeSpan | ViRGIS VR GIS",
    "keywords": "Class EdgeSpan An EdgeSpan is a continous set of edges in a Mesh that is not closed (that would be an EdgeLoop) Inheritance Object EdgeSpan Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class EdgeSpan Constructors | Improve this Doc View Source EdgeSpan(DMesh3) Declaration public EdgeSpan(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh | Improve this Doc View Source EdgeSpan(DMesh3, Int32[], Int32[], Boolean) Declaration public EdgeSpan(DMesh3 mesh, int[] vertices, int[] edges, bool bCopyArrays) Parameters Type Name Description DMesh3 mesh Int32 [] vertices Int32 [] edges Boolean bCopyArrays Fields | Improve this Doc View Source BowtieVertices Declaration public int[] BowtieVertices Field Value Type Description Int32 [] | Improve this Doc View Source Edges Declaration public int[] Edges Field Value Type Description Int32 [] | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 | Improve this Doc View Source Vertices Declaration public int[] Vertices Field Value Type Description Int32 [] Properties | Improve this Doc View Source EdgeCount Declaration public int EdgeCount { get; } Property Value Type Description Int32 | Improve this Doc View Source VertexCount Declaration public int VertexCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source CheckValidity(FailMode) Exhaustively check that verts and edges of this EdgeSpan are consistent. Not for production use. Declaration public bool CheckValidity(FailMode eFailMode = FailMode.Throw) Parameters Type Name Description FailMode eFailMode Returns Type Description Boolean | Improve this Doc View Source CountWithinTolerance(Vector3d, Double, out Int32) Declaration public int CountWithinTolerance(Vector3d v, double tol, out int last_in_tol) Parameters Type Name Description Vector3d v Double tol Int32 last_in_tol Returns Type Description Int32 | Improve this Doc View Source FindNearestVertex(Vector3d) Declaration public int FindNearestVertex(Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Int32 | Improve this Doc View Source FromEdges(DMesh3, IList<Int32>) construct EdgeSpan from a list of edges of mesh Declaration public static EdgeSpan FromEdges(DMesh3 mesh, IList<int> edges) Parameters Type Name Description DMesh3 mesh IList < Int32 > edges Returns Type Description EdgeSpan | Improve this Doc View Source FromVertices(DMesh3, IList<Int32>) construct EdgeSpan from a list of vertices of mesh Declaration public static EdgeSpan FromVertices(DMesh3 mesh, IList<int> vertices) Parameters Type Name Description DMesh3 mesh IList < Int32 > vertices Returns Type Description EdgeSpan | Improve this Doc View Source GetBounds() Declaration public AxisAlignedBox3d GetBounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source GetVertex(Int32) Declaration public Vector3d GetVertex(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3d | Improve this Doc View Source IsBoundarySpan(DMesh3) Declaration public bool IsBoundarySpan(DMesh3 testMesh = null) Parameters Type Name Description DMesh3 testMesh Returns Type Description Boolean | Improve this Doc View Source IsInternalSpan() Declaration public bool IsInternalSpan() Returns Type Description Boolean | Improve this Doc View Source IsSameSpan(EdgeSpan, Boolean, Double) Declaration public bool IsSameSpan(EdgeSpan Spanw, bool bReverse2 = false, double tolerance = 1E-08) Parameters Type Name Description EdgeSpan Spanw Boolean bReverse2 Double tolerance Returns Type Description Boolean | Improve this Doc View Source ToCurve(DMesh3) Declaration public DCurve3 ToCurve(DMesh3 sourceMesh = null) Parameters Type Name Description DMesh3 sourceMesh Returns Type Description DCurve3 | Improve this Doc View Source VerticesToEdges(DMesh3, Int32[]) Convert vertex span to list of edges. This should be somewhere else. Declaration public static int[] VerticesToEdges(DMesh3 mesh, int[] vertex_span) Parameters Type Name Description DMesh3 mesh Int32 [] vertex_span Returns Type Description Int32 []"
  },
  "api/g3.Ellipse2d.html": {
    "href": "api/g3.Ellipse2d.html",
    "title": "Class Ellipse2d | ViRGIS VR GIS",
    "keywords": "Class Ellipse2d Inheritance Object Ellipse2d Implements IParametricCurve2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class Ellipse2d : IParametricCurve2d Constructors | Improve this Doc View Source Ellipse2d(Vector2d, Vector2d, Vector2d, Vector2d) Declaration public Ellipse2d(Vector2d center, Vector2d axis0, Vector2d axis1, Vector2d extent) Parameters Type Name Description Vector2d center Vector2d axis0 Vector2d axis1 Vector2d extent | Improve this Doc View Source Ellipse2d(Vector2d, Vector2d, Vector2d, Double, Double) Declaration public Ellipse2d(Vector2d center, Vector2d axis0, Vector2d axis1, double extent0, double extent1) Parameters Type Name Description Vector2d center Vector2d axis0 Vector2d axis1 Double extent0 Double extent1 | Improve this Doc View Source Ellipse2d(Vector2d, Double, Double, Double) Declaration public Ellipse2d(Vector2d center, double rotationAngleDeg, double extent0, double extent1) Parameters Type Name Description Vector2d center Double rotationAngleDeg Double extent0 Double extent1 Fields | Improve this Doc View Source Axis0 Declaration public Vector2d Axis0 Field Value Type Description Vector2d | Improve this Doc View Source Axis1 Declaration public Vector2d Axis1 Field Value Type Description Vector2d | Improve this Doc View Source Center Declaration public Vector2d Center Field Value Type Description Vector2d | Improve this Doc View Source Extent Declaration public Vector2d Extent Field Value Type Description Vector2d | Improve this Doc View Source IsReversed Declaration public bool IsReversed Field Value Type Description Boolean Properties | Improve this Doc View Source ApproxArcLen Declaration public double ApproxArcLen { get; } Property Value Type Description Double | Improve this Doc View Source ArcLength Declaration public double ArcLength { get; } Property Value Type Description Double | Improve this Doc View Source Area Declaration public double Area { get; } Property Value Type Description Double | Improve this Doc View Source HasArcLength Declaration public bool HasArcLength { get; } Property Value Type Description Boolean | Improve this Doc View Source IsClosed Declaration public bool IsClosed { get; } Property Value Type Description Boolean | Improve this Doc View Source IsTransformable Declaration public bool IsTransformable { get; } Property Value Type Description Boolean | Improve this Doc View Source ParamLength Declaration public double ParamLength { get; } Property Value Type Description Double Methods | Improve this Doc View Source Clone() Declaration public IParametricCurve2d Clone() Returns Type Description IParametricCurve2d | Improve this Doc View Source Contains(Vector2d) Declaration public bool Contains(Vector2d point) Parameters Type Name Description Vector2d point Returns Type Description Boolean | Improve this Doc View Source Evaluate(Vector2d) Declaration public double Evaluate(Vector2d point) Parameters Type Name Description Vector2d point Returns Type Description Double | Improve this Doc View Source FromCoefficients(Matrix2d, Vector2d, Double) Declaration public bool FromCoefficients(Matrix2d A, Vector2d B, double C) Parameters Type Name Description Matrix2d A Vector2d B Double C Returns Type Description Boolean | Improve this Doc View Source FromCoefficients(Double[]) Declaration public bool FromCoefficients(double[] coeff) Parameters Type Name Description Double [] coeff Returns Type Description Boolean | Improve this Doc View Source GetM() Declaration public Matrix2d GetM() Returns Type Description Matrix2d | Improve this Doc View Source GetMInverse() Declaration public Matrix2d GetMInverse() Returns Type Description Matrix2d | Improve this Doc View Source Reverse() Declaration public void Reverse() | Improve this Doc View Source SampleArcLength(Double) Declaration public Vector2d SampleArcLength(double a) Parameters Type Name Description Double a Returns Type Description Vector2d | Improve this Doc View Source SampleDeg(Double) Declaration public Vector2d SampleDeg(double degrees) Parameters Type Name Description Double degrees Returns Type Description Vector2d | Improve this Doc View Source SampleRad(Double) Declaration public Vector2d SampleRad(double radians) Parameters Type Name Description Double radians Returns Type Description Vector2d | Improve this Doc View Source SampleT(Double) Declaration public Vector2d SampleT(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source TangentT(Double) Declaration public Vector2d TangentT(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source ToCoefficients() Declaration public double[] ToCoefficients() Returns Type Description Double [] | Improve this Doc View Source ToCoefficients(ref Matrix2d, ref Vector2d, ref Double) Declaration public void ToCoefficients(ref Matrix2d A, ref Vector2d B, ref double C) Parameters Type Name Description Matrix2d A Vector2d B Double C | Improve this Doc View Source Transform(ITransform2) Declaration public void Transform(ITransform2 xform) Parameters Type Name Description ITransform2 xform Implements IParametricCurve2d"
  },
  "api/g3.EllipseArc2d.html": {
    "href": "api/g3.EllipseArc2d.html",
    "title": "Class EllipseArc2d | ViRGIS VR GIS",
    "keywords": "Class EllipseArc2d Inheritance Object EllipseArc2d Implements IParametricCurve2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class EllipseArc2d : IParametricCurve2d Constructors | Improve this Doc View Source EllipseArc2d(Vector2d, Vector2d, Vector2d, Vector2d, Double, Double) Declaration public EllipseArc2d(Vector2d center, Vector2d axis0, Vector2d axis1, Vector2d extent, double startDeg, double endDeg) Parameters Type Name Description Vector2d center Vector2d axis0 Vector2d axis1 Vector2d extent Double startDeg Double endDeg | Improve this Doc View Source EllipseArc2d(Vector2d, Double, Double, Double, Double, Double) Declaration public EllipseArc2d(Vector2d center, double rotationAngleDeg, double extent0, double extent1, double startDeg, double endDeg) Parameters Type Name Description Vector2d center Double rotationAngleDeg Double extent0 Double extent1 Double startDeg Double endDeg Fields | Improve this Doc View Source AngleEndDeg Declaration public double AngleEndDeg Field Value Type Description Double | Improve this Doc View Source AngleStartDeg Declaration public double AngleStartDeg Field Value Type Description Double | Improve this Doc View Source Axis0 Declaration public Vector2d Axis0 Field Value Type Description Vector2d | Improve this Doc View Source Axis1 Declaration public Vector2d Axis1 Field Value Type Description Vector2d | Improve this Doc View Source Center Declaration public Vector2d Center Field Value Type Description Vector2d | Improve this Doc View Source Extent Declaration public Vector2d Extent Field Value Type Description Vector2d | Improve this Doc View Source IsReversed Declaration public bool IsReversed Field Value Type Description Boolean Properties | Improve this Doc View Source ArcLength Declaration public double ArcLength { get; } Property Value Type Description Double | Improve this Doc View Source HasArcLength Declaration public bool HasArcLength { get; } Property Value Type Description Boolean | Improve this Doc View Source IsClosed Declaration public bool IsClosed { get; } Property Value Type Description Boolean | Improve this Doc View Source IsTransformable Declaration public bool IsTransformable { get; } Property Value Type Description Boolean | Improve this Doc View Source ParamLength Declaration public double ParamLength { get; } Property Value Type Description Double Methods | Improve this Doc View Source Clone() Declaration public IParametricCurve2d Clone() Returns Type Description IParametricCurve2d | Improve this Doc View Source Reverse() Declaration public void Reverse() | Improve this Doc View Source SampleArcLength(Double) Declaration public Vector2d SampleArcLength(double a) Parameters Type Name Description Double a Returns Type Description Vector2d | Improve this Doc View Source SampleT(Double) Declaration public Vector2d SampleT(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source TangentT(Double) Declaration public Vector2d TangentT(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source Transform(ITransform2) Declaration public void Transform(ITransform2 xform) Parameters Type Name Description ITransform2 xform Implements IParametricCurve2d"
  },
  "api/g3.FaceGroupOptimizer.html": {
    "href": "api/g3.FaceGroupOptimizer.html",
    "title": "Class FaceGroupOptimizer | ViRGIS VR GIS",
    "keywords": "Class FaceGroupOptimizer Given input mesh with a set of face groups, optimize the face group boundaries. This involves flipping triangles between groups, and/or assigning to \"background\" group. Also has Dilate/Contract functions to grow/shrink groups in various ways. Inheritance Object FaceGroupOptimizer Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class FaceGroupOptimizer Constructors | Improve this Doc View Source FaceGroupOptimizer(DMesh3) Declaration public FaceGroupOptimizer(DMesh3 meshIn) Parameters Type Name Description DMesh3 meshIn Fields | Improve this Doc View Source BackgroundGroupID Declaration public int BackgroundGroupID Field Value Type Description Int32 | Improve this Doc View Source DontClipEnclosedFins Declaration public bool DontClipEnclosedFins Field Value Type Description Boolean | Improve this Doc View Source GetEnumeratorF Declaration public Func<IEnumerable<int>> GetEnumeratorF Field Value Type Description Func < IEnumerable < Int32 >> | Improve this Doc View Source NoEarGroupSwaps Declaration public bool NoEarGroupSwaps Field Value Type Description Boolean Properties | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh { get; } Property Value Type Description DMesh3 Methods | Improve this Doc View Source ClipFins(Boolean) Declaration public int ClipFins(bool bClipLoners) Parameters Type Name Description Boolean bClipLoners Returns Type Description Int32 | Improve this Doc View Source ContractAllGroups(Int32, Boolean) Simultaneously contract all groups by N rings. if bBackroundOnly=true, then non-background group borders stay connected, otherwise they pull apart. Declaration public int ContractAllGroups(int nRings, bool bBackgroundOnly) Parameters Type Name Description Int32 nRings Boolean bBackgroundOnly Returns Type Description Int32 | Improve this Doc View Source DilateAllGroups(Int32) Simultaneously grow all groups into areas with background group id, expanding by N rings. does not expand across group borders. Declaration public int DilateAllGroups(int nRings) Parameters Type Name Description Int32 nRings Returns Type Description Int32 | Improve this Doc View Source FillEars(Boolean) Declaration public int FillEars(bool bFillTinyHoles) Parameters Type Name Description Boolean bFillTinyHoles Returns Type Description Int32 | Improve this Doc View Source LocalOptimize(Boolean, Boolean, Boolean, Boolean, Int32) Do rounds of ear-filling and fin-clipping until we can't anymore Returns true if group assignments were modified Declaration public bool LocalOptimize(bool bClipFins, bool bFillEars, bool bFillTinyHoles = true, bool bClipLoners = true, int max_iters = 100) Parameters Type Name Description Boolean bClipFins Boolean bFillEars Boolean bFillTinyHoles Boolean bClipLoners Int32 max_iters Returns Type Description Boolean"
  },
  "api/g3.FaceGroupUtil.html": {
    "href": "api/g3.FaceGroupUtil.html",
    "title": "Class FaceGroupUtil | ViRGIS VR GIS",
    "keywords": "Class FaceGroupUtil Inheritance Object FaceGroupUtil Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class FaceGroupUtil Methods | Improve this Doc View Source CountAllGroups(DMesh3) count number of tris in each group in mesh returned pairs are [group_id, tri_count] Declaration public static SparseList<int> CountAllGroups(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh Returns Type Description SparseList < Int32 > | Improve this Doc View Source FindAllGroups(DMesh3) find the set of group ids used in mesh Declaration public static HashSet<int> FindAllGroups(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh Returns Type Description HashSet < Int32 > | Improve this Doc View Source FindTrianglesByGroup(IMesh, Int32) find list of triangles in mesh with specific group id Declaration public static List<int> FindTrianglesByGroup(IMesh mesh, int findGroupID) Parameters Type Name Description IMesh mesh Int32 findGroupID Returns Type Description List < Int32 > | Improve this Doc View Source FindTriangleSetsByGroup(DMesh3, Int32) collect triangles by group id. Returns array of triangle lists (stored as arrays). This requires 2 passes over mesh, but each pass is linear Declaration public static int[][] FindTriangleSetsByGroup(DMesh3 mesh, int ignoreGID = -2147483648) Parameters Type Name Description DMesh3 mesh Int32 ignoreGID Returns Type Description Int32 [][] | Improve this Doc View Source SeparateMeshByGroups(DMesh3) Declaration public static DMesh3[] SeparateMeshByGroups(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh Returns Type Description DMesh3 [] | Improve this Doc View Source SeparateMeshByGroups(DMesh3, out Int32[]) split input mesh into submeshes based on group ID does not separate disconnected components w/ same group ID Declaration public static DMesh3[] SeparateMeshByGroups(DMesh3 mesh, out int[] groupIDs) Parameters Type Name Description DMesh3 mesh Int32 [] groupIDs Returns Type Description DMesh3 [] | Improve this Doc View Source SetGroupID(DMesh3, IEnumerable<Int32>, Int32) Set group id of subset of triangles in mesh Declaration public static void SetGroupID(DMesh3 mesh, IEnumerable<int> triangles, int to) Parameters Type Name Description DMesh3 mesh IEnumerable < Int32 > triangles Int32 to | Improve this Doc View Source SetGroupID(DMesh3, Int32) Set group ID of all triangles in mesh Declaration public static void SetGroupID(DMesh3 mesh, int to) Parameters Type Name Description DMesh3 mesh Int32 to | Improve this Doc View Source SetGroupToGroup(DMesh3, Int32, Int32) replace group id in mesh Declaration public static void SetGroupToGroup(DMesh3 mesh, int from, int to) Parameters Type Name Description DMesh3 mesh Int32 from Int32 to"
  },
  "api/g3.FailMode.html": {
    "href": "api/g3.FailMode.html",
    "title": "Enum FailMode | ViRGIS VR GIS",
    "keywords": "Enum FailMode Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum FailMode Fields Name Description DebugAssert gDevAssert ReturnOnly Throw"
  },
  "api/g3.FastPointWinding.html": {
    "href": "api/g3.FastPointWinding.html",
    "title": "Class FastPointWinding | ViRGIS VR GIS",
    "keywords": "Class FastPointWinding Formulas for point-set winding number approximation Inheritance Object FastPointWinding Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class FastPointWinding Methods | Improve this Doc View Source ComputeCoeffs(IPointSet, IEnumerable<Int32>, Double[], ref Vector3d, ref Double, ref Vector3d, ref Matrix3d) precompute constant coefficients of point winding number approximation pointAreas must be provided, and pointSet must have vertex normals! p: 'center' of expansion for points (area-weighted point avg) r: max distance from p to points order1: first-order vector coeff order2: second-order matrix coeff Declaration public static void ComputeCoeffs(IPointSet pointSet, IEnumerable<int> points, double[] pointAreas, ref Vector3d p, ref double r, ref Vector3d order1, ref Matrix3d order2) Parameters Type Name Description IPointSet pointSet IEnumerable < Int32 > points Double [] pointAreas Vector3d p Double r Vector3d order1 Matrix3d order2 | Improve this Doc View Source EvaluateOrder1Approx(ref Vector3d, ref Vector3d, ref Vector3d) Evaluate first-order FWN approximation at point q, relative to center c Declaration public static double EvaluateOrder1Approx(ref Vector3d center, ref Vector3d order1Coeff, ref Vector3d q) Parameters Type Name Description Vector3d center Vector3d order1Coeff Vector3d q Returns Type Description Double | Improve this Doc View Source EvaluateOrder2Approx(ref Vector3d, ref Vector3d, ref Matrix3d, ref Vector3d) Evaluate second-order FWN approximation at point q, relative to center c Declaration public static double EvaluateOrder2Approx(ref Vector3d center, ref Vector3d order1Coeff, ref Matrix3d order2Coeff, ref Vector3d q) Parameters Type Name Description Vector3d center Vector3d order1Coeff Matrix3d order2Coeff Vector3d q Returns Type Description Double | Improve this Doc View Source ExactEval(ref Vector3d, ref Vector3d, Double, ref Vector3d) Declaration public static double ExactEval(ref Vector3d x, ref Vector3d xn, double xA, ref Vector3d q) Parameters Type Name Description Vector3d x Vector3d xn Double xA Vector3d q Returns Type Description Double | Improve this Doc View Source Order1Approx(ref Vector3d, ref Vector3d, ref Vector3d, Double, ref Vector3d) Declaration public static double Order1Approx(ref Vector3d x, ref Vector3d p, ref Vector3d xn, double xA, ref Vector3d q) Parameters Type Name Description Vector3d x Vector3d p Vector3d xn Double xA Vector3d q Returns Type Description Double | Improve this Doc View Source Order2Approx(ref Vector3d, ref Vector3d, ref Vector3d, Double, ref Vector3d) Declaration public static double Order2Approx(ref Vector3d x, ref Vector3d p, ref Vector3d xn, double xA, ref Vector3d q) Parameters Type Name Description Vector3d x Vector3d p Vector3d xn Double xA Vector3d q Returns Type Description Double"
  },
  "api/g3.FastQuaternionSVD.html": {
    "href": "api/g3.FastQuaternionSVD.html",
    "title": "Class FastQuaternionSVD | ViRGIS VR GIS",
    "keywords": "Class FastQuaternionSVD Fast Approximate SVD of 3x3 matrix that returns quaternions. Implemented based on https://github.com/benjones/quatSVD/blob/master/quatSVD.hpp which was re-implemented from http://pages.cs.wisc.edu/~sifakis/project_pages/svd.html By default, only does a small number of diagonalization iterations (4), which limits the accuracy of the solution. Results are still orthonormal but error when reconstructing matrix will be larger. This is fine for many applications. Can increase accuracy by increasing NumJacobiIterations parameter Note: does not produce same quaternions as running SingularValueDecomposition on matrix and converting resulting U/V to quaternions. The numbers will be similar but the signs will be different Useful properties: quaternions are rotations, there are no mirrors like in normal SVD TODO: SymmetricMatrix3d currently a class, could make a struct (see comments) Inheritance Object FastQuaternionSVD Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class FastQuaternionSVD Constructors | Improve this Doc View Source FastQuaternionSVD() Declaration public FastQuaternionSVD() | Improve this Doc View Source FastQuaternionSVD(Matrix3d, Double, Int32) Declaration public FastQuaternionSVD(Matrix3d matrix, double epsilon = 2.2204460492503131E-16, int jacobiIters = 4) Parameters Type Name Description Matrix3d matrix Double epsilon Int32 jacobiIters Fields | Improve this Doc View Source S Declaration public Vector3d S Field Value Type Description Vector3d | Improve this Doc View Source U Declaration public Quaterniond U Field Value Type Description Quaterniond | Improve this Doc View Source V Declaration public Quaterniond V Field Value Type Description Quaterniond Methods | Improve this Doc View Source ReconstructMatrix() Compute U * S * V^T, useful for error-checking Declaration public Matrix3d ReconstructMatrix() Returns Type Description Matrix3d | Improve this Doc View Source Solve(Matrix3d, Double, Int32) Declaration public void Solve(Matrix3d matrix, double epsilon = 2.2204460492503131E-16, int jacobiIters = -1) Parameters Type Name Description Matrix3d matrix Double epsilon Int32 jacobiIters"
  },
  "api/g3.FastTriWinding.html": {
    "href": "api/g3.FastTriWinding.html",
    "title": "Class FastTriWinding | ViRGIS VR GIS",
    "keywords": "Class FastTriWinding Formulas for triangle winding number approximation Inheritance Object FastTriWinding Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class FastTriWinding Methods | Improve this Doc View Source ComputeCoeffs(DMesh3, IEnumerable<Int32>, ref Vector3d, ref Double, ref Vector3d, ref Matrix3d, MeshTriInfoCache) precompute constant coefficients of triangle winding number approximation p: 'center' of expansion for triangles (area-weighted centroid avg) r: max distance from p to triangles order1: first-order vector coeff order2: second-order matrix coeff triCache: optional precomputed triangle centroid/normal/area Declaration public static void ComputeCoeffs(DMesh3 mesh, IEnumerable<int> triangles, ref Vector3d p, ref double r, ref Vector3d order1, ref Matrix3d order2, MeshTriInfoCache triCache = null) Parameters Type Name Description DMesh3 mesh IEnumerable < Int32 > triangles Vector3d p Double r Vector3d order1 Matrix3d order2 MeshTriInfoCache triCache | Improve this Doc View Source EvaluateOrder1Approx(ref Vector3d, ref Vector3d, ref Vector3d) Evaluate first-order FWN approximation at point q, relative to center c Declaration public static double EvaluateOrder1Approx(ref Vector3d center, ref Vector3d order1Coeff, ref Vector3d q) Parameters Type Name Description Vector3d center Vector3d order1Coeff Vector3d q Returns Type Description Double | Improve this Doc View Source EvaluateOrder2Approx(ref Vector3d, ref Vector3d, ref Matrix3d, ref Vector3d) Evaluate second-order FWN approximation at point q, relative to center c Declaration public static double EvaluateOrder2Approx(ref Vector3d center, ref Vector3d order1Coeff, ref Matrix3d order2Coeff, ref Vector3d q) Parameters Type Name Description Vector3d center Vector3d order1Coeff Matrix3d order2Coeff Vector3d q Returns Type Description Double | Improve this Doc View Source Order1Approx(ref Triangle3d, ref Vector3d, ref Vector3d, ref Double, ref Vector3d) Declaration public static double Order1Approx(ref Triangle3d t, ref Vector3d p, ref Vector3d xn, ref double xA, ref Vector3d q) Parameters Type Name Description Triangle3d t Vector3d p Vector3d xn Double xA Vector3d q Returns Type Description Double | Improve this Doc View Source Order2Approx(ref Triangle3d, ref Vector3d, ref Vector3d, ref Double, ref Vector3d) Declaration public static double Order2Approx(ref Triangle3d t, ref Vector3d p, ref Vector3d xn, ref double xA, ref Vector3d q) Parameters Type Name Description Triangle3d t Vector3d p Vector3d xn Double xA Vector3d q Returns Type Description Double"
  },
  "api/g3.FileSystemUtils.html": {
    "href": "api/g3.FileSystemUtils.html",
    "title": "Class FileSystemUtils | ViRGIS VR GIS",
    "keywords": "Class FileSystemUtils Inheritance Object FileSystemUtils Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class FileSystemUtils Methods | Improve this Doc View Source CanAccessFolder(String) Declaration public static bool CanAccessFolder(string sPath) Parameters Type Name Description String sPath Returns Type Description Boolean | Improve this Doc View Source GetTempFilePathWithExtension(String) Declaration public static string GetTempFilePathWithExtension(string extension) Parameters Type Name Description String extension Returns Type Description String | Improve this Doc View Source IsFullFilesystemPath(String) Declaration public static bool IsFullFilesystemPath(string s) Parameters Type Name Description String s Returns Type Description Boolean | Improve this Doc View Source IsValidFilenameCharacter(Char) Declaration public static bool IsValidFilenameCharacter(char c) Parameters Type Name Description Char c Returns Type Description Boolean | Improve this Doc View Source IsValidFilenameString(String) Declaration public static bool IsValidFilenameString(string s) Parameters Type Name Description String s Returns Type Description Boolean | Improve this Doc View Source IsWebURL(String) Declaration public static bool IsWebURL(string s) Parameters Type Name Description String s Returns Type Description Boolean"
  },
  "api/g3.Frame3f.html": {
    "href": "api/g3.Frame3f.html",
    "title": "Struct Frame3f | ViRGIS VR GIS",
    "keywords": "Struct Frame3f Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Frame3f Constructors | Improve this Doc View Source Frame3f(Frame3f) Declaration public Frame3f(Frame3f copy) Parameters Type Name Description Frame3f copy | Improve this Doc View Source Frame3f(Vector3d) Declaration public Frame3f(Vector3d origin) Parameters Type Name Description Vector3d origin | Improve this Doc View Source Frame3f(Vector3d, Vector3d) Declaration public Frame3f(Vector3d origin, Vector3d setZ) Parameters Type Name Description Vector3d origin Vector3d setZ | Improve this Doc View Source Frame3f(Vector3f) Declaration public Frame3f(Vector3f origin) Parameters Type Name Description Vector3f origin | Improve this Doc View Source Frame3f(Vector3f, Quaternionf) Declaration public Frame3f(Vector3f origin, Quaternionf orientation) Parameters Type Name Description Vector3f origin Quaternionf orientation | Improve this Doc View Source Frame3f(Vector3f, Vector3f) Declaration public Frame3f(Vector3f origin, Vector3f setZ) Parameters Type Name Description Vector3f origin Vector3f setZ | Improve this Doc View Source Frame3f(Vector3f, Vector3f, Vector3f, Vector3f) Declaration public Frame3f(Vector3f origin, Vector3f x, Vector3f y, Vector3f z) Parameters Type Name Description Vector3f origin Vector3f x Vector3f y Vector3f z | Improve this Doc View Source Frame3f(Vector3f, Vector3f, Int32) Declaration public Frame3f(Vector3f origin, Vector3f setAxis, int nAxis) Parameters Type Name Description Vector3f origin Vector3f setAxis Int32 nAxis Fields | Improve this Doc View Source Identity Declaration public static readonly Frame3f Identity Field Value Type Description Frame3f Properties | Improve this Doc View Source Origin Declaration public Vector3f Origin { get; set; } Property Value Type Description Vector3f | Improve this Doc View Source Rotation Declaration public Quaternionf Rotation { get; set; } Property Value Type Description Quaternionf | Improve this Doc View Source X Declaration public Vector3f X { get; } Property Value Type Description Vector3f | Improve this Doc View Source Y Declaration public Vector3f Y { get; } Property Value Type Description Vector3f | Improve this Doc View Source Z Declaration public Vector3f Z { get; } Property Value Type Description Vector3f Methods | Improve this Doc View Source AlignAxis(Int32, Vector3f) Declaration public void AlignAxis(int nAxis, Vector3f vTo) Parameters Type Name Description Int32 nAxis Vector3f vTo | Improve this Doc View Source ConstrainedAlignAxis(Int32, Vector3f, Vector3f) Declaration public void ConstrainedAlignAxis(int nAxis, Vector3f vTo, Vector3f vAround) Parameters Type Name Description Int32 nAxis Vector3f vTo Vector3f vAround | Improve this Doc View Source DistanceToPlane(Vector3f, Int32) distance from p to frame-axes-plane perpendicular to normal axis Declaration public float DistanceToPlane(Vector3f p, int nNormal) Parameters Type Name Description Vector3f p Int32 nNormal Returns Type Description Single | Improve this Doc View Source DistanceToPlaneSigned(Vector3f, Int32) signed distance from p to frame-axes-plane perpendicular to normal axis Declaration public float DistanceToPlaneSigned(Vector3f p, int nNormal) Parameters Type Name Description Vector3f p Int32 nNormal Returns Type Description Single | Improve this Doc View Source EpsilonEqual(Frame3f, Single) Declaration public bool EpsilonEqual(Frame3f f2, float epsilon) Parameters Type Name Description Frame3f f2 Single epsilon Returns Type Description Boolean | Improve this Doc View Source FromFrame(ref Box3d) Map box from local frame coordinates into \"world\" coordinates Declaration public Box3d FromFrame(ref Box3d box) Parameters Type Name Description Box3d box Returns Type Description Box3d | Improve this Doc View Source FromFrame(ref Box3f) Map box from local frame coordinates into \"world\" coordinates Declaration public Box3f FromFrame(ref Box3f box) Parameters Type Name Description Box3f box Returns Type Description Box3f | Improve this Doc View Source FromFrame(Frame3f) Map frame from local frame coordinates into \"world\" coordinates Declaration public Frame3f FromFrame(Frame3f f) Parameters Type Name Description Frame3f f Returns Type Description Frame3f | Improve this Doc View Source FromFrame(ref Frame3f) Map frame from local frame coordinates into \"world\" coordinates Declaration public Frame3f FromFrame(ref Frame3f f) Parameters Type Name Description Frame3f f Returns Type Description Frame3f | Improve this Doc View Source FromFrame(Quaternionf) Map quaternion from local frame coordinates into \"world\" coordinates Declaration public Quaternionf FromFrame(Quaternionf q) Parameters Type Name Description Quaternionf q Returns Type Description Quaternionf | Improve this Doc View Source FromFrame(ref Quaternionf) Map quaternion from local frame coordinates into \"world\" coordinates Declaration public Quaternionf FromFrame(ref Quaternionf q) Parameters Type Name Description Quaternionf q Returns Type Description Quaternionf | Improve this Doc View Source FromFrame(Ray3f) Map ray from local frame coordinates into \"world\" coordinates Declaration public Ray3f FromFrame(Ray3f r) Parameters Type Name Description Ray3f r Returns Type Description Ray3f | Improve this Doc View Source FromFrame(ref Ray3f) Map ray from local frame coordinates into \"world\" coordinates Declaration public Ray3f FromFrame(ref Ray3f r) Parameters Type Name Description Ray3f r Returns Type Description Ray3f | Improve this Doc View Source FromFrameP(Vector2f, Int32) Declaration [Obsolete(\"replaced with FromPlaneUV\")] public Vector3f FromFrameP(Vector2f v, int nPlaneNormalAxis) Parameters Type Name Description Vector2f v Int32 nPlaneNormalAxis Returns Type Description Vector3f | Improve this Doc View Source FromFrameP(Vector3d) Map point from local frame coordinates into \"world\" coordinates Declaration public Vector3d FromFrameP(Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Vector3d | Improve this Doc View Source FromFrameP(ref Vector3d) Map point from local frame coordinates into \"world\" coordinates Declaration public Vector3d FromFrameP(ref Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Vector3d | Improve this Doc View Source FromFrameP(Vector3f) Map point from local frame coordinates into \"world\" coordinates Declaration public Vector3f FromFrameP(Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description Vector3f | Improve this Doc View Source FromFrameP(ref Vector3f) Map point from local frame coordinates into \"world\" coordinates Declaration public Vector3f FromFrameP(ref Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description Vector3f | Improve this Doc View Source FromFrameV(Vector3d) Map vector from local frame coordinates into \"world\" coordinates Declaration public Vector3d FromFrameV(Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Vector3d | Improve this Doc View Source FromFrameV(ref Vector3d) Map vector from local frame coordinates into \"world\" coordinates Declaration public Vector3d FromFrameV(ref Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Vector3d | Improve this Doc View Source FromFrameV(Vector3f) Map vector from local frame coordinates into \"world\" coordinates Declaration public Vector3f FromFrameV(Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description Vector3f | Improve this Doc View Source FromFrameV(ref Vector3f) Map vector from local frame coordinates into \"world\" coordinates Declaration public Vector3f FromFrameV(ref Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description Vector3f | Improve this Doc View Source FromPlaneUV(Vector2f, Int32) map from 2D coordinates in frame-axes plane perpendicular to normal axis, to 3D [TODO] check that mapping preserves orientation? Declaration public Vector3f FromPlaneUV(Vector2f v, int nPlaneNormalAxis) Parameters Type Name Description Vector2f v Int32 nPlaneNormalAxis Returns Type Description Vector3f | Improve this Doc View Source GetAxis(Int32) Declaration public Vector3f GetAxis(int nAxis) Parameters Type Name Description Int32 nAxis Returns Type Description Vector3f | Improve this Doc View Source Interpolate(Frame3f, Frame3f, Single) Interpolate between two frames - Lerp for origin, Slerp for rotation Declaration public static Frame3f Interpolate(Frame3f f1, Frame3f f2, float t) Parameters Type Name Description Frame3f f1 Frame3f f2 Single t Returns Type Description Frame3f | Improve this Doc View Source ProjectToPlane(Vector3f, Int32) 3D projection of point p onto frame-axis plane orthogonal to normal axis Declaration public Vector3f ProjectToPlane(Vector3f p, int nNormal) Parameters Type Name Description Vector3f p Int32 nNormal Returns Type Description Vector3f | Improve this Doc View Source RayPlaneIntersection(Vector3f, Vector3f, Int32) Compute intersection of ray with plane passing through frame origin, normal to the specified axis. If the ray is parallel to the plane, no intersection can be found, and we return Vector3f.Invalid Declaration public Vector3f RayPlaneIntersection(Vector3f ray_origin, Vector3f ray_direction, int nAxisAsNormal) Parameters Type Name Description Vector3f ray_origin Vector3f ray_direction Int32 nAxisAsNormal Returns Type Description Vector3f | Improve this Doc View Source Rotate(Quaternionf) Declaration public void Rotate(Quaternionf q) Parameters Type Name Description Quaternionf q | Improve this Doc View Source RotateAround(Vector3f, Quaternionf) Declaration public void RotateAround(Vector3f point, Quaternionf q) Parameters Type Name Description Vector3f point Quaternionf q | Improve this Doc View Source RotateAroundAxes(Quaternionf) this rotates the frame around its own axes, rather than around the world axes, which is what Rotate() does. So, RotateAroundAxis(AxisAngleD(Z,180)) is equivalent to Rotate(AxisAngleD(My_AxisZ,180)). Declaration public void RotateAroundAxes(Quaternionf q) Parameters Type Name Description Quaternionf q | Improve this Doc View Source Rotated(Quaternionf) Declaration public Frame3f Rotated(Quaternionf q) Parameters Type Name Description Quaternionf q Returns Type Description Frame3f | Improve this Doc View Source Rotated(Single, Int32) Declaration public Frame3f Rotated(float fAngle, int nAxis) Parameters Type Name Description Single fAngle Int32 nAxis Returns Type Description Frame3f | Improve this Doc View Source RotatedAround(Vector3f, Quaternionf) Declaration public Frame3f RotatedAround(Vector3f point, Quaternionf q) Parameters Type Name Description Vector3f point Quaternionf q Returns Type Description Frame3f | Improve this Doc View Source Scale(Vector3f) Declaration public void Scale(Vector3f scale) Parameters Type Name Description Vector3f scale | Improve this Doc View Source Scale(Single) Declaration public void Scale(float f) Parameters Type Name Description Single f | Improve this Doc View Source Scaled(Vector3f) Declaration public Frame3f Scaled(Vector3f scale) Parameters Type Name Description Vector3f scale Returns Type Description Frame3f | Improve this Doc View Source Scaled(Single) Declaration public Frame3f Scaled(float f) Parameters Type Name Description Single f Returns Type Description Frame3f | Improve this Doc View Source SolveMinRotation(Frame3f, Frame3f) Declaration public static Frame3f SolveMinRotation(Frame3f source, Frame3f target) Parameters Type Name Description Frame3f source Frame3f target Returns Type Description Frame3f | Improve this Doc View Source ToFrame(ref Box3d) Map box into local coordinates of Frame Declaration public Box3d ToFrame(ref Box3d box) Parameters Type Name Description Box3d box Returns Type Description Box3d | Improve this Doc View Source ToFrame(ref Box3f) Map box into local coordinates of Frame Declaration public Box3f ToFrame(ref Box3f box) Parameters Type Name Description Box3f box Returns Type Description Box3f | Improve this Doc View Source ToFrame(Frame3f) Map frame into local coordinates of Frame Declaration public Frame3f ToFrame(Frame3f f) Parameters Type Name Description Frame3f f Returns Type Description Frame3f | Improve this Doc View Source ToFrame(ref Frame3f) Map frame into local coordinates of Frame Declaration public Frame3f ToFrame(ref Frame3f f) Parameters Type Name Description Frame3f f Returns Type Description Frame3f | Improve this Doc View Source ToFrame(Quaternionf) Map quaternion into local coordinates of Frame Declaration public Quaternionf ToFrame(Quaternionf q) Parameters Type Name Description Quaternionf q Returns Type Description Quaternionf | Improve this Doc View Source ToFrame(ref Quaternionf) Map quaternion into local coordinates of Frame Declaration public Quaternionf ToFrame(ref Quaternionf q) Parameters Type Name Description Quaternionf q Returns Type Description Quaternionf | Improve this Doc View Source ToFrame(Ray3f) Map ray into local coordinates of Frame Declaration public Ray3f ToFrame(Ray3f r) Parameters Type Name Description Ray3f r Returns Type Description Ray3f | Improve this Doc View Source ToFrame(ref Ray3f) Map ray into local coordinates of Frame Declaration public Ray3f ToFrame(ref Ray3f r) Parameters Type Name Description Ray3f r Returns Type Description Ray3f | Improve this Doc View Source ToFrameP(Vector3d) Map point into local coordinates of Frame Declaration public Vector3d ToFrameP(Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Vector3d | Improve this Doc View Source ToFrameP(ref Vector3d) Map point into local coordinates of Frame Declaration public Vector3d ToFrameP(ref Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Vector3d | Improve this Doc View Source ToFrameP(Vector3f) Map point into local coordinates of Frame Declaration public Vector3f ToFrameP(Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description Vector3f | Improve this Doc View Source ToFrameP(ref Vector3f) Map point into local coordinates of Frame Declaration public Vector3f ToFrameP(ref Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description Vector3f | Improve this Doc View Source ToFrameV(Vector3d) Map vector into local coordinates of Frame Declaration public Vector3d ToFrameV(Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Vector3d | Improve this Doc View Source ToFrameV(ref Vector3d) Map vector into local coordinates of Frame Declaration public Vector3d ToFrameV(ref Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Vector3d | Improve this Doc View Source ToFrameV(Vector3f) Map vector into local coordinates of Frame Declaration public Vector3f ToFrameV(Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description Vector3f | Improve this Doc View Source ToFrameV(ref Vector3f) Map vector into local coordinates of Frame Declaration public Vector3f ToFrameV(ref Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description Vector3f | Improve this Doc View Source ToPlaneUV(Vector3f, Int32) Project p onto plane axes [TODO] check that mapping preserves orientation? Declaration public Vector2f ToPlaneUV(Vector3f p, int nNormal) Parameters Type Name Description Vector3f p Int32 nNormal Returns Type Description Vector2f | Improve this Doc View Source ToPlaneUV(Vector3f, Int32, Int32, Int32) Declaration [Obsolete(\"Use explicit ToPlaneUV instead\")] public Vector2f ToPlaneUV(Vector3f p, int nNormal, int nAxis0 = -1, int nAxis1 = -1) Parameters Type Name Description Vector3f p Int32 nNormal Int32 nAxis0 Int32 nAxis1 Returns Type Description Vector2f | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() | Improve this Doc View Source ToString(String) Declaration public string ToString(string fmt) Parameters Type Name Description String fmt Returns Type Description String | Improve this Doc View Source Translate(Vector3f) Declaration public void Translate(Vector3f v) Parameters Type Name Description Vector3f v | Improve this Doc View Source Translated(Vector3f) Declaration public Frame3f Translated(Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description Frame3f | Improve this Doc View Source Translated(Single, Int32) Declaration public Frame3f Translated(float fDistance, int nAxis) Parameters Type Name Description Single fDistance Int32 nAxis Returns Type Description Frame3f"
  },
  "api/g3.FrameGridIndexer3.html": {
    "href": "api/g3.FrameGridIndexer3.html",
    "title": "Struct FrameGridIndexer3 | ViRGIS VR GIS",
    "keywords": "Struct FrameGridIndexer3 Map to/from grid coords, where grid is relative to frame coords/axes Implements IGridWorldIndexer3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct FrameGridIndexer3 : IGridWorldIndexer3 Constructors | Improve this Doc View Source FrameGridIndexer3(Frame3f, Vector3f) Declaration public FrameGridIndexer3(Frame3f frame, Vector3f cellSize) Parameters Type Name Description Frame3f frame Vector3f cellSize Fields | Improve this Doc View Source CellSize Declaration public Vector3f CellSize Field Value Type Description Vector3f | Improve this Doc View Source GridFrame Declaration public Frame3f GridFrame Field Value Type Description Frame3f Methods | Improve this Doc View Source FromGrid(Vector3d) Declaration public Vector3d FromGrid(Vector3d gridpointf) Parameters Type Name Description Vector3d gridpointf Returns Type Description Vector3d | Improve this Doc View Source FromGrid(Vector3i) Declaration public Vector3d FromGrid(Vector3i gridpoint) Parameters Type Name Description Vector3i gridpoint Returns Type Description Vector3d | Improve this Doc View Source ToGrid(Vector3d) Declaration public Vector3i ToGrid(Vector3d point) Parameters Type Name Description Vector3d point Returns Type Description Vector3i | Improve this Doc View Source ToGridf(Vector3d) Declaration public Vector3d ToGridf(Vector3d point) Parameters Type Name Description Vector3d point Returns Type Description Vector3d Implements IGridWorldIndexer3"
  },
  "api/g3.GaussPointsFit3.html": {
    "href": "api/g3.GaussPointsFit3.html",
    "title": "Class GaussPointsFit3 | ViRGIS VR GIS",
    "keywords": "Class GaussPointsFit3 Inheritance Object GaussPointsFit3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class GaussPointsFit3 Constructors | Improve this Doc View Source GaussPointsFit3(IEnumerable<Vector3d>) Declaration public GaussPointsFit3(IEnumerable<Vector3d> points) Parameters Type Name Description IEnumerable < Vector3d > points | Improve this Doc View Source GaussPointsFit3(IEnumerable<Vector3d>, IEnumerable<Double>) Declaration public GaussPointsFit3(IEnumerable<Vector3d> points, IEnumerable<double> weights) Parameters Type Name Description IEnumerable < Vector3d > points IEnumerable < Double > weights Fields | Improve this Doc View Source Box Declaration public Box3d Box Field Value Type Description Box3d | Improve this Doc View Source ResultValid Declaration public bool ResultValid Field Value Type Description Boolean"
  },
  "api/g3.GeneralPolygon2d.html": {
    "href": "api/g3.GeneralPolygon2d.html",
    "title": "Class GeneralPolygon2d | ViRGIS VR GIS",
    "keywords": "Class GeneralPolygon2d Inheritance Object GeneralPolygon2d Implements IDuplicatable < GeneralPolygon2d > Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class GeneralPolygon2d : IDuplicatable<GeneralPolygon2d> Constructors | Improve this Doc View Source GeneralPolygon2d() Declaration public GeneralPolygon2d() | Improve this Doc View Source GeneralPolygon2d(GeneralPolygon2d) Declaration public GeneralPolygon2d(GeneralPolygon2d copy) Parameters Type Name Description GeneralPolygon2d copy | Improve this Doc View Source GeneralPolygon2d(Polygon2d) Declaration public GeneralPolygon2d(Polygon2d outer) Parameters Type Name Description Polygon2d outer Properties | Improve this Doc View Source Area Declaration public double Area { get; } Property Value Type Description Double | Improve this Doc View Source Bounds Declaration public AxisAlignedBox2d Bounds { get; } Property Value Type Description AxisAlignedBox2d | Improve this Doc View Source HoleArea Declaration public double HoleArea { get; } Property Value Type Description Double | Improve this Doc View Source Holes Declaration public ReadOnlyCollection<Polygon2d> Holes { get; } Property Value Type Description ReadOnlyCollection < Polygon2d > | Improve this Doc View Source Outer Declaration public Polygon2d Outer { get; set; } Property Value Type Description Polygon2d | Improve this Doc View Source Perimeter Declaration public double Perimeter { get; } Property Value Type Description Double | Improve this Doc View Source VertexCount Declaration public int VertexCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source AddHole(Polygon2d, Boolean, Boolean) Declaration public void AddHole(Polygon2d hole, bool bCheckContainment = true, bool bCheckOrientation = true) Parameters Type Name Description Polygon2d hole Boolean bCheckContainment Boolean bCheckOrientation | Improve this Doc View Source AllSegmentsItr() Declaration public IEnumerable<Segment2d> AllSegmentsItr() Returns Type Description IEnumerable < Segment2d > | Improve this Doc View Source AllVerticesItr() Declaration public IEnumerable<Vector2d> AllVerticesItr() Returns Type Description IEnumerable < Vector2d > | Improve this Doc View Source ClearHoles() Declaration public void ClearHoles() | Improve this Doc View Source Contains(Polygon2d) Declaration public bool Contains(Polygon2d poly) Parameters Type Name Description Polygon2d poly Returns Type Description Boolean | Improve this Doc View Source Contains(Segment2d) Checks that all points on a segment are within the area defined by the GeneralPolygon2d; holes are included in the calculation. Declaration public bool Contains(Segment2d seg) Parameters Type Name Description Segment2d seg Returns Type Description Boolean | Improve this Doc View Source Contains(Vector2d) Declaration public bool Contains(Vector2d vTest) Parameters Type Name Description Vector2d vTest Returns Type Description Boolean | Improve this Doc View Source DistanceSquared(Vector2d, out Int32, out Int32, out Double) Declaration public double DistanceSquared(Vector2d p, out int iHoleIndex, out int iNearSeg, out double fNearSegT) Parameters Type Name Description Vector2d p Int32 iHoleIndex Int32 iNearSeg Double fNearSegT Returns Type Description Double | Improve this Doc View Source Duplicate() Declaration public virtual GeneralPolygon2d Duplicate() Returns Type Description GeneralPolygon2d | Improve this Doc View Source GetNormal(Int32, Double, Int32) Declaration public Vector2d GetNormal(int iSegment, double segT, int iHoleIndex = -1) Parameters Type Name Description Int32 iSegment Double segT Int32 iHoleIndex Returns Type Description Vector2d | Improve this Doc View Source Intersects(Polygon2d) Declaration public bool Intersects(Polygon2d poly) Parameters Type Name Description Polygon2d poly Returns Type Description Boolean | Improve this Doc View Source PointAt(Int32, Double, Int32) Declaration public Vector2d PointAt(int iSegment, double fSegT, int iHoleIndex = -1) Parameters Type Name Description Int32 iSegment Double fSegT Int32 iHoleIndex Returns Type Description Vector2d | Improve this Doc View Source Reverse() Declaration public void Reverse() | Improve this Doc View Source Rotate(Matrix2d, Vector2d) Declaration public void Rotate(Matrix2d rotation, Vector2d origin) Parameters Type Name Description Matrix2d rotation Vector2d origin | Improve this Doc View Source Scale(Vector2d, Vector2d) Declaration public void Scale(Vector2d scale, Vector2d origin) Parameters Type Name Description Vector2d scale Vector2d origin | Improve this Doc View Source Segment(Int32, Int32) Declaration public Segment2d Segment(int iSegment, int iHoleIndex = -1) Parameters Type Name Description Int32 iSegment Int32 iHoleIndex Returns Type Description Segment2d | Improve this Doc View Source Simplify(Double, Double, Boolean) Declaration public void Simplify(double clusterTol = 0.0001, double lineDeviationTol = 0.01, bool bSimplifyStraightLines = true) Parameters Type Name Description Double clusterTol Double lineDeviationTol Boolean bSimplifyStraightLines | Improve this Doc View Source Transform(Func<Vector2d, Vector2d>) Declaration public void Transform(Func<Vector2d, Vector2d> transformF) Parameters Type Name Description Func < Vector2d , Vector2d > transformF | Improve this Doc View Source Translate(Vector2d) Declaration public void Translate(Vector2d translate) Parameters Type Name Description Vector2d translate Implements IDuplicatable<T>"
  },
  "api/g3.GeneralPolygon2dBoxTree.html": {
    "href": "api/g3.GeneralPolygon2dBoxTree.html",
    "title": "Class GeneralPolygon2dBoxTree | ViRGIS VR GIS",
    "keywords": "Class GeneralPolygon2dBoxTree Inheritance Object GeneralPolygon2dBoxTree Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class GeneralPolygon2dBoxTree Constructors | Improve this Doc View Source GeneralPolygon2dBoxTree(GeneralPolygon2d) Declaration public GeneralPolygon2dBoxTree(GeneralPolygon2d poly) Parameters Type Name Description GeneralPolygon2d poly Fields | Improve this Doc View Source Polygon Declaration public GeneralPolygon2d Polygon Field Value Type Description GeneralPolygon2d Methods | Improve this Doc View Source Distance(Vector2d) Declaration public double Distance(Vector2d pt) Parameters Type Name Description Vector2d pt Returns Type Description Double | Improve this Doc View Source DistanceSquared(Vector2d) Declaration public double DistanceSquared(Vector2d pt) Parameters Type Name Description Vector2d pt Returns Type Description Double | Improve this Doc View Source DistanceSquared(Vector2d, out Int32, out Int32, out Double) Declaration public double DistanceSquared(Vector2d pt, out int iHoleIndex, out int iNearSeg, out double fNearSegT) Parameters Type Name Description Vector2d pt Int32 iHoleIndex Int32 iNearSeg Double fNearSegT Returns Type Description Double | Improve this Doc View Source NearestPoint(Vector2d) Declaration public Vector2d NearestPoint(Vector2d pt) Parameters Type Name Description Vector2d pt Returns Type Description Vector2d"
  },
  "api/g3.GenericMaterial.html": {
    "href": "api/g3.GenericMaterial.html",
    "title": "Class GenericMaterial | ViRGIS VR GIS",
    "keywords": "Class GenericMaterial Inheritance Object GenericMaterial OBJMaterial Namespace : g3 Assembly : geometry3Sharp.dll Syntax public abstract class GenericMaterial Fields | Improve this Doc View Source id Declaration public int id Field Value Type Description Int32 | Improve this Doc View Source Invalid Declaration public static readonly Vector3f Invalid Field Value Type Description Vector3f | Improve this Doc View Source Invalidf Declaration public static readonly float Invalidf Field Value Type Description Single | Improve this Doc View Source name Declaration public string name Field Value Type Description String Properties | Improve this Doc View Source Alpha Declaration public abstract float Alpha { get; set; } Property Value Type Description Single | Improve this Doc View Source DiffuseColor Declaration public abstract Vector3f DiffuseColor { get; set; } Property Value Type Description Vector3f | Improve this Doc View Source Type Declaration public GenericMaterial.KnownMaterialTypes Type { get; set; } Property Value Type Description GenericMaterial.KnownMaterialTypes"
  },
  "api/g3.GenericMaterial.KnownMaterialTypes.html": {
    "href": "api/g3.GenericMaterial.KnownMaterialTypes.html",
    "title": "Enum GenericMaterial.KnownMaterialTypes | ViRGIS VR GIS",
    "keywords": "Enum GenericMaterial.KnownMaterialTypes Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum KnownMaterialTypes Fields Name Description OBJ_MTL_Format"
  },
  "api/g3.gException.html": {
    "href": "api/g3.gException.html",
    "title": "Class gException | ViRGIS VR GIS",
    "keywords": "Class gException Inheritance Object Exception gException Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class gException : Exception, _Exception, ISerializable Constructors | Improve this Doc View Source gException(String) Declaration public gException(string sMessage) Parameters Type Name Description String sMessage | Improve this Doc View Source gException(String, Object) Declaration public gException(string text, object arg0) Parameters Type Name Description String text Object arg0 | Improve this Doc View Source gException(String, Object, Object) Declaration public gException(string text, object arg0, object arg1) Parameters Type Name Description String text Object arg0 Object arg1 | Improve this Doc View Source gException(String, Object[]) Declaration public gException(string text, params object[] args) Parameters Type Name Description String text Object [] args"
  },
  "api/g3.gIndices.html": {
    "href": "api/g3.gIndices.html",
    "title": "Class gIndices | ViRGIS VR GIS",
    "keywords": "Class gIndices Inheritance Object gIndices Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class gIndices Fields | Improve this Doc View Source BoxFaceNormals Declaration public static readonly int[] BoxFaceNormals Field Value Type Description Int32 [] | Improve this Doc View Source BoxFaces Declaration public static readonly int[, ] BoxFaces Field Value Type Description Int32 [,] | Improve this Doc View Source GridOffsets26 Declaration public static readonly Vector3i[] GridOffsets26 Field Value Type Description Vector3i [] | Improve this Doc View Source GridOffsets4 Declaration public static readonly Vector2i[] GridOffsets4 Field Value Type Description Vector2i [] | Improve this Doc View Source GridOffsets6 Declaration public static readonly Vector3i[] GridOffsets6 Field Value Type Description Vector3i [] | Improve this Doc View Source GridOffsets8 Declaration public static readonly Vector2i[] GridOffsets8 Field Value Type Description Vector2i [] Methods | Improve this Doc View Source Grid3Indices(Int32, Int32, Int32) Declaration public static IEnumerable<Vector3i> Grid3Indices(int nx, int ny, int nz) Parameters Type Name Description Int32 nx Int32 ny Int32 nz Returns Type Description IEnumerable < Vector3i > | Improve this Doc View Source Grid3IndicesXY(Int32, Int32) Declaration public static IEnumerable<Vector3i> Grid3IndicesXY(int nx, int ny) Parameters Type Name Description Int32 nx Int32 ny Returns Type Description IEnumerable < Vector3i > | Improve this Doc View Source Grid3IndicesXZ(Int32, Int32) Declaration public static IEnumerable<Vector3i> Grid3IndicesXZ(int nx, int nz) Parameters Type Name Description Int32 nx Int32 nz Returns Type Description IEnumerable < Vector3i > | Improve this Doc View Source Grid3IndicesYZ(Int32, Int32) Declaration public static IEnumerable<Vector3i> Grid3IndicesYZ(int ny, int nz) Parameters Type Name Description Int32 ny Int32 nz Returns Type Description IEnumerable < Vector3i >"
  },
  "api/g3.gParallel.html": {
    "href": "api/g3.gParallel.html",
    "title": "Class gParallel | ViRGIS VR GIS",
    "keywords": "Class gParallel Inheritance Object gParallel Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class gParallel Methods | Improve this Doc View Source BlockStartEnd(Int32, Int32, Action<Int32, Int32>, Int32, Boolean) Process indices [iStart,iEnd] inclusive by passing sub-intervals [start,end] to blockF. Blocksize is automatically determind unless you specify one. Iterate over [start,end] inclusive in each block Declaration public static void BlockStartEnd(int iStart, int iEnd, Action<int, int> blockF, int iBlockSize = -1, bool bDisableParallel = false) Parameters Type Name Description Int32 iStart Int32 iEnd Action < Int32 , Int32 > blockF Int32 iBlockSize Boolean bDisableParallel | Improve this Doc View Source Evaluate(Action[]) Evaluate input actions in parallel Declaration public static void Evaluate(params Action[] funcs) Parameters Type Name Description Action [] funcs | Improve this Doc View Source ForEach_Sequential<T>(IEnumerable<T>, Action<T>) Declaration public static void ForEach_Sequential<T>(IEnumerable<T> source, Action<T> body) Parameters Type Name Description IEnumerable <T> source Action <T> body Type Parameters Name Description T | Improve this Doc View Source ForEach<T>(IEnumerable<T>, Action<T>) Declaration public static void ForEach<T>(IEnumerable<T> source, Action<T> body) Parameters Type Name Description IEnumerable <T> source Action <T> body Type Parameters Name Description T"
  },
  "api/g3.GraphCells2d.html": {
    "href": "api/g3.GraphCells2d.html",
    "title": "Class GraphCells2d | ViRGIS VR GIS",
    "keywords": "Class GraphCells2d This class extracts the set of loops bounding the \"cells\" of a DGraph2, ie each cell is a connected region with a polygonal boundary. Precondition: the graph has no self-intersections. Precondition: at any vertex, the edges are sortable by angle (ie no outgoing edges overlap) ** numerically this may not be 100% reliable.... Both \"sides\" of each edge are included in some cell boundary, ie so for a simple polygon, there are two cells, one infinitely large. The \"inside\" cells will be oriented clockwise, if converted to a Polygon2d. Inheritance Object GraphCells2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class GraphCells2d Constructors | Improve this Doc View Source GraphCells2d(DGraph2) Declaration public GraphCells2d(DGraph2 graph) Parameters Type Name Description DGraph2 graph Fields | Improve this Doc View Source CellLoops Declaration public List<int[]> CellLoops Field Value Type Description List < Int32 []> | Improve this Doc View Source Graph Declaration public DGraph2 Graph Field Value Type Description DGraph2 Methods | Improve this Doc View Source CellsToPolygons(Func<Polygon2d, Boolean>) Convert cells to polygons, with optional filter. If filter returns false, polygon is not included in output Declaration public List<Polygon2d> CellsToPolygons(Func<Polygon2d, bool> FilterF = null) Parameters Type Name Description Func < Polygon2d , Boolean > FilterF Returns Type Description List < Polygon2d > | Improve this Doc View Source ContainedCells(GeneralPolygon2d) Find cells that are \"inside\" the container polygon. Currently based on finding a point inside the cell and then checking that it is also inside the container. This is perhaps not ideal!! Declaration public List<Polygon2d> ContainedCells(GeneralPolygon2d container) Parameters Type Name Description GeneralPolygon2d container Returns Type Description List < Polygon2d > | Improve this Doc View Source FindCells() Declaration public void FindCells()"
  },
  "api/g3.GraphSplitter2d.html": {
    "href": "api/g3.GraphSplitter2d.html",
    "title": "Class GraphSplitter2d | ViRGIS VR GIS",
    "keywords": "Class GraphSplitter2d This class is used to bisect an existing DGraph2 with infinite lines. This is easier than inserting new segments, which can be done using Arrangement2d. Computations are done in double precision. Use at your own risk. [TODO] computation of signs for a split-line is currently O(N). If inserting many parallel lines, can improve this using standard sorting. Inheritance Object GraphSplitter2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class GraphSplitter2d Constructors | Improve this Doc View Source GraphSplitter2d(DGraph2) Declaration public GraphSplitter2d(DGraph2 graph) Parameters Type Name Description DGraph2 graph Fields | Improve this Doc View Source Graph Declaration public DGraph2 Graph Field Value Type Description DGraph2 | Improve this Doc View Source InsertedEdgesID default ID for new edges, can override in specific functions Declaration public int InsertedEdgesID Field Value Type Description Int32 | Improve this Doc View Source InsideTestF when inserting new segments, we check if their midpoint passes this test Declaration public Func<Vector2d, bool> InsideTestF Field Value Type Description Func < Vector2d , Boolean > | Improve this Doc View Source OnVertexTol tolerance for WhichSide(vtx) tests Declaration public double OnVertexTol Field Value Type Description Double Methods | Improve this Doc View Source do_split(Line2d, Boolean, Int32) Declaration protected virtual void do_split(Line2d line, bool insert_edges, int insert_gid) Parameters Type Name Description Line2d line Boolean insert_edges Int32 insert_gid | Improve this Doc View Source InsertLine(Line2d, Int32) split all graph edges that intersect line, and insert segments connecting these points Declaration public void InsertLine(Line2d line, int insert_edges_id = -1) Parameters Type Name Description Line2d line Int32 insert_edges_id"
  },
  "api/g3.GridBox3Generator.html": {
    "href": "api/g3.GridBox3Generator.html",
    "title": "Class GridBox3Generator | ViRGIS VR GIS",
    "keywords": "Class GridBox3Generator Generate a mesh of a box that has \"gridded\" faces, ie grid of triangulated quads, with EdgeVertices verts along each edge. [TODO] allow varying EdgeVertices in each dimension (tricky...) Inheritance Object MeshGenerator GridBox3Generator Sphere3Generator_NormalizedCube Inherited Members MeshGenerator.vertices MeshGenerator.uv MeshGenerator.normals MeshGenerator.triangles MeshGenerator.groups MeshGenerator.WantUVs MeshGenerator.WantNormals MeshGenerator.WantGroups MeshGenerator.Clockwise MeshGenerator.MakeMesh(SimpleMesh) MeshGenerator.MakeSimpleMesh() MeshGenerator.MakeMesh(DMesh3) MeshGenerator.MakeDMesh() MeshGenerator.MakeMesh(NTMesh3) MeshGenerator.MakeNTMesh() MeshGenerator.duplicate_vertex_span(Int32, Int32) MeshGenerator.append_disc(Int32, Int32, Int32, Boolean, Boolean, Int32, Int32) MeshGenerator.append_rectangle(Int32, Int32, Int32, Int32, Boolean, Int32, Int32) MeshGenerator.append_2d_disc_segment(Int32, Int32, Int32, Int32, Boolean, Int32, Int32, Int32, Double) MeshGenerator.estimate_normal(Int32, Int32, Int32) MeshGenerator.bilerp(Vector3d, Vector3d, Vector3d, Vector3d, Double, Double) MeshGenerator.bilerp(Vector2d, Vector2d, Vector2d, Vector2d, Double, Double) MeshGenerator.bilerp(Vector2f, Vector2f, Vector2f, Vector2f, Single, Single) MeshGenerator.bilerp(Vector3i, Vector3i, Vector3i, Vector3i, Double, Double) MeshGenerator.lerp(Vector3i, Vector3i, Double) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class GridBox3Generator : MeshGenerator Fields | Improve this Doc View Source Box Declaration public Box3d Box Field Value Type Description Box3d | Improve this Doc View Source EdgeVertices Declaration public int EdgeVertices Field Value Type Description Int32 | Improve this Doc View Source NoSharedVertices Declaration public bool NoSharedVertices Field Value Type Description Boolean Methods | Improve this Doc View Source Generate() Declaration public override MeshGenerator Generate() Returns Type Description MeshGenerator Overrides MeshGenerator.Generate()"
  },
  "api/g3.GriddedRectGenerator.html": {
    "href": "api/g3.GriddedRectGenerator.html",
    "title": "Class GriddedRectGenerator | ViRGIS VR GIS",
    "keywords": "Class GriddedRectGenerator Generate a mesh of a rect that has \"gridded\" faces, ie grid of triangulated quads, with EdgeVertices verts along each edge. [TODO] allow varying EdgeVertices in each dimension (tricky...) Inheritance Object MeshGenerator TrivialRectGenerator GriddedRectGenerator Inherited Members TrivialRectGenerator.Width TrivialRectGenerator.Height TrivialRectGenerator.Normal TrivialRectGenerator.IndicesMap TrivialRectGenerator.UVMode TrivialRectGenerator.make_vertex(Single, Single) MeshGenerator.vertices MeshGenerator.uv MeshGenerator.normals MeshGenerator.triangles MeshGenerator.groups MeshGenerator.WantUVs MeshGenerator.WantNormals MeshGenerator.WantGroups MeshGenerator.Clockwise MeshGenerator.MakeMesh(SimpleMesh) MeshGenerator.MakeSimpleMesh() MeshGenerator.MakeMesh(DMesh3) MeshGenerator.MakeDMesh() MeshGenerator.MakeMesh(NTMesh3) MeshGenerator.MakeNTMesh() MeshGenerator.duplicate_vertex_span(Int32, Int32) MeshGenerator.append_disc(Int32, Int32, Int32, Boolean, Boolean, Int32, Int32) MeshGenerator.append_rectangle(Int32, Int32, Int32, Int32, Boolean, Int32, Int32) MeshGenerator.append_2d_disc_segment(Int32, Int32, Int32, Int32, Boolean, Int32, Int32, Int32, Double) MeshGenerator.estimate_normal(Int32, Int32, Int32) MeshGenerator.bilerp(Vector3d, Vector3d, Vector3d, Vector3d, Double, Double) MeshGenerator.bilerp(Vector2d, Vector2d, Vector2d, Vector2d, Double, Double) MeshGenerator.bilerp(Vector2f, Vector2f, Vector2f, Vector2f, Single, Single) MeshGenerator.bilerp(Vector3i, Vector3i, Vector3i, Vector3i, Double, Double) MeshGenerator.lerp(Vector3i, Vector3i, Double) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class GriddedRectGenerator : TrivialRectGenerator Fields | Improve this Doc View Source EdgeVertices Declaration public int EdgeVertices Field Value Type Description Int32 Methods | Improve this Doc View Source Generate() Declaration public override MeshGenerator Generate() Returns Type Description MeshGenerator Overrides TrivialRectGenerator.Generate()"
  },
  "api/g3.GridLevelIndex.html": {
    "href": "api/g3.GridLevelIndex.html",
    "title": "Struct GridLevelIndex | ViRGIS VR GIS",
    "keywords": "Struct GridLevelIndex Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct GridLevelIndex Fields | Improve this Doc View Source block_index Declaration public Vector3i block_index Field Value Type Description Vector3i | Improve this Doc View Source local_index Declaration public Vector3i local_index Field Value Type Description Vector3i"
  },
  "api/g3.GridLevelIndex2.html": {
    "href": "api/g3.GridLevelIndex2.html",
    "title": "Struct GridLevelIndex2 | ViRGIS VR GIS",
    "keywords": "Struct GridLevelIndex2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct GridLevelIndex2 Fields | Improve this Doc View Source block_index Declaration public Vector2i block_index Field Value Type Description Vector2i | Improve this Doc View Source local_index Declaration public Vector2i local_index Field Value Type Description Vector2i"
  },
  "api/g3.gSerialization.html": {
    "href": "api/g3.gSerialization.html",
    "title": "Class gSerialization | ViRGIS VR GIS",
    "keywords": "Class gSerialization Inheritance Object gSerialization Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class gSerialization Fields | Improve this Doc View Source DMesh3Version Declaration public static int DMesh3Version Field Value Type Description Int32 Methods | Improve this Doc View Source Restore(ref Arc2d, BinaryReader) Declaration public static void Restore(ref Arc2d arc, BinaryReader reader) Parameters Type Name Description Arc2d arc BinaryReader reader | Improve this Doc View Source Restore(ref AxisAlignedBox2d, BinaryReader) Declaration public static void Restore(ref AxisAlignedBox2d b, BinaryReader reader) Parameters Type Name Description AxisAlignedBox2d b BinaryReader reader | Improve this Doc View Source Restore(ref Circle2d, BinaryReader) Declaration public static void Restore(ref Circle2d circle, BinaryReader reader) Parameters Type Name Description Circle2d circle BinaryReader reader | Improve this Doc View Source Restore(DCurve3, BinaryReader) Declaration public static void Restore(DCurve3 curve, BinaryReader reader) Parameters Type Name Description DCurve3 curve BinaryReader reader | Improve this Doc View Source Restore(DMesh3, BinaryReader) Declaration public static void Restore(DMesh3 mesh, BinaryReader reader) Parameters Type Name Description DMesh3 mesh BinaryReader reader | Improve this Doc View Source Restore(DVector<Double>, BinaryReader) Declaration public static void Restore(DVector<double> vec, BinaryReader reader) Parameters Type Name Description DVector < Double > vec BinaryReader reader | Improve this Doc View Source Restore(DVector<Int16>, BinaryReader) Declaration public static void Restore(DVector<short> vec, BinaryReader reader) Parameters Type Name Description DVector < Int16 > vec BinaryReader reader | Improve this Doc View Source Restore(DVector<Int32>, BinaryReader) Declaration public static void Restore(DVector<int> vec, BinaryReader reader) Parameters Type Name Description DVector < Int32 > vec BinaryReader reader | Improve this Doc View Source Restore(DVector<Single>, BinaryReader) Declaration public static void Restore(DVector<float> vec, BinaryReader reader) Parameters Type Name Description DVector < Single > vec BinaryReader reader | Improve this Doc View Source Restore(ref Frame3f, BinaryReader) Declaration public static void Restore(ref Frame3f vFrame, BinaryReader reader) Parameters Type Name Description Frame3f vFrame BinaryReader reader | Improve this Doc View Source Restore(GeneralPolygon2d, BinaryReader) Declaration public static void Restore(GeneralPolygon2d polygon, BinaryReader reader) Parameters Type Name Description GeneralPolygon2d polygon BinaryReader reader | Improve this Doc View Source Restore(out IParametricCurve2d, BinaryReader) Declaration public static void Restore(out IParametricCurve2d curve, BinaryReader reader) Parameters Type Name Description IParametricCurve2d curve BinaryReader reader | Improve this Doc View Source Restore(ref ParametricCurveSequence2, BinaryReader) Declaration public static void Restore(ref ParametricCurveSequence2 sequence, BinaryReader reader) Parameters Type Name Description ParametricCurveSequence2 sequence BinaryReader reader | Improve this Doc View Source Restore(PlanarSolid2d, BinaryReader) Declaration public static void Restore(PlanarSolid2d solid, BinaryReader reader) Parameters Type Name Description PlanarSolid2d solid BinaryReader reader | Improve this Doc View Source Restore(Polygon2d, BinaryReader) Declaration public static void Restore(Polygon2d polygon, BinaryReader reader) Parameters Type Name Description Polygon2d polygon BinaryReader reader | Improve this Doc View Source Restore(PolyLine2d, BinaryReader) Declaration public static void Restore(PolyLine2d polyline, BinaryReader reader) Parameters Type Name Description PolyLine2d polyline BinaryReader reader | Improve this Doc View Source Restore(ref Quaternionf, BinaryReader) Declaration public static void Restore(ref Quaternionf q, BinaryReader reader) Parameters Type Name Description Quaternionf q BinaryReader reader | Improve this Doc View Source Restore(ref Segment2d, BinaryReader) Declaration public static void Restore(ref Segment2d segment, BinaryReader reader) Parameters Type Name Description Segment2d segment BinaryReader reader | Improve this Doc View Source Restore(ref Vector2d, BinaryReader) Declaration public static void Restore(ref Vector2d v, BinaryReader reader) Parameters Type Name Description Vector2d v BinaryReader reader | Improve this Doc View Source Restore(ref Vector2f, BinaryReader) Declaration public static void Restore(ref Vector2f v, BinaryReader reader) Parameters Type Name Description Vector2f v BinaryReader reader | Improve this Doc View Source Restore(ref Vector3d, BinaryReader) Declaration public static void Restore(ref Vector3d v, BinaryReader reader) Parameters Type Name Description Vector3d v BinaryReader reader | Improve this Doc View Source Restore(ref Vector3f, BinaryReader) Declaration public static void Restore(ref Vector3f v, BinaryReader reader) Parameters Type Name Description Vector3f v BinaryReader reader | Improve this Doc View Source Restore(List<Double>, BinaryReader) Declaration public static void Restore(List<double> values, BinaryReader reader) Parameters Type Name Description List < Double > values BinaryReader reader | Improve this Doc View Source Restore(List<Int32>, BinaryReader) Declaration public static void Restore(List<int> values, BinaryReader reader) Parameters Type Name Description List < Int32 > values BinaryReader reader | Improve this Doc View Source Restore(List<Single>, BinaryReader) Declaration public static void Restore(List<float> values, BinaryReader reader) Parameters Type Name Description List < Single > values BinaryReader reader | Improve this Doc View Source Restore(ref String, BinaryReader) Declaration public static void Restore(ref string s, BinaryReader reader) Parameters Type Name Description String s BinaryReader reader | Improve this Doc View Source Restore(ref String[], BinaryReader) Declaration public static void Restore(ref string[] s, BinaryReader reader) Parameters Type Name Description String [] s BinaryReader reader | Improve this Doc View Source Store(Arc2d, BinaryWriter) Declaration public static void Store(Arc2d arc, BinaryWriter writer) Parameters Type Name Description Arc2d arc BinaryWriter writer | Improve this Doc View Source Store(AxisAlignedBox2d, BinaryWriter) Declaration public static void Store(AxisAlignedBox2d b, BinaryWriter writer) Parameters Type Name Description AxisAlignedBox2d b BinaryWriter writer | Improve this Doc View Source Store(Circle2d, BinaryWriter) Declaration public static void Store(Circle2d circle, BinaryWriter writer) Parameters Type Name Description Circle2d circle BinaryWriter writer | Improve this Doc View Source Store(DCurve3, BinaryWriter) Declaration public static void Store(DCurve3 curve, BinaryWriter writer) Parameters Type Name Description DCurve3 curve BinaryWriter writer | Improve this Doc View Source Store(DMesh3, BinaryWriter) Declaration public static void Store(DMesh3 mesh, BinaryWriter writer) Parameters Type Name Description DMesh3 mesh BinaryWriter writer | Improve this Doc View Source Store(DVector<Double>, BinaryWriter) Declaration public static void Store(DVector<double> vec, BinaryWriter writer) Parameters Type Name Description DVector < Double > vec BinaryWriter writer | Improve this Doc View Source Store(DVector<Int16>, BinaryWriter) Declaration public static void Store(DVector<short> vec, BinaryWriter writer) Parameters Type Name Description DVector < Int16 > vec BinaryWriter writer | Improve this Doc View Source Store(DVector<Int32>, BinaryWriter) Declaration public static void Store(DVector<int> vec, BinaryWriter writer) Parameters Type Name Description DVector < Int32 > vec BinaryWriter writer | Improve this Doc View Source Store(DVector<Single>, BinaryWriter) Declaration public static void Store(DVector<float> vec, BinaryWriter writer) Parameters Type Name Description DVector < Single > vec BinaryWriter writer | Improve this Doc View Source Store(Frame3f, BinaryWriter) Declaration public static void Store(Frame3f vFrame, BinaryWriter writer) Parameters Type Name Description Frame3f vFrame BinaryWriter writer | Improve this Doc View Source Store(GeneralPolygon2d, BinaryWriter) Declaration public static void Store(GeneralPolygon2d polygon, BinaryWriter writer) Parameters Type Name Description GeneralPolygon2d polygon BinaryWriter writer | Improve this Doc View Source Store(IParametricCurve2d, BinaryWriter) Declaration public static void Store(IParametricCurve2d curve, BinaryWriter writer) Parameters Type Name Description IParametricCurve2d curve BinaryWriter writer | Improve this Doc View Source Store(ParametricCurveSequence2, BinaryWriter) Declaration public static void Store(ParametricCurveSequence2 sequence, BinaryWriter writer) Parameters Type Name Description ParametricCurveSequence2 sequence BinaryWriter writer | Improve this Doc View Source Store(PlanarSolid2d, BinaryWriter) Declaration public static void Store(PlanarSolid2d solid, BinaryWriter writer) Parameters Type Name Description PlanarSolid2d solid BinaryWriter writer | Improve this Doc View Source Store(Polygon2d, BinaryWriter) Declaration public static void Store(Polygon2d polygon, BinaryWriter writer) Parameters Type Name Description Polygon2d polygon BinaryWriter writer | Improve this Doc View Source Store(PolyLine2d, BinaryWriter) Declaration public static void Store(PolyLine2d polyline, BinaryWriter writer) Parameters Type Name Description PolyLine2d polyline BinaryWriter writer | Improve this Doc View Source Store(Quaternionf, BinaryWriter) Declaration public static void Store(Quaternionf q, BinaryWriter writer) Parameters Type Name Description Quaternionf q BinaryWriter writer | Improve this Doc View Source Store(Segment2d, BinaryWriter) Declaration public static void Store(Segment2d segment, BinaryWriter writer) Parameters Type Name Description Segment2d segment BinaryWriter writer | Improve this Doc View Source Store(Vector2d, BinaryWriter) Declaration public static void Store(Vector2d v, BinaryWriter writer) Parameters Type Name Description Vector2d v BinaryWriter writer | Improve this Doc View Source Store(Vector2f, BinaryWriter) Declaration public static void Store(Vector2f v, BinaryWriter writer) Parameters Type Name Description Vector2f v BinaryWriter writer | Improve this Doc View Source Store(Vector3d, BinaryWriter) Declaration public static void Store(Vector3d v, BinaryWriter writer) Parameters Type Name Description Vector3d v BinaryWriter writer | Improve this Doc View Source Store(Vector3f, BinaryWriter) Declaration public static void Store(Vector3f v, BinaryWriter writer) Parameters Type Name Description Vector3f v BinaryWriter writer | Improve this Doc View Source Store(List<Double>, BinaryWriter) Declaration public static void Store(List<double> values, BinaryWriter writer) Parameters Type Name Description List < Double > values BinaryWriter writer | Improve this Doc View Source Store(List<Int32>, BinaryWriter) Declaration public static void Store(List<int> values, BinaryWriter writer) Parameters Type Name Description List < Int32 > values BinaryWriter writer | Improve this Doc View Source Store(List<Single>, BinaryWriter) Declaration public static void Store(List<float> values, BinaryWriter writer) Parameters Type Name Description List < Single > values BinaryWriter writer | Improve this Doc View Source Store(String, BinaryWriter) Declaration public static void Store(string s, BinaryWriter writer) Parameters Type Name Description String s BinaryWriter writer | Improve this Doc View Source Store(String[], BinaryWriter) Declaration public static void Store(string[] s, BinaryWriter writer) Parameters Type Name Description String [] s BinaryWriter writer"
  },
  "api/g3.HashBuilder.html": {
    "href": "api/g3.HashBuilder.html",
    "title": "Struct HashBuilder | ViRGIS VR GIS",
    "keywords": "Struct HashBuilder Construct hash of multiple values using FNV hash (ish) http://www.isthe.com/chongo/tech/comp/fnv/ (should probably be using uint? but standard GetHashCode() returns int...) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct HashBuilder Constructors | Improve this Doc View Source HashBuilder(Int32) Declaration public HashBuilder(int init = -2128831035) Parameters Type Name Description Int32 init Fields | Improve this Doc View Source Hash Declaration public int Hash Field Value Type Description Int32 Methods | Improve this Doc View Source Add(Frame3f) Declaration public void Add(Frame3f f) Parameters Type Name Description Frame3f f | Improve this Doc View Source Add(Index2i) Declaration public void Add(Index2i v) Parameters Type Name Description Index2i v | Improve this Doc View Source Add(Index3i) Declaration public void Add(Index3i v) Parameters Type Name Description Index3i v | Improve this Doc View Source Add(Vector2d) Declaration public void Add(Vector2d v) Parameters Type Name Description Vector2d v | Improve this Doc View Source Add(Vector2f) Declaration public void Add(Vector2f v) Parameters Type Name Description Vector2f v | Improve this Doc View Source Add(Vector3d) Declaration public void Add(Vector3d v) Parameters Type Name Description Vector3d v | Improve this Doc View Source Add(Vector3f) Declaration public void Add(Vector3f v) Parameters Type Name Description Vector3f v | Improve this Doc View Source Add(Double) Declaration public void Add(double d) Parameters Type Name Description Double d | Improve this Doc View Source Add(Int32) Declaration public void Add(int i) Parameters Type Name Description Int32 i | Improve this Doc View Source Add(Single) Declaration public void Add(float f) Parameters Type Name Description Single f"
  },
  "api/g3.HBitArray.html": {
    "href": "api/g3.HBitArray.html",
    "title": "Class HBitArray | ViRGIS VR GIS",
    "keywords": "Class HBitArray HBitArray is a hierarchical variant of BitArray. Basically the idea is to make a tree of 32-bit blocks, where at level N, a '0' means that no bits are true in level N-1. This means we can more efficiently iterate over the bit set. Uses more memory than BitArray, but each tree level is divided by 32, so it is better than NlogN Inheritance Object HBitArray Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class HBitArray : IEnumerable<int>, IEnumerable Constructors | Improve this Doc View Source HBitArray(Int32) Declaration public HBitArray(int maxIndex) Parameters Type Name Description Int32 maxIndex Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source Item[Int32] Declaration public bool this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Boolean | Improve this Doc View Source TrueCount Declaration public int TrueCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Add(Int32) Declaration public void Add(int i) Parameters Type Name Description Int32 i | Improve this Doc View Source Contains(Int32) Declaration public bool Contains(int i) Parameters Type Name Description Int32 i Returns Type Description Boolean | Improve this Doc View Source Get(Int32) Declaration public bool Get(int i) Parameters Type Name Description Int32 i Returns Type Description Boolean | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<int> GetEnumerator() Returns Type Description IEnumerator < Int32 > | Improve this Doc View Source Set(Int32, Boolean) Declaration public void Set(int i, bool value) Parameters Type Name Description Int32 i Boolean value"
  },
  "api/g3.Hexagon2d.html": {
    "href": "api/g3.Hexagon2d.html",
    "title": "Class Hexagon2d | ViRGIS VR GIS",
    "keywords": "Class Hexagon2d Inheritance Object Hexagon2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class Hexagon2d Constructors | Improve this Doc View Source Hexagon2d(Vector2d, Double, Hexagon2d.TopModes) Declaration public Hexagon2d(Vector2d center, double radius, Hexagon2d.TopModes mode = Hexagon2d.TopModes.Flat) Parameters Type Name Description Vector2d center Double radius Hexagon2d.TopModes mode Fields | Improve this Doc View Source Center Declaration public Vector2d Center Field Value Type Description Vector2d | Improve this Doc View Source Radius Declaration public double Radius Field Value Type Description Double | Improve this Doc View Source TopMode Declaration public Hexagon2d.TopModes TopMode Field Value Type Description Hexagon2d.TopModes Properties | Improve this Doc View Source Bounds Declaration public AxisAlignedBox2d Bounds { get; } Property Value Type Description AxisAlignedBox2d | Improve this Doc View Source Height Declaration public double Height { get; } Property Value Type Description Double | Improve this Doc View Source HorzSpacing Declaration public double HorzSpacing { get; } Property Value Type Description Double | Improve this Doc View Source InnerRadius Declaration public double InnerRadius { get; set; } Property Value Type Description Double | Improve this Doc View Source IsClosed Declaration public bool IsClosed { get; } Property Value Type Description Boolean | Improve this Doc View Source VertSpacing Declaration public double VertSpacing { get; } Property Value Type Description Double | Improve this Doc View Source Width Declaration public double Width { get; } Property Value Type Description Double Methods | Improve this Doc View Source Clone() Declaration public Hexagon2d Clone() Returns Type Description Hexagon2d | Improve this Doc View Source Corner(Int32) Declaration public Vector2d Corner(int i) Parameters Type Name Description Int32 i Returns Type Description Vector2d"
  },
  "api/g3.Hexagon2d.TopModes.html": {
    "href": "api/g3.Hexagon2d.TopModes.html",
    "title": "Enum Hexagon2d.TopModes | ViRGIS VR GIS",
    "keywords": "Enum Hexagon2d.TopModes Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum TopModes Fields Name Description Flat Tip"
  },
  "api/g3.html": {
    "href": "api/g3.html",
    "title": "Namespace g3 | ViRGIS VR GIS",
    "keywords": "Namespace g3 Classes AddTrianglesMeshChange Add triangles from mesh and store necessary data to be able to reverse the change. Vertex and Triangle IDs will be restored on Revert() Currently does not restore the same EdgeIDs Arc2d ArcLengthSoftTranslation Arrangement2d Arrangement2d constructs a planar arrangement of a set of 2D line segments. When a segment is inserted, existing edges are split, and the inserted segment becomes multiple graph edges. So, the resulting DGraph2 should not have any edges that intersect. Calculations are performed in double-precision, so there is no guarantee of correctness. [TODO] multi-level segment has to accelerate find_intersecting_edges() [TODO] maybe smarter handling BaseCurve2 BezierCurve2 2D Bezier curve of arbitrary degree Ported from WildMagic5 Wm5BezierCurve2 BiArcFit2 BiGrid3<BlockType> BiGrid3 is a two-level multiresolution grid data structure. You provide exemplar object that implements suitable interfaces, and the class automatically generates necessary data structures. Functions to act on parent/child grids are in-progress... BinaryG3FormatReader BinaryG3Reader BinaryG3Writer Bitmap2 Bitmap3 BlockTimer BoundsUtil BSplineBasis BufferUtil CachingDenseGridTrilinearImplicit [RMS] variant of DenseGridTrilinearImplicit that does lazy evaluation of Grid values. Tri-linear interpolant for a 3D dense grid. Supports grid translation via GridOrigin, but does not support scaling or rotation. If you need those, you can wrap this in something that does the xform. CachingMeshSDF [RMS] this is variant of MeshSignedDistanceGrid that does lazy evaluation of actual distances, using mesh spatial data structure. This is much faster if we are doing continuation-method marching cubes as only values on surface will be computed! Compute discretely-sampled (ie gridded) signed distance field for a mesh The basic approach is, first compute exact distances in a narrow band, and then extend out to rest of grid using fast \"sweeping\" (ie like a distance transform). The resulting unsigned grid is then signed using ray-intersection counting, which is also computed on the grid, so no BVH is necessary If you set ComputeMode to NarrowBandOnly, result is a narrow-band signed distance field. This is quite a bit faster as the sweeping is the most computationally-intensive step. Caveats: the \"narrow band\" is based on triangle bounding boxes, so it is not necessarily that \"narrow\" if you have large triangles on a diagonal to grid axes Potential optimizations: Often we have a spatial data structure that would allow faster computation of the narrow-band distances (which become quite expensive if we want a wider band!) Not clear how to take advantage of this though. Perhaps we could have a binary grid that, in first pass, we set bits inside triangle bboxes to 1? Or perhaps same as current code, but we use spatial-dist, and so for each ijk we only compute once? (then have to test for computed value at each cell of each triangle...) This code is based on the C++ implementation found at https://github.com/christopherbatty/SDFGen Original license was public domain. Permission granted by Christopher Batty to include C# port under Boost license. CachingMeshSDFImplicit Tri-linear interpolant for a 3D dense grid. Supports grid translation via GridOrigin, but does not support scaling or rotation. If you need those, you can wrap this in something that does the xform. CancelFunction CappedCylinderGenerator Generate a Cylinder with caps. Supports sections of cylinder as well (eg wedges). Curently UV islands are overlapping for different mesh components, if NoSharedVertices Positioned along Y axis such that base-center is at Origin, and top is at Y=Height You get a cone unless BaseRadius = TopRadius No subdivisions along top/base rings or height steps. cylinder triangles have groupid = 1, top cap = 2, bottom cap = 3, wedge faces 5 and 6 CholeskyDecomposition Computes Cholesky decomposition/factorization L of matrix A A must be symmetric and positive-definite computed lower-triangular matrix L satisfies L*L^T = A. https://en.wikipedia.org/wiki/Cholesky_decomposition Circle2d Circle3d CircleProjectionTarget ColorHSV ColorMap ColorMixer CommandArgumentSet ConeGenerator ConstantIndexMap ConstantItr<T> Iterator that just returns a constant value N times ContMinBox2 Fit minimal bounding-box to a set of 2D points. Result is in MinBox. ContMinCircle2 Fit minimal bounding-circle to a set of 2D points ContMinCircle2.Support ContOrientedBox3 ConvexHull2 Construct convex hull of a set of 2D points, with various accuracy levels. HullIndices provides ordered indices of vertices of input points that form hull. ConvexHull2.Edge Internal class that represents edge of hull, and neighbours Curve3Axis3RevolveGenerator Curve3Curve3RevolveGenerator CurveGenerator CurveResampler CurveSampler2 CurveUtils CurveUtils2 Cylinder3d CylinderProjectionTarget DCurve3 DCurve3 is a 3D polyline, either open or closed (via .Closed) Despite the D prefix, it is not dynamic DCurve3BoxTree tree of Oriented Boxes (OBB) for a DCurve3. Construction is sequential, ie pairs of segments are merged into boxes, then pairs of boxes, and so on [TODO] is this the best strategy? is there maybe some kind of sorting/sweepline algo? [TODO] would it make more sense to have more than just 2 segments at lowest level? DCurveProjectionTarget DeepCopy Collection of utility functions for one-line deep copies of lists DenseGrid2f 2D dense grid of floating-point scalar values. DenseGrid2i 2D dense grid of integers. DenseGrid3f 3D dense grid of floating-point scalar values. DenseGrid3i 3D dense grid of integers. DenseGridTrilinearImplicit Tri-linear interpolant for a 3D dense grid. Supports grid translation via GridOrigin, but does not support scaling or rotation. If you need those, you can wrap this in something that does the xform. DenseMatrix Row-major dense matrix DenseUVMesh DenseVector DGraph Base class for Arbitrary-Topology Graphs. Similar structure to topology parts of DMesh3. Each vertex can be connected to an arbitrary number of edges. Each edge can have an integer GroupID. See DGraph2 and DGraph3 for 3d implementations. Use DGraphN if you would like a topology-only graph. You cannot instantiate DGraph directly. DGraph2 Arbitrary-Topology 2D Graph. This is similar to DMesh3 but without faces. Each vertex can be connected to an arbitrary number of edges. Each vertex can have a 3-float color, and edge edge can have an integer GroupID DGraph2Resampler \"Remesher\" for DGraph2 DGraph2Util Utility functions for DGraph2 data structure DGraph2Util.Curves DGraph3 Arbitrary-Topology 3D Graph. This is similar to DMesh3 but without faces. Each vertex can be connected to an arbitrary number of edges. Each vertex can have a 3-float color, and edge edge can have an integer GroupID DGraph3Util Utility functions for DGraph3 data structure DGraphN Implementation of DGraph that has no dimensionality, ie no data stored for vertieces besides indices. DiagonalMatrix DijkstraGraphDistance Compute Dijkstra shortest-path algorithm on a graph. Computation is index-based, but can use sparse data structures if the index space will be sparse. Construction is somewhat complicated, but see shortcut static methods at end of file for common construction cases: MeshVertices(mesh) - compute on vertices of mesh MeshVertices(mesh) - compute on vertices of mesh DIndexArray2i DIndexArray3i Distance DistanceFieldToSkeletalField This class converts the interval [-falloff,falloff] to [0,1], Then applies Wyvill falloff function (1-t^2)^3. The result is a skeletal-primitive-like shape with the distance=0 isocontour lying just before midway in the range (at the .ZeroIsocontour constant) DistLine2Line2 DistLine2Segment2 DistLine3Ray3 DistLine3Segment3 DistLine3Triangle3 DistPoint2Box2 DistPoint2Circle2 DistPoint3Circle3 DistPoint3Cylinder3 DistPoint3Triangle3 DistRay3Ray3 DistRay3Segment3 Distance between ray and segment ported from WildMagic5 DistSegment2Segment2 DistSegment3Triangle3 DistTriangle3Triangle3 DMesh3 DMesh3Builder DMeshAABBTree3 Hierarchical Axis-Aligned-Bounding-Box tree for a DMesh3 mesh. This class supports a variety of spatial queries, listed below. Various construction strategies are also available, the default is the fastest to build but if you are doing a lot of queries, you might experiment with the others (eg TopDownMedian) Available queries: FindNearestTriangle(point, maxdist) FindNearestHitTriangle(ray, maxdist) FindAllHitTriangles(ray, maxdist) TestIntersection(triangle) TestIntersection(mesh) TestIntersection(otherAABBTree) FindAllIntersections(otherAABBTree) FindNearestTriangles(otherAABBTree, maxdist) IsInside(point) WindingNumber(point) FastWindingNumber(point) DoTraversal(generic_traversal_object) DMeshAABBTree3.IntersectionsQueryResult DMeshAABBTree3.TreeTraversal Instances of this class can be passed in to the DoTraversal() function to implement your own tree-traversal queries. NextBoxF() is called for each box node. Return false from this function to halt terminate that branch of the traversal, or true to descend into that box's children (boxes or triangles). NextTriangleF() is called for each triangle. DMeshIntersectionTarget DPolyLine2f Summary description for PolyLine. DSparseGrid3<ElemType> Dynamic sparse 3D grid. Idea is that we have grid of some type of object and we don't want to pre-allocate full grid of them. So we allocate on-demand. This can be used to implement multi-grid schemes, eg for example the GridElement type could be Bitmap3 of a fixed dimension. DSubmesh3 DSubmesh3Set A set of submeshes of a base mesh. You provide a set of keys, and a Func that returns the triangle index list for a given key. The set of DSubmesh3 objects are computed on construction. DVector<T> DVectorArray2<T> DVectorArray2d DVectorArray2f DVectorArray3<T> DVectorArray3d DVectorArray3f DVectorArray3i DynamicPriorityQueue<T> DynamicPriorityQueueNode To use DynamicPriorityQueue, your queue node type needs to subclass this one. However the priority and index members are for internal queue use, not yours! EdgeLoop Sequential set of vertices/edges in a mesh, that form a closed loop. If all you have are the vertices, use EdgeLoop.VertexLoopToEdgeLoop() to construct an EdgeLoop EdgeLoopRemesher This is a custom Remesher that only affects the edges along an EdgeLoop. The edges are only split and collapsed, flipping is not permitted. The loop vertices are smoothed along the loop, ie using curve laplacian rather than one-ring laplacian. [TODO] avoid rebuild_edge_list(). requires handling various cases below... [TODO] Precompute() seems overly expensive...? [TODO] local-smoothing impl is not very efficient. Should not be necessary to rebuild nbrhood each time if we are not changing it. EdgeSpan An EdgeSpan is a continous set of edges in a Mesh that is not closed (that would be an EdgeLoop) Ellipse2d EllipseArc2d FaceGroupOptimizer Given input mesh with a set of face groups, optimize the face group boundaries. This involves flipping triangles between groups, and/or assigning to \"background\" group. Also has Dilate/Contract functions to grow/shrink groups in various ways. FaceGroupUtil FastPointWinding Formulas for point-set winding number approximation FastQuaternionSVD Fast Approximate SVD of 3x3 matrix that returns quaternions. Implemented based on https://github.com/benjones/quatSVD/blob/master/quatSVD.hpp which was re-implemented from http://pages.cs.wisc.edu/~sifakis/project_pages/svd.html By default, only does a small number of diagonalization iterations (4), which limits the accuracy of the solution. Results are still orthonormal but error when reconstructing matrix will be larger. This is fine for many applications. Can increase accuracy by increasing NumJacobiIterations parameter Note: does not produce same quaternions as running SingularValueDecomposition on matrix and converting resulting U/V to quaternions. The numbers will be similar but the signs will be different Useful properties: quaternions are rotations, there are no mirrors like in normal SVD TODO: SymmetricMatrix3d currently a class, could make a struct (see comments) FastTriWinding Formulas for triangle winding number approximation FileSystemUtils GaussPointsFit3 GeneralPolygon2d GeneralPolygon2dBoxTree GenericMaterial gException gIndices gParallel GraphCells2d This class extracts the set of loops bounding the \"cells\" of a DGraph2, ie each cell is a connected region with a polygonal boundary. Precondition: the graph has no self-intersections. Precondition: at any vertex, the edges are sortable by angle (ie no outgoing edges overlap) ** numerically this may not be 100% reliable.... Both \"sides\" of each edge are included in some cell boundary, ie so for a simple polygon, there are two cells, one infinitely large. The \"inside\" cells will be oriented clockwise, if converted to a Polygon2d. GraphSplitter2d This class is used to bisect an existing DGraph2 with infinite lines. This is easier than inserting new segments, which can be done using Arrangement2d. Computations are done in double precision. Use at your own risk. [TODO] computation of signs for a split-line is currently O(N). If inserting many parallel lines, can improve this using standard sorting. GridBox3Generator Generate a mesh of a box that has \"gridded\" faces, ie grid of triangulated quads, with EdgeVertices verts along each edge. [TODO] allow varying EdgeVertices in each dimension (tricky...) GriddedRectGenerator Generate a mesh of a rect that has \"gridded\" faces, ie grid of triangulated quads, with EdgeVertices verts along each edge. [TODO] allow varying EdgeVertices in each dimension (tricky...) gSerialization HBitArray HBitArray is a hierarchical variant of BitArray. Basically the idea is to make a tree of 32-bit blocks, where at level N, a '0' means that no bits are true in level N-1. This means we can more efficiently iterate over the bit set. Uses more memory than BitArray, but each tree level is divided by 32, so it is better than NlogN Hexagon2d IdentityIndexMap ImplicitAxisAlignedBox3d Implicit axis-aligned box ImplicitBlend2d ImplicitBlend3d Blend of two implicit surfaces. Assumes surface is at zero iscontour. Uses Pasko blend from http://www.hyperfun.org/F-rep.pdf ImplicitBox3d Implicit oriented box ImplicitDifference2d ImplicitDifference3d Boolean Difference/Subtraction of two implicit functions A-B = A AND (NOT B) Assumption is that both have surface at zero isocontour and negative is inside. ImplicitFieldSampler3d Sample implicit fields into a dense grid ImplicitHalfSpace3d Implicit half-space. \"Inside\" is opposite of Normal direction. ImplicitIntersection2d ImplicitIntersection3d Boolean Intersection of two implicit functions, A AND B Assumption is that both have surface at zero isocontour and negative is inside. ImplicitLine3d Implicit tube around line segment ImplicitNaryDifference3d Boolean Difference of N implicit functions, A - Union(B1..BN) Assumption is that both have surface at zero isocontour and negative is inside. ImplicitNaryIntersection3d Boolean Intersection of N implicit functions, A AND B. Assumption is that both have surface at zero isocontour and negative is inside. ImplicitNAryOp2d ImplicitNaryUnion3d Boolean Union of N implicit functions, A OR B. Assumption is that both have surface at zero isocontour and negative is inside. ImplicitOffset3d Offset the zero-isocontour of an implicit function. Assumes that negative is inside, if not, reverse offset. ImplicitPoint2d ImplicitShell3d remaps values so that values within given interval are negative, and values outside this interval are positive. So, for a distance field, this converts single isocontour into two nested isocontours with zeros at interval a and b, with 'inside' in interval ImplicitSmoothDifference3d Continuous R-Function Boolean Difference of two implicit functions, A AND B Assumption is that both have surface at zero isocontour and negative is inside. ImplicitSmoothIntersection3d Continuous R-Function Boolean Intersection of two implicit functions, A-B = A AND (NOT B) Assumption is that both have surface at zero isocontour and negative is inside. ImplicitSmoothUnion3d Continuous R-Function Boolean Union of two implicit functions, A OR B. Assumption is that both have surface at zero isocontour and negative is inside. ImplicitSphere3d Implicit sphere, where zero isocontour is at Radius ImplicitUnion2d ImplicitUnion3d Boolean Union of two implicit functions, A OR B. Assumption is that both have surface at zero isocontour and negative is inside. IndexArray2i IndexArray3i IndexArray4i IndexFlagSet This class provides a similar interface to BitArray, but can optionally use a HashSet (or perhaps some other DS) if the fraction of the index space required is small IndexHashSet IndexMap IndexPriorityQueue This is a min-heap priority queue class that does not use an object for each queue node. Integer IDs must be provided by the user to identify unique nodes. Internally an array is used to keep track of the mapping from ids to internal indices, so the max ID must also be provided. See DijkstraGraphDistance for example usage. conceptually based on https://github.com/BlueRaja/High-Speed-Priority-Queue-for-C-Sharp IndexRangeEnumerator IndexUtil InPlaceIterativeCurveSmooth Integrate1d IntersectionUtil Intersector1 IntrLine2Line2 IntrLine2Segment2 IntrLine2Triangle2 IntrLine3AxisAlignedBox3 IntrLine3Box3 IntrRay3AxisAlignedBox3 IntrRay3Box3 IntrRay3Triangle3 IntrSegment2Segment2 IntrSegment2Triangle2 IntrSegment3Box3 IntrTriangle2Triangle2 IntrTriangle3Triangle3 IntTagSet<T> Basic object->integer mapping IWrappedCurve3d Simple sampled-curve wrapper type LaplacianCurveDeformer Variant of LaplacianMeshDeformer that can be applied to 3D curve. Solve in each dimension can be disabled using .SolveX/Y/Z Currently only supports uniform weights (in Initialize) LaplacianMeshDeformer LaplacianMeshSmoother LineGenerator LocalProfiler LockingQueue<T> MappedList IList wrapper that remaps values via a Func (eg for index maps) MarchingCubes Basic implementation of marching cubes mesh generation, which can be applied to arbitrary Implicit function. Multi-threading enabled by default. [TODO] support locking on Implicit.Value()? May not be thread-safe!! [TODO] extension that tracks set of triangles in each cube, so we can do partial updates? [TODO] is hash table on vertex x/y/z the best idea? [TODO] hash table for edge vtx-indices instead, like old polygonizer? (how did we index edges?!?) MarchingQuads 2D MarchingQuads polyline extraction from scalar field [TODO] this is very, very old code. Should at minimum rewrite using current vector classes/etc. MathUtil Matrix2d Matrix2f MatrixUtil MemoryPool<T> Very basic object pool class. MeshBoolean MeshBoundaryEdgeMidpoints Present mesh boundary-edge midpoints as a point set MeshBoundaryLoops Extract boundary EdgeLoops from Mesh. Can also extract EdgeSpans for open areas, however default behavior is to ignore these. Set .SpanBehavior to configure. MeshBoundaryLoopsException MeshConnectedComponents MeshConstraints MeshConstraintUtil MeshDecomposition MeshEdgeMidpoints Present mesh edge midpoints as a point set MeshEdgeSelection MeshEditor MeshExtrudeFaces Extrude a subset of faces of Mesh. Steps are: 1) separate subset from neighbouring triangles 2) offset them 3) connect original and offset edges (now boundary edges) with a triangle strip Caveats: not sure it works for multiple regions? boundary vertices are currently attached to offset region, rather than also duplicated and then connected w/ strip [TODO] implement this behavior MeshExtrudeLoop Assumption is that Loop is a boundary loop on Mesh. Operation makes a duplicate loop of vertices, at location defind by PositionF, then stitches input and new loops together with a ring of triangles. MeshExtrudeMesh Extrude all faces of a mesh, and stitch together any boundary loops. Steps are: 1) make a copy of all triangles in mesh 2) offset copy vertices 3) connect up loops with triangle strips MeshFaceSelection MeshFacesFromLoop Find mesh triangles enclosed by a curve embedded in the mesh If a seed triangle in the enclosed region is not provided, then the smaller of the two largest connected-components is chosen as the \"inside\". MeshGenerator MeshICP MeshIndexUtil Utility functions for manipulating sets/lists of mesh indices MeshInsertPolygon Insert Polygon into Mesh. Assumption is that Mesh has 3D coordinates (u,v,0). This is basically a helper/wrapper around MeshInsertUVPolyCurve. Inserted edge set is avaliable as .InsertedPolygonEdges, and triangles inside polygon as .InteriorTriangles MeshInsertUVPolyCurve Cut mesh with a path of 2D line segments Assumptions: mesh vertex x/y coordinates are 2D coordinates we want to use. Replace PointF if this is not the case. segments of Curve lie entirely within UV-triangles Limitations: currently not robust to near-parallel line segments that are within epsilon-band of the input loop. In this case, we will include all such segments in the 'cut' set, but we will probably not be able to find a connected path through them. not robust to degenerate geometry. Strongly recommend that you use Validate() and/or preprocess the input mesh to remove degenerate faces/edges MeshIOUtil MeshIsoCurves MeshIterativeSmooth MeshIterators MeshLocalParam MeshLoopClosure MeshLoopSmooth MeshMeasurements MeshMeshCut TODO: track descendant triangles of each input face for missing segments, can resolve in 2D in plane of face MeshNormals MeshOps MeshPlaneCut MeshProjectionTarget MeshProjectionTarget provides an IProjectionTarget interface to a mesh + spatial data structure. Use to project points to mesh surface. MeshQueries MeshRefinerBase MeshRegionBoundaryLoops Extract boundary EdgeLoops for subregions of Mesh MeshSignedDistanceGrid Compute discretely-sampled (ie gridded) signed distance field for a mesh The basic approach is, first compute exact distances in a narrow band, and then extend out to rest of grid using fast \"sweeping\" (ie like a distance transform). The resulting unsigned grid is then signed using ray-intersection counting, which is also computed on the grid, so no BVH is necessary If you set ComputeMode to NarrowBandOnly, result is a narrow-band signed distance field. This is quite a bit faster as the sweeping is the most computationally-intensive step. Caveats: the \"narrow band\" is based on triangle bounding boxes, so it is not necessarily that \"narrow\" if you have large triangles on a diagonal to grid axes Potential optimizations: Often we have a spatial data structure that would allow faster computation of the narrow-band distances (which become quite expensive if we want a wider band!) Not clear how to take advantage of this though. Perhaps we could have a binary grid that, in first pass, we set bits inside triangle bboxes to 1? Or perhaps same as current code, but we use spatial-dist, and so for each ijk we only compute once? (then have to test for computed value at each cell of each triangle...) This code is based on the C++ implementation found at https://github.com/christopherbatty/SDFGen Original license was public domain. Permission granted by Christopher Batty to include C# port under Boost license. MeshTransforms MeshTriInfoCache MeshTrimLoop Delete triangles inside on/near-surface trimming curve, and then adapt the new boundary loop to conform to the loop. [DANGER] To use this class, we require a spatial data structure we can project onto. Currently we assume that this is a DMesh3AABBTree because if you don't provide a seed triangle, we use FindNearestTriangle() to find this index on the input mesh. So, it must be a tree for the exact same mesh (!). However we then delete a bunch of triangles and use this spatial DS only for reprojection. Possibly these should be two separate things? Or force caller to provide seed triangle for trim loop, instead of solving this problem for them? (But basically there is no way around having a full mesh copy...) TODO: output boundary EdgeLoop that has been aligned w/ trim curve handle cases where input mesh has open borders MeshUtil MeshValidation MeshVertexSelection MeshWeights ModifyVerticesMeshChange Mesh change for vertex deformations. Currently minimal support for initializing buffers. AppendNewVertex() can be used to accumulate modified vertices and their initial positions. NormalHistogram Construct spherical histogram of normals of mesh. Binning is done using a Spherical Fibonacci point set. NTMesh3 NURBSCurve2 OBJFormatReader OBJMaterial OBJReader OBJWriter gradientspace OBJ writer [TODO] if mesh has groups, usemtl lines will not be written (see TODO below) [TODO] options to preserve vertex and triangle indices OFFFormatReader OFFWriter OpenCylinderGenerator OrthogonalPlaneFit3 PackedSparseMatrix This is a sparse matrix where each row is an array of (column,value) pairs This is more efficient for Matrix*Vector multiply. ParallelStream<V, T> ParametricCurveSequence2 PlanarComplex PlanarComplex.ClosedLoopsInfo PlanarComplex.Element PlanarComplex.GeneralSolid PlanarComplex.OpenCurvesInfo PlanarComplex.SmoothCurveElement PlanarComplex.SmoothLoopElement PlanarComplex.SolidRegionInfo PlanarHoleFiller Try to fill planar holes in a mesh. The fill is computed by mapping the hole boundary into 2D, filling using 2D algorithms, and then mapping back to 3D. This allows us to properly handle cases like nested holes (eg from slicing a torus in half). PlanarComplex is used to sort the input 2D polyons. MeshInsertUVPolyCurve is used to insert each 2D polygon into a generated planar mesh. The resolution of the generated mesh is controlled by .FillTargetEdgeLen In theory this approach can handle more geometric degeneracies than Delaunay triangluation. However, the current code requires that MeshInsertUVPolyCurve produce output boundary loops that have a 1-1 correspondence with the input polygons. This is not always possible. Currently these failure cases are not handled properly. In that case the loops will not be stitched. PlanarSolid2d PlanarSpansFiller This class fills an ordered sequence of planar spans. The 2D polygon is formed by chaining the spans. Current issues: connectors have a single segment, so when simplified, they become a single edge. should subsample them instead. currently mapping from inserted edges back to span edges is not calculated, so we have no way to merge them (ie MergeFillBoundary not implemented) fill triangles not returned? PlaneIntersectionTarget Compute ray-intersection with plane PlaneProjectionTarget PointAABBTree3 Hierarchical Axis-Aligned-Bounding-Box tree for an IPointSet TODO: no timestamp support right now... PointAABBTree3.TreeTraversal Instances of this class can be passed in to the DoTraversal() function to implement your own tree-traversal queries. NextBoxF() is called for each box node. Return false from this function to halt terminate that branch of the traversal, or true to descend into that box's children (boxes or points). NextPointF() is called for each point. PointHashGrid2d<T> Hash Grid for 2D points. You provide the 'point' type. If you have an indexable set of points this can just be int, or can be more complex point data structure (but be careful w/ structs...) Does not actually store 2D points. So, to remove a point you must also know it's 2D coordinate, so we can look up the cell coordinates. Hence, to 'update' a point, you need to know both it's old and new 2D coordinates. PointHashGrid3d<T> Hash Grid for 3D points. You provide the 'point' type. If you have an indexable set of points this can just be int, or can be more complex point data structure (but be careful w/ structs...) Does not actually store 3D points. So, to remove a point you must also know it's 3D coordinate, so we can look up the cell coordinates. Hence, to 'update' a point, you need to know both it's old and new 3D coordinates. TODO: if a lot of points are in the same spot, this is still a disaster. What if we had a second level of hashing, where once a list at a level gets too big, we build a sub-hash there? PointSplatsGenerator Create a mesh that contains a planar element for each point and normal (currently only triangles) Polygon2d Polygon2dBoxTree tree of Oriented Boxes (OBB) for a Polygon2d. Construction is sequential, ie pairs of segments are merged into boxes, then pairs of boxes, and so on [TODO] is this the best strategy? is there maybe some kind of sorting/sweepline algo? [TODO] would it make more sense to have more than just 2 segments at lowest level? Polygon2DCurve Wrapper for a Polygon2d that provides minimal IParametricCurve2D interface PolygonFont2d This class represents an outline font, where the outline is composed of polygons. Each font is a list of GeneralPolygon2D objects, so each outline may have 1 or more holes. (In fact, the mapping is [string,list_of_gpolygons], so you can actually keep entire strings together if desired) PolygonFont2d.CharacterInfo PolyLine2d PolyLine2DCurve Wrapper for a PolyLine2d that provides minimal IParametricCurve2D interface PolyLine3d PolySimplification2 2D Polyline/Polygon simplification. This is a more complex approach than Polygon.Simplify(), which uses sequential vtx clustering and then runs douglas-peucker algorithm. That method can end up modifying long straight segments, which is not ideal in many contexts (eg manufacturing). Strategy here is : 1) find runs of vertices that are very close to straight lines (default 0.01mm deviation tol) 2) find all straight segments longer than threshold distance (default 2mm) 3) discard vertices that deviate less than tolerance (default = 0.2mm) from sequential-points-segment, unless they are required to preserve straight segments [TODO] currently doing greedy search in 1,3. Could do more optimal search. [TODO] currently measuring deviation of p1...pN-1 from line [p0,pN] for points [p0,p1,...pN]. could alternately fit best segment to p1...pN (p0 is already fixed). [TODO] 2d variant of variational shape segmentation? ProgressCancel This class is intended to be passed to long-running computes to 1) provide progress info back to caller (not implemented yet) 2) allow caller to cancel the computation PuncturedDiscGenerator QuadraticFit2 Query2d Query2Int64 2D queries for integer coordinates. Note that input Vector2d values are directly cast to int64 - you must scale them to suitable coordinates yourself! QueryBase Port of WildMagic5 Query class QueryTuple2d Radial3DArrowGenerator RayIntersection ReadOptions Reducer RefCountVector RefCountedVector is used to keep track of which indices in a linear index list are in use/referenced. A free list is tracked so that unreferenced indices can be re-used. The enumerator iterates over valid indices (ie where refcount > 0) refcounts are shorts so the maximum count is 65536. No overflow checking is done in release builds. RegionOperator This class automatically extracts a submesh from a mesh, and can re-insert it after you have edited it, as long as you have not messed up the boundary [TODO] Nearly all the code here is duplicated from RegionRemesher. Maybe this could be a base class for that? [TODO] ReinsertSubToBaseMapT is not returned by the MeshEditor.ReinsertSubmesh, instead we are trying to guess it here, by making some assumptions about what happens. It works for now, but it would better if MeshEditor returned this information. RegionRemesher RemapItr<T, T2> Iterator that re-maps iterated values via a Func Remesher RemoveTrianglesMeshChange Remove triangles from mesh and store necessary data to be able to reverse the change. Vertex and Triangle IDs will be restored on Revert() Currently does not restore the same EdgeIDs RoundRectGenerator SafeListBuilder<T> SampledArcLengthParam SampledArcLengthParam2d ScalarMap Scalar version of a ColorMap (ie interpolate between sample points) [TODO] could we make this a template? SculptCurveDeformation Base-class for DCurve3 spatial deformations. Subclasses must implement abstract Apply() method. SculptCurveMove SculptCurveSmooth Segment2dBox SegmentHashGrid2d<T> Hash Grid for 2D segments. You provide the 'segment' type. If you have an indexable set of segments this can just be int, or can be more complex segment data structure (but be careful w/ structs...) Segments are stored in the grid cell that contains the segment center. We keep track of the extent of the longest segment that has been added. The search radius for distance queries is expanded by this extent. So, distance queries ARE NOT EFFICIENT if you even one very long segment. [TODO] make a multi-level hash Does not actually store 2D segments. So, to remove a segment you must also know it's 2D center, so we can look up the cell coordinates. Hence, to 'update' a segment, you need to know both it's old and new 2D centers. SegmentSet2d SequentialProjectionTarget SetVerticesMeshChange Mesh change for full-mesh vertex deformations - more efficient than ModifyVerticesMeshChange. Note that this does not enforce that vertex count does not change! ShiftIndexMap SimpleHoleFiller SimpleMesh SimpleMeshBuilder SimpleQuadMesh SimpleTriangleMesh but for quads. Data packed into buffers, no dynamics. Supports Per-Vertex Normals, Colors, UV, and Per-Quad Facegroup. use static WriteOBJ() to save. No loading, for now. SimpleStore Utility class that is intended to support things like writing and reading test cases, etc. You can write out a test case in a single line, eg SimpleStore.Store(path, new object[] { TestMesh, VertexList, PlaneNormal, ... }) The object list will be binned into the relevant sublists automatically. Then you can load this data via: SimpleStore s = SimpleStore.Restore(path) SingularValueDecomposition Singular Value Decomposition of arbitrary matrix A Computes U/S/V of A = U * S * V^T Useful Properties: S = square-roots of eigenvalues of A U = eigenvectors of A * A^T V = eigenvectors of A^T * A U * V^T = rotation matrix closest to A V * Inv(S) * U^T = psuedoinverse of A U and/or V are rotation matrices but may also contain reflections Detection: det(U) or det(v) == -1 Removal: if ( det(U) == -1 ) { U *= -1; S *= -1 } if ( det(V) == -1 ) { V *= -1; S *= -1 } (right? seems to work) SkeletalBlend3d sum-blend SkeletalRicciBlend3d Ricci blend SkeletalRicciNaryBlend3d Boolean Union of N implicit functions, A OR B. Assumption is that both have surface at zero isocontour and negative is inside. SmallListSet SmallListSet stores a set of short integer-valued variable-size lists. The lists are encoded into a few large DVector buffers, with internal pooling, so adding/removing lists usually does not involve any new or delete ops. The lists are stored in two parts. The first N elements are stored in a linear subset of a dvector. If the list spills past these N elements, the extra elements are stored in a linked list (which is also stored in a flat array). Each list stores its count, so list-size operations are constant time. All the internal \"pointers\" are 32-bit. Snapping SparseList<T> SparseObjectList<T> variant of SparseList for class objects, then \"zero\" is null TODO: can we combine these classes somehow? SparseSymmetricCG SparseSymmetricCGMultipleRHS [RMS] this is a variant of SparseSymmetricCG that supports multiple right-hand-sides. Makes quite a big difference as matrix gets bigger, because MultiplyF can unroll inner loops (as long as you actually do that) However, if this is done then it is not really possible to do different numbers of iterations for different RHS's. We will not update that RHS once it has converged, however we still have to do the multiplies! SpatialFunctions SpatialFunctions.NormalOffset Sphere3Generator_NormalizedCube Generate a mesh of a sphere by first generating a mesh of a cube, and then normalizing the vertices and moving them to sphere of desired radius. SphericalFibonacciPointSet A Spherical Fibonacci Point Set is a set of points that are roughly evenly distributed on a sphere. Basically the points lie on a spiral, see pdf below. The i-th SF point of an N-point set can be calculated directly. For a given (normalized) point P, finding the nearest SF point (ie mapping back to i) can be done in constant time. math from http://lgdv.cs.fau.de/uploads/publications/spherical_fibonacci_mapping_opt.pdf StandardMeshReader StandardMeshWriter Writes various mesh file formats. Format is determined from extension. Currently supports: .obj : Wavefront OBJ Format https://en.wikipedia.org/wiki/Wavefront_.obj_file .stl : ascii and binary STL formats https://en.wikipedia.org/wiki/STL_(file_format ) .off : OFF format https://en.wikipedia.org/wiki/OFF_(file_format ) .g3mesh : internal binary format for packed DMesh3 objects Each of these is implemented in a separate Writer class, eg OBJWriter, STLWriter, etc StandardSculptCurveDeformation STLFormatReader STLReader STLReader.STLSolid STLWriter StringTagSet<T> Basic object->string mapping SVGWriter SymmetricEigenSolver SymmetricSparseMatrix Basic sparse-symmetric-matrix class. Stores upper-triangular portion. Uses Dictionary as sparsifying data structure, which is probably not a good option. But it is easy. TilingUtil TransformedIntersectionTarget TransformedMeshProjectionTarget Extension of MeshProjectionTarget that allows the target to have a transformation relative to it's internal space. Call SetTransform(), or initialize the transforms yourself TransformSequence TransformSequence stores an ordered list of basic transformations. This can be useful if you need to construct some modifications and want to use the same set later. For example, if you have a hierarchy of objects with relative transformations and want to \"save\" the nested transform sequence without having to hold references to the original objects. Use the Append() functions to add different transform types, and the TransformX() to apply the sequence TransformSequence2 TransformSequence stores an ordered list of basic transformations. This can be useful if you need to construct some modifications and want to use the same set later. For example, if you have a hierarchy of objects with relative transformations and want to \"save\" the nested transform sequence without having to hold references to the original objects. Use the Append() functions to add different transform types, and the TransformX() to apply the sequence TriangleBinsGrid2d This class is a spatial data structure for 2D triangles. It is intended for point-containment and box-overlap queries. It does not store the triangles, only indices, so you must pass in the triangle vertices to add/remove functions, similar to PointHashGrid2d. However, unlike the hash classes, this one is based on a grid of \"bins\" which has a fixed size, so you must provide a bounding box on construction. Each triangle is inserted into every bin that it overlaps. [TODO] currently each triangle is inserted into every bin that it's bounding box overlaps. Need conservative rasterization to improve this. Can implement by testing each bin bbox for intersection w/ triangle TriangulatedPolygonGenerator Triangulate a 2D polygon-with-holes by inserting it's edges into a meshed rectangle and then removing the triangles outside the polygon. TrivialBox3Generator Generate a minimal box TrivialDiscGenerator TrivialRectGenerator TubeGenerator Sweep a 2D Profile Polygon along a 3D Path. Supports closed and open paths, and capping open paths. However caps are triangulated using a fan around a center vertex (which you can set using CapCenter). If Polygon is non-convex, this will have foldovers. In that case, you have to triangulate and append it yourself. If your profile curve does not contain the polygon bbox center, set OverrideCapCenter=true and set CapCenter to a suitable center point. The output normals are currently set to those for a circular profile. Call MeshNormals.QuickCompute() on the output DMesh to estimate proper vertex normals Units Util VectorArray2<T> VectorArray2d VectorArray2f VectorArray3<T> VectorArray3d VectorArray3f VectorArray3i VectorArray4<T> VerticalGeneralizedCylinderGenerator VoxelSurfaceGenerator Structs Arrangement2d.Intersection Arrangement2d.SegmentPoint ArrayAlias<T> AxisAlignedBox2d AxisAlignedBox2f AxisAlignedBox2i AxisAlignedBox3d AxisAlignedBox3f AxisAlignedBox3i Box2d Box2f Box3d Box3f Colorb Colorf ComplexEndpoint2d ComplexSegment2d CurveSample CurveSample2d DGraph.EdgeCollapseInfo DGraph.EdgeSplitInfo DGraph3Util.Curves DMesh3.CompactInfo DMesh3.EdgeCollapseInfo DMesh3.EdgeFlipInfo DMesh3.EdgeSplitInfo DMesh3.MergeEdgesInfo DMesh3.PokeTriangleInfo DMeshAABBTree3.PointIntersection DMeshAABBTree3.SegmentIntersection DPolyLine2f.Edge DPolyLine2f.Vertex DVector<T>.DBlock EdgeConstraint Frame3f FrameGridIndexer3 Map to/from grid coords, where grid is relative to frame coords/axes GridLevelIndex GridLevelIndex2 HashBuilder Construct hash of multiple values using FNV hash (ish) http://www.isthe.com/chongo/tech/comp/fnv/ (should probably be using uint? but standard GetHashCode() returns int...) Index2i Index3i Index4i Interval1d Interval1i IntSequence IList wrapper for an Interval1i, ie sequential list of integers IntTagPair integer type/value pair, packed into 32 bits - 8 for type, 24 for value IOReadResult IOWriteResult LaplacianCurveDeformer.SoftConstraintV LaplacianMeshDeformer.SoftConstraintV LaplacianMeshSmoother.SoftConstraintV Line2d Line2f Line3d Line3f LinearIntersection returned by linear-primitive intersection functions matrix_entry Matrix3d Matrix3f MeshConnectedComponents.Component MeshDecomposition.Component MeshGenerator.CircularSection MeshIsoCurves.GraphEdgeInfo Information about edge of the computed Graph. mesh_tri is triangle ID of crossed triangle mesh_edges depends on case. EdgeEdge is [edgeid,edgeid], EdgeVertex is [edgeid,vertexid], and OnEdge is [edgeid,-1] MeshMeasurements.GenusResult MultigridIndexer2 map between \"outer\" (ie higher-res) grid coordinates and \"blocks\" of those coordinates. MultigridIndexer3 map between \"outer\" (ie higher-res) grid coordinates and \"blocks\" of those coordinates. NewVertexInfo NTMesh3.EdgeSplitInfo NTMesh3.PokeTriangleInfo NURBSCurve2.CurveDerivatives PackedSparseMatrix.nonzero PlanarComplex.FindSolidsOptions Plane3d Plane3f QuadricError Stores quadratic function that evaluates distance to plane, in minimal 10-coefficient form, following http://mgarland.org/files/papers/qtheory.pdf symmetric matrix A vector b constant c Quaterniond Quaternionf Ray3d Ray3f Reducer.QEdge ScaleGridIndexer2 Map to/from grid coords ScaleGridIndexer3 Map to/from grid coords SculptCurveDeformation.DeformInfo Segment2d Segment2f Segment3d Segment3f SetGroupBehavior ShiftGridIndexer2 Map to/from grid coords, where grid is translated from origin ShiftGridIndexer3 Map to/from grid coords, where grid is translated from origin SVGWriter.Style Triangle2d Triangle2f Triangle3d Triangle3f Vector2d Vector2d.Information Vector2dTuple2 Vector2dTuple3 Vector2dTuple4 Vector2f Vector2i Vector2l Vector3d Vector3dTuple2 Vector3dTuple3 Vector3f Vector3fTuple3 Vector3i 3D integer vector type. This is basically the same as Index3i but with .x.y.z member names. This makes code far more readable in many places. Unfortunately I can't see a way to do this w/o so much duplication...we could have .x/.y/.z accessors but that is much less efficient... Vector4d Vector4f VertexConstraint WriteMesh WriteOptions Interfaces BoundedImplicitFunction3d Bounded implicit function has a bounding box within which the \"interesting\" part of the function is contained (eg the surface) IArcLengthParam IArcLengthParam2d IBinaryVoxelGrid ICancelSource interface that provides a cancel function IDeformableMesh IDuplicatable<T> Deep-copy cloning interface. Duplicate() must return a full deep copy of object, including all internal data structures. IFixedGrid3 generic 3D grid interface for grids of fixed dimensions IGrid3 generic 3D grid interface (is this useful?) IGridElement3 this type can be used in a SparseGrid. IGridWorldIndexer2 interface that maps between double real-space coords and integer grid goords IGridWorldIndexer3 interface that maps between double real-space coords and integer grid goords IIndexMap IIntersectionTarget IMatrix IMesh IMeshBuilder IMeshComponentManager IMeshReader IMeshWriter ImplicitField2d Summary description for ImplicitField2D. ImplicitFunction3d Minimalist implicit function interface ImplicitOperator2d IMultiCurve2d IMultigridIndexer2 interface that maps between integer grid coords and 'blocks' of those coordinates, ie for multigrid-like structures IMultigridIndexer3 interface that maps between integer grid coords and 'blocks' of those coordinates, ie for multigrid-like structures IOrientedProjectionTarget IParametricCurve2d IParametricCurve3d IPointSet IProjectionTarget ISampledCurve3d ISpatial ITransform2 MeshFormatReader Query2 Enums AxisAlignedBox2d.ScaleMode AxisAlignedBox2f.ScaleMode CachingMeshSDF.InsideModes ContMinBox2.RCFlags DGraph.FailMode DMesh3Builder.AddTriangleFailBehaviors DMeshAABBTree3.BuildStrategy DMeshAABBTree3.ClusterPolicy EdgeRefineFlags FailMode GenericMaterial.KnownMaterialTypes Hexagon2d.TopModes ImplicitFieldSampler3d.CombineModes IntersectionResult IntersectionType IOCode MarchingCubes.RootfindingModes MeshBoundaryLoops.FailureBehaviors MeshBoundaryLoops.SpanBehaviors MeshComponents MeshEditor.DuplicateTriBehavior MeshHints MeshIsoCurves.RootfindingModes MeshIsoCurves.TriangleCase MeshIterativeSmooth.SmoothTypes MeshLocalParam.UVModes MeshNormals.NormalsTypes MeshResult MeshSignedDistanceGrid.ComputeModes MeshSignedDistanceGrid.InsideModes PackedSparseMatrix.StorageModes PointAABBTree3.BuildStrategy QueryNumberType Reducer.ProcessResult Reducer.TargetModes Reducer.TargetProjectionMode RegionRemesher.QuickRemeshFlags Remesher.ProcessResult Remesher.SmoothTypes Remesher.TargetProjectionMode Remesher.VertexControl RoundRectGenerator.Corner RoundRectGenerator.UVModes SetGroupBehavior.Modes Sphere3Generator_NormalizedCube.NormalizationTypes STLReader.Strategy SymmetricEigenSolver.SortType TrivialRectGenerator.UVModes Units.Angular Units.Linear ValidationStatus Delegates DMeshAABBTree3.ClusterFunctionType ParsingMessagesHandler"
  },
  "api/g3.IArcLengthParam.html": {
    "href": "api/g3.IArcLengthParam.html",
    "title": "Interface IArcLengthParam | ViRGIS VR GIS",
    "keywords": "Interface IArcLengthParam Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface IArcLengthParam Properties | Improve this Doc View Source ArcLength Declaration double ArcLength { get; } Property Value Type Description Double Methods | Improve this Doc View Source Sample(Double) Declaration CurveSample Sample(double fArcLen) Parameters Type Name Description Double fArcLen Returns Type Description CurveSample"
  },
  "api/g3.IArcLengthParam2d.html": {
    "href": "api/g3.IArcLengthParam2d.html",
    "title": "Interface IArcLengthParam2d | ViRGIS VR GIS",
    "keywords": "Interface IArcLengthParam2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface IArcLengthParam2d Properties | Improve this Doc View Source ArcLength Declaration double ArcLength { get; } Property Value Type Description Double Methods | Improve this Doc View Source Sample(Double) Declaration CurveSample2d Sample(double fArcLen) Parameters Type Name Description Double fArcLen Returns Type Description CurveSample2d"
  },
  "api/g3.IBinaryVoxelGrid.html": {
    "href": "api/g3.IBinaryVoxelGrid.html",
    "title": "Interface IBinaryVoxelGrid | ViRGIS VR GIS",
    "keywords": "Interface IBinaryVoxelGrid Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface IBinaryVoxelGrid Properties | Improve this Doc View Source GridBounds Declaration AxisAlignedBox3i GridBounds { get; } Property Value Type Description AxisAlignedBox3i Methods | Improve this Doc View Source Get(Vector3i) Declaration bool Get(Vector3i i) Parameters Type Name Description Vector3i i Returns Type Description Boolean | Improve this Doc View Source NonZeros() Declaration IEnumerable<Vector3i> NonZeros() Returns Type Description IEnumerable < Vector3i >"
  },
  "api/g3.ICancelSource.html": {
    "href": "api/g3.ICancelSource.html",
    "title": "Interface ICancelSource | ViRGIS VR GIS",
    "keywords": "Interface ICancelSource interface that provides a cancel function Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface ICancelSource Methods | Improve this Doc View Source Cancelled() Declaration bool Cancelled() Returns Type Description Boolean"
  },
  "api/g3.IDeformableMesh.html": {
    "href": "api/g3.IDeformableMesh.html",
    "title": "Interface IDeformableMesh | ViRGIS VR GIS",
    "keywords": "Interface IDeformableMesh Inherited Members IMesh.TriangleCount IMesh.MaxTriangleID IMesh.HasVertexUVs IMesh.GetVertexUV(Int32) IMesh.GetVertexAll(Int32) IMesh.HasTriangleGroups IMesh.GetTriangle(Int32) IMesh.GetTriangleGroup(Int32) IMesh.IsTriangle(Int32) IMesh.TriangleIndices() IPointSet.VertexCount IPointSet.MaxVertexID IPointSet.HasVertexNormals IPointSet.HasVertexColors IPointSet.GetVertex(Int32) IPointSet.GetVertexNormal(Int32) IPointSet.GetVertexColor(Int32) IPointSet.IsVertex(Int32) IPointSet.VertexIndices() IPointSet.Timestamp Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface IDeformableMesh : IMesh, IPointSet Methods | Improve this Doc View Source SetVertex(Int32, Vector3d) Declaration void SetVertex(int vID, Vector3d vNewPos) Parameters Type Name Description Int32 vID Vector3d vNewPos | Improve this Doc View Source SetVertexNormal(Int32, Vector3f) Declaration void SetVertexNormal(int vid, Vector3f vNewNormal) Parameters Type Name Description Int32 vid Vector3f vNewNormal"
  },
  "api/g3.IdentityIndexMap.html": {
    "href": "api/g3.IdentityIndexMap.html",
    "title": "Class IdentityIndexMap | ViRGIS VR GIS",
    "keywords": "Class IdentityIndexMap Inheritance Object IdentityIndexMap Implements IIndexMap Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class IdentityIndexMap : IIndexMap Properties | Improve this Doc View Source Item[Int32] Declaration public int this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description Int32 Implements IIndexMap"
  },
  "api/g3.IDuplicatable-1.html": {
    "href": "api/g3.IDuplicatable-1.html",
    "title": "Interface IDuplicatable<T> | ViRGIS VR GIS",
    "keywords": "Interface IDuplicatable<T> Deep-copy cloning interface. Duplicate() must return a full deep copy of object, including all internal data structures. Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface IDuplicatable<T> Type Parameters Name Description T Methods | Improve this Doc View Source Duplicate() Declaration T Duplicate() Returns Type Description T"
  },
  "api/g3.IFixedGrid3.html": {
    "href": "api/g3.IFixedGrid3.html",
    "title": "Interface IFixedGrid3 | ViRGIS VR GIS",
    "keywords": "Interface IFixedGrid3 generic 3D grid interface for grids of fixed dimensions Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface IFixedGrid3 Properties | Improve this Doc View Source Dimensions Declaration Vector3i Dimensions { get; } Property Value Type Description Vector3i"
  },
  "api/g3.IGrid3.html": {
    "href": "api/g3.IGrid3.html",
    "title": "Interface IGrid3 | ViRGIS VR GIS",
    "keywords": "Interface IGrid3 generic 3D grid interface (is this useful?) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface IGrid3 Properties | Improve this Doc View Source BoundsInclusive Declaration AxisAlignedBox3i BoundsInclusive { get; } Property Value Type Description AxisAlignedBox3i"
  },
  "api/g3.IGridElement3.html": {
    "href": "api/g3.IGridElement3.html",
    "title": "Interface IGridElement3 | ViRGIS VR GIS",
    "keywords": "Interface IGridElement3 this type can be used in a SparseGrid. Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface IGridElement3 Methods | Improve this Doc View Source CreateNewGridElement(Boolean) create new instance of this object w/ same size parameters, but don't copy data unless bCopy = true Declaration IGridElement3 CreateNewGridElement(bool bCopy) Parameters Type Name Description Boolean bCopy Returns Type Description IGridElement3"
  },
  "api/g3.IGridWorldIndexer2.html": {
    "href": "api/g3.IGridWorldIndexer2.html",
    "title": "Interface IGridWorldIndexer2 | ViRGIS VR GIS",
    "keywords": "Interface IGridWorldIndexer2 interface that maps between double real-space coords and integer grid goords Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface IGridWorldIndexer2 Methods | Improve this Doc View Source FromGrid(Vector2d) Declaration Vector2d FromGrid(Vector2d gridpointf) Parameters Type Name Description Vector2d gridpointf Returns Type Description Vector2d | Improve this Doc View Source FromGrid(Vector2i) Declaration Vector2d FromGrid(Vector2i gridpoint) Parameters Type Name Description Vector2i gridpoint Returns Type Description Vector2d | Improve this Doc View Source ToGrid(Vector2d) Declaration Vector2i ToGrid(Vector2d pointf) Parameters Type Name Description Vector2d pointf Returns Type Description Vector2i"
  },
  "api/g3.IGridWorldIndexer3.html": {
    "href": "api/g3.IGridWorldIndexer3.html",
    "title": "Interface IGridWorldIndexer3 | ViRGIS VR GIS",
    "keywords": "Interface IGridWorldIndexer3 interface that maps between double real-space coords and integer grid goords Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface IGridWorldIndexer3 Methods | Improve this Doc View Source FromGrid(Vector3d) Declaration Vector3d FromGrid(Vector3d gridpointf) Parameters Type Name Description Vector3d gridpointf Returns Type Description Vector3d | Improve this Doc View Source FromGrid(Vector3i) Declaration Vector3d FromGrid(Vector3i gridpoint) Parameters Type Name Description Vector3i gridpoint Returns Type Description Vector3d | Improve this Doc View Source ToGrid(Vector3d) Declaration Vector3i ToGrid(Vector3d pointf) Parameters Type Name Description Vector3d pointf Returns Type Description Vector3i | Improve this Doc View Source ToGridf(Vector3d) Declaration Vector3d ToGridf(Vector3d pointf) Parameters Type Name Description Vector3d pointf Returns Type Description Vector3d"
  },
  "api/g3.IIndexMap.html": {
    "href": "api/g3.IIndexMap.html",
    "title": "Interface IIndexMap | ViRGIS VR GIS",
    "keywords": "Interface IIndexMap Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface IIndexMap Properties | Improve this Doc View Source Item[Int32] Declaration int this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description Int32"
  },
  "api/g3.IIntersectionTarget.html": {
    "href": "api/g3.IIntersectionTarget.html",
    "title": "Interface IIntersectionTarget | ViRGIS VR GIS",
    "keywords": "Interface IIntersectionTarget Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface IIntersectionTarget Properties | Improve this Doc View Source HasNormal Declaration bool HasNormal { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source RayIntersect(Ray3d, out Vector3d, out Vector3d) Declaration bool RayIntersect(Ray3d ray, out Vector3d vHit, out Vector3d vHitNormal) Parameters Type Name Description Ray3d ray Vector3d vHit Vector3d vHitNormal Returns Type Description Boolean"
  },
  "api/g3.IMatrix.html": {
    "href": "api/g3.IMatrix.html",
    "title": "Interface IMatrix | ViRGIS VR GIS",
    "keywords": "Interface IMatrix Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface IMatrix Properties | Improve this Doc View Source Columns Declaration int Columns { get; } Property Value Type Description Int32 | Improve this Doc View Source Item[Int32, Int32] Declaration double this[int r, int c] { get; set; } Parameters Type Name Description Int32 r Int32 c Property Value Type Description Double | Improve this Doc View Source Rows Declaration int Rows { get; } Property Value Type Description Int32 | Improve this Doc View Source Size Declaration Index2i Size { get; } Property Value Type Description Index2i Methods | Improve this Doc View Source Set(Int32, Int32, Double) Declaration void Set(int r, int c, double value) Parameters Type Name Description Int32 r Int32 c Double value"
  },
  "api/g3.IMesh.html": {
    "href": "api/g3.IMesh.html",
    "title": "Interface IMesh | ViRGIS VR GIS",
    "keywords": "Interface IMesh Inherited Members IPointSet.VertexCount IPointSet.MaxVertexID IPointSet.HasVertexNormals IPointSet.HasVertexColors IPointSet.GetVertex(Int32) IPointSet.GetVertexNormal(Int32) IPointSet.GetVertexColor(Int32) IPointSet.IsVertex(Int32) IPointSet.VertexIndices() IPointSet.Timestamp Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface IMesh : IPointSet Properties | Improve this Doc View Source HasTriangleGroups Declaration bool HasTriangleGroups { get; } Property Value Type Description Boolean | Improve this Doc View Source HasVertexUVs Declaration bool HasVertexUVs { get; } Property Value Type Description Boolean | Improve this Doc View Source MaxTriangleID Declaration int MaxTriangleID { get; } Property Value Type Description Int32 | Improve this Doc View Source TriangleCount Declaration int TriangleCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source GetTriangle(Int32) Declaration Index3i GetTriangle(int i) Parameters Type Name Description Int32 i Returns Type Description Index3i | Improve this Doc View Source GetTriangleGroup(Int32) Declaration int GetTriangleGroup(int i) Parameters Type Name Description Int32 i Returns Type Description Int32 | Improve this Doc View Source GetVertexAll(Int32) Declaration NewVertexInfo GetVertexAll(int i) Parameters Type Name Description Int32 i Returns Type Description NewVertexInfo | Improve this Doc View Source GetVertexUV(Int32) Declaration Vector2f GetVertexUV(int i) Parameters Type Name Description Int32 i Returns Type Description Vector2f | Improve this Doc View Source IsTriangle(Int32) Declaration bool IsTriangle(int tID) Parameters Type Name Description Int32 tID Returns Type Description Boolean | Improve this Doc View Source TriangleIndices() Declaration IEnumerable<int> TriangleIndices() Returns Type Description IEnumerable < Int32 >"
  },
  "api/g3.IMeshBuilder.html": {
    "href": "api/g3.IMeshBuilder.html",
    "title": "Interface IMeshBuilder | ViRGIS VR GIS",
    "keywords": "Interface IMeshBuilder Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface IMeshBuilder Properties | Improve this Doc View Source SupportsMetaData Declaration bool SupportsMetaData { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source AppendMetaData(String, Object) Declaration void AppendMetaData(string identifier, object data) Parameters Type Name Description String identifier Object data | Improve this Doc View Source AppendNewMesh(DMesh3) Declaration int AppendNewMesh(DMesh3 existingMesh) Parameters Type Name Description DMesh3 existingMesh Returns Type Description Int32 | Improve this Doc View Source AppendNewMesh(Boolean, Boolean, Boolean, Boolean) Declaration int AppendNewMesh(bool bHaveVtxNormals, bool bHaveVtxColors, bool bHaveVtxUVs, bool bHaveFaceGroups) Parameters Type Name Description Boolean bHaveVtxNormals Boolean bHaveVtxColors Boolean bHaveVtxUVs Boolean bHaveFaceGroups Returns Type Description Int32 | Improve this Doc View Source AppendTriangle(Int32, Int32, Int32) Declaration int AppendTriangle(int i, int j, int k) Parameters Type Name Description Int32 i Int32 j Int32 k Returns Type Description Int32 | Improve this Doc View Source AppendTriangle(Int32, Int32, Int32, Int32) Declaration int AppendTriangle(int i, int j, int k, int g) Parameters Type Name Description Int32 i Int32 j Int32 k Int32 g Returns Type Description Int32 | Improve this Doc View Source AppendVertex(NewVertexInfo) Declaration int AppendVertex(NewVertexInfo info) Parameters Type Name Description NewVertexInfo info Returns Type Description Int32 | Improve this Doc View Source AppendVertex(Double, Double, Double) Declaration int AppendVertex(double x, double y, double z) Parameters Type Name Description Double x Double y Double z Returns Type Description Int32 | Improve this Doc View Source AssignMaterial(Int32, Int32) Declaration void AssignMaterial(int materialID, int meshID) Parameters Type Name Description Int32 materialID Int32 meshID | Improve this Doc View Source BuildMaterial(GenericMaterial) Declaration int BuildMaterial(GenericMaterial m) Parameters Type Name Description GenericMaterial m Returns Type Description Int32 | Improve this Doc View Source SetActiveMesh(Int32) Declaration void SetActiveMesh(int id) Parameters Type Name Description Int32 id"
  },
  "api/g3.IMeshComponentManager.html": {
    "href": "api/g3.IMeshComponentManager.html",
    "title": "Interface IMeshComponentManager | ViRGIS VR GIS",
    "keywords": "Interface IMeshComponentManager Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface IMeshComponentManager Methods | Improve this Doc View Source AddComponent(MeshDecomposition.Component) Declaration void AddComponent(MeshDecomposition.Component C) Parameters Type Name Description MeshDecomposition.Component C | Improve this Doc View Source ClearAllComponents() Declaration void ClearAllComponents()"
  },
  "api/g3.IMeshReader.html": {
    "href": "api/g3.IMeshReader.html",
    "title": "Interface IMeshReader | ViRGIS VR GIS",
    "keywords": "Interface IMeshReader Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface IMeshReader Methods | Improve this Doc View Source Read(BinaryReader, ReadOptions, IMeshBuilder) Declaration IOReadResult Read(BinaryReader reader, ReadOptions options, IMeshBuilder builder) Parameters Type Name Description BinaryReader reader ReadOptions options IMeshBuilder builder Returns Type Description IOReadResult | Improve this Doc View Source Read(TextReader, ReadOptions, IMeshBuilder) Declaration IOReadResult Read(TextReader reader, ReadOptions options, IMeshBuilder builder) Parameters Type Name Description TextReader reader ReadOptions options IMeshBuilder builder Returns Type Description IOReadResult"
  },
  "api/g3.IMeshWriter.html": {
    "href": "api/g3.IMeshWriter.html",
    "title": "Interface IMeshWriter | ViRGIS VR GIS",
    "keywords": "Interface IMeshWriter Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface IMeshWriter Methods | Improve this Doc View Source Write(BinaryWriter, List<WriteMesh>, WriteOptions) Declaration IOWriteResult Write(BinaryWriter writer, List<WriteMesh> vMeshes, WriteOptions options) Parameters Type Name Description BinaryWriter writer List < WriteMesh > vMeshes WriteOptions options Returns Type Description IOWriteResult | Improve this Doc View Source Write(TextWriter, List<WriteMesh>, WriteOptions) Declaration IOWriteResult Write(TextWriter writer, List<WriteMesh> vMeshes, WriteOptions options) Parameters Type Name Description TextWriter writer List < WriteMesh > vMeshes WriteOptions options Returns Type Description IOWriteResult"
  },
  "api/g3.ImplicitAxisAlignedBox3d.html": {
    "href": "api/g3.ImplicitAxisAlignedBox3d.html",
    "title": "Class ImplicitAxisAlignedBox3d | ViRGIS VR GIS",
    "keywords": "Class ImplicitAxisAlignedBox3d Implicit axis-aligned box Inheritance Object ImplicitAxisAlignedBox3d Implements BoundedImplicitFunction3d ImplicitFunction3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ImplicitAxisAlignedBox3d : BoundedImplicitFunction3d, ImplicitFunction3d Fields | Improve this Doc View Source AABox Declaration public AxisAlignedBox3d AABox Field Value Type Description AxisAlignedBox3d Methods | Improve this Doc View Source Bounds() Declaration public AxisAlignedBox3d Bounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Value(ref Vector3d) Declaration public double Value(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Double Implements BoundedImplicitFunction3d ImplicitFunction3d"
  },
  "api/g3.ImplicitBlend2d.html": {
    "href": "api/g3.ImplicitBlend2d.html",
    "title": "Class ImplicitBlend2d | ViRGIS VR GIS",
    "keywords": "Class ImplicitBlend2d Inheritance Object ImplicitNAryOp2d ImplicitBlend2d Implements ImplicitOperator2d ImplicitField2d Inherited Members ImplicitNAryOp2d.m_vChildren ImplicitNAryOp2d.AddChild(ImplicitField2d) ImplicitNAryOp2d.Bounds Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ImplicitBlend2d : ImplicitNAryOp2d, ImplicitOperator2d, ImplicitField2d Constructors | Improve this Doc View Source ImplicitBlend2d() Declaration public ImplicitBlend2d() Methods | Improve this Doc View Source Gradient(Single, Single, ref Single, ref Single) Declaration public override void Gradient(float fX, float fY, ref float fGX, ref float fGY) Parameters Type Name Description Single fX Single fY Single fGX Single fGY Overrides ImplicitNAryOp2d.Gradient(Single, Single, ref Single, ref Single) | Improve this Doc View Source Value(Single, Single) Declaration public override float Value(float fX, float fY) Parameters Type Name Description Single fX Single fY Returns Type Description Single Overrides ImplicitNAryOp2d.Value(Single, Single) Implements ImplicitOperator2d ImplicitField2d"
  },
  "api/g3.ImplicitBlend3d.html": {
    "href": "api/g3.ImplicitBlend3d.html",
    "title": "Class ImplicitBlend3d | ViRGIS VR GIS",
    "keywords": "Class ImplicitBlend3d Blend of two implicit surfaces. Assumes surface is at zero iscontour. Uses Pasko blend from http://www.hyperfun.org/F-rep.pdf Inheritance Object ImplicitBlend3d Implements BoundedImplicitFunction3d ImplicitFunction3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ImplicitBlend3d : BoundedImplicitFunction3d, ImplicitFunction3d Fields | Improve this Doc View Source A Declaration public BoundedImplicitFunction3d A Field Value Type Description BoundedImplicitFunction3d | Improve this Doc View Source B Declaration public BoundedImplicitFunction3d B Field Value Type Description BoundedImplicitFunction3d | Improve this Doc View Source ExpandBounds Declaration public double ExpandBounds Field Value Type Description Double Properties | Improve this Doc View Source Blend Blending power Declaration public double Blend { get; set; } Property Value Type Description Double | Improve this Doc View Source WeightA Weight on implicit A Declaration public double WeightA { get; set; } Property Value Type Description Double | Improve this Doc View Source WeightB Weight on implicit B Declaration public double WeightB { get; set; } Property Value Type Description Double Methods | Improve this Doc View Source Bounds() Declaration public AxisAlignedBox3d Bounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Value(ref Vector3d) Declaration public double Value(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Double Implements BoundedImplicitFunction3d ImplicitFunction3d"
  },
  "api/g3.ImplicitBox3d.html": {
    "href": "api/g3.ImplicitBox3d.html",
    "title": "Class ImplicitBox3d | ViRGIS VR GIS",
    "keywords": "Class ImplicitBox3d Implicit oriented box Inheritance Object ImplicitBox3d Implements BoundedImplicitFunction3d ImplicitFunction3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ImplicitBox3d : BoundedImplicitFunction3d, ImplicitFunction3d Properties | Improve this Doc View Source Box Declaration public Box3d Box { get; set; } Property Value Type Description Box3d Methods | Improve this Doc View Source Bounds() Declaration public AxisAlignedBox3d Bounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Value(ref Vector3d) Declaration public double Value(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Double Implements BoundedImplicitFunction3d ImplicitFunction3d"
  },
  "api/g3.ImplicitDifference2d.html": {
    "href": "api/g3.ImplicitDifference2d.html",
    "title": "Class ImplicitDifference2d | ViRGIS VR GIS",
    "keywords": "Class ImplicitDifference2d Inheritance Object ImplicitNAryOp2d ImplicitDifference2d Implements ImplicitOperator2d ImplicitField2d Inherited Members ImplicitNAryOp2d.m_vChildren ImplicitNAryOp2d.AddChild(ImplicitField2d) ImplicitNAryOp2d.Bounds Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ImplicitDifference2d : ImplicitNAryOp2d, ImplicitOperator2d, ImplicitField2d Constructors | Improve this Doc View Source ImplicitDifference2d() Declaration public ImplicitDifference2d() Methods | Improve this Doc View Source Gradient(Single, Single, ref Single, ref Single) Declaration public override void Gradient(float fX, float fY, ref float fGX, ref float fGY) Parameters Type Name Description Single fX Single fY Single fGX Single fGY Overrides ImplicitNAryOp2d.Gradient(Single, Single, ref Single, ref Single) | Improve this Doc View Source Value(Single, Single) Declaration public override float Value(float fX, float fY) Parameters Type Name Description Single fX Single fY Returns Type Description Single Overrides ImplicitNAryOp2d.Value(Single, Single) Implements ImplicitOperator2d ImplicitField2d"
  },
  "api/g3.ImplicitDifference3d.html": {
    "href": "api/g3.ImplicitDifference3d.html",
    "title": "Class ImplicitDifference3d | ViRGIS VR GIS",
    "keywords": "Class ImplicitDifference3d Boolean Difference/Subtraction of two implicit functions A-B = A AND (NOT B) Assumption is that both have surface at zero isocontour and negative is inside. Inheritance Object ImplicitDifference3d Implements BoundedImplicitFunction3d ImplicitFunction3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ImplicitDifference3d : BoundedImplicitFunction3d, ImplicitFunction3d Fields | Improve this Doc View Source A Declaration public BoundedImplicitFunction3d A Field Value Type Description BoundedImplicitFunction3d | Improve this Doc View Source B Declaration public BoundedImplicitFunction3d B Field Value Type Description BoundedImplicitFunction3d Methods | Improve this Doc View Source Bounds() Declaration public AxisAlignedBox3d Bounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Value(ref Vector3d) Declaration public double Value(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Double Implements BoundedImplicitFunction3d ImplicitFunction3d"
  },
  "api/g3.ImplicitField2d.html": {
    "href": "api/g3.ImplicitField2d.html",
    "title": "Interface ImplicitField2d | ViRGIS VR GIS",
    "keywords": "Interface ImplicitField2d Summary description for ImplicitField2D. Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface ImplicitField2d Properties | Improve this Doc View Source Bounds Declaration AxisAlignedBox2f Bounds { get; } Property Value Type Description AxisAlignedBox2f Methods | Improve this Doc View Source Gradient(Single, Single, ref Single, ref Single) Declaration void Gradient(float fX, float fY, ref float fGX, ref float fGY) Parameters Type Name Description Single fX Single fY Single fGX Single fGY | Improve this Doc View Source Value(Single, Single) Declaration float Value(float fX, float fY) Parameters Type Name Description Single fX Single fY Returns Type Description Single"
  },
  "api/g3.ImplicitFieldSampler3d.CombineModes.html": {
    "href": "api/g3.ImplicitFieldSampler3d.CombineModes.html",
    "title": "Enum ImplicitFieldSampler3d.CombineModes | ViRGIS VR GIS",
    "keywords": "Enum ImplicitFieldSampler3d.CombineModes Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum CombineModes Fields Name Description DistanceMinUnion"
  },
  "api/g3.ImplicitFieldSampler3d.html": {
    "href": "api/g3.ImplicitFieldSampler3d.html",
    "title": "Class ImplicitFieldSampler3d | ViRGIS VR GIS",
    "keywords": "Class ImplicitFieldSampler3d Sample implicit fields into a dense grid Inheritance Object ImplicitFieldSampler3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ImplicitFieldSampler3d Constructors | Improve this Doc View Source ImplicitFieldSampler3d(AxisAlignedBox3d, Double) Declaration public ImplicitFieldSampler3d(AxisAlignedBox3d fieldBounds, double cellSize) Parameters Type Name Description AxisAlignedBox3d fieldBounds Double cellSize Fields | Improve this Doc View Source BackgroundValue Declaration public float BackgroundValue Field Value Type Description Single | Improve this Doc View Source CellSize Declaration public double CellSize Field Value Type Description Double | Improve this Doc View Source CombineMode Declaration public ImplicitFieldSampler3d.CombineModes CombineMode Field Value Type Description ImplicitFieldSampler3d.CombineModes | Improve this Doc View Source Grid Declaration public DenseGrid3f Grid Field Value Type Description DenseGrid3f | Improve this Doc View Source GridBounds Declaration public AxisAlignedBox3i GridBounds Field Value Type Description AxisAlignedBox3i | Improve this Doc View Source GridOrigin Declaration public Vector3d GridOrigin Field Value Type Description Vector3d | Improve this Doc View Source Indexer Declaration public ShiftGridIndexer3 Indexer Field Value Type Description ShiftGridIndexer3 Methods | Improve this Doc View Source Clear(Single) Declaration public void Clear(float f) Parameters Type Name Description Single f | Improve this Doc View Source Sample(BoundedImplicitFunction3d, Double) Declaration public void Sample(BoundedImplicitFunction3d f, double expandRadius = 0) Parameters Type Name Description BoundedImplicitFunction3d f Double expandRadius | Improve this Doc View Source ToImplicit() Declaration public DenseGridTrilinearImplicit ToImplicit() Returns Type Description DenseGridTrilinearImplicit"
  },
  "api/g3.ImplicitFunction3d.html": {
    "href": "api/g3.ImplicitFunction3d.html",
    "title": "Interface ImplicitFunction3d | ViRGIS VR GIS",
    "keywords": "Interface ImplicitFunction3d Minimalist implicit function interface Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface ImplicitFunction3d Methods | Improve this Doc View Source Value(ref Vector3d) Declaration double Value(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Double"
  },
  "api/g3.ImplicitHalfSpace3d.html": {
    "href": "api/g3.ImplicitHalfSpace3d.html",
    "title": "Class ImplicitHalfSpace3d | ViRGIS VR GIS",
    "keywords": "Class ImplicitHalfSpace3d Implicit half-space. \"Inside\" is opposite of Normal direction. Inheritance Object ImplicitHalfSpace3d Implements BoundedImplicitFunction3d ImplicitFunction3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ImplicitHalfSpace3d : BoundedImplicitFunction3d, ImplicitFunction3d Fields | Improve this Doc View Source Normal Declaration public Vector3d Normal Field Value Type Description Vector3d | Improve this Doc View Source Origin Declaration public Vector3d Origin Field Value Type Description Vector3d Methods | Improve this Doc View Source Bounds() Declaration public AxisAlignedBox3d Bounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Value(ref Vector3d) Declaration public double Value(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Double Implements BoundedImplicitFunction3d ImplicitFunction3d"
  },
  "api/g3.ImplicitIntersection2d.html": {
    "href": "api/g3.ImplicitIntersection2d.html",
    "title": "Class ImplicitIntersection2d | ViRGIS VR GIS",
    "keywords": "Class ImplicitIntersection2d Inheritance Object ImplicitNAryOp2d ImplicitIntersection2d Implements ImplicitOperator2d ImplicitField2d Inherited Members ImplicitNAryOp2d.m_vChildren ImplicitNAryOp2d.AddChild(ImplicitField2d) ImplicitNAryOp2d.Bounds Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ImplicitIntersection2d : ImplicitNAryOp2d, ImplicitOperator2d, ImplicitField2d Constructors | Improve this Doc View Source ImplicitIntersection2d() Declaration public ImplicitIntersection2d() Methods | Improve this Doc View Source Gradient(Single, Single, ref Single, ref Single) Declaration public override void Gradient(float fX, float fY, ref float fGX, ref float fGY) Parameters Type Name Description Single fX Single fY Single fGX Single fGY Overrides ImplicitNAryOp2d.Gradient(Single, Single, ref Single, ref Single) | Improve this Doc View Source Value(Single, Single) Declaration public override float Value(float fX, float fY) Parameters Type Name Description Single fX Single fY Returns Type Description Single Overrides ImplicitNAryOp2d.Value(Single, Single) Implements ImplicitOperator2d ImplicitField2d"
  },
  "api/g3.ImplicitIntersection3d.html": {
    "href": "api/g3.ImplicitIntersection3d.html",
    "title": "Class ImplicitIntersection3d | ViRGIS VR GIS",
    "keywords": "Class ImplicitIntersection3d Boolean Intersection of two implicit functions, A AND B Assumption is that both have surface at zero isocontour and negative is inside. Inheritance Object ImplicitIntersection3d Implements BoundedImplicitFunction3d ImplicitFunction3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ImplicitIntersection3d : BoundedImplicitFunction3d, ImplicitFunction3d Fields | Improve this Doc View Source A Declaration public BoundedImplicitFunction3d A Field Value Type Description BoundedImplicitFunction3d | Improve this Doc View Source B Declaration public BoundedImplicitFunction3d B Field Value Type Description BoundedImplicitFunction3d Methods | Improve this Doc View Source Bounds() Declaration public AxisAlignedBox3d Bounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Value(ref Vector3d) Declaration public double Value(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Double Implements BoundedImplicitFunction3d ImplicitFunction3d"
  },
  "api/g3.ImplicitLine3d.html": {
    "href": "api/g3.ImplicitLine3d.html",
    "title": "Class ImplicitLine3d | ViRGIS VR GIS",
    "keywords": "Class ImplicitLine3d Implicit tube around line segment Inheritance Object ImplicitLine3d Implements BoundedImplicitFunction3d ImplicitFunction3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ImplicitLine3d : BoundedImplicitFunction3d, ImplicitFunction3d Fields | Improve this Doc View Source Radius Declaration public double Radius Field Value Type Description Double | Improve this Doc View Source Segment Declaration public Segment3d Segment Field Value Type Description Segment3d Methods | Improve this Doc View Source Bounds() Declaration public AxisAlignedBox3d Bounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Value(ref Vector3d) Declaration public double Value(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Double Implements BoundedImplicitFunction3d ImplicitFunction3d"
  },
  "api/g3.ImplicitNaryDifference3d.html": {
    "href": "api/g3.ImplicitNaryDifference3d.html",
    "title": "Class ImplicitNaryDifference3d | ViRGIS VR GIS",
    "keywords": "Class ImplicitNaryDifference3d Boolean Difference of N implicit functions, A - Union(B1..BN) Assumption is that both have surface at zero isocontour and negative is inside. Inheritance Object ImplicitNaryDifference3d Implements BoundedImplicitFunction3d ImplicitFunction3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ImplicitNaryDifference3d : BoundedImplicitFunction3d, ImplicitFunction3d Fields | Improve this Doc View Source A Declaration public BoundedImplicitFunction3d A Field Value Type Description BoundedImplicitFunction3d | Improve this Doc View Source BSet Declaration public List<BoundedImplicitFunction3d> BSet Field Value Type Description List < BoundedImplicitFunction3d > Methods | Improve this Doc View Source Bounds() Declaration public AxisAlignedBox3d Bounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Value(ref Vector3d) Declaration public double Value(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Double Implements BoundedImplicitFunction3d ImplicitFunction3d"
  },
  "api/g3.ImplicitNaryIntersection3d.html": {
    "href": "api/g3.ImplicitNaryIntersection3d.html",
    "title": "Class ImplicitNaryIntersection3d | ViRGIS VR GIS",
    "keywords": "Class ImplicitNaryIntersection3d Boolean Intersection of N implicit functions, A AND B. Assumption is that both have surface at zero isocontour and negative is inside. Inheritance Object ImplicitNaryIntersection3d Implements BoundedImplicitFunction3d ImplicitFunction3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ImplicitNaryIntersection3d : BoundedImplicitFunction3d, ImplicitFunction3d Fields | Improve this Doc View Source Children Declaration public List<BoundedImplicitFunction3d> Children Field Value Type Description List < BoundedImplicitFunction3d > Methods | Improve this Doc View Source Bounds() Declaration public AxisAlignedBox3d Bounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Value(ref Vector3d) Declaration public double Value(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Double Implements BoundedImplicitFunction3d ImplicitFunction3d"
  },
  "api/g3.ImplicitNAryOp2d.html": {
    "href": "api/g3.ImplicitNAryOp2d.html",
    "title": "Class ImplicitNAryOp2d | ViRGIS VR GIS",
    "keywords": "Class ImplicitNAryOp2d Inheritance Object ImplicitNAryOp2d ImplicitBlend2d ImplicitDifference2d ImplicitIntersection2d ImplicitUnion2d Implements ImplicitOperator2d ImplicitField2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public abstract class ImplicitNAryOp2d : ImplicitOperator2d, ImplicitField2d Constructors | Improve this Doc View Source ImplicitNAryOp2d() Declaration public ImplicitNAryOp2d() Fields | Improve this Doc View Source m_vChildren Declaration protected List<ImplicitField2d> m_vChildren Field Value Type Description List < ImplicitField2d > Properties | Improve this Doc View Source Bounds Declaration public virtual AxisAlignedBox2f Bounds { get; } Property Value Type Description AxisAlignedBox2f Methods | Improve this Doc View Source AddChild(ImplicitField2d) Declaration public void AddChild(ImplicitField2d pField) Parameters Type Name Description ImplicitField2d pField | Improve this Doc View Source Gradient(Single, Single, ref Single, ref Single) Declaration public virtual void Gradient(float fX, float fY, ref float fGX, ref float fGY) Parameters Type Name Description Single fX Single fY Single fGX Single fGY | Improve this Doc View Source Value(Single, Single) Declaration public virtual float Value(float fX, float fY) Parameters Type Name Description Single fX Single fY Returns Type Description Single Implements ImplicitOperator2d ImplicitField2d"
  },
  "api/g3.ImplicitNaryUnion3d.html": {
    "href": "api/g3.ImplicitNaryUnion3d.html",
    "title": "Class ImplicitNaryUnion3d | ViRGIS VR GIS",
    "keywords": "Class ImplicitNaryUnion3d Boolean Union of N implicit functions, A OR B. Assumption is that both have surface at zero isocontour and negative is inside. Inheritance Object ImplicitNaryUnion3d Implements BoundedImplicitFunction3d ImplicitFunction3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ImplicitNaryUnion3d : BoundedImplicitFunction3d, ImplicitFunction3d Fields | Improve this Doc View Source Children Declaration public List<BoundedImplicitFunction3d> Children Field Value Type Description List < BoundedImplicitFunction3d > Methods | Improve this Doc View Source Bounds() Declaration public AxisAlignedBox3d Bounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Value(ref Vector3d) Declaration public double Value(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Double Implements BoundedImplicitFunction3d ImplicitFunction3d"
  },
  "api/g3.ImplicitOffset3d.html": {
    "href": "api/g3.ImplicitOffset3d.html",
    "title": "Class ImplicitOffset3d | ViRGIS VR GIS",
    "keywords": "Class ImplicitOffset3d Offset the zero-isocontour of an implicit function. Assumes that negative is inside, if not, reverse offset. Inheritance Object ImplicitOffset3d Implements BoundedImplicitFunction3d ImplicitFunction3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ImplicitOffset3d : BoundedImplicitFunction3d, ImplicitFunction3d Fields | Improve this Doc View Source A Declaration public BoundedImplicitFunction3d A Field Value Type Description BoundedImplicitFunction3d | Improve this Doc View Source Offset Declaration public double Offset Field Value Type Description Double Methods | Improve this Doc View Source Bounds() Declaration public AxisAlignedBox3d Bounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Value(ref Vector3d) Declaration public double Value(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Double Implements BoundedImplicitFunction3d ImplicitFunction3d"
  },
  "api/g3.ImplicitOperator2d.html": {
    "href": "api/g3.ImplicitOperator2d.html",
    "title": "Interface ImplicitOperator2d | ViRGIS VR GIS",
    "keywords": "Interface ImplicitOperator2d Inherited Members ImplicitField2d.Value(Single, Single) ImplicitField2d.Gradient(Single, Single, Single, Single) ImplicitField2d.Bounds Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface ImplicitOperator2d : ImplicitField2d Methods | Improve this Doc View Source AddChild(ImplicitField2d) Declaration void AddChild(ImplicitField2d field) Parameters Type Name Description ImplicitField2d field"
  },
  "api/g3.ImplicitPoint2d.html": {
    "href": "api/g3.ImplicitPoint2d.html",
    "title": "Class ImplicitPoint2d | ViRGIS VR GIS",
    "keywords": "Class ImplicitPoint2d Inheritance Object ImplicitPoint2d Implements ImplicitField2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ImplicitPoint2d : ImplicitField2d Constructors | Improve this Doc View Source ImplicitPoint2d(Single, Single) Declaration public ImplicitPoint2d(float x, float y) Parameters Type Name Description Single x Single y | Improve this Doc View Source ImplicitPoint2d(Single, Single, Single) Declaration public ImplicitPoint2d(float x, float y, float radius) Parameters Type Name Description Single x Single y Single radius Properties | Improve this Doc View Source Bounds Declaration public AxisAlignedBox2f Bounds { get; } Property Value Type Description AxisAlignedBox2f | Improve this Doc View Source Center Declaration public Vector2f Center { get; set; } Property Value Type Description Vector2f | Improve this Doc View Source HighX Declaration public float HighX { get; } Property Value Type Description Single | Improve this Doc View Source HighY Declaration public float HighY { get; } Property Value Type Description Single | Improve this Doc View Source LowX Declaration public float LowX { get; } Property Value Type Description Single | Improve this Doc View Source LowY Declaration public float LowY { get; } Property Value Type Description Single | Improve this Doc View Source radius Declaration public float radius { get; set; } Property Value Type Description Single | Improve this Doc View Source x Declaration public float x { get; set; } Property Value Type Description Single | Improve this Doc View Source y Declaration public float y { get; set; } Property Value Type Description Single Methods | Improve this Doc View Source Gradient(Single, Single, ref Single, ref Single) Declaration public void Gradient(float fX, float fY, ref float fGX, ref float fGY) Parameters Type Name Description Single fX Single fY Single fGX Single fGY | Improve this Doc View Source InBounds(Single, Single) Declaration public bool InBounds(float x, float y) Parameters Type Name Description Single x Single y Returns Type Description Boolean | Improve this Doc View Source Value(Single, Single) Declaration public float Value(float fX, float fY) Parameters Type Name Description Single fX Single fY Returns Type Description Single Implements ImplicitField2d"
  },
  "api/g3.ImplicitShell3d.html": {
    "href": "api/g3.ImplicitShell3d.html",
    "title": "Class ImplicitShell3d | ViRGIS VR GIS",
    "keywords": "Class ImplicitShell3d remaps values so that values within given interval are negative, and values outside this interval are positive. So, for a distance field, this converts single isocontour into two nested isocontours with zeros at interval a and b, with 'inside' in interval Inheritance Object ImplicitShell3d Implements BoundedImplicitFunction3d ImplicitFunction3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ImplicitShell3d : BoundedImplicitFunction3d, ImplicitFunction3d Fields | Improve this Doc View Source A Declaration public BoundedImplicitFunction3d A Field Value Type Description BoundedImplicitFunction3d | Improve this Doc View Source Inside Declaration public Interval1d Inside Field Value Type Description Interval1d Methods | Improve this Doc View Source Bounds() Declaration public AxisAlignedBox3d Bounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Value(ref Vector3d) Declaration public double Value(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Double Implements BoundedImplicitFunction3d ImplicitFunction3d"
  },
  "api/g3.ImplicitSmoothDifference3d.html": {
    "href": "api/g3.ImplicitSmoothDifference3d.html",
    "title": "Class ImplicitSmoothDifference3d | ViRGIS VR GIS",
    "keywords": "Class ImplicitSmoothDifference3d Continuous R-Function Boolean Difference of two implicit functions, A AND B Assumption is that both have surface at zero isocontour and negative is inside. Inheritance Object ImplicitSmoothDifference3d Implements BoundedImplicitFunction3d ImplicitFunction3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ImplicitSmoothDifference3d : BoundedImplicitFunction3d, ImplicitFunction3d Fields | Improve this Doc View Source A Declaration public BoundedImplicitFunction3d A Field Value Type Description BoundedImplicitFunction3d | Improve this Doc View Source B Declaration public BoundedImplicitFunction3d B Field Value Type Description BoundedImplicitFunction3d Methods | Improve this Doc View Source Bounds() Declaration public AxisAlignedBox3d Bounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Value(ref Vector3d) Declaration public double Value(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Double Implements BoundedImplicitFunction3d ImplicitFunction3d"
  },
  "api/g3.ImplicitSmoothIntersection3d.html": {
    "href": "api/g3.ImplicitSmoothIntersection3d.html",
    "title": "Class ImplicitSmoothIntersection3d | ViRGIS VR GIS",
    "keywords": "Class ImplicitSmoothIntersection3d Continuous R-Function Boolean Intersection of two implicit functions, A-B = A AND (NOT B) Assumption is that both have surface at zero isocontour and negative is inside. Inheritance Object ImplicitSmoothIntersection3d Implements BoundedImplicitFunction3d ImplicitFunction3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ImplicitSmoothIntersection3d : BoundedImplicitFunction3d, ImplicitFunction3d Fields | Improve this Doc View Source A Declaration public BoundedImplicitFunction3d A Field Value Type Description BoundedImplicitFunction3d | Improve this Doc View Source B Declaration public BoundedImplicitFunction3d B Field Value Type Description BoundedImplicitFunction3d Methods | Improve this Doc View Source Bounds() Declaration public AxisAlignedBox3d Bounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Value(ref Vector3d) Declaration public double Value(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Double Implements BoundedImplicitFunction3d ImplicitFunction3d"
  },
  "api/g3.ImplicitSmoothUnion3d.html": {
    "href": "api/g3.ImplicitSmoothUnion3d.html",
    "title": "Class ImplicitSmoothUnion3d | ViRGIS VR GIS",
    "keywords": "Class ImplicitSmoothUnion3d Continuous R-Function Boolean Union of two implicit functions, A OR B. Assumption is that both have surface at zero isocontour and negative is inside. Inheritance Object ImplicitSmoothUnion3d Implements BoundedImplicitFunction3d ImplicitFunction3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ImplicitSmoothUnion3d : BoundedImplicitFunction3d, ImplicitFunction3d Fields | Improve this Doc View Source A Declaration public BoundedImplicitFunction3d A Field Value Type Description BoundedImplicitFunction3d | Improve this Doc View Source B Declaration public BoundedImplicitFunction3d B Field Value Type Description BoundedImplicitFunction3d Methods | Improve this Doc View Source Bounds() Declaration public AxisAlignedBox3d Bounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Value(ref Vector3d) Declaration public double Value(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Double Implements BoundedImplicitFunction3d ImplicitFunction3d"
  },
  "api/g3.ImplicitSphere3d.html": {
    "href": "api/g3.ImplicitSphere3d.html",
    "title": "Class ImplicitSphere3d | ViRGIS VR GIS",
    "keywords": "Class ImplicitSphere3d Implicit sphere, where zero isocontour is at Radius Inheritance Object ImplicitSphere3d Implements BoundedImplicitFunction3d ImplicitFunction3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ImplicitSphere3d : BoundedImplicitFunction3d, ImplicitFunction3d Fields | Improve this Doc View Source Origin Declaration public Vector3d Origin Field Value Type Description Vector3d | Improve this Doc View Source Radius Declaration public double Radius Field Value Type Description Double Methods | Improve this Doc View Source Bounds() Declaration public AxisAlignedBox3d Bounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Value(ref Vector3d) Declaration public double Value(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Double Implements BoundedImplicitFunction3d ImplicitFunction3d"
  },
  "api/g3.ImplicitUnion2d.html": {
    "href": "api/g3.ImplicitUnion2d.html",
    "title": "Class ImplicitUnion2d | ViRGIS VR GIS",
    "keywords": "Class ImplicitUnion2d Inheritance Object ImplicitNAryOp2d ImplicitUnion2d Implements ImplicitOperator2d ImplicitField2d Inherited Members ImplicitNAryOp2d.m_vChildren ImplicitNAryOp2d.AddChild(ImplicitField2d) ImplicitNAryOp2d.Bounds Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ImplicitUnion2d : ImplicitNAryOp2d, ImplicitOperator2d, ImplicitField2d Constructors | Improve this Doc View Source ImplicitUnion2d() Declaration public ImplicitUnion2d() Methods | Improve this Doc View Source Gradient(Single, Single, ref Single, ref Single) Declaration public override void Gradient(float fX, float fY, ref float fGX, ref float fGY) Parameters Type Name Description Single fX Single fY Single fGX Single fGY Overrides ImplicitNAryOp2d.Gradient(Single, Single, ref Single, ref Single) | Improve this Doc View Source Value(Single, Single) Declaration public override float Value(float fX, float fY) Parameters Type Name Description Single fX Single fY Returns Type Description Single Overrides ImplicitNAryOp2d.Value(Single, Single) Implements ImplicitOperator2d ImplicitField2d"
  },
  "api/g3.ImplicitUnion3d.html": {
    "href": "api/g3.ImplicitUnion3d.html",
    "title": "Class ImplicitUnion3d | ViRGIS VR GIS",
    "keywords": "Class ImplicitUnion3d Boolean Union of two implicit functions, A OR B. Assumption is that both have surface at zero isocontour and negative is inside. Inheritance Object ImplicitUnion3d Implements BoundedImplicitFunction3d ImplicitFunction3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ImplicitUnion3d : BoundedImplicitFunction3d, ImplicitFunction3d Fields | Improve this Doc View Source A Declaration public BoundedImplicitFunction3d A Field Value Type Description BoundedImplicitFunction3d | Improve this Doc View Source B Declaration public BoundedImplicitFunction3d B Field Value Type Description BoundedImplicitFunction3d Methods | Improve this Doc View Source Bounds() Declaration public AxisAlignedBox3d Bounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Value(ref Vector3d) Declaration public double Value(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Double Implements BoundedImplicitFunction3d ImplicitFunction3d"
  },
  "api/g3.IMultiCurve2d.html": {
    "href": "api/g3.IMultiCurve2d.html",
    "title": "Interface IMultiCurve2d | ViRGIS VR GIS",
    "keywords": "Interface IMultiCurve2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface IMultiCurve2d Properties | Improve this Doc View Source Curves Declaration ReadOnlyCollection<IParametricCurve2d> Curves { get; } Property Value Type Description ReadOnlyCollection < IParametricCurve2d >"
  },
  "api/g3.IMultigridIndexer2.html": {
    "href": "api/g3.IMultigridIndexer2.html",
    "title": "Interface IMultigridIndexer2 | ViRGIS VR GIS",
    "keywords": "Interface IMultigridIndexer2 interface that maps between integer grid coords and 'blocks' of those coordinates, ie for multigrid-like structures Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface IMultigridIndexer2 Methods | Improve this Doc View Source FromBlock(Vector2i) Map from block index to outer grid index at min-corner of the block. (add block-local coord to get specific outer-grid index) Declaration Vector2i FromBlock(Vector2i block_idx) Parameters Type Name Description Vector2i block_idx Returns Type Description Vector2i | Improve this Doc View Source ToBlock(Vector2i) maps from denser outer-grid indices to pairs of (block_index, local_index_in_block) this should just be the combined result of [ ToBlockIndex() , ToBlockLocal() ] Declaration GridLevelIndex2 ToBlock(Vector2i outer_index) Parameters Type Name Description Vector2i outer_index Returns Type Description GridLevelIndex2 | Improve this Doc View Source ToBlockIndex(Vector2i) map from outer-grid indices to block index (ie divide) Declaration Vector2i ToBlockIndex(Vector2i outer_index) Parameters Type Name Description Vector2i outer_index Returns Type Description Vector2i | Improve this Doc View Source ToBlockLocal(Vector2i) map from outer-grid indices to block-local index (ie modulo) Declaration Vector2i ToBlockLocal(Vector2i outer_index) Parameters Type Name Description Vector2i outer_index Returns Type Description Vector2i"
  },
  "api/g3.IMultigridIndexer3.html": {
    "href": "api/g3.IMultigridIndexer3.html",
    "title": "Interface IMultigridIndexer3 | ViRGIS VR GIS",
    "keywords": "Interface IMultigridIndexer3 interface that maps between integer grid coords and 'blocks' of those coordinates, ie for multigrid-like structures Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface IMultigridIndexer3 Methods | Improve this Doc View Source FromBlock(Vector3i) Map from block index to outer grid index at min-corner of the block. (add block-local coord to get specific outer-grid index) Declaration Vector3i FromBlock(Vector3i block_idx) Parameters Type Name Description Vector3i block_idx Returns Type Description Vector3i | Improve this Doc View Source ToBlock(Vector3i) maps from denser outer-grid indices to pairs of (block_index, local_index_in_block) this should just be the combined result of [ ToBlockIndex() , ToBlockLocal() ] Declaration GridLevelIndex ToBlock(Vector3i outer_index) Parameters Type Name Description Vector3i outer_index Returns Type Description GridLevelIndex | Improve this Doc View Source ToBlockIndex(Vector3i) map from outer-grid indices to block index (ie divide) Declaration Vector3i ToBlockIndex(Vector3i outer_index) Parameters Type Name Description Vector3i outer_index Returns Type Description Vector3i | Improve this Doc View Source ToBlockLocal(Vector3i) map from outer-grid indices to block-local index (ie modulo) Declaration Vector3i ToBlockLocal(Vector3i outer_index) Parameters Type Name Description Vector3i outer_index Returns Type Description Vector3i"
  },
  "api/g3.Index2i.html": {
    "href": "api/g3.Index2i.html",
    "title": "Struct Index2i | ViRGIS VR GIS",
    "keywords": "Struct Index2i Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Index2i : IComparable<Index2i>, IEquatable<Index2i> Constructors | Improve this Doc View Source Index2i(Index2i) Declaration public Index2i(Index2i copy) Parameters Type Name Description Index2i copy | Improve this Doc View Source Index2i(Int32) Declaration public Index2i(int z) Parameters Type Name Description Int32 z | Improve this Doc View Source Index2i(Int32, Int32) Declaration public Index2i(int ii, int jj) Parameters Type Name Description Int32 ii Int32 jj | Improve this Doc View Source Index2i(Int32[]) Declaration public Index2i(int[] i2) Parameters Type Name Description Int32 [] i2 Fields | Improve this Doc View Source a Declaration public int a Field Value Type Description Int32 | Improve this Doc View Source b Declaration public int b Field Value Type Description Int32 | Improve this Doc View Source Max Declaration public static readonly Index2i Max Field Value Type Description Index2i | Improve this Doc View Source Min Declaration public static readonly Index2i Min Field Value Type Description Index2i | Improve this Doc View Source One Declaration public static readonly Index2i One Field Value Type Description Index2i | Improve this Doc View Source Zero Declaration public static readonly Index2i Zero Field Value Type Description Index2i Properties | Improve this Doc View Source array Declaration public int[] array { get; } Property Value Type Description Int32 [] | Improve this Doc View Source Item[Int32] Declaration public int this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Int32 | Improve this Doc View Source Length Declaration public int Length { get; } Property Value Type Description Int32 | Improve this Doc View Source LengthSquared Declaration public int LengthSquared { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source CompareTo(Index2i) Declaration public int CompareTo(Index2i other) Parameters Type Name Description Index2i other Returns Type Description Int32 | Improve this Doc View Source Equals(Index2i) Declaration public bool Equals(Index2i other) Parameters Type Name Description Index2i other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source Set(Index2i) Declaration public void Set(Index2i o) Parameters Type Name Description Index2i o | Improve this Doc View Source Set(Int32, Int32) Declaration public void Set(int ii, int jj) Parameters Type Name Description Int32 ii Int32 jj | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators | Improve this Doc View Source Addition(Index2i, Index2i) Declaration public static Index2i operator +(Index2i v0, Index2i v1) Parameters Type Name Description Index2i v0 Index2i v1 Returns Type Description Index2i | Improve this Doc View Source Addition(Index2i, Int32) Declaration public static Index2i operator +(Index2i v0, int f) Parameters Type Name Description Index2i v0 Int32 f Returns Type Description Index2i | Improve this Doc View Source Division(Index2i, Index2i) Declaration public static Index2i operator /(Index2i a, Index2i b) Parameters Type Name Description Index2i a Index2i b Returns Type Description Index2i | Improve this Doc View Source Division(Index2i, Int32) Declaration public static Index2i operator /(Index2i v, int f) Parameters Type Name Description Index2i v Int32 f Returns Type Description Index2i | Improve this Doc View Source Equality(Index2i, Index2i) Declaration public static bool operator ==(Index2i a, Index2i b) Parameters Type Name Description Index2i a Index2i b Returns Type Description Boolean | Improve this Doc View Source Inequality(Index2i, Index2i) Declaration public static bool operator !=(Index2i a, Index2i b) Parameters Type Name Description Index2i a Index2i b Returns Type Description Boolean | Improve this Doc View Source Multiply(Index2i, Index2i) Declaration public static Index2i operator *(Index2i a, Index2i b) Parameters Type Name Description Index2i a Index2i b Returns Type Description Index2i | Improve this Doc View Source Multiply(Index2i, Int32) Declaration public static Index2i operator *(Index2i v, int f) Parameters Type Name Description Index2i v Int32 f Returns Type Description Index2i | Improve this Doc View Source Multiply(Int32, Index2i) Declaration public static Index2i operator *(int f, Index2i v) Parameters Type Name Description Int32 f Index2i v Returns Type Description Index2i | Improve this Doc View Source Subtraction(Index2i, Index2i) Declaration public static Index2i operator -(Index2i v0, Index2i v1) Parameters Type Name Description Index2i v0 Index2i v1 Returns Type Description Index2i | Improve this Doc View Source Subtraction(Index2i, Int32) Declaration public static Index2i operator -(Index2i v0, int f) Parameters Type Name Description Index2i v0 Int32 f Returns Type Description Index2i | Improve this Doc View Source UnaryNegation(Index2i) Declaration public static Index2i operator -(Index2i v) Parameters Type Name Description Index2i v Returns Type Description Index2i"
  },
  "api/g3.Index3i.html": {
    "href": "api/g3.Index3i.html",
    "title": "Struct Index3i | ViRGIS VR GIS",
    "keywords": "Struct Index3i Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Index3i : IComparable<Index3i>, IEquatable<Index3i> Constructors | Improve this Doc View Source Index3i(Index3i) Declaration public Index3i(Index3i copy) Parameters Type Name Description Index3i copy | Improve this Doc View Source Index3i(Int32) Declaration public Index3i(int z) Parameters Type Name Description Int32 z | Improve this Doc View Source Index3i(Int32, Int32, Int32) Declaration public Index3i(int ii, int jj, int kk) Parameters Type Name Description Int32 ii Int32 jj Int32 kk | Improve this Doc View Source Index3i(Int32, Int32, Int32, Boolean) Declaration public Index3i(int ii, int jj, int kk, bool cycle) Parameters Type Name Description Int32 ii Int32 jj Int32 kk Boolean cycle | Improve this Doc View Source Index3i(Int32[]) Declaration public Index3i(int[] i2) Parameters Type Name Description Int32 [] i2 Fields | Improve this Doc View Source a Declaration public int a Field Value Type Description Int32 | Improve this Doc View Source b Declaration public int b Field Value Type Description Int32 | Improve this Doc View Source c Declaration public int c Field Value Type Description Int32 | Improve this Doc View Source Max Declaration public static readonly Index3i Max Field Value Type Description Index3i | Improve this Doc View Source Min Declaration public static readonly Index3i Min Field Value Type Description Index3i | Improve this Doc View Source One Declaration public static readonly Index3i One Field Value Type Description Index3i | Improve this Doc View Source Zero Declaration public static readonly Index3i Zero Field Value Type Description Index3i Properties | Improve this Doc View Source array Declaration public int[] array { get; } Property Value Type Description Int32 [] | Improve this Doc View Source Item[Int32] Declaration public int this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Int32 | Improve this Doc View Source Length Declaration public int Length { get; } Property Value Type Description Int32 | Improve this Doc View Source LengthSquared Declaration public int LengthSquared { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source CompareTo(Index3i) Declaration public int CompareTo(Index3i other) Parameters Type Name Description Index3i other Returns Type Description Int32 | Improve this Doc View Source Equals(Index3i) Declaration public bool Equals(Index3i other) Parameters Type Name Description Index3i other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source Set(Index3i) Declaration public void Set(Index3i o) Parameters Type Name Description Index3i o | Improve this Doc View Source Set(Int32, Int32, Int32) Declaration public void Set(int ii, int jj, int kk) Parameters Type Name Description Int32 ii Int32 jj Int32 kk | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators | Improve this Doc View Source Addition(Index3i, Index3i) Declaration public static Index3i operator +(Index3i v0, Index3i v1) Parameters Type Name Description Index3i v0 Index3i v1 Returns Type Description Index3i | Improve this Doc View Source Addition(Index3i, Int32) Declaration public static Index3i operator +(Index3i v0, int f) Parameters Type Name Description Index3i v0 Int32 f Returns Type Description Index3i | Improve this Doc View Source Division(Index3i, Index3i) Declaration public static Index3i operator /(Index3i a, Index3i b) Parameters Type Name Description Index3i a Index3i b Returns Type Description Index3i | Improve this Doc View Source Division(Index3i, Int32) Declaration public static Index3i operator /(Index3i v, int f) Parameters Type Name Description Index3i v Int32 f Returns Type Description Index3i | Improve this Doc View Source Equality(Index3i, Index3i) Declaration public static bool operator ==(Index3i a, Index3i b) Parameters Type Name Description Index3i a Index3i b Returns Type Description Boolean | Improve this Doc View Source Inequality(Index3i, Index3i) Declaration public static bool operator !=(Index3i a, Index3i b) Parameters Type Name Description Index3i a Index3i b Returns Type Description Boolean | Improve this Doc View Source Multiply(Index3i, Index3i) Declaration public static Index3i operator *(Index3i a, Index3i b) Parameters Type Name Description Index3i a Index3i b Returns Type Description Index3i | Improve this Doc View Source Multiply(Index3i, Int32) Declaration public static Index3i operator *(Index3i v, int f) Parameters Type Name Description Index3i v Int32 f Returns Type Description Index3i | Improve this Doc View Source Multiply(Int32, Index3i) Declaration public static Index3i operator *(int f, Index3i v) Parameters Type Name Description Int32 f Index3i v Returns Type Description Index3i | Improve this Doc View Source Subtraction(Index3i, Index3i) Declaration public static Index3i operator -(Index3i v0, Index3i v1) Parameters Type Name Description Index3i v0 Index3i v1 Returns Type Description Index3i | Improve this Doc View Source Subtraction(Index3i, Int32) Declaration public static Index3i operator -(Index3i v0, int f) Parameters Type Name Description Index3i v0 Int32 f Returns Type Description Index3i | Improve this Doc View Source UnaryNegation(Index3i) Declaration public static Index3i operator -(Index3i v) Parameters Type Name Description Index3i v Returns Type Description Index3i"
  },
  "api/g3.Index4i.html": {
    "href": "api/g3.Index4i.html",
    "title": "Struct Index4i | ViRGIS VR GIS",
    "keywords": "Struct Index4i Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Index4i Constructors | Improve this Doc View Source Index4i(Index4i) Declaration public Index4i(Index4i copy) Parameters Type Name Description Index4i copy | Improve this Doc View Source Index4i(Int32) Declaration public Index4i(int z) Parameters Type Name Description Int32 z | Improve this Doc View Source Index4i(Int32, Int32, Int32, Int32) Declaration public Index4i(int aa, int bb, int cc, int dd) Parameters Type Name Description Int32 aa Int32 bb Int32 cc Int32 dd | Improve this Doc View Source Index4i(Int32[]) Declaration public Index4i(int[] i2) Parameters Type Name Description Int32 [] i2 Fields | Improve this Doc View Source a Declaration public int a Field Value Type Description Int32 | Improve this Doc View Source b Declaration public int b Field Value Type Description Int32 | Improve this Doc View Source c Declaration public int c Field Value Type Description Int32 | Improve this Doc View Source d Declaration public int d Field Value Type Description Int32 | Improve this Doc View Source Max Declaration public static readonly Index4i Max Field Value Type Description Index4i | Improve this Doc View Source One Declaration public static readonly Index4i One Field Value Type Description Index4i | Improve this Doc View Source Zero Declaration public static readonly Index4i Zero Field Value Type Description Index4i Properties | Improve this Doc View Source array Declaration public int[] array { get; } Property Value Type Description Int32 [] | Improve this Doc View Source Item[Int32] Declaration public int this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Int32 | Improve this Doc View Source Length Declaration public int Length { get; } Property Value Type Description Int32 | Improve this Doc View Source LengthSquared Declaration public int LengthSquared { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source CompareTo(Index4i) Declaration public int CompareTo(Index4i other) Parameters Type Name Description Index4i other Returns Type Description Int32 | Improve this Doc View Source Contains(Int32) Declaration public bool Contains(int val) Parameters Type Name Description Int32 val Returns Type Description Boolean | Improve this Doc View Source Equals(Index4i) Declaration public bool Equals(Index4i other) Parameters Type Name Description Index4i other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source Set(Index4i) Declaration public void Set(Index4i o) Parameters Type Name Description Index4i o | Improve this Doc View Source Set(Int32, Int32, Int32, Int32) Declaration public void Set(int aa, int bb, int cc, int dd) Parameters Type Name Description Int32 aa Int32 bb Int32 cc Int32 dd | Improve this Doc View Source Sort() Declaration public void Sort() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators | Improve this Doc View Source Addition(Index4i, Index4i) Declaration public static Index4i operator +(Index4i v0, Index4i v1) Parameters Type Name Description Index4i v0 Index4i v1 Returns Type Description Index4i | Improve this Doc View Source Addition(Index4i, Int32) Declaration public static Index4i operator +(Index4i v0, int f) Parameters Type Name Description Index4i v0 Int32 f Returns Type Description Index4i | Improve this Doc View Source Division(Index4i, Index4i) Declaration public static Index4i operator /(Index4i a, Index4i b) Parameters Type Name Description Index4i a Index4i b Returns Type Description Index4i | Improve this Doc View Source Division(Index4i, Int32) Declaration public static Index4i operator /(Index4i v, int f) Parameters Type Name Description Index4i v Int32 f Returns Type Description Index4i | Improve this Doc View Source Equality(Index4i, Index4i) Declaration public static bool operator ==(Index4i a, Index4i b) Parameters Type Name Description Index4i a Index4i b Returns Type Description Boolean | Improve this Doc View Source Inequality(Index4i, Index4i) Declaration public static bool operator !=(Index4i a, Index4i b) Parameters Type Name Description Index4i a Index4i b Returns Type Description Boolean | Improve this Doc View Source Multiply(Index4i, Index4i) Declaration public static Index4i operator *(Index4i a, Index4i b) Parameters Type Name Description Index4i a Index4i b Returns Type Description Index4i | Improve this Doc View Source Multiply(Index4i, Int32) Declaration public static Index4i operator *(Index4i v, int f) Parameters Type Name Description Index4i v Int32 f Returns Type Description Index4i | Improve this Doc View Source Multiply(Int32, Index4i) Declaration public static Index4i operator *(int f, Index4i v) Parameters Type Name Description Int32 f Index4i v Returns Type Description Index4i | Improve this Doc View Source Subtraction(Index4i, Index4i) Declaration public static Index4i operator -(Index4i v0, Index4i v1) Parameters Type Name Description Index4i v0 Index4i v1 Returns Type Description Index4i | Improve this Doc View Source Subtraction(Index4i, Int32) Declaration public static Index4i operator -(Index4i v0, int f) Parameters Type Name Description Index4i v0 Int32 f Returns Type Description Index4i | Improve this Doc View Source UnaryNegation(Index4i) Declaration public static Index4i operator -(Index4i v) Parameters Type Name Description Index4i v Returns Type Description Index4i"
  },
  "api/g3.IndexArray2i.html": {
    "href": "api/g3.IndexArray2i.html",
    "title": "Class IndexArray2i | ViRGIS VR GIS",
    "keywords": "Class IndexArray2i Inheritance Object VectorArray2 < Int32 > IndexArray2i Inherited Members VectorArray2<Int32>.array VectorArray2<Int32>.Count VectorArray2<Int32>.GetEnumerator() VectorArray2<Int32>.Resize(Int32) VectorArray2<Int32>.Set(Int32, Int32, Int32) VectorArray2<Int32>.Set(Int32, Int32, VectorArray2<Int32>) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class IndexArray2i : VectorArray2<int>, IEnumerable<int>, IEnumerable Constructors | Improve this Doc View Source IndexArray2i(Int32) Declaration public IndexArray2i(int nCount) Parameters Type Name Description Int32 nCount | Improve this Doc View Source IndexArray2i(Int32[]) Declaration public IndexArray2i(int[] data) Parameters Type Name Description Int32 [] data Properties | Improve this Doc View Source Item[Int32] Declaration public Index2i this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Index2i Methods | Improve this Doc View Source AsIndex2i() Declaration public IEnumerable<Index2i> AsIndex2i() Returns Type Description IEnumerable < Index2i >"
  },
  "api/g3.IndexArray3i.html": {
    "href": "api/g3.IndexArray3i.html",
    "title": "Class IndexArray3i | ViRGIS VR GIS",
    "keywords": "Class IndexArray3i Inheritance Object VectorArray3 < Int32 > IndexArray3i Inherited Members VectorArray3<Int32>.array VectorArray3<Int32>.Count VectorArray3<Int32>.GetEnumerator() VectorArray3<Int32>.Resize(Int32) VectorArray3<Int32>.Set(Int32, Int32, Int32, Int32) VectorArray3<Int32>.Set(Int32, Int32, VectorArray3<Int32>) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class IndexArray3i : VectorArray3<int>, IEnumerable<int>, IEnumerable Constructors | Improve this Doc View Source IndexArray3i(Int32) Declaration public IndexArray3i(int nCount) Parameters Type Name Description Int32 nCount | Improve this Doc View Source IndexArray3i(Int32[]) Declaration public IndexArray3i(int[] data) Parameters Type Name Description Int32 [] data Properties | Improve this Doc View Source Item[Int32] Declaration public Index3i this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Index3i Methods | Improve this Doc View Source AsIndex3i() Declaration public IEnumerable<Index3i> AsIndex3i() Returns Type Description IEnumerable < Index3i > | Improve this Doc View Source Set(Int32, Int32, Int32, Int32, Boolean) Declaration public void Set(int i, int a, int b, int c, bool bCycle = false) Parameters Type Name Description Int32 i Int32 a Int32 b Int32 c Boolean bCycle"
  },
  "api/g3.IndexArray4i.html": {
    "href": "api/g3.IndexArray4i.html",
    "title": "Class IndexArray4i | ViRGIS VR GIS",
    "keywords": "Class IndexArray4i Inheritance Object VectorArray4 < Int32 > IndexArray4i Inherited Members VectorArray4<Int32>.array VectorArray4<Int32>.Count VectorArray4<Int32>.GetEnumerator() VectorArray4<Int32>.Resize(Int32) VectorArray4<Int32>.Set(Int32, Int32, Int32, Int32, Int32) VectorArray4<Int32>.Set(Int32, Int32, VectorArray4<Int32>) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class IndexArray4i : VectorArray4<int>, IEnumerable<int>, IEnumerable Constructors | Improve this Doc View Source IndexArray4i(Int32) Declaration public IndexArray4i(int nCount) Parameters Type Name Description Int32 nCount | Improve this Doc View Source IndexArray4i(Int32[]) Declaration public IndexArray4i(int[] data) Parameters Type Name Description Int32 [] data Properties | Improve this Doc View Source Item[Int32] Declaration public Index4i this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Index4i Methods | Improve this Doc View Source AsIndex4i() Declaration public IEnumerable<Index4i> AsIndex4i() Returns Type Description IEnumerable < Index4i >"
  },
  "api/g3.IndexFlagSet.html": {
    "href": "api/g3.IndexFlagSet.html",
    "title": "Class IndexFlagSet | ViRGIS VR GIS",
    "keywords": "Class IndexFlagSet This class provides a similar interface to BitArray, but can optionally use a HashSet (or perhaps some other DS) if the fraction of the index space required is small Inheritance Object IndexFlagSet Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class IndexFlagSet : IEnumerable<int>, IEnumerable Constructors | Improve this Doc View Source IndexFlagSet(Boolean, Int32) Declaration public IndexFlagSet(bool bForceSparse, int MaxIndex = -1) Parameters Type Name Description Boolean bForceSparse Int32 MaxIndex | Improve this Doc View Source IndexFlagSet(Int32, Int32) Declaration public IndexFlagSet(int MaxIndex, int SubsetCountEst) Parameters Type Name Description Int32 MaxIndex Int32 SubsetCountEst Properties | Improve this Doc View Source Count Returns number of true values in set Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source Item[Int32] Declaration public bool this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Boolean Methods | Improve this Doc View Source Add(Int32) sets value i to true Declaration public void Add(int i) Parameters Type Name Description Int32 i | Improve this Doc View Source Contains(Int32) checks if value i is true Declaration public bool Contains(int i) Parameters Type Name Description Int32 i Returns Type Description Boolean | Improve this Doc View Source GetEnumerator() enumerate over indices w/ value = true Declaration public IEnumerator<int> GetEnumerator() Returns Type Description IEnumerator < Int32 >"
  },
  "api/g3.IndexHashSet.html": {
    "href": "api/g3.IndexHashSet.html",
    "title": "Class IndexHashSet | ViRGIS VR GIS",
    "keywords": "Class IndexHashSet Inheritance Object HashSet < Int32 > IndexHashSet Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class IndexHashSet : HashSet<int>, IReadOnlyCollection<int>, ISet<int>, ICollection<int>, IEnumerable<int>, IEnumerable, IDeserializationCallback, ISerializable Properties | Improve this Doc View Source Item[Int32] Declaration public bool this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Boolean"
  },
  "api/g3.IndexMap.html": {
    "href": "api/g3.IndexMap.html",
    "title": "Class IndexMap | ViRGIS VR GIS",
    "keywords": "Class IndexMap Inheritance Object IndexMap Implements IIndexMap Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class IndexMap : IIndexMap Constructors | Improve this Doc View Source IndexMap(Boolean, Int32) Declaration public IndexMap(bool bForceSparse, int MaxIndex = -1) Parameters Type Name Description Boolean bForceSparse Int32 MaxIndex | Improve this Doc View Source IndexMap(Int32, Int32) Declaration public IndexMap(int MaxIndex, int SubsetCountEst) Parameters Type Name Description Int32 MaxIndex Int32 SubsetCountEst | Improve this Doc View Source IndexMap(Int32[], Int32) Declaration public IndexMap(int[] use_dense_map, int MaxIndex = -1) Parameters Type Name Description Int32 [] use_dense_map Int32 MaxIndex Fields | Improve this Doc View Source InvalidIndex Declaration public readonly int InvalidIndex Field Value Type Description Int32 Properties | Improve this Doc View Source Item[Int32] Declaration public int this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Int32 Methods | Improve this Doc View Source Contains(Int32) Declaration public bool Contains(int index) Parameters Type Name Description Int32 index Returns Type Description Boolean | Improve this Doc View Source SetToInvalid() Declaration public void SetToInvalid() Implements IIndexMap"
  },
  "api/g3.IndexPriorityQueue.html": {
    "href": "api/g3.IndexPriorityQueue.html",
    "title": "Class IndexPriorityQueue | ViRGIS VR GIS",
    "keywords": "Class IndexPriorityQueue This is a min-heap priority queue class that does not use an object for each queue node. Integer IDs must be provided by the user to identify unique nodes. Internally an array is used to keep track of the mapping from ids to internal indices, so the max ID must also be provided. See DijkstraGraphDistance for example usage. conceptually based on https://github.com/BlueRaja/High-Speed-Priority-Queue-for-C-Sharp Inheritance Object IndexPriorityQueue Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class IndexPriorityQueue : IEnumerable<int>, IEnumerable Constructors | Improve this Doc View Source IndexPriorityQueue(Int32) maxIndex parameter is required because internally a fixed-size array is used to track mapping from IDs to internal node indices. If this seems problematic because you won't be inserting the full index space, consider a DynamicPriorityQueue instead. Declaration public IndexPriorityQueue(int maxID) Parameters Type Name Description Int32 maxID Fields | Improve this Doc View Source EnableDebugChecks Declaration public bool EnableDebugChecks Field Value Type Description Boolean Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source First id of node at head of queue Declaration public int First { get; } Property Value Type Description Int32 | Improve this Doc View Source FirstPriority Priority of node at head of queue Declaration public float FirstPriority { get; } Property Value Type Description Single Methods | Improve this Doc View Source Clear(Boolean) reset the queue to empty state. if bFreeMemory is false, we don't discard internal data structures, so there will be less allocation next time (this does not make a huge difference...) Declaration public void Clear(bool bFreeMemory = true) Parameters Type Name Description Boolean bFreeMemory | Improve this Doc View Source Contains(Int32) constant-time check to see if id is already in queue Declaration public bool Contains(int id) Parameters Type Name Description Int32 id Returns Type Description Boolean | Improve this Doc View Source DebugPrint() Declaration public void DebugPrint() | Improve this Doc View Source Dequeue() remove node at head of queue, update queue, and return id for that node Declaration public int Dequeue() Returns Type Description Int32 | Improve this Doc View Source Enqueue(Int32, Single) Declaration public void Enqueue(int id, float priority) Parameters Type Name Description Int32 id Single priority | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<int> GetEnumerator() Returns Type Description IEnumerator < Int32 > | Improve this Doc View Source GetPriority(Int32) Query the priority at node id, assuming it exists in queue Declaration public float GetPriority(int id) Parameters Type Name Description Int32 id Returns Type Description Single | Improve this Doc View Source Insert(Int32, Single) Add id to list w/ given priority Behavior is undefined if you call w/ same id twice Declaration public void Insert(int id, float priority) Parameters Type Name Description Int32 id Single priority | Improve this Doc View Source IsValidQueue() Check if queue has been corrupted Declaration public bool IsValidQueue() Returns Type Description Boolean | Improve this Doc View Source Remove(Int32) remove this node from queue. Undefined behavior if called w/ same id twice! Behavior is undefined if you call w/ id that is not in queue Declaration public void Remove(int id) Parameters Type Name Description Int32 id | Improve this Doc View Source Update(Int32, Single) update priority at node id, and then move it to correct position in queue Behavior is undefined if you call w/ id that is not in queue Declaration public void Update(int id, float priority) Parameters Type Name Description Int32 id Single priority"
  },
  "api/g3.IndexRangeEnumerator.html": {
    "href": "api/g3.IndexRangeEnumerator.html",
    "title": "Class IndexRangeEnumerator | ViRGIS VR GIS",
    "keywords": "Class IndexRangeEnumerator Inheritance Object IndexRangeEnumerator Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class IndexRangeEnumerator : IEnumerable<int>, IEnumerable Constructors | Improve this Doc View Source IndexRangeEnumerator(Int32) Declaration public IndexRangeEnumerator(int count) Parameters Type Name Description Int32 count | Improve this Doc View Source IndexRangeEnumerator(Int32, Int32) Declaration public IndexRangeEnumerator(int start, int count) Parameters Type Name Description Int32 start Int32 count Methods | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<int> GetEnumerator() Returns Type Description IEnumerator < Int32 >"
  },
  "api/g3.IndexUtil.html": {
    "href": "api/g3.IndexUtil.html",
    "title": "Class IndexUtil | ViRGIS VR GIS",
    "keywords": "Class IndexUtil Inheritance Object IndexUtil Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class IndexUtil Methods | Improve this Doc View Source Apply(List<Int32>, IIndexMap) Apply map to indices Declaration public static void Apply(List<int> indices, IIndexMap map) Parameters Type Name Description List < Int32 > indices IIndexMap map | Improve this Doc View Source Apply(Int32[], IIndexMap) Declaration public static void Apply(int[] indices, IIndexMap map) Parameters Type Name Description Int32 [] indices IIndexMap map | Improve this Doc View Source Apply(Int32[], IList<Int32>) Declaration public static void Apply(int[] indices, IList<int> map) Parameters Type Name Description Int32 [] indices IList < Int32 > map | Improve this Doc View Source cycle_indices_minfirst(ref Index3i) Declaration public static void cycle_indices_minfirst(ref Index3i tri) Parameters Type Name Description Index3i tri | Improve this Doc View Source EdgesToVertices(DMesh3, HashSet<Int32>, HashSet<Int32>) Declaration public static void EdgesToVertices(DMesh3 mesh, HashSet<int> edges, HashSet<int> vertices) Parameters Type Name Description DMesh3 mesh HashSet < Int32 > edges HashSet < Int32 > vertices | Improve this Doc View Source EdgesToVertices(DMesh3, IEnumerable<Int32>, HashSet<Int32>) Declaration public static void EdgesToVertices(DMesh3 mesh, IEnumerable<int> edges, HashSet<int> vertices) Parameters Type Name Description DMesh3 mesh IEnumerable < Int32 > edges HashSet < Int32 > vertices | Improve this Doc View Source FilterValid(Int32[], Func<Int32, Boolean>, Boolean) Filter out invalid entries in indices[] list. Will return indices itself if none invalid, and bForceCopy == false Declaration public static int[] FilterValid(int[] indices, Func<int, bool> FilterF, bool bForceCopy = false) Parameters Type Name Description Int32 [] indices Func < Int32 , Boolean > FilterF Boolean bForceCopy Returns Type Description Int32 [] | Improve this Doc View Source find_edge_index_in_tri(Int32, Int32, ref Index3i) Declaration public static int find_edge_index_in_tri(int a, int b, ref Index3i tri_verts) Parameters Type Name Description Int32 a Int32 b Index3i tri_verts Returns Type Description Int32 | Improve this Doc View Source find_edge_index_in_tri(Int32, Int32, Int32[]) Declaration public static int find_edge_index_in_tri(int a, int b, int[] tri_verts) Parameters Type Name Description Int32 a Int32 b Int32 [] tri_verts Returns Type Description Int32 | Improve this Doc View Source find_edge_other_v(Index2i, Int32) Declaration public static int find_edge_other_v(Index2i ev, int v) Parameters Type Name Description Index2i ev Int32 v Returns Type Description Int32 | Improve this Doc View Source find_edge_other_v(ref Index2i, Int32) Declaration public static int find_edge_other_v(ref Index2i ev, int v) Parameters Type Name Description Index2i ev Int32 v Returns Type Description Int32 | Improve this Doc View Source find_shared_edge_v(ref Index2i, ref Index2i) Declaration public static int find_shared_edge_v(ref Index2i ev0, ref Index2i ev1) Parameters Type Name Description Index2i ev0 Index2i ev1 Returns Type Description Int32 | Improve this Doc View Source find_tri_index(Int32, Index3i) Declaration public static int find_tri_index(int a, Index3i tri_verts) Parameters Type Name Description Int32 a Index3i tri_verts Returns Type Description Int32 | Improve this Doc View Source find_tri_index(Int32, ref Index3i) Declaration public static int find_tri_index(int a, ref Index3i tri_verts) Parameters Type Name Description Int32 a Index3i tri_verts Returns Type Description Int32 | Improve this Doc View Source find_tri_index(Int32, Int32[]) Declaration public static int find_tri_index(int a, int[] tri_verts) Parameters Type Name Description Int32 a Int32 [] tri_verts Returns Type Description Int32 | Improve this Doc View Source find_tri_ordered_edge(Int32, Int32, Index3i) Declaration public static int find_tri_ordered_edge(int a, int b, Index3i tri_verts) Parameters Type Name Description Int32 a Int32 b Index3i tri_verts Returns Type Description Int32 | Improve this Doc View Source find_tri_ordered_edge(Int32, Int32, ref Index3i) find sequence [a,b] in tri_verts (mod3) and return index of a, or InvalidID if not found Declaration public static int find_tri_ordered_edge(int a, int b, ref Index3i tri_verts) Parameters Type Name Description Int32 a Int32 b Index3i tri_verts Returns Type Description Int32 | Improve this Doc View Source find_tri_ordered_edge(Int32, Int32, Int32[]) Declaration public static int find_tri_ordered_edge(int a, int b, int[] tri_verts) Parameters Type Name Description Int32 a Int32 b Int32 [] tri_verts Returns Type Description Int32 | Improve this Doc View Source find_tri_other_index(Int32, Int32, Int32[]) Declaration public static int find_tri_other_index(int a, int b, int[] tri_verts) Parameters Type Name Description Int32 a Int32 b Int32 [] tri_verts Returns Type Description Int32 | Improve this Doc View Source find_tri_other_verts(Int32, ref Index3i) assuming a is in tri-verts, returns other two vertices, in correct order (or Index2i.Max if not found) Declaration public static Index2i find_tri_other_verts(int a, ref Index3i tri_verts) Parameters Type Name Description Int32 a Index3i tri_verts Returns Type Description Index2i | Improve this Doc View Source find_tri_other_vtx(Int32, Int32, DVector<Int32>, Int32) Declaration public static int find_tri_other_vtx(int a, int b, DVector<int> tri_array, int ti) Parameters Type Name Description Int32 a Int32 b DVector < Int32 > tri_array Int32 ti Returns Type Description Int32 | Improve this Doc View Source find_tri_other_vtx(Int32, Int32, Index3i) Declaration public static int find_tri_other_vtx(int a, int b, Index3i tri_verts) Parameters Type Name Description Int32 a Int32 b Index3i tri_verts Returns Type Description Int32 | Improve this Doc View Source find_tri_other_vtx(Int32, Int32, Int32[]) Declaration public static int find_tri_other_vtx(int a, int b, int[] tri_verts) Parameters Type Name Description Int32 a Int32 b Int32 [] tri_verts Returns Type Description Int32 | Improve this Doc View Source IndicesCheck(Int32[], Func<Int32, Boolean>) return trune if CheckF returns true for all members of indices list Declaration public static bool IndicesCheck(int[] indices, Func<int, bool> CheckF) Parameters Type Name Description Int32 [] indices Func < Int32 , Boolean > CheckF Returns Type Description Boolean | Improve this Doc View Source is_ordered(Int32, Int32, ref Index3i) Declaration public static bool is_ordered(int a, int b, ref Index3i tri_verts) Parameters Type Name Description Int32 a Int32 b Index3i tri_verts Returns Type Description Boolean | Improve this Doc View Source is_same_triangle(Int32, Int32, Int32, ref Index3i) Declaration public static bool is_same_triangle(int a, int b, int c, ref Index3i tri) Parameters Type Name Description Int32 a Int32 b Int32 c Index3i tri Returns Type Description Boolean | Improve this Doc View Source orient_tri_edge(ref Int32, ref Int32, Index3i) Declaration public static bool orient_tri_edge(ref int a, ref int b, Index3i tri_verts) Parameters Type Name Description Int32 a Int32 b Index3i tri_verts Returns Type Description Boolean | Improve this Doc View Source orient_tri_edge(ref Int32, ref Int32, ref Index3i) Declaration public static bool orient_tri_edge(ref int a, ref int b, ref Index3i tri_verts) Parameters Type Name Description Int32 a Int32 b Index3i tri_verts Returns Type Description Boolean | Improve this Doc View Source orient_tri_edge_and_find_other_vtx(ref Int32, ref Int32, Index3i) Declaration public static int orient_tri_edge_and_find_other_vtx(ref int a, ref int b, Index3i tri_verts) Parameters Type Name Description Int32 a Int32 b Index3i tri_verts Returns Type Description Int32 | Improve this Doc View Source orient_tri_edge_and_find_other_vtx(ref Int32, ref Int32, Int32[]) Declaration public static int orient_tri_edge_and_find_other_vtx(ref int a, ref int b, int[] tri_verts) Parameters Type Name Description Int32 a Int32 b Int32 [] tri_verts Returns Type Description Int32 | Improve this Doc View Source same_pair_unordered(Int32, Int32, Int32, Int32) Declaration public static bool same_pair_unordered(int a0, int a1, int b0, int b1) Parameters Type Name Description Int32 a0 Int32 a1 Int32 b0 Int32 b1 Returns Type Description Boolean | Improve this Doc View Source sort_indices(ref Index3i) Declaration public static void sort_indices(ref Index3i tri) Parameters Type Name Description Index3i tri | Improve this Doc View Source ToGrid3Index(Int32, Int32, Int32) Declaration public static Vector3i ToGrid3Index(int idx, int nx, int ny) Parameters Type Name Description Int32 idx Int32 nx Int32 ny Returns Type Description Vector3i | Improve this Doc View Source ToGrid3Linear(Vector3i, Int32, Int32) Declaration public static int ToGrid3Linear(Vector3i ijk, int nx, int ny) Parameters Type Name Description Vector3i ijk Int32 nx Int32 ny Returns Type Description Int32 | Improve this Doc View Source ToGrid3Linear(ref Vector3i, Int32, Int32) Declaration public static int ToGrid3Linear(ref Vector3i ijk, int nx, int ny) Parameters Type Name Description Vector3i ijk Int32 nx Int32 ny Returns Type Description Int32 | Improve this Doc View Source ToGrid3Linear(Int32, Int32, Int32, Int32, Int32) Declaration public static int ToGrid3Linear(int i, int j, int k, int nx, int ny) Parameters Type Name Description Int32 i Int32 j Int32 k Int32 nx Int32 ny Returns Type Description Int32 | Improve this Doc View Source TrianglesToEdges(DMesh3, HashSet<Int32>, HashSet<Int32>) Declaration public static void TrianglesToEdges(DMesh3 mesh, HashSet<int> triangles, HashSet<int> edges) Parameters Type Name Description DMesh3 mesh HashSet < Int32 > triangles HashSet < Int32 > edges | Improve this Doc View Source TrianglesToEdges(DMesh3, IEnumerable<Int32>, HashSet<Int32>) Declaration public static void TrianglesToEdges(DMesh3 mesh, IEnumerable<int> triangles, HashSet<int> edges) Parameters Type Name Description DMesh3 mesh IEnumerable < Int32 > triangles HashSet < Int32 > edges | Improve this Doc View Source TrianglesToVertices(DMesh3, HashSet<Int32>, HashSet<Int32>) Declaration public static void TrianglesToVertices(DMesh3 mesh, HashSet<int> triangles, HashSet<int> vertices) Parameters Type Name Description DMesh3 mesh HashSet < Int32 > triangles HashSet < Int32 > vertices | Improve this Doc View Source TrianglesToVertices(DMesh3, IEnumerable<Int32>, HashSet<Int32>) Declaration public static void TrianglesToVertices(DMesh3 mesh, IEnumerable<int> triangles, HashSet<int> vertices) Parameters Type Name Description DMesh3 mesh IEnumerable < Int32 > triangles HashSet < Int32 > vertices"
  },
  "api/g3.InPlaceIterativeCurveSmooth.html": {
    "href": "api/g3.InPlaceIterativeCurveSmooth.html",
    "title": "Class InPlaceIterativeCurveSmooth | ViRGIS VR GIS",
    "keywords": "Class InPlaceIterativeCurveSmooth Inheritance Object InPlaceIterativeCurveSmooth Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class InPlaceIterativeCurveSmooth Constructors | Improve this Doc View Source InPlaceIterativeCurveSmooth() Declaration public InPlaceIterativeCurveSmooth() | Improve this Doc View Source InPlaceIterativeCurveSmooth(DCurve3, Single) Declaration public InPlaceIterativeCurveSmooth(DCurve3 curve, float alpha = 0.25F) Parameters Type Name Description DCurve3 curve Single alpha Properties | Improve this Doc View Source Alpha Declaration public float Alpha { get; set; } Property Value Type Description Single | Improve this Doc View Source Curve Declaration public DCurve3 Curve { get; set; } Property Value Type Description DCurve3 | Improve this Doc View Source End Declaration public int End { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Start Declaration public int Start { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source UpdateDeformation(Int32) Declaration public void UpdateDeformation(int nIterations = 1) Parameters Type Name Description Int32 nIterations | Improve this Doc View Source UpdateDeformation_Closed(Int32) Declaration public void UpdateDeformation_Closed(int nIterations = 1) Parameters Type Name Description Int32 nIterations | Improve this Doc View Source UpdateDeformation_Open(Int32) Declaration public void UpdateDeformation_Open(int nIterations = 1) Parameters Type Name Description Int32 nIterations"
  },
  "api/g3.Integrate1d.html": {
    "href": "api/g3.Integrate1d.html",
    "title": "Class Integrate1d | ViRGIS VR GIS",
    "keywords": "Class Integrate1d Inheritance Object Integrate1d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class Integrate1d Methods | Improve this Doc View Source GaussianQuadrature(Double, Double, Func<Double, Object, Double>, Object) Declaration public static double GaussianQuadrature(double a, double b, Func<double, object, double> function, object userData) Parameters Type Name Description Double a Double b Func < Double , Object , Double > function Object userData Returns Type Description Double | Improve this Doc View Source RombergIntegral(Int32, Double, Double, Func<Double, Object, Double>, Object) Declaration public static double RombergIntegral(int order, double a, double b, Func<double, object, double> function, object userData) Parameters Type Name Description Int32 order Double a Double b Func < Double , Object , Double > function Object userData Returns Type Description Double | Improve this Doc View Source TrapezoidRule(Int32, Double, Double, Func<Double, Object, Double>, Object) Declaration public static double TrapezoidRule(int numSamples, double a, double b, Func<double, object, double> function, object userData) Parameters Type Name Description Int32 numSamples Double a Double b Func < Double , Object , Double > function Object userData Returns Type Description Double"
  },
  "api/g3.IntersectionResult.html": {
    "href": "api/g3.IntersectionResult.html",
    "title": "Enum IntersectionResult | ViRGIS VR GIS",
    "keywords": "Enum IntersectionResult Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum IntersectionResult Fields Name Description Intersects InvalidQuery NoIntersection NotComputed"
  },
  "api/g3.IntersectionType.html": {
    "href": "api/g3.IntersectionType.html",
    "title": "Enum IntersectionType | ViRGIS VR GIS",
    "keywords": "Enum IntersectionType Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum IntersectionType Fields Name Description Empty Line Plane Point Polygon Segment Unknown"
  },
  "api/g3.IntersectionUtil.html": {
    "href": "api/g3.IntersectionUtil.html",
    "title": "Class IntersectionUtil | ViRGIS VR GIS",
    "keywords": "Class IntersectionUtil Inheritance Object IntersectionUtil Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class IntersectionUtil Methods | Improve this Doc View Source Intersects(Vector3d, Vector3d, Vector3d, Vector3d, Vector3d) Declaration public static bool Intersects(Vector3d rayOrigin, Vector3d rayDirection, Vector3d V0, Vector3d V1, Vector3d V2) Parameters Type Name Description Vector3d rayOrigin Vector3d rayDirection Vector3d V0 Vector3d V1 Vector3d V2 Returns Type Description Boolean | Improve this Doc View Source LineSphere(ref Vector3d, ref Vector3d, ref Vector3d, Double) Declaration public static LinearIntersection LineSphere(ref Vector3d lineOrigin, ref Vector3d lineDirection, ref Vector3d sphereCenter, double sphereRadius) Parameters Type Name Description Vector3d lineOrigin Vector3d lineDirection Vector3d sphereCenter Double sphereRadius Returns Type Description LinearIntersection | Improve this Doc View Source LineSphere(ref Vector3d, ref Vector3d, ref Vector3d, Double, ref LinearIntersection) Intersect ray with sphere and return intersection info (# hits, ray parameters) Declaration public static bool LineSphere(ref Vector3d lineOrigin, ref Vector3d lineDirection, ref Vector3d sphereCenter, double sphereRadius, ref LinearIntersection result) Parameters Type Name Description Vector3d lineOrigin Vector3d lineDirection Vector3d sphereCenter Double sphereRadius LinearIntersection result Returns Type Description Boolean | Improve this Doc View Source LineSphereTest(ref Vector3d, ref Vector3d, ref Vector3d, Double) Test if line intersects sphere Declaration public static bool LineSphereTest(ref Vector3d lineOrigin, ref Vector3d lineDirection, ref Vector3d sphereCenter, double sphereRadius) Parameters Type Name Description Vector3d lineOrigin Vector3d lineDirection Vector3d sphereCenter Double sphereRadius Returns Type Description Boolean | Improve this Doc View Source RaySphere(ref Vector3d, ref Vector3d, ref Vector3d, Double) Declaration public static LinearIntersection RaySphere(ref Vector3d rayOrigin, ref Vector3d rayDirection, ref Vector3d sphereCenter, double sphereRadius) Parameters Type Name Description Vector3d rayOrigin Vector3d rayDirection Vector3d sphereCenter Double sphereRadius Returns Type Description LinearIntersection | Improve this Doc View Source RaySphere(ref Vector3d, ref Vector3d, ref Vector3d, Double, ref LinearIntersection) Intersect ray with sphere and return intersection info (# hits, ray parameters) Declaration public static bool RaySphere(ref Vector3d rayOrigin, ref Vector3d rayDirection, ref Vector3d sphereCenter, double sphereRadius, ref LinearIntersection result) Parameters Type Name Description Vector3d rayOrigin Vector3d rayDirection Vector3d sphereCenter Double sphereRadius LinearIntersection result Returns Type Description Boolean | Improve this Doc View Source RaySphereTest(ref Vector3d, ref Vector3d, ref Vector3d, Double) Test if ray intersects sphere Declaration public static bool RaySphereTest(ref Vector3d rayOrigin, ref Vector3d rayDirection, ref Vector3d sphereCenter, double sphereRadius) Parameters Type Name Description Vector3d rayOrigin Vector3d rayDirection Vector3d sphereCenter Double sphereRadius Returns Type Description Boolean"
  },
  "api/g3.Intersector1.html": {
    "href": "api/g3.Intersector1.html",
    "title": "Class Intersector1 | ViRGIS VR GIS",
    "keywords": "Class Intersector1 Inheritance Object Intersector1 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class Intersector1 Constructors | Improve this Doc View Source Intersector1(Interval1d, Interval1d) Declaration public Intersector1(Interval1d u, Interval1d v) Parameters Type Name Description Interval1d u Interval1d v | Improve this Doc View Source Intersector1(Double, Double, Double, Double) Declaration public Intersector1(double u0, double u1, double v0, double v1) Parameters Type Name Description Double u0 Double u1 Double v0 Double v1 Fields | Improve this Doc View Source NumIntersections Declaration public int NumIntersections Field Value Type Description Int32 | Improve this Doc View Source U Declaration public Interval1d U Field Value Type Description Interval1d | Improve this Doc View Source V Declaration public Interval1d V Field Value Type Description Interval1d Properties | Improve this Doc View Source Test Declaration public bool Test { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Find() Declaration public bool Find() Returns Type Description Boolean | Improve this Doc View Source GetIntersection(Int32) Declaration public double GetIntersection(int i) Parameters Type Name Description Int32 i Returns Type Description Double"
  },
  "api/g3.Interval1d.html": {
    "href": "api/g3.Interval1d.html",
    "title": "Struct Interval1d | ViRGIS VR GIS",
    "keywords": "Struct Interval1d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Interval1d Constructors | Improve this Doc View Source Interval1d(Interval1d) Declaration public Interval1d(Interval1d copy) Parameters Type Name Description Interval1d copy | Improve this Doc View Source Interval1d(Double) Declaration public Interval1d(double f) Parameters Type Name Description Double f | Improve this Doc View Source Interval1d(Double, Double) Declaration public Interval1d(double x, double y) Parameters Type Name Description Double x Double y | Improve this Doc View Source Interval1d(Double[]) Declaration public Interval1d(double[] v2) Parameters Type Name Description Double [] v2 | Improve this Doc View Source Interval1d(Single) Declaration public Interval1d(float f) Parameters Type Name Description Single f | Improve this Doc View Source Interval1d(Single, Single) Declaration public Interval1d(float x, float y) Parameters Type Name Description Single x Single y | Improve this Doc View Source Interval1d(Single[]) Declaration public Interval1d(float[] v2) Parameters Type Name Description Single [] v2 Fields | Improve this Doc View Source a Declaration public double a Field Value Type Description Double | Improve this Doc View Source b Declaration public double b Field Value Type Description Double | Improve this Doc View Source Empty Declaration public static readonly Interval1d Empty Field Value Type Description Interval1d | Improve this Doc View Source Infinite Declaration public static readonly Interval1d Infinite Field Value Type Description Interval1d | Improve this Doc View Source Zero Declaration public static readonly Interval1d Zero Field Value Type Description Interval1d Properties | Improve this Doc View Source Center Declaration public double Center { get; } Property Value Type Description Double | Improve this Doc View Source IsConstant Declaration public bool IsConstant { get; } Property Value Type Description Boolean | Improve this Doc View Source Item[Int32] Declaration public double this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Double | Improve this Doc View Source Length Declaration public double Length { get; } Property Value Type Description Double | Improve this Doc View Source LengthSquared Declaration public double LengthSquared { get; } Property Value Type Description Double Methods | Improve this Doc View Source Clamp(Double) clamp value f to interval [a,b] Declaration public double Clamp(double f) Parameters Type Name Description Double f Returns Type Description Double | Improve this Doc View Source Contain(Double) Declaration public void Contain(double d) Parameters Type Name Description Double d | Improve this Doc View Source Contains(Double) Declaration public bool Contains(double d) Parameters Type Name Description Double d Returns Type Description Boolean | Improve this Doc View Source Dist(Interval1d) Declaration public double Dist(Interval1d o) Parameters Type Name Description Interval1d o Returns Type Description Double | Improve this Doc View Source GetT(Double) Convert value into (clamped) t value in range [0,1] Declaration public double GetT(double value) Parameters Type Name Description Double value Returns Type Description Double | Improve this Doc View Source Interpolate(Double) interpolate between a and b using value t in range [0,1] Declaration public double Interpolate(double t) Parameters Type Name Description Double t Returns Type Description Double | Improve this Doc View Source IntersectionWith(ref Interval1d) Declaration public Interval1d IntersectionWith(ref Interval1d o) Parameters Type Name Description Interval1d o Returns Type Description Interval1d | Improve this Doc View Source Overlaps(Interval1d) Declaration public bool Overlaps(Interval1d o) Parameters Type Name Description Interval1d o Returns Type Description Boolean | Improve this Doc View Source Set(Interval1d) Declaration public void Set(Interval1d o) Parameters Type Name Description Interval1d o | Improve this Doc View Source Set(Double, Double) Declaration public void Set(double fA, double fB) Parameters Type Name Description Double fA Double fB | Improve this Doc View Source SquaredDist(Interval1d) Declaration public double SquaredDist(Interval1d o) Parameters Type Name Description Interval1d o Returns Type Description Double | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() | Improve this Doc View Source Unsorted(Double, Double) Declaration public static Interval1d Unsorted(double x, double y) Parameters Type Name Description Double x Double y Returns Type Description Interval1d Operators | Improve this Doc View Source Addition(Interval1d, Double) Declaration public static Interval1d operator +(Interval1d a, double f) Parameters Type Name Description Interval1d a Double f Returns Type Description Interval1d | Improve this Doc View Source Multiply(Interval1d, Double) Declaration public static Interval1d operator *(Interval1d a, double f) Parameters Type Name Description Interval1d a Double f Returns Type Description Interval1d | Improve this Doc View Source Subtraction(Interval1d, Double) Declaration public static Interval1d operator -(Interval1d a, double f) Parameters Type Name Description Interval1d a Double f Returns Type Description Interval1d | Improve this Doc View Source UnaryNegation(Interval1d) Declaration public static Interval1d operator -(Interval1d v) Parameters Type Name Description Interval1d v Returns Type Description Interval1d"
  },
  "api/g3.Interval1i.html": {
    "href": "api/g3.Interval1i.html",
    "title": "Struct Interval1i | ViRGIS VR GIS",
    "keywords": "Struct Interval1i Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Interval1i : IEnumerable<int>, IEnumerable Constructors | Improve this Doc View Source Interval1i(Interval1i) Declaration public Interval1i(Interval1i copy) Parameters Type Name Description Interval1i copy | Improve this Doc View Source Interval1i(Int32) Declaration public Interval1i(int f) Parameters Type Name Description Int32 f | Improve this Doc View Source Interval1i(Int32, Int32) Declaration public Interval1i(int x, int y) Parameters Type Name Description Int32 x Int32 y | Improve this Doc View Source Interval1i(Int32[]) Declaration public Interval1i(int[] v2) Parameters Type Name Description Int32 [] v2 Fields | Improve this Doc View Source a Declaration public int a Field Value Type Description Int32 | Improve this Doc View Source b Declaration public int b Field Value Type Description Int32 | Improve this Doc View Source Empty Declaration public static readonly Interval1i Empty Field Value Type Description Interval1i | Improve this Doc View Source Infinite Declaration public static readonly Interval1i Infinite Field Value Type Description Interval1i | Improve this Doc View Source Zero Declaration public static readonly Interval1i Zero Field Value Type Description Interval1i Properties | Improve this Doc View Source Center Declaration public int Center { get; } Property Value Type Description Int32 | Improve this Doc View Source Item[Int32] Declaration public int this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Int32 | Improve this Doc View Source Length Declaration public int Length { get; } Property Value Type Description Int32 | Improve this Doc View Source LengthSquared Declaration public int LengthSquared { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Contain(Int32) Declaration public void Contain(int d) Parameters Type Name Description Int32 d | Improve this Doc View Source Contains(Int32) Declaration public bool Contains(int d) Parameters Type Name Description Int32 d Returns Type Description Boolean | Improve this Doc View Source Dist(Interval1i) Declaration public int Dist(Interval1i o) Parameters Type Name Description Interval1i o Returns Type Description Int32 | Improve this Doc View Source FromToInclusive(Int32, Int32) construct interval [a, b] Declaration public static Interval1i FromToInclusive(int a, int b) Parameters Type Name Description Int32 a Int32 b Returns Type Description Interval1i | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<int> GetEnumerator() Returns Type Description IEnumerator < Int32 > | Improve this Doc View Source Overlaps(Interval1i) Declaration public bool Overlaps(Interval1i o) Parameters Type Name Description Interval1i o Returns Type Description Boolean | Improve this Doc View Source Range(Int32) construct interval [0, N-1] Declaration public static Interval1i Range(int N) Parameters Type Name Description Int32 N Returns Type Description Interval1i | Improve this Doc View Source Range(Int32, Int32) construct interval [start, start+N-1] Declaration public static Interval1i Range(int start, int N) Parameters Type Name Description Int32 start Int32 N Returns Type Description Interval1i | Improve this Doc View Source RangeInclusive(Int32) construct interval [0, N-1] Declaration public static Interval1i RangeInclusive(int N) Parameters Type Name Description Int32 N Returns Type Description Interval1i | Improve this Doc View Source Set(Interval1i) Declaration public void Set(Interval1i o) Parameters Type Name Description Interval1i o | Improve this Doc View Source Set(Int32, Int32) Declaration public void Set(int fA, int fB) Parameters Type Name Description Int32 fA Int32 fB | Improve this Doc View Source SquaredDist(Interval1i) Declaration public int SquaredDist(Interval1i o) Parameters Type Name Description Interval1i o Returns Type Description Int32 | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators | Improve this Doc View Source Addition(Interval1i, Int32) Declaration public static Interval1i operator +(Interval1i a, int f) Parameters Type Name Description Interval1i a Int32 f Returns Type Description Interval1i | Improve this Doc View Source Multiply(Interval1i, Int32) Declaration public static Interval1i operator *(Interval1i a, int f) Parameters Type Name Description Interval1i a Int32 f Returns Type Description Interval1i | Improve this Doc View Source Subtraction(Interval1i, Int32) Declaration public static Interval1i operator -(Interval1i a, int f) Parameters Type Name Description Interval1i a Int32 f Returns Type Description Interval1i | Improve this Doc View Source UnaryNegation(Interval1i) Declaration public static Interval1i operator -(Interval1i v) Parameters Type Name Description Interval1i v Returns Type Description Interval1i"
  },
  "api/g3.IntrLine2Line2.html": {
    "href": "api/g3.IntrLine2Line2.html",
    "title": "Class IntrLine2Line2 | ViRGIS VR GIS",
    "keywords": "Class IntrLine2Line2 Inheritance Object IntrLine2Line2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class IntrLine2Line2 Constructors | Improve this Doc View Source IntrLine2Line2(Line2d, Line2d) Declaration public IntrLine2Line2(Line2d l1, Line2d l2) Parameters Type Name Description Line2d l1 Line2d l2 Fields | Improve this Doc View Source Point Declaration public Vector2d Point Field Value Type Description Vector2d | Improve this Doc View Source Quantity Declaration public int Quantity Field Value Type Description Int32 | Improve this Doc View Source Result Declaration public IntersectionResult Result Field Value Type Description IntersectionResult | Improve this Doc View Source Segment1Parameter Declaration public double Segment1Parameter Field Value Type Description Double | Improve this Doc View Source Segment2Parameter Declaration public double Segment2Parameter Field Value Type Description Double | Improve this Doc View Source Type Declaration public IntersectionType Type Field Value Type Description IntersectionType Properties | Improve this Doc View Source DotThreshold Declaration public double DotThreshold { get; set; } Property Value Type Description Double | Improve this Doc View Source IsSimpleIntersection Declaration public bool IsSimpleIntersection { get; } Property Value Type Description Boolean | Improve this Doc View Source Line1 Declaration public Line2d Line1 { get; set; } Property Value Type Description Line2d | Improve this Doc View Source Line2 Declaration public Line2d Line2 { get; set; } Property Value Type Description Line2d Methods | Improve this Doc View Source Classify(Vector2d, Vector2d, Vector2d, Vector2d, Double, ref Vector2d) Declaration public static IntersectionType Classify(Vector2d P0, Vector2d D0, Vector2d P1, Vector2d D1, double dotThreshold, ref Vector2d s) Parameters Type Name Description Vector2d P0 Vector2d D0 Vector2d P1 Vector2d D1 Double dotThreshold Vector2d s Returns Type Description IntersectionType | Improve this Doc View Source Compute() Declaration public IntrLine2Line2 Compute() Returns Type Description IntrLine2Line2 | Improve this Doc View Source Find() Declaration public bool Find() Returns Type Description Boolean"
  },
  "api/g3.IntrLine2Segment2.html": {
    "href": "api/g3.IntrLine2Segment2.html",
    "title": "Class IntrLine2Segment2 | ViRGIS VR GIS",
    "keywords": "Class IntrLine2Segment2 Inheritance Object IntrLine2Segment2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class IntrLine2Segment2 Constructors | Improve this Doc View Source IntrLine2Segment2(Line2d, Segment2d) Declaration public IntrLine2Segment2(Line2d line, Segment2d seg) Parameters Type Name Description Line2d line Segment2d seg Fields | Improve this Doc View Source Parameter Parameter along line, only set if Quanityt = 1 Declaration public double Parameter Field Value Type Description Double | Improve this Doc View Source Point Point on line, only set if Quantity = 1 Declaration public Vector2d Point Field Value Type Description Vector2d | Improve this Doc View Source Quantity Declaration public int Quantity Field Value Type Description Int32 | Improve this Doc View Source Result Declaration public IntersectionResult Result Field Value Type Description IntersectionResult | Improve this Doc View Source Type Declaration public IntersectionType Type Field Value Type Description IntersectionType Properties | Improve this Doc View Source DotThreshold Declaration public double DotThreshold { get; set; } Property Value Type Description Double | Improve this Doc View Source IntervalThreshold Declaration public double IntervalThreshold { get; set; } Property Value Type Description Double | Improve this Doc View Source IsSimpleIntersection Declaration public bool IsSimpleIntersection { get; } Property Value Type Description Boolean | Improve this Doc View Source Line Declaration public Line2d Line { get; set; } Property Value Type Description Line2d | Improve this Doc View Source Segment Declaration public Segment2d Segment { get; set; } Property Value Type Description Segment2d Methods | Improve this Doc View Source Compute() Declaration public IntrLine2Segment2 Compute() Returns Type Description IntrLine2Segment2 | Improve this Doc View Source Find() Declaration public bool Find() Returns Type Description Boolean"
  },
  "api/g3.IntrLine2Triangle2.html": {
    "href": "api/g3.IntrLine2Triangle2.html",
    "title": "Class IntrLine2Triangle2 | ViRGIS VR GIS",
    "keywords": "Class IntrLine2Triangle2 Inheritance Object IntrLine2Triangle2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class IntrLine2Triangle2 Constructors | Improve this Doc View Source IntrLine2Triangle2(Line2d, Triangle2d) Declaration public IntrLine2Triangle2(Line2d l, Triangle2d t) Parameters Type Name Description Line2d l Triangle2d t Fields | Improve this Doc View Source Param0 Declaration public double Param0 Field Value Type Description Double | Improve this Doc View Source Param1 Declaration public double Param1 Field Value Type Description Double | Improve this Doc View Source Point0 Declaration public Vector2d Point0 Field Value Type Description Vector2d | Improve this Doc View Source Point1 Declaration public Vector2d Point1 Field Value Type Description Vector2d | Improve this Doc View Source Quantity Declaration public int Quantity Field Value Type Description Int32 | Improve this Doc View Source Result Declaration public IntersectionResult Result Field Value Type Description IntersectionResult | Improve this Doc View Source Type Declaration public IntersectionType Type Field Value Type Description IntersectionType Properties | Improve this Doc View Source IsSimpleIntersection Declaration public bool IsSimpleIntersection { get; } Property Value Type Description Boolean | Improve this Doc View Source Line Declaration public Line2d Line { get; set; } Property Value Type Description Line2d | Improve this Doc View Source Triangle Declaration public Triangle2d Triangle { get; set; } Property Value Type Description Triangle2d Methods | Improve this Doc View Source Compute() Declaration public IntrLine2Triangle2 Compute() Returns Type Description IntrLine2Triangle2 | Improve this Doc View Source Find() Declaration public bool Find() Returns Type Description Boolean | Improve this Doc View Source GetInterval(Vector2d, Vector2d, Triangle2d, Vector3d, Vector3i, ref Vector2d) Declaration public static void GetInterval(Vector2d origin, Vector2d direction, Triangle2d tri, Vector3d dist, Vector3i sign, ref Vector2d param) Parameters Type Name Description Vector2d origin Vector2d direction Triangle2d tri Vector3d dist Vector3i sign Vector2d param | Improve this Doc View Source TriangleLineRelations(Vector2d, Vector2d, Triangle2d, ref Vector3d, ref Vector3i, ref Int32, ref Int32, ref Int32) Declaration public static void TriangleLineRelations(Vector2d origin, Vector2d direction, Triangle2d tri, ref Vector3d dist, ref Vector3i sign, ref int positive, ref int negative, ref int zero) Parameters Type Name Description Vector2d origin Vector2d direction Triangle2d tri Vector3d dist Vector3i sign Int32 positive Int32 negative Int32 zero"
  },
  "api/g3.IntrLine3AxisAlignedBox3.html": {
    "href": "api/g3.IntrLine3AxisAlignedBox3.html",
    "title": "Class IntrLine3AxisAlignedBox3 | ViRGIS VR GIS",
    "keywords": "Class IntrLine3AxisAlignedBox3 Inheritance Object IntrLine3AxisAlignedBox3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class IntrLine3AxisAlignedBox3 Constructors | Improve this Doc View Source IntrLine3AxisAlignedBox3(Line3d, AxisAlignedBox3d) Declaration public IntrLine3AxisAlignedBox3(Line3d l, AxisAlignedBox3d b) Parameters Type Name Description Line3d l AxisAlignedBox3d b Fields | Improve this Doc View Source LineParam0 Declaration public double LineParam0 Field Value Type Description Double | Improve this Doc View Source LineParam1 Declaration public double LineParam1 Field Value Type Description Double | Improve this Doc View Source Point0 Declaration public Vector3d Point0 Field Value Type Description Vector3d | Improve this Doc View Source Point1 Declaration public Vector3d Point1 Field Value Type Description Vector3d | Improve this Doc View Source Quantity Declaration public int Quantity Field Value Type Description Int32 | Improve this Doc View Source Result Declaration public IntersectionResult Result Field Value Type Description IntersectionResult | Improve this Doc View Source Type Declaration public IntersectionType Type Field Value Type Description IntersectionType Properties | Improve this Doc View Source Box Declaration public AxisAlignedBox3d Box { get; set; } Property Value Type Description AxisAlignedBox3d | Improve this Doc View Source IsSimpleIntersection Declaration public bool IsSimpleIntersection { get; } Property Value Type Description Boolean | Improve this Doc View Source Line Declaration public Line3d Line { get; set; } Property Value Type Description Line3d Methods | Improve this Doc View Source Clip(Double, Double, ref Double, ref Double) Declaration public static bool Clip(double denom, double numer, ref double t0, ref double t1) Parameters Type Name Description Double denom Double numer Double t0 Double t1 Returns Type Description Boolean | Improve this Doc View Source Compute() Declaration public IntrLine3AxisAlignedBox3 Compute() Returns Type Description IntrLine3AxisAlignedBox3 | Improve this Doc View Source DoClipping(ref Double, ref Double, ref Vector3d, ref Vector3d, ref AxisAlignedBox3d, Boolean, ref Int32, ref Vector3d, ref Vector3d, ref IntersectionType) Declaration public static bool DoClipping(ref double t0, ref double t1, ref Vector3d origin, ref Vector3d direction, ref AxisAlignedBox3d box, bool solid, ref int quantity, ref Vector3d point0, ref Vector3d point1, ref IntersectionType intrType) Parameters Type Name Description Double t0 Double t1 Vector3d origin Vector3d direction AxisAlignedBox3d box Boolean solid Int32 quantity Vector3d point0 Vector3d point1 IntersectionType intrType Returns Type Description Boolean | Improve this Doc View Source Find() Declaration public bool Find() Returns Type Description Boolean | Improve this Doc View Source Test() Declaration public bool Test() Returns Type Description Boolean"
  },
  "api/g3.IntrLine3Box3.html": {
    "href": "api/g3.IntrLine3Box3.html",
    "title": "Class IntrLine3Box3 | ViRGIS VR GIS",
    "keywords": "Class IntrLine3Box3 Inheritance Object IntrLine3Box3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class IntrLine3Box3 Constructors | Improve this Doc View Source IntrLine3Box3(Line3d, Box3d) Declaration public IntrLine3Box3(Line3d l, Box3d b) Parameters Type Name Description Line3d l Box3d b Fields | Improve this Doc View Source LineParam0 Declaration public double LineParam0 Field Value Type Description Double | Improve this Doc View Source LineParam1 Declaration public double LineParam1 Field Value Type Description Double | Improve this Doc View Source Point0 Declaration public Vector3d Point0 Field Value Type Description Vector3d | Improve this Doc View Source Point1 Declaration public Vector3d Point1 Field Value Type Description Vector3d | Improve this Doc View Source Quantity Declaration public int Quantity Field Value Type Description Int32 | Improve this Doc View Source Result Declaration public IntersectionResult Result Field Value Type Description IntersectionResult | Improve this Doc View Source Type Declaration public IntersectionType Type Field Value Type Description IntersectionType Properties | Improve this Doc View Source Box Declaration public Box3d Box { get; set; } Property Value Type Description Box3d | Improve this Doc View Source IsSimpleIntersection Declaration public bool IsSimpleIntersection { get; } Property Value Type Description Boolean | Improve this Doc View Source Line Declaration public Line3d Line { get; set; } Property Value Type Description Line3d Methods | Improve this Doc View Source Clip(Double, Double, ref Double, ref Double) Declaration public static bool Clip(double denom, double numer, ref double t0, ref double t1) Parameters Type Name Description Double denom Double numer Double t0 Double t1 Returns Type Description Boolean | Improve this Doc View Source Compute() Declaration public IntrLine3Box3 Compute() Returns Type Description IntrLine3Box3 | Improve this Doc View Source DoClipping(ref Double, ref Double, Vector3d, Vector3d, Box3d, Boolean, ref Int32, ref Vector3d, ref Vector3d, ref IntersectionType) Declaration public static bool DoClipping(ref double t0, ref double t1, Vector3d origin, Vector3d direction, Box3d box, bool solid, ref int quantity, ref Vector3d point0, ref Vector3d point1, ref IntersectionType intrType) Parameters Type Name Description Double t0 Double t1 Vector3d origin Vector3d direction Box3d box Boolean solid Int32 quantity Vector3d point0 Vector3d point1 IntersectionType intrType Returns Type Description Boolean | Improve this Doc View Source Find() Declaration public bool Find() Returns Type Description Boolean | Improve this Doc View Source Test() Declaration public bool Test() Returns Type Description Boolean"
  },
  "api/g3.IntrRay3AxisAlignedBox3.html": {
    "href": "api/g3.IntrRay3AxisAlignedBox3.html",
    "title": "Class IntrRay3AxisAlignedBox3 | ViRGIS VR GIS",
    "keywords": "Class IntrRay3AxisAlignedBox3 Inheritance Object IntrRay3AxisAlignedBox3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class IntrRay3AxisAlignedBox3 Constructors | Improve this Doc View Source IntrRay3AxisAlignedBox3(Ray3d, AxisAlignedBox3d) Declaration public IntrRay3AxisAlignedBox3(Ray3d r, AxisAlignedBox3d b) Parameters Type Name Description Ray3d r AxisAlignedBox3d b Fields | Improve this Doc View Source Point0 Declaration public Vector3d Point0 Field Value Type Description Vector3d | Improve this Doc View Source Point1 Declaration public Vector3d Point1 Field Value Type Description Vector3d | Improve this Doc View Source Quantity Declaration public int Quantity Field Value Type Description Int32 | Improve this Doc View Source RayParam0 Declaration public double RayParam0 Field Value Type Description Double | Improve this Doc View Source RayParam1 Declaration public double RayParam1 Field Value Type Description Double | Improve this Doc View Source Result Declaration public IntersectionResult Result Field Value Type Description IntersectionResult | Improve this Doc View Source Type Declaration public IntersectionType Type Field Value Type Description IntersectionType Properties | Improve this Doc View Source Box Declaration public AxisAlignedBox3d Box { get; set; } Property Value Type Description AxisAlignedBox3d | Improve this Doc View Source IsSimpleIntersection Declaration public bool IsSimpleIntersection { get; } Property Value Type Description Boolean | Improve this Doc View Source Ray Declaration public Ray3d Ray { get; set; } Property Value Type Description Ray3d Methods | Improve this Doc View Source Compute() Declaration public IntrRay3AxisAlignedBox3 Compute() Returns Type Description IntrRay3AxisAlignedBox3 | Improve this Doc View Source Find() Declaration public bool Find() Returns Type Description Boolean | Improve this Doc View Source FindRayIntersectT(ref Ray3d, ref AxisAlignedBox3d, out Double) Find intersection of ray with AABB, without having to construct any new classes. Returns ray T-value of first intersection (or double.MaxVlaue on miss) Declaration public static bool FindRayIntersectT(ref Ray3d ray, ref AxisAlignedBox3d box, out double RayParam) Parameters Type Name Description Ray3d ray AxisAlignedBox3d box Double RayParam Returns Type Description Boolean | Improve this Doc View Source Intersects(ref Ray3d, ref AxisAlignedBox3d, Double) test if ray intersects box. expandExtents allows you to scale box for hit-testing purposes. Declaration public static bool Intersects(ref Ray3d ray, ref AxisAlignedBox3d box, double expandExtents = 0) Parameters Type Name Description Ray3d ray AxisAlignedBox3d box Double expandExtents Returns Type Description Boolean | Improve this Doc View Source Test() Declaration public bool Test() Returns Type Description Boolean"
  },
  "api/g3.IntrRay3Box3.html": {
    "href": "api/g3.IntrRay3Box3.html",
    "title": "Class IntrRay3Box3 | ViRGIS VR GIS",
    "keywords": "Class IntrRay3Box3 Inheritance Object IntrRay3Box3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class IntrRay3Box3 Constructors | Improve this Doc View Source IntrRay3Box3(Ray3d, Box3d) Declaration public IntrRay3Box3(Ray3d r, Box3d b) Parameters Type Name Description Ray3d r Box3d b Fields | Improve this Doc View Source Point0 Declaration public Vector3d Point0 Field Value Type Description Vector3d | Improve this Doc View Source Point1 Declaration public Vector3d Point1 Field Value Type Description Vector3d | Improve this Doc View Source Quantity Declaration public int Quantity Field Value Type Description Int32 | Improve this Doc View Source RayParam0 Declaration public double RayParam0 Field Value Type Description Double | Improve this Doc View Source RayParam1 Declaration public double RayParam1 Field Value Type Description Double | Improve this Doc View Source Result Declaration public IntersectionResult Result Field Value Type Description IntersectionResult | Improve this Doc View Source Type Declaration public IntersectionType Type Field Value Type Description IntersectionType Properties | Improve this Doc View Source Box Declaration public Box3d Box { get; set; } Property Value Type Description Box3d | Improve this Doc View Source IsSimpleIntersection Declaration public bool IsSimpleIntersection { get; } Property Value Type Description Boolean | Improve this Doc View Source Ray Declaration public Ray3d Ray { get; set; } Property Value Type Description Ray3d Methods | Improve this Doc View Source Compute() Declaration public IntrRay3Box3 Compute() Returns Type Description IntrRay3Box3 | Improve this Doc View Source Find() Declaration public bool Find() Returns Type Description Boolean | Improve this Doc View Source Intersects(ref Ray3d, ref Box3d, Double) test if ray intersects box. expandExtents allows you to scale box for hit-testing purposes. Declaration public static bool Intersects(ref Ray3d ray, ref Box3d box, double expandExtents = 0) Parameters Type Name Description Ray3d ray Box3d box Double expandExtents Returns Type Description Boolean | Improve this Doc View Source Test() Declaration public bool Test() Returns Type Description Boolean"
  },
  "api/g3.IntrRay3Triangle3.html": {
    "href": "api/g3.IntrRay3Triangle3.html",
    "title": "Class IntrRay3Triangle3 | ViRGIS VR GIS",
    "keywords": "Class IntrRay3Triangle3 Inheritance Object IntrRay3Triangle3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class IntrRay3Triangle3 Constructors | Improve this Doc View Source IntrRay3Triangle3(Ray3d, Triangle3d) Declaration public IntrRay3Triangle3(Ray3d r, Triangle3d t) Parameters Type Name Description Ray3d r Triangle3d t Fields | Improve this Doc View Source Quantity Declaration public int Quantity Field Value Type Description Int32 | Improve this Doc View Source RayParameter Declaration public double RayParameter Field Value Type Description Double | Improve this Doc View Source Result Declaration public IntersectionResult Result Field Value Type Description IntersectionResult | Improve this Doc View Source TriangleBaryCoords Declaration public Vector3d TriangleBaryCoords Field Value Type Description Vector3d | Improve this Doc View Source Type Declaration public IntersectionType Type Field Value Type Description IntersectionType Properties | Improve this Doc View Source IsSimpleIntersection Declaration public bool IsSimpleIntersection { get; } Property Value Type Description Boolean | Improve this Doc View Source Ray Declaration public Ray3d Ray { get; set; } Property Value Type Description Ray3d | Improve this Doc View Source Triangle Declaration public Triangle3d Triangle { get; set; } Property Value Type Description Triangle3d Methods | Improve this Doc View Source Compute() Declaration public IntrRay3Triangle3 Compute() Returns Type Description IntrRay3Triangle3 | Improve this Doc View Source Find() Declaration public bool Find() Returns Type Description Boolean | Improve this Doc View Source Intersects(ref Ray3d, ref Vector3d, ref Vector3d, ref Vector3d, out Double) minimal intersection test, computes ray-t Declaration public static bool Intersects(ref Ray3d ray, ref Vector3d V0, ref Vector3d V1, ref Vector3d V2, out double rayT) Parameters Type Name Description Ray3d ray Vector3d V0 Vector3d V1 Vector3d V2 Double rayT Returns Type Description Boolean"
  },
  "api/g3.IntrSegment2Segment2.html": {
    "href": "api/g3.IntrSegment2Segment2.html",
    "title": "Class IntrSegment2Segment2 | ViRGIS VR GIS",
    "keywords": "Class IntrSegment2Segment2 Inheritance Object IntrSegment2Segment2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class IntrSegment2Segment2 Constructors | Improve this Doc View Source IntrSegment2Segment2(Segment2d, Segment2d) Declaration public IntrSegment2Segment2(Segment2d seg1, Segment2d seg2) Parameters Type Name Description Segment2d seg1 Segment2d seg2 Fields | Improve this Doc View Source Parameter0 Declaration public double Parameter0 Field Value Type Description Double | Improve this Doc View Source Parameter1 Declaration public double Parameter1 Field Value Type Description Double | Improve this Doc View Source Point0 Declaration public Vector2d Point0 Field Value Type Description Vector2d | Improve this Doc View Source Point1 Declaration public Vector2d Point1 Field Value Type Description Vector2d | Improve this Doc View Source Quantity Declaration public int Quantity Field Value Type Description Int32 | Improve this Doc View Source Result Declaration public IntersectionResult Result Field Value Type Description IntersectionResult | Improve this Doc View Source Type Declaration public IntersectionType Type Field Value Type Description IntersectionType Properties | Improve this Doc View Source DotThreshold Declaration public double DotThreshold { get; set; } Property Value Type Description Double | Improve this Doc View Source IntervalThreshold Declaration public double IntervalThreshold { get; set; } Property Value Type Description Double | Improve this Doc View Source IsSimpleIntersection Declaration public bool IsSimpleIntersection { get; } Property Value Type Description Boolean | Improve this Doc View Source Segment1 Declaration public Segment2d Segment1 { get; set; } Property Value Type Description Segment2d | Improve this Doc View Source Segment2 Declaration public Segment2d Segment2 { get; set; } Property Value Type Description Segment2d Methods | Improve this Doc View Source Compute() Declaration public IntrSegment2Segment2 Compute() Returns Type Description IntrSegment2Segment2 | Improve this Doc View Source Find() Declaration public bool Find() Returns Type Description Boolean"
  },
  "api/g3.IntrSegment2Triangle2.html": {
    "href": "api/g3.IntrSegment2Triangle2.html",
    "title": "Class IntrSegment2Triangle2 | ViRGIS VR GIS",
    "keywords": "Class IntrSegment2Triangle2 Inheritance Object IntrSegment2Triangle2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class IntrSegment2Triangle2 Constructors | Improve this Doc View Source IntrSegment2Triangle2(Segment2d, Triangle2d) Declaration public IntrSegment2Triangle2(Segment2d s, Triangle2d t) Parameters Type Name Description Segment2d s Triangle2d t Fields | Improve this Doc View Source Param0 Declaration public double Param0 Field Value Type Description Double | Improve this Doc View Source Param1 Declaration public double Param1 Field Value Type Description Double | Improve this Doc View Source Point0 Declaration public Vector2d Point0 Field Value Type Description Vector2d | Improve this Doc View Source Point1 Declaration public Vector2d Point1 Field Value Type Description Vector2d | Improve this Doc View Source Quantity Declaration public int Quantity Field Value Type Description Int32 | Improve this Doc View Source Result Declaration public IntersectionResult Result Field Value Type Description IntersectionResult | Improve this Doc View Source Type Declaration public IntersectionType Type Field Value Type Description IntersectionType Properties | Improve this Doc View Source IsSimpleIntersection Declaration public bool IsSimpleIntersection { get; } Property Value Type Description Boolean | Improve this Doc View Source Segment Declaration public Segment2d Segment { get; set; } Property Value Type Description Segment2d | Improve this Doc View Source Triangle Declaration public Triangle2d Triangle { get; set; } Property Value Type Description Triangle2d Methods | Improve this Doc View Source Compute() Declaration public IntrSegment2Triangle2 Compute() Returns Type Description IntrSegment2Triangle2 | Improve this Doc View Source Find() Declaration public bool Find() Returns Type Description Boolean"
  },
  "api/g3.IntrSegment3Box3.html": {
    "href": "api/g3.IntrSegment3Box3.html",
    "title": "Class IntrSegment3Box3 | ViRGIS VR GIS",
    "keywords": "Class IntrSegment3Box3 Inheritance Object IntrSegment3Box3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class IntrSegment3Box3 Constructors | Improve this Doc View Source IntrSegment3Box3(Segment3d, Box3d, Boolean) Declaration public IntrSegment3Box3(Segment3d s, Box3d b, bool solidBox) Parameters Type Name Description Segment3d s Box3d b Boolean solidBox Fields | Improve this Doc View Source Point0 Declaration public Vector3d Point0 Field Value Type Description Vector3d | Improve this Doc View Source Point1 Declaration public Vector3d Point1 Field Value Type Description Vector3d | Improve this Doc View Source Quantity Declaration public int Quantity Field Value Type Description Int32 | Improve this Doc View Source Result Declaration public IntersectionResult Result Field Value Type Description IntersectionResult | Improve this Doc View Source SegmentParam0 Declaration public double SegmentParam0 Field Value Type Description Double | Improve this Doc View Source SegmentParam1 Declaration public double SegmentParam1 Field Value Type Description Double | Improve this Doc View Source Type Declaration public IntersectionType Type Field Value Type Description IntersectionType Properties | Improve this Doc View Source Box Declaration public Box3d Box { get; set; } Property Value Type Description Box3d | Improve this Doc View Source IsSimpleIntersection Declaration public bool IsSimpleIntersection { get; } Property Value Type Description Boolean | Improve this Doc View Source Segment Declaration public Segment3d Segment { get; set; } Property Value Type Description Segment3d | Improve this Doc View Source Solid Declaration public bool Solid { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source Clip(Double, Double, ref Double, ref Double) Declaration public static bool Clip(double denom, double numer, ref double t0, ref double t1) Parameters Type Name Description Double denom Double numer Double t0 Double t1 Returns Type Description Boolean | Improve this Doc View Source Compute() Declaration public IntrSegment3Box3 Compute() Returns Type Description IntrSegment3Box3 | Improve this Doc View Source DoClipping(ref Double, ref Double, Vector3d, Vector3d, Box3d, Boolean, ref Int32, ref Vector3d, ref Vector3d, ref IntersectionType) Declaration public static bool DoClipping(ref double t0, ref double t1, Vector3d origin, Vector3d direction, Box3d box, bool solid, ref int quantity, ref Vector3d point0, ref Vector3d point1, ref IntersectionType intrType) Parameters Type Name Description Double t0 Double t1 Vector3d origin Vector3d direction Box3d box Boolean solid Int32 quantity Vector3d point0 Vector3d point1 IntersectionType intrType Returns Type Description Boolean | Improve this Doc View Source Find() Declaration public bool Find() Returns Type Description Boolean | Improve this Doc View Source Test() Declaration public bool Test() Returns Type Description Boolean"
  },
  "api/g3.IntrTriangle2Triangle2.html": {
    "href": "api/g3.IntrTriangle2Triangle2.html",
    "title": "Class IntrTriangle2Triangle2 | ViRGIS VR GIS",
    "keywords": "Class IntrTriangle2Triangle2 Inheritance Object IntrTriangle2Triangle2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class IntrTriangle2Triangle2 Constructors | Improve this Doc View Source IntrTriangle2Triangle2(Triangle2d, Triangle2d) Declaration public IntrTriangle2Triangle2(Triangle2d t0, Triangle2d t1) Parameters Type Name Description Triangle2d t0 Triangle2d t1 Fields | Improve this Doc View Source Points Declaration public Vector2d[] Points Field Value Type Description Vector2d [] | Improve this Doc View Source Quantity Declaration public int Quantity Field Value Type Description Int32 | Improve this Doc View Source Result Declaration public IntersectionResult Result Field Value Type Description IntersectionResult | Improve this Doc View Source Type Declaration public IntersectionType Type Field Value Type Description IntersectionType Properties | Improve this Doc View Source IsSimpleIntersection Declaration public bool IsSimpleIntersection { get; } Property Value Type Description Boolean | Improve this Doc View Source Triangle0 Declaration public Triangle2d Triangle0 { get; set; } Property Value Type Description Triangle2d | Improve this Doc View Source Triangle1 Declaration public Triangle2d Triangle1 { get; set; } Property Value Type Description Triangle2d Methods | Improve this Doc View Source ClipConvexPolygonAgainstLine(Vector2d, Double, ref Int32, ref Vector2d[]) Declaration public static void ClipConvexPolygonAgainstLine(Vector2d N, double c, ref int quantity, ref Vector2d[] V) Parameters Type Name Description Vector2d N Double c Int32 quantity Vector2d [] V | Improve this Doc View Source Compute() Declaration public IntrTriangle2Triangle2 Compute() Returns Type Description IntrTriangle2Triangle2 | Improve this Doc View Source Find() Declaration public bool Find() Returns Type Description Boolean | Improve this Doc View Source Test() Declaration public bool Test() Returns Type Description Boolean | Improve this Doc View Source WhichSide(Triangle2d, Vector2d, Vector2d) Declaration public static int WhichSide(Triangle2d V, Vector2d P, Vector2d D) Parameters Type Name Description Triangle2d V Vector2d P Vector2d D Returns Type Description Int32"
  },
  "api/g3.IntrTriangle3Triangle3.html": {
    "href": "api/g3.IntrTriangle3Triangle3.html",
    "title": "Class IntrTriangle3Triangle3 | ViRGIS VR GIS",
    "keywords": "Class IntrTriangle3Triangle3 Inheritance Object IntrTriangle3Triangle3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class IntrTriangle3Triangle3 Constructors | Improve this Doc View Source IntrTriangle3Triangle3(Triangle3d, Triangle3d) Declaration public IntrTriangle3Triangle3(Triangle3d t0, Triangle3d t1) Parameters Type Name Description Triangle3d t0 Triangle3d t1 Fields | Improve this Doc View Source Points Declaration public Vector3dTuple3 Points Field Value Type Description Vector3dTuple3 | Improve this Doc View Source PolygonPoints Declaration public Vector3d[] PolygonPoints Field Value Type Description Vector3d [] | Improve this Doc View Source Quantity Declaration public int Quantity Field Value Type Description Int32 | Improve this Doc View Source ReportCoplanarIntersection Declaration public bool ReportCoplanarIntersection Field Value Type Description Boolean | Improve this Doc View Source Result Declaration public IntersectionResult Result Field Value Type Description IntersectionResult | Improve this Doc View Source Type Declaration public IntersectionType Type Field Value Type Description IntersectionType Properties | Improve this Doc View Source Triangle0 Declaration public Triangle3d Triangle0 { get; set; } Property Value Type Description Triangle3d | Improve this Doc View Source Triangle1 Declaration public Triangle3d Triangle1 { get; set; } Property Value Type Description Triangle3d Methods | Improve this Doc View Source Compute() Declaration public IntrTriangle3Triangle3 Compute() Returns Type Description IntrTriangle3Triangle3 | Improve this Doc View Source Find() Declaration public bool Find() Returns Type Description Boolean | Improve this Doc View Source Intersects(ref Triangle3d, ref Triangle3d) Declaration public static bool Intersects(ref Triangle3d triangle0, ref Triangle3d triangle1) Parameters Type Name Description Triangle3d triangle0 Triangle3d triangle1 Returns Type Description Boolean | Improve this Doc View Source ProjectOntoAxis(ref Triangle3d, ref Vector3d, out Double, out Double) Declaration public static void ProjectOntoAxis(ref Triangle3d triangle, ref Vector3d axis, out double fmin, out double fmax) Parameters Type Name Description Triangle3d triangle Vector3d axis Double fmin Double fmax | Improve this Doc View Source Test() Declaration public bool Test() Returns Type Description Boolean | Improve this Doc View Source TrianglePlaneRelations(ref Triangle3d, ref Plane3d, out Vector3d, out Index3i, out Int32, out Int32, out Int32) Declaration public static void TrianglePlaneRelations(ref Triangle3d triangle, ref Plane3d plane, out Vector3d distance, out Index3i sign, out int positive, out int negative, out int zero) Parameters Type Name Description Triangle3d triangle Plane3d plane Vector3d distance Index3i sign Int32 positive Int32 negative Int32 zero"
  },
  "api/g3.IntSequence.html": {
    "href": "api/g3.IntSequence.html",
    "title": "Struct IntSequence | ViRGIS VR GIS",
    "keywords": "Struct IntSequence IList wrapper for an Interval1i, ie sequential list of integers Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct IntSequence : IList<int>, ICollection<int>, IEnumerable<int>, IEnumerable Constructors | Improve this Doc View Source IntSequence(Interval1i) Declaration public IntSequence(Interval1i ival) Parameters Type Name Description Interval1i ival | Improve this Doc View Source IntSequence(Int32, Int32) Declaration public IntSequence(int iStart, int iEnd) Parameters Type Name Description Int32 iStart Int32 iEnd Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean | Improve this Doc View Source Item[Int32] Declaration public int this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Int32 Methods | Improve this Doc View Source Add(Int32) Declaration public void Add(int item) Parameters Type Name Description Int32 item | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source Contains(Int32) Declaration public bool Contains(int item) Parameters Type Name Description Int32 item Returns Type Description Boolean | Improve this Doc View Source CopyTo(Int32[], Int32) Declaration public void CopyTo(int[] array, int arrayIndex) Parameters Type Name Description Int32 [] array Int32 arrayIndex | Improve this Doc View Source FromToInclusive(Int32, Int32) construct interval [a, b] Declaration public static IntSequence FromToInclusive(int a, int b) Parameters Type Name Description Int32 a Int32 b Returns Type Description IntSequence | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<int> GetEnumerator() Returns Type Description IEnumerator < Int32 > | Improve this Doc View Source IndexOf(Int32) Declaration public int IndexOf(int item) Parameters Type Name Description Int32 item Returns Type Description Int32 | Improve this Doc View Source Insert(Int32, Int32) Declaration public void Insert(int index, int item) Parameters Type Name Description Int32 index Int32 item | Improve this Doc View Source Range(Int32) construct interval [0, N-1] Declaration public static IntSequence Range(int N) Parameters Type Name Description Int32 N Returns Type Description IntSequence | Improve this Doc View Source Range(Int32, Int32) construct interval [start, start+N-1] Declaration public static IntSequence Range(int start, int N) Parameters Type Name Description Int32 start Int32 N Returns Type Description IntSequence | Improve this Doc View Source RangeInclusive(Int32) construct interval [0, N-1] Declaration public static IntSequence RangeInclusive(int N) Parameters Type Name Description Int32 N Returns Type Description IntSequence | Improve this Doc View Source Remove(Int32) Declaration public bool Remove(int item) Parameters Type Name Description Int32 item Returns Type Description Boolean | Improve this Doc View Source RemoveAt(Int32) Declaration public void RemoveAt(int index) Parameters Type Name Description Int32 index"
  },
  "api/g3.IntTagPair.html": {
    "href": "api/g3.IntTagPair.html",
    "title": "Struct IntTagPair | ViRGIS VR GIS",
    "keywords": "Struct IntTagPair integer type/value pair, packed into 32 bits - 8 for type, 24 for value Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct IntTagPair Constructors | Improve this Doc View Source IntTagPair(Byte, Int32) Declaration public IntTagPair(byte type, int value) Parameters Type Name Description Byte type Int32 value | Improve this Doc View Source IntTagPair(Int32) Declaration public IntTagPair(int combined) Parameters Type Name Description Int32 combined Fields | Improve this Doc View Source type Declaration public byte type Field Value Type Description Byte | Improve this Doc View Source value Declaration public int value Field Value Type Description Int32 Properties | Improve this Doc View Source intValue Declaration public int intValue { get; } Property Value Type Description Int32"
  },
  "api/g3.IntTagSet-1.html": {
    "href": "api/g3.IntTagSet-1.html",
    "title": "Class IntTagSet<T> | ViRGIS VR GIS",
    "keywords": "Class IntTagSet<T> Basic object->integer mapping Inheritance Object IntTagSet<T> Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class IntTagSet<T> Type Parameters Name Description T Constructors | Improve this Doc View Source IntTagSet() Declaration public IntTagSet() Fields | Improve this Doc View Source InvalidTag Declaration public const int InvalidTag = 2147483647 Field Value Type Description Int32 Methods | Improve this Doc View Source Add(T, Int32) Declaration public void Add(T reference, int tag) Parameters Type Name Description T reference Int32 tag | Improve this Doc View Source Get(T) Declaration public int Get(T reference) Parameters Type Name Description T reference Returns Type Description Int32 | Improve this Doc View Source Has(T) Declaration public bool Has(T reference) Parameters Type Name Description T reference Returns Type Description Boolean"
  },
  "api/g3.IOCode.html": {
    "href": "api/g3.IOCode.html",
    "title": "Enum IOCode | ViRGIS VR GIS",
    "keywords": "Enum IOCode Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum IOCode Fields Name Description ComputingInWorkerThread FileAccessError FileParsingError FormatNotSupportedError GarbageDataError GenericReaderError GenericReaderWarning InvalidFilenameError Ok UnknownFormatError WriterError"
  },
  "api/g3.IOReadResult.html": {
    "href": "api/g3.IOReadResult.html",
    "title": "Struct IOReadResult | ViRGIS VR GIS",
    "keywords": "Struct IOReadResult Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct IOReadResult Constructors | Improve this Doc View Source IOReadResult(IOCode, String) Declaration public IOReadResult(IOCode r, string s) Parameters Type Name Description IOCode r String s Fields | Improve this Doc View Source Ok Declaration public static readonly IOReadResult Ok Field Value Type Description IOReadResult Properties | Improve this Doc View Source code Declaration public IOCode code { get; set; } Property Value Type Description IOCode | Improve this Doc View Source message Declaration public string message { get; set; } Property Value Type Description String"
  },
  "api/g3.IOrientedProjectionTarget.html": {
    "href": "api/g3.IOrientedProjectionTarget.html",
    "title": "Interface IOrientedProjectionTarget | ViRGIS VR GIS",
    "keywords": "Interface IOrientedProjectionTarget Inherited Members IProjectionTarget.Project(Vector3d, Int32) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface IOrientedProjectionTarget : IProjectionTarget Methods | Improve this Doc View Source Project(Vector3d, out Vector3d, Int32) Declaration Vector3d Project(Vector3d vPoint, out Vector3d vProjectNormal, int identifier = -1) Parameters Type Name Description Vector3d vPoint Vector3d vProjectNormal Int32 identifier Returns Type Description Vector3d"
  },
  "api/g3.IOWriteResult.html": {
    "href": "api/g3.IOWriteResult.html",
    "title": "Struct IOWriteResult | ViRGIS VR GIS",
    "keywords": "Struct IOWriteResult Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct IOWriteResult Constructors | Improve this Doc View Source IOWriteResult(IOCode, String) Declaration public IOWriteResult(IOCode r, string s) Parameters Type Name Description IOCode r String s Fields | Improve this Doc View Source Ok Declaration public static readonly IOWriteResult Ok Field Value Type Description IOWriteResult Properties | Improve this Doc View Source code Declaration public IOCode code { get; set; } Property Value Type Description IOCode | Improve this Doc View Source message Declaration public string message { get; set; } Property Value Type Description String"
  },
  "api/g3.IParametricCurve2d.html": {
    "href": "api/g3.IParametricCurve2d.html",
    "title": "Interface IParametricCurve2d | ViRGIS VR GIS",
    "keywords": "Interface IParametricCurve2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface IParametricCurve2d Properties | Improve this Doc View Source ArcLength Declaration double ArcLength { get; } Property Value Type Description Double | Improve this Doc View Source HasArcLength Declaration bool HasArcLength { get; } Property Value Type Description Boolean | Improve this Doc View Source IsClosed Declaration bool IsClosed { get; } Property Value Type Description Boolean | Improve this Doc View Source IsTransformable Declaration bool IsTransformable { get; } Property Value Type Description Boolean | Improve this Doc View Source ParamLength Declaration double ParamLength { get; } Property Value Type Description Double Methods | Improve this Doc View Source Clone() Declaration IParametricCurve2d Clone() Returns Type Description IParametricCurve2d | Improve this Doc View Source Reverse() Declaration void Reverse() | Improve this Doc View Source SampleArcLength(Double) Declaration Vector2d SampleArcLength(double a) Parameters Type Name Description Double a Returns Type Description Vector2d | Improve this Doc View Source SampleT(Double) Declaration Vector2d SampleT(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source TangentT(Double) Declaration Vector2d TangentT(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source Transform(ITransform2) Declaration void Transform(ITransform2 xform) Parameters Type Name Description ITransform2 xform"
  },
  "api/g3.IParametricCurve3d.html": {
    "href": "api/g3.IParametricCurve3d.html",
    "title": "Interface IParametricCurve3d | ViRGIS VR GIS",
    "keywords": "Interface IParametricCurve3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface IParametricCurve3d Properties | Improve this Doc View Source ArcLength Declaration double ArcLength { get; } Property Value Type Description Double | Improve this Doc View Source HasArcLength Declaration bool HasArcLength { get; } Property Value Type Description Boolean | Improve this Doc View Source IsClosed Declaration bool IsClosed { get; } Property Value Type Description Boolean | Improve this Doc View Source ParamLength Declaration double ParamLength { get; } Property Value Type Description Double Methods | Improve this Doc View Source Clone() Declaration IParametricCurve3d Clone() Returns Type Description IParametricCurve3d | Improve this Doc View Source Reverse() Declaration void Reverse() | Improve this Doc View Source SampleArcLength(Double) Declaration Vector3d SampleArcLength(double a) Parameters Type Name Description Double a Returns Type Description Vector3d | Improve this Doc View Source SampleT(Double) Declaration Vector3d SampleT(double t) Parameters Type Name Description Double t Returns Type Description Vector3d | Improve this Doc View Source TangentT(Double) Declaration Vector3d TangentT(double t) Parameters Type Name Description Double t Returns Type Description Vector3d"
  },
  "api/g3.IPointSet.html": {
    "href": "api/g3.IPointSet.html",
    "title": "Interface IPointSet | ViRGIS VR GIS",
    "keywords": "Interface IPointSet Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface IPointSet Properties | Improve this Doc View Source HasVertexColors Declaration bool HasVertexColors { get; } Property Value Type Description Boolean | Improve this Doc View Source HasVertexNormals Declaration bool HasVertexNormals { get; } Property Value Type Description Boolean | Improve this Doc View Source MaxVertexID Declaration int MaxVertexID { get; } Property Value Type Description Int32 | Improve this Doc View Source Timestamp Declaration int Timestamp { get; } Property Value Type Description Int32 | Improve this Doc View Source VertexCount Declaration int VertexCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source GetVertex(Int32) Declaration Vector3d GetVertex(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3d | Improve this Doc View Source GetVertexColor(Int32) Declaration Vector3f GetVertexColor(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3f | Improve this Doc View Source GetVertexNormal(Int32) Declaration Vector3f GetVertexNormal(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3f | Improve this Doc View Source IsVertex(Int32) Declaration bool IsVertex(int vID) Parameters Type Name Description Int32 vID Returns Type Description Boolean | Improve this Doc View Source VertexIndices() Declaration IEnumerable<int> VertexIndices() Returns Type Description IEnumerable < Int32 >"
  },
  "api/g3.IProjectionTarget.html": {
    "href": "api/g3.IProjectionTarget.html",
    "title": "Interface IProjectionTarget | ViRGIS VR GIS",
    "keywords": "Interface IProjectionTarget Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface IProjectionTarget Methods | Improve this Doc View Source Project(Vector3d, Int32) Declaration Vector3d Project(Vector3d vPoint, int identifier = -1) Parameters Type Name Description Vector3d vPoint Int32 identifier Returns Type Description Vector3d"
  },
  "api/g3.ISampledCurve3d.html": {
    "href": "api/g3.ISampledCurve3d.html",
    "title": "Interface ISampledCurve3d | ViRGIS VR GIS",
    "keywords": "Interface ISampledCurve3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface ISampledCurve3d Properties | Improve this Doc View Source Closed Declaration bool Closed { get; } Property Value Type Description Boolean | Improve this Doc View Source SegmentCount Declaration int SegmentCount { get; } Property Value Type Description Int32 | Improve this Doc View Source VertexCount Declaration int VertexCount { get; } Property Value Type Description Int32 | Improve this Doc View Source Vertices Declaration IEnumerable<Vector3d> Vertices { get; } Property Value Type Description IEnumerable < Vector3d > Methods | Improve this Doc View Source GetSegment(Int32) Declaration Segment3d GetSegment(int i) Parameters Type Name Description Int32 i Returns Type Description Segment3d | Improve this Doc View Source GetVertex(Int32) Declaration Vector3d GetVertex(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3d"
  },
  "api/g3.ISpatial.html": {
    "href": "api/g3.ISpatial.html",
    "title": "Interface ISpatial | ViRGIS VR GIS",
    "keywords": "Interface ISpatial Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface ISpatial Properties | Improve this Doc View Source SupportsNearestTriangle Declaration bool SupportsNearestTriangle { get; } Property Value Type Description Boolean | Improve this Doc View Source SupportsPointContainment Declaration bool SupportsPointContainment { get; } Property Value Type Description Boolean | Improve this Doc View Source SupportsTriangleRayIntersection Declaration bool SupportsTriangleRayIntersection { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source FindNearestHitTriangle(Ray3d, Double) Find id of triangle intersected by ray, where intersection point is within distance fMaxDist, or return DMesh3.InvalidID if not found Declaration int FindNearestHitTriangle(Ray3d ray, double fMaxDist = 1.7976931348623157E+308) Parameters Type Name Description Ray3d ray Double fMaxDist Returns Type Description Int32 | Improve this Doc View Source FindNearestTriangle(Vector3d, Double) Find id of triangle nearest to p within distance fMaxDist, or return DMesh3.InvalidID if not found Declaration int FindNearestTriangle(Vector3d p, double fMaxDist = 1.7976931348623157E+308) Parameters Type Name Description Vector3d p Double fMaxDist Returns Type Description Int32 | Improve this Doc View Source IsInside(Vector3d) return true if query point is inside mesh Declaration bool IsInside(Vector3d p) Parameters Type Name Description Vector3d p Returns Type Description Boolean"
  },
  "api/g3.ITransform2.html": {
    "href": "api/g3.ITransform2.html",
    "title": "Interface ITransform2 | ViRGIS VR GIS",
    "keywords": "Interface ITransform2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface ITransform2 Methods | Improve this Doc View Source TransformN(Vector2d) Declaration Vector2d TransformN(Vector2d n) Parameters Type Name Description Vector2d n Returns Type Description Vector2d | Improve this Doc View Source TransformP(Vector2d) Declaration Vector2d TransformP(Vector2d p) Parameters Type Name Description Vector2d p Returns Type Description Vector2d | Improve this Doc View Source TransformScalar(Double) Declaration double TransformScalar(double s) Parameters Type Name Description Double s Returns Type Description Double"
  },
  "api/g3.IWrappedCurve3d.html": {
    "href": "api/g3.IWrappedCurve3d.html",
    "title": "Class IWrappedCurve3d | ViRGIS VR GIS",
    "keywords": "Class IWrappedCurve3d Simple sampled-curve wrapper type Inheritance Object IWrappedCurve3d Implements ISampledCurve3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class IWrappedCurve3d : ISampledCurve3d Fields | Improve this Doc View Source VertexList Declaration public IList<Vector3d> VertexList Field Value Type Description IList < Vector3d > Properties | Improve this Doc View Source Closed Declaration public bool Closed { get; set; } Property Value Type Description Boolean | Improve this Doc View Source SegmentCount Declaration public int SegmentCount { get; } Property Value Type Description Int32 | Improve this Doc View Source VertexCount Declaration public int VertexCount { get; } Property Value Type Description Int32 | Improve this Doc View Source Vertices Declaration public IEnumerable<Vector3d> Vertices { get; } Property Value Type Description IEnumerable < Vector3d > Methods | Improve this Doc View Source GetSegment(Int32) Declaration public Segment3d GetSegment(int iSegment) Parameters Type Name Description Int32 iSegment Returns Type Description Segment3d | Improve this Doc View Source GetVertex(Int32) Declaration public Vector3d GetVertex(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3d Implements ISampledCurve3d"
  },
  "api/g3.LaplacianCurveDeformer.html": {
    "href": "api/g3.LaplacianCurveDeformer.html",
    "title": "Class LaplacianCurveDeformer | ViRGIS VR GIS",
    "keywords": "Class LaplacianCurveDeformer Variant of LaplacianMeshDeformer that can be applied to 3D curve. Solve in each dimension can be disabled using .SolveX/Y/Z Currently only supports uniform weights (in Initialize) Inheritance Object LaplacianCurveDeformer Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class LaplacianCurveDeformer Constructors | Improve this Doc View Source LaplacianCurveDeformer(DCurve3) Declaration public LaplacianCurveDeformer(DCurve3 curve) Parameters Type Name Description DCurve3 curve Fields | Improve this Doc View Source ConvergeFailed Declaration public bool ConvergeFailed Field Value Type Description Boolean | Improve this Doc View Source Curve Declaration public DCurve3 Curve Field Value Type Description DCurve3 | Improve this Doc View Source SolveX Declaration public bool SolveX Field Value Type Description Boolean | Improve this Doc View Source SolveY Declaration public bool SolveY Field Value Type Description Boolean | Improve this Doc View Source SolveZ Declaration public bool SolveZ Field Value Type Description Boolean | Improve this Doc View Source UseSoftConstraintNormalEquations Declaration public bool UseSoftConstraintNormalEquations Field Value Type Description Boolean Methods | Improve this Doc View Source ClearConstraints() Declaration public void ClearConstraints() | Improve this Doc View Source Initialize() Declaration public void Initialize() | Improve this Doc View Source IsConstrained(Int32) Declaration public bool IsConstrained(int vID) Parameters Type Name Description Int32 vID Returns Type Description Boolean | Improve this Doc View Source SetConstraint(Int32, Vector3d, Double, Boolean) Declaration public void SetConstraint(int vID, Vector3d targetPos, double weight, bool bForceToFixedPos = false) Parameters Type Name Description Int32 vID Vector3d targetPos Double weight Boolean bForceToFixedPos | Improve this Doc View Source Solve(Vector3d[]) Declaration public bool Solve(Vector3d[] Result) Parameters Type Name Description Vector3d [] Result Returns Type Description Boolean | Improve this Doc View Source SolveAndUpdateCurve() Declaration public bool SolveAndUpdateCurve() Returns Type Description Boolean | Improve this Doc View Source SolveMultipleCG(Vector3d[]) Declaration public bool SolveMultipleCG(Vector3d[] Result) Parameters Type Name Description Vector3d [] Result Returns Type Description Boolean | Improve this Doc View Source SolveMultipleRHS(Vector3d[]) Declaration public bool SolveMultipleRHS(Vector3d[] Result) Parameters Type Name Description Vector3d [] Result Returns Type Description Boolean"
  },
  "api/g3.LaplacianCurveDeformer.SoftConstraintV.html": {
    "href": "api/g3.LaplacianCurveDeformer.SoftConstraintV.html",
    "title": "Struct LaplacianCurveDeformer.SoftConstraintV | ViRGIS VR GIS",
    "keywords": "Struct LaplacianCurveDeformer.SoftConstraintV Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct SoftConstraintV Fields | Improve this Doc View Source Position Declaration public Vector3d Position Field Value Type Description Vector3d | Improve this Doc View Source PostFix Declaration public bool PostFix Field Value Type Description Boolean | Improve this Doc View Source Weight Declaration public double Weight Field Value Type Description Double"
  },
  "api/g3.LaplacianMeshDeformer.html": {
    "href": "api/g3.LaplacianMeshDeformer.html",
    "title": "Class LaplacianMeshDeformer | ViRGIS VR GIS",
    "keywords": "Class LaplacianMeshDeformer Inheritance Object LaplacianMeshDeformer Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class LaplacianMeshDeformer Constructors | Improve this Doc View Source LaplacianMeshDeformer(DMesh3) Declaration public LaplacianMeshDeformer(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh Fields | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 | Improve this Doc View Source UseSoftConstraintNormalEquations Declaration public bool UseSoftConstraintNormalEquations Field Value Type Description Boolean Methods | Improve this Doc View Source ClearConstraints() Declaration public void ClearConstraints() | Improve this Doc View Source Initialize() Declaration public void Initialize() | Improve this Doc View Source IsConstrained(Int32) Declaration public bool IsConstrained(int vID) Parameters Type Name Description Int32 vID Returns Type Description Boolean | Improve this Doc View Source SetConstraint(Int32, Vector3d, Double, Boolean) Declaration public void SetConstraint(int vID, Vector3d targetPos, double weight, bool bForceToFixedPos = false) Parameters Type Name Description Int32 vID Vector3d targetPos Double weight Boolean bForceToFixedPos | Improve this Doc View Source Solve(Vector3d[]) Declaration public bool Solve(Vector3d[] Result) Parameters Type Name Description Vector3d [] Result Returns Type Description Boolean | Improve this Doc View Source SolveAndUpdateMesh() Declaration public bool SolveAndUpdateMesh() Returns Type Description Boolean | Improve this Doc View Source SolveMultipleCG(Vector3d[]) Declaration public bool SolveMultipleCG(Vector3d[] Result) Parameters Type Name Description Vector3d [] Result Returns Type Description Boolean | Improve this Doc View Source SolveMultipleRHS(Vector3d[]) Declaration public bool SolveMultipleRHS(Vector3d[] Result) Parameters Type Name Description Vector3d [] Result Returns Type Description Boolean"
  },
  "api/g3.LaplacianMeshDeformer.SoftConstraintV.html": {
    "href": "api/g3.LaplacianMeshDeformer.SoftConstraintV.html",
    "title": "Struct LaplacianMeshDeformer.SoftConstraintV | ViRGIS VR GIS",
    "keywords": "Struct LaplacianMeshDeformer.SoftConstraintV Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct SoftConstraintV Fields | Improve this Doc View Source Position Declaration public Vector3d Position Field Value Type Description Vector3d | Improve this Doc View Source PostFix Declaration public bool PostFix Field Value Type Description Boolean | Improve this Doc View Source Weight Declaration public double Weight Field Value Type Description Double"
  },
  "api/g3.LaplacianMeshSmoother.html": {
    "href": "api/g3.LaplacianMeshSmoother.html",
    "title": "Class LaplacianMeshSmoother | ViRGIS VR GIS",
    "keywords": "Class LaplacianMeshSmoother Inheritance Object LaplacianMeshSmoother Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class LaplacianMeshSmoother Constructors | Improve this Doc View Source LaplacianMeshSmoother(DMesh3) Declaration public LaplacianMeshSmoother(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh Fields | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 | Improve this Doc View Source UseSoftConstraintNormalEquations Declaration public bool UseSoftConstraintNormalEquations Field Value Type Description Boolean Methods | Improve this Doc View Source ClearConstraints() Declaration public void ClearConstraints() | Improve this Doc View Source Initialize() Declaration public void Initialize() | Improve this Doc View Source IsConstrained(Int32) Declaration public bool IsConstrained(int vID) Parameters Type Name Description Int32 vID Returns Type Description Boolean | Improve this Doc View Source RegionSmooth(DMesh3, IEnumerable<Int32>, Int32, Int32, Boolean, Double, Double) Apply LaplacianMeshSmoother to subset of mesh triangles. border of subset always has soft constraint with borderWeight, but is then snapped back to original vtx pos after solve. nConstrainLoops inner loops are also soft-constrained, with weight falloff via square roots (defines continuity) interiorWeight is soft constraint added to all vertices Declaration public static void RegionSmooth(DMesh3 mesh, IEnumerable<int> triangles, int nConstrainLoops, int nIncludeExteriorRings, bool bPreserveExteriorRings, double borderWeight = 10, double interiorWeight = 0) Parameters Type Name Description DMesh3 mesh IEnumerable < Int32 > triangles Int32 nConstrainLoops Int32 nIncludeExteriorRings Boolean bPreserveExteriorRings Double borderWeight Double interiorWeight | Improve this Doc View Source SetConstraint(Int32, Vector3d, Double, Boolean) Declaration public void SetConstraint(int vID, Vector3d targetPos, double weight, bool bForceToFixedPos = false) Parameters Type Name Description Int32 vID Vector3d targetPos Double weight Boolean bForceToFixedPos | Improve this Doc View Source Solve(Vector3d[]) Declaration public bool Solve(Vector3d[] Result) Parameters Type Name Description Vector3d [] Result Returns Type Description Boolean | Improve this Doc View Source SolveAndUpdateMesh() Declaration public bool SolveAndUpdateMesh() Returns Type Description Boolean | Improve this Doc View Source SolveMultipleCG(Vector3d[]) Declaration public bool SolveMultipleCG(Vector3d[] Result) Parameters Type Name Description Vector3d [] Result Returns Type Description Boolean | Improve this Doc View Source SolveMultipleRHS(Vector3d[]) Declaration public bool SolveMultipleRHS(Vector3d[] Result) Parameters Type Name Description Vector3d [] Result Returns Type Description Boolean"
  },
  "api/g3.LaplacianMeshSmoother.SoftConstraintV.html": {
    "href": "api/g3.LaplacianMeshSmoother.SoftConstraintV.html",
    "title": "Struct LaplacianMeshSmoother.SoftConstraintV | ViRGIS VR GIS",
    "keywords": "Struct LaplacianMeshSmoother.SoftConstraintV Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct SoftConstraintV Fields | Improve this Doc View Source Position Declaration public Vector3d Position Field Value Type Description Vector3d | Improve this Doc View Source PostFix Declaration public bool PostFix Field Value Type Description Boolean | Improve this Doc View Source Weight Declaration public double Weight Field Value Type Description Double"
  },
  "api/g3.Line2d.html": {
    "href": "api/g3.Line2d.html",
    "title": "Struct Line2d | ViRGIS VR GIS",
    "keywords": "Struct Line2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Line2d Constructors | Improve this Doc View Source Line2d(Vector2d, Vector2d) Declaration public Line2d(Vector2d origin, Vector2d direction) Parameters Type Name Description Vector2d origin Vector2d direction | Improve this Doc View Source Line2d(ref Vector2d, ref Vector2d) Declaration public Line2d(ref Vector2d origin, ref Vector2d direction) Parameters Type Name Description Vector2d origin Vector2d direction Fields | Improve this Doc View Source Direction Declaration public Vector2d Direction Field Value Type Description Vector2d | Improve this Doc View Source Origin Declaration public Vector2d Origin Field Value Type Description Vector2d Methods | Improve this Doc View Source DistanceSquared(Vector2d) Declaration public double DistanceSquared(Vector2d p) Parameters Type Name Description Vector2d p Returns Type Description Double | Improve this Doc View Source FromPoints(Vector2d, Vector2d) Declaration public static Line2d FromPoints(Vector2d p0, Vector2d p1) Parameters Type Name Description Vector2d p0 Vector2d p1 Returns Type Description Line2d | Improve this Doc View Source FromPoints(ref Vector2d, ref Vector2d) Declaration public static Line2d FromPoints(ref Vector2d p0, ref Vector2d p1) Parameters Type Name Description Vector2d p0 Vector2d p1 Returns Type Description Line2d | Improve this Doc View Source IntersectionPoint(ref Line2d, Double) Calculate intersection point between this line and another one. Returns Vector2d.MaxValue if lines are parallel. Declaration public Vector2d IntersectionPoint(ref Line2d other, double dotThresh = 1E-08) Parameters Type Name Description Line2d other Double dotThresh Returns Type Description Vector2d | Improve this Doc View Source PointAt(Double) Declaration public Vector2d PointAt(double d) Parameters Type Name Description Double d Returns Type Description Vector2d | Improve this Doc View Source Project(Vector2d) Declaration public double Project(Vector2d p) Parameters Type Name Description Vector2d p Returns Type Description Double | Improve this Doc View Source WhichSide(Vector2d, Double) Returns: +1, on right of line -1, on left of line 0, on the line Declaration public int WhichSide(Vector2d test, double tol = 0) Parameters Type Name Description Vector2d test Double tol Returns Type Description Int32 | Improve this Doc View Source WhichSide(ref Vector2d, Double) Declaration public int WhichSide(ref Vector2d test, double tol = 0) Parameters Type Name Description Vector2d test Double tol Returns Type Description Int32 Operators | Improve this Doc View Source Explicit(Line2d to Line2f) Declaration public static explicit operator Line2f(Line2d v) Parameters Type Name Description Line2d v Returns Type Description Line2f | Improve this Doc View Source Implicit(Line2f to Line2d) Declaration public static implicit operator Line2d(Line2f v) Parameters Type Name Description Line2f v Returns Type Description Line2d"
  },
  "api/g3.Line2f.html": {
    "href": "api/g3.Line2f.html",
    "title": "Struct Line2f | ViRGIS VR GIS",
    "keywords": "Struct Line2f Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Line2f Constructors | Improve this Doc View Source Line2f(Vector2f, Vector2f) Declaration public Line2f(Vector2f origin, Vector2f direction) Parameters Type Name Description Vector2f origin Vector2f direction Fields | Improve this Doc View Source Direction Declaration public Vector2f Direction Field Value Type Description Vector2f | Improve this Doc View Source Origin Declaration public Vector2f Origin Field Value Type Description Vector2f Methods | Improve this Doc View Source DistanceSquared(Vector2f) Declaration public float DistanceSquared(Vector2f p) Parameters Type Name Description Vector2f p Returns Type Description Single | Improve this Doc View Source PointAt(Single) Declaration public Vector2f PointAt(float d) Parameters Type Name Description Single d Returns Type Description Vector2f | Improve this Doc View Source Project(Vector2f) Declaration public float Project(Vector2f p) Parameters Type Name Description Vector2f p Returns Type Description Single"
  },
  "api/g3.Line3d.html": {
    "href": "api/g3.Line3d.html",
    "title": "Struct Line3d | ViRGIS VR GIS",
    "keywords": "Struct Line3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Line3d Constructors | Improve this Doc View Source Line3d(Vector3d, Vector3d) Declaration public Line3d(Vector3d origin, Vector3d direction) Parameters Type Name Description Vector3d origin Vector3d direction Fields | Improve this Doc View Source Direction Declaration public Vector3d Direction Field Value Type Description Vector3d | Improve this Doc View Source Origin Declaration public Vector3d Origin Field Value Type Description Vector3d Methods | Improve this Doc View Source ClosestPoint(Vector3d) Declaration public Vector3d ClosestPoint(Vector3d p) Parameters Type Name Description Vector3d p Returns Type Description Vector3d | Improve this Doc View Source DistanceSquared(Vector3d) Declaration public double DistanceSquared(Vector3d p) Parameters Type Name Description Vector3d p Returns Type Description Double | Improve this Doc View Source PointAt(Double) Declaration public Vector3d PointAt(double d) Parameters Type Name Description Double d Returns Type Description Vector3d | Improve this Doc View Source Project(Vector3d) Declaration public double Project(Vector3d p) Parameters Type Name Description Vector3d p Returns Type Description Double Operators | Improve this Doc View Source Explicit(Line3d to Line3f) Declaration public static explicit operator Line3f(Line3d v) Parameters Type Name Description Line3d v Returns Type Description Line3f | Improve this Doc View Source Implicit(Line3f to Line3d) Declaration public static implicit operator Line3d(Line3f v) Parameters Type Name Description Line3f v Returns Type Description Line3d"
  },
  "api/g3.Line3f.html": {
    "href": "api/g3.Line3f.html",
    "title": "Struct Line3f | ViRGIS VR GIS",
    "keywords": "Struct Line3f Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Line3f Constructors | Improve this Doc View Source Line3f(Vector3f, Vector3f) Declaration public Line3f(Vector3f origin, Vector3f direction) Parameters Type Name Description Vector3f origin Vector3f direction Fields | Improve this Doc View Source Direction Declaration public Vector3f Direction Field Value Type Description Vector3f | Improve this Doc View Source Origin Declaration public Vector3f Origin Field Value Type Description Vector3f Methods | Improve this Doc View Source ClosestPoint(Vector3f) Declaration public Vector3f ClosestPoint(Vector3f p) Parameters Type Name Description Vector3f p Returns Type Description Vector3f | Improve this Doc View Source DistanceSquared(Vector3f) Declaration public float DistanceSquared(Vector3f p) Parameters Type Name Description Vector3f p Returns Type Description Single | Improve this Doc View Source PointAt(Single) Declaration public Vector3f PointAt(float d) Parameters Type Name Description Single d Returns Type Description Vector3f | Improve this Doc View Source Project(Vector3f) Declaration public float Project(Vector3f p) Parameters Type Name Description Vector3f p Returns Type Description Single"
  },
  "api/g3.LinearIntersection.html": {
    "href": "api/g3.LinearIntersection.html",
    "title": "Struct LinearIntersection | ViRGIS VR GIS",
    "keywords": "Struct LinearIntersection returned by linear-primitive intersection functions Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct LinearIntersection Fields | Improve this Doc View Source intersects Declaration public bool intersects Field Value Type Description Boolean | Improve this Doc View Source numIntersections Declaration public int numIntersections Field Value Type Description Int32 | Improve this Doc View Source parameter Declaration public Interval1d parameter Field Value Type Description Interval1d"
  },
  "api/g3.LineGenerator.html": {
    "href": "api/g3.LineGenerator.html",
    "title": "Class LineGenerator | ViRGIS VR GIS",
    "keywords": "Class LineGenerator Inheritance Object CurveGenerator LineGenerator Inherited Members CurveGenerator.vertices CurveGenerator.closed CurveGenerator.Make(DCurve3) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class LineGenerator : CurveGenerator Fields | Improve this Doc View Source End Declaration public Vector3d End Field Value Type Description Vector3d | Improve this Doc View Source Start Declaration public Vector3d Start Field Value Type Description Vector3d | Improve this Doc View Source StepSize Declaration public double StepSize Field Value Type Description Double | Improve this Doc View Source Subdivisions Declaration public int Subdivisions Field Value Type Description Int32 Methods | Improve this Doc View Source Generate() Declaration public override void Generate() Overrides CurveGenerator.Generate()"
  },
  "api/g3.LocalProfiler.html": {
    "href": "api/g3.LocalProfiler.html",
    "title": "Class LocalProfiler | ViRGIS VR GIS",
    "keywords": "Class LocalProfiler Inheritance Object LocalProfiler Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class LocalProfiler : IDisposable Methods | Improve this Doc View Source Accumulated(String) Declaration public string Accumulated(string label) Parameters Type Name Description String label Returns Type Description String | Improve this Doc View Source AllAccumulatedTicks(String) Declaration public string AllAccumulatedTicks(string prefix = \"Times:\") Parameters Type Name Description String prefix Returns Type Description String | Improve this Doc View Source AllAccumulatedTimes(String, String) Declaration public string AllAccumulatedTimes(string prefix = \"Times:\", string separator = \" \") Parameters Type Name Description String prefix String separator Returns Type Description String | Improve this Doc View Source AllTicks(String) Declaration public string AllTicks(string prefix = \"Times:\") Parameters Type Name Description String prefix Returns Type Description String | Improve this Doc View Source AllTimes(String, String) Declaration public string AllTimes(string prefix = \"Times:\", string separator = \" \") Parameters Type Name Description String prefix String separator Returns Type Description String | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source DivideAllAccumulated(Int32) Declaration public void DivideAllAccumulated(int div) Parameters Type Name Description Int32 div | Improve this Doc View Source Elapsed(String) Declaration public string Elapsed(string label) Parameters Type Name Description String label Returns Type Description String | Improve this Doc View Source Get(String) Declaration public BlockTimer Get(string label) Parameters Type Name Description String label Returns Type Description BlockTimer | Improve this Doc View Source Reset(String) Declaration public void Reset(string label) Parameters Type Name Description String label | Improve this Doc View Source ResetAccumulated(String) Declaration public void ResetAccumulated(string label) Parameters Type Name Description String label | Improve this Doc View Source ResetAllAccumulated(String) Declaration public void ResetAllAccumulated(string label) Parameters Type Name Description String label | Improve this Doc View Source Start(String) Declaration public BlockTimer Start(string label) Parameters Type Name Description String label Returns Type Description BlockTimer | Improve this Doc View Source Stop(String) Declaration public void Stop(string label) Parameters Type Name Description String label | Improve this Doc View Source StopAll() Declaration public void StopAll() | Improve this Doc View Source StopAllAndStartNew(String) Declaration public BlockTimer StopAllAndStartNew(string label) Parameters Type Name Description String label Returns Type Description BlockTimer | Improve this Doc View Source StopAndAccumulate(String, Boolean) Declaration public void StopAndAccumulate(string label, bool bReset = false) Parameters Type Name Description String label Boolean bReset"
  },
  "api/g3.LockingQueue-1.html": {
    "href": "api/g3.LockingQueue-1.html",
    "title": "Class LockingQueue<T> | ViRGIS VR GIS",
    "keywords": "Class LockingQueue<T> Inheritance Object LockingQueue<T> Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class LockingQueue<T> Type Parameters Name Description T Constructors | Improve this Doc View Source LockingQueue() Declaration public LockingQueue() Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Add(T) Declaration public void Add(T obj) Parameters Type Name Description T obj | Improve this Doc View Source Remove(ref T) Declaration public bool Remove(ref T val) Parameters Type Name Description T val Returns Type Description Boolean"
  },
  "api/g3.MappedList.html": {
    "href": "api/g3.MappedList.html",
    "title": "Class MappedList | ViRGIS VR GIS",
    "keywords": "Class MappedList IList wrapper that remaps values via a Func (eg for index maps) Inheritance Object MappedList Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MappedList : IList<int>, ICollection<int>, IEnumerable<int>, IEnumerable Constructors | Improve this Doc View Source MappedList(IList<Int32>, Int32[]) Declaration public MappedList(IList<int> list, int[] map) Parameters Type Name Description IList < Int32 > list Int32 [] map Fields | Improve this Doc View Source BaseList Declaration public IList<int> BaseList Field Value Type Description IList < Int32 > | Improve this Doc View Source MapF Declaration public Func<int, int> MapF Field Value Type Description Func < Int32 , Int32 > Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean | Improve this Doc View Source Item[Int32] Declaration public int this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Int32 Methods | Improve this Doc View Source Add(Int32) Declaration public void Add(int item) Parameters Type Name Description Int32 item | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source Contains(Int32) Declaration public bool Contains(int item) Parameters Type Name Description Int32 item Returns Type Description Boolean | Improve this Doc View Source CopyTo(Int32[], Int32) Declaration public void CopyTo(int[] array, int arrayIndex) Parameters Type Name Description Int32 [] array Int32 arrayIndex | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<int> GetEnumerator() Returns Type Description IEnumerator < Int32 > | Improve this Doc View Source IndexOf(Int32) Declaration public int IndexOf(int item) Parameters Type Name Description Int32 item Returns Type Description Int32 | Improve this Doc View Source Insert(Int32, Int32) Declaration public void Insert(int index, int item) Parameters Type Name Description Int32 index Int32 item | Improve this Doc View Source Remove(Int32) Declaration public bool Remove(int item) Parameters Type Name Description Int32 item Returns Type Description Boolean | Improve this Doc View Source RemoveAt(Int32) Declaration public void RemoveAt(int index) Parameters Type Name Description Int32 index"
  },
  "api/g3.MarchingCubes.html": {
    "href": "api/g3.MarchingCubes.html",
    "title": "Class MarchingCubes | ViRGIS VR GIS",
    "keywords": "Class MarchingCubes Basic implementation of marching cubes mesh generation, which can be applied to arbitrary Implicit function. Multi-threading enabled by default. [TODO] support locking on Implicit.Value()? May not be thread-safe!! [TODO] extension that tracks set of triangles in each cube, so we can do partial updates? [TODO] is hash table on vertex x/y/z the best idea? [TODO] hash table for edge vtx-indices instead, like old polygonizer? (how did we index edges?!?) Inheritance Object MarchingCubes Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MarchingCubes Constructors | Improve this Doc View Source MarchingCubes() Declaration public MarchingCubes() Fields | Improve this Doc View Source Bounds bounding-box we will mesh inside of. We use the min-corner and the width/height/depth, but do not clamp vertices to stay within max-corner, we may spill one cell over Declaration public AxisAlignedBox3d Bounds Field Value Type Description AxisAlignedBox3d | Improve this Doc View Source CancelF if this function returns true, we should abort calculation Declaration public Func<bool> CancelF Field Value Type Description Func < Boolean > | Improve this Doc View Source CellDimensions Declaration public Vector3i CellDimensions Field Value Type Description Vector3i | Improve this Doc View Source CubeSize Length of edges of cubes that are marching. currently, # of cells along axis = (int)(bounds_dimension / CellSize) + 1 Declaration public double CubeSize Field Value Type Description Double | Improve this Doc View Source Implicit this is the function we will evaluate Declaration public ImplicitFunction3d Implicit Field Value Type Description ImplicitFunction3d | Improve this Doc View Source IsoValue mesh surface will be at this isovalue. Normally 0 unless you want offset surface or field is not a distance-field. Declaration public double IsoValue Field Value Type Description Double | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 | Improve this Doc View Source ParallelCompute Use multi-threading? Generally a good idea unless problem is very small or you are multi-threading at a higher level (which may be more efficient as we currently use very fine-grained spinlocks to synchronize) Declaration public bool ParallelCompute Field Value Type Description Boolean | Improve this Doc View Source RootMode Which rootfinding method will be used to converge on surface along edges Declaration public MarchingCubes.RootfindingModes RootMode Field Value Type Description MarchingCubes.RootfindingModes | Improve this Doc View Source RootModeSteps number of iterations of rootfinding method (ignored for SingleLerp) Declaration public int RootModeSteps Field Value Type Description Int32 | Improve this Doc View Source VertexHash Declaration public Dictionary<Vector3d, int> VertexHash Field Value Type Description Dictionary < Vector3d , Int32 > Methods | Improve this Doc View Source Generate() Run MC algorithm and generate Output mesh Declaration public void Generate()"
  },
  "api/g3.MarchingCubes.RootfindingModes.html": {
    "href": "api/g3.MarchingCubes.RootfindingModes.html",
    "title": "Enum MarchingCubes.RootfindingModes | ViRGIS VR GIS",
    "keywords": "Enum MarchingCubes.RootfindingModes Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum RootfindingModes Fields Name Description Bisection LerpSteps SingleLerp"
  },
  "api/g3.MarchingQuads.html": {
    "href": "api/g3.MarchingQuads.html",
    "title": "Class MarchingQuads | ViRGIS VR GIS",
    "keywords": "Class MarchingQuads 2D MarchingQuads polyline extraction from scalar field [TODO] this is very, very old code. Should at minimum rewrite using current vector classes/etc. Inheritance Object MarchingQuads Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MarchingQuads Constructors | Improve this Doc View Source MarchingQuads(Int32, AxisAlignedBox2f, Single) Declaration public MarchingQuads(int nSubdivisions, AxisAlignedBox2f bounds, float fIsoValue) Parameters Type Name Description Int32 nSubdivisions AxisAlignedBox2f bounds Single fIsoValue Properties | Improve this Doc View Source Bounds Declaration public AxisAlignedBox2f Bounds { get; set; } Property Value Type Description AxisAlignedBox2f | Improve this Doc View Source Stroke Declaration public DPolyLine2f Stroke { get; } Property Value Type Description DPolyLine2f | Improve this Doc View Source Subdivisions Declaration public int Subdivisions { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source AddSeedPoint(Single, Single) Declaration public void AddSeedPoint(float x, float y) Parameters Type Name Description Single x Single y | Improve this Doc View Source ClearSeedPoints() Declaration public void ClearSeedPoints() | Improve this Doc View Source ClearStroke() Declaration public void ClearStroke() | Improve this Doc View Source GetBounds() Declaration public AxisAlignedBox2f GetBounds() Returns Type Description AxisAlignedBox2f | Improve this Doc View Source Polygonize(ImplicitField2d) Declaration public void Polygonize(ImplicitField2d field) Parameters Type Name Description ImplicitField2d field"
  },
  "api/g3.MathUtil.html": {
    "href": "api/g3.MathUtil.html",
    "title": "Class MathUtil | ViRGIS VR GIS",
    "keywords": "Class MathUtil Inheritance Object MathUtil Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class MathUtil Fields | Improve this Doc View Source Deg2Rad Declaration public const double Deg2Rad = 0.017453292519943295 Field Value Type Description Double | Improve this Doc View Source Deg2Radf Declaration public const float Deg2Radf = 0.0174532924F Field Value Type Description Single | Improve this Doc View Source Epsilon Declaration public const double Epsilon = 2.2204460492503131E-16 Field Value Type Description Double | Improve this Doc View Source Epsilonf Declaration public const float Epsilonf = 1.1920929E-07F Field Value Type Description Single | Improve this Doc View Source FourPI Declaration public const double FourPI = 12.566370614359172 Field Value Type Description Double | Improve this Doc View Source HalfPI Declaration public const double HalfPI = 1.5707963267948966 Field Value Type Description Double | Improve this Doc View Source HalfPIf Declaration public const float HalfPIf = 1.57079637F Field Value Type Description Single | Improve this Doc View Source PIf Declaration public const float PIf = 3.14159274F Field Value Type Description Single | Improve this Doc View Source Rad2Deg Declaration public const double Rad2Deg = 57.295779513082323 Field Value Type Description Double | Improve this Doc View Source Rad2Degf Declaration public const float Rad2Degf = 57.29578F Field Value Type Description Single | Improve this Doc View Source SqrtThree Declaration public const double SqrtThree = 1.7320508075688772 Field Value Type Description Double | Improve this Doc View Source SqrtTwo Declaration public const double SqrtTwo = 1.4142135623730951 Field Value Type Description Double | Improve this Doc View Source SqrtTwof Declaration public const float SqrtTwof = 1.41421354F Field Value Type Description Single | Improve this Doc View Source SqrtTwoInv Declaration public const double SqrtTwoInv = 0.70710678118654746 Field Value Type Description Double | Improve this Doc View Source TwoPI Declaration public const double TwoPI = 6.2831853071795862 Field Value Type Description Double | Improve this Doc View Source TwoPIf Declaration public const float TwoPIf = 6.28318548F Field Value Type Description Single | Improve this Doc View Source ZeroTolerance Declaration public const double ZeroTolerance = 1E-08 Field Value Type Description Double | Improve this Doc View Source ZeroTolerancef Declaration public const float ZeroTolerancef = 1E-06F Field Value Type Description Single Methods | Improve this Doc View Source Area(Vector3d, Vector3d, Vector3d) Declaration public static double Area(Vector3d v1, Vector3d v2, Vector3d v3) Parameters Type Name Description Vector3d v1 Vector3d v2 Vector3d v3 Returns Type Description Double | Improve this Doc View Source Area(ref Vector3d, ref Vector3d, ref Vector3d) Declaration public static double Area(ref Vector3d v1, ref Vector3d v2, ref Vector3d v3) Parameters Type Name Description Vector3d v1 Vector3d v2 Vector3d v3 Returns Type Description Double | Improve this Doc View Source AspectRatio(Vector3d, Vector3d, Vector3d) Declaration public static double AspectRatio(Vector3d v1, Vector3d v2, Vector3d v3) Parameters Type Name Description Vector3d v1 Vector3d v2 Vector3d v3 Returns Type Description Double | Improve this Doc View Source AspectRatio(ref Vector3d, ref Vector3d, ref Vector3d) aspect ratio of triangle Declaration public static double AspectRatio(ref Vector3d v1, ref Vector3d v2, ref Vector3d v3) Parameters Type Name Description Vector3d v1 Vector3d v2 Vector3d v3 Returns Type Description Double | Improve this Doc View Source Atan2Positive(Double, Double) Declaration public static double Atan2Positive(double y, double x) Parameters Type Name Description Double y Double x Returns Type Description Double | Improve this Doc View Source BarycentricCoords(Vector2d, Vector2d, Vector2d, Vector2d) Compute barycentric coordinates/weights of vPoint inside triangle (V0,V1,V2). If point is inside triangle, coords will pe positive and sum to 1. ie if result is a, then vPoint = a.x V0 + a.y V1 + a.z*V2. Declaration public static Vector3d BarycentricCoords(Vector2d vPoint, Vector2d V0, Vector2d V1, Vector2d V2) Parameters Type Name Description Vector2d vPoint Vector2d V0 Vector2d V1 Vector2d V2 Returns Type Description Vector3d | Improve this Doc View Source BarycentricCoords(Vector3d, Vector3d, Vector3d, Vector3d) Declaration public static Vector3d BarycentricCoords(Vector3d vPoint, Vector3d V0, Vector3d V1, Vector3d V2) Parameters Type Name Description Vector3d vPoint Vector3d V0 Vector3d V1 Vector3d V2 Returns Type Description Vector3d | Improve this Doc View Source BarycentricCoords(ref Vector3d, ref Vector3d, ref Vector3d, ref Vector3d) Compute barycentric coordinates/weights of vPoint inside triangle (V0,V1,V2). If point is in triangle plane and inside triangle, coords will be positive and sum to 1. ie if result is a, then vPoint = a.x V0 + a.y V1 + a.z*V2. Declaration public static Vector3d BarycentricCoords(ref Vector3d vPoint, ref Vector3d V0, ref Vector3d V1, ref Vector3d V2) Parameters Type Name Description Vector3d vPoint Vector3d V0 Vector3d V1 Vector3d V2 Returns Type Description Vector3d | Improve this Doc View Source Clamp(Double, Double, Double) Declaration public static double Clamp(double f, double low, double high) Parameters Type Name Description Double f Double low Double high Returns Type Description Double | Improve this Doc View Source Clamp(Int32, Int32, Int32) Declaration public static int Clamp(int f, int low, int high) Parameters Type Name Description Int32 f Int32 low Int32 high Returns Type Description Int32 | Improve this Doc View Source Clamp(Single, Single, Single) Declaration public static float Clamp(float f, float low, float high) Parameters Type Name Description Single f Single low Single high Returns Type Description Single | Improve this Doc View Source Clamp<T>(T, T, T) Declaration public static T Clamp<T>(T f, T low, T high) where T : IComparable Parameters Type Name Description T f T low T high Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source ClampAngleDeg(Double, Double, Double) Declaration public static double ClampAngleDeg(double theta, double min, double max) Parameters Type Name Description Double theta Double min Double max Returns Type Description Double | Improve this Doc View Source ClampAngleRad(Double, Double, Double) Declaration public static double ClampAngleRad(double theta, double min, double max) Parameters Type Name Description Double theta Double min Double max Returns Type Description Double | Improve this Doc View Source EpsilonEqual(Double, Double, Double) Declaration public static bool EpsilonEqual(double a, double b, double epsilon = 2.2204460492503131E-16) Parameters Type Name Description Double a Double b Double epsilon Returns Type Description Boolean | Improve this Doc View Source EpsilonEqual(Single, Single, Single) Declaration public static bool EpsilonEqual(float a, float b, float epsilon = 1.1920929E-07F) Parameters Type Name Description Single a Single b Single epsilon Returns Type Description Boolean | Improve this Doc View Source FastNormalArea(ref Vector3d, ref Vector3d, ref Vector3d, out Double) simultaneously compute triangle normal and area, and only normalize after cross-product, not before (so, fewer normalizes then Normal()) Declaration public static Vector3d FastNormalArea(ref Vector3d v1, ref Vector3d v2, ref Vector3d v3, out double area) Parameters Type Name Description Vector3d v1 Vector3d v2 Vector3d v3 Double area Returns Type Description Vector3d | Improve this Doc View Source FastNormalDirection(ref Vector3d, ref Vector3d, ref Vector3d) compute vector in direction of triangle normal (cross-product). No normalization. Declaration public static Vector3d FastNormalDirection(ref Vector3d v1, ref Vector3d v2, ref Vector3d v3) Parameters Type Name Description Vector3d v1 Vector3d v2 Vector3d v3 Returns Type Description Vector3d The normal direction. | Improve this Doc View Source InRange(Double, Double, Double) Declaration public static bool InRange(double f, double low, double high) Parameters Type Name Description Double f Double low Double high Returns Type Description Boolean | Improve this Doc View Source InRange(Int32, Int32, Int32) Declaration public static bool InRange(int f, int low, int high) Parameters Type Name Description Int32 f Int32 low Int32 high Returns Type Description Boolean | Improve this Doc View Source InRange(Single, Single, Single) Declaration public static bool InRange(float f, float low, float high) Parameters Type Name Description Single f Single low Single high Returns Type Description Boolean | Improve this Doc View Source InvSqrt(Double) Declaration public static double InvSqrt(double f) Parameters Type Name Description Double f Returns Type Description Double | Improve this Doc View Source IsFinite(Double) Declaration public static bool IsFinite(double d) Parameters Type Name Description Double d Returns Type Description Boolean | Improve this Doc View Source IsFinite(Single) Declaration public static bool IsFinite(float d) Parameters Type Name Description Single d Returns Type Description Boolean | Improve this Doc View Source IsLeft(Vector2d, Vector2d, Vector2d) Declaration public static double IsLeft(Vector2d P0, Vector2d P1, Vector2d P2) Parameters Type Name Description Vector2d P0 Vector2d P1 Vector2d P2 Returns Type Description Double | Improve this Doc View Source IsLeft(ref Vector2d, ref Vector2d, ref Vector2d) Declaration public static double IsLeft(ref Vector2d P0, ref Vector2d P1, ref Vector2d P2) Parameters Type Name Description Vector2d P0 Vector2d P1 Vector2d P2 Returns Type Description Double | Improve this Doc View Source IsObtuse(Vector3d, Vector3d, Vector3d) Declaration public static bool IsObtuse(Vector3d v1, Vector3d v2, Vector3d v3) Parameters Type Name Description Vector3d v1 Vector3d v2 Vector3d v3 Returns Type Description Boolean | Improve this Doc View Source Lerp(Double, Double, Double) Declaration public static double Lerp(double a, double b, double t) Parameters Type Name Description Double a Double b Double t Returns Type Description Double | Improve this Doc View Source Lerp(Single, Single, Single) Declaration public static float Lerp(float a, float b, float t) Parameters Type Name Description Single a Single b Single t Returns Type Description Single | Improve this Doc View Source LinearRampT(Single, Single, Single) Declaration public static float LinearRampT(float R, float deadzoneR, float x) Parameters Type Name Description Single R Single deadzoneR Single x Returns Type Description Single | Improve this Doc View Source Max(Double, Double, Double) Declaration public static double Max(double a, double b, double c) Parameters Type Name Description Double a Double b Double c Returns Type Description Double | Improve this Doc View Source Max(Int32, Int32, Int32) Declaration public static int Max(int a, int b, int c) Parameters Type Name Description Int32 a Int32 b Int32 c Returns Type Description Int32 | Improve this Doc View Source Max(Single, Single, Single) Declaration public static float Max(float a, float b, float c) Parameters Type Name Description Single a Single b Single c Returns Type Description Single | Improve this Doc View Source Min(Double, Double, Double) Declaration public static double Min(double a, double b, double c) Parameters Type Name Description Double a Double b Double c Returns Type Description Double | Improve this Doc View Source Min(Int32, Int32, Int32) Declaration public static int Min(int a, int b, int c) Parameters Type Name Description Int32 a Int32 b Int32 c Returns Type Description Int32 | Improve this Doc View Source Min(Single, Single, Single) Declaration public static float Min(float a, float b, float c) Parameters Type Name Description Single a Single b Single c Returns Type Description Single | Improve this Doc View Source MinMax(Double, Double, Double, out Double, out Double) Declaration public static void MinMax(double a, double b, double c, out double min, out double max) Parameters Type Name Description Double a Double b Double c Double min Double max | Improve this Doc View Source ModuloClamp(Int32, Int32) Declaration public static int ModuloClamp(int f, int N) Parameters Type Name Description Int32 f Int32 N Returns Type Description Int32 | Improve this Doc View Source ModuloIteration(Int32, Int32) Iterate from 0 to (nMax-1) using prime-modulo, so we see every index once, but not in-order Declaration public static IEnumerable<int> ModuloIteration(int nMaxExclusive, int nPrime = 31337) Parameters Type Name Description Int32 nMaxExclusive Int32 nPrime Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source MostParallelAxis(Frame3f, Vector3f) Declaration public static int MostParallelAxis(Frame3f f, Vector3f vDir) Parameters Type Name Description Frame3f f Vector3f vDir Returns Type Description Int32 | Improve this Doc View Source Normal(Vector3d, Vector3d, Vector3d) Declaration public static Vector3d Normal(Vector3d v1, Vector3d v2, Vector3d v3) Parameters Type Name Description Vector3d v1 Vector3d v2 Vector3d v3 Returns Type Description Vector3d | Improve this Doc View Source Normal(ref Vector3d, ref Vector3d, ref Vector3d) Declaration public static Vector3d Normal(ref Vector3d v1, ref Vector3d v2, ref Vector3d v3) Parameters Type Name Description Vector3d v1 Vector3d v2 Vector3d v3 Returns Type Description Vector3d | Improve this Doc View Source PlaneAngleD(Vector3d, Vector3d, Int32) Declaration public static double PlaneAngleD(Vector3d a, Vector3d b, int nPlaneNormalIdx = 1) Parameters Type Name Description Vector3d a Vector3d b Int32 nPlaneNormalIdx Returns Type Description Double | Improve this Doc View Source PlaneAngleD(Vector3f, Vector3f, Int32) Declaration public static float PlaneAngleD(Vector3f a, Vector3f b, int nPlaneNormalIdx = 1) Parameters Type Name Description Vector3f a Vector3f b Int32 nPlaneNormalIdx Returns Type Description Single | Improve this Doc View Source PlaneAngleSignedD(Vector2d, Vector2d) Declaration public static double PlaneAngleSignedD(Vector2d vFrom, Vector2d vTo) Parameters Type Name Description Vector2d vFrom Vector2d vTo Returns Type Description Double | Improve this Doc View Source PlaneAngleSignedD(Vector2f, Vector2f) Declaration public static float PlaneAngleSignedD(Vector2f vFrom, Vector2f vTo) Parameters Type Name Description Vector2f vFrom Vector2f vTo Returns Type Description Single | Improve this Doc View Source PlaneAngleSignedD(Vector3d, Vector3d, Vector3d) Declaration public static double PlaneAngleSignedD(Vector3d vFrom, Vector3d vTo, Vector3d planeN) Parameters Type Name Description Vector3d vFrom Vector3d vTo Vector3d planeN Returns Type Description Double | Improve this Doc View Source PlaneAngleSignedD(Vector3d, Vector3d, Int32) Declaration public static double PlaneAngleSignedD(Vector3d vFrom, Vector3d vTo, int nPlaneNormalIdx = 1) Parameters Type Name Description Vector3d vFrom Vector3d vTo Int32 nPlaneNormalIdx Returns Type Description Double | Improve this Doc View Source PlaneAngleSignedD(Vector3f, Vector3f, Vector3f) Declaration public static float PlaneAngleSignedD(Vector3f vFrom, Vector3f vTo, Vector3f planeN) Parameters Type Name Description Vector3f vFrom Vector3f vTo Vector3f planeN Returns Type Description Single | Improve this Doc View Source PlaneAngleSignedD(Vector3f, Vector3f, Int32) Declaration public static float PlaneAngleSignedD(Vector3f vFrom, Vector3f vTo, int nPlaneNormalIdx = 1) Parameters Type Name Description Vector3f vFrom Vector3f vTo Int32 nPlaneNormalIdx Returns Type Description Single | Improve this Doc View Source PowerOf10(Int32) Declaration public static int PowerOf10(int n) Parameters Type Name Description Int32 n Returns Type Description Int32 | Improve this Doc View Source RangeClamp(Double, Double) Declaration public static double RangeClamp(double fValue, double fMinMaxValue) Parameters Type Name Description Double fValue Double fMinMaxValue Returns Type Description Double | Improve this Doc View Source RangeClamp(Single, Single) Declaration public static float RangeClamp(float fValue, float fMinMaxValue) Parameters Type Name Description Single fValue Single fMinMaxValue Returns Type Description Single | Improve this Doc View Source SignedClamp(Double, Double) Declaration public static double SignedClamp(double f, double fMax) Parameters Type Name Description Double f Double fMax Returns Type Description Double | Improve this Doc View Source SignedClamp(Double, Double, Double) Declaration public static double SignedClamp(double f, double fMin, double fMax) Parameters Type Name Description Double f Double fMin Double fMax Returns Type Description Double | Improve this Doc View Source SignedClamp(Single, Single) Declaration public static float SignedClamp(float f, float fMax) Parameters Type Name Description Single f Single fMax Returns Type Description Single | Improve this Doc View Source SignedClamp(Single, Single, Single) Declaration public static float SignedClamp(float f, float fMin, float fMax) Parameters Type Name Description Single f Single fMin Single fMax Returns Type Description Single | Improve this Doc View Source SmoothInterp(Double, Double, Double) Declaration public static double SmoothInterp(double a, double b, double t) Parameters Type Name Description Double a Double b Double t Returns Type Description Double | Improve this Doc View Source SmoothInterp(Single, Single, Single) Declaration public static float SmoothInterp(float a, float b, float t) Parameters Type Name Description Single a Single b Single t Returns Type Description Single | Improve this Doc View Source SmoothRise0To1(Single, Single, Single, Single) Declaration public static float SmoothRise0To1(float fX, float yshift, float xZero, float speed) Parameters Type Name Description Single fX Single yshift Single xZero Single speed Returns Type Description Single | Improve this Doc View Source SmoothStep(Double, Double, Double) Declaration public static double SmoothStep(double a, double b, double t) Parameters Type Name Description Double a Double b Double t Returns Type Description Double | Improve this Doc View Source SmoothStep(Single, Single, Single) Declaration public static float SmoothStep(float a, float b, float t) Parameters Type Name Description Single a Single b Single t Returns Type Description Single | Improve this Doc View Source SolveQuadratic(Double, Double, Double, out Double, out Double) Declaration public static bool SolveQuadratic(double a, double b, double c, out double minT, out double maxT) Parameters Type Name Description Double a Double b Double c Double minT Double maxT Returns Type Description Boolean | Improve this Doc View Source TriSolidAngle(Vector3d, Vector3d, Vector3d, ref Vector3d) signed winding angle of oriented triangle [a,b,c] wrt point p formula from Jacobson et al 13 http://igl.ethz.ch/projects/winding-number/ Declaration public static double TriSolidAngle(Vector3d a, Vector3d b, Vector3d c, ref Vector3d p) Parameters Type Name Description Vector3d a Vector3d b Vector3d c Vector3d p Returns Type Description Double | Improve this Doc View Source VectorCot(Vector3d, Vector3d) Declaration public static double VectorCot(Vector3d v1, Vector3d v2) Parameters Type Name Description Vector3d v1 Vector3d v2 Returns Type Description Double | Improve this Doc View Source VectorTan(Vector3d, Vector3d) Declaration public static double VectorTan(Vector3d v1, Vector3d v2) Parameters Type Name Description Vector3d v1 Vector3d v2 Returns Type Description Double | Improve this Doc View Source WrapSignedIndex(Int32, Int32) Declaration public static int WrapSignedIndex(int val, int mod) Parameters Type Name Description Int32 val Int32 mod Returns Type Description Int32 | Improve this Doc View Source WyvillFalloff(Double, Double, Double) Declaration public static double WyvillFalloff(double fD, double fInnerRad, double fOuterRad) Parameters Type Name Description Double fD Double fInnerRad Double fOuterRad Returns Type Description Double | Improve this Doc View Source WyvillFalloff(Single, Single, Single) Declaration public static float WyvillFalloff(float fD, float fInnerRad, float fOuterRad) Parameters Type Name Description Single fD Single fInnerRad Single fOuterRad Returns Type Description Single | Improve this Doc View Source WyvillFalloff01(Double) Declaration public static double WyvillFalloff01(double fX) Parameters Type Name Description Double fX Returns Type Description Double | Improve this Doc View Source WyvillFalloff01(Single) Declaration public static float WyvillFalloff01(float fX) Parameters Type Name Description Single fX Returns Type Description Single | Improve this Doc View Source WyvillRise01(Double) Declaration public static double WyvillRise01(double fX) Parameters Type Name Description Double fX Returns Type Description Double | Improve this Doc View Source WyvillRise01(Single) Declaration public static float WyvillRise01(float fX) Parameters Type Name Description Single fX Returns Type Description Single"
  },
  "api/g3.matrix_entry.html": {
    "href": "api/g3.matrix_entry.html",
    "title": "Struct matrix_entry | ViRGIS VR GIS",
    "keywords": "Struct matrix_entry Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct matrix_entry Fields | Improve this Doc View Source c Declaration public int c Field Value Type Description Int32 | Improve this Doc View Source r Declaration public int r Field Value Type Description Int32 | Improve this Doc View Source value Declaration public double value Field Value Type Description Double"
  },
  "api/g3.Matrix2d.html": {
    "href": "api/g3.Matrix2d.html",
    "title": "Class Matrix2d | ViRGIS VR GIS",
    "keywords": "Class Matrix2d Inheritance Object Matrix2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class Matrix2d Constructors | Improve this Doc View Source Matrix2d(Vector2d, Vector2d) Declaration public Matrix2d(Vector2d u, Vector2d v) Parameters Type Name Description Vector2d u Vector2d v | Improve this Doc View Source Matrix2d(Vector2d, Vector2d, Boolean) Declaration public Matrix2d(Vector2d u, Vector2d v, bool columns) Parameters Type Name Description Vector2d u Vector2d v Boolean columns | Improve this Doc View Source Matrix2d(Boolean) Declaration public Matrix2d(bool bIdentity) Parameters Type Name Description Boolean bIdentity | Improve this Doc View Source Matrix2d(Double, Boolean) Declaration public Matrix2d(double angle, bool bDegrees = false) Parameters Type Name Description Double angle Boolean bDegrees | Improve this Doc View Source Matrix2d(Double, Double) Declaration public Matrix2d(double m00, double m11) Parameters Type Name Description Double m00 Double m11 | Improve this Doc View Source Matrix2d(Double, Double, Double, Double) Declaration public Matrix2d(double m00, double m01, double m10, double m11) Parameters Type Name Description Double m00 Double m01 Double m10 Double m11 Fields | Improve this Doc View Source Identity Declaration public static readonly Matrix2d Identity Field Value Type Description Matrix2d | Improve this Doc View Source m00 Declaration public double m00 Field Value Type Description Double | Improve this Doc View Source m01 Declaration public double m01 Field Value Type Description Double | Improve this Doc View Source m10 Declaration public double m10 Field Value Type Description Double | Improve this Doc View Source m11 Declaration public double m11 Field Value Type Description Double | Improve this Doc View Source One Declaration public static readonly Matrix2d One Field Value Type Description Matrix2d | Improve this Doc View Source Zero Declaration public static readonly Matrix2d Zero Field Value Type Description Matrix2d Properties | Improve this Doc View Source Determinant Declaration public double Determinant { get; } Property Value Type Description Double | Improve this Doc View Source Item[Int32, Int32] Declaration public double this[int r, int c] { get; } Parameters Type Name Description Int32 r Int32 c Property Value Type Description Double Methods | Improve this Doc View Source Adjoint() Declaration public Matrix2d Adjoint() Returns Type Description Matrix2d | Improve this Doc View Source Column(Int32) Declaration public Vector2d Column(int i) Parameters Type Name Description Int32 i Returns Type Description Vector2d | Improve this Doc View Source EigenDecomposition(ref Matrix2d, ref Matrix2d) Declaration public void EigenDecomposition(ref Matrix2d rot, ref Matrix2d diag) Parameters Type Name Description Matrix2d rot Matrix2d diag | Improve this Doc View Source ExtractAngle() Declaration public double ExtractAngle() Returns Type Description Double | Improve this Doc View Source Inverse(Double) Declaration public Matrix2d Inverse(double epsilon = 0) Parameters Type Name Description Double epsilon Returns Type Description Matrix2d | Improve this Doc View Source Orthonormalize() Declaration public void Orthonormalize() | Improve this Doc View Source QForm(Vector2d, Vector2d) Declaration public double QForm(Vector2d u, Vector2d v) Parameters Type Name Description Vector2d u Vector2d v Returns Type Description Double | Improve this Doc View Source Row(Int32) Declaration public Vector2d Row(int i) Parameters Type Name Description Int32 i Returns Type Description Vector2d | Improve this Doc View Source SetToDiagonal(Double, Double) Declaration public void SetToDiagonal(double m00, double m11) Parameters Type Name Description Double m00 Double m11 | Improve this Doc View Source SetToRotationDeg(Double) Declaration public void SetToRotationDeg(double angleDeg) Parameters Type Name Description Double angleDeg | Improve this Doc View Source SetToRotationRad(Double) Declaration public void SetToRotationRad(double angleRad) Parameters Type Name Description Double angleRad | Improve this Doc View Source Transpose() Declaration public Matrix2d Transpose() Returns Type Description Matrix2d Operators | Improve this Doc View Source Addition(Matrix2d, Matrix2d) Declaration public static Matrix2d operator +(Matrix2d a, Matrix2d o) Parameters Type Name Description Matrix2d a Matrix2d o Returns Type Description Matrix2d | Improve this Doc View Source Addition(Matrix2d, Double) Declaration public static Matrix2d operator +(Matrix2d a, double f) Parameters Type Name Description Matrix2d a Double f Returns Type Description Matrix2d | Improve this Doc View Source Division(Matrix2d, Double) Declaration public static Matrix2d operator /(Matrix2d a, double f) Parameters Type Name Description Matrix2d a Double f Returns Type Description Matrix2d | Improve this Doc View Source Multiply(Matrix2d, Vector2d) Declaration public static Vector2d operator *(Matrix2d m, Vector2d v) Parameters Type Name Description Matrix2d m Vector2d v Returns Type Description Vector2d | Improve this Doc View Source Multiply(Matrix2d, Double) Declaration public static Matrix2d operator *(Matrix2d a, double f) Parameters Type Name Description Matrix2d a Double f Returns Type Description Matrix2d | Improve this Doc View Source Multiply(Vector2d, Matrix2d) Declaration public static Vector2d operator *(Vector2d v, Matrix2d m) Parameters Type Name Description Vector2d v Matrix2d m Returns Type Description Vector2d | Improve this Doc View Source Multiply(Double, Matrix2d) Declaration public static Matrix2d operator *(double f, Matrix2d a) Parameters Type Name Description Double f Matrix2d a Returns Type Description Matrix2d | Improve this Doc View Source Subtraction(Matrix2d, Matrix2d) Declaration public static Matrix2d operator -(Matrix2d a, Matrix2d o) Parameters Type Name Description Matrix2d a Matrix2d o Returns Type Description Matrix2d | Improve this Doc View Source Subtraction(Matrix2d, Double) Declaration public static Matrix2d operator -(Matrix2d a, double f) Parameters Type Name Description Matrix2d a Double f Returns Type Description Matrix2d | Improve this Doc View Source UnaryNegation(Matrix2d) Declaration public static Matrix2d operator -(Matrix2d v) Parameters Type Name Description Matrix2d v Returns Type Description Matrix2d"
  },
  "api/g3.Matrix2f.html": {
    "href": "api/g3.Matrix2f.html",
    "title": "Class Matrix2f | ViRGIS VR GIS",
    "keywords": "Class Matrix2f Inheritance Object Matrix2f Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class Matrix2f Constructors | Improve this Doc View Source Matrix2f(Vector2f, Vector2f) Declaration public Matrix2f(Vector2f u, Vector2f v) Parameters Type Name Description Vector2f u Vector2f v | Improve this Doc View Source Matrix2f(Vector2f, Vector2f, Boolean) Declaration public Matrix2f(Vector2f u, Vector2f v, bool columns) Parameters Type Name Description Vector2f u Vector2f v Boolean columns | Improve this Doc View Source Matrix2f(Boolean) Declaration public Matrix2f(bool bIdentity) Parameters Type Name Description Boolean bIdentity | Improve this Doc View Source Matrix2f(Single) Declaration public Matrix2f(float radians) Parameters Type Name Description Single radians | Improve this Doc View Source Matrix2f(Single, Single) Declaration public Matrix2f(float m00, float m11) Parameters Type Name Description Single m00 Single m11 | Improve this Doc View Source Matrix2f(Single, Single, Single, Single) Declaration public Matrix2f(float m00, float m01, float m10, float m11) Parameters Type Name Description Single m00 Single m01 Single m10 Single m11 Fields | Improve this Doc View Source Identity Declaration public static readonly Matrix2f Identity Field Value Type Description Matrix2f | Improve this Doc View Source m00 Declaration public float m00 Field Value Type Description Single | Improve this Doc View Source m01 Declaration public float m01 Field Value Type Description Single | Improve this Doc View Source m10 Declaration public float m10 Field Value Type Description Single | Improve this Doc View Source m11 Declaration public float m11 Field Value Type Description Single | Improve this Doc View Source One Declaration public static readonly Matrix2f One Field Value Type Description Matrix2f | Improve this Doc View Source Zero Declaration public static readonly Matrix2f Zero Field Value Type Description Matrix2f Properties | Improve this Doc View Source Determinant Declaration public float Determinant { get; } Property Value Type Description Single Methods | Improve this Doc View Source Adjoint() Declaration public Matrix2f Adjoint() Returns Type Description Matrix2f | Improve this Doc View Source EigenDecomposition(ref Matrix2f, ref Matrix2f) Declaration public void EigenDecomposition(ref Matrix2f rot, ref Matrix2f diag) Parameters Type Name Description Matrix2f rot Matrix2f diag | Improve this Doc View Source ExtractAngle() Declaration public float ExtractAngle() Returns Type Description Single | Improve this Doc View Source Inverse(Single) Declaration public Matrix2f Inverse(float epsilon = 0F) Parameters Type Name Description Single epsilon Returns Type Description Matrix2f | Improve this Doc View Source Orthonormalize() Declaration public void Orthonormalize() | Improve this Doc View Source QForm(Vector2f, Vector2f) Declaration public float QForm(Vector2f u, Vector2f v) Parameters Type Name Description Vector2f u Vector2f v Returns Type Description Single | Improve this Doc View Source SetToDiagonal(Single, Single) Declaration public void SetToDiagonal(float m00, float m11) Parameters Type Name Description Single m00 Single m11 | Improve this Doc View Source SetToRotationDeg(Single) Declaration public void SetToRotationDeg(float angleDeg) Parameters Type Name Description Single angleDeg | Improve this Doc View Source SetToRotationRad(Single) Declaration public void SetToRotationRad(float angleRad) Parameters Type Name Description Single angleRad | Improve this Doc View Source Transpose() Declaration public Matrix2f Transpose() Returns Type Description Matrix2f Operators | Improve this Doc View Source Addition(Matrix2f, Matrix2f) Declaration public static Matrix2f operator +(Matrix2f a, Matrix2f o) Parameters Type Name Description Matrix2f a Matrix2f o Returns Type Description Matrix2f | Improve this Doc View Source Addition(Matrix2f, Single) Declaration public static Matrix2f operator +(Matrix2f a, float f) Parameters Type Name Description Matrix2f a Single f Returns Type Description Matrix2f | Improve this Doc View Source Division(Matrix2f, Single) Declaration public static Matrix2f operator /(Matrix2f a, float f) Parameters Type Name Description Matrix2f a Single f Returns Type Description Matrix2f | Improve this Doc View Source Multiply(Matrix2f, Vector2f) Declaration public static Vector2f operator *(Matrix2f m, Vector2f v) Parameters Type Name Description Matrix2f m Vector2f v Returns Type Description Vector2f | Improve this Doc View Source Multiply(Matrix2f, Single) Declaration public static Matrix2f operator *(Matrix2f a, float f) Parameters Type Name Description Matrix2f a Single f Returns Type Description Matrix2f | Improve this Doc View Source Multiply(Vector2f, Matrix2f) Declaration public static Vector2f operator *(Vector2f v, Matrix2f m) Parameters Type Name Description Vector2f v Matrix2f m Returns Type Description Vector2f | Improve this Doc View Source Multiply(Single, Matrix2f) Declaration public static Matrix2f operator *(float f, Matrix2f a) Parameters Type Name Description Single f Matrix2f a Returns Type Description Matrix2f | Improve this Doc View Source Subtraction(Matrix2f, Matrix2f) Declaration public static Matrix2f operator -(Matrix2f a, Matrix2f o) Parameters Type Name Description Matrix2f a Matrix2f o Returns Type Description Matrix2f | Improve this Doc View Source Subtraction(Matrix2f, Single) Declaration public static Matrix2f operator -(Matrix2f a, float f) Parameters Type Name Description Matrix2f a Single f Returns Type Description Matrix2f | Improve this Doc View Source UnaryNegation(Matrix2f) Declaration public static Matrix2f operator -(Matrix2f v) Parameters Type Name Description Matrix2f v Returns Type Description Matrix2f"
  },
  "api/g3.Matrix3d.html": {
    "href": "api/g3.Matrix3d.html",
    "title": "Struct Matrix3d | ViRGIS VR GIS",
    "keywords": "Struct Matrix3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Matrix3d Constructors | Improve this Doc View Source Matrix3d(Vector3d, Vector3d, Vector3d, Boolean) Declaration public Matrix3d(Vector3d v1, Vector3d v2, Vector3d v3, bool bRows) Parameters Type Name Description Vector3d v1 Vector3d v2 Vector3d v3 Boolean bRows | Improve this Doc View Source Matrix3d(ref Vector3d, ref Vector3d) Construct outer-product of u*transpose(v) of u and v result is that Mij = u_i * v_j Declaration public Matrix3d(ref Vector3d u, ref Vector3d v) Parameters Type Name Description Vector3d u Vector3d v | Improve this Doc View Source Matrix3d(ref Vector3d, ref Vector3d, ref Vector3d, Boolean) Declaration public Matrix3d(ref Vector3d v1, ref Vector3d v2, ref Vector3d v3, bool bRows) Parameters Type Name Description Vector3d v1 Vector3d v2 Vector3d v3 Boolean bRows | Improve this Doc View Source Matrix3d(Boolean) Declaration public Matrix3d(bool bIdentity) Parameters Type Name Description Boolean bIdentity | Improve this Doc View Source Matrix3d(Double, Double, Double) Declaration public Matrix3d(double m00, double m11, double m22) Parameters Type Name Description Double m00 Double m11 Double m22 | Improve this Doc View Source Matrix3d(Double, Double, Double, Double, Double, Double, Double, Double, Double) Declaration public Matrix3d(double m00, double m01, double m02, double m10, double m11, double m12, double m20, double m21, double m22) Parameters Type Name Description Double m00 Double m01 Double m02 Double m10 Double m11 Double m12 Double m20 Double m21 Double m22 | Improve this Doc View Source Matrix3d(Double[]) Declaration public Matrix3d(double[] mat) Parameters Type Name Description Double [] mat | Improve this Doc View Source Matrix3d(Double[,]) Declaration public Matrix3d(double[, ] mat) Parameters Type Name Description Double [,] mat | Improve this Doc View Source Matrix3d(Func<Int32, Double>) Declaration public Matrix3d(Func<int, double> matBufferF) Parameters Type Name Description Func < Int32 , Double > matBufferF | Improve this Doc View Source Matrix3d(Func<Int32, Int32, Double>) Declaration public Matrix3d(Func<int, int, double> matF) Parameters Type Name Description Func < Int32 , Int32 , Double > matF | Improve this Doc View Source Matrix3d(Single[]) Declaration public Matrix3d(float[] mat) Parameters Type Name Description Single [] mat | Improve this Doc View Source Matrix3d(Single[,]) Declaration public Matrix3d(float[, ] mat) Parameters Type Name Description Single [,] mat Fields | Improve this Doc View Source Identity Declaration public static readonly Matrix3d Identity Field Value Type Description Matrix3d | Improve this Doc View Source Row0 Declaration public Vector3d Row0 Field Value Type Description Vector3d | Improve this Doc View Source Row1 Declaration public Vector3d Row1 Field Value Type Description Vector3d | Improve this Doc View Source Row2 Declaration public Vector3d Row2 Field Value Type Description Vector3d | Improve this Doc View Source Zero Declaration public static readonly Matrix3d Zero Field Value Type Description Matrix3d Properties | Improve this Doc View Source Determinant Declaration public double Determinant { get; } Property Value Type Description Double | Improve this Doc View Source Item[Int32] Declaration public double this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Double | Improve this Doc View Source Item[Int32, Int32] Declaration public double this[int r, int c] { get; set; } Parameters Type Name Description Int32 r Int32 c Property Value Type Description Double Methods | Improve this Doc View Source AxisAngleD(Vector3d, Double) Declaration public static Matrix3d AxisAngleD(Vector3d axis, double angleDeg) Parameters Type Name Description Vector3d axis Double angleDeg Returns Type Description Matrix3d | Improve this Doc View Source Column(Int32) Declaration public Vector3d Column(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3d | Improve this Doc View Source EpsilonEqual(Matrix3d, Double) Declaration public bool EpsilonEqual(Matrix3d m2, double epsilon) Parameters Type Name Description Matrix3d m2 Double epsilon Returns Type Description Boolean | Improve this Doc View Source InnerProduct(ref Matrix3d) Declaration public double InnerProduct(ref Matrix3d m2) Parameters Type Name Description Matrix3d m2 Returns Type Description Double | Improve this Doc View Source Inverse() Declaration public Matrix3d Inverse() Returns Type Description Matrix3d | Improve this Doc View Source Multiply(ref Vector3d) Declaration public Vector3d Multiply(ref Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Vector3d | Improve this Doc View Source Multiply(ref Vector3d, ref Vector3d) Declaration public void Multiply(ref Vector3d v, ref Vector3d vOut) Parameters Type Name Description Vector3d v Vector3d vOut | Improve this Doc View Source Row(Int32) Declaration public Vector3d Row(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3d | Improve this Doc View Source ToBuffer() Declaration public double[] ToBuffer() Returns Type Description Double [] | Improve this Doc View Source ToBuffer(Double[]) Declaration public void ToBuffer(double[] buf) Parameters Type Name Description Double [] buf | Improve this Doc View Source ToQuaternion() Declaration public Quaterniond ToQuaternion() Returns Type Description Quaterniond | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() | Improve this Doc View Source ToString(String) Declaration public string ToString(string fmt) Parameters Type Name Description String fmt Returns Type Description String | Improve this Doc View Source Transpose() Declaration public Matrix3d Transpose() Returns Type Description Matrix3d Operators | Improve this Doc View Source Addition(Matrix3d, Matrix3d) Declaration public static Matrix3d operator +(Matrix3d mat1, Matrix3d mat2) Parameters Type Name Description Matrix3d mat1 Matrix3d mat2 Returns Type Description Matrix3d | Improve this Doc View Source Multiply(Matrix3d, Matrix3d) Declaration public static Matrix3d operator *(Matrix3d mat1, Matrix3d mat2) Parameters Type Name Description Matrix3d mat1 Matrix3d mat2 Returns Type Description Matrix3d | Improve this Doc View Source Multiply(Matrix3d, Vector3d) Declaration public static Vector3d operator *(Matrix3d mat, Vector3d v) Parameters Type Name Description Matrix3d mat Vector3d v Returns Type Description Vector3d | Improve this Doc View Source Multiply(Matrix3d, Double) Declaration public static Matrix3d operator *(Matrix3d mat, double f) Parameters Type Name Description Matrix3d mat Double f Returns Type Description Matrix3d | Improve this Doc View Source Multiply(Double, Matrix3d) Declaration public static Matrix3d operator *(double f, Matrix3d mat) Parameters Type Name Description Double f Matrix3d mat Returns Type Description Matrix3d | Improve this Doc View Source Subtraction(Matrix3d, Matrix3d) Declaration public static Matrix3d operator -(Matrix3d mat1, Matrix3d mat2) Parameters Type Name Description Matrix3d mat1 Matrix3d mat2 Returns Type Description Matrix3d"
  },
  "api/g3.Matrix3f.html": {
    "href": "api/g3.Matrix3f.html",
    "title": "Struct Matrix3f | ViRGIS VR GIS",
    "keywords": "Struct Matrix3f Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Matrix3f Constructors | Improve this Doc View Source Matrix3f(Vector3f, Vector3f, Vector3f, Boolean) Declaration public Matrix3f(Vector3f v1, Vector3f v2, Vector3f v3, bool bRows) Parameters Type Name Description Vector3f v1 Vector3f v2 Vector3f v3 Boolean bRows | Improve this Doc View Source Matrix3f(Boolean) Declaration public Matrix3f(bool bIdentity) Parameters Type Name Description Boolean bIdentity | Improve this Doc View Source Matrix3f(Double[]) Declaration public Matrix3f(double[] mat) Parameters Type Name Description Double [] mat | Improve this Doc View Source Matrix3f(Double[,]) Declaration public Matrix3f(double[, ] mat) Parameters Type Name Description Double [,] mat | Improve this Doc View Source Matrix3f(Func<Int32, Int32, Single>) Declaration public Matrix3f(Func<int, int, float> matF) Parameters Type Name Description Func < Int32 , Int32 , Single > matF | Improve this Doc View Source Matrix3f(Func<Int32, Single>) Declaration public Matrix3f(Func<int, float> matBufferF) Parameters Type Name Description Func < Int32 , Single > matBufferF | Improve this Doc View Source Matrix3f(Single, Single, Single) Declaration public Matrix3f(float m00, float m11, float m22) Parameters Type Name Description Single m00 Single m11 Single m22 | Improve this Doc View Source Matrix3f(Single, Single, Single, Single, Single, Single, Single, Single, Single) Declaration public Matrix3f(float m00, float m01, float m02, float m10, float m11, float m12, float m20, float m21, float m22) Parameters Type Name Description Single m00 Single m01 Single m02 Single m10 Single m11 Single m12 Single m20 Single m21 Single m22 | Improve this Doc View Source Matrix3f(Single[]) Declaration public Matrix3f(float[] mat) Parameters Type Name Description Single [] mat | Improve this Doc View Source Matrix3f(Single[,]) Declaration public Matrix3f(float[, ] mat) Parameters Type Name Description Single [,] mat Fields | Improve this Doc View Source Identity Declaration public static readonly Matrix3f Identity Field Value Type Description Matrix3f | Improve this Doc View Source Row0 Declaration public Vector3f Row0 Field Value Type Description Vector3f | Improve this Doc View Source Row1 Declaration public Vector3f Row1 Field Value Type Description Vector3f | Improve this Doc View Source Row2 Declaration public Vector3f Row2 Field Value Type Description Vector3f | Improve this Doc View Source Zero Declaration public static readonly Matrix3f Zero Field Value Type Description Matrix3f Properties | Improve this Doc View Source Determinant Declaration public float Determinant { get; } Property Value Type Description Single | Improve this Doc View Source Item[Int32] Declaration public float this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Single | Improve this Doc View Source Item[Int32, Int32] Declaration public float this[int r, int c] { get; set; } Parameters Type Name Description Int32 r Int32 c Property Value Type Description Single Methods | Improve this Doc View Source AxisAngleD(Vector3f, Single) Declaration public static Matrix3f AxisAngleD(Vector3f axis, float angleDeg) Parameters Type Name Description Vector3f axis Single angleDeg Returns Type Description Matrix3f | Improve this Doc View Source Column(Int32) Declaration public Vector3f Column(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3f | Improve this Doc View Source EpsilonEqual(Matrix3f, Single) Declaration public bool EpsilonEqual(Matrix3f m2, float epsilon) Parameters Type Name Description Matrix3f m2 Single epsilon Returns Type Description Boolean | Improve this Doc View Source Inverse() Declaration public Matrix3f Inverse() Returns Type Description Matrix3f | Improve this Doc View Source Multiply(ref Vector3f) Declaration public Vector3f Multiply(ref Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description Vector3f | Improve this Doc View Source Multiply(ref Vector3f, ref Vector3f) Declaration public void Multiply(ref Vector3f v, ref Vector3f vOut) Parameters Type Name Description Vector3f v Vector3f vOut | Improve this Doc View Source Row(Int32) Declaration public Vector3f Row(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3f | Improve this Doc View Source ToBuffer() Declaration public float[] ToBuffer() Returns Type Description Single [] | Improve this Doc View Source ToBuffer(Single[]) Declaration public void ToBuffer(float[] buf) Parameters Type Name Description Single [] buf | Improve this Doc View Source ToQuaternion() Declaration public Quaternionf ToQuaternion() Returns Type Description Quaternionf | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() | Improve this Doc View Source ToString(String) Declaration public string ToString(string fmt) Parameters Type Name Description String fmt Returns Type Description String | Improve this Doc View Source Transpose() Declaration public Matrix3f Transpose() Returns Type Description Matrix3f Operators | Improve this Doc View Source Addition(Matrix3f, Matrix3f) Declaration public static Matrix3f operator +(Matrix3f mat1, Matrix3f mat2) Parameters Type Name Description Matrix3f mat1 Matrix3f mat2 Returns Type Description Matrix3f | Improve this Doc View Source Multiply(Matrix3f, Matrix3f) Declaration public static Matrix3f operator *(Matrix3f mat1, Matrix3f mat2) Parameters Type Name Description Matrix3f mat1 Matrix3f mat2 Returns Type Description Matrix3f | Improve this Doc View Source Multiply(Matrix3f, Vector3f) Declaration public static Vector3f operator *(Matrix3f mat, Vector3f v) Parameters Type Name Description Matrix3f mat Vector3f v Returns Type Description Vector3f | Improve this Doc View Source Multiply(Matrix3f, Single) Declaration public static Matrix3f operator *(Matrix3f mat, float f) Parameters Type Name Description Matrix3f mat Single f Returns Type Description Matrix3f | Improve this Doc View Source Multiply(Single, Matrix3f) Declaration public static Matrix3f operator *(float f, Matrix3f mat) Parameters Type Name Description Single f Matrix3f mat Returns Type Description Matrix3f | Improve this Doc View Source Subtraction(Matrix3f, Matrix3f) Declaration public static Matrix3f operator -(Matrix3f mat1, Matrix3f mat2) Parameters Type Name Description Matrix3f mat1 Matrix3f mat2 Returns Type Description Matrix3f"
  },
  "api/g3.MatrixUtil.html": {
    "href": "api/g3.MatrixUtil.html",
    "title": "Class MatrixUtil | ViRGIS VR GIS",
    "keywords": "Class MatrixUtil Inheritance Object MatrixUtil Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class MatrixUtil Methods | Improve this Doc View Source Determinant3x3(Double[]) Declaration public static double Determinant3x3(double[] M) Parameters Type Name Description Double [] M Returns Type Description Double | Improve this Doc View Source MakeDiagonal3x3(Double, Double, Double) Declaration public static double[] MakeDiagonal3x3(double a, double b, double c) Parameters Type Name Description Double a Double b Double c Returns Type Description Double [] | Improve this Doc View Source MakeIdentity3x3(Double, Double, Double) Declaration public static double[] MakeIdentity3x3(double a, double b, double c) Parameters Type Name Description Double a Double b Double c Returns Type Description Double [] | Improve this Doc View Source Multiply3x3(Double[], Vector3d) Declaration public static Vector3d Multiply3x3(double[] M, Vector3d vec) Parameters Type Name Description Double [] M Vector3d vec Returns Type Description Vector3d | Improve this Doc View Source Multiply3x3(Double[], Double[], Double[]) Declaration public static void Multiply3x3(double[] A, double[] B, double[] C) Parameters Type Name Description Double [] A Double [] B Double [] C | Improve this Doc View Source SetDiagonal3x3(Double[], Double, Double, Double) Declaration public static void SetDiagonal3x3(double[] M, double a, double b, double c) Parameters Type Name Description Double [] M Double a Double b Double c | Improve this Doc View Source SetIdentity3x3(Double[], Double, Double, Double) Declaration public static void SetIdentity3x3(double[] M, double a, double b, double c) Parameters Type Name Description Double [] M Double a Double b Double c | Improve this Doc View Source Transpose3x3(Double[]) Declaration public static void Transpose3x3(double[] M) Parameters Type Name Description Double [] M | Improve this Doc View Source Transpose3x3(Double[], Double[]) Declaration public static void Transpose3x3(double[] M, double[] MTranspose) Parameters Type Name Description Double [] M Double [] MTranspose"
  },
  "api/g3.MemoryPool-1.html": {
    "href": "api/g3.MemoryPool-1.html",
    "title": "Class MemoryPool<T> | ViRGIS VR GIS",
    "keywords": "Class MemoryPool<T> Very basic object pool class. Inheritance Object MemoryPool<T> Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MemoryPool<T> where T : class, new() Type Parameters Name Description T Constructors | Improve this Doc View Source MemoryPool() Declaration public MemoryPool() Methods | Improve this Doc View Source Allocate() Declaration public T Allocate() Returns Type Description T | Improve this Doc View Source FreeAll() Declaration public void FreeAll() | Improve this Doc View Source Return(T) Declaration public void Return(T obj) Parameters Type Name Description T obj | Improve this Doc View Source ReturnAll() Declaration public void ReturnAll()"
  },
  "api/g3.MeshBoolean.html": {
    "href": "api/g3.MeshBoolean.html",
    "title": "Class MeshBoolean | ViRGIS VR GIS",
    "keywords": "Class MeshBoolean Inheritance Object MeshBoolean Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshBoolean Fields | Improve this Doc View Source Result Declaration public DMesh3 Result Field Value Type Description DMesh3 | Improve this Doc View Source Target Declaration public DMesh3 Target Field Value Type Description DMesh3 | Improve this Doc View Source Tool Declaration public DMesh3 Tool Field Value Type Description DMesh3 | Improve this Doc View Source VertexSnapTol Declaration public double VertexSnapTol Field Value Type Description Double Methods | Improve this Doc View Source Compute() Declaration public bool Compute() Returns Type Description Boolean"
  },
  "api/g3.MeshBoundaryEdgeMidpoints.html": {
    "href": "api/g3.MeshBoundaryEdgeMidpoints.html",
    "title": "Class MeshBoundaryEdgeMidpoints | ViRGIS VR GIS",
    "keywords": "Class MeshBoundaryEdgeMidpoints Present mesh boundary-edge midpoints as a point set Inheritance Object MeshBoundaryEdgeMidpoints Implements IPointSet Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshBoundaryEdgeMidpoints : IPointSet Constructors | Improve this Doc View Source MeshBoundaryEdgeMidpoints(DMesh3) Declaration public MeshBoundaryEdgeMidpoints(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh Fields | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 Properties | Improve this Doc View Source HasVertexColors Declaration public bool HasVertexColors { get; } Property Value Type Description Boolean | Improve this Doc View Source HasVertexNormals Declaration public bool HasVertexNormals { get; } Property Value Type Description Boolean | Improve this Doc View Source MaxVertexID Declaration public int MaxVertexID { get; } Property Value Type Description Int32 | Improve this Doc View Source Timestamp Timestamp is incremented any time any change is made to the mesh Declaration public int Timestamp { get; } Property Value Type Description Int32 | Improve this Doc View Source VertexCount Declaration public int VertexCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source GetVertex(Int32) Declaration public Vector3d GetVertex(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3d | Improve this Doc View Source GetVertexColor(Int32) Declaration public Vector3f GetVertexColor(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3f | Improve this Doc View Source GetVertexNormal(Int32) Declaration public Vector3f GetVertexNormal(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3f | Improve this Doc View Source IsVertex(Int32) Declaration public bool IsVertex(int vID) Parameters Type Name Description Int32 vID Returns Type Description Boolean | Improve this Doc View Source VertexIndices() Declaration public IEnumerable<int> VertexIndices() Returns Type Description IEnumerable < Int32 > Implements IPointSet"
  },
  "api/g3.MeshBoundaryLoops.FailureBehaviors.html": {
    "href": "api/g3.MeshBoundaryLoops.FailureBehaviors.html",
    "title": "Enum MeshBoundaryLoops.FailureBehaviors | ViRGIS VR GIS",
    "keywords": "Enum MeshBoundaryLoops.FailureBehaviors Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum FailureBehaviors Fields Name Description ConvertToOpenSpan ThrowException"
  },
  "api/g3.MeshBoundaryLoops.html": {
    "href": "api/g3.MeshBoundaryLoops.html",
    "title": "Class MeshBoundaryLoops | ViRGIS VR GIS",
    "keywords": "Class MeshBoundaryLoops Extract boundary EdgeLoops from Mesh. Can also extract EdgeSpans for open areas, however default behavior is to ignore these. Set .SpanBehavior to configure. Inheritance Object MeshBoundaryLoops Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshBoundaryLoops : IEnumerable<EdgeLoop>, IEnumerable Constructors | Improve this Doc View Source MeshBoundaryLoops(DMesh3, Boolean) Declaration public MeshBoundaryLoops(DMesh3 mesh, bool bAutoCompute = true) Parameters Type Name Description DMesh3 mesh Boolean bAutoCompute Fields | Improve this Doc View Source EdgeFilterF Declaration public Func<int, bool> EdgeFilterF Field Value Type Description Func < Int32 , Boolean > | Improve this Doc View Source FailureBehavior Declaration public MeshBoundaryLoops.FailureBehaviors FailureBehavior Field Value Type Description MeshBoundaryLoops.FailureBehaviors | Improve this Doc View Source FailureBowties Declaration public List<int> FailureBowties Field Value Type Description List < Int32 > | Improve this Doc View Source FellBackToSpansOnFailure Declaration public bool FellBackToSpansOnFailure Field Value Type Description Boolean | Improve this Doc View Source Loops Declaration public List<EdgeLoop> Loops Field Value Type Description List < EdgeLoop > | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 | Improve this Doc View Source SawOpenSpans Declaration public bool SawOpenSpans Field Value Type Description Boolean | Improve this Doc View Source SpanBehavior Declaration public MeshBoundaryLoops.SpanBehaviors SpanBehavior Field Value Type Description MeshBoundaryLoops.SpanBehaviors | Improve this Doc View Source Spans Declaration public List<EdgeSpan> Spans Field Value Type Description List < EdgeSpan > Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source Item[Int32] Declaration public EdgeLoop this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description EdgeLoop | Improve this Doc View Source MaxVerticesLoopIndex Index of Loop with largest vertex count Declaration public int MaxVerticesLoopIndex { get; } Property Value Type Description Int32 | Improve this Doc View Source SpanCount Declaration public int SpanCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Compute() Find the set of boundary EdgeLoops. Note that if we encounter topological issues, we will throw MeshBoundaryLoopsException w/ more info (if possible) Declaration public bool Compute() Returns Type Description Boolean | Improve this Doc View Source FindLoopContainingEdge(Int32) find the loop index that contains an edge, or return -1 Declaration public int FindLoopContainingEdge(int eid) Parameters Type Name Description Int32 eid Returns Type Description Int32 | Improve this Doc View Source FindLoopContainingVertex(Int32) find the loop index that contains a vertex, or return -1 Declaration public int FindLoopContainingVertex(int vid) Parameters Type Name Description Int32 vid Returns Type Description Int32 | Improve this Doc View Source FindVertexIndex(Int32) find pair (loop_index,in_loop_index) of vertex vID in EdgeLoops, or Index2i.Max if not found Declaration public Index2i FindVertexIndex(int vID) Parameters Type Name Description Int32 vID Returns Type Description Index2i | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<EdgeLoop> GetEnumerator() Returns Type Description IEnumerator < EdgeLoop >"
  },
  "api/g3.MeshBoundaryLoops.SpanBehaviors.html": {
    "href": "api/g3.MeshBoundaryLoops.SpanBehaviors.html",
    "title": "Enum MeshBoundaryLoops.SpanBehaviors | ViRGIS VR GIS",
    "keywords": "Enum MeshBoundaryLoops.SpanBehaviors Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum SpanBehaviors Fields Name Description Compute Ignore ThrowException"
  },
  "api/g3.MeshBoundaryLoopsException.html": {
    "href": "api/g3.MeshBoundaryLoopsException.html",
    "title": "Class MeshBoundaryLoopsException | ViRGIS VR GIS",
    "keywords": "Class MeshBoundaryLoopsException Inheritance Object Exception MeshBoundaryLoopsException Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshBoundaryLoopsException : Exception, _Exception, ISerializable Constructors | Improve this Doc View Source MeshBoundaryLoopsException(String) Declaration public MeshBoundaryLoopsException(string message) Parameters Type Name Description String message Fields | Improve this Doc View Source BowtieFailure Declaration public bool BowtieFailure Field Value Type Description Boolean | Improve this Doc View Source RepeatedEdge Declaration public bool RepeatedEdge Field Value Type Description Boolean | Improve this Doc View Source UnclosedLoop Declaration public bool UnclosedLoop Field Value Type Description Boolean"
  },
  "api/g3.MeshComponents.html": {
    "href": "api/g3.MeshComponents.html",
    "title": "Enum MeshComponents | ViRGIS VR GIS",
    "keywords": "Enum MeshComponents Namespace : g3 Assembly : geometry3Sharp.dll Syntax [Flags] public enum MeshComponents Fields Name Description All FaceGroups None VertexColors VertexNormals VertexUVs"
  },
  "api/g3.MeshConnectedComponents.Component.html": {
    "href": "api/g3.MeshConnectedComponents.Component.html",
    "title": "Struct MeshConnectedComponents.Component | ViRGIS VR GIS",
    "keywords": "Struct MeshConnectedComponents.Component Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Component Fields | Improve this Doc View Source Indices Declaration public int[] Indices Field Value Type Description Int32 []"
  },
  "api/g3.MeshConnectedComponents.html": {
    "href": "api/g3.MeshConnectedComponents.html",
    "title": "Class MeshConnectedComponents | ViRGIS VR GIS",
    "keywords": "Class MeshConnectedComponents Inheritance Object MeshConnectedComponents Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshConnectedComponents : IEnumerable<MeshConnectedComponents.Component>, IEnumerable Constructors | Improve this Doc View Source MeshConnectedComponents(DMesh3) Declaration public MeshConnectedComponents(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh Fields | Improve this Doc View Source Components Declaration public List<MeshConnectedComponents.Component> Components Field Value Type Description List < MeshConnectedComponents.Component > | Improve this Doc View Source FilterF Declaration public Func<int, bool> FilterF Field Value Type Description Func < Int32 , Boolean > | Improve this Doc View Source FilterSet Declaration public IEnumerable<int> FilterSet Field Value Type Description IEnumerable < Int32 > | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 | Improve this Doc View Source SeedFilterF Declaration public Func<int, bool> SeedFilterF Field Value Type Description Func < Int32 , Boolean > Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source Item[Int32] Declaration public MeshConnectedComponents.Component this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description MeshConnectedComponents.Component | Improve this Doc View Source LargestByCount Declaration public int LargestByCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source FindConnectedT() Declaration public void FindConnectedT() | Improve this Doc View Source FindConnectedT(DMesh3, Int32) Utility function that finds set of triangles connected to tSeed. Does not use MeshConnectedComponents class. Declaration public static HashSet<int> FindConnectedT(DMesh3 mesh, int tSeed) Parameters Type Name Description DMesh3 mesh Int32 tSeed Returns Type Description HashSet < Int32 > | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<MeshConnectedComponents.Component> GetEnumerator() Returns Type Description IEnumerator < MeshConnectedComponents.Component > | Improve this Doc View Source LargestT(DMesh3) extract largest shell of meshIn Declaration public static DMesh3 LargestT(DMesh3 meshIn) Parameters Type Name Description DMesh3 meshIn Returns Type Description DMesh3 | Improve this Doc View Source Separate(DMesh3) Separate input mesh into disconnected shells. Resulting array is sorted by decreasing triangle count. Declaration public static DMesh3[] Separate(DMesh3 meshIn) Parameters Type Name Description DMesh3 meshIn Returns Type Description DMesh3 [] | Improve this Doc View Source SortByCount(Boolean) Declaration public void SortByCount(bool bIncreasing = true) Parameters Type Name Description Boolean bIncreasing | Improve this Doc View Source SortByValue(Func<MeshConnectedComponents.Component, Double>, Boolean) Evaluate valueF for each component and sort by that Declaration public void SortByValue(Func<MeshConnectedComponents.Component, double> valueF, bool bIncreasing = true) Parameters Type Name Description Func < MeshConnectedComponents.Component , Double > valueF Boolean bIncreasing"
  },
  "api/g3.MeshConstraints.html": {
    "href": "api/g3.MeshConstraints.html",
    "title": "Class MeshConstraints | ViRGIS VR GIS",
    "keywords": "Class MeshConstraints Inheritance Object MeshConstraints Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshConstraints Constructors | Improve this Doc View Source MeshConstraints() Declaration public MeshConstraints() Properties | Improve this Doc View Source HasConstraints Declaration public bool HasConstraints { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source AllocateSetID() Declaration public int AllocateSetID() Returns Type Description Int32 | Improve this Doc View Source ClearEdgeConstraint(Int32) Declaration public void ClearEdgeConstraint(int eid) Parameters Type Name Description Int32 eid | Improve this Doc View Source ClearVertexConstraint(Int32) Declaration public void ClearVertexConstraint(int vid) Parameters Type Name Description Int32 vid | Improve this Doc View Source FindConstrainedEdgesBySetID(Int32) Declaration public List<int> FindConstrainedEdgesBySetID(int setID) Parameters Type Name Description Int32 setID Returns Type Description List < Int32 > | Improve this Doc View Source GetEdgeConstraint(Int32) Declaration public EdgeConstraint GetEdgeConstraint(int eid) Parameters Type Name Description Int32 eid Returns Type Description EdgeConstraint | Improve this Doc View Source GetVertexConstraint(Int32) Declaration public VertexConstraint GetVertexConstraint(int vid) Parameters Type Name Description Int32 vid Returns Type Description VertexConstraint | Improve this Doc View Source GetVertexConstraint(Int32, ref VertexConstraint) Declaration public bool GetVertexConstraint(int vid, ref VertexConstraint vc) Parameters Type Name Description Int32 vid VertexConstraint vc Returns Type Description Boolean | Improve this Doc View Source HasEdgeConstraint(Int32) Declaration public bool HasEdgeConstraint(int eid) Parameters Type Name Description Int32 eid Returns Type Description Boolean | Improve this Doc View Source HasVertexConstraint(Int32) Declaration public bool HasVertexConstraint(int vid) Parameters Type Name Description Int32 vid Returns Type Description Boolean | Improve this Doc View Source SetOrUpdateEdgeConstraint(Int32, EdgeConstraint) Declaration public void SetOrUpdateEdgeConstraint(int eid, EdgeConstraint ec) Parameters Type Name Description Int32 eid EdgeConstraint ec | Improve this Doc View Source SetOrUpdateVertexConstraint(Int32, VertexConstraint) Declaration public void SetOrUpdateVertexConstraint(int vid, VertexConstraint vc) Parameters Type Name Description Int32 vid VertexConstraint vc | Improve this Doc View Source VertexConstraintsItr() Declaration public IEnumerable VertexConstraintsItr() Returns Type Description IEnumerable"
  },
  "api/g3.MeshConstraintUtil.html": {
    "href": "api/g3.MeshConstraintUtil.html",
    "title": "Class MeshConstraintUtil | ViRGIS VR GIS",
    "keywords": "Class MeshConstraintUtil Inheritance Object MeshConstraintUtil Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class MeshConstraintUtil Methods | Improve this Doc View Source AddTrackedEdges(MeshConstraints, Int32[], Int32) Declaration public static void AddTrackedEdges(MeshConstraints cons, int[] edges, int setID) Parameters Type Name Description MeshConstraints cons Int32 [] edges Int32 setID | Improve this Doc View Source ConstrainVtxLoopTo(MeshConstraints, DMesh3, IList<Int32>, IProjectionTarget, Int32) Declaration public static void ConstrainVtxLoopTo(MeshConstraints cons, DMesh3 mesh, IList<int> loopV, IProjectionTarget target, int setID = -1) Parameters Type Name Description MeshConstraints cons DMesh3 mesh IList < Int32 > loopV IProjectionTarget target Int32 setID | Improve this Doc View Source ConstrainVtxLoopTo(Remesher, Int32[], IProjectionTarget, Int32) Declaration public static void ConstrainVtxLoopTo(Remesher r, int[] loopV, IProjectionTarget target, int setID = -1) Parameters Type Name Description Remesher r Int32 [] loopV IProjectionTarget target Int32 setID | Improve this Doc View Source ConstrainVtxSpanTo(MeshConstraints, DMesh3, IList<Int32>, IProjectionTarget, Int32) Declaration public static void ConstrainVtxSpanTo(MeshConstraints cons, DMesh3 mesh, IList<int> spanV, IProjectionTarget target, int setID = -1) Parameters Type Name Description MeshConstraints cons DMesh3 mesh IList < Int32 > spanV IProjectionTarget target Int32 setID | Improve this Doc View Source ConstrainVtxSpanTo(Remesher, Int32[], IProjectionTarget, Int32) Declaration public static void ConstrainVtxSpanTo(Remesher r, int[] spanV, IProjectionTarget target, int setID = -1) Parameters Type Name Description Remesher r Int32 [] spanV IProjectionTarget target Int32 setID | Improve this Doc View Source FixAllBoundaryEdges(MeshConstraints, DMesh3) Declaration public static void FixAllBoundaryEdges(MeshConstraints cons, DMesh3 mesh) Parameters Type Name Description MeshConstraints cons DMesh3 mesh | Improve this Doc View Source FixAllBoundaryEdges(Remesher) Declaration public static void FixAllBoundaryEdges(Remesher r) Parameters Type Name Description Remesher r | Improve this Doc View Source FixAllBoundaryEdges_AllowCollapse(MeshConstraints, DMesh3, Int32) Declaration public static void FixAllBoundaryEdges_AllowCollapse(MeshConstraints cons, DMesh3 mesh, int setID) Parameters Type Name Description MeshConstraints cons DMesh3 mesh Int32 setID | Improve this Doc View Source FixAllBoundaryEdges_AllowSplit(MeshConstraints, DMesh3, Int32) Declaration public static void FixAllBoundaryEdges_AllowSplit(MeshConstraints cons, DMesh3 mesh, int setID) Parameters Type Name Description MeshConstraints cons DMesh3 mesh Int32 setID | Improve this Doc View Source FixAllGroupBoundaryEdges(MeshConstraints, DMesh3, Boolean) Declaration public static void FixAllGroupBoundaryEdges(MeshConstraints cons, DMesh3 mesh, bool bPinVertices) Parameters Type Name Description MeshConstraints cons DMesh3 mesh Boolean bPinVertices | Improve this Doc View Source FixAllGroupBoundaryEdges(Remesher, Boolean) Declaration public static void FixAllGroupBoundaryEdges(Remesher r, bool bPinVertices) Parameters Type Name Description Remesher r Boolean bPinVertices | Improve this Doc View Source FixEdges(MeshConstraints, DMesh3, IEnumerable<Int32>) Declaration public static void FixEdges(MeshConstraints cons, DMesh3 mesh, IEnumerable<int> edges) Parameters Type Name Description MeshConstraints cons DMesh3 mesh IEnumerable < Int32 > edges | Improve this Doc View Source FixSubmeshBoundaryEdges(MeshConstraints, DSubmesh3) Declaration public static void FixSubmeshBoundaryEdges(MeshConstraints cons, DSubmesh3 sub) Parameters Type Name Description MeshConstraints cons DSubmesh3 sub | Improve this Doc View Source PreserveBoundaryLoops(MeshConstraints, DMesh3) Declaration public static void PreserveBoundaryLoops(MeshConstraints cons, DMesh3 mesh) Parameters Type Name Description MeshConstraints cons DMesh3 mesh | Improve this Doc View Source PreserveBoundaryLoops(Remesher) Declaration public static void PreserveBoundaryLoops(Remesher r) Parameters Type Name Description Remesher r"
  },
  "api/g3.MeshDecomposition.Component.html": {
    "href": "api/g3.MeshDecomposition.Component.html",
    "title": "Struct MeshDecomposition.Component | ViRGIS VR GIS",
    "keywords": "Struct MeshDecomposition.Component Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Component Fields | Improve this Doc View Source id Declaration public int id Field Value Type Description Int32 | Improve this Doc View Source source_vertices Declaration public int[] source_vertices Field Value Type Description Int32 [] | Improve this Doc View Source tri_count Declaration public int tri_count Field Value Type Description Int32 | Improve this Doc View Source triangles Declaration public int[] triangles Field Value Type Description Int32 []"
  },
  "api/g3.MeshDecomposition.html": {
    "href": "api/g3.MeshDecomposition.html",
    "title": "Class MeshDecomposition | ViRGIS VR GIS",
    "keywords": "Class MeshDecomposition Inheritance Object MeshDecomposition Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshDecomposition Constructors | Improve this Doc View Source MeshDecomposition(DMesh3, IMeshComponentManager) Declaration public MeshDecomposition(DMesh3 mesh, IMeshComponentManager manager) Parameters Type Name Description DMesh3 mesh IMeshComponentManager manager Fields | Improve this Doc View Source TrackVertexMapping Declaration public bool TrackVertexMapping Field Value Type Description Boolean Properties | Improve this Doc View Source Manager Declaration public IMeshComponentManager Manager { get; set; } Property Value Type Description IMeshComponentManager | Improve this Doc View Source MaxComponentSize Declaration public int MaxComponentSize { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source BuildLinear() Declaration public void BuildLinear()"
  },
  "api/g3.MeshEdgeMidpoints.html": {
    "href": "api/g3.MeshEdgeMidpoints.html",
    "title": "Class MeshEdgeMidpoints | ViRGIS VR GIS",
    "keywords": "Class MeshEdgeMidpoints Present mesh edge midpoints as a point set Inheritance Object MeshEdgeMidpoints Implements IPointSet Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshEdgeMidpoints : IPointSet Constructors | Improve this Doc View Source MeshEdgeMidpoints(DMesh3) Declaration public MeshEdgeMidpoints(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh Fields | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 Properties | Improve this Doc View Source HasVertexColors Declaration public bool HasVertexColors { get; } Property Value Type Description Boolean | Improve this Doc View Source HasVertexNormals Declaration public bool HasVertexNormals { get; } Property Value Type Description Boolean | Improve this Doc View Source MaxVertexID Declaration public int MaxVertexID { get; } Property Value Type Description Int32 | Improve this Doc View Source Timestamp Timestamp is incremented any time any change is made to the mesh Declaration public int Timestamp { get; } Property Value Type Description Int32 | Improve this Doc View Source VertexCount Declaration public int VertexCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source GetVertex(Int32) Declaration public Vector3d GetVertex(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3d | Improve this Doc View Source GetVertexColor(Int32) Declaration public Vector3f GetVertexColor(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3f | Improve this Doc View Source GetVertexNormal(Int32) Declaration public Vector3f GetVertexNormal(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3f | Improve this Doc View Source IsVertex(Int32) Declaration public bool IsVertex(int vID) Parameters Type Name Description Int32 vID Returns Type Description Boolean | Improve this Doc View Source VertexIndices() Declaration public IEnumerable<int> VertexIndices() Returns Type Description IEnumerable < Int32 > Implements IPointSet"
  },
  "api/g3.MeshEdgeSelection.html": {
    "href": "api/g3.MeshEdgeSelection.html",
    "title": "Class MeshEdgeSelection | ViRGIS VR GIS",
    "keywords": "Class MeshEdgeSelection Inheritance Object MeshEdgeSelection Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshEdgeSelection : IEnumerable<int>, IEnumerable Constructors | Improve this Doc View Source MeshEdgeSelection(DMesh3) Declaration public MeshEdgeSelection(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh | Improve this Doc View Source MeshEdgeSelection(DMesh3, MeshFaceSelection, Int32) Declaration public MeshEdgeSelection(DMesh3 mesh, MeshFaceSelection convertT, int minCount = 1) Parameters Type Name Description DMesh3 mesh MeshFaceSelection convertT Int32 minCount | Improve this Doc View Source MeshEdgeSelection(DMesh3, MeshVertexSelection, Int32) Declaration public MeshEdgeSelection(DMesh3 mesh, MeshVertexSelection convertV, int minCount = 2) Parameters Type Name Description DMesh3 mesh MeshVertexSelection convertV Int32 minCount | Improve this Doc View Source MeshEdgeSelection(MeshEdgeSelection) Declaration public MeshEdgeSelection(MeshEdgeSelection copy) Parameters Type Name Description MeshEdgeSelection copy Fields | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 Properties | Improve this Doc View Source Bitmap Declaration protected BitArray Bitmap { get; } Property Value Type Description BitArray | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Deselect(IEnumerable<Int32>) Declaration public void Deselect(IEnumerable<int> edges) Parameters Type Name Description IEnumerable < Int32 > edges | Improve this Doc View Source Deselect(Int32) Declaration public void Deselect(int tid) Parameters Type Name Description Int32 tid | Improve this Doc View Source Deselect(Int32[]) Declaration public void Deselect(int[] edges) Parameters Type Name Description Int32 [] edges | Improve this Doc View Source DeselectAll() Declaration public void DeselectAll() | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<int> GetEnumerator() Returns Type Description IEnumerator < Int32 > | Improve this Doc View Source IsSelected(Int32) Declaration public bool IsSelected(int eid) Parameters Type Name Description Int32 eid Returns Type Description Boolean | Improve this Doc View Source Select(IEnumerable<Int32>) Declaration public void Select(IEnumerable<int> edges) Parameters Type Name Description IEnumerable < Int32 > edges | Improve this Doc View Source Select(List<Int32>) Declaration public void Select(List<int> edges) Parameters Type Name Description List < Int32 > edges | Improve this Doc View Source Select(Func<Int32, Boolean>) Declaration public void Select(Func<int, bool> selectF) Parameters Type Name Description Func < Int32 , Boolean > selectF | Improve this Doc View Source Select(Int32) Declaration public void Select(int eid) Parameters Type Name Description Int32 eid | Improve this Doc View Source Select(Int32[]) Declaration public void Select(int[] edges) Parameters Type Name Description Int32 [] edges | Improve this Doc View Source SelectBoundaryTriEdges(MeshFaceSelection) Declaration public void SelectBoundaryTriEdges(MeshFaceSelection triangles) Parameters Type Name Description MeshFaceSelection triangles | Improve this Doc View Source SelectTriangleEdges(IEnumerable<Int32>) Declaration public void SelectTriangleEdges(IEnumerable<int> triangles) Parameters Type Name Description IEnumerable < Int32 > triangles | Improve this Doc View Source SelectVertexEdges(IEnumerable<Int32>) Declaration public void SelectVertexEdges(IEnumerable<int> vertices) Parameters Type Name Description IEnumerable < Int32 > vertices | Improve this Doc View Source SelectVertexEdges(Int32[]) Declaration public void SelectVertexEdges(int[] vertices) Parameters Type Name Description Int32 [] vertices | Improve this Doc View Source ToArray() Declaration public int[] ToArray() Returns Type Description Int32 []"
  },
  "api/g3.MeshEditor.DuplicateTriBehavior.html": {
    "href": "api/g3.MeshEditor.DuplicateTriBehavior.html",
    "title": "Enum MeshEditor.DuplicateTriBehavior | ViRGIS VR GIS",
    "keywords": "Enum MeshEditor.DuplicateTriBehavior Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum DuplicateTriBehavior Fields Name Description AssertAbort AssertContinue Replace UseExisting"
  },
  "api/g3.MeshEditor.html": {
    "href": "api/g3.MeshEditor.html",
    "title": "Class MeshEditor | ViRGIS VR GIS",
    "keywords": "Class MeshEditor Inheritance Object MeshEditor Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshEditor Constructors | Improve this Doc View Source MeshEditor(DMesh3) Declaration public MeshEditor(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh Fields | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 Methods | Improve this Doc View Source AddTriangleFan_OrderedEdgeLoop(Int32, Int32[], Int32) Declaration public virtual int[] AddTriangleFan_OrderedEdgeLoop(int center, int[] edge_loop, int group_id = -1) Parameters Type Name Description Int32 center Int32 [] edge_loop Int32 group_id Returns Type Description Int32 [] | Improve this Doc View Source AddTriangleFan_OrderedVertexLoop(Int32, Int32[], Int32) Declaration public virtual int[] AddTriangleFan_OrderedVertexLoop(int center, int[] vertex_loop, int group_id = -1) Parameters Type Name Description Int32 center Int32 [] vertex_loop Int32 group_id Returns Type Description Int32 [] | Improve this Doc View Source AddTriangleStrip(IList<Frame3f>, IList<Interval1d>, Int32) Declaration public virtual int[] AddTriangleStrip(IList<Frame3f> frames, IList<Interval1d> spans, int group_id = -1) Parameters Type Name Description IList < Frame3f > frames IList < Interval1d > spans Int32 group_id Returns Type Description Int32 [] | Improve this Doc View Source Append(DMesh3, DMesh3) Declaration public static void Append(DMesh3 appendTo, DMesh3 append) Parameters Type Name Description DMesh3 appendTo DMesh3 append | Improve this Doc View Source AppendBox(DMesh3, Frame3f, Vector3f, Colorf) Declaration public static void AppendBox(DMesh3 mesh, Frame3f frame, Vector3f size, Colorf color) Parameters Type Name Description DMesh3 mesh Frame3f frame Vector3f size Colorf color | Improve this Doc View Source AppendBox(DMesh3, Vector3d, Vector3d, Single) Declaration public static void AppendBox(DMesh3 mesh, Vector3d pos, Vector3d normal, float size) Parameters Type Name Description DMesh3 mesh Vector3d pos Vector3d normal Single size | Improve this Doc View Source AppendBox(DMesh3, Vector3d, Vector3d, Single, Colorf) Declaration public static void AppendBox(DMesh3 mesh, Vector3d pos, Vector3d normal, float size, Colorf color) Parameters Type Name Description DMesh3 mesh Vector3d pos Vector3d normal Single size Colorf color | Improve this Doc View Source AppendBox(DMesh3, Vector3d, Single) Declaration public static void AppendBox(DMesh3 mesh, Vector3d pos, float size) Parameters Type Name Description DMesh3 mesh Vector3d pos Single size | Improve this Doc View Source AppendBox(DMesh3, Vector3d, Single, Colorf) Declaration public static void AppendBox(DMesh3 mesh, Vector3d pos, float size, Colorf color) Parameters Type Name Description DMesh3 mesh Vector3d pos Single size Colorf color | Improve this Doc View Source AppendBox(Frame3f, Vector3f) Declaration public void AppendBox(Frame3f frame, Vector3f size) Parameters Type Name Description Frame3f frame Vector3f size | Improve this Doc View Source AppendBox(Frame3f, Vector3f, Colorf) Declaration public void AppendBox(Frame3f frame, Vector3f size, Colorf color) Parameters Type Name Description Frame3f frame Vector3f size Colorf color | Improve this Doc View Source AppendBox(Frame3f, Single) Declaration public void AppendBox(Frame3f frame, float size) Parameters Type Name Description Frame3f frame Single size | Improve this Doc View Source AppendLine(DMesh3, Segment3d, Single) Declaration public static void AppendLine(DMesh3 mesh, Segment3d seg, float size) Parameters Type Name Description DMesh3 mesh Segment3d seg Single size | Improve this Doc View Source AppendLine(Segment3d, Single) Declaration public void AppendLine(Segment3d seg, float size) Parameters Type Name Description Segment3d seg Single size | Improve this Doc View Source AppendLine(Segment3d, Single, Colorf) Declaration public void AppendLine(Segment3d seg, float size, Colorf color) Parameters Type Name Description Segment3d seg Single size Colorf color | Improve this Doc View Source AppendMesh(IMesh, IndexMap, out Int32[], Int32) Declaration public bool AppendMesh(IMesh appendMesh, IndexMap mergeMapV, out int[] mapV, int appendGID = -1) Parameters Type Name Description IMesh appendMesh IndexMap mergeMapV Int32 [] mapV Int32 appendGID Returns Type Description Boolean | Improve this Doc View Source AppendMesh(IMesh, Int32) Declaration public bool AppendMesh(IMesh appendMesh, int appendGID = -1) Parameters Type Name Description IMesh appendMesh Int32 appendGID Returns Type Description Boolean | Improve this Doc View Source AppendMesh(IMesh, out Int32[], Int32) Declaration public bool AppendMesh(IMesh appendMesh, out int[] mapV, int appendGID = -1) Parameters Type Name Description IMesh appendMesh Int32 [] mapV Int32 appendGID Returns Type Description Boolean | Improve this Doc View Source AppendPathSolid(IEnumerable<Vector3d>, Double, Colorf) Declaration public void AppendPathSolid(IEnumerable<Vector3d> vertices, double radius, Colorf color) Parameters Type Name Description IEnumerable < Vector3d > vertices Double radius Colorf color | Improve this Doc View Source Combine(IMesh[]) Declaration public static DMesh3 Combine(params IMesh[] appendMeshes) Parameters Type Name Description IMesh [] appendMeshes Returns Type Description DMesh3 | Improve this Doc View Source DisconnectAllBowties(Int32) Disconnect all bowtie vertices in mesh. Iterates because sometimes disconnecting a bowtie creates new bowties (how??). Returns number of remaining bowties after iterations. Declaration public int DisconnectAllBowties(int nMaxIters = 10) Parameters Type Name Description Int32 nMaxIters Returns Type Description Int32 | Improve this Doc View Source DisconnectBowtie(Int32) separate triangle one-ring at vertex into connected components, and then duplicate vertex once for each component Declaration public void DisconnectBowtie(int vid) Parameters Type Name Description Int32 vid | Improve this Doc View Source DuplicateTriangles(IEnumerable<Int32>, ref IndexMap, Int32) Make a copy of provided triangles, with new vertices. You provide MapV because you know if you are doing a small subset or a full-mesh-copy. Declaration public List<int> DuplicateTriangles(IEnumerable<int> triangles, ref IndexMap MapV, int group_id = -1) Parameters Type Name Description IEnumerable < Int32 > triangles IndexMap MapV Int32 group_id Returns Type Description List < Int32 > | Improve this Doc View Source ReinsertSubmesh(DSubmesh3, ref Int32[], out IndexMap, MeshEditor.DuplicateTriBehavior) Declaration public bool ReinsertSubmesh(DSubmesh3 sub, ref int[] new_tris, out IndexMap SubToNewV, MeshEditor.DuplicateTriBehavior eDuplicateBehavior = MeshEditor.DuplicateTriBehavior.AssertAbort) Parameters Type Name Description DSubmesh3 sub Int32 [] new_tris IndexMap SubToNewV MeshEditor.DuplicateTriBehavior eDuplicateBehavior Returns Type Description Boolean | Improve this Doc View Source RemoveAllBowtieVertices(Boolean) Remove all bowtie vertices in mesh. Makes one pass unless bRepeatUntilClean = true, in which case repeats until no more bowties found Returns true if any vertices were removed Declaration public bool RemoveAllBowtieVertices(bool bRepeatUntilClean) Parameters Type Name Description Boolean bRepeatUntilClean Returns Type Description Boolean | Improve this Doc View Source RemoveFinTriangles(DMesh3, Func<DMesh3, Int32, Boolean>, Boolean) Remove 'fin' triangles that have only one connected triangle. Removing one fin can create another, by default will keep iterating until all fins removed (in a not very efficient way!). Pass bRepeatToConvergence=false to only do one pass. [TODO] if we are repeating, construct face selection from nbrs of first list and iterate over that on future passes! Declaration public static int RemoveFinTriangles(DMesh3 mesh, Func<DMesh3, int, bool> removeF = null, bool bRepeatToConvergence = true) Parameters Type Name Description DMesh3 mesh Func < DMesh3 , Int32 , Boolean > removeF Boolean bRepeatToConvergence Returns Type Description Int32 | Improve this Doc View Source RemoveIsolatedTriangles(DMesh3) Remove 'loner' triangles that have no connected neighbours. Declaration public static bool RemoveIsolatedTriangles(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh Returns Type Description Boolean | Improve this Doc View Source RemoveSmallComponents(DMesh3, Double, Double) Declaration public static int RemoveSmallComponents(DMesh3 mesh, double min_volume, double min_area) Parameters Type Name Description DMesh3 mesh Double min_volume Double min_area Returns Type Description Int32 | Improve this Doc View Source RemoveSmallComponents(Double, Double) Remove any connected components with volume < min_volume area lt; min_area Declaration public int RemoveSmallComponents(double min_volume, double min_area) Parameters Type Name Description Double min_volume Double min_area Returns Type Description Int32 | Improve this Doc View Source RemoveTriangles(DMesh3, IEnumerable<Int32>, Boolean) Declaration public static bool RemoveTriangles(DMesh3 Mesh, IEnumerable<int> triangles, bool bRemoveIsolatedVerts = true) Parameters Type Name Description DMesh3 Mesh IEnumerable < Int32 > triangles Boolean bRemoveIsolatedVerts Returns Type Description Boolean | Improve this Doc View Source RemoveTriangles(DMesh3, IList<Int32>, Boolean) Declaration public static bool RemoveTriangles(DMesh3 Mesh, IList<int> triangles, bool bRemoveIsolatedVerts = true) Parameters Type Name Description DMesh3 Mesh IList < Int32 > triangles Boolean bRemoveIsolatedVerts Returns Type Description Boolean | Improve this Doc View Source RemoveTriangles(IEnumerable<Int32>, Boolean) Declaration public bool RemoveTriangles(IEnumerable<int> triangles, bool bRemoveIsolatedVerts) Parameters Type Name Description IEnumerable < Int32 > triangles Boolean bRemoveIsolatedVerts Returns Type Description Boolean | Improve this Doc View Source RemoveTriangles(IList<Int32>, Boolean) Declaration public bool RemoveTriangles(IList<int> triangles, bool bRemoveIsolatedVerts) Parameters Type Name Description IList < Int32 > triangles Boolean bRemoveIsolatedVerts Returns Type Description Boolean | Improve this Doc View Source RemoveTriangles(Func<Int32, Boolean>, Boolean) Declaration public bool RemoveTriangles(Func<int, bool> selectorF, bool bRemoveIsolatedVerts) Parameters Type Name Description Func < Int32 , Boolean > selectorF Boolean bRemoveIsolatedVerts Returns Type Description Boolean | Improve this Doc View Source RemoveUnusedVertices() Remove any unused vertices in mesh, ie vertices with no edges. Returns number of removed vertices. Declaration public int RemoveUnusedVertices() Returns Type Description Int32 | Improve this Doc View Source RemoveUnusedVertices(DMesh3) Declaration public static int RemoveUnusedVertices(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh Returns Type Description Int32 | Improve this Doc View Source ReverseTriangles(IEnumerable<Int32>, Boolean) Reverse face orientation on a subset of triangles Declaration public void ReverseTriangles(IEnumerable<int> triangles, bool bFlipVtxNormals = true) Parameters Type Name Description IEnumerable < Int32 > triangles Boolean bFlipVtxNormals | Improve this Doc View Source SeparateTriangles(IEnumerable<Int32>, Boolean, out List<Index2i>) Disconnect the given triangles from their neighbours, by duplicating \"boundary\" vertices, ie vertices on edges for which one triangle is in-set and the other is not. If bComputeEdgePairs is true, we return list of old/new edge pairs (useful for stitching) [TODO] currently boundary-edge behaviour is to not duplicate boundary verts Declaration public bool SeparateTriangles(IEnumerable<int> triangles, bool bComputeEdgePairs, out List<Index2i> EdgePairs) Parameters Type Name Description IEnumerable < Int32 > triangles Boolean bComputeEdgePairs List < Index2i > EdgePairs Returns Type Description Boolean | Improve this Doc View Source StitchLoop(Int32[], Int32[], Int32) Trivial back-and-forth stitch between two vertex loops with same length. Loops must have appropriate orientation (which is...??) [TODO] check and fail on bad orientation Declaration public virtual int[] StitchLoop(int[] vloop1, int[] vloop2, int group_id = -1) Parameters Type Name Description Int32 [] vloop1 Int32 [] vloop2 Int32 group_id Returns Type Description Int32 [] | Improve this Doc View Source StitchSpan(IList<Int32>, IList<Int32>, Int32) Trivial back-and-forth stitch between two vertex spans with same length. vertex ordering must reslut in appropriate orientation (which is...??) [TODO] check and fail on bad orientation Declaration public virtual int[] StitchSpan(IList<int> vspan1, IList<int> vspan2, int group_id = -1) Parameters Type Name Description IList < Int32 > vspan1 IList < Int32 > vspan2 Int32 group_id Returns Type Description Int32 [] | Improve this Doc View Source StitchUnorderedEdges(List<Index2i>, Int32, Boolean) Declaration public virtual int[] StitchUnorderedEdges(List<Index2i> EdgePairs, int group_id = -1, bool bAbortOnFailure = true) Parameters Type Name Description List < Index2i > EdgePairs Int32 group_id Boolean bAbortOnFailure Returns Type Description Int32 [] | Improve this Doc View Source StitchUnorderedEdges(List<Index2i>, Int32, Boolean, out Boolean) Stitch two sets of boundary edges that are provided as unordered pairs of edges, by adding triangulated quads between each edge pair. If bAbortOnFailure==true and a failure is encountered during stitching, the triangles added up to that point are removed. If bAbortOnFailure==false, failures are ignored and the returned triangle list may contain invalid values! Declaration public virtual int[] StitchUnorderedEdges(List<Index2i> EdgePairs, int group_id, bool bAbortOnFailure, out bool stitch_incomplete) Parameters Type Name Description List < Index2i > EdgePairs Int32 group_id Boolean bAbortOnFailure Boolean stitch_incomplete Returns Type Description Int32 [] | Improve this Doc View Source StitchVertexLoops_NearestV(Int32[], Int32[], Int32) Trivial back-and-forth stitch between two vertex loops with same length. If nearest vertices of input loops would not be matched, cycles loops so that this is the case. Loops must have appropriate orientation. Declaration public virtual int[] StitchVertexLoops_NearestV(int[] loop0, int[] loop1, int group_id = -1) Parameters Type Name Description Int32 [] loop0 Int32 [] loop1 Int32 group_id Returns Type Description Int32 []"
  },
  "api/g3.MeshExtrudeFaces.html": {
    "href": "api/g3.MeshExtrudeFaces.html",
    "title": "Class MeshExtrudeFaces | ViRGIS VR GIS",
    "keywords": "Class MeshExtrudeFaces Extrude a subset of faces of Mesh. Steps are: 1) separate subset from neighbouring triangles 2) offset them 3) connect original and offset edges (now boundary edges) with a triangle strip Caveats: not sure it works for multiple regions? boundary vertices are currently attached to offset region, rather than also duplicated and then connected w/ strip [TODO] implement this behavior Inheritance Object MeshExtrudeFaces Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshExtrudeFaces Constructors | Improve this Doc View Source MeshExtrudeFaces(DMesh3, IEnumerable<Int32>) Declaration public MeshExtrudeFaces(DMesh3 mesh, IEnumerable<int> triangles) Parameters Type Name Description DMesh3 mesh IEnumerable < Int32 > triangles | Improve this Doc View Source MeshExtrudeFaces(DMesh3, Int32[], Boolean) Declaration public MeshExtrudeFaces(DMesh3 mesh, int[] triangles, bool bForceCopyArray = false) Parameters Type Name Description DMesh3 mesh Int32 [] triangles Boolean bForceCopyArray Fields | Improve this Doc View Source EdgePairs Declaration public List<Index2i> EdgePairs Field Value Type Description List < Index2i > | Improve this Doc View Source ExtrudedPositionF Declaration public Func<Vector3d, Vector3f, int, Vector3d> ExtrudedPositionF Field Value Type Description Func < Vector3d , Vector3f , Int32 , Vector3d > | Improve this Doc View Source ExtrudeVertices Declaration public MeshVertexSelection ExtrudeVertices Field Value Type Description MeshVertexSelection | Improve this Doc View Source Group Declaration public SetGroupBehavior Group Field Value Type Description SetGroupBehavior | Improve this Doc View Source JoinGroupID Declaration public int JoinGroupID Field Value Type Description Int32 | Improve this Doc View Source JoinIncomplete Declaration public bool JoinIncomplete Field Value Type Description Boolean | Improve this Doc View Source JoinTriangles Declaration public int[] JoinTriangles Field Value Type Description Int32 [] | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 | Improve this Doc View Source Triangles Declaration public int[] Triangles Field Value Type Description Int32 [] Methods | Improve this Doc View Source Extrude() Apply the extrustion operation to input Mesh. Will return false if operation is not completed. However changes are not backed out, so if false is returned, input Mesh is in undefined state (generally means there are some holes) Declaration public virtual bool Extrude() Returns Type Description Boolean | Improve this Doc View Source Validate() Declaration public virtual ValidationStatus Validate() Returns Type Description ValidationStatus"
  },
  "api/g3.MeshExtrudeLoop.html": {
    "href": "api/g3.MeshExtrudeLoop.html",
    "title": "Class MeshExtrudeLoop | ViRGIS VR GIS",
    "keywords": "Class MeshExtrudeLoop Assumption is that Loop is a boundary loop on Mesh. Operation makes a duplicate loop of vertices, at location defind by PositionF, then stitches input and new loops together with a ring of triangles. Inheritance Object MeshExtrudeLoop Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshExtrudeLoop Constructors | Improve this Doc View Source MeshExtrudeLoop(DMesh3, EdgeLoop) Declaration public MeshExtrudeLoop(DMesh3 mesh, EdgeLoop loop) Parameters Type Name Description DMesh3 mesh EdgeLoop loop Fields | Improve this Doc View Source Loop Declaration public EdgeLoop Loop Field Value Type Description EdgeLoop | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 | Improve this Doc View Source NewLoop Declaration public EdgeLoop NewLoop Field Value Type Description EdgeLoop | Improve this Doc View Source NewTriangles Declaration public int[] NewTriangles Field Value Type Description Int32 [] | Improve this Doc View Source PositionF Declaration public Func<Vector3d, Vector3f, int, Vector3d> PositionF Field Value Type Description Func < Vector3d , Vector3f , Int32 , Vector3d > Methods | Improve this Doc View Source Extrude(Int32) Declaration public virtual bool Extrude(int group_id = -1) Parameters Type Name Description Int32 group_id Returns Type Description Boolean | Improve this Doc View Source Validate() Declaration public virtual ValidationStatus Validate() Returns Type Description ValidationStatus"
  },
  "api/g3.MeshExtrudeMesh.html": {
    "href": "api/g3.MeshExtrudeMesh.html",
    "title": "Class MeshExtrudeMesh | ViRGIS VR GIS",
    "keywords": "Class MeshExtrudeMesh Extrude all faces of a mesh, and stitch together any boundary loops. Steps are: 1) make a copy of all triangles in mesh 2) offset copy vertices 3) connect up loops with triangle strips Inheritance Object MeshExtrudeMesh Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshExtrudeMesh Constructors | Improve this Doc View Source MeshExtrudeMesh(DMesh3) Declaration public MeshExtrudeMesh(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh Fields | Improve this Doc View Source ExtrudedPositionF Declaration public Func<Vector3d, Vector3f, int, Vector3d> ExtrudedPositionF Field Value Type Description Func < Vector3d , Vector3f , Int32 , Vector3d > | Improve this Doc View Source InitialLoops Declaration public MeshBoundaryLoops InitialLoops Field Value Type Description MeshBoundaryLoops | Improve this Doc View Source InitialToOffsetMapV Declaration public IndexMap InitialToOffsetMapV Field Value Type Description IndexMap | Improve this Doc View Source InitialTriangles Declaration public int[] InitialTriangles Field Value Type Description Int32 [] | Improve this Doc View Source InitialVertices Declaration public int[] InitialVertices Field Value Type Description Int32 [] | Improve this Doc View Source IsPositiveOffset Declaration public bool IsPositiveOffset Field Value Type Description Boolean | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 | Improve this Doc View Source NewLoops Declaration public EdgeLoop[] NewLoops Field Value Type Description EdgeLoop [] | Improve this Doc View Source OffsetGroup Declaration public SetGroupBehavior OffsetGroup Field Value Type Description SetGroupBehavior | Improve this Doc View Source OffsetGroupID Declaration public int OffsetGroupID Field Value Type Description Int32 | Improve this Doc View Source StitchGroupIDs Declaration public int[] StitchGroupIDs Field Value Type Description Int32 [] | Improve this Doc View Source StitchGroups Declaration public SetGroupBehavior StitchGroups Field Value Type Description SetGroupBehavior | Improve this Doc View Source StitchTriangles Declaration public int[][] StitchTriangles Field Value Type Description Int32 [][] Methods | Improve this Doc View Source Extrude() Declaration public virtual bool Extrude() Returns Type Description Boolean | Improve this Doc View Source Validate() Declaration public virtual ValidationStatus Validate() Returns Type Description ValidationStatus"
  },
  "api/g3.MeshFaceSelection.html": {
    "href": "api/g3.MeshFaceSelection.html",
    "title": "Class MeshFaceSelection | ViRGIS VR GIS",
    "keywords": "Class MeshFaceSelection Inheritance Object MeshFaceSelection Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshFaceSelection : IEnumerable<int>, IEnumerable Constructors | Improve this Doc View Source MeshFaceSelection(DMesh3) Declaration public MeshFaceSelection(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh | Improve this Doc View Source MeshFaceSelection(DMesh3, MeshVertexSelection, Int32) Declaration public MeshFaceSelection(DMesh3 mesh, MeshVertexSelection convertV, int minCount = 3) Parameters Type Name Description DMesh3 mesh MeshVertexSelection convertV Int32 minCount | Improve this Doc View Source MeshFaceSelection(DMesh3, Int32) Declaration public MeshFaceSelection(DMesh3 mesh, int group_id) Parameters Type Name Description DMesh3 mesh Int32 group_id | Improve this Doc View Source MeshFaceSelection(MeshFaceSelection) Declaration public MeshFaceSelection(MeshFaceSelection copy) Parameters Type Name Description MeshFaceSelection copy Fields | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 Properties | Improve this Doc View Source Bitmap Declaration protected BitArray Bitmap { get; } Property Value Type Description BitArray | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source ClipFins(Boolean) Declaration public bool ClipFins(bool bClipLoners) Parameters Type Name Description Boolean bClipLoners Returns Type Description Boolean | Improve this Doc View Source ContractBorderByOneRingNeighbours() remove all triangles in vertex one-rings of current selection to set. On a large mesh this is quite expensive as we don't know the boundary, so we have to iterate over all triangles. Return false from FilterF to prevent triangles from being deselected. Declaration public void ContractBorderByOneRingNeighbours() | Improve this Doc View Source Deselect(IEnumerable<Int32>) Declaration public void Deselect(IEnumerable<int> triangles) Parameters Type Name Description IEnumerable < Int32 > triangles | Improve this Doc View Source Deselect(Int32) Declaration public void Deselect(int tid) Parameters Type Name Description Int32 tid | Improve this Doc View Source Deselect(Int32[]) Declaration public void Deselect(int[] triangles) Parameters Type Name Description Int32 [] triangles | Improve this Doc View Source DeselectAll() Declaration public void DeselectAll() | Improve this Doc View Source DeselectGroup(Int32) Declaration public void DeselectGroup(int gid) Parameters Type Name Description Int32 gid | Improve this Doc View Source ExpandToFaceNeighbours(Func<Int32, Boolean>) Declaration public void ExpandToFaceNeighbours(Func<int, bool> FilterF = null) Parameters Type Name Description Func < Int32 , Boolean > FilterF | Improve this Doc View Source ExpandToFaceNeighbours(Int32, Func<Int32, Boolean>) Declaration public void ExpandToFaceNeighbours(int rounds, Func<int, bool> FilterF = null) Parameters Type Name Description Int32 rounds Func < Int32 , Boolean > FilterF | Improve this Doc View Source ExpandToOneRingNeighbours(Func<Int32, Boolean>) Add all triangles in vertex one-rings of current selection to set. On a large mesh this is quite expensive as we don't know the boundary, so we have to iterate over all triangles. Return false from FilterF to prevent triangles from being included. Declaration public void ExpandToOneRingNeighbours(Func<int, bool> FilterF = null) Parameters Type Name Description Func < Int32 , Boolean > FilterF | Improve this Doc View Source ExpandToOneRingNeighbours(Int32, Func<Int32, Boolean>) Expand selection by N vertex one-rings. This is significantly faster than calling ExpandToOnering() multiple times, because we can track the growing front and only check the new triangles. Return false from FilterF to prevent triangles from being included. Declaration public void ExpandToOneRingNeighbours(int nRings, Func<int, bool> FilterF = null) Parameters Type Name Description Int32 nRings Func < Int32 , Boolean > FilterF | Improve this Doc View Source FillEars(Boolean) Declaration public bool FillEars(bool bFillTinyHoles) Parameters Type Name Description Boolean bFillTinyHoles Returns Type Description Boolean | Improve this Doc View Source FindBorderTris() find set of tris just inside border of selection Declaration public List<int> FindBorderTris() Returns Type Description List < Int32 > | Improve this Doc View Source FindNeighbourTris() find set of tris just outside border of selection Declaration public List<int> FindNeighbourTris() Returns Type Description List < Int32 > | Improve this Doc View Source FloodFill(Int32, Func<Int32, Boolean>, Func<Int32, Boolean>) Grow selection outwards from seed triangle, until it hits boundaries defined by triangle and edge filters. Edge filter is not effective unless it (possibly combined w/ triangle filter) defines closed loops. Declaration public void FloodFill(int tSeed, Func<int, bool> TriFilterF = null, Func<int, bool> EdgeFilterF = null) Parameters Type Name Description Int32 tSeed Func < Int32 , Boolean > TriFilterF Func < Int32 , Boolean > EdgeFilterF | Improve this Doc View Source FloodFill(Int32[], Func<Int32, Boolean>, Func<Int32, Boolean>) Grow selection outwards from seed triangles, until it hits boundaries defined by triangle and edge filters. Edge filter is not effective unless it (possibly combined w/ triangle filter) defines closed loops. Declaration public void FloodFill(int[] Seeds, Func<int, bool> TriFilterF = null, Func<int, bool> EdgeFilterF = null) Parameters Type Name Description Int32 [] Seeds Func < Int32 , Boolean > TriFilterF Func < Int32 , Boolean > EdgeFilterF | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<int> GetEnumerator() Returns Type Description IEnumerator < Int32 > | Improve this Doc View Source IsSelected(Int32) Declaration public bool IsSelected(int tid) Parameters Type Name Description Int32 tid Returns Type Description Boolean | Improve this Doc View Source LocalOptimize(Boolean) Declaration public bool LocalOptimize(bool bRemoveBowties = true) Parameters Type Name Description Boolean bRemoveBowties Returns Type Description Boolean | Improve this Doc View Source LocalOptimize(Boolean, Boolean, Boolean, Boolean, Boolean) Declaration public bool LocalOptimize(bool bClipFins, bool bFillEars, bool bFillTinyHoles = true, bool bClipLoners = true, bool bRemoveBowties = false) Parameters Type Name Description Boolean bClipFins Boolean bFillEars Boolean bFillTinyHoles Boolean bClipLoners Boolean bRemoveBowties Returns Type Description Boolean | Improve this Doc View Source remove_bowties(HashSet<Int32>) Declaration public bool remove_bowties(HashSet<int> tempHash) Parameters Type Name Description HashSet < Int32 > tempHash Returns Type Description Boolean | Improve this Doc View Source RemoveBowties() Find any \"bowtie\" vertices - ie vertex v such taht there is multiple spans of triangles selected in v's triangle one-ring - and deselect those one-rings. Returns true if selection was modified. Declaration public bool RemoveBowties() Returns Type Description Boolean | Improve this Doc View Source Select(IEnumerable<Int32>) Declaration public void Select(IEnumerable<int> triangles) Parameters Type Name Description IEnumerable < Int32 > triangles | Improve this Doc View Source Select(List<Int32>) Declaration public void Select(List<int> triangles) Parameters Type Name Description List < Int32 > triangles | Improve this Doc View Source Select(Func<Int32, Boolean>) Declaration public void Select(Func<int, bool> selectF) Parameters Type Name Description Func < Int32 , Boolean > selectF | Improve this Doc View Source Select(Int32) Declaration public void Select(int tid) Parameters Type Name Description Int32 tid | Improve this Doc View Source Select(Int32[]) Declaration public void Select(int[] triangles) Parameters Type Name Description Int32 [] triangles | Improve this Doc View Source SelectEdgeTris(Int32) Declaration public void SelectEdgeTris(int eid) Parameters Type Name Description Int32 eid | Improve this Doc View Source SelectGroup(Int32) Declaration public void SelectGroup(int gid) Parameters Type Name Description Int32 gid | Improve this Doc View Source SelectGroupInverse(Int32) Declaration public void SelectGroupInverse(int gid) Parameters Type Name Description Int32 gid | Improve this Doc View Source SelectVertexOneRing(Int32) Declaration public void SelectVertexOneRing(int vid) Parameters Type Name Description Int32 vid | Improve this Doc View Source SelectVertexOneRings(IEnumerable<Int32>) Declaration public void SelectVertexOneRings(IEnumerable<int> vertices) Parameters Type Name Description IEnumerable < Int32 > vertices | Improve this Doc View Source SelectVertexOneRings(Int32[]) Declaration public void SelectVertexOneRings(int[] vertices) Parameters Type Name Description Int32 [] vertices | Improve this Doc View Source ToArray() Declaration public int[] ToArray() Returns Type Description Int32 []"
  },
  "api/g3.MeshFacesFromLoop.html": {
    "href": "api/g3.MeshFacesFromLoop.html",
    "title": "Class MeshFacesFromLoop | ViRGIS VR GIS",
    "keywords": "Class MeshFacesFromLoop Find mesh triangles enclosed by a curve embedded in the mesh If a seed triangle in the enclosed region is not provided, then the smaller of the two largest connected-components is chosen as the \"inside\". Inheritance Object MeshFacesFromLoop Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshFacesFromLoop Constructors | Improve this Doc View Source MeshFacesFromLoop(DMesh3, DCurve3, ISpatial) Declaration public MeshFacesFromLoop(DMesh3 Mesh, DCurve3 SpaceCurve, ISpatial Spatial) Parameters Type Name Description DMesh3 Mesh DCurve3 SpaceCurve ISpatial Spatial | Improve this Doc View Source MeshFacesFromLoop(DMesh3, DCurve3, ISpatial, Int32) Declaration public MeshFacesFromLoop(DMesh3 Mesh, DCurve3 SpaceCurve, ISpatial Spatial, int tSeed) Parameters Type Name Description DMesh3 Mesh DCurve3 SpaceCurve ISpatial Spatial Int32 tSeed Fields | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 Properties | Improve this Doc View Source InteriorTriangles Declaration public IList<int> InteriorTriangles { get; } Property Value Type Description IList < Int32 > | Improve this Doc View Source PathTriangles Declaration public IList<int> PathTriangles { get; } Property Value Type Description IList < Int32 > Methods | Improve this Doc View Source ToArray() returns new array containing selected triangles Declaration public int[] ToArray() Returns Type Description Int32 [] | Improve this Doc View Source ToSelection() Declaration public MeshFaceSelection ToSelection() Returns Type Description MeshFaceSelection"
  },
  "api/g3.MeshFormatReader.html": {
    "href": "api/g3.MeshFormatReader.html",
    "title": "Interface MeshFormatReader | ViRGIS VR GIS",
    "keywords": "Interface MeshFormatReader Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface MeshFormatReader Properties | Improve this Doc View Source SupportedExtensions Declaration List<string> SupportedExtensions { get; } Property Value Type Description List < String > Methods | Improve this Doc View Source ReadFile(Stream, IMeshBuilder, ReadOptions, ParsingMessagesHandler) Declaration IOReadResult ReadFile(Stream stream, IMeshBuilder builder, ReadOptions options, ParsingMessagesHandler warnings) Parameters Type Name Description Stream stream IMeshBuilder builder ReadOptions options ParsingMessagesHandler warnings Returns Type Description IOReadResult | Improve this Doc View Source ReadFile(String, IMeshBuilder, ReadOptions, ParsingMessagesHandler) Declaration IOReadResult ReadFile(string sFilename, IMeshBuilder builder, ReadOptions options, ParsingMessagesHandler warnings) Parameters Type Name Description String sFilename IMeshBuilder builder ReadOptions options ParsingMessagesHandler warnings Returns Type Description IOReadResult"
  },
  "api/g3.MeshGenerator.CircularSection.html": {
    "href": "api/g3.MeshGenerator.CircularSection.html",
    "title": "Struct MeshGenerator.CircularSection | ViRGIS VR GIS",
    "keywords": "Struct MeshGenerator.CircularSection Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct CircularSection Constructors | Improve this Doc View Source CircularSection(Single, Single) Declaration public CircularSection(float r, float y) Parameters Type Name Description Single r Single y Fields | Improve this Doc View Source Radius Declaration public float Radius Field Value Type Description Single | Improve this Doc View Source SectionY Declaration public float SectionY Field Value Type Description Single"
  },
  "api/g3.MeshGenerator.html": {
    "href": "api/g3.MeshGenerator.html",
    "title": "Class MeshGenerator | ViRGIS VR GIS",
    "keywords": "Class MeshGenerator Inheritance Object MeshGenerator CappedCylinderGenerator ConeGenerator Curve3Axis3RevolveGenerator Curve3Curve3RevolveGenerator GridBox3Generator OpenCylinderGenerator PointSplatsGenerator PuncturedDiscGenerator RoundRectGenerator TriangulatedPolygonGenerator TrivialBox3Generator TrivialDiscGenerator TrivialRectGenerator TubeGenerator VerticalGeneralizedCylinderGenerator Namespace : g3 Assembly : geometry3Sharp.dll Syntax public abstract class MeshGenerator Fields | Improve this Doc View Source Clockwise Declaration public bool Clockwise Field Value Type Description Boolean | Improve this Doc View Source groups Declaration public int[] groups Field Value Type Description Int32 [] | Improve this Doc View Source normals Declaration public VectorArray3f normals Field Value Type Description VectorArray3f | Improve this Doc View Source triangles Declaration public IndexArray3i triangles Field Value Type Description IndexArray3i | Improve this Doc View Source uv Declaration public VectorArray2f uv Field Value Type Description VectorArray2f | Improve this Doc View Source vertices Declaration public VectorArray3d vertices Field Value Type Description VectorArray3d | Improve this Doc View Source WantGroups Declaration public bool WantGroups Field Value Type Description Boolean | Improve this Doc View Source WantNormals Declaration public bool WantNormals Field Value Type Description Boolean | Improve this Doc View Source WantUVs Declaration public bool WantUVs Field Value Type Description Boolean Methods | Improve this Doc View Source append_2d_disc_segment(Int32, Int32, Int32, Int32, Boolean, ref Int32, ref Int32, Int32, Double) Declaration protected void append_2d_disc_segment(int iCenter, int iEnd1, int iEnd2, int nSteps, bool bCycle, ref int vtx_counter, ref int tri_counter, int groupid = -1, double force_r = 0) Parameters Type Name Description Int32 iCenter Int32 iEnd1 Int32 iEnd2 Int32 nSteps Boolean bCycle Int32 vtx_counter Int32 tri_counter Int32 groupid Double force_r | Improve this Doc View Source append_disc(Int32, Int32, Int32, Boolean, Boolean, ref Int32, Int32) Declaration protected void append_disc(int Slices, int nCenterV, int nRingStart, bool bClosed, bool bCycle, ref int tri_counter, int groupid = -1) Parameters Type Name Description Int32 Slices Int32 nCenterV Int32 nRingStart Boolean bClosed Boolean bCycle Int32 tri_counter Int32 groupid | Improve this Doc View Source append_rectangle(Int32, Int32, Int32, Int32, Boolean, ref Int32, Int32) Declaration protected void append_rectangle(int v0, int v1, int v2, int v3, bool bCycle, ref int tri_counter, int groupid = -1) Parameters Type Name Description Int32 v0 Int32 v1 Int32 v2 Int32 v3 Boolean bCycle Int32 tri_counter Int32 groupid | Improve this Doc View Source bilerp(ref Vector2d, ref Vector2d, ref Vector2d, ref Vector2d, Double, Double) Declaration protected Vector2d bilerp(ref Vector2d v00, ref Vector2d v10, ref Vector2d v11, ref Vector2d v01, double tx, double ty) Parameters Type Name Description Vector2d v00 Vector2d v10 Vector2d v11 Vector2d v01 Double tx Double ty Returns Type Description Vector2d | Improve this Doc View Source bilerp(ref Vector2f, ref Vector2f, ref Vector2f, ref Vector2f, Single, Single) Declaration protected Vector2f bilerp(ref Vector2f v00, ref Vector2f v10, ref Vector2f v11, ref Vector2f v01, float tx, float ty) Parameters Type Name Description Vector2f v00 Vector2f v10 Vector2f v11 Vector2f v01 Single tx Single ty Returns Type Description Vector2f | Improve this Doc View Source bilerp(ref Vector3d, ref Vector3d, ref Vector3d, ref Vector3d, Double, Double) Declaration protected Vector3d bilerp(ref Vector3d v00, ref Vector3d v10, ref Vector3d v11, ref Vector3d v01, double tx, double ty) Parameters Type Name Description Vector3d v00 Vector3d v10 Vector3d v11 Vector3d v01 Double tx Double ty Returns Type Description Vector3d | Improve this Doc View Source bilerp(ref Vector3i, ref Vector3i, ref Vector3i, ref Vector3i, Double, Double) Declaration protected Vector3i bilerp(ref Vector3i v00, ref Vector3i v10, ref Vector3i v11, ref Vector3i v01, double tx, double ty) Parameters Type Name Description Vector3i v00 Vector3i v10 Vector3i v11 Vector3i v01 Double tx Double ty Returns Type Description Vector3i | Improve this Doc View Source duplicate_vertex_span(Int32, Int32) Declaration protected void duplicate_vertex_span(int nStart, int nCount) Parameters Type Name Description Int32 nStart Int32 nCount | Improve this Doc View Source estimate_normal(Int32, Int32, Int32) Declaration protected Vector3f estimate_normal(int v0, int v1, int v2) Parameters Type Name Description Int32 v0 Int32 v1 Int32 v2 Returns Type Description Vector3f | Improve this Doc View Source Generate() Declaration public abstract MeshGenerator Generate() Returns Type Description MeshGenerator | Improve this Doc View Source lerp(ref Vector3i, ref Vector3i, Double) Declaration protected Vector3i lerp(ref Vector3i a, ref Vector3i b, double t) Parameters Type Name Description Vector3i a Vector3i b Double t Returns Type Description Vector3i | Improve this Doc View Source MakeDMesh() Declaration public virtual DMesh3 MakeDMesh() Returns Type Description DMesh3 | Improve this Doc View Source MakeMesh(DMesh3) Declaration public virtual void MakeMesh(DMesh3 m) Parameters Type Name Description DMesh3 m | Improve this Doc View Source MakeMesh(NTMesh3) Declaration public virtual void MakeMesh(NTMesh3 m) Parameters Type Name Description NTMesh3 m | Improve this Doc View Source MakeMesh(SimpleMesh) Declaration public virtual void MakeMesh(SimpleMesh m) Parameters Type Name Description SimpleMesh m | Improve this Doc View Source MakeNTMesh() Declaration public virtual NTMesh3 MakeNTMesh() Returns Type Description NTMesh3 | Improve this Doc View Source MakeSimpleMesh() Declaration public virtual SimpleMesh MakeSimpleMesh() Returns Type Description SimpleMesh"
  },
  "api/g3.MeshHints.html": {
    "href": "api/g3.MeshHints.html",
    "title": "Enum MeshHints | ViRGIS VR GIS",
    "keywords": "Enum MeshHints Namespace : g3 Assembly : geometry3Sharp.dll Syntax [Flags] public enum MeshHints Fields Name Description IsCompact None"
  },
  "api/g3.MeshICP.html": {
    "href": "api/g3.MeshICP.html",
    "title": "Class MeshICP | ViRGIS VR GIS",
    "keywords": "Class MeshICP Inheritance Object MeshICP Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshICP Constructors | Improve this Doc View Source MeshICP(IPointSet, DMeshAABBTree3) Declaration public MeshICP(IPointSet source, DMeshAABBTree3 target) Parameters Type Name Description IPointSet source DMeshAABBTree3 target Fields | Improve this Doc View Source Converged Declaration public bool Converged Field Value Type Description Boolean | Improve this Doc View Source ConvergeTolerance Declaration public double ConvergeTolerance Field Value Type Description Double | Improve this Doc View Source MaxAllowableDistance Declaration public double MaxAllowableDistance Field Value Type Description Double | Improve this Doc View Source MaxIterations Declaration public int MaxIterations Field Value Type Description Int32 | Improve this Doc View Source Rotation Declaration public Quaterniond Rotation Field Value Type Description Quaterniond | Improve this Doc View Source Source Declaration public IPointSet Source Field Value Type Description IPointSet | Improve this Doc View Source TargetSurface Declaration public DMeshAABBTree3 TargetSurface Field Value Type Description DMeshAABBTree3 | Improve this Doc View Source Translation Declaration public Vector3d Translation Field Value Type Description Vector3d | Improve this Doc View Source UseNormals Declaration public bool UseNormals Field Value Type Description Boolean | Improve this Doc View Source VerboseF Declaration public Action<string> VerboseF Field Value Type Description Action < String > Properties | Improve this Doc View Source Error returns last measured deviation error metric (currently mean distance) Declaration public double Error { get; } Property Value Type Description Double Methods | Improve this Doc View Source Solve(Boolean) Solve MaxIterations steps, or until convergence. If bUpdate = true, will improve on previous solution. Declaration public void Solve(bool bUpdate = false) Parameters Type Name Description Boolean bUpdate | Improve this Doc View Source UpdateVertices(IDeformableMesh) Transfer new vertex positions to target Declaration public void UpdateVertices(IDeformableMesh target) Parameters Type Name Description IDeformableMesh target"
  },
  "api/g3.MeshIndexUtil.html": {
    "href": "api/g3.MeshIndexUtil.html",
    "title": "Class MeshIndexUtil | ViRGIS VR GIS",
    "keywords": "Class MeshIndexUtil Utility functions for manipulating sets/lists of mesh indices Inheritance Object MeshIndexUtil Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class MeshIndexUtil Methods | Improve this Doc View Source MapEdgesViaVertexMap(IIndexMap, DMesh3, DMesh3, List<Int32>) given list of edges of MeshA, and vertex map from A to B, map to list of edges on B Declaration public static List<int> MapEdgesViaVertexMap(IIndexMap AtoBV, DMesh3 MeshA, DMesh3 MeshB, List<int> edges) Parameters Type Name Description IIndexMap AtoBV DMesh3 MeshA DMesh3 MeshB List < Int32 > edges Returns Type Description List < Int32 > | Improve this Doc View Source MapLoopViaVertexMap(IIndexMap, DMesh3, DMesh3, EdgeLoop) given EdgeLoop on MeshA, and vertex map from A to B, map to EdgeLoop on B Declaration public static EdgeLoop MapLoopViaVertexMap(IIndexMap AtoBV, DMesh3 MeshA, DMesh3 MeshB, EdgeLoop loopIn) Parameters Type Name Description IIndexMap AtoBV DMesh3 MeshA DMesh3 MeshB EdgeLoop loopIn Returns Type Description EdgeLoop"
  },
  "api/g3.MeshInsertPolygon.html": {
    "href": "api/g3.MeshInsertPolygon.html",
    "title": "Class MeshInsertPolygon | ViRGIS VR GIS",
    "keywords": "Class MeshInsertPolygon Insert Polygon into Mesh. Assumption is that Mesh has 3D coordinates (u,v,0). This is basically a helper/wrapper around MeshInsertUVPolyCurve. Inserted edge set is avaliable as .InsertedPolygonEdges, and triangles inside polygon as .InteriorTriangles Inheritance Object MeshInsertPolygon Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshInsertPolygon Fields | Improve this Doc View Source HoleInserts Declaration public List<MeshInsertUVPolyCurve> HoleInserts Field Value Type Description List < MeshInsertUVPolyCurve > | Improve this Doc View Source InsertedPolygonEdges Declaration public HashSet<int> InsertedPolygonEdges Field Value Type Description HashSet < Int32 > | Improve this Doc View Source InteriorTriangles Declaration public MeshFaceSelection InteriorTriangles Field Value Type Description MeshFaceSelection | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 | Improve this Doc View Source OuterInsert Declaration public MeshInsertUVPolyCurve OuterInsert Field Value Type Description MeshInsertUVPolyCurve | Improve this Doc View Source Polygon Declaration public GeneralPolygon2d Polygon Field Value Type Description GeneralPolygon2d | Improve this Doc View Source SimplifyInsertion Declaration public bool SimplifyInsertion Field Value Type Description Boolean Methods | Improve this Doc View Source Insert() Declaration public bool Insert() Returns Type Description Boolean"
  },
  "api/g3.MeshInsertUVPolyCurve.html": {
    "href": "api/g3.MeshInsertUVPolyCurve.html",
    "title": "Class MeshInsertUVPolyCurve | ViRGIS VR GIS",
    "keywords": "Class MeshInsertUVPolyCurve Cut mesh with a path of 2D line segments Assumptions: mesh vertex x/y coordinates are 2D coordinates we want to use. Replace PointF if this is not the case. segments of Curve lie entirely within UV-triangles Limitations: currently not robust to near-parallel line segments that are within epsilon-band of the input loop. In this case, we will include all such segments in the 'cut' set, but we will probably not be able to find a connected path through them. not robust to degenerate geometry. Strongly recommend that you use Validate() and/or preprocess the input mesh to remove degenerate faces/edges Inheritance Object MeshInsertUVPolyCurve Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshInsertUVPolyCurve Constructors | Improve this Doc View Source MeshInsertUVPolyCurve(DMesh3, Polygon2d) Declaration public MeshInsertUVPolyCurve(DMesh3 mesh, Polygon2d loop) Parameters Type Name Description DMesh3 mesh Polygon2d loop | Improve this Doc View Source MeshInsertUVPolyCurve(DMesh3, PolyLine2d) Declaration public MeshInsertUVPolyCurve(DMesh3 mesh, PolyLine2d path) Parameters Type Name Description DMesh3 mesh PolyLine2d path | Improve this Doc View Source MeshInsertUVPolyCurve(DMesh3, PolyLine2d, Boolean) Declaration public MeshInsertUVPolyCurve(DMesh3 mesh, PolyLine2d curve, bool isLoop = false) Parameters Type Name Description DMesh3 mesh PolyLine2d curve Boolean isLoop Fields | Improve this Doc View Source Curve Declaration public PolyLine2d Curve Field Value Type Description PolyLine2d | Improve this Doc View Source CurveVertices Declaration public int[] CurveVertices Field Value Type Description Int32 [] | Improve this Doc View Source EnableCutSpansAndLoops Declaration public bool EnableCutSpansAndLoops Field Value Type Description Boolean | Improve this Doc View Source IsLoop Declaration public bool IsLoop Field Value Type Description Boolean | Improve this Doc View Source Loops Declaration public List<EdgeLoop> Loops Field Value Type Description List < EdgeLoop > | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 | Improve this Doc View Source OnCutEdges Declaration public HashSet<int> OnCutEdges Field Value Type Description HashSet < Int32 > | Improve this Doc View Source PointF Declaration public Func<int, Vector2d> PointF Field Value Type Description Func < Int32 , Vector2d > | Improve this Doc View Source SetPointF Declaration public Action<int, Vector2d> SetPointF Field Value Type Description Action < Int32 , Vector2d > | Improve this Doc View Source Spans Declaration public List<EdgeSpan> Spans Field Value Type Description List < EdgeSpan > | Improve this Doc View Source SpatialEpsilon Declaration public double SpatialEpsilon Field Value Type Description Double | Improve this Doc View Source UseTriSpatial Declaration public bool UseTriSpatial Field Value Type Description Boolean Methods | Improve this Doc View Source Apply() Declaration public virtual bool Apply() Returns Type Description Boolean | Improve this Doc View Source Simplify() Generally after calling Apply(), we have over-triangulated the mesh, because we have split the original edges multiple times, etc. This function will walk the edges and collapse the unnecessary edges/vertices along the inserted loops. Declaration public void Simplify() | Improve this Doc View Source Validate(Double) Declaration public virtual ValidationStatus Validate(double fDegenerateTol = 9.9999999747524271E-07) Parameters Type Name Description Double fDegenerateTol Returns Type Description ValidationStatus"
  },
  "api/g3.MeshIOUtil.html": {
    "href": "api/g3.MeshIOUtil.html",
    "title": "Class MeshIOUtil | ViRGIS VR GIS",
    "keywords": "Class MeshIOUtil Inheritance Object MeshIOUtil Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class MeshIOUtil Methods | Improve this Doc View Source FindUniqueMaterialList(List<WriteMesh>) Declaration public static List<GenericMaterial> FindUniqueMaterialList(List<WriteMesh> meshes) Parameters Type Name Description List < WriteMesh > meshes Returns Type Description List < GenericMaterial >"
  },
  "api/g3.MeshIsoCurves.GraphEdgeInfo.html": {
    "href": "api/g3.MeshIsoCurves.GraphEdgeInfo.html",
    "title": "Struct MeshIsoCurves.GraphEdgeInfo | ViRGIS VR GIS",
    "keywords": "Struct MeshIsoCurves.GraphEdgeInfo Information about edge of the computed Graph. mesh_tri is triangle ID of crossed triangle mesh_edges depends on case. EdgeEdge is [edgeid,edgeid], EdgeVertex is [edgeid,vertexid], and OnEdge is [edgeid,-1] Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct GraphEdgeInfo Fields | Improve this Doc View Source caseType Declaration public MeshIsoCurves.TriangleCase caseType Field Value Type Description MeshIsoCurves.TriangleCase | Improve this Doc View Source mesh_edges Declaration public Index2i mesh_edges Field Value Type Description Index2i | Improve this Doc View Source mesh_tri Declaration public int mesh_tri Field Value Type Description Int32 | Improve this Doc View Source order Declaration public Index2i order Field Value Type Description Index2i"
  },
  "api/g3.MeshIsoCurves.html": {
    "href": "api/g3.MeshIsoCurves.html",
    "title": "Class MeshIsoCurves | ViRGIS VR GIS",
    "keywords": "Class MeshIsoCurves Inheritance Object MeshIsoCurves Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshIsoCurves Constructors | Improve this Doc View Source MeshIsoCurves(DMesh3, Func<Vector3d, Double>) Declaration public MeshIsoCurves(DMesh3 mesh, Func<Vector3d, double> valueF) Parameters Type Name Description DMesh3 mesh Func < Vector3d , Double > valueF Fields | Improve this Doc View Source Graph Declaration public DGraph3 Graph Field Value Type Description DGraph3 | Improve this Doc View Source GraphEdges Declaration public DVector<MeshIsoCurves.GraphEdgeInfo> GraphEdges Field Value Type Description DVector < MeshIsoCurves.GraphEdgeInfo > | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 | Improve this Doc View Source PrecomputeVertexValues If true, then we internally precompute vertex values. THIS COMPUTATION IS MULTI-THREADED Declaration public bool PrecomputeVertexValues Field Value Type Description Boolean | Improve this Doc View Source RootMode Which rootfinding method will be used to converge on surface along edges Declaration public MeshIsoCurves.RootfindingModes RootMode Field Value Type Description MeshIsoCurves.RootfindingModes | Improve this Doc View Source RootModeSteps number of iterations of rootfinding method (ignored for SingleLerp) Declaration public int RootModeSteps Field Value Type Description Int32 | Improve this Doc View Source ValueF Declaration public Func<Vector3d, double> ValueF Field Value Type Description Func < Vector3d , Double > | Improve this Doc View Source VertexValueF Optional - provide value at vertex (which may be precomputed) Declaration public Func<int, double> VertexValueF Field Value Type Description Func < Int32 , Double > | Improve this Doc View Source WantGraphEdgeInfo Declaration public bool WantGraphEdgeInfo Field Value Type Description Boolean Methods | Improve this Doc View Source Compute() Declaration public void Compute() | Improve this Doc View Source Compute(IEnumerable<Int32>) Declaration public void Compute(IEnumerable<int> Triangles) Parameters Type Name Description IEnumerable < Int32 > Triangles | Improve this Doc View Source compute_full(IEnumerable<Int32>, Boolean) Declaration protected void compute_full(IEnumerable<int> Triangles, bool bIsFullMeshHint = false) Parameters Type Name Description IEnumerable < Int32 > Triangles Boolean bIsFullMeshHint | Improve this Doc View Source ShouldReverseGraphEdge(Int32) DGraph3 edges are not oriented, which means they cannot inherit orientation from mesh. This function returns true if, for a given graph_eid, the vertex pair returned by Graph.GetEdgeV(graph_eid) should be reversed to be consistent with mesh orientation. Mainly inteded to be passed to DGraph3Util.ExtractCurves Declaration public bool ShouldReverseGraphEdge(int graph_eid) Parameters Type Name Description Int32 graph_eid Returns Type Description Boolean | Improve this Doc View Source SplitAtIsoCrossings(Double) Split the mesh edges at the iso-crossings, unless edge is shorter than min_len, or inserted point would be within min_len or vertex [TODO] do we want to return any info here?? Declaration public void SplitAtIsoCrossings(double min_len = 0) Parameters Type Name Description Double min_len"
  },
  "api/g3.MeshIsoCurves.RootfindingModes.html": {
    "href": "api/g3.MeshIsoCurves.RootfindingModes.html",
    "title": "Enum MeshIsoCurves.RootfindingModes | ViRGIS VR GIS",
    "keywords": "Enum MeshIsoCurves.RootfindingModes Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum RootfindingModes Fields Name Description Bisection LerpSteps SingleLerp"
  },
  "api/g3.MeshIsoCurves.TriangleCase.html": {
    "href": "api/g3.MeshIsoCurves.TriangleCase.html",
    "title": "Enum MeshIsoCurves.TriangleCase | ViRGIS VR GIS",
    "keywords": "Enum MeshIsoCurves.TriangleCase Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum TriangleCase Fields Name Description EdgeEdge EdgeVertex OnEdge"
  },
  "api/g3.MeshIterativeSmooth.html": {
    "href": "api/g3.MeshIterativeSmooth.html",
    "title": "Class MeshIterativeSmooth | ViRGIS VR GIS",
    "keywords": "Class MeshIterativeSmooth Inheritance Object MeshIterativeSmooth Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshIterativeSmooth Constructors | Improve this Doc View Source MeshIterativeSmooth(DMesh3, Int32[], Boolean) Declaration public MeshIterativeSmooth(DMesh3 mesh, int[] vertices, bool bOwnVertices = false) Parameters Type Name Description DMesh3 mesh Int32 [] vertices Boolean bOwnVertices Fields | Improve this Doc View Source Alpha Declaration public double Alpha Field Value Type Description Double | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 | Improve this Doc View Source ProjectF Declaration public Func<Vector3d, Vector3f, int, Vector3d> ProjectF Field Value Type Description Func < Vector3d , Vector3f , Int32 , Vector3d > | Improve this Doc View Source Rounds Declaration public int Rounds Field Value Type Description Int32 | Improve this Doc View Source SmoothType Declaration public MeshIterativeSmooth.SmoothTypes SmoothType Field Value Type Description MeshIterativeSmooth.SmoothTypes | Improve this Doc View Source Vertices Declaration public int[] Vertices Field Value Type Description Int32 [] Methods | Improve this Doc View Source Smooth() Declaration public virtual bool Smooth() Returns Type Description Boolean | Improve this Doc View Source Validate() Declaration public virtual ValidationStatus Validate() Returns Type Description ValidationStatus"
  },
  "api/g3.MeshIterativeSmooth.SmoothTypes.html": {
    "href": "api/g3.MeshIterativeSmooth.SmoothTypes.html",
    "title": "Enum MeshIterativeSmooth.SmoothTypes | ViRGIS VR GIS",
    "keywords": "Enum MeshIterativeSmooth.SmoothTypes Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum SmoothTypes Fields Name Description Cotan MeanValue Uniform"
  },
  "api/g3.MeshIterators.html": {
    "href": "api/g3.MeshIterators.html",
    "title": "Class MeshIterators | ViRGIS VR GIS",
    "keywords": "Class MeshIterators Inheritance Object MeshIterators Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class MeshIterators Methods | Improve this Doc View Source BoundaryEdges(DMesh3) Declaration public static IEnumerable<int> BoundaryEdges(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source BoundaryEdgeVertices(DMesh3) boundary vertices of mesh, but based on edges, so returns each vertex twice! Declaration public static IEnumerable<int> BoundaryEdgeVertices(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source BoundaryVertices(DMesh3) Boundary vertices of mesh Declaration public static IEnumerable<int> BoundaryVertices(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source BowtieVertices(DMesh3) Declaration public static IEnumerable<int> BowtieVertices(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source FilteredEdges(DMesh3, Func<DMesh3, Int32, Boolean>) Declaration public static IEnumerable<int> FilteredEdges(DMesh3 mesh, Func<DMesh3, int, bool> FilterF) Parameters Type Name Description DMesh3 mesh Func < DMesh3 , Int32 , Boolean > FilterF Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source FilteredTriangles(DMesh3, Func<DMesh3, Int32, Boolean>) Declaration public static IEnumerable<int> FilteredTriangles(DMesh3 mesh, Func<DMesh3, int, bool> FilterF) Parameters Type Name Description DMesh3 mesh Func < DMesh3 , Int32 , Boolean > FilterF Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source FilteredVertices(DMesh3, Func<DMesh3, Int32, Boolean>) Declaration public static IEnumerable<int> FilteredVertices(DMesh3 mesh, Func<DMesh3, int, bool> FilterF) Parameters Type Name Description DMesh3 mesh Func < DMesh3 , Int32 , Boolean > FilterF Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source GroupBoundaryEdges(DMesh3) Declaration public static IEnumerable<int> GroupBoundaryEdges(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source GroupBoundaryVertices(DMesh3) Declaration public static IEnumerable<int> GroupBoundaryVertices(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source GroupJunctionVertices(DMesh3) Declaration public static IEnumerable<int> GroupJunctionVertices(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source InteriorEdges(DMesh3) Declaration public static IEnumerable<int> InteriorEdges(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source InteriorVertices(DMesh3) Declaration public static IEnumerable<int> InteriorVertices(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh Returns Type Description IEnumerable < Int32 >"
  },
  "api/g3.MeshLocalParam.html": {
    "href": "api/g3.MeshLocalParam.html",
    "title": "Class MeshLocalParam | ViRGIS VR GIS",
    "keywords": "Class MeshLocalParam Inheritance Object MeshLocalParam Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshLocalParam Constructors | Improve this Doc View Source MeshLocalParam(Int32, Func<Int32, Vector3f>, Func<Int32, Vector3f>, Func<Int32, IEnumerable<Int32>>) Declaration public MeshLocalParam(int nMaxID, Func<int, Vector3f> nodePositionF, Func<int, Vector3f> nodeNormalF, Func<int, IEnumerable<int>> neighboursF) Parameters Type Name Description Int32 nMaxID Func < Int32 , Vector3f > nodePositionF Func < Int32 , Vector3f > nodeNormalF Func < Int32 , IEnumerable < Int32 >> neighboursF Fields | Improve this Doc View Source InvalidUV Declaration public static readonly Vector2f InvalidUV Field Value Type Description Vector2f | Improve this Doc View Source UVMode Declaration public MeshLocalParam.UVModes UVMode Field Value Type Description MeshLocalParam.UVModes Properties | Improve this Doc View Source MaxGraphDistance Get the maximum distance encountered during the Compute() Declaration public float MaxGraphDistance { get; } Property Value Type Description Single | Improve this Doc View Source MaxUVDistance Declaration public float MaxUVDistance { get; } Property Value Type Description Single Methods | Improve this Doc View Source ApplyUVs(Action<Int32, Vector2f>) Declaration public void ApplyUVs(Action<int, Vector2f> applyF) Parameters Type Name Description Action < Int32 , Vector2f > applyF | Improve this Doc View Source ComputeToMaxDistance(Frame3f, Index3i, Single) Compute distances that are less/equal to fMaxDistance from the seeds Terminates early, so Queue may not be empty Declaration public void ComputeToMaxDistance(Frame3f seedFrame, Index3i seedNbrs, float fMaxGraphDistance) Parameters Type Name Description Frame3f seedFrame Index3i seedNbrs Single fMaxGraphDistance | Improve this Doc View Source GetUV(Int32) Get the computed uv at node id Declaration public Vector2f GetUV(int id) Parameters Type Name Description Int32 id Returns Type Description Vector2f | Improve this Doc View Source Reset() Declaration public void Reset() | Improve this Doc View Source TransformUV(Single, Vector2f) Declaration public void TransformUV(float fScale, Vector2f vTranslate) Parameters Type Name Description Single fScale Vector2f vTranslate"
  },
  "api/g3.MeshLocalParam.UVModes.html": {
    "href": "api/g3.MeshLocalParam.UVModes.html",
    "title": "Enum MeshLocalParam.UVModes | ViRGIS VR GIS",
    "keywords": "Enum MeshLocalParam.UVModes Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum UVModes Fields Name Description ExponentialMap ExponentialMap_UpwindAvg PlanarProjection"
  },
  "api/g3.MeshLoopClosure.html": {
    "href": "api/g3.MeshLoopClosure.html",
    "title": "Class MeshLoopClosure | ViRGIS VR GIS",
    "keywords": "Class MeshLoopClosure Inheritance Object MeshLoopClosure Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshLoopClosure Constructors | Improve this Doc View Source MeshLoopClosure(DMesh3, EdgeLoop) Declaration public MeshLoopClosure(DMesh3 mesh, EdgeLoop border_loop) Parameters Type Name Description DMesh3 mesh EdgeLoop border_loop Fields | Improve this Doc View Source ExtrudeGroup Declaration public int ExtrudeGroup Field Value Type Description Int32 | Improve this Doc View Source FillGroup Declaration public int FillGroup Field Value Type Description Int32 | Improve this Doc View Source FlatClosePlane Declaration public Frame3f FlatClosePlane Field Value Type Description Frame3f | Improve this Doc View Source InitialBorderLoop Declaration public EdgeLoop InitialBorderLoop Field Value Type Description EdgeLoop | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 | Improve this Doc View Source TargetEdgeLen Declaration public double TargetEdgeLen Field Value Type Description Double Methods | Improve this Doc View Source cleanup_boundary(DMesh3, EdgeLoop, Double, out List<Int32>, Int32) Declaration public static void cleanup_boundary(DMesh3 mesh, EdgeLoop loop, double target_edge_len, out List<int> result_edges, int nRings = 3) Parameters Type Name Description DMesh3 mesh EdgeLoop loop Double target_edge_len List < Int32 > result_edges Int32 nRings | Improve this Doc View Source Close() Declaration public virtual bool Close() Returns Type Description Boolean | Improve this Doc View Source Close_Flat() Declaration public void Close_Flat() | Improve this Doc View Source smooth_loop(DMesh3, EdgeLoop, Int32) Declaration public static void smooth_loop(DMesh3 mesh, EdgeLoop loop, int nRings) Parameters Type Name Description DMesh3 mesh EdgeLoop loop Int32 nRings | Improve this Doc View Source smooth_region(DMesh3, IEnumerable<Int32>, Int32) Declaration public static void smooth_region(DMesh3 mesh, IEnumerable<int> vertices, int nRings) Parameters Type Name Description DMesh3 mesh IEnumerable < Int32 > vertices Int32 nRings | Improve this Doc View Source Validate() Declaration public virtual ValidationStatus Validate() Returns Type Description ValidationStatus"
  },
  "api/g3.MeshLoopSmooth.html": {
    "href": "api/g3.MeshLoopSmooth.html",
    "title": "Class MeshLoopSmooth | ViRGIS VR GIS",
    "keywords": "Class MeshLoopSmooth Inheritance Object MeshLoopSmooth Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshLoopSmooth Constructors | Improve this Doc View Source MeshLoopSmooth(DMesh3, EdgeLoop) Declaration public MeshLoopSmooth(DMesh3 mesh, EdgeLoop loop) Parameters Type Name Description DMesh3 mesh EdgeLoop loop Fields | Improve this Doc View Source Alpha Declaration public double Alpha Field Value Type Description Double | Improve this Doc View Source Loop Declaration public EdgeLoop Loop Field Value Type Description EdgeLoop | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 | Improve this Doc View Source ProjectF Declaration public Func<Vector3d, int, Vector3d> ProjectF Field Value Type Description Func < Vector3d , Int32 , Vector3d > | Improve this Doc View Source Rounds Declaration public int Rounds Field Value Type Description Int32 Methods | Improve this Doc View Source Smooth() Declaration public virtual bool Smooth() Returns Type Description Boolean | Improve this Doc View Source Validate() Declaration public virtual ValidationStatus Validate() Returns Type Description ValidationStatus"
  },
  "api/g3.MeshMeasurements.GenusResult.html": {
    "href": "api/g3.MeshMeasurements.GenusResult.html",
    "title": "Struct MeshMeasurements.GenusResult | ViRGIS VR GIS",
    "keywords": "Struct MeshMeasurements.GenusResult Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct GenusResult Fields | Improve this Doc View Source Genus Declaration public int Genus Field Value Type Description Int32 | Improve this Doc View Source HasBoundary Declaration public bool HasBoundary Field Value Type Description Boolean | Improve this Doc View Source HasBowtieVertices Declaration public bool HasBowtieVertices Field Value Type Description Boolean | Improve this Doc View Source MultipleConnectedComponents Declaration public bool MultipleConnectedComponents Field Value Type Description Boolean | Improve this Doc View Source Valid Declaration public bool Valid Field Value Type Description Boolean"
  },
  "api/g3.MeshMeasurements.html": {
    "href": "api/g3.MeshMeasurements.html",
    "title": "Class MeshMeasurements | ViRGIS VR GIS",
    "keywords": "Class MeshMeasurements Inheritance Object MeshMeasurements Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class MeshMeasurements Methods | Improve this Doc View Source AreaT(DMesh3, IEnumerable<Int32>) Declaration public static double AreaT(DMesh3 mesh, IEnumerable<int> triangleIndices) Parameters Type Name Description DMesh3 mesh IEnumerable < Int32 > triangleIndices Returns Type Description Double | Improve this Doc View Source Bounds(DMesh3, Func<Vector3d, Vector3d>) Declaration public static AxisAlignedBox3d Bounds(DMesh3 mesh, Func<Vector3d, Vector3d> TransformF) Parameters Type Name Description DMesh3 mesh Func < Vector3d , Vector3d > TransformF Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Bounds(IMesh, Func<Vector3d, Vector3d>) Declaration public static AxisAlignedBox3d Bounds(IMesh mesh, Func<Vector3d, Vector3d> TransformF) Parameters Type Name Description IMesh mesh Func < Vector3d , Vector3d > TransformF Returns Type Description AxisAlignedBox3d | Improve this Doc View Source BoundsInFrame(DMesh3, Frame3f, Func<Vector3d, Vector3d>) calculate extents of mesh along axes of frame, with optional transform Declaration public static AxisAlignedBox3d BoundsInFrame(DMesh3 mesh, Frame3f frame, Func<Vector3d, Vector3d> TransformF = null) Parameters Type Name Description DMesh3 mesh Frame3f frame Func < Vector3d , Vector3d > TransformF Returns Type Description AxisAlignedBox3d | Improve this Doc View Source BoundsT(IMesh, IEnumerable<Int32>, Func<Vector3d, Vector3d>) Declaration public static AxisAlignedBox3d BoundsT(IMesh mesh, IEnumerable<int> triangleIndices, Func<Vector3d, Vector3d> TransformF = null) Parameters Type Name Description IMesh mesh IEnumerable < Int32 > triangleIndices Func < Vector3d , Vector3d > TransformF Returns Type Description AxisAlignedBox3d | Improve this Doc View Source BoundsV(IMesh, IEnumerable<Int32>, Func<Vector3d, Vector3d>) Declaration public static AxisAlignedBox3d BoundsV(IMesh mesh, IEnumerable<int> vertexIndices, Func<Vector3d, Vector3d> TransformF = null) Parameters Type Name Description IMesh mesh IEnumerable < Int32 > vertexIndices Func < Vector3d , Vector3d > TransformF Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Centroid(DMesh3, Boolean) Declaration public static Vector3d Centroid(DMesh3 mesh, bool bOnlyTriVertices = true) Parameters Type Name Description DMesh3 mesh Boolean bOnlyTriVertices Returns Type Description Vector3d | Improve this Doc View Source Centroid(IEnumerable<Vector3d>) Declaration public static Vector3d Centroid(IEnumerable<Vector3d> vertices) Parameters Type Name Description IEnumerable < Vector3d > vertices Returns Type Description Vector3d | Improve this Doc View Source Centroid<T>(IEnumerable<T>, Func<T, Vector3d>) Declaration public static Vector3d Centroid<T>(IEnumerable<T> values, Func<T, Vector3d> PositionF) Parameters Type Name Description IEnumerable <T> values Func <T, Vector3d > PositionF Returns Type Description Vector3d Type Parameters Name Description T | Improve this Doc View Source ExtentsOnAxis(DMesh3, Vector3d, Func<Vector3d, Vector3d>) Calculate extents of mesh along an axis, with optional transform Declaration public static Interval1d ExtentsOnAxis(DMesh3 mesh, Vector3d axis, Func<Vector3d, Vector3d> TransformF = null) Parameters Type Name Description DMesh3 mesh Vector3d axis Func < Vector3d , Vector3d > TransformF Returns Type Description Interval1d | Improve this Doc View Source ExtentsOnAxis(IMesh, Vector3d, Func<Vector3d, Vector3d>) Calculate extents of mesh along an axis, with optional transform Declaration public static Interval1d ExtentsOnAxis(IMesh mesh, Vector3d axis, Func<Vector3d, Vector3d> TransformF = null) Parameters Type Name Description IMesh mesh Vector3d axis Func < Vector3d , Vector3d > TransformF Returns Type Description Interval1d | Improve this Doc View Source ExtremeVertices(DMesh3, Vector3d, Func<Vector3d, Vector3d>) Calculate the two most extreme vertices along an axis, with optional transform Declaration public static Interval1i ExtremeVertices(DMesh3 mesh, Vector3d axis, Func<Vector3d, Vector3d> TransformF = null) Parameters Type Name Description DMesh3 mesh Vector3d axis Func < Vector3d , Vector3d > TransformF Returns Type Description Interval1i | Improve this Doc View Source Genus(DMesh3) Declaration public static MeshMeasurements.GenusResult Genus(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh Returns Type Description MeshMeasurements.GenusResult | Improve this Doc View Source MassProperties(DMesh3, out Double, out Vector3d, out Double[,], Boolean) Declaration public static void MassProperties(DMesh3 mesh, out double mass, out Vector3d center, out double[, ] inertia3x3, bool bodyCoords = false) Parameters Type Name Description DMesh3 mesh Double mass Vector3d center Double [,] inertia3x3 Boolean bodyCoords | Improve this Doc View Source MassProperties(IEnumerable<Index3i>, Func<Int32, Vector3d>, out Double, out Vector3d, out Double[,], Boolean) Declaration public static void MassProperties(IEnumerable<Index3i> triangle_indices, Func<int, Vector3d> getVertexF, out double mass, out Vector3d center, out double[, ] inertia3x3, bool bodyCoords = false) Parameters Type Name Description IEnumerable < Index3i > triangle_indices Func < Int32 , Vector3d > getVertexF Double mass Vector3d center Double [,] inertia3x3 Boolean bodyCoords | Improve this Doc View Source VertexOneRingArea(DMesh3, Int32, Boolean) Compute area of one-ring of mesh vertex by summing triangle areas. If bDisjoint = true, we multiple each triangle area by 1/3 Declaration public static double VertexOneRingArea(DMesh3 mesh, int vid, bool bDisjoint = true) Parameters Type Name Description DMesh3 mesh Int32 vid Boolean bDisjoint Returns Type Description Double | Improve this Doc View Source VolumeArea(DMesh3, IEnumerable<Int32>, Func<Int32, Vector3d>) Compute volume and surface area of triangles of mesh. Return value is (volume,area) Note that if triangles don't define closed region, volume is probably nonsense... Declaration public static Vector2d VolumeArea(DMesh3 mesh, IEnumerable<int> triangles, Func<int, Vector3d> getVertexF) Parameters Type Name Description DMesh3 mesh IEnumerable < Int32 > triangles Func < Int32 , Vector3d > getVertexF Returns Type Description Vector2d"
  },
  "api/g3.MeshMeshCut.html": {
    "href": "api/g3.MeshMeshCut.html",
    "title": "Class MeshMeshCut | ViRGIS VR GIS",
    "keywords": "Class MeshMeshCut TODO: track descendant triangles of each input face for missing segments, can resolve in 2D in plane of face Inheritance Object MeshMeshCut Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshMeshCut Fields | Improve this Doc View Source CutMesh Declaration public DMesh3 CutMesh Field Value Type Description DMesh3 | Improve this Doc View Source CutVertices Declaration public List<int> CutVertices Field Value Type Description List < Int32 > | Improve this Doc View Source Target Declaration public DMesh3 Target Field Value Type Description DMesh3 | Improve this Doc View Source VertexSnapTol Declaration public double VertexSnapTol Field Value Type Description Double Methods | Improve this Doc View Source AppendSegments(Double) Declaration public void AppendSegments(double r) Parameters Type Name Description Double r | Improve this Doc View Source ColorFaces() Declaration public void ColorFaces() | Improve this Doc View Source Compute() Declaration public void Compute() | Improve this Doc View Source find_existing_vertex(Vector3d) find existing vertex at point, if it exists Declaration protected int find_existing_vertex(Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Int32 | Improve this Doc View Source find_nearest_vertex(Vector3d, Double, Int32) find closest vertex, within searchRadius Declaration protected int find_nearest_vertex(Vector3d pt, double searchRadius, int ignore_vid = -1) Parameters Type Name Description Vector3d pt Double searchRadius Int32 ignore_vid Returns Type Description Int32 | Improve this Doc View Source is_in_triangle(Int32, Vector3d) Declaration protected bool is_in_triangle(int tid, Vector3d v) Parameters Type Name Description Int32 tid Vector3d v Returns Type Description Boolean | Improve this Doc View Source is_on_edge(Int32, Vector3d) Declaration protected bool is_on_edge(int eid, Vector3d v) Parameters Type Name Description Int32 eid Vector3d v Returns Type Description Boolean | Improve this Doc View Source on_edge(ref Triangle3d, ref Vector3d) Declaration protected int on_edge(ref Triangle3d tri, ref Vector3d v) Parameters Type Name Description Triangle3d tri Vector3d v Returns Type Description Int32 | Improve this Doc View Source on_edge_eid(Int32, Vector3d) Declaration protected int on_edge_eid(int tid, Vector3d v) Parameters Type Name Description Int32 tid Vector3d v Returns Type Description Int32 | Improve this Doc View Source RemoveContained() Declaration public void RemoveContained()"
  },
  "api/g3.MeshNormals.html": {
    "href": "api/g3.MeshNormals.html",
    "title": "Class MeshNormals | ViRGIS VR GIS",
    "keywords": "Class MeshNormals Inheritance Object MeshNormals Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshNormals Constructors | Improve this Doc View Source MeshNormals(IMesh, MeshNormals.NormalsTypes) Declaration public MeshNormals(IMesh mesh, MeshNormals.NormalsTypes eType = MeshNormals.NormalsTypes.Vertex_OneRingFaceAverage_AreaWeighted) Parameters Type Name Description IMesh mesh MeshNormals.NormalsTypes eType Fields | Improve this Doc View Source Mesh Declaration public IMesh Mesh Field Value Type Description IMesh | Improve this Doc View Source Normals Declaration public DVector<Vector3d> Normals Field Value Type Description DVector < Vector3d > | Improve this Doc View Source NormalType Declaration public MeshNormals.NormalsTypes NormalType Field Value Type Description MeshNormals.NormalsTypes | Improve this Doc View Source VertexF By default this is Mesh.GetVertex(). Can override to provide alternate vertex source. Declaration public Func<int, Vector3d> VertexF Field Value Type Description Func < Int32 , Vector3d > Properties | Improve this Doc View Source Item[Int32] Declaration public Vector3d this[int vid] { get; } Parameters Type Name Description Int32 vid Property Value Type Description Vector3d Methods | Improve this Doc View Source Compute() Declaration public void Compute() | Improve this Doc View Source CopyTo(DMesh3) Declaration public void CopyTo(DMesh3 SetMesh) Parameters Type Name Description DMesh3 SetMesh | Improve this Doc View Source QuickCompute(DMesh3) Declaration public static void QuickCompute(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh | Improve this Doc View Source QuickCompute(DMesh3, Int32, MeshNormals.NormalsTypes) Declaration public static Vector3d QuickCompute(DMesh3 mesh, int vid, MeshNormals.NormalsTypes type = MeshNormals.NormalsTypes.Vertex_OneRingFaceAverage_AreaWeighted) Parameters Type Name Description DMesh3 mesh Int32 vid MeshNormals.NormalsTypes type Returns Type Description Vector3d"
  },
  "api/g3.MeshNormals.NormalsTypes.html": {
    "href": "api/g3.MeshNormals.NormalsTypes.html",
    "title": "Enum MeshNormals.NormalsTypes | ViRGIS VR GIS",
    "keywords": "Enum MeshNormals.NormalsTypes Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum NormalsTypes Fields Name Description Vertex_OneRingFaceAverage_AreaWeighted"
  },
  "api/g3.MeshOps.html": {
    "href": "api/g3.MeshOps.html",
    "title": "Class MeshOps | ViRGIS VR GIS",
    "keywords": "Class MeshOps Inheritance Object MeshOps Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class MeshOps"
  },
  "api/g3.MeshPlaneCut.html": {
    "href": "api/g3.MeshPlaneCut.html",
    "title": "Class MeshPlaneCut | ViRGIS VR GIS",
    "keywords": "Class MeshPlaneCut Inheritance Object MeshPlaneCut Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshPlaneCut Constructors | Improve this Doc View Source MeshPlaneCut(DMesh3, Vector3d, Vector3d) Cut mesh with plane. Assumption is that plane normal is Z value. Declaration public MeshPlaneCut(DMesh3 mesh, Vector3d origin, Vector3d normal) Parameters Type Name Description DMesh3 mesh Vector3d origin Vector3d normal Fields | Improve this Doc View Source CollapseDegenerateEdgesOnCut Declaration public bool CollapseDegenerateEdgesOnCut Field Value Type Description Boolean | Improve this Doc View Source CutFaceSet Declaration public MeshFaceSelection CutFaceSet Field Value Type Description MeshFaceSelection | Improve this Doc View Source CutLoops Declaration public List<EdgeLoop> CutLoops Field Value Type Description List < EdgeLoop > | Improve this Doc View Source CutLoopsFailed Declaration public bool CutLoopsFailed Field Value Type Description Boolean | Improve this Doc View Source CutSpans Declaration public List<EdgeSpan> CutSpans Field Value Type Description List < EdgeSpan > | Improve this Doc View Source DegenerateEdgeTol Declaration public double DegenerateEdgeTol Field Value Type Description Double | Improve this Doc View Source FoundOpenSpans Declaration public bool FoundOpenSpans Field Value Type Description Boolean | Improve this Doc View Source LoopFillTriangles Declaration public List<int[]> LoopFillTriangles Field Value Type Description List < Int32 []> | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 | Improve this Doc View Source PlaneNormal Declaration public Vector3d PlaneNormal Field Value Type Description Vector3d | Improve this Doc View Source PlaneOrigin Declaration public Vector3d PlaneOrigin Field Value Type Description Vector3d Methods | Improve this Doc View Source collapse_degenerate_edges(HashSet<Int32>, HashSet<Int32>) Declaration protected void collapse_degenerate_edges(HashSet<int> OnCutEdges, HashSet<int> ZeroEdges) Parameters Type Name Description HashSet < Int32 > OnCutEdges HashSet < Int32 > ZeroEdges | Improve this Doc View Source Cut() Declaration public virtual bool Cut() Returns Type Description Boolean | Improve this Doc View Source FillHoles(Int32) A quick-and-dirty hole filling. If you want something better, process the returned CutLoops yourself. Declaration public bool FillHoles(int constantGroupID = -1) Parameters Type Name Description Int32 constantGroupID Returns Type Description Boolean | Improve this Doc View Source Validate() Declaration public virtual ValidationStatus Validate() Returns Type Description ValidationStatus"
  },
  "api/g3.MeshProjectionTarget.html": {
    "href": "api/g3.MeshProjectionTarget.html",
    "title": "Class MeshProjectionTarget | ViRGIS VR GIS",
    "keywords": "Class MeshProjectionTarget MeshProjectionTarget provides an IProjectionTarget interface to a mesh + spatial data structure. Use to project points to mesh surface. Inheritance Object MeshProjectionTarget TransformedMeshProjectionTarget Implements IOrientedProjectionTarget IProjectionTarget Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshProjectionTarget : IOrientedProjectionTarget, IProjectionTarget Constructors | Improve this Doc View Source MeshProjectionTarget() Declaration public MeshProjectionTarget() | Improve this Doc View Source MeshProjectionTarget(DMesh3) Declaration public MeshProjectionTarget(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh | Improve this Doc View Source MeshProjectionTarget(DMesh3, ISpatial) Declaration public MeshProjectionTarget(DMesh3 mesh, ISpatial spatial) Parameters Type Name Description DMesh3 mesh ISpatial spatial Properties | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh { get; set; } Property Value Type Description DMesh3 | Improve this Doc View Source Spatial Declaration public ISpatial Spatial { get; set; } Property Value Type Description ISpatial Methods | Improve this Doc View Source Auto(DMesh3, Boolean) Automatically construct fastest projection target for mesh Declaration public static MeshProjectionTarget Auto(DMesh3 mesh, bool bForceCopy = true) Parameters Type Name Description DMesh3 mesh Boolean bForceCopy Returns Type Description MeshProjectionTarget | Improve this Doc View Source Auto(DMesh3, IEnumerable<Int32>, Int32) Automatically construct fastest projection target for region of mesh Declaration public static MeshProjectionTarget Auto(DMesh3 mesh, IEnumerable<int> triangles, int nExpandRings = 5) Parameters Type Name Description DMesh3 mesh IEnumerable < Int32 > triangles Int32 nExpandRings Returns Type Description MeshProjectionTarget | Improve this Doc View Source Project(Vector3d, out Vector3d, Int32) Declaration public virtual Vector3d Project(Vector3d vPoint, out Vector3d vProjectNormal, int identifier = -1) Parameters Type Name Description Vector3d vPoint Vector3d vProjectNormal Int32 identifier Returns Type Description Vector3d | Improve this Doc View Source Project(Vector3d, Int32) Declaration public virtual Vector3d Project(Vector3d vPoint, int identifier = -1) Parameters Type Name Description Vector3d vPoint Int32 identifier Returns Type Description Vector3d Implements IOrientedProjectionTarget IProjectionTarget"
  },
  "api/g3.MeshQueries.html": {
    "href": "api/g3.MeshQueries.html",
    "title": "Class MeshQueries | ViRGIS VR GIS",
    "keywords": "Class MeshQueries Inheritance Object MeshQueries Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class MeshQueries Methods | Improve this Doc View Source BaryCoords(DMesh3, Int32, Vector3d) Get barycentric coords of point in triangle Declaration public static Vector3d BaryCoords(DMesh3 mesh, int tID, Vector3d point) Parameters Type Name Description DMesh3 mesh Int32 tID Vector3d point Returns Type Description Vector3d | Improve this Doc View Source EdgeLengthStats(DMesh3, out Double, out Double, out Double, Int32) Declaration public static void EdgeLengthStats(DMesh3 mesh, out double minEdgeLen, out double maxEdgeLen, out double avgEdgeLen, int samples = 0) Parameters Type Name Description DMesh3 mesh Double minEdgeLen Double maxEdgeLen Double avgEdgeLen Int32 samples | Improve this Doc View Source EdgeLengthStatsFromEdges(DMesh3, IEnumerable<Int32>, out Double, out Double, out Double, Int32) Declaration public static void EdgeLengthStatsFromEdges(DMesh3 mesh, IEnumerable<int> EdgeItr, out double minEdgeLen, out double maxEdgeLen, out double avgEdgeLen, int samples = 0) Parameters Type Name Description DMesh3 mesh IEnumerable < Int32 > EdgeItr Double minEdgeLen Double maxEdgeLen Double avgEdgeLen Int32 samples | Improve this Doc View Source FindHitTriangle_LinearSearch(DMesh3, Ray3d) Declaration public static int FindHitTriangle_LinearSearch(DMesh3 mesh, Ray3d ray) Parameters Type Name Description DMesh3 mesh Ray3d ray Returns Type Description Int32 | Improve this Doc View Source FindIntersectingTriangles_LinearSearch(DMesh3, DMesh3) brute force search for any intersecting triangles on two meshes Declaration public static Index2i FindIntersectingTriangles_LinearSearch(DMesh3 mesh1, DMesh3 mesh2) Parameters Type Name Description DMesh3 mesh1 DMesh3 mesh2 Returns Type Description Index2i | Improve this Doc View Source FindNearestTriangle_LinearSearch(DMesh3, Vector3d) Declaration public static int FindNearestTriangle_LinearSearch(DMesh3 mesh, Vector3d p) Parameters Type Name Description DMesh3 mesh Vector3d p Returns Type Description Int32 | Improve this Doc View Source FindNearestTriangles_LinearSearch(DMesh3, DMesh3, out Double) Brute-force search for closest pair of triangles on two meshes Declaration public static Index2i FindNearestTriangles_LinearSearch(DMesh3 mesh1, DMesh3 mesh2, out double fNearestSqr) Parameters Type Name Description DMesh3 mesh1 DMesh3 mesh2 Double fNearestSqr Returns Type Description Index2i | Improve this Doc View Source FindNearestVertex_LinearSearch(DMesh3, Vector3d) Declaration public static int FindNearestVertex_LinearSearch(DMesh3 mesh, Vector3d p) Parameters Type Name Description DMesh3 mesh Vector3d p Returns Type Description Int32 | Improve this Doc View Source NearestPointDistance(DMesh3, ISpatial, Vector3d, Double) Find distance from point to mesh Returns interpolated vertex-normal frame if available, otherwise tri-normal frame. Declaration public static double NearestPointDistance(DMesh3 mesh, ISpatial spatial, Vector3d queryPoint, double maxDist = 1.7976931348623157E+308) Parameters Type Name Description DMesh3 mesh ISpatial spatial Vector3d queryPoint Double maxDist Returns Type Description Double | Improve this Doc View Source NearestPointFrame(DMesh3, ISpatial, Vector3d, Boolean) Find point-normal(Z) frame at closest point to queryPoint on mesh. Returns interpolated vertex-normal frame if available, otherwise tri-normal frame. Declaration public static Frame3f NearestPointFrame(DMesh3 mesh, ISpatial spatial, Vector3d queryPoint, bool bForceFaceNormal = false) Parameters Type Name Description DMesh3 mesh ISpatial spatial Vector3d queryPoint Boolean bForceFaceNormal Returns Type Description Frame3f | Improve this Doc View Source RayHitPointFrame(DMesh3, ISpatial, Ray3d, out Frame3f, Boolean) Find point-normal frame at ray-intersection point on mesh, or return false if no hit. Returns interpolated vertex-normal frame if available, otherwise tri-normal frame. Declaration public static bool RayHitPointFrame(DMesh3 mesh, ISpatial spatial, Ray3d ray, out Frame3f hitPosFrame, bool bForceFaceNormal = false) Parameters Type Name Description DMesh3 mesh ISpatial spatial Ray3d ray Frame3f hitPosFrame Boolean bForceFaceNormal Returns Type Description Boolean | Improve this Doc View Source SurfaceFrame(DMesh3, Int32, Vector3d, Boolean) Get point-normal frame on surface of mesh. Assumption is that point lies in tID. returns interpolated vertex-normal frame if available, otherwise tri-normal frame. Declaration public static Frame3f SurfaceFrame(DMesh3 mesh, int tID, Vector3d point, bool bForceFaceNormal = false) Parameters Type Name Description DMesh3 mesh Int32 tID Vector3d point Boolean bForceFaceNormal Returns Type Description Frame3f | Improve this Doc View Source TriangleDistance(DMesh3, Int32, Vector3d) construct a DistPoint3Triangle3 object for a mesh triangle Declaration public static DistPoint3Triangle3 TriangleDistance(DMesh3 mesh, int ti, Vector3d point) Parameters Type Name Description DMesh3 mesh Int32 ti Vector3d point Returns Type Description DistPoint3Triangle3 | Improve this Doc View Source TriangleIntersection(DMesh3, Int32, Ray3d) convenience function to construct a IntrRay3Triangle3 object for a mesh triangle Declaration public static IntrRay3Triangle3 TriangleIntersection(DMesh3 mesh, int ti, Ray3d ray) Parameters Type Name Description DMesh3 mesh Int32 ti Ray3d ray Returns Type Description IntrRay3Triangle3 | Improve this Doc View Source TrianglesDistance(DMesh3, Int32, DMesh3, Int32, Func<Vector3d, Vector3d>) convenience function to construct a DistTriangle3Triangle3 object for two mesh triangles Declaration public static DistTriangle3Triangle3 TrianglesDistance(DMesh3 mesh1, int ti, DMesh3 mesh2, int tj, Func<Vector3d, Vector3d> TransformF = null) Parameters Type Name Description DMesh3 mesh1 Int32 ti DMesh3 mesh2 Int32 tj Func < Vector3d , Vector3d > TransformF Returns Type Description DistTriangle3Triangle3 | Improve this Doc View Source TrianglesIntersection(DMesh3, Int32, DMesh3, Int32, Func<Vector3d, Vector3d>) convenience function to construct a IntrTriangle3Triangle3 object for two mesh triangles Declaration public static IntrTriangle3Triangle3 TrianglesIntersection(DMesh3 mesh1, int ti, DMesh3 mesh2, int tj, Func<Vector3d, Vector3d> TransformF = null) Parameters Type Name Description DMesh3 mesh1 Int32 ti DMesh3 mesh2 Int32 tj Func < Vector3d , Vector3d > TransformF Returns Type Description IntrTriangle3Triangle3 | Improve this Doc View Source TriangleTriangleDistance(DMesh3, Int32, DMesh3, Int32, Func<Vector3d, Vector3d>) find distance between two triangles, with optional transform on second triangle Declaration public static DistTriangle3Triangle3 TriangleTriangleDistance(DMesh3 mesh1, int ti, DMesh3 mesh2, int tj, Func<Vector3d, Vector3d> TransformF = null) Parameters Type Name Description DMesh3 mesh1 Int32 ti DMesh3 mesh2 Int32 tj Func < Vector3d , Vector3d > TransformF Returns Type Description DistTriangle3Triangle3 | Improve this Doc View Source TriDistanceSqr(DMesh3, Int32, Vector3d) Compute distance from point to triangle in mesh, with minimal extra objects/etc Declaration public static double TriDistanceSqr(DMesh3 mesh, int ti, Vector3d point) Parameters Type Name Description DMesh3 mesh Int32 ti Vector3d point Returns Type Description Double"
  },
  "api/g3.MeshRefinerBase.html": {
    "href": "api/g3.MeshRefinerBase.html",
    "title": "Class MeshRefinerBase | ViRGIS VR GIS",
    "keywords": "Class MeshRefinerBase Inheritance Object MeshRefinerBase Reducer Remesher Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshRefinerBase Constructors | Improve this Doc View Source MeshRefinerBase() Declaration protected MeshRefinerBase() | Improve this Doc View Source MeshRefinerBase(DMesh3) Declaration public MeshRefinerBase(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh Fields | Improve this Doc View Source AllowCollapseFixedVertsWithSameSetID Declaration public bool AllowCollapseFixedVertsWithSameSetID Field Value Type Description Boolean | Improve this Doc View Source constraints Declaration protected MeshConstraints constraints Field Value Type Description MeshConstraints | Improve this Doc View Source edge_flip_tol Declaration protected double edge_flip_tol Field Value Type Description Double | Improve this Doc View Source mesh Declaration protected DMesh3 mesh Field Value Type Description DMesh3 | Improve this Doc View Source Progress Set this to be able to cancel running remesher Declaration public ProgressCancel Progress Field Value Type Description ProgressCancel Properties | Improve this Doc View Source Constraints Declaration public MeshConstraints Constraints { get; } Property Value Type Description MeshConstraints | Improve this Doc View Source EdgeFlipTolerance If normals dot product is less than this, we consider it a normal flip. default = 0 Declaration public double EdgeFlipTolerance { get; set; } Property Value Type Description Double | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh { get; } Property Value Type Description DMesh3 Methods | Improve this Doc View Source can_collapse_constraints(Int32, Int32, Int32, Int32, Int32, Int32, Int32, out Int32) Declaration protected bool can_collapse_constraints(int eid, int a, int b, int c, int d, int tc, int td, out int collapse_to) Parameters Type Name Description Int32 eid Int32 a Int32 b Int32 c Int32 d Int32 tc Int32 td Int32 collapse_to Returns Type Description Boolean | Improve this Doc View Source can_collapse_vtx(Int32, Int32, Int32, out Int32) Declaration protected bool can_collapse_vtx(int eid, int a, int b, out int collapse_to) Parameters Type Name Description Int32 eid Int32 a Int32 b Int32 collapse_to Returns Type Description Boolean | Improve this Doc View Source Cancelled() if this returns true, abort computation. Declaration protected virtual bool Cancelled() Returns Type Description Boolean | Improve this Doc View Source collapse_creates_flip_or_invalid(Int32, Int32, ref Vector3d, Int32, Int32) check if edge collapse will create a face-normal flip. Also checks if collapse would violate link condition, since we are iterating over one-ring anyway. This only checks one-ring of vid, so you have to call it twice, with vid and vother reversed, to check both one-rings Declaration protected bool collapse_creates_flip_or_invalid(int vid, int vother, ref Vector3d newv, int tc, int td) Parameters Type Name Description Int32 vid Int32 vother Vector3d newv Int32 tc Int32 td Returns Type Description Boolean | Improve this Doc View Source edge_flip_metric(ref Vector3d, ref Vector3d) Declaration protected double edge_flip_metric(ref Vector3d n0, ref Vector3d n1) Parameters Type Name Description Vector3d n0 Vector3d n1 Returns Type Description Double | Improve this Doc View Source flip_inverts_normals(Int32, Int32, Int32, Int32, Int32) Check if edge flip might reverse normal direction. Not entirely clear on how to implement this test. Currently checking if any normal-pairs are reversed. Declaration protected bool flip_inverts_normals(int a, int b, int c, int d, int t0) Parameters Type Name Description Int32 a Int32 b Int32 c Int32 d Int32 t0 Returns Type Description Boolean | Improve this Doc View Source get_vertex_constraint(Int32) Declaration protected VertexConstraint get_vertex_constraint(int vid) Parameters Type Name Description Int32 vid Returns Type Description VertexConstraint | Improve this Doc View Source get_vertex_constraint(Int32, ref VertexConstraint) Declaration protected bool get_vertex_constraint(int vid, ref VertexConstraint vc) Parameters Type Name Description Int32 vid VertexConstraint vc Returns Type Description Boolean | Improve this Doc View Source SetExternalConstraints(MeshConstraints) Declaration public void SetExternalConstraints(MeshConstraints cons) Parameters Type Name Description MeshConstraints cons | Improve this Doc View Source vertex_is_constrained(Int32) Declaration protected bool vertex_is_constrained(int vid) Parameters Type Name Description Int32 vid Returns Type Description Boolean | Improve this Doc View Source vertex_is_fixed(Int32) Declaration protected bool vertex_is_fixed(int vid) Parameters Type Name Description Int32 vid Returns Type Description Boolean"
  },
  "api/g3.MeshRegionBoundaryLoops.html": {
    "href": "api/g3.MeshRegionBoundaryLoops.html",
    "title": "Class MeshRegionBoundaryLoops | ViRGIS VR GIS",
    "keywords": "Class MeshRegionBoundaryLoops Extract boundary EdgeLoops for subregions of Mesh Inheritance Object MeshRegionBoundaryLoops Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshRegionBoundaryLoops : IEnumerable<EdgeLoop>, IEnumerable Constructors | Improve this Doc View Source MeshRegionBoundaryLoops(DMesh3, Int32[], Boolean) Declaration public MeshRegionBoundaryLoops(DMesh3 mesh, int[] RegionTris, bool bAutoCompute = true) Parameters Type Name Description DMesh3 mesh Int32 [] RegionTris Boolean bAutoCompute Fields | Improve this Doc View Source Loops Declaration public List<EdgeLoop> Loops Field Value Type Description List < EdgeLoop > | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source Item[Int32] Declaration public EdgeLoop this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description EdgeLoop | Improve this Doc View Source MaxVerticesLoopIndex Index of Loop with largest vertex count Declaration public int MaxVerticesLoopIndex { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source all_vertex_boundary_edges(Int32, Int32[]) Declaration public int all_vertex_boundary_edges(int vID, int[] e) Parameters Type Name Description Int32 vID Int32 [] e Returns Type Description Int32 | Improve this Doc View Source Compute() Find the set of EdgeLoops bounding 'in' triangles. Note that if we encounter topological issues, we will throw MeshBoundaryLoopsException w/ more info (if possible) Declaration public bool Compute() Returns Type Description Boolean | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<EdgeLoop> GetEnumerator() Returns Type Description IEnumerator < EdgeLoop > | Improve this Doc View Source vertex_boundary_edges(Int32, ref Int32, ref Int32) Declaration public int vertex_boundary_edges(int vID, ref int e0, ref int e1) Parameters Type Name Description Int32 vID Int32 e0 Int32 e1 Returns Type Description Int32"
  },
  "api/g3.MeshResult.html": {
    "href": "api/g3.MeshResult.html",
    "title": "Enum MeshResult | ViRGIS VR GIS",
    "keywords": "Enum MeshResult Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum MeshResult Fields Name Description Failed_BrokenTopology Failed_CannotAllocateTriangle Failed_CannotAllocateVertex Failed_CollapseTetrahedron Failed_CollapseTriangle Failed_FlippedEdgeExists Failed_FoundDuplicateTriangle Failed_HitValenceLimit Failed_InvalidNeighbourhood Failed_IsBoundaryEdge Failed_IsBowtieVertex Failed_NotABoundaryEdge Failed_NotAnEdge Failed_NotATriangle Failed_NotAVertex Failed_SameOrientation Failed_TriangleAlreadyExists Failed_VertexAlreadyExists Failed_WouldCreateBowtie Failed_WouldCreateNonmanifoldEdge Ok"
  },
  "api/g3.MeshSignedDistanceGrid.ComputeModes.html": {
    "href": "api/g3.MeshSignedDistanceGrid.ComputeModes.html",
    "title": "Enum MeshSignedDistanceGrid.ComputeModes | ViRGIS VR GIS",
    "keywords": "Enum MeshSignedDistanceGrid.ComputeModes Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum ComputeModes Fields Name Description FullGrid NarrowBand_SpatialFloodFill NarrowBandOnly"
  },
  "api/g3.MeshSignedDistanceGrid.html": {
    "href": "api/g3.MeshSignedDistanceGrid.html",
    "title": "Class MeshSignedDistanceGrid | ViRGIS VR GIS",
    "keywords": "Class MeshSignedDistanceGrid Compute discretely-sampled (ie gridded) signed distance field for a mesh The basic approach is, first compute exact distances in a narrow band, and then extend out to rest of grid using fast \"sweeping\" (ie like a distance transform). The resulting unsigned grid is then signed using ray-intersection counting, which is also computed on the grid, so no BVH is necessary If you set ComputeMode to NarrowBandOnly, result is a narrow-band signed distance field. This is quite a bit faster as the sweeping is the most computationally-intensive step. Caveats: the \"narrow band\" is based on triangle bounding boxes, so it is not necessarily that \"narrow\" if you have large triangles on a diagonal to grid axes Potential optimizations: Often we have a spatial data structure that would allow faster computation of the narrow-band distances (which become quite expensive if we want a wider band!) Not clear how to take advantage of this though. Perhaps we could have a binary grid that, in first pass, we set bits inside triangle bboxes to 1? Or perhaps same as current code, but we use spatial-dist, and so for each ijk we only compute once? (then have to test for computed value at each cell of each triangle...) This code is based on the C++ implementation found at https://github.com/christopherbatty/SDFGen Original license was public domain. Permission granted by Christopher Batty to include C# port under Boost license. Inheritance Object MeshSignedDistanceGrid Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshSignedDistanceGrid Constructors | Improve this Doc View Source MeshSignedDistanceGrid(DMesh3, Double, DMeshAABBTree3) Declaration public MeshSignedDistanceGrid(DMesh3 mesh, double cellSize, DMeshAABBTree3 spatial = null) Parameters Type Name Description DMesh3 mesh Double cellSize DMeshAABBTree3 spatial Fields | Improve this Doc View Source CancelF if this function returns true, we should abort calculation Declaration public Func<bool> CancelF Field Value Type Description Func < Boolean > | Improve this Doc View Source CellSize Declaration public float CellSize Field Value Type Description Single | Improve this Doc View Source ComputeMode Declaration public MeshSignedDistanceGrid.ComputeModes ComputeMode Field Value Type Description MeshSignedDistanceGrid.ComputeModes | Improve this Doc View Source ComputeSigns Declaration public bool ComputeSigns Field Value Type Description Boolean | Improve this Doc View Source DebugPrint Declaration public bool DebugPrint Field Value Type Description Boolean | Improve this Doc View Source ExactBandWidth Declaration public int ExactBandWidth Field Value Type Description Int32 | Improve this Doc View Source ExpandBounds Declaration public Vector3d ExpandBounds Field Value Type Description Vector3d | Improve this Doc View Source InsideMode Declaration public MeshSignedDistanceGrid.InsideModes InsideMode Field Value Type Description MeshSignedDistanceGrid.InsideModes | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 | Improve this Doc View Source NarrowBandMaxDistance Declaration public double NarrowBandMaxDistance Field Value Type Description Double | Improve this Doc View Source Spatial Declaration public DMeshAABBTree3 Spatial Field Value Type Description DMeshAABBTree3 | Improve this Doc View Source UseParallel Declaration public bool UseParallel Field Value Type Description Boolean | Improve this Doc View Source WantClosestTriGrid Declaration public bool WantClosestTriGrid Field Value Type Description Boolean | Improve this Doc View Source WantIntersectionsGrid Declaration public bool WantIntersectionsGrid Field Value Type Description Boolean Properties | Improve this Doc View Source ClosestTriGrid Declaration public DenseGrid3i ClosestTriGrid { get; } Property Value Type Description DenseGrid3i | Improve this Doc View Source Dimensions Declaration public Vector3i Dimensions { get; } Property Value Type Description Vector3i | Improve this Doc View Source Grid SDF grid available after calling Compute() Declaration public DenseGrid3f Grid { get; } Property Value Type Description DenseGrid3f | Improve this Doc View Source GridOrigin Origin of the SDF grid, in same coordinates as mesh Declaration public Vector3f GridOrigin { get; } Property Value Type Description Vector3f | Improve this Doc View Source IntersectionsGrid Declaration public DenseGrid3i IntersectionsGrid { get; } Property Value Type Description DenseGrid3i | Improve this Doc View Source Item[Vector3i] Declaration public float this[Vector3i idx] { get; } Parameters Type Name Description Vector3i idx Property Value Type Description Single | Improve this Doc View Source Item[Int32, Int32, Int32] Declaration public float this[int i, int j, int k] { get; } Parameters Type Name Description Int32 i Int32 j Int32 k Property Value Type Description Single Methods | Improve this Doc View Source CellCenter(Int32, Int32, Int32) Declaration public Vector3f CellCenter(int i, int j, int k) Parameters Type Name Description Int32 i Int32 j Int32 k Returns Type Description Vector3f | Improve this Doc View Source Compute() Declaration public void Compute() | Improve this Doc View Source orientation(Double, Double, Double, Double, out Double) Declaration public static int orientation(double x1, double y1, double x2, double y2, out double twice_signed_area) Parameters Type Name Description Double x1 Double y1 Double x2 Double y2 Double twice_signed_area Returns Type Description Int32 | Improve this Doc View Source point_in_triangle_2d(Double, Double, Double, Double, Double, Double, Double, Double, out Double, out Double, out Double) Declaration public static bool point_in_triangle_2d(double x0, double y0, double x1, double y1, double x2, double y2, double x3, double y3, out double a, out double b, out double c) Parameters Type Name Description Double x0 Double y0 Double x1 Double y1 Double x2 Double y2 Double x3 Double y3 Double a Double b Double c Returns Type Description Boolean | Improve this Doc View Source point_segment_distance(ref Vector3d, ref Vector3d, ref Vector3d) Declaration public static double point_segment_distance(ref Vector3d x0, ref Vector3d x1, ref Vector3d x2) Parameters Type Name Description Vector3d x0 Vector3d x1 Vector3d x2 Returns Type Description Double | Improve this Doc View Source point_segment_distance(ref Vector3f, ref Vector3f, ref Vector3f) Declaration public static float point_segment_distance(ref Vector3f x0, ref Vector3f x1, ref Vector3f x2) Parameters Type Name Description Vector3f x0 Vector3f x1 Vector3f x2 Returns Type Description Single | Improve this Doc View Source point_triangle_distance(ref Vector3d, ref Vector3d, ref Vector3d, ref Vector3d) Declaration public static double point_triangle_distance(ref Vector3d x0, ref Vector3d x1, ref Vector3d x2, ref Vector3d x3) Parameters Type Name Description Vector3d x0 Vector3d x1 Vector3d x2 Vector3d x3 Returns Type Description Double | Improve this Doc View Source point_triangle_distance(ref Vector3f, ref Vector3f, ref Vector3f, ref Vector3f) Declaration public static float point_triangle_distance(ref Vector3f x0, ref Vector3f x1, ref Vector3f x2, ref Vector3f x3) Parameters Type Name Description Vector3f x0 Vector3f x1 Vector3f x2 Vector3f x3 Returns Type Description Single"
  },
  "api/g3.MeshSignedDistanceGrid.InsideModes.html": {
    "href": "api/g3.MeshSignedDistanceGrid.InsideModes.html",
    "title": "Enum MeshSignedDistanceGrid.InsideModes | ViRGIS VR GIS",
    "keywords": "Enum MeshSignedDistanceGrid.InsideModes Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum InsideModes Fields Name Description CrossingCount ParityCount"
  },
  "api/g3.MeshTransforms.html": {
    "href": "api/g3.MeshTransforms.html",
    "title": "Class MeshTransforms | ViRGIS VR GIS",
    "keywords": "Class MeshTransforms Inheritance Object MeshTransforms Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class MeshTransforms Methods | Improve this Doc View Source ConvertYUpToZUp(Frame3f) Declaration public static Frame3f ConvertYUpToZUp(Frame3f f) Parameters Type Name Description Frame3f f Returns Type Description Frame3f | Improve this Doc View Source ConvertYUpToZUp(IDeformableMesh) Declaration public static void ConvertYUpToZUp(IDeformableMesh mesh) Parameters Type Name Description IDeformableMesh mesh | Improve this Doc View Source ConvertYUpToZUp(Vector3d) Declaration public static Vector3d ConvertYUpToZUp(Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Vector3d | Improve this Doc View Source ConvertYUpToZUp(Vector3f) Declaration public static Vector3f ConvertYUpToZUp(Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description Vector3f | Improve this Doc View Source ConvertZUpToYUp(Frame3f) Declaration public static Frame3f ConvertZUpToYUp(Frame3f f) Parameters Type Name Description Frame3f f Returns Type Description Frame3f | Improve this Doc View Source ConvertZUpToYUp(IDeformableMesh) Declaration public static void ConvertZUpToYUp(IDeformableMesh mesh) Parameters Type Name Description IDeformableMesh mesh | Improve this Doc View Source ConvertZUpToYUp(Vector3d) Declaration public static Vector3d ConvertZUpToYUp(Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Vector3d | Improve this Doc View Source ConvertZUpToYUp(Vector3f) Declaration public static Vector3f ConvertZUpToYUp(Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description Vector3f | Improve this Doc View Source FlipLeftRightCoordSystems(Frame3f) Declaration public static Frame3f FlipLeftRightCoordSystems(Frame3f f) Parameters Type Name Description Frame3f f Returns Type Description Frame3f | Improve this Doc View Source FlipLeftRightCoordSystems(IDeformableMesh) Declaration public static void FlipLeftRightCoordSystems(IDeformableMesh mesh) Parameters Type Name Description IDeformableMesh mesh | Improve this Doc View Source FlipLeftRightCoordSystems(Vector3d) Declaration public static Vector3d FlipLeftRightCoordSystems(Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Vector3d | Improve this Doc View Source FlipLeftRightCoordSystems(Vector3f) Declaration public static Vector3f FlipLeftRightCoordSystems(Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description Vector3f | Improve this Doc View Source FromFrame(IDeformableMesh, Frame3f) Map mesh from local frame coordinates into \"world\" coordinates Declaration public static void FromFrame(IDeformableMesh mesh, Frame3f f) Parameters Type Name Description IDeformableMesh mesh Frame3f f | Improve this Doc View Source PerVertexTransform(IDeformableMesh, IDeformableMesh, Int32[], Func<Vector3d, Int32, Int32, Vector3d>) Apply TransformF to subset of mesh vertices defined by MapV[vertices] Declaration public static void PerVertexTransform(IDeformableMesh targetMesh, IDeformableMesh sourceMesh, int[] mapV, Func<Vector3d, int, int, Vector3d> TransformF) Parameters Type Name Description IDeformableMesh targetMesh IDeformableMesh sourceMesh Int32 [] mapV Func < Vector3d , Int32 , Int32 , Vector3d > TransformF | Improve this Doc View Source PerVertexTransform(IDeformableMesh, TransformSequence) Apply Transform to vertices and normals of mesh Declaration public static void PerVertexTransform(IDeformableMesh mesh, TransformSequence xform) Parameters Type Name Description IDeformableMesh mesh TransformSequence xform | Improve this Doc View Source PerVertexTransform(IDeformableMesh, IEnumerable<Int32>, Func<Vector3d, Int32, Vector3d>) Apply TransformF to subset of vertices of mesh Declaration public static void PerVertexTransform(IDeformableMesh mesh, IEnumerable<int> vertices, Func<Vector3d, int, Vector3d> TransformF) Parameters Type Name Description IDeformableMesh mesh IEnumerable < Int32 > vertices Func < Vector3d , Int32 , Vector3d > TransformF | Improve this Doc View Source PerVertexTransform(IDeformableMesh, IEnumerable<Int32>, Func<Int32, Int32>, Func<Vector3d, Int32, Int32, Vector3d>) Apply TransformF to subset of mesh vertices defined by MapV[vertices] Declaration public static void PerVertexTransform(IDeformableMesh mesh, IEnumerable<int> vertices, Func<int, int> MapV, Func<Vector3d, int, int, Vector3d> TransformF) Parameters Type Name Description IDeformableMesh mesh IEnumerable < Int32 > vertices Func < Int32 , Int32 > MapV Func < Vector3d , Int32 , Int32 , Vector3d > TransformF | Improve this Doc View Source PerVertexTransform(IDeformableMesh, Func<Vector3d, Vector3d>) Apply TransformF to vertices of mesh Declaration public static void PerVertexTransform(IDeformableMesh mesh, Func<Vector3d, Vector3d> TransformF) Parameters Type Name Description IDeformableMesh mesh Func < Vector3d , Vector3d > TransformF | Improve this Doc View Source PerVertexTransform(IDeformableMesh, Func<Vector3d, Vector3f, Vector3d>) Declaration public static void PerVertexTransform(IDeformableMesh mesh, Func<Vector3d, Vector3f, Vector3d> TransformF) Parameters Type Name Description IDeformableMesh mesh Func < Vector3d , Vector3f , Vector3d > TransformF | Improve this Doc View Source PerVertexTransform(IDeformableMesh, Func<Vector3d, Vector3f, Vector3dTuple2>) Apply TransformF to vertices and normals of mesh Declaration public static void PerVertexTransform(IDeformableMesh mesh, Func<Vector3d, Vector3f, Vector3dTuple2> TransformF) Parameters Type Name Description IDeformableMesh mesh Func < Vector3d , Vector3f , Vector3dTuple2 > TransformF | Improve this Doc View Source Rotate(Frame3f, Vector3d, Quaterniond) Declaration public static Frame3f Rotate(Frame3f f, Vector3d origin, Quaterniond rotation) Parameters Type Name Description Frame3f f Vector3d origin Quaterniond rotation Returns Type Description Frame3f | Improve this Doc View Source Rotate(Frame3f, Vector3d, Quaternionf) Declaration public static Frame3f Rotate(Frame3f f, Vector3d origin, Quaternionf rotation) Parameters Type Name Description Frame3f f Vector3d origin Quaternionf rotation Returns Type Description Frame3f | Improve this Doc View Source Rotate(IDeformableMesh, Vector3d, Quaterniond) Declaration public static void Rotate(IDeformableMesh mesh, Vector3d origin, Quaterniond rotation) Parameters Type Name Description IDeformableMesh mesh Vector3d origin Quaterniond rotation | Improve this Doc View Source Rotate(IDeformableMesh, Vector3d, Quaternionf) Declaration public static void Rotate(IDeformableMesh mesh, Vector3d origin, Quaternionf rotation) Parameters Type Name Description IDeformableMesh mesh Vector3d origin Quaternionf rotation | Improve this Doc View Source Rotate(Vector3d, Vector3d, Quaterniond) Declaration public static Vector3d Rotate(Vector3d pos, Vector3d origin, Quaterniond rotation) Parameters Type Name Description Vector3d pos Vector3d origin Quaterniond rotation Returns Type Description Vector3d | Improve this Doc View Source Rotate(Vector3d, Vector3d, Quaternionf) Declaration public static Vector3d Rotate(Vector3d pos, Vector3d origin, Quaternionf rotation) Parameters Type Name Description Vector3d pos Vector3d origin Quaternionf rotation Returns Type Description Vector3d | Improve this Doc View Source Scale(IDeformableMesh, Vector3d, Vector3d) Declaration public static void Scale(IDeformableMesh mesh, Vector3d scale, Vector3d origin) Parameters Type Name Description IDeformableMesh mesh Vector3d scale Vector3d origin | Improve this Doc View Source Scale(IDeformableMesh, Double) Declaration public static void Scale(IDeformableMesh mesh, double s) Parameters Type Name Description IDeformableMesh mesh Double s | Improve this Doc View Source Scale(IDeformableMesh, Double, Double, Double) Declaration public static void Scale(IDeformableMesh mesh, double sx, double sy, double sz) Parameters Type Name Description IDeformableMesh mesh Double sx Double sy Double sz | Improve this Doc View Source ToFrame(IDeformableMesh, Frame3f) Map mesh into local coordinates of Frame Declaration public static void ToFrame(IDeformableMesh mesh, Frame3f f) Parameters Type Name Description IDeformableMesh mesh Frame3f f | Improve this Doc View Source Translate(IDeformableMesh, Vector3d) Declaration public static void Translate(IDeformableMesh mesh, Vector3d v) Parameters Type Name Description IDeformableMesh mesh Vector3d v | Improve this Doc View Source Translate(IDeformableMesh, Double, Double, Double) Declaration public static void Translate(IDeformableMesh mesh, double tx, double ty, double tz) Parameters Type Name Description IDeformableMesh mesh Double tx Double ty Double tz | Improve this Doc View Source VertexNormalOffset(IDeformableMesh, Double) Declaration public static void VertexNormalOffset(IDeformableMesh mesh, double offsetDistance) Parameters Type Name Description IDeformableMesh mesh Double offsetDistance"
  },
  "api/g3.MeshTriInfoCache.html": {
    "href": "api/g3.MeshTriInfoCache.html",
    "title": "Class MeshTriInfoCache | ViRGIS VR GIS",
    "keywords": "Class MeshTriInfoCache Inheritance Object MeshTriInfoCache Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshTriInfoCache Constructors | Improve this Doc View Source MeshTriInfoCache(DMesh3) Declaration public MeshTriInfoCache(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh Fields | Improve this Doc View Source Areas Declaration public DVector<double> Areas Field Value Type Description DVector < Double > | Improve this Doc View Source Centroids Declaration public DVector<Vector3d> Centroids Field Value Type Description DVector < Vector3d > | Improve this Doc View Source Normals Declaration public DVector<Vector3d> Normals Field Value Type Description DVector < Vector3d > Methods | Improve this Doc View Source GetTriInfo(Int32, ref Vector3d, ref Double, ref Vector3d) Declaration public void GetTriInfo(int tid, ref Vector3d n, ref double a, ref Vector3d c) Parameters Type Name Description Int32 tid Vector3d n Double a Vector3d c"
  },
  "api/g3.MeshTrimLoop.html": {
    "href": "api/g3.MeshTrimLoop.html",
    "title": "Class MeshTrimLoop | ViRGIS VR GIS",
    "keywords": "Class MeshTrimLoop Delete triangles inside on/near-surface trimming curve, and then adapt the new boundary loop to conform to the loop. [DANGER] To use this class, we require a spatial data structure we can project onto. Currently we assume that this is a DMesh3AABBTree because if you don't provide a seed triangle, we use FindNearestTriangle() to find this index on the input mesh. So, it must be a tree for the exact same mesh (!). However we then delete a bunch of triangles and use this spatial DS only for reprojection. Possibly these should be two separate things? Or force caller to provide seed triangle for trim loop, instead of solving this problem for them? (But basically there is no way around having a full mesh copy...) TODO: output boundary EdgeLoop that has been aligned w/ trim curve handle cases where input mesh has open borders Inheritance Object MeshTrimLoop Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshTrimLoop Constructors | Improve this Doc View Source MeshTrimLoop(DMesh3, DCurve3, Vector3d, DMeshAABBTree3) Declaration public MeshTrimLoop(DMesh3 mesh, DCurve3 trimline, Vector3d vSeedPt, DMeshAABBTree3 spatial = null) Parameters Type Name Description DMesh3 mesh DCurve3 trimline Vector3d vSeedPt DMeshAABBTree3 spatial | Improve this Doc View Source MeshTrimLoop(DMesh3, DCurve3, Int32, DMeshAABBTree3) Cut mesh with plane. Assumption is that plane normal is Z value. Declaration public MeshTrimLoop(DMesh3 mesh, DCurve3 trimline, int tSeedTID, DMeshAABBTree3 spatial = null) Parameters Type Name Description DMesh3 mesh DCurve3 trimline Int32 tSeedTID DMeshAABBTree3 spatial Fields | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 | Improve this Doc View Source RemeshBorderRings Declaration public int RemeshBorderRings Field Value Type Description Int32 | Improve this Doc View Source RemeshRounds Declaration public int RemeshRounds Field Value Type Description Int32 | Improve this Doc View Source SmoothingAlpha Declaration public double SmoothingAlpha Field Value Type Description Double | Improve this Doc View Source Spatial Declaration public DMeshAABBTree3 Spatial Field Value Type Description DMeshAABBTree3 | Improve this Doc View Source TargetEdgeLength Declaration public double TargetEdgeLength Field Value Type Description Double | Improve this Doc View Source TrimLine Declaration public DCurve3 TrimLine Field Value Type Description DCurve3 Methods | Improve this Doc View Source Trim() Declaration public virtual bool Trim() Returns Type Description Boolean | Improve this Doc View Source Validate() Declaration public virtual ValidationStatus Validate() Returns Type Description ValidationStatus"
  },
  "api/g3.MeshUtil.html": {
    "href": "api/g3.MeshUtil.html",
    "title": "Class MeshUtil | ViRGIS VR GIS",
    "keywords": "Class MeshUtil Inheritance Object MeshUtil Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class MeshUtil Methods | Improve this Doc View Source CheckIfCollapseCreatesFlip(DMesh3, Int32, Vector3d) Check if collapsing edge edgeID to point newv will flip normal of any attached face Declaration public static bool CheckIfCollapseCreatesFlip(DMesh3 mesh, int edgeID, Vector3d newv) Parameters Type Name Description DMesh3 mesh Int32 edgeID Vector3d newv Returns Type Description Boolean | Improve this Doc View Source CheckIfEdgeFlipCreatesFlip(DMesh3, Int32, Double) if before a flip we have normals (n1,n2) and after we have (m1,m2), check if the dot between any of the 4 pairs changes sign after the flip, or is less than the dot-product tolerance (ie angle tolerance) Declaration public static bool CheckIfEdgeFlipCreatesFlip(DMesh3 mesh, int eID, double flip_dot_tol = 0) Parameters Type Name Description DMesh3 mesh Int32 eID Double flip_dot_tol Returns Type Description Boolean | Improve this Doc View Source CotanSmooth(DMesh3, Int32, Double) Declaration public static Vector3d CotanSmooth(DMesh3 mesh, int vID, double t) Parameters Type Name Description DMesh3 mesh Int32 vID Double t Returns Type Description Vector3d | Improve this Doc View Source DiscreteGaussCurvature(DMesh3, Int32) computes sum of opening-angles in triangles around vid, minus 2pi. This is zero on flat areas. Declaration public static double DiscreteGaussCurvature(DMesh3 mesh, int vid) Parameters Type Name Description DMesh3 mesh Int32 vid Returns Type Description Double | Improve this Doc View Source ExtractLoopV(IMesh, IEnumerable<Int32>) Declaration public static DCurve3 ExtractLoopV(IMesh mesh, IEnumerable<int> vertices) Parameters Type Name Description IMesh mesh IEnumerable < Int32 > vertices Returns Type Description DCurve3 | Improve this Doc View Source ExtractLoopV(IMesh, Int32[]) Declaration public static DCurve3 ExtractLoopV(IMesh mesh, int[] vertices) Parameters Type Name Description IMesh mesh Int32 [] vertices Returns Type Description DCurve3 | Improve this Doc View Source GetEdgeFlipNormals(DMesh3, Int32, out Vector3d, out Vector3d, out Vector3d, out Vector3d) For given edge, return normals of it's two triangles, and normals of the triangles created if edge is flipped (used in edge-flip optimizers) Declaration public static void GetEdgeFlipNormals(DMesh3 mesh, int eID, out Vector3d n1, out Vector3d n2, out Vector3d on1, out Vector3d on2) Parameters Type Name Description DMesh3 mesh Int32 eID Vector3d n1 Vector3d n2 Vector3d on1 Vector3d on2 | Improve this Doc View Source GetEdgeFlipTris(DMesh3, Int32, out Index3i, out Index3i, out Index3i, out Index3i) For given edge, return it's triangles and the triangles that would be created if it was flipped (used in edge-flip optimizers) Declaration public static void GetEdgeFlipTris(DMesh3 mesh, int eID, out Index3i orig_t0, out Index3i orig_t1, out Index3i flip_t0, out Index3i flip_t1) Parameters Type Name Description DMesh3 mesh Int32 eID Index3i orig_t0 Index3i orig_t1 Index3i flip_t0 Index3i flip_t1 | Improve this Doc View Source MeanValueSmooth(DMesh3, Int32, Double) Declaration public static Vector3d MeanValueSmooth(DMesh3 mesh, int vID, double t) Parameters Type Name Description DMesh3 mesh Int32 vID Double t Returns Type Description Vector3d | Improve this Doc View Source OpeningAngleD(DMesh3, Int32) computes opening angle between the two triangles connected to edge Declaration public static double OpeningAngleD(DMesh3 mesh, int eid) Parameters Type Name Description DMesh3 mesh Int32 eid Returns Type Description Double | Improve this Doc View Source ScaleMesh(DMesh3, Frame3f, Vector3f) Declaration public static void ScaleMesh(DMesh3 mesh, Frame3f f, Vector3f vScale) Parameters Type Name Description DMesh3 mesh Frame3f f Vector3f vScale | Improve this Doc View Source UniformSmooth(DMesh3, Int32, Double) Declaration public static Vector3d UniformSmooth(DMesh3 mesh, int vID, double t) Parameters Type Name Description DMesh3 mesh Int32 vID Double t Returns Type Description Vector3d"
  },
  "api/g3.MeshValidation.html": {
    "href": "api/g3.MeshValidation.html",
    "title": "Class MeshValidation | ViRGIS VR GIS",
    "keywords": "Class MeshValidation Inheritance Object MeshValidation Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class MeshValidation Methods | Improve this Doc View Source HasDuplicateTriangles(DMesh3) Declaration public static ValidationStatus HasDuplicateTriangles(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh Returns Type Description ValidationStatus | Improve this Doc View Source IsBoundaryLoop(DMesh3, EdgeLoop) Declaration public static ValidationStatus IsBoundaryLoop(DMesh3 mesh, EdgeLoop loop) Parameters Type Name Description DMesh3 mesh EdgeLoop loop Returns Type Description ValidationStatus | Improve this Doc View Source IsEdgeLoop(DMesh3, EdgeLoop) Declaration public static ValidationStatus IsEdgeLoop(DMesh3 mesh, EdgeLoop loop) Parameters Type Name Description DMesh3 mesh EdgeLoop loop Returns Type Description ValidationStatus"
  },
  "api/g3.MeshVertexSelection.html": {
    "href": "api/g3.MeshVertexSelection.html",
    "title": "Class MeshVertexSelection | ViRGIS VR GIS",
    "keywords": "Class MeshVertexSelection Inheritance Object MeshVertexSelection Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class MeshVertexSelection : IEnumerable<int>, IEnumerable Constructors | Improve this Doc View Source MeshVertexSelection(DMesh3) Declaration public MeshVertexSelection(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh | Improve this Doc View Source MeshVertexSelection(DMesh3, MeshEdgeSelection) Declaration public MeshVertexSelection(DMesh3 mesh, MeshEdgeSelection convertE) Parameters Type Name Description DMesh3 mesh MeshEdgeSelection convertE | Improve this Doc View Source MeshVertexSelection(DMesh3, MeshFaceSelection) Declaration public MeshVertexSelection(DMesh3 mesh, MeshFaceSelection convertT) Parameters Type Name Description DMesh3 mesh MeshFaceSelection convertT Fields | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Deselect(IEnumerable<Int32>) Declaration public void Deselect(IEnumerable<int> vertices) Parameters Type Name Description IEnumerable < Int32 > vertices | Improve this Doc View Source Deselect(Int32) Declaration public void Deselect(int vID) Parameters Type Name Description Int32 vID | Improve this Doc View Source Deselect(Int32[]) Declaration public void Deselect(int[] vertices) Parameters Type Name Description Int32 [] vertices | Improve this Doc View Source DeselectEdge(Int32) Declaration public void DeselectEdge(int eid) Parameters Type Name Description Int32 eid | Improve this Doc View Source DeselectEdges(IEnumerable<Int32>) Declaration public void DeselectEdges(IEnumerable<int> edges) Parameters Type Name Description IEnumerable < Int32 > edges | Improve this Doc View Source ExpandToOneRingNeighbours(Func<Int32, Boolean>) Add all one-ring neighbours of current selection to set. On a large mesh this is quite expensive as we don't know the boundary, so we have to iterate over all triangles. Return false from FilterF to prevent vertices from being included. Declaration public void ExpandToOneRingNeighbours(Func<int, bool> FilterF = null) Parameters Type Name Description Func < Int32 , Boolean > FilterF | Improve this Doc View Source ExpandToOneRingNeighbours(Int32, Func<Int32, Boolean>) Declaration public void ExpandToOneRingNeighbours(int nRings, Func<int, bool> FilterF = null) Parameters Type Name Description Int32 nRings Func < Int32 , Boolean > FilterF | Improve this Doc View Source ExtractSelected() Declaration public HashSet<int> ExtractSelected() Returns Type Description HashSet < Int32 > | Improve this Doc View Source FloodFill(Int32, Func<Int32, Boolean>) Grow selection outwards from seed vertex, until it hits boundaries defined by vertex filter. Declaration public void FloodFill(int vSeed, Func<int, bool> VertIncludedF = null) Parameters Type Name Description Int32 vSeed Func < Int32 , Boolean > VertIncludedF | Improve this Doc View Source FloodFill(Int32[], Func<Int32, Boolean>) Grow selection outwards from seed vertex, until it hits boundaries defined by vertex filter. Declaration public void FloodFill(int[] Seeds, Func<int, bool> VertIncludedF = null) Parameters Type Name Description Int32 [] Seeds Func < Int32 , Boolean > VertIncludedF | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<int> GetEnumerator() Returns Type Description IEnumerator < Int32 > | Improve this Doc View Source IsSelected(Int32) Declaration public bool IsSelected(int vID) Parameters Type Name Description Int32 vID Returns Type Description Boolean | Improve this Doc View Source Select(IEnumerable<Int32>) Declaration public void Select(IEnumerable<int> vertices) Parameters Type Name Description IEnumerable < Int32 > vertices | Improve this Doc View Source Select(Int32) Declaration public void Select(int vID) Parameters Type Name Description Int32 vID | Improve this Doc View Source Select(Int32[]) Declaration public void Select(int[] vertices) Parameters Type Name Description Int32 [] vertices | Improve this Doc View Source SelectConnectedBoundaryV(Int32) Select set of boundary vertices connected to vSeed. Declaration public void SelectConnectedBoundaryV(int vSeed) Parameters Type Name Description Int32 vSeed | Improve this Doc View Source SelectEdgeVertices(IEnumerable<Int32>) Declaration public void SelectEdgeVertices(IEnumerable<int> edges) Parameters Type Name Description IEnumerable < Int32 > edges | Improve this Doc View Source SelectEdgeVertices(Int32[]) Declaration public void SelectEdgeVertices(int[] edges) Parameters Type Name Description Int32 [] edges | Improve this Doc View Source SelectInteriorVertices(MeshFaceSelection) for each vertex of input triangle set, select vertex if all one-ring triangles are contained in triangle set (ie vertex is not on boundary of triangle set). Declaration public void SelectInteriorVertices(MeshFaceSelection triangles) Parameters Type Name Description MeshFaceSelection triangles | Improve this Doc View Source SelectTriangleVertices(MeshFaceSelection) Declaration public void SelectTriangleVertices(MeshFaceSelection triangles) Parameters Type Name Description MeshFaceSelection triangles | Improve this Doc View Source SelectTriangleVertices(IEnumerable<Int32>) Declaration public void SelectTriangleVertices(IEnumerable<int> triangles) Parameters Type Name Description IEnumerable < Int32 > triangles | Improve this Doc View Source SelectTriangleVertices(Int32[]) Declaration public void SelectTriangleVertices(int[] triangles) Parameters Type Name Description Int32 [] triangles | Improve this Doc View Source ToArray() Declaration public int[] ToArray() Returns Type Description Int32 []"
  },
  "api/g3.MeshWeights.html": {
    "href": "api/g3.MeshWeights.html",
    "title": "Class MeshWeights | ViRGIS VR GIS",
    "keywords": "Class MeshWeights Inheritance Object MeshWeights Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class MeshWeights Methods | Improve this Doc View Source CotanCentroid(DMesh3, Int32) Declaration public static Vector3d CotanCentroid(DMesh3 mesh, int v_i) Parameters Type Name Description DMesh3 mesh Int32 v_i Returns Type Description Vector3d | Improve this Doc View Source MeanValueCentroid(DMesh3, Int32) Declaration public static Vector3d MeanValueCentroid(DMesh3 mesh, int v_i) Parameters Type Name Description DMesh3 mesh Int32 v_i Returns Type Description Vector3d | Improve this Doc View Source OneRingCentroid(DMesh3, Int32) Declaration public static Vector3d OneRingCentroid(DMesh3 mesh, int vID) Parameters Type Name Description DMesh3 mesh Int32 vID Returns Type Description Vector3d | Improve this Doc View Source VectorTanHalfAngle(Vector3d, Vector3d) Declaration public static double VectorTanHalfAngle(Vector3d a, Vector3d b) Parameters Type Name Description Vector3d a Vector3d b Returns Type Description Double | Improve this Doc View Source VoronoiArea(DMesh3, Int32) Declaration public static double VoronoiArea(DMesh3 mesh, int v_i) Parameters Type Name Description DMesh3 mesh Int32 v_i Returns Type Description Double"
  },
  "api/g3.ModifyVerticesMeshChange.html": {
    "href": "api/g3.ModifyVerticesMeshChange.html",
    "title": "Class ModifyVerticesMeshChange | ViRGIS VR GIS",
    "keywords": "Class ModifyVerticesMeshChange Mesh change for vertex deformations. Currently minimal support for initializing buffers. AppendNewVertex() can be used to accumulate modified vertices and their initial positions. Inheritance Object ModifyVerticesMeshChange Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ModifyVerticesMeshChange Constructors | Improve this Doc View Source ModifyVerticesMeshChange(DMesh3, MeshComponents) Declaration public ModifyVerticesMeshChange(DMesh3 mesh, MeshComponents wantComponents = MeshComponents.VertexNormals | MeshComponents.VertexColors | MeshComponents.VertexUVs | MeshComponents.FaceGroups | MeshComponents.All) Parameters Type Name Description DMesh3 mesh MeshComponents wantComponents Fields | Improve this Doc View Source ModifiedV Declaration public DVector<int> ModifiedV Field Value Type Description DVector < Int32 > | Improve this Doc View Source NewColors Declaration public DVector<Vector3f> NewColors Field Value Type Description DVector < Vector3f > | Improve this Doc View Source NewNormals Declaration public DVector<Vector3f> NewNormals Field Value Type Description DVector < Vector3f > | Improve this Doc View Source NewPositions Declaration public DVector<Vector3d> NewPositions Field Value Type Description DVector < Vector3d > | Improve this Doc View Source NewUVs Declaration public DVector<Vector2f> NewUVs Field Value Type Description DVector < Vector2f > | Improve this Doc View Source OldColors Declaration public DVector<Vector3f> OldColors Field Value Type Description DVector < Vector3f > | Improve this Doc View Source OldNormals Declaration public DVector<Vector3f> OldNormals Field Value Type Description DVector < Vector3f > | Improve this Doc View Source OldPositions Declaration public DVector<Vector3d> OldPositions Field Value Type Description DVector < Vector3d > | Improve this Doc View Source OldUVs Declaration public DVector<Vector2f> OldUVs Field Value Type Description DVector < Vector2f > | Improve this Doc View Source OnApplyF Declaration public Action<ModifyVerticesMeshChange> OnApplyF Field Value Type Description Action < ModifyVerticesMeshChange > | Improve this Doc View Source OnRevertF Declaration public Action<ModifyVerticesMeshChange> OnRevertF Field Value Type Description Action < ModifyVerticesMeshChange > Methods | Improve this Doc View Source AppendNewVertex(DMesh3, Int32) Declaration public int AppendNewVertex(DMesh3 mesh, int vid) Parameters Type Name Description DMesh3 mesh Int32 vid Returns Type Description Int32 | Improve this Doc View Source Apply(DMesh3) Declaration public void Apply(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh | Improve this Doc View Source Revert(DMesh3) Declaration public void Revert(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh"
  },
  "api/g3.MultigridIndexer2.html": {
    "href": "api/g3.MultigridIndexer2.html",
    "title": "Struct MultigridIndexer2 | ViRGIS VR GIS",
    "keywords": "Struct MultigridIndexer2 map between \"outer\" (ie higher-res) grid coordinates and \"blocks\" of those coordinates. Implements IMultigridIndexer2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct MultigridIndexer2 : IMultigridIndexer2 Constructors | Improve this Doc View Source MultigridIndexer2(Vector2i) Declaration public MultigridIndexer2(Vector2i blockSize) Parameters Type Name Description Vector2i blockSize Fields | Improve this Doc View Source BlockShift Declaration public Vector2i BlockShift Field Value Type Description Vector2i | Improve this Doc View Source BlockSize Declaration public Vector2i BlockSize Field Value Type Description Vector2i | Improve this Doc View Source OuterShift Declaration public Vector2i OuterShift Field Value Type Description Vector2i Methods | Improve this Doc View Source FromBlock(Vector2i) Declaration public Vector2i FromBlock(Vector2i block_idx) Parameters Type Name Description Vector2i block_idx Returns Type Description Vector2i | Improve this Doc View Source ToBlock(Vector2i) Declaration public GridLevelIndex2 ToBlock(Vector2i outer_index) Parameters Type Name Description Vector2i outer_index Returns Type Description GridLevelIndex2 | Improve this Doc View Source ToBlockIndex(Vector2i) Declaration public Vector2i ToBlockIndex(Vector2i outer_index) Parameters Type Name Description Vector2i outer_index Returns Type Description Vector2i | Improve this Doc View Source ToBlockLocal(Vector2i) Declaration public Vector2i ToBlockLocal(Vector2i outer_index) Parameters Type Name Description Vector2i outer_index Returns Type Description Vector2i Implements IMultigridIndexer2"
  },
  "api/g3.MultigridIndexer3.html": {
    "href": "api/g3.MultigridIndexer3.html",
    "title": "Struct MultigridIndexer3 | ViRGIS VR GIS",
    "keywords": "Struct MultigridIndexer3 map between \"outer\" (ie higher-res) grid coordinates and \"blocks\" of those coordinates. Implements IMultigridIndexer3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct MultigridIndexer3 : IMultigridIndexer3 Constructors | Improve this Doc View Source MultigridIndexer3(Vector3i) Declaration public MultigridIndexer3(Vector3i blockSize) Parameters Type Name Description Vector3i blockSize Fields | Improve this Doc View Source BlockShift Declaration public Vector3i BlockShift Field Value Type Description Vector3i | Improve this Doc View Source BlockSize Declaration public Vector3i BlockSize Field Value Type Description Vector3i | Improve this Doc View Source OuterShift Declaration public Vector3i OuterShift Field Value Type Description Vector3i Methods | Improve this Doc View Source FromBlock(Vector3i) Declaration public Vector3i FromBlock(Vector3i block_idx) Parameters Type Name Description Vector3i block_idx Returns Type Description Vector3i | Improve this Doc View Source ToBlock(Vector3i) Declaration public GridLevelIndex ToBlock(Vector3i outer_index) Parameters Type Name Description Vector3i outer_index Returns Type Description GridLevelIndex | Improve this Doc View Source ToBlockIndex(Vector3i) Declaration public Vector3i ToBlockIndex(Vector3i outer_index) Parameters Type Name Description Vector3i outer_index Returns Type Description Vector3i | Improve this Doc View Source ToBlockLocal(Vector3i) Declaration public Vector3i ToBlockLocal(Vector3i outer_index) Parameters Type Name Description Vector3i outer_index Returns Type Description Vector3i Implements IMultigridIndexer3"
  },
  "api/g3.NewVertexInfo.html": {
    "href": "api/g3.NewVertexInfo.html",
    "title": "Struct NewVertexInfo | ViRGIS VR GIS",
    "keywords": "Struct NewVertexInfo Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct NewVertexInfo Constructors | Improve this Doc View Source NewVertexInfo(Vector3d) Declaration public NewVertexInfo(Vector3d v) Parameters Type Name Description Vector3d v | Improve this Doc View Source NewVertexInfo(Vector3d, Vector3f) Declaration public NewVertexInfo(Vector3d v, Vector3f n) Parameters Type Name Description Vector3d v Vector3f n | Improve this Doc View Source NewVertexInfo(Vector3d, Vector3f, Vector3f) Declaration public NewVertexInfo(Vector3d v, Vector3f n, Vector3f c) Parameters Type Name Description Vector3d v Vector3f n Vector3f c | Improve this Doc View Source NewVertexInfo(Vector3d, Vector3f, Vector3f, Vector2f) Declaration public NewVertexInfo(Vector3d v, Vector3f n, Vector3f c, Vector2f uv) Parameters Type Name Description Vector3d v Vector3f n Vector3f c Vector2f uv Fields | Improve this Doc View Source bHaveC Declaration public bool bHaveC Field Value Type Description Boolean | Improve this Doc View Source bHaveN Declaration public bool bHaveN Field Value Type Description Boolean | Improve this Doc View Source bHaveUV Declaration public bool bHaveUV Field Value Type Description Boolean | Improve this Doc View Source c Declaration public Vector3f c Field Value Type Description Vector3f | Improve this Doc View Source n Declaration public Vector3f n Field Value Type Description Vector3f | Improve this Doc View Source uv Declaration public Vector2f uv Field Value Type Description Vector2f | Improve this Doc View Source v Declaration public Vector3d v Field Value Type Description Vector3d"
  },
  "api/g3.NormalHistogram.html": {
    "href": "api/g3.NormalHistogram.html",
    "title": "Class NormalHistogram | ViRGIS VR GIS",
    "keywords": "Class NormalHistogram Construct spherical histogram of normals of mesh. Binning is done using a Spherical Fibonacci point set. Inheritance Object NormalHistogram Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class NormalHistogram Constructors | Improve this Doc View Source NormalHistogram(DMesh3, Boolean, Int32) legacy API Declaration public NormalHistogram(DMesh3 mesh, bool bWeightByArea = true, int bins = 1024) Parameters Type Name Description DMesh3 mesh Boolean bWeightByArea Int32 bins | Improve this Doc View Source NormalHistogram(Int32, Boolean) Declaration public NormalHistogram(int bins, bool bTrackUsed = false) Parameters Type Name Description Int32 bins Boolean bTrackUsed Fields | Improve this Doc View Source Bins Declaration public int Bins Field Value Type Description Int32 | Improve this Doc View Source Counts Declaration public double[] Counts Field Value Type Description Double [] | Improve this Doc View Source Points Declaration public SphericalFibonacciPointSet Points Field Value Type Description SphericalFibonacciPointSet | Improve this Doc View Source UsedBins Declaration public HashSet<int> UsedBins Field Value Type Description HashSet < Int32 > Methods | Improve this Doc View Source Count(Vector3d, Double, Boolean) bin and count point, and optionally normalize Declaration public void Count(Vector3d pt, double weight = 1, bool bIsNormalized = false) Parameters Type Name Description Vector3d pt Double weight Boolean bIsNormalized | Improve this Doc View Source CountFaceNormals(DMesh3, Boolean) Count all input mesh face normals Declaration public void CountFaceNormals(DMesh3 mesh, bool bWeightByArea = true) Parameters Type Name Description DMesh3 mesh Boolean bWeightByArea | Improve this Doc View Source FindMaxNormal() return (quantized) normal associated w/ maximum weight/area Declaration public Vector3d FindMaxNormal() Returns Type Description Vector3d"
  },
  "api/g3.NTMesh3.EdgeSplitInfo.html": {
    "href": "api/g3.NTMesh3.EdgeSplitInfo.html",
    "title": "Struct NTMesh3.EdgeSplitInfo | ViRGIS VR GIS",
    "keywords": "Struct NTMesh3.EdgeSplitInfo Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct EdgeSplitInfo Fields | Improve this Doc View Source bIsBoundary Declaration public bool bIsBoundary Field Value Type Description Boolean | Improve this Doc View Source eNewBN Declaration public int eNewBN Field Value Type Description Int32 | Improve this Doc View Source NewEdges Declaration public List<int> NewEdges Field Value Type Description List < Int32 > | Improve this Doc View Source vNew Declaration public int vNew Field Value Type Description Int32"
  },
  "api/g3.NTMesh3.html": {
    "href": "api/g3.NTMesh3.html",
    "title": "Class NTMesh3 | ViRGIS VR GIS",
    "keywords": "Class NTMesh3 Inheritance Object NTMesh3 Implements IDeformableMesh IMesh IPointSet Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class NTMesh3 : IDeformableMesh, IMesh, IPointSet Constructors | Improve this Doc View Source NTMesh3(DMesh3) Declaration public NTMesh3(DMesh3 copy) Parameters Type Name Description DMesh3 copy | Improve this Doc View Source NTMesh3(MeshComponents) Declaration public NTMesh3(MeshComponents flags) Parameters Type Name Description MeshComponents flags | Improve this Doc View Source NTMesh3(NTMesh3) Declaration public NTMesh3(NTMesh3 copy) Parameters Type Name Description NTMesh3 copy | Improve this Doc View Source NTMesh3(Boolean, Boolean, Boolean) Declaration public NTMesh3(bool bWantNormals = true, bool bWantColors = false, bool bWantTriGroups = false) Parameters Type Name Description Boolean bWantNormals Boolean bWantColors Boolean bWantTriGroups Fields | Improve this Doc View Source InvalidEdge Declaration public static readonly Index2i InvalidEdge Field Value Type Description Index2i | Improve this Doc View Source InvalidID Declaration public const int InvalidID = -1 Field Value Type Description Int32 | Improve this Doc View Source InvalidTriangle Declaration public static readonly Index3i InvalidTriangle Field Value Type Description Index3i | Improve this Doc View Source InvalidVertex Declaration public static readonly Vector3d InvalidVertex Field Value Type Description Vector3d | Improve this Doc View Source NonManifoldID Declaration public const int NonManifoldID = -2 Field Value Type Description Int32 Properties | Improve this Doc View Source CachedBounds Declaration public AxisAlignedBox3d CachedBounds { get; } Property Value Type Description AxisAlignedBox3d | Improve this Doc View Source CachedIsClosed Declaration public bool CachedIsClosed { get; } Property Value Type Description Boolean | Improve this Doc View Source Components Declaration public MeshComponents Components { get; } Property Value Type Description MeshComponents | Improve this Doc View Source EdgeCount Declaration public int EdgeCount { get; } Property Value Type Description Int32 | Improve this Doc View Source HasTriangleGroups Declaration public bool HasTriangleGroups { get; } Property Value Type Description Boolean | Improve this Doc View Source HasVertexColors Declaration public bool HasVertexColors { get; } Property Value Type Description Boolean | Improve this Doc View Source HasVertexNormals Declaration public bool HasVertexNormals { get; } Property Value Type Description Boolean | Improve this Doc View Source HasVertexUVs Declaration public bool HasVertexUVs { get; } Property Value Type Description Boolean | Improve this Doc View Source IsCompact Declaration public bool IsCompact { get; } Property Value Type Description Boolean | Improve this Doc View Source IsCompactV Declaration public bool IsCompactV { get; } Property Value Type Description Boolean | Improve this Doc View Source MaxEdgeID Declaration public int MaxEdgeID { get; } Property Value Type Description Int32 | Improve this Doc View Source MaxGroupID Declaration public int MaxGroupID { get; } Property Value Type Description Int32 | Improve this Doc View Source MaxTriangleID Declaration public int MaxTriangleID { get; } Property Value Type Description Int32 | Improve this Doc View Source MaxVertexID Declaration public int MaxVertexID { get; } Property Value Type Description Int32 | Improve this Doc View Source ShapeTimestamp Declaration public int ShapeTimestamp { get; } Property Value Type Description Int32 | Improve this Doc View Source Timestamp Declaration public int Timestamp { get; } Property Value Type Description Int32 | Improve this Doc View Source TriangleCount Declaration public int TriangleCount { get; } Property Value Type Description Int32 | Improve this Doc View Source VertexCount Declaration public int VertexCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source AllocateTriangleGroup() Declaration public int AllocateTriangleGroup() Returns Type Description Int32 | Improve this Doc View Source AppendTriangle(Index3i, Int32) Declaration public int AppendTriangle(Index3i tv, int gid = -1) Parameters Type Name Description Index3i tv Int32 gid Returns Type Description Int32 | Improve this Doc View Source AppendTriangle(Int32, Int32, Int32, Int32) Declaration public int AppendTriangle(int v0, int v1, int v2, int gid = -1) Parameters Type Name Description Int32 v0 Int32 v1 Int32 v2 Int32 gid Returns Type Description Int32 | Improve this Doc View Source AppendVertex(NewVertexInfo) Declaration public int AppendVertex(NewVertexInfo info) Parameters Type Name Description NewVertexInfo info Returns Type Description Int32 | Improve this Doc View Source AppendVertex(Vector3d) Declaration public int AppendVertex(Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Int32 | Improve this Doc View Source BoundaryEdgeIndices() Declaration public IEnumerable<int> BoundaryEdgeIndices() Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source CheckValidity(FailMode) Declaration public bool CheckValidity(FailMode eFailMode = FailMode.Throw) Parameters Type Name Description FailMode eFailMode Returns Type Description Boolean | Improve this Doc View Source Copy(NTMesh3, Boolean, Boolean) Declaration public void Copy(NTMesh3 copy, bool bNormals = true, bool bColors = true) Parameters Type Name Description NTMesh3 copy Boolean bNormals Boolean bColors | Improve this Doc View Source debug_check_is_edge(Int32) Declaration [Conditional(\"DEBUG\")] public void debug_check_is_edge(int e) Parameters Type Name Description Int32 e | Improve this Doc View Source debug_check_is_triangle(Int32) Declaration [Conditional(\"DEBUG\")] public void debug_check_is_triangle(int t) Parameters Type Name Description Int32 t | Improve this Doc View Source debug_check_is_vertex(Int32) Declaration [Conditional(\"DEBUG\")] public void debug_check_is_vertex(int v) Parameters Type Name Description Int32 v | Improve this Doc View Source Deconstruct() Declaration public DMesh3 Deconstruct() Returns Type Description DMesh3 | Improve this Doc View Source DiscardTriangleGroups() Declaration public void DiscardTriangleGroups() | Improve this Doc View Source DiscardVertexColors() Declaration public void DiscardVertexColors() | Improve this Doc View Source DiscardVertexNormals() Declaration public void DiscardVertexNormals() | Improve this Doc View Source edge_has_t(Int32, Int32) Declaration protected bool edge_has_t(int eid, int tid) Parameters Type Name Description Int32 eid Int32 tid Returns Type Description Boolean | Improve this Doc View Source edge_has_v(Int32, Int32) Declaration protected bool edge_has_v(int eid, int vid) Parameters Type Name Description Int32 eid Int32 vid Returns Type Description Boolean | Improve this Doc View Source edge_is_boundary(Int32) Declaration protected bool edge_is_boundary(int eid) Parameters Type Name Description Int32 eid Returns Type Description Boolean | Improve this Doc View Source edge_other_v(Int32, Int32) Declaration protected int edge_other_v(int eID, int vID) Parameters Type Name Description Int32 eID Int32 vID Returns Type Description Int32 | Improve this Doc View Source EdgeIndices() Declaration public IEnumerable<int> EdgeIndices() Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source EdgeTrianglesCount(Int32) Declaration public int EdgeTrianglesCount(int eID) Parameters Type Name Description Int32 eID Returns Type Description Int32 | Improve this Doc View Source EdgeTrianglesItr(Int32) Declaration public IEnumerable<int> EdgeTrianglesItr(int eID) Parameters Type Name Description Int32 eID Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source EnableTriangleGroups(Int32) Declaration public void EnableTriangleGroups(int initial_group = 0) Parameters Type Name Description Int32 initial_group | Improve this Doc View Source EnableVertexColors(Vector3f) Declaration public void EnableVertexColors(Vector3f initial_color) Parameters Type Name Description Vector3f initial_color | Improve this Doc View Source EnableVertexNormals(Vector3f) Declaration public void EnableVertexNormals(Vector3f initial_normal) Parameters Type Name Description Vector3f initial_normal | Improve this Doc View Source find_tri_neighbour_edge(Int32, Int32, Int32) Declaration protected int find_tri_neighbour_edge(int tID, int vA, int vB) Parameters Type Name Description Int32 tID Int32 vA Int32 vB Returns Type Description Int32 | Improve this Doc View Source find_tri_neighbour_index(Int32, Int32, Int32) Declaration protected int find_tri_neighbour_index(int tID, int vA, int vB) Parameters Type Name Description Int32 tID Int32 vA Int32 vB Returns Type Description Int32 | Improve this Doc View Source FindEdge(Int32, Int32) Declaration public int FindEdge(int vA, int vB) Parameters Type Name Description Int32 vA Int32 vB Returns Type Description Int32 | Improve this Doc View Source FindEdgeFromTri(Int32, Int32, Int32) Declaration public int FindEdgeFromTri(int vA, int vB, int t) Parameters Type Name Description Int32 vA Int32 vB Int32 t Returns Type Description Int32 | Improve this Doc View Source GetBounds() Declaration public AxisAlignedBox3d GetBounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source GetEdgeV(Int32) Declaration public Index2i GetEdgeV(int eID) Parameters Type Name Description Int32 eID Returns Type Description Index2i | Improve this Doc View Source GetEdgeV(Int32, ref Vector3d, ref Vector3d) Declaration public bool GetEdgeV(int eID, ref Vector3d a, ref Vector3d b) Parameters Type Name Description Int32 eID Vector3d a Vector3d b Returns Type Description Boolean | Improve this Doc View Source GetMaxVtxEdgeCount() Declaration public int GetMaxVtxEdgeCount() Returns Type Description Int32 | Improve this Doc View Source GetOrientedBoundaryEdgeV(Int32) Declaration public Index2i GetOrientedBoundaryEdgeV(int eID) Parameters Type Name Description Int32 eID Returns Type Description Index2i | Improve this Doc View Source GetTriangle(Int32) Declaration public Index3i GetTriangle(int tID) Parameters Type Name Description Int32 tID Returns Type Description Index3i | Improve this Doc View Source GetTriangleGroup(Int32) Declaration public int GetTriangleGroup(int tID) Parameters Type Name Description Int32 tID Returns Type Description Int32 | Improve this Doc View Source GetTriArea(Int32) Declaration public double GetTriArea(int tID) Parameters Type Name Description Int32 tID Returns Type Description Double | Improve this Doc View Source GetTriBounds(Int32) Declaration public AxisAlignedBox3d GetTriBounds(int tID) Parameters Type Name Description Int32 tID Returns Type Description AxisAlignedBox3d | Improve this Doc View Source GetTriEdge(Int32, Int32) Declaration public int GetTriEdge(int tid, int j) Parameters Type Name Description Int32 tid Int32 j Returns Type Description Int32 | Improve this Doc View Source GetTriEdges(Int32) Declaration public Index3i GetTriEdges(int tID) Parameters Type Name Description Int32 tID Returns Type Description Index3i | Improve this Doc View Source GetTriFrame(Int32, Int32) Declaration public Frame3f GetTriFrame(int tID, int nEdge = 0) Parameters Type Name Description Int32 tID Int32 nEdge Returns Type Description Frame3f | Improve this Doc View Source GetTriInfo(Int32, out Vector3d, out Double, out Vector3d) Declaration public void GetTriInfo(int tID, out Vector3d normal, out double fArea, out Vector3d vCentroid) Parameters Type Name Description Int32 tID Vector3d normal Double fArea Vector3d vCentroid | Improve this Doc View Source GetTriNormal(Int32) Declaration public Vector3d GetTriNormal(int tID) Parameters Type Name Description Int32 tID Returns Type Description Vector3d | Improve this Doc View Source GetTriVertex(Int32, Int32) Declaration public Vector3d GetTriVertex(int tid, int j) Parameters Type Name Description Int32 tid Int32 j Returns Type Description Vector3d | Improve this Doc View Source GetTriVertices(Int32, ref Vector3d, ref Vector3d, ref Vector3d) Declaration public void GetTriVertices(int tID, ref Vector3d v0, ref Vector3d v1, ref Vector3d v2) Parameters Type Name Description Int32 tID Vector3d v0 Vector3d v1 Vector3d v2 | Improve this Doc View Source GetVertex(Int32) Declaration public Vector3d GetVertex(int vID) Parameters Type Name Description Int32 vID Returns Type Description Vector3d | Improve this Doc View Source GetVertex(Int32, ref NewVertexInfo, Boolean, Boolean, Boolean) Declaration public bool GetVertex(int vID, ref NewVertexInfo vinfo, bool bWantNormals, bool bWantColors, bool bWantUVs) Parameters Type Name Description Int32 vID NewVertexInfo vinfo Boolean bWantNormals Boolean bWantColors Boolean bWantUVs Returns Type Description Boolean | Improve this Doc View Source GetVertexAll(Int32) Declaration public NewVertexInfo GetVertexAll(int i) Parameters Type Name Description Int32 i Returns Type Description NewVertexInfo | Improve this Doc View Source GetVertexColor(Int32) Declaration public Vector3f GetVertexColor(int vID) Parameters Type Name Description Int32 vID Returns Type Description Vector3f | Improve this Doc View Source GetVertexf(Int32) Declaration public Vector3f GetVertexf(int vID) Parameters Type Name Description Int32 vID Returns Type Description Vector3f | Improve this Doc View Source GetVertexNormal(Int32) Declaration public Vector3f GetVertexNormal(int vID) Parameters Type Name Description Int32 vID Returns Type Description Vector3f | Improve this Doc View Source GetVertexUV(Int32) Declaration public Vector2f GetVertexUV(int i) Parameters Type Name Description Int32 i Returns Type Description Vector2f | Improve this Doc View Source GetVtxEdgeCount(Int32) Declaration public int GetVtxEdgeCount(int vID) Parameters Type Name Description Int32 vID Returns Type Description Int32 | Improve this Doc View Source GetVtxTriangleCount(Int32, Boolean) return # of triangles attached to vID, or -1 if invalid vertex Declaration public int GetVtxTriangleCount(int vID, bool bBruteForce = false) Parameters Type Name Description Int32 vID Boolean bBruteForce Returns Type Description Int32 | Improve this Doc View Source GetVtxTriangles(Int32, List<Int32>) Declaration public MeshResult GetVtxTriangles(int vID, List<int> vTriangles) Parameters Type Name Description Int32 vID List < Int32 > vTriangles Returns Type Description MeshResult | Improve this Doc View Source IsBoundaryEdge(Int32) Declaration public bool IsBoundaryEdge(int eid) Parameters Type Name Description Int32 eid Returns Type Description Boolean | Improve this Doc View Source IsBoundaryTriangle(Int32) Declaration public bool IsBoundaryTriangle(int tID) Parameters Type Name Description Int32 tID Returns Type Description Boolean | Improve this Doc View Source IsBoundaryVertex(Int32) Declaration public bool IsBoundaryVertex(int vID) Parameters Type Name Description Int32 vID Returns Type Description Boolean | Improve this Doc View Source IsBowtieVertex(Int32) returns true if vID is a \"bowtie\" vertex, ie multiple disjoint triangle sets in one-ring Declaration public bool IsBowtieVertex(int vID) Parameters Type Name Description Int32 vID Returns Type Description Boolean | Improve this Doc View Source IsClosed() Declaration public bool IsClosed() Returns Type Description Boolean | Improve this Doc View Source IsEdge(Int32) Declaration public bool IsEdge(int eID) Parameters Type Name Description Int32 eID Returns Type Description Boolean | Improve this Doc View Source IsNonManifoldEdge(Int32) Declaration public bool IsNonManifoldEdge(int eid) Parameters Type Name Description Int32 eid Returns Type Description Boolean | Improve this Doc View Source IsTriangle(Int32) Declaration public bool IsTriangle(int tID) Parameters Type Name Description Int32 tID Returns Type Description Boolean | Improve this Doc View Source IsVertex(Int32) Declaration public bool IsVertex(int vID) Parameters Type Name Description Int32 vID Returns Type Description Boolean | Improve this Doc View Source PokeTriangle(Int32, out NTMesh3.PokeTriangleInfo) Declaration public virtual MeshResult PokeTriangle(int tid, out NTMesh3.PokeTriangleInfo result) Parameters Type Name Description Int32 tid NTMesh3.PokeTriangleInfo result Returns Type Description MeshResult | Improve this Doc View Source PokeTriangle(Int32, Vector3d, out NTMesh3.PokeTriangleInfo) Declaration public virtual MeshResult PokeTriangle(int tid, Vector3d baryCoordinates, out NTMesh3.PokeTriangleInfo result) Parameters Type Name Description Int32 tid Vector3d baryCoordinates NTMesh3.PokeTriangleInfo result Returns Type Description MeshResult | Improve this Doc View Source RemoveTriangle(Int32, Boolean) Remove a tID from the mesh. Also removes any unreferenced edges after tri is removed. If bRemoveIsolatedVertices is false, then if you remove all tris from a vert, that vert is also removed. If bPreserveManifold, we check that you will not create a bowtie vertex (and return false). If this check is not done, you have to make sure you don't create a bowtie, because other code assumes we don't have bowties, and will not handle it properly Declaration public MeshResult RemoveTriangle(int tID, bool bRemoveIsolatedVertices = true) Parameters Type Name Description Int32 tID Boolean bRemoveIsolatedVertices Returns Type Description MeshResult | Improve this Doc View Source SetTriangleGroup(Int32, Int32) Declaration public void SetTriangleGroup(int tid, int group_id) Parameters Type Name Description Int32 tid Int32 group_id | Improve this Doc View Source SetVertex(Int32, Vector3d) Declaration public void SetVertex(int vID, Vector3d vNewPos) Parameters Type Name Description Int32 vID Vector3d vNewPos | Improve this Doc View Source SetVertexColor(Int32, Vector3f) Declaration public void SetVertexColor(int vID, Vector3f vNewColor) Parameters Type Name Description Int32 vID Vector3f vNewColor | Improve this Doc View Source SetVertexNormal(Int32, Vector3f) Declaration public void SetVertexNormal(int vID, Vector3f vNewNormal) Parameters Type Name Description Int32 vID Vector3f vNewNormal | Improve this Doc View Source SplitEdge(Int32, out NTMesh3.EdgeSplitInfo) Declaration public MeshResult SplitEdge(int eab, out NTMesh3.EdgeSplitInfo split) Parameters Type Name Description Int32 eab NTMesh3.EdgeSplitInfo split Returns Type Description MeshResult | Improve this Doc View Source SplitEdge(Int32, Int32, out NTMesh3.EdgeSplitInfo) Declaration public MeshResult SplitEdge(int vA, int vB, out NTMesh3.EdgeSplitInfo split) Parameters Type Name Description Int32 vA Int32 vB NTMesh3.EdgeSplitInfo split Returns Type Description MeshResult | Improve this Doc View Source tri_has_neighbour_t(Int32, Int32) Declaration protected bool tri_has_neighbour_t(int tCheck, int tNbr) Parameters Type Name Description Int32 tCheck Int32 tNbr Returns Type Description Boolean | Improve this Doc View Source tri_has_sequential_v(Int32, Int32, Int32) Declaration protected bool tri_has_sequential_v(int tID, int vA, int vB) Parameters Type Name Description Int32 tID Int32 vA Int32 vB Returns Type Description Boolean | Improve this Doc View Source tri_has_v(Int32, Int32) Declaration protected bool tri_has_v(int tID, int vID) Parameters Type Name Description Int32 tID Int32 vID Returns Type Description Boolean | Improve this Doc View Source tri_is_boundary(Int32) Declaration protected bool tri_is_boundary(int tID) Parameters Type Name Description Int32 tID Returns Type Description Boolean | Improve this Doc View Source TriangleIndices() Declaration public IEnumerable<int> TriangleIndices() Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source Triangles() Declaration public IEnumerable<Index3i> Triangles() Returns Type Description IEnumerable < Index3i > | Improve this Doc View Source TriTrianglesItr(Int32) Declaration public IEnumerable<int> TriTrianglesItr(int tID) Parameters Type Name Description Int32 tID Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source vertex_is_boundary(Int32) Declaration public bool vertex_is_boundary(int vID) Parameters Type Name Description Int32 vID Returns Type Description Boolean | Improve this Doc View Source VertexIndices() Declaration public IEnumerable<int> VertexIndices() Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source Vertices() Declaration public IEnumerable<Vector3d> Vertices() Returns Type Description IEnumerable < Vector3d > | Improve this Doc View Source VtxAllBoundaryEdges(Int32, Int32[]) e needs to be large enough (ie call VtxBoundaryEdges, or as large as max one-ring) returns count, ie number of elements of e that were filled Declaration public int VtxAllBoundaryEdges(int vID, int[] e) Parameters Type Name Description Int32 vID Int32 [] e Returns Type Description Int32 | Improve this Doc View Source VtxBoundaryEdges(Int32) Returns count of boundary edges at vertex Declaration public int VtxBoundaryEdges(int vID) Parameters Type Name Description Int32 vID Returns Type Description Int32 | Improve this Doc View Source VtxEdgesItr(Int32) Declaration public IEnumerable<int> VtxEdgesItr(int vID) Parameters Type Name Description Int32 vID Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source VtxTrianglesItr(Int32) Declaration public IEnumerable<int> VtxTrianglesItr(int vID) Parameters Type Name Description Int32 vID Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source VtxVerticesItr(Int32) Declaration public IEnumerable<int> VtxVerticesItr(int vID) Parameters Type Name Description Int32 vID Returns Type Description IEnumerable < Int32 > Implements IDeformableMesh IMesh IPointSet"
  },
  "api/g3.NTMesh3.PokeTriangleInfo.html": {
    "href": "api/g3.NTMesh3.PokeTriangleInfo.html",
    "title": "Struct NTMesh3.PokeTriangleInfo | ViRGIS VR GIS",
    "keywords": "Struct NTMesh3.PokeTriangleInfo Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct PokeTriangleInfo Fields | Improve this Doc View Source new_edges Declaration public Index3i new_edges Field Value Type Description Index3i | Improve this Doc View Source new_t1 Declaration public int new_t1 Field Value Type Description Int32 | Improve this Doc View Source new_t2 Declaration public int new_t2 Field Value Type Description Int32 | Improve this Doc View Source new_vid Declaration public int new_vid Field Value Type Description Int32"
  },
  "api/g3.NURBSCurve2.CurveDerivatives.html": {
    "href": "api/g3.NURBSCurve2.CurveDerivatives.html",
    "title": "Struct NURBSCurve2.CurveDerivatives | ViRGIS VR GIS",
    "keywords": "Struct NURBSCurve2.CurveDerivatives Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct CurveDerivatives Fields | Improve this Doc View Source bDer1 Declaration public bool bDer1 Field Value Type Description Boolean | Improve this Doc View Source bDer2 Declaration public bool bDer2 Field Value Type Description Boolean | Improve this Doc View Source bDer3 Declaration public bool bDer3 Field Value Type Description Boolean | Improve this Doc View Source bPosition Declaration public bool bPosition Field Value Type Description Boolean | Improve this Doc View Source d1 Declaration public Vector2d d1 Field Value Type Description Vector2d | Improve this Doc View Source d2 Declaration public Vector2d d2 Field Value Type Description Vector2d | Improve this Doc View Source d3 Declaration public Vector2d d3 Field Value Type Description Vector2d | Improve this Doc View Source p Declaration public Vector2d p Field Value Type Description Vector2d Methods | Improve this Doc View Source init() Declaration public void init() | Improve this Doc View Source init(Boolean, Boolean, Boolean, Boolean) Declaration public void init(bool pos, bool der1, bool der2, bool der3) Parameters Type Name Description Boolean pos Boolean der1 Boolean der2 Boolean der3"
  },
  "api/g3.NURBSCurve2.html": {
    "href": "api/g3.NURBSCurve2.html",
    "title": "Class NURBSCurve2 | ViRGIS VR GIS",
    "keywords": "Class NURBSCurve2 Inheritance Object BaseCurve2 NURBSCurve2 Implements IParametricCurve2d Inherited Members BaseCurve2.mTMin BaseCurve2.mTMax BaseCurve2.GetMinTime() BaseCurve2.GetMaxTime() BaseCurve2.SetTimeInterval(Double, Double) BaseCurve2.GetSpeed(Double) BaseCurve2.GetLength(Double, Double) BaseCurve2.GetTotalLength() BaseCurve2.GetTangent(Double) BaseCurve2.GetNormal(Double) BaseCurve2.GetFrame(Double, Vector2d, Vector2d, Vector2d) BaseCurve2.GetCurvature(Double) BaseCurve2.GetTime(Double, Int32, Double) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class NURBSCurve2 : BaseCurve2, IParametricCurve2d Constructors | Improve this Doc View Source NURBSCurve2() Declaration protected NURBSCurve2() | Improve this Doc View Source NURBSCurve2(Int32, Vector2d[], Double[], Int32, Boolean, Boolean) Declaration public NURBSCurve2(int numCtrlPoints, Vector2d[] ctrlPoint, double[] ctrlWeight, int degree, bool loop, bool open) Parameters Type Name Description Int32 numCtrlPoints Vector2d [] ctrlPoint Double [] ctrlWeight Int32 degree Boolean loop Boolean open | Improve this Doc View Source NURBSCurve2(Int32, Vector2d[], Double[], Int32, Boolean, Double[], Boolean) Declaration public NURBSCurve2(int numCtrlPoints, Vector2d[] ctrlPoint, double[] ctrlWeight, int degree, bool loop, double[] knot, bool bIsInteriorKnot = true) Parameters Type Name Description Int32 numCtrlPoints Vector2d [] ctrlPoint Double [] ctrlWeight Int32 degree Boolean loop Double [] knot Boolean bIsInteriorKnot Fields | Improve this Doc View Source is_closed Declaration protected bool is_closed Field Value Type Description Boolean | Improve this Doc View Source mBasis Declaration protected BSplineBasis mBasis Field Value Type Description BSplineBasis | Improve this Doc View Source mCtrlPoint Declaration protected Vector2d[] mCtrlPoint Field Value Type Description Vector2d [] | Improve this Doc View Source mCtrlWeight Declaration protected double[] mCtrlWeight Field Value Type Description Double [] | Improve this Doc View Source mLoop Declaration protected bool mLoop Field Value Type Description Boolean | Improve this Doc View Source mNumCtrlPoints Declaration protected int mNumCtrlPoints Field Value Type Description Int32 | Improve this Doc View Source mReplicate Declaration protected int mReplicate Field Value Type Description Int32 Properties | Improve this Doc View Source ArcLength Declaration public double ArcLength { get; } Property Value Type Description Double | Improve this Doc View Source HasArcLength Declaration public bool HasArcLength { get; } Property Value Type Description Boolean | Improve this Doc View Source IsClosed Declaration public bool IsClosed { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsTransformable Declaration public bool IsTransformable { get; } Property Value Type Description Boolean | Improve this Doc View Source ParamLength Declaration public double ParamLength { get; } Property Value Type Description Double Methods | Improve this Doc View Source Clone() Declaration public IParametricCurve2d Clone() Returns Type Description IParametricCurve2d | Improve this Doc View Source CreateControl(Vector2d[], Double[]) Declaration protected void CreateControl(Vector2d[] ctrlPoint, double[] ctrlWeight) Parameters Type Name Description Vector2d [] ctrlPoint Double [] ctrlWeight | Improve this Doc View Source Get(Double, ref NURBSCurve2.CurveDerivatives) Declaration public void Get(double t, ref NURBSCurve2.CurveDerivatives result) Parameters Type Name Description Double t NURBSCurve2.CurveDerivatives result | Improve this Doc View Source GetBasis() Declaration public BSplineBasis GetBasis() Returns Type Description BSplineBasis | Improve this Doc View Source GetContinuousParamIntervals() Declaration public List<double> GetContinuousParamIntervals() Returns Type Description List < Double > | Improve this Doc View Source GetControlPoint(Int32) Declaration public Vector2d GetControlPoint(int i) Parameters Type Name Description Int32 i Returns Type Description Vector2d | Improve this Doc View Source GetControlWeight(Int32) Declaration public double GetControlWeight(int i) Parameters Type Name Description Int32 i Returns Type Description Double | Improve this Doc View Source GetDegree() Declaration public int GetDegree() Returns Type Description Int32 | Improve this Doc View Source GetFirstDerivative(Double) Declaration public override Vector2d GetFirstDerivative(double t) Parameters Type Name Description Double t Returns Type Description Vector2d Overrides BaseCurve2.GetFirstDerivative(Double) | Improve this Doc View Source GetKnot(Int32) Declaration public double GetKnot(int i) Parameters Type Name Description Int32 i Returns Type Description Double | Improve this Doc View Source GetNumCtrlPoints() Declaration public int GetNumCtrlPoints() Returns Type Description Int32 | Improve this Doc View Source GetParamIntervals() Declaration public List<double> GetParamIntervals() Returns Type Description List < Double > | Improve this Doc View Source GetPosition(Double) Declaration public override Vector2d GetPosition(double t) Parameters Type Name Description Double t Returns Type Description Vector2d Overrides BaseCurve2.GetPosition(Double) | Improve this Doc View Source GetSecondDerivative(Double) Declaration public override Vector2d GetSecondDerivative(double t) Parameters Type Name Description Double t Returns Type Description Vector2d Overrides BaseCurve2.GetSecondDerivative(Double) | Improve this Doc View Source GetThirdDerivative(Double) Declaration public override Vector2d GetThirdDerivative(double t) Parameters Type Name Description Double t Returns Type Description Vector2d Overrides BaseCurve2.GetThirdDerivative(Double) | Improve this Doc View Source IsUniform() Declaration public bool IsUniform() Returns Type Description Boolean | Improve this Doc View Source Reverse() Declaration public void Reverse() | Improve this Doc View Source SampleArcLength(Double) Declaration public Vector2d SampleArcLength(double a) Parameters Type Name Description Double a Returns Type Description Vector2d | Improve this Doc View Source SampleT(Double) Declaration public Vector2d SampleT(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source SetControlPoint(Int32, Vector2d) Declaration public void SetControlPoint(int i, Vector2d ctrl) Parameters Type Name Description Int32 i Vector2d ctrl | Improve this Doc View Source SetControlWeight(Int32, Double) Declaration public void SetControlWeight(int i, double weight) Parameters Type Name Description Int32 i Double weight | Improve this Doc View Source SetKnot(Int32, Double) Declaration public void SetKnot(int i, double value) Parameters Type Name Description Int32 i Double value | Improve this Doc View Source TangentT(Double) Declaration public Vector2d TangentT(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source Transform(ITransform2) Declaration public void Transform(ITransform2 xform) Parameters Type Name Description ITransform2 xform Implements IParametricCurve2d"
  },
  "api/g3.OBJFormatReader.html": {
    "href": "api/g3.OBJFormatReader.html",
    "title": "Class OBJFormatReader | ViRGIS VR GIS",
    "keywords": "Class OBJFormatReader Inheritance Object OBJFormatReader Implements MeshFormatReader Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class OBJFormatReader : MeshFormatReader Properties | Improve this Doc View Source SupportedExtensions Declaration public List<string> SupportedExtensions { get; } Property Value Type Description List < String > Methods | Improve this Doc View Source ReadFile(Stream, IMeshBuilder, ReadOptions, ParsingMessagesHandler) Declaration public IOReadResult ReadFile(Stream stream, IMeshBuilder builder, ReadOptions options, ParsingMessagesHandler messages) Parameters Type Name Description Stream stream IMeshBuilder builder ReadOptions options ParsingMessagesHandler messages Returns Type Description IOReadResult | Improve this Doc View Source ReadFile(String, IMeshBuilder, ReadOptions, ParsingMessagesHandler) Declaration public IOReadResult ReadFile(string sFilename, IMeshBuilder builder, ReadOptions options, ParsingMessagesHandler messages) Parameters Type Name Description String sFilename IMeshBuilder builder ReadOptions options ParsingMessagesHandler messages Returns Type Description IOReadResult Implements MeshFormatReader"
  },
  "api/g3.OBJMaterial.html": {
    "href": "api/g3.OBJMaterial.html",
    "title": "Class OBJMaterial | ViRGIS VR GIS",
    "keywords": "Class OBJMaterial Inheritance Object GenericMaterial OBJMaterial Inherited Members GenericMaterial.Invalidf GenericMaterial.Invalid GenericMaterial.name GenericMaterial.id GenericMaterial.Type Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class OBJMaterial : GenericMaterial Constructors | Improve this Doc View Source OBJMaterial() Declaration public OBJMaterial() Fields | Improve this Doc View Source bump Declaration public string bump Field Value Type Description String | Improve this Doc View Source d Declaration public float d Field Value Type Description Single | Improve this Doc View Source decal Declaration public string decal Field Value Type Description String | Improve this Doc View Source disp Declaration public string disp Field Value Type Description String | Improve this Doc View Source illum Declaration public int illum Field Value Type Description Int32 | Improve this Doc View Source Ka Declaration public Vector3f Ka Field Value Type Description Vector3f | Improve this Doc View Source Kd Declaration public Vector3f Kd Field Value Type Description Vector3f | Improve this Doc View Source Ke Declaration public Vector3f Ke Field Value Type Description Vector3f | Improve this Doc View Source Ks Declaration public Vector3f Ks Field Value Type Description Vector3f | Improve this Doc View Source map_d Declaration public string map_d Field Value Type Description String | Improve this Doc View Source map_Ka Declaration public string map_Ka Field Value Type Description String | Improve this Doc View Source map_Kd Declaration public string map_Kd Field Value Type Description String | Improve this Doc View Source map_Ke Declaration public string map_Ke Field Value Type Description String | Improve this Doc View Source map_Ks Declaration public string map_Ks Field Value Type Description String | Improve this Doc View Source map_Ns Declaration public string map_Ns Field Value Type Description String | Improve this Doc View Source Ni Declaration public float Ni Field Value Type Description Single | Improve this Doc View Source Ns Declaration public float Ns Field Value Type Description Single | Improve this Doc View Source refl Declaration public string refl Field Value Type Description String | Improve this Doc View Source sharpness Declaration public float sharpness Field Value Type Description Single | Improve this Doc View Source Tf Declaration public Vector3f Tf Field Value Type Description Vector3f Properties | Improve this Doc View Source Alpha Declaration public override float Alpha { get; set; } Property Value Type Description Single Overrides GenericMaterial.Alpha | Improve this Doc View Source DiffuseColor Declaration public override Vector3f DiffuseColor { get; set; } Property Value Type Description Vector3f Overrides GenericMaterial.DiffuseColor"
  },
  "api/g3.OBJReader.html": {
    "href": "api/g3.OBJReader.html",
    "title": "Class OBJReader | ViRGIS VR GIS",
    "keywords": "Class OBJReader Inheritance Object OBJReader Implements IMeshReader Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class OBJReader : IMeshReader Constructors | Improve this Doc View Source OBJReader() Declaration public OBJReader() Properties | Improve this Doc View Source HasComplexVertices Declaration public bool HasComplexVertices { get; set; } Property Value Type Description Boolean | Improve this Doc View Source HasPerVertexColors Declaration public bool HasPerVertexColors { get; } Property Value Type Description Boolean | Improve this Doc View Source HasTriangleGroups Declaration public bool HasTriangleGroups { get; } Property Value Type Description Boolean | Improve this Doc View Source MTLFileSearchPaths Declaration public List<string> MTLFileSearchPaths { get; set; } Property Value Type Description List < String > | Improve this Doc View Source UVDimension Declaration public int UVDimension { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source ParseInput(TextReader, ReadOptions) Declaration public IOReadResult ParseInput(TextReader reader, ReadOptions options) Parameters Type Name Description TextReader reader ReadOptions options Returns Type Description IOReadResult | Improve this Doc View Source Read(BinaryReader, ReadOptions, IMeshBuilder) Declaration public IOReadResult Read(BinaryReader reader, ReadOptions options, IMeshBuilder builder) Parameters Type Name Description BinaryReader reader ReadOptions options IMeshBuilder builder Returns Type Description IOReadResult | Improve this Doc View Source Read(TextReader, ReadOptions, IMeshBuilder) Declaration public IOReadResult Read(TextReader reader, ReadOptions options, IMeshBuilder builder) Parameters Type Name Description TextReader reader ReadOptions options IMeshBuilder builder Returns Type Description IOReadResult | Improve this Doc View Source ReadMaterials(String) Declaration public IOReadResult ReadMaterials(string sPath) Parameters Type Name Description String sPath Returns Type Description IOReadResult Events | Improve this Doc View Source warningEvent Declaration public event ParsingMessagesHandler warningEvent Event Type Type Description ParsingMessagesHandler Implements IMeshReader"
  },
  "api/g3.OBJWriter.html": {
    "href": "api/g3.OBJWriter.html",
    "title": "Class OBJWriter | ViRGIS VR GIS",
    "keywords": "Class OBJWriter gradientspace OBJ writer [TODO] if mesh has groups, usemtl lines will not be written (see TODO below) [TODO] options to preserve vertex and triangle indices Inheritance Object OBJWriter Implements IMeshWriter Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class OBJWriter : IMeshWriter Fields | Improve this Doc View Source CloseStreamF Declaration public Action<Stream> CloseStreamF Field Value Type Description Action < Stream > | Improve this Doc View Source GroupNameF Declaration public Func<int, string> GroupNameF Field Value Type Description Func < Int32 , String > | Improve this Doc View Source GroupNamePrefix Declaration public string GroupNamePrefix Field Value Type Description String | Improve this Doc View Source OpenStreamF Declaration public Func<string, Stream> OpenStreamF Field Value Type Description Func < String , Stream > Methods | Improve this Doc View Source set_current_material(TextWriter, Int32, WriteMesh, ref Int32) Declaration public void set_current_material(TextWriter writer, int ti, WriteMesh mesh, ref int cur_material) Parameters Type Name Description TextWriter writer Int32 ti WriteMesh mesh Int32 cur_material | Improve this Doc View Source Write(BinaryWriter, List<WriteMesh>, WriteOptions) Declaration public IOWriteResult Write(BinaryWriter writer, List<WriteMesh> vMeshes, WriteOptions options) Parameters Type Name Description BinaryWriter writer List < WriteMesh > vMeshes WriteOptions options Returns Type Description IOWriteResult | Improve this Doc View Source Write(TextWriter, List<WriteMesh>, WriteOptions) Declaration public IOWriteResult Write(TextWriter writer, List<WriteMesh> vMeshes, WriteOptions options) Parameters Type Name Description TextWriter writer List < WriteMesh > vMeshes WriteOptions options Returns Type Description IOWriteResult Implements IMeshWriter"
  },
  "api/g3.OFFFormatReader.html": {
    "href": "api/g3.OFFFormatReader.html",
    "title": "Class OFFFormatReader | ViRGIS VR GIS",
    "keywords": "Class OFFFormatReader Inheritance Object OFFFormatReader Implements MeshFormatReader Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class OFFFormatReader : MeshFormatReader Properties | Improve this Doc View Source SupportedExtensions Declaration public List<string> SupportedExtensions { get; } Property Value Type Description List < String > Methods | Improve this Doc View Source ReadFile(Stream, IMeshBuilder, ReadOptions, ParsingMessagesHandler) Declaration public IOReadResult ReadFile(Stream stream, IMeshBuilder builder, ReadOptions options, ParsingMessagesHandler messages) Parameters Type Name Description Stream stream IMeshBuilder builder ReadOptions options ParsingMessagesHandler messages Returns Type Description IOReadResult | Improve this Doc View Source ReadFile(String, IMeshBuilder, ReadOptions, ParsingMessagesHandler) Declaration public IOReadResult ReadFile(string sFilename, IMeshBuilder builder, ReadOptions options, ParsingMessagesHandler messages) Parameters Type Name Description String sFilename IMeshBuilder builder ReadOptions options ParsingMessagesHandler messages Returns Type Description IOReadResult Implements MeshFormatReader"
  },
  "api/g3.OFFWriter.html": {
    "href": "api/g3.OFFWriter.html",
    "title": "Class OFFWriter | ViRGIS VR GIS",
    "keywords": "Class OFFWriter Inheritance Object OFFWriter Implements IMeshWriter Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class OFFWriter : IMeshWriter Methods | Improve this Doc View Source Write(BinaryWriter, List<WriteMesh>, WriteOptions) Declaration public IOWriteResult Write(BinaryWriter writer, List<WriteMesh> vMeshes, WriteOptions options) Parameters Type Name Description BinaryWriter writer List < WriteMesh > vMeshes WriteOptions options Returns Type Description IOWriteResult | Improve this Doc View Source Write(TextWriter, List<WriteMesh>, WriteOptions) Declaration public IOWriteResult Write(TextWriter writer, List<WriteMesh> vMeshes, WriteOptions options) Parameters Type Name Description TextWriter writer List < WriteMesh > vMeshes WriteOptions options Returns Type Description IOWriteResult Implements IMeshWriter"
  },
  "api/g3.OpenCylinderGenerator.html": {
    "href": "api/g3.OpenCylinderGenerator.html",
    "title": "Class OpenCylinderGenerator | ViRGIS VR GIS",
    "keywords": "Class OpenCylinderGenerator Inheritance Object MeshGenerator OpenCylinderGenerator Inherited Members MeshGenerator.vertices MeshGenerator.uv MeshGenerator.normals MeshGenerator.triangles MeshGenerator.groups MeshGenerator.WantUVs MeshGenerator.WantNormals MeshGenerator.WantGroups MeshGenerator.Clockwise MeshGenerator.MakeMesh(SimpleMesh) MeshGenerator.MakeSimpleMesh() MeshGenerator.MakeMesh(DMesh3) MeshGenerator.MakeDMesh() MeshGenerator.MakeMesh(NTMesh3) MeshGenerator.MakeNTMesh() MeshGenerator.duplicate_vertex_span(Int32, Int32) MeshGenerator.append_disc(Int32, Int32, Int32, Boolean, Boolean, Int32, Int32) MeshGenerator.append_rectangle(Int32, Int32, Int32, Int32, Boolean, Int32, Int32) MeshGenerator.append_2d_disc_segment(Int32, Int32, Int32, Int32, Boolean, Int32, Int32, Int32, Double) MeshGenerator.estimate_normal(Int32, Int32, Int32) MeshGenerator.bilerp(Vector3d, Vector3d, Vector3d, Vector3d, Double, Double) MeshGenerator.bilerp(Vector2d, Vector2d, Vector2d, Vector2d, Double, Double) MeshGenerator.bilerp(Vector2f, Vector2f, Vector2f, Vector2f, Single, Single) MeshGenerator.bilerp(Vector3i, Vector3i, Vector3i, Vector3i, Double, Double) MeshGenerator.lerp(Vector3i, Vector3i, Double) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class OpenCylinderGenerator : MeshGenerator Fields | Improve this Doc View Source BaseRadius Declaration public float BaseRadius Field Value Type Description Single | Improve this Doc View Source EndAngleDeg Declaration public float EndAngleDeg Field Value Type Description Single | Improve this Doc View Source Height Declaration public float Height Field Value Type Description Single | Improve this Doc View Source NoSharedVertices Declaration public bool NoSharedVertices Field Value Type Description Boolean | Improve this Doc View Source Slices Declaration public int Slices Field Value Type Description Int32 | Improve this Doc View Source StartAngleDeg Declaration public float StartAngleDeg Field Value Type Description Single | Improve this Doc View Source TopRadius Declaration public float TopRadius Field Value Type Description Single Methods | Improve this Doc View Source Generate() Declaration public override MeshGenerator Generate() Returns Type Description MeshGenerator Overrides MeshGenerator.Generate()"
  },
  "api/g3.OrthogonalPlaneFit3.html": {
    "href": "api/g3.OrthogonalPlaneFit3.html",
    "title": "Class OrthogonalPlaneFit3 | ViRGIS VR GIS",
    "keywords": "Class OrthogonalPlaneFit3 Inheritance Object OrthogonalPlaneFit3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class OrthogonalPlaneFit3 Constructors | Improve this Doc View Source OrthogonalPlaneFit3(IEnumerable<Vector3d>) Declaration public OrthogonalPlaneFit3(IEnumerable<Vector3d> points) Parameters Type Name Description IEnumerable < Vector3d > points Fields | Improve this Doc View Source Normal Declaration public Vector3d Normal Field Value Type Description Vector3d | Improve this Doc View Source Origin Declaration public Vector3d Origin Field Value Type Description Vector3d | Improve this Doc View Source ResultValid Declaration public bool ResultValid Field Value Type Description Boolean"
  },
  "api/g3.PackedSparseMatrix.html": {
    "href": "api/g3.PackedSparseMatrix.html",
    "title": "Class PackedSparseMatrix | ViRGIS VR GIS",
    "keywords": "Class PackedSparseMatrix This is a sparse matrix where each row is an array of (column,value) pairs This is more efficient for Matrix*Vector multiply. Inheritance Object PackedSparseMatrix Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class PackedSparseMatrix Constructors | Improve this Doc View Source PackedSparseMatrix(DVector<matrix_entry>, Int32, Int32, Boolean) Declaration public PackedSparseMatrix(DVector<matrix_entry> entries, int numRows, int numCols, bool bSymmetric = true) Parameters Type Name Description DVector < matrix_entry > entries Int32 numRows Int32 numCols Boolean bSymmetric | Improve this Doc View Source PackedSparseMatrix(PackedSparseMatrix) Declaration public PackedSparseMatrix(PackedSparseMatrix copy) Parameters Type Name Description PackedSparseMatrix copy | Improve this Doc View Source PackedSparseMatrix(SymmetricSparseMatrix, Boolean) Declaration public PackedSparseMatrix(SymmetricSparseMatrix m, bool bTranspose = false) Parameters Type Name Description SymmetricSparseMatrix m Boolean bTranspose Fields | Improve this Doc View Source Columns Declaration public int Columns Field Value Type Description Int32 | Improve this Doc View Source IsSymmetric Declaration public bool IsSymmetric Field Value Type Description Boolean | Improve this Doc View Source NumNonZeros Declaration public int NumNonZeros Field Value Type Description Int32 | Improve this Doc View Source Rows Declaration public PackedSparseMatrix.nonzero[][] Rows Field Value Type Description PackedSparseMatrix.nonzero [][] | Improve this Doc View Source Sorted Declaration public bool Sorted Field Value Type Description Boolean | Improve this Doc View Source StorageMode Declaration public PackedSparseMatrix.StorageModes StorageMode Field Value Type Description PackedSparseMatrix.StorageModes Properties | Improve this Doc View Source FrobeniusNorm Declaration public double FrobeniusNorm { get; } Property Value Type Description Double | Improve this Doc View Source Item[Int32, Int32] Declaration public double this[int r, int c] { get; set; } Parameters Type Name Description Int32 r Int32 c Property Value Type Description Double | Improve this Doc View Source MaxNorm Declaration public double MaxNorm { get; } Property Value Type Description Double | Improve this Doc View Source Trace Declaration public double Trace { get; } Property Value Type Description Double Methods | Improve this Doc View Source DotColumnVector(Int32, Double[], Int32, Int32) Compute dot product of this.row[r1] and this.row[r2], up to N elements Declaration public double DotColumnVector(int c, double[] vec, int start_row = 0, int end_row = 2147483647) Parameters Type Name Description Int32 c Double [] vec Int32 start_row Int32 end_row Returns Type Description Double | Improve this Doc View Source DotRowAllColumns(Int32, Double[], Int32[], PackedSparseMatrix) Compute dot product of this.row[r] with all columns of M, where columns are stored in MTranspose rows. In theory more efficient than doing DotRowColumn(r,c) for each c, however so far the difference is negligible...perhaps because there are quite a few more branches in the inner loop Declaration public void DotRowAllColumns(int r, double[] sums, int[] col_indices, PackedSparseMatrix MTranspose) Parameters Type Name Description Int32 r Double [] sums Int32 [] col_indices PackedSparseMatrix MTranspose | Improve this Doc View Source DotRowColumn(Int32, Int32, PackedSparseMatrix) Compute dot product of this.row[r] and M.col[c], where the column is stored as MTranspose.row[c] Declaration public double DotRowColumn(int r, int c, PackedSparseMatrix MTranspose) Parameters Type Name Description Int32 r Int32 c PackedSparseMatrix MTranspose Returns Type Description Double | Improve this Doc View Source DotRows(Int32, Int32, Int32) Compute dot product of this.row[r1] and this.row[r2], up to N elements Declaration public double DotRows(int r1, int r2, int MaxCol = 2147483647) Parameters Type Name Description Int32 r1 Int32 r2 Int32 MaxCol Returns Type Description Double | Improve this Doc View Source DotRowSelf(Int32) Dot product of this.row[r] with itself Declaration public double DotRowSelf(int r) Parameters Type Name Description Int32 r Returns Type Description Double | Improve this Doc View Source DotRowVector(Int32, Double[], Int32) Compute dot product of this.row[r] and vec, up to N elements Declaration public double DotRowVector(int r, double[] vec, int MaxCol = 2147483647) Parameters Type Name Description Int32 r Double [] vec Int32 MaxCol Returns Type Description Double | Improve this Doc View Source FromDense(DenseMatrix, Boolean) Declaration public static PackedSparseMatrix FromDense(DenseMatrix m, bool bSymmetric) Parameters Type Name Description DenseMatrix m Boolean bSymmetric Returns Type Description PackedSparseMatrix | Improve this Doc View Source MatrixInfo(Boolean) Declaration public string MatrixInfo(bool bExtended = false) Parameters Type Name Description Boolean bExtended Returns Type Description String | Improve this Doc View Source Multiply(Double[], Double[]) Declaration public void Multiply(double[] X, double[] Result) Parameters Type Name Description Double [] X Double [] Result | Improve this Doc View Source Multiply_Parallel(Double[], Double[]) Declaration public void Multiply_Parallel(double[] X, double[] Result) Parameters Type Name Description Double [] X Double [] Result | Improve this Doc View Source Multiply_Parallel_3(Double[][], Double[][]) Hardcoded variant for 3 RHS vectors, much faster Declaration public void Multiply_Parallel_3(double[][] X, double[][] Result) Parameters Type Name Description Double [][] X Double [][] Result | Improve this Doc View Source NonZeroIndicesByRow(Boolean) Declaration public IEnumerable<Vector2i> NonZeroIndicesByRow(bool bWantSorted = true) Parameters Type Name Description Boolean bWantSorted Returns Type Description IEnumerable < Vector2i > | Improve this Doc View Source NonZeroIndicesForRow(Int32, Boolean) Declaration public IEnumerable<Vector2i> NonZeroIndicesForRow(int r, bool bWantSorted = true) Parameters Type Name Description Int32 r Boolean bWantSorted Returns Type Description IEnumerable < Vector2i > | Improve this Doc View Source NonZerosRange(Int32) For row r, find interval that nonzeros lie in Declaration public Interval1i NonZerosRange(int r) Parameters Type Name Description Int32 r Returns Type Description Interval1i | Improve this Doc View Source Sort(Boolean) sort each row Declaration public void Sort(bool bParallel = true) Parameters Type Name Description Boolean bParallel | Improve this Doc View Source Square() Declaration public PackedSparseMatrix Square() Returns Type Description PackedSparseMatrix"
  },
  "api/g3.PackedSparseMatrix.nonzero.html": {
    "href": "api/g3.PackedSparseMatrix.nonzero.html",
    "title": "Struct PackedSparseMatrix.nonzero | ViRGIS VR GIS",
    "keywords": "Struct PackedSparseMatrix.nonzero Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct nonzero Fields | Improve this Doc View Source d Declaration public double d Field Value Type Description Double | Improve this Doc View Source j Declaration public int j Field Value Type Description Int32"
  },
  "api/g3.PackedSparseMatrix.StorageModes.html": {
    "href": "api/g3.PackedSparseMatrix.StorageModes.html",
    "title": "Enum PackedSparseMatrix.StorageModes | ViRGIS VR GIS",
    "keywords": "Enum PackedSparseMatrix.StorageModes Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum StorageModes Fields Name Description Full"
  },
  "api/g3.ParallelStream-2.html": {
    "href": "api/g3.ParallelStream-2.html",
    "title": "Class ParallelStream<V, T> | ViRGIS VR GIS",
    "keywords": "Class ParallelStream<V, T> Inheritance Object ParallelStream<V, T> Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ParallelStream<V, T> Type Parameters Name Description V T Fields | Improve this Doc View Source ConsumerF Declaration public Action<T> ConsumerF Field Value Type Description Action <T> | Improve this Doc View Source ProducerF Declaration public Func<V, T> ProducerF Field Value Type Description Func <V, T> Methods | Improve this Doc View Source Run(IEnumerable<V>) Declaration public void Run(IEnumerable<V> sourceIn) Parameters Type Name Description IEnumerable <V> sourceIn | Improve this Doc View Source Run_NoThreads(IEnumerable<V>) Declaration public void Run_NoThreads(IEnumerable<V> sourceIn) Parameters Type Name Description IEnumerable <V> sourceIn"
  },
  "api/g3.ParametricCurveSequence2.html": {
    "href": "api/g3.ParametricCurveSequence2.html",
    "title": "Class ParametricCurveSequence2 | ViRGIS VR GIS",
    "keywords": "Class ParametricCurveSequence2 Inheritance Object ParametricCurveSequence2 Implements IParametricCurve2d IMultiCurve2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ParametricCurveSequence2 : IParametricCurve2d, IMultiCurve2d Constructors | Improve this Doc View Source ParametricCurveSequence2() Declaration public ParametricCurveSequence2() | Improve this Doc View Source ParametricCurveSequence2(IEnumerable<IParametricCurve2d>, Boolean) Declaration public ParametricCurveSequence2(IEnumerable<IParametricCurve2d> curvesIn, bool isClosed = false) Parameters Type Name Description IEnumerable < IParametricCurve2d > curvesIn Boolean isClosed Properties | Improve this Doc View Source ArcLength Declaration public double ArcLength { get; } Property Value Type Description Double | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source Curves Declaration public ReadOnlyCollection<IParametricCurve2d> Curves { get; } Property Value Type Description ReadOnlyCollection < IParametricCurve2d > | Improve this Doc View Source HasArcLength Declaration public bool HasArcLength { get; } Property Value Type Description Boolean | Improve this Doc View Source IsClosed Declaration public bool IsClosed { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsTransformable Declaration public bool IsTransformable { get; } Property Value Type Description Boolean | Improve this Doc View Source ParamLength Declaration public double ParamLength { get; } Property Value Type Description Double Methods | Improve this Doc View Source Append(IParametricCurve2d) Declaration public void Append(IParametricCurve2d c) Parameters Type Name Description IParametricCurve2d c | Improve this Doc View Source Clone() Declaration public IParametricCurve2d Clone() Returns Type Description IParametricCurve2d | Improve this Doc View Source Prepend(IParametricCurve2d) Declaration public void Prepend(IParametricCurve2d c) Parameters Type Name Description IParametricCurve2d c | Improve this Doc View Source Reverse() Declaration public void Reverse() | Improve this Doc View Source SampleArcLength(Double) Declaration public Vector2d SampleArcLength(double a) Parameters Type Name Description Double a Returns Type Description Vector2d | Improve this Doc View Source SampleT(Double) Declaration public Vector2d SampleT(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source TangentT(Double) Declaration public Vector2d TangentT(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source Transform(ITransform2) Declaration public void Transform(ITransform2 xform) Parameters Type Name Description ITransform2 xform Implements IParametricCurve2d IMultiCurve2d"
  },
  "api/g3.ParsingMessagesHandler.html": {
    "href": "api/g3.ParsingMessagesHandler.html",
    "title": "Delegate ParsingMessagesHandler | ViRGIS VR GIS",
    "keywords": "Delegate ParsingMessagesHandler Namespace : g3 Assembly : geometry3Sharp.dll Syntax public delegate void ParsingMessagesHandler(string message, object extra_data); Parameters Type Name Description String message Object extra_data"
  },
  "api/g3.PlanarComplex.ClosedLoopsInfo.html": {
    "href": "api/g3.PlanarComplex.ClosedLoopsInfo.html",
    "title": "Class PlanarComplex.ClosedLoopsInfo | ViRGIS VR GIS",
    "keywords": "Class PlanarComplex.ClosedLoopsInfo Inheritance Object PlanarComplex.ClosedLoopsInfo Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ClosedLoopsInfo Fields | Improve this Doc View Source Loops Declaration public List<IParametricCurve2d> Loops Field Value Type Description List < IParametricCurve2d > | Improve this Doc View Source Polygons Declaration public List<Polygon2d> Polygons Field Value Type Description List < Polygon2d > Properties | Improve this Doc View Source Bounds Declaration public AxisAlignedBox2d Bounds { get; } Property Value Type Description AxisAlignedBox2d"
  },
  "api/g3.PlanarComplex.Element.html": {
    "href": "api/g3.PlanarComplex.Element.html",
    "title": "Class PlanarComplex.Element | ViRGIS VR GIS",
    "keywords": "Class PlanarComplex.Element Inheritance Object PlanarComplex.Element PlanarComplex.SmoothCurveElement PlanarComplex.SmoothLoopElement Namespace : g3 Assembly : geometry3Sharp.dll Syntax public abstract class Element Fields | Improve this Doc View Source ID Declaration public int ID Field Value Type Description Int32 | Improve this Doc View Source source Declaration public IParametricCurve2d source Field Value Type Description IParametricCurve2d Properties | Improve this Doc View Source Color Declaration public Colorf Color { get; set; } Property Value Type Description Colorf | Improve this Doc View Source HasSetColor Declaration public bool HasSetColor { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Bounds() Declaration public abstract AxisAlignedBox2d Bounds() Returns Type Description AxisAlignedBox2d | Improve this Doc View Source Clone() Declaration public abstract PlanarComplex.Element Clone() Returns Type Description PlanarComplex.Element | Improve this Doc View Source copy_to(PlanarComplex.Element) Declaration protected void copy_to(PlanarComplex.Element new_element) Parameters Type Name Description PlanarComplex.Element new_element | Improve this Doc View Source SegmentItr() Declaration public abstract IEnumerable<Segment2d> SegmentItr() Returns Type Description IEnumerable < Segment2d >"
  },
  "api/g3.PlanarComplex.FindSolidsOptions.html": {
    "href": "api/g3.PlanarComplex.FindSolidsOptions.html",
    "title": "Struct PlanarComplex.FindSolidsOptions | ViRGIS VR GIS",
    "keywords": "Struct PlanarComplex.FindSolidsOptions Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct FindSolidsOptions Fields | Improve this Doc View Source AllowOverlappingHoles Declaration public bool AllowOverlappingHoles Field Value Type Description Boolean | Improve this Doc View Source Default Declaration public static readonly PlanarComplex.FindSolidsOptions Default Field Value Type Description PlanarComplex.FindSolidsOptions | Improve this Doc View Source SimplifyDeviationTolerance Declaration public double SimplifyDeviationTolerance Field Value Type Description Double | Improve this Doc View Source SortPolygons Declaration public static readonly PlanarComplex.FindSolidsOptions SortPolygons Field Value Type Description PlanarComplex.FindSolidsOptions | Improve this Doc View Source TrustOrientations Declaration public bool TrustOrientations Field Value Type Description Boolean | Improve this Doc View Source WantCurveSolids Declaration public bool WantCurveSolids Field Value Type Description Boolean"
  },
  "api/g3.PlanarComplex.GeneralSolid.html": {
    "href": "api/g3.PlanarComplex.GeneralSolid.html",
    "title": "Class PlanarComplex.GeneralSolid | ViRGIS VR GIS",
    "keywords": "Class PlanarComplex.GeneralSolid Inheritance Object PlanarComplex.GeneralSolid Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class GeneralSolid Fields | Improve this Doc View Source Holes Declaration public List<PlanarComplex.Element> Holes Field Value Type Description List < PlanarComplex.Element > | Improve this Doc View Source Outer Declaration public PlanarComplex.Element Outer Field Value Type Description PlanarComplex.Element"
  },
  "api/g3.PlanarComplex.html": {
    "href": "api/g3.PlanarComplex.html",
    "title": "Class PlanarComplex | ViRGIS VR GIS",
    "keywords": "Class PlanarComplex Inheritance Object PlanarComplex Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class PlanarComplex Constructors | Improve this Doc View Source PlanarComplex() Declaration public PlanarComplex() Fields | Improve this Doc View Source AngleAccuracyDeg Declaration public double AngleAccuracyDeg Field Value Type Description Double | Improve this Doc View Source DistanceAccuracy Declaration public double DistanceAccuracy Field Value Type Description Double | Improve this Doc View Source MinimizeSampling Declaration public bool MinimizeSampling Field Value Type Description Boolean | Improve this Doc View Source SpacingT Declaration public double SpacingT Field Value Type Description Double Properties | Improve this Doc View Source ElementCount Declaration public int ElementCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Add(IParametricCurve2d) Declaration public PlanarComplex.Element Add(IParametricCurve2d curve) Parameters Type Name Description IParametricCurve2d curve Returns Type Description PlanarComplex.Element | Improve this Doc View Source Add(Polygon2d) Declaration public PlanarComplex.Element Add(Polygon2d poly) Parameters Type Name Description Polygon2d poly Returns Type Description PlanarComplex.Element | Improve this Doc View Source Add(PolyLine2d) Declaration public PlanarComplex.Element Add(PolyLine2d pline) Parameters Type Name Description PolyLine2d pline Returns Type Description PlanarComplex.Element | Improve this Doc View Source AllSegmentsItr() Declaration public IEnumerable<ComplexSegment2d> AllSegmentsItr() Returns Type Description IEnumerable < ComplexSegment2d > | Improve this Doc View Source Append(PlanarComplex) Declaration public void Append(PlanarComplex append) Parameters Type Name Description PlanarComplex append | Improve this Doc View Source Bounds() Declaration public AxisAlignedBox2d Bounds() Returns Type Description AxisAlignedBox2d | Improve this Doc View Source Clone() Declaration public PlanarComplex Clone() Returns Type Description PlanarComplex | Improve this Doc View Source ConvertToLoop(PlanarComplex.SmoothCurveElement, Double) Declaration public void ConvertToLoop(PlanarComplex.SmoothCurveElement curve, double tolerance = 1E-08) Parameters Type Name Description PlanarComplex.SmoothCurveElement curve Double tolerance | Improve this Doc View Source CountType(IMultiCurve2d, Type) Declaration public int CountType(IMultiCurve2d curve, Type t) Parameters Type Name Description IMultiCurve2d curve Type t Returns Type Description Int32 | Improve this Doc View Source CountType(Type) Declaration public int CountType(Type t) Parameters Type Name Description Type t Returns Type Description Int32 | Improve this Doc View Source CurvesItr() Declaration public IEnumerable<PlanarComplex.SmoothCurveElement> CurvesItr() Returns Type Description IEnumerable < PlanarComplex.SmoothCurveElement > | Improve this Doc View Source ElementsItr() Declaration public IEnumerable<PlanarComplex.Element> ElementsItr() Returns Type Description IEnumerable < PlanarComplex.Element > | Improve this Doc View Source EndpointsItr() Declaration public IEnumerable<ComplexEndpoint2d> EndpointsItr() Returns Type Description IEnumerable < ComplexEndpoint2d > | Improve this Doc View Source FindClosedLoops(Double) Declaration public PlanarComplex.ClosedLoopsInfo FindClosedLoops(double fSimplifyDeviationTol = 0.1) Parameters Type Name Description Double fSimplifyDeviationTol Returns Type Description PlanarComplex.ClosedLoopsInfo | Improve this Doc View Source FindOpenCurves(Double) Declaration public PlanarComplex.OpenCurvesInfo FindOpenCurves(double fSimplifyDeviationTol = 0.1) Parameters Type Name Description Double fSimplifyDeviationTol Returns Type Description PlanarComplex.OpenCurvesInfo | Improve this Doc View Source FindSolidRegions(PlanarComplex.FindSolidsOptions) Declaration public PlanarComplex.SolidRegionInfo FindSolidRegions(PlanarComplex.FindSolidsOptions options) Parameters Type Name Description PlanarComplex.FindSolidsOptions options Returns Type Description PlanarComplex.SolidRegionInfo | Improve this Doc View Source FindSolidRegions(Double, Boolean) Declaration public PlanarComplex.SolidRegionInfo FindSolidRegions(double fSimplifyDeviationTol = 0.1, bool bWantCurveSolids = true) Parameters Type Name Description Double fSimplifyDeviationTol Boolean bWantCurveSolids Returns Type Description PlanarComplex.SolidRegionInfo | Improve this Doc View Source HasOpenCurves() Declaration public bool HasOpenCurves() Returns Type Description Boolean | Improve this Doc View Source JoinElements(ComplexEndpoint2d, ComplexEndpoint2d, Double) Declaration public bool JoinElements(ComplexEndpoint2d a, ComplexEndpoint2d b, double loop_tolerance = 1E-08) Parameters Type Name Description ComplexEndpoint2d a ComplexEndpoint2d b Double loop_tolerance Returns Type Description Boolean | Improve this Doc View Source LoopLeafComponentsItr() iterate through \"leaf\" curves, ie all the IParametricCurve2D's embedded in loops that do not contain any child curves Declaration public IEnumerable<IParametricCurve2d> LoopLeafComponentsItr() Returns Type Description IEnumerable < IParametricCurve2d > | Improve this Doc View Source LoopsItr() Declaration public IEnumerable<PlanarComplex.SmoothLoopElement> LoopsItr() Returns Type Description IEnumerable < PlanarComplex.SmoothLoopElement > | Improve this Doc View Source PrintStats(String) Declaration public void PrintStats(string label = \"\") Parameters Type Name Description String label | Improve this Doc View Source Remove(PlanarComplex.Element) Declaration public void Remove(PlanarComplex.Element e) Parameters Type Name Description PlanarComplex.Element e | Improve this Doc View Source Reverse(PlanarComplex.SmoothCurveElement) Declaration public void Reverse(PlanarComplex.SmoothCurveElement c) Parameters Type Name Description PlanarComplex.SmoothCurveElement c | Improve this Doc View Source SplitAllLoops() Declaration public void SplitAllLoops() | Improve this Doc View Source Transform(ITransform2, Boolean, Boolean) Declaration public void Transform(ITransform2 xform, bool bApplyToSources, bool bRecomputePolygons = false) Parameters Type Name Description ITransform2 xform Boolean bApplyToSources Boolean bRecomputePolygons"
  },
  "api/g3.PlanarComplex.OpenCurvesInfo.html": {
    "href": "api/g3.PlanarComplex.OpenCurvesInfo.html",
    "title": "Class PlanarComplex.OpenCurvesInfo | ViRGIS VR GIS",
    "keywords": "Class PlanarComplex.OpenCurvesInfo Inheritance Object PlanarComplex.OpenCurvesInfo Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class OpenCurvesInfo Fields | Improve this Doc View Source Curves Declaration public List<IParametricCurve2d> Curves Field Value Type Description List < IParametricCurve2d > | Improve this Doc View Source Polylines Declaration public List<PolyLine2d> Polylines Field Value Type Description List < PolyLine2d > Properties | Improve this Doc View Source Bounds Declaration public AxisAlignedBox2d Bounds { get; } Property Value Type Description AxisAlignedBox2d"
  },
  "api/g3.PlanarComplex.SmoothCurveElement.html": {
    "href": "api/g3.PlanarComplex.SmoothCurveElement.html",
    "title": "Class PlanarComplex.SmoothCurveElement | ViRGIS VR GIS",
    "keywords": "Class PlanarComplex.SmoothCurveElement Inheritance Object PlanarComplex.Element PlanarComplex.SmoothCurveElement Inherited Members PlanarComplex.Element.source PlanarComplex.Element.ID PlanarComplex.Element.Color PlanarComplex.Element.HasSetColor PlanarComplex.Element.copy_to(PlanarComplex.Element) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SmoothCurveElement : PlanarComplex.Element Fields | Improve this Doc View Source polyLine Declaration public PolyLine2d polyLine Field Value Type Description PolyLine2d Methods | Improve this Doc View Source Bounds() Declaration public override AxisAlignedBox2d Bounds() Returns Type Description AxisAlignedBox2d Overrides PlanarComplex.Element.Bounds() | Improve this Doc View Source Clone() Declaration public override PlanarComplex.Element Clone() Returns Type Description PlanarComplex.Element Overrides PlanarComplex.Element.Clone() | Improve this Doc View Source SegmentItr() Declaration public override IEnumerable<Segment2d> SegmentItr() Returns Type Description IEnumerable < Segment2d > Overrides PlanarComplex.Element.SegmentItr()"
  },
  "api/g3.PlanarComplex.SmoothLoopElement.html": {
    "href": "api/g3.PlanarComplex.SmoothLoopElement.html",
    "title": "Class PlanarComplex.SmoothLoopElement | ViRGIS VR GIS",
    "keywords": "Class PlanarComplex.SmoothLoopElement Inheritance Object PlanarComplex.Element PlanarComplex.SmoothLoopElement Inherited Members PlanarComplex.Element.source PlanarComplex.Element.ID PlanarComplex.Element.Color PlanarComplex.Element.HasSetColor PlanarComplex.Element.copy_to(PlanarComplex.Element) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SmoothLoopElement : PlanarComplex.Element Fields | Improve this Doc View Source polygon Declaration public Polygon2d polygon Field Value Type Description Polygon2d Methods | Improve this Doc View Source Bounds() Declaration public override AxisAlignedBox2d Bounds() Returns Type Description AxisAlignedBox2d Overrides PlanarComplex.Element.Bounds() | Improve this Doc View Source Clone() Declaration public override PlanarComplex.Element Clone() Returns Type Description PlanarComplex.Element Overrides PlanarComplex.Element.Clone() | Improve this Doc View Source SegmentItr() Declaration public override IEnumerable<Segment2d> SegmentItr() Returns Type Description IEnumerable < Segment2d > Overrides PlanarComplex.Element.SegmentItr()"
  },
  "api/g3.PlanarComplex.SolidRegionInfo.html": {
    "href": "api/g3.PlanarComplex.SolidRegionInfo.html",
    "title": "Class PlanarComplex.SolidRegionInfo | ViRGIS VR GIS",
    "keywords": "Class PlanarComplex.SolidRegionInfo Inheritance Object PlanarComplex.SolidRegionInfo Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SolidRegionInfo Fields | Improve this Doc View Source Polygons Declaration public List<GeneralPolygon2d> Polygons Field Value Type Description List < GeneralPolygon2d > | Improve this Doc View Source PolygonsSources Declaration public List<PlanarComplex.GeneralSolid> PolygonsSources Field Value Type Description List < PlanarComplex.GeneralSolid > | Improve this Doc View Source Solids Declaration public List<PlanarSolid2d> Solids Field Value Type Description List < PlanarSolid2d > Properties | Improve this Doc View Source Area Declaration public double Area { get; } Property Value Type Description Double | Improve this Doc View Source Bounds Declaration public AxisAlignedBox2d Bounds { get; } Property Value Type Description AxisAlignedBox2d | Improve this Doc View Source HolesArea Declaration public double HolesArea { get; } Property Value Type Description Double"
  },
  "api/g3.PlanarHoleFiller.html": {
    "href": "api/g3.PlanarHoleFiller.html",
    "title": "Class PlanarHoleFiller | ViRGIS VR GIS",
    "keywords": "Class PlanarHoleFiller Try to fill planar holes in a mesh. The fill is computed by mapping the hole boundary into 2D, filling using 2D algorithms, and then mapping back to 3D. This allows us to properly handle cases like nested holes (eg from slicing a torus in half). PlanarComplex is used to sort the input 2D polyons. MeshInsertUVPolyCurve is used to insert each 2D polygon into a generated planar mesh. The resolution of the generated mesh is controlled by .FillTargetEdgeLen In theory this approach can handle more geometric degeneracies than Delaunay triangluation. However, the current code requires that MeshInsertUVPolyCurve produce output boundary loops that have a 1-1 correspondence with the input polygons. This is not always possible. Currently these failure cases are not handled properly. In that case the loops will not be stitched. Inheritance Object PlanarHoleFiller Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class PlanarHoleFiller Constructors | Improve this Doc View Source PlanarHoleFiller(DMesh3) Declaration public PlanarHoleFiller(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh | Improve this Doc View Source PlanarHoleFiller(MeshPlaneCut) Declaration public PlanarHoleFiller(MeshPlaneCut cut) Parameters Type Name Description MeshPlaneCut cut Fields | Improve this Doc View Source FailedInsertions Declaration public int FailedInsertions Field Value Type Description Int32 | Improve this Doc View Source FailedMerges Declaration public int FailedMerges Field Value Type Description Int32 | Improve this Doc View Source FillTargetEdgeLen fill mesh will be tessellated to this length, set to double.MaxValue to use zero-length tessellation Declaration public double FillTargetEdgeLen Field Value Type Description Double | Improve this Doc View Source MergeFillBoundary in some cases fill can succeed but we can't merge w/o creating holes. In such cases it might be better to not merge at all... Declaration public bool MergeFillBoundary Field Value Type Description Boolean | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 | Improve this Doc View Source OutputHasCracks Declaration public bool OutputHasCracks Field Value Type Description Boolean | Improve this Doc View Source PlaneNormal Declaration public Vector3d PlaneNormal Field Value Type Description Vector3d | Improve this Doc View Source PlaneOrigin Declaration public Vector3d PlaneOrigin Field Value Type Description Vector3d Methods | Improve this Doc View Source AddFillLoop(EdgeLoop) Declaration public void AddFillLoop(EdgeLoop loop) Parameters Type Name Description EdgeLoop loop | Improve this Doc View Source AddFillLoops(IEnumerable<EdgeLoop>) Declaration public void AddFillLoops(IEnumerable<EdgeLoop> loops) Parameters Type Name Description IEnumerable < EdgeLoop > loops | Improve this Doc View Source Fill() Compute the fill mesh and append it. This returns false if anything went wrong. The Error Feedback properties (.OutputHasCracks, etc) will provide more info. Declaration public bool Fill() Returns Type Description Boolean | Improve this Doc View Source SetPlane(Vector3d, Vector3d) Declaration public void SetPlane(Vector3d origin, Vector3d normal) Parameters Type Name Description Vector3d origin Vector3d normal | Improve this Doc View Source SetPlane(Vector3d, Vector3d, Vector3d, Vector3d) Declaration public void SetPlane(Vector3d origin, Vector3d normal, Vector3d planeX, Vector3d planeY) Parameters Type Name Description Vector3d origin Vector3d normal Vector3d planeX Vector3d planeY"
  },
  "api/g3.PlanarSolid2d.html": {
    "href": "api/g3.PlanarSolid2d.html",
    "title": "Class PlanarSolid2d | ViRGIS VR GIS",
    "keywords": "Class PlanarSolid2d Inheritance Object PlanarSolid2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class PlanarSolid2d Constructors | Improve this Doc View Source PlanarSolid2d() Declaration public PlanarSolid2d() Properties | Improve this Doc View Source HasArcLength Declaration public bool HasArcLength { get; } Property Value Type Description Boolean | Improve this Doc View Source Holes Declaration public ReadOnlyCollection<IParametricCurve2d> Holes { get; } Property Value Type Description ReadOnlyCollection < IParametricCurve2d > | Improve this Doc View Source Outer Declaration public IParametricCurve2d Outer { get; } Property Value Type Description IParametricCurve2d | Improve this Doc View Source Perimeter Declaration public double Perimeter { get; } Property Value Type Description Double Methods | Improve this Doc View Source AddHole(IParametricCurve2d) Declaration public void AddHole(IParametricCurve2d hole) Parameters Type Name Description IParametricCurve2d hole | Improve this Doc View Source Convert(Double, Double, Double) Resample parametric solid into polygonal solid Declaration public GeneralPolygon2d Convert(double fSpacingLength, double fSpacingT, double fDeviationTolerance) Parameters Type Name Description Double fSpacingLength Double fSpacingT Double fDeviationTolerance Returns Type Description GeneralPolygon2d | Improve this Doc View Source SetOuter(IParametricCurve2d, Boolean) Declaration public void SetOuter(IParametricCurve2d loop, bool bIsClockwise) Parameters Type Name Description IParametricCurve2d loop Boolean bIsClockwise"
  },
  "api/g3.PlanarSpansFiller.html": {
    "href": "api/g3.PlanarSpansFiller.html",
    "title": "Class PlanarSpansFiller | ViRGIS VR GIS",
    "keywords": "Class PlanarSpansFiller This class fills an ordered sequence of planar spans. The 2D polygon is formed by chaining the spans. Current issues: connectors have a single segment, so when simplified, they become a single edge. should subsample them instead. currently mapping from inserted edges back to span edges is not calculated, so we have no way to merge them (ie MergeFillBoundary not implemented) fill triangles not returned? Inheritance Object PlanarSpansFiller Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class PlanarSpansFiller Constructors | Improve this Doc View Source PlanarSpansFiller(DMesh3, IList<EdgeSpan>) Declaration public PlanarSpansFiller(DMesh3 mesh, IList<EdgeSpan> spans) Parameters Type Name Description DMesh3 mesh IList < EdgeSpan > spans Fields | Improve this Doc View Source FillTargetEdgeLen fill mesh will be tessellated to this length, set to double.MaxValue to use zero-length tessellation Declaration public double FillTargetEdgeLen Field Value Type Description Double | Improve this Doc View Source MergeFillBoundary in some cases fill can succeed but we can't merge w/o creating holes. In such cases it might be better to not merge at all... Declaration public bool MergeFillBoundary Field Value Type Description Boolean | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 | Improve this Doc View Source PlaneNormal Declaration public Vector3d PlaneNormal Field Value Type Description Vector3d | Improve this Doc View Source PlaneOrigin Declaration public Vector3d PlaneOrigin Field Value Type Description Vector3d Methods | Improve this Doc View Source Fill() Declaration public bool Fill() Returns Type Description Boolean | Improve this Doc View Source SetPlane(Vector3d, Vector3d) Declaration public void SetPlane(Vector3d origin, Vector3d normal) Parameters Type Name Description Vector3d origin Vector3d normal | Improve this Doc View Source SetPlane(Vector3d, Vector3d, Vector3d, Vector3d) Declaration public void SetPlane(Vector3d origin, Vector3d normal, Vector3d planeX, Vector3d planeY) Parameters Type Name Description Vector3d origin Vector3d normal Vector3d planeX Vector3d planeY"
  },
  "api/g3.Plane3d.html": {
    "href": "api/g3.Plane3d.html",
    "title": "Struct Plane3d | ViRGIS VR GIS",
    "keywords": "Struct Plane3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Plane3d Constructors | Improve this Doc View Source Plane3d(Vector3d, Vector3d) Declaration public Plane3d(Vector3d normal, Vector3d point) Parameters Type Name Description Vector3d normal Vector3d point | Improve this Doc View Source Plane3d(Vector3d, Vector3d, Vector3d) Declaration public Plane3d(Vector3d p0, Vector3d p1, Vector3d p2) Parameters Type Name Description Vector3d p0 Vector3d p1 Vector3d p2 | Improve this Doc View Source Plane3d(Vector3d, Double) Declaration public Plane3d(Vector3d normal, double constant) Parameters Type Name Description Vector3d normal Double constant Fields | Improve this Doc View Source Constant Declaration public double Constant Field Value Type Description Double | Improve this Doc View Source Normal Declaration public Vector3d Normal Field Value Type Description Vector3d Methods | Improve this Doc View Source DistanceTo(Vector3d) Declaration public double DistanceTo(Vector3d p) Parameters Type Name Description Vector3d p Returns Type Description Double | Improve this Doc View Source WhichSide(Vector3d) Declaration public int WhichSide(Vector3d p) Parameters Type Name Description Vector3d p Returns Type Description Int32"
  },
  "api/g3.Plane3f.html": {
    "href": "api/g3.Plane3f.html",
    "title": "Struct Plane3f | ViRGIS VR GIS",
    "keywords": "Struct Plane3f Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Plane3f Constructors | Improve this Doc View Source Plane3f(Vector3f, Vector3f) Declaration public Plane3f(Vector3f normal, Vector3f point) Parameters Type Name Description Vector3f normal Vector3f point | Improve this Doc View Source Plane3f(Vector3f, Vector3f, Vector3f) Declaration public Plane3f(Vector3f p0, Vector3f p1, Vector3f p2) Parameters Type Name Description Vector3f p0 Vector3f p1 Vector3f p2 | Improve this Doc View Source Plane3f(Vector3f, Single) Declaration public Plane3f(Vector3f normal, float constant) Parameters Type Name Description Vector3f normal Single constant Fields | Improve this Doc View Source Constant Declaration public float Constant Field Value Type Description Single | Improve this Doc View Source Normal Declaration public Vector3f Normal Field Value Type Description Vector3f Methods | Improve this Doc View Source DistanceTo(Vector3f) Declaration public float DistanceTo(Vector3f p) Parameters Type Name Description Vector3f p Returns Type Description Single | Improve this Doc View Source WhichSide(Vector3f) Declaration public int WhichSide(Vector3f p) Parameters Type Name Description Vector3f p Returns Type Description Int32"
  },
  "api/g3.PlaneIntersectionTarget.html": {
    "href": "api/g3.PlaneIntersectionTarget.html",
    "title": "Class PlaneIntersectionTarget | ViRGIS VR GIS",
    "keywords": "Class PlaneIntersectionTarget Compute ray-intersection with plane Inheritance Object PlaneIntersectionTarget Implements IIntersectionTarget Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class PlaneIntersectionTarget : IIntersectionTarget Fields | Improve this Doc View Source NormalAxis Declaration public int NormalAxis Field Value Type Description Int32 | Improve this Doc View Source PlaneFrame Declaration public Frame3f PlaneFrame Field Value Type Description Frame3f Properties | Improve this Doc View Source HasNormal Declaration public bool HasNormal { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source RayIntersect(Ray3d, out Vector3d, out Vector3d) Declaration public bool RayIntersect(Ray3d ray, out Vector3d vHit, out Vector3d vHitNormal) Parameters Type Name Description Ray3d ray Vector3d vHit Vector3d vHitNormal Returns Type Description Boolean Implements IIntersectionTarget"
  },
  "api/g3.PlaneProjectionTarget.html": {
    "href": "api/g3.PlaneProjectionTarget.html",
    "title": "Class PlaneProjectionTarget | ViRGIS VR GIS",
    "keywords": "Class PlaneProjectionTarget Inheritance Object PlaneProjectionTarget Implements IProjectionTarget Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class PlaneProjectionTarget : IProjectionTarget Fields | Improve this Doc View Source Normal Declaration public Vector3d Normal Field Value Type Description Vector3d | Improve this Doc View Source Origin Declaration public Vector3d Origin Field Value Type Description Vector3d Methods | Improve this Doc View Source Project(Vector3d, Int32) Declaration public Vector3d Project(Vector3d vPoint, int identifier = -1) Parameters Type Name Description Vector3d vPoint Int32 identifier Returns Type Description Vector3d Implements IProjectionTarget"
  },
  "api/g3.PointAABBTree3.BuildStrategy.html": {
    "href": "api/g3.PointAABBTree3.BuildStrategy.html",
    "title": "Enum PointAABBTree3.BuildStrategy | ViRGIS VR GIS",
    "keywords": "Enum PointAABBTree3.BuildStrategy Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum BuildStrategy Fields Name Description Default TopDownMedian TopDownMidpoint"
  },
  "api/g3.PointAABBTree3.html": {
    "href": "api/g3.PointAABBTree3.html",
    "title": "Class PointAABBTree3 | ViRGIS VR GIS",
    "keywords": "Class PointAABBTree3 Hierarchical Axis-Aligned-Bounding-Box tree for an IPointSet TODO: no timestamp support right now... Inheritance Object PointAABBTree3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class PointAABBTree3 Constructors | Improve this Doc View Source PointAABBTree3(IPointSet, Boolean) Declaration public PointAABBTree3(IPointSet pointsIn, bool autoBuild = true) Parameters Type Name Description IPointSet pointsIn Boolean autoBuild Fields | Improve this Doc View Source FWNApproxOrder FWN approximation order. can be 1 or 2. 2 is more accurate, obviously. Declaration public int FWNApproxOrder Field Value Type Description Int32 | Improve this Doc View Source FWNAreaEstimateF Replace this with function that returns proper area estimate Declaration public Func<int, double> FWNAreaEstimateF Field Value Type Description Func < Int32 , Double > | Improve this Doc View Source FWNBeta FWN beta parameter - is 2.0 in paper Declaration public double FWNBeta Field Value Type Description Double | Improve this Doc View Source LeafMaxPointCount Declaration public int LeafMaxPointCount Field Value Type Description Int32 | Improve this Doc View Source PointFilterF Declaration public Func<int, bool> PointFilterF Field Value Type Description Func < Int32 , Boolean > Properties | Improve this Doc View Source Bounds Root bounding box of tree (note: tree must be generated by calling a query function first!) Declaration public AxisAlignedBox3d Bounds { get; } Property Value Type Description AxisAlignedBox3d | Improve this Doc View Source Points Declaration public IPointSet Points { get; } Property Value Type Description IPointSet Methods | Improve this Doc View Source box_contains(Int32, Vector3d) Declaration protected bool box_contains(int iBox, Vector3d p) Parameters Type Name Description Int32 iBox Vector3d p Returns Type Description Boolean | Improve this Doc View Source branch_fast_winding_num(Int32, Vector3d) Declaration protected double branch_fast_winding_num(int iBox, Vector3d p) Parameters Type Name Description Int32 iBox Vector3d p Returns Type Description Double | Improve this Doc View Source Build(PointAABBTree3.BuildStrategy) Declaration public void Build(PointAABBTree3.BuildStrategy eStrategy = PointAABBTree3.BuildStrategy.TopDownMidpoint) Parameters Type Name Description PointAABBTree3.BuildStrategy eStrategy | Improve this Doc View Source build_fast_winding_cache() Declaration protected void build_fast_winding_cache() | Improve this Doc View Source build_fast_winding_cache(Int32, Int32, Int32, out HashSet<Int32>) Declaration protected int build_fast_winding_cache(int iBox, int depth, int pt_count_thresh, out HashSet<int> pts_hash) Parameters Type Name Description Int32 iBox Int32 depth Int32 pt_count_thresh HashSet < Int32 > pts_hash Returns Type Description Int32 | Improve this Doc View Source can_use_fast_winding_cache(Int32, ref Vector3d) Declaration protected bool can_use_fast_winding_cache(int iBox, ref Vector3d q) Parameters Type Name Description Int32 iBox Vector3d q Returns Type Description Boolean | Improve this Doc View Source collect_points(Int32, HashSet<Int32>) Declaration protected void collect_points(int iBox, HashSet<int> points) Parameters Type Name Description Int32 iBox HashSet < Int32 > points | Improve this Doc View Source DoTraversal(PointAABBTree3.TreeTraversal) Hierarchically descend through the tree nodes, calling the TreeTrversal functions at each level Declaration public virtual void DoTraversal(PointAABBTree3.TreeTraversal traversal) Parameters Type Name Description PointAABBTree3.TreeTraversal traversal | Improve this Doc View Source evaluate_box_fast_winding_cache(Int32, ref Vector3d) Declaration protected double evaluate_box_fast_winding_cache(int iBox, ref Vector3d q) Parameters Type Name Description Int32 iBox Vector3d q Returns Type Description Double | Improve this Doc View Source FastWindingNumber(Vector3d) Fast approximation of winding number using far-field approximations Declaration public virtual double FastWindingNumber(Vector3d p) Parameters Type Name Description Vector3d p Returns Type Description Double | Improve this Doc View Source find_nearest_point(Int32, Vector3d, ref Double, ref Int32) Declaration protected void find_nearest_point(int iBox, Vector3d p, ref double fNearestSqr, ref int tID) Parameters Type Name Description Int32 iBox Vector3d p Double fNearestSqr Int32 tID | Improve this Doc View Source FindNearestPoint(Vector3d, Double) Find the point closest to p, within distance fMaxDist, or return InvalidID Declaration public virtual int FindNearestPoint(Vector3d p, double fMaxDist = 1.7976931348623157E+308) Parameters Type Name Description Vector3d p Double fMaxDist Returns Type Description Int32 | Improve this Doc View Source make_box_fast_winding_cache(Int32, IEnumerable<Int32>) Declaration protected void make_box_fast_winding_cache(int iBox, IEnumerable<int> pointIndices) Parameters Type Name Description Int32 iBox IEnumerable < Int32 > pointIndices | Improve this Doc View Source TestCoverage() Declaration public void TestCoverage() | Improve this Doc View Source TotalExtentSum() Total sum-of-extents over all boxes in the tree. Mainly useful to evaluate tree quality. Declaration public double TotalExtentSum() Returns Type Description Double | Improve this Doc View Source TotalVolume() Total sum of volumes of all boxes in the tree. Mainly useful to evaluate tree quality. Declaration public double TotalVolume() Returns Type Description Double | Improve this Doc View Source tree_traversal(Int32, Int32, PointAABBTree3.TreeTraversal) Declaration protected virtual void tree_traversal(int iBox, int depth, PointAABBTree3.TreeTraversal traversal) Parameters Type Name Description Int32 iBox Int32 depth PointAABBTree3.TreeTraversal traversal"
  },
  "api/g3.PointAABBTree3.TreeTraversal.html": {
    "href": "api/g3.PointAABBTree3.TreeTraversal.html",
    "title": "Class PointAABBTree3.TreeTraversal | ViRGIS VR GIS",
    "keywords": "Class PointAABBTree3.TreeTraversal Instances of this class can be passed in to the DoTraversal() function to implement your own tree-traversal queries. NextBoxF() is called for each box node. Return false from this function to halt terminate that branch of the traversal, or true to descend into that box's children (boxes or points). NextPointF() is called for each point. Inheritance Object PointAABBTree3.TreeTraversal Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class TreeTraversal Fields | Improve this Doc View Source NextBoxF Declaration public Func<AxisAlignedBox3d, int, bool> NextBoxF Field Value Type Description Func < AxisAlignedBox3d , Int32 , Boolean > | Improve this Doc View Source NextPointF Declaration public Action<int> NextPointF Field Value Type Description Action < Int32 >"
  },
  "api/g3.PointHashGrid2d-1.html": {
    "href": "api/g3.PointHashGrid2d-1.html",
    "title": "Class PointHashGrid2d<T> | ViRGIS VR GIS",
    "keywords": "Class PointHashGrid2d<T> Hash Grid for 2D points. You provide the 'point' type. If you have an indexable set of points this can just be int, or can be more complex point data structure (but be careful w/ structs...) Does not actually store 2D points. So, to remove a point you must also know it's 2D coordinate, so we can look up the cell coordinates. Hence, to 'update' a point, you need to know both it's old and new 2D coordinates. Inheritance Object PointHashGrid2d<T> Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class PointHashGrid2d<T> Type Parameters Name Description T Constructors | Improve this Doc View Source PointHashGrid2d(Double, T) \"invalid\" value will be returned by queries if no valid result is found (eg bounded-distance query) Declaration public PointHashGrid2d(double cellSize, T invalidValue) Parameters Type Name Description Double cellSize T invalidValue Properties | Improve this Doc View Source InvalidValue Declaration public T InvalidValue { get; } Property Value Type Description T Methods | Improve this Doc View Source FindNearestInRadius(Vector2d, Double, Func<T, Double>, Func<T, Boolean>) Find nearest point in grid, within radius, without locking / thread-safety You must provided distF which returns distance between query_pt and the point argument You can ignore specific points via ignoreF lambda Declaration public KeyValuePair<T, double> FindNearestInRadius(Vector2d query_pt, double radius, Func<T, double> distF, Func<T, bool> ignoreF = null) Parameters Type Name Description Vector2d query_pt Double radius Func <T, Double > distF Func <T, Boolean > ignoreF Returns Type Description KeyValuePair <T, Double > | Improve this Doc View Source InsertPoint(T, Vector2d) Insert point at position. This function is thread-safe, uses a SpinLock internally Declaration public void InsertPoint(T value, Vector2d pos) Parameters Type Name Description T value Vector2d pos | Improve this Doc View Source InsertPointUnsafe(T, Vector2d) Insert point without locking / thread-safety Declaration public void InsertPointUnsafe(T value, Vector2d pos) Parameters Type Name Description T value Vector2d pos | Improve this Doc View Source RemovePoint(T, Vector2d) Insert point. This function is thread-safe, uses a SpinLock internally Declaration public bool RemovePoint(T value, Vector2d pos) Parameters Type Name Description T value Vector2d pos Returns Type Description Boolean | Improve this Doc View Source RemovePointUnsafe(T, Vector2d) Remove point without locking / thread-safety Declaration public bool RemovePointUnsafe(T value, Vector2d pos) Parameters Type Name Description T value Vector2d pos Returns Type Description Boolean | Improve this Doc View Source UpdatePoint(T, Vector2d, Vector2d) Move point from old to new position. This function is thread-safe, uses a SpinLock internally Declaration public void UpdatePoint(T value, Vector2d old_pos, Vector2d new_pos) Parameters Type Name Description T value Vector2d old_pos Vector2d new_pos | Improve this Doc View Source UpdatePointUnsafe(T, Vector2d, Vector2d) Move point from old to new position without locking / thread-safety Declaration public void UpdatePointUnsafe(T value, Vector2d old_pos, Vector2d new_pos) Parameters Type Name Description T value Vector2d old_pos Vector2d new_pos"
  },
  "api/g3.PointHashGrid3d-1.html": {
    "href": "api/g3.PointHashGrid3d-1.html",
    "title": "Class PointHashGrid3d<T> | ViRGIS VR GIS",
    "keywords": "Class PointHashGrid3d<T> Hash Grid for 3D points. You provide the 'point' type. If you have an indexable set of points this can just be int, or can be more complex point data structure (but be careful w/ structs...) Does not actually store 3D points. So, to remove a point you must also know it's 3D coordinate, so we can look up the cell coordinates. Hence, to 'update' a point, you need to know both it's old and new 3D coordinates. TODO: if a lot of points are in the same spot, this is still a disaster. What if we had a second level of hashing, where once a list at a level gets too big, we build a sub-hash there? Inheritance Object PointHashGrid3d<T> Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class PointHashGrid3d<T> Type Parameters Name Description T Constructors | Improve this Doc View Source PointHashGrid3d(Double, T) \"invalid\" value will be returned by queries if no valid result is found (eg bounded-distance query) Declaration public PointHashGrid3d(double cellSize, T invalidValue) Parameters Type Name Description Double cellSize T invalidValue Properties | Improve this Doc View Source InvalidValue Declaration public T InvalidValue { get; } Property Value Type Description T Methods | Improve this Doc View Source FindNearestInRadius(Vector3d, Double, Func<T, Double>, Func<T, Boolean>) Find nearest point in grid, within radius, without locking / thread-safety You must provided distF which returns distance between query_pt and the point argument You can ignore specific points via ignoreF lambda. returned key is InvalidValue if not found Declaration public KeyValuePair<T, double> FindNearestInRadius(Vector3d query_pt, double radius, Func<T, double> distF, Func<T, bool> ignoreF = null) Parameters Type Name Description Vector3d query_pt Double radius Func <T, Double > distF Func <T, Boolean > ignoreF Returns Type Description KeyValuePair <T, Double > | Improve this Doc View Source InsertPoint(T, Vector3d) Insert point at position. This function is thread-safe, uses a SpinLock internally Declaration public void InsertPoint(T value, Vector3d pos) Parameters Type Name Description T value Vector3d pos | Improve this Doc View Source InsertPointUnsafe(T, Vector3d) Insert point without locking / thread-safety Declaration public void InsertPointUnsafe(T value, Vector3d pos) Parameters Type Name Description T value Vector3d pos | Improve this Doc View Source print_large_buckets() Declaration public void print_large_buckets() | Improve this Doc View Source RemovePoint(T, Vector3d) Insert point. This function is thread-safe, uses a SpinLock internally Declaration public bool RemovePoint(T value, Vector3d pos) Parameters Type Name Description T value Vector3d pos Returns Type Description Boolean | Improve this Doc View Source RemovePointUnsafe(T, Vector3d) Remove point without locking / thread-safety Declaration public bool RemovePointUnsafe(T value, Vector3d pos) Parameters Type Name Description T value Vector3d pos Returns Type Description Boolean | Improve this Doc View Source UpdatePoint(T, Vector3d, Vector3d) Move point from old to new position. This function is thread-safe, uses a SpinLock internally Declaration public void UpdatePoint(T value, Vector3d old_pos, Vector3d new_pos) Parameters Type Name Description T value Vector3d old_pos Vector3d new_pos | Improve this Doc View Source UpdatePointUnsafe(T, Vector3d, Vector3d) Move point from old to new position without locking / thread-safety Declaration public void UpdatePointUnsafe(T value, Vector3d old_pos, Vector3d new_pos) Parameters Type Name Description T value Vector3d old_pos Vector3d new_pos"
  },
  "api/g3.PointSplatsGenerator.html": {
    "href": "api/g3.PointSplatsGenerator.html",
    "title": "Class PointSplatsGenerator | ViRGIS VR GIS",
    "keywords": "Class PointSplatsGenerator Create a mesh that contains a planar element for each point and normal (currently only triangles) Inheritance Object MeshGenerator PointSplatsGenerator Inherited Members MeshGenerator.vertices MeshGenerator.uv MeshGenerator.normals MeshGenerator.triangles MeshGenerator.groups MeshGenerator.WantUVs MeshGenerator.WantNormals MeshGenerator.WantGroups MeshGenerator.Clockwise MeshGenerator.MakeMesh(SimpleMesh) MeshGenerator.MakeSimpleMesh() MeshGenerator.MakeMesh(DMesh3) MeshGenerator.MakeDMesh() MeshGenerator.MakeMesh(NTMesh3) MeshGenerator.MakeNTMesh() MeshGenerator.duplicate_vertex_span(Int32, Int32) MeshGenerator.append_disc(Int32, Int32, Int32, Boolean, Boolean, Int32, Int32) MeshGenerator.append_rectangle(Int32, Int32, Int32, Int32, Boolean, Int32, Int32) MeshGenerator.append_2d_disc_segment(Int32, Int32, Int32, Int32, Boolean, Int32, Int32, Int32, Double) MeshGenerator.estimate_normal(Int32, Int32, Int32) MeshGenerator.bilerp(Vector3d, Vector3d, Vector3d, Vector3d, Double, Double) MeshGenerator.bilerp(Vector2d, Vector2d, Vector2d, Vector2d, Double, Double) MeshGenerator.bilerp(Vector2f, Vector2f, Vector2f, Vector2f, Single, Single) MeshGenerator.bilerp(Vector3i, Vector3i, Vector3i, Vector3i, Double, Double) MeshGenerator.lerp(Vector3i, Vector3i, Double) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class PointSplatsGenerator : MeshGenerator Constructors | Improve this Doc View Source PointSplatsGenerator() Declaration public PointSplatsGenerator() Fields | Improve this Doc View Source NormalF Declaration public Func<int, Vector3d> NormalF Field Value Type Description Func < Int32 , Vector3d > | Improve this Doc View Source PointF Declaration public Func<int, Vector3d> PointF Field Value Type Description Func < Int32 , Vector3d > | Improve this Doc View Source PointIndices Declaration public IEnumerable<int> PointIndices Field Value Type Description IEnumerable < Int32 > | Improve this Doc View Source PointIndicesCount Declaration public int PointIndicesCount Field Value Type Description Int32 | Improve this Doc View Source Radius Declaration public double Radius Field Value Type Description Double Methods | Improve this Doc View Source Generate() Declaration public override MeshGenerator Generate() Returns Type Description MeshGenerator Overrides MeshGenerator.Generate() | Improve this Doc View Source Generate(IList<Int32>, Func<Int32, Vector3d>, Func<Int32, Vector3d>, Double) shortcut utility Declaration public static DMesh3 Generate(IList<int> indices, Func<int, Vector3d> PointF, Func<int, Vector3d> NormalF, double radius) Parameters Type Name Description IList < Int32 > indices Func < Int32 , Vector3d > PointF Func < Int32 , Vector3d > NormalF Double radius Returns Type Description DMesh3"
  },
  "api/g3.Polygon2d.html": {
    "href": "api/g3.Polygon2d.html",
    "title": "Class Polygon2d | ViRGIS VR GIS",
    "keywords": "Class Polygon2d Inheritance Object Polygon2d Implements IDuplicatable < Polygon2d > Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class Polygon2d : IDuplicatable<Polygon2d> Constructors | Improve this Doc View Source Polygon2d() Declaration public Polygon2d() | Improve this Doc View Source Polygon2d(Polygon2d) Declaration public Polygon2d(Polygon2d copy) Parameters Type Name Description Polygon2d copy | Improve this Doc View Source Polygon2d(Vector2d[]) Declaration public Polygon2d(Vector2d[] v) Parameters Type Name Description Vector2d [] v | Improve this Doc View Source Polygon2d(VectorArray2d) Declaration public Polygon2d(VectorArray2d v) Parameters Type Name Description VectorArray2d v | Improve this Doc View Source Polygon2d(IEnumerable<Vector2d>) Declaration public Polygon2d(IEnumerable<Vector2d> copy) Parameters Type Name Description IEnumerable < Vector2d > copy | Improve this Doc View Source Polygon2d(IList<Vector2d>) Declaration public Polygon2d(IList<Vector2d> copy) Parameters Type Name Description IList < Vector2d > copy | Improve this Doc View Source Polygon2d(Double[]) Declaration public Polygon2d(double[] values) Parameters Type Name Description Double [] values | Improve this Doc View Source Polygon2d(Func<Int32, Vector2d>, Int32) Declaration public Polygon2d(Func<int, Vector2d> SourceF, int N) Parameters Type Name Description Func < Int32 , Vector2d > SourceF Int32 N Fields | Improve this Doc View Source Timestamp Declaration public int Timestamp Field Value Type Description Int32 | Improve this Doc View Source vertices Declaration protected List<Vector2d> vertices Field Value Type Description List < Vector2d > Properties | Improve this Doc View Source ArcLength Declaration public double ArcLength { get; } Property Value Type Description Double | Improve this Doc View Source Area Declaration public double Area { get; } Property Value Type Description Double | Improve this Doc View Source AverageEdgeLength Declaration public double AverageEdgeLength { get; } Property Value Type Description Double | Improve this Doc View Source Bounds Declaration public AxisAlignedBox2d Bounds { get; } Property Value Type Description AxisAlignedBox2d | Improve this Doc View Source IsClockwise Declaration public bool IsClockwise { get; } Property Value Type Description Boolean | Improve this Doc View Source Item[Int32] Declaration public Vector2d this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Vector2d | Improve this Doc View Source Perimeter Declaration public double Perimeter { get; } Property Value Type Description Double | Improve this Doc View Source SignedArea Declaration public double SignedArea { get; } Property Value Type Description Double | Improve this Doc View Source Start Declaration public Vector2d Start { get; } Property Value Type Description Vector2d | Improve this Doc View Source VertexCount Declaration public int VertexCount { get; } Property Value Type Description Int32 | Improve this Doc View Source Vertices Declaration public ReadOnlyCollection<Vector2d> Vertices { get; } Property Value Type Description ReadOnlyCollection < Vector2d > Methods | Improve this Doc View Source AppendVertex(Vector2d) Declaration public void AppendVertex(Vector2d v) Parameters Type Name Description Vector2d v | Improve this Doc View Source AppendVertices(IEnumerable<Vector2d>) Declaration public void AppendVertices(IEnumerable<Vector2d> v) Parameters Type Name Description IEnumerable < Vector2d > v | Improve this Doc View Source Chamfer(Double, Double, Double) Declaration public void Chamfer(double chamfer_dist, double minConvexAngleDeg = 30, double minConcaveAngleDeg = 30) Parameters Type Name Description Double chamfer_dist Double minConvexAngleDeg Double minConcaveAngleDeg | Improve this Doc View Source Contains(Polygon2d) Declaration public bool Contains(Polygon2d o) Parameters Type Name Description Polygon2d o Returns Type Description Boolean | Improve this Doc View Source Contains(Segment2d) Checks that all points on a segment are within the area defined by the Polygon2d. Declaration public bool Contains(Segment2d o) Parameters Type Name Description Segment2d o Returns Type Description Boolean | Improve this Doc View Source Contains(Vector2d) Returns true if point inside polygon, using fast winding-number computation Declaration public bool Contains(Vector2d P) Parameters Type Name Description Vector2d P Returns Type Description Boolean | Improve this Doc View Source DistanceSquared(Vector2d) Declaration public double DistanceSquared(Vector2d p) Parameters Type Name Description Vector2d p Returns Type Description Double | Improve this Doc View Source DistanceSquared(Vector2d, out Int32, out Double) Declaration public double DistanceSquared(Vector2d p, out int iNearSeg, out double fNearSegT) Parameters Type Name Description Vector2d p Int32 iNearSeg Double fNearSegT Returns Type Description Double | Improve this Doc View Source Duplicate() Declaration public virtual Polygon2d Duplicate() Returns Type Description Polygon2d | Improve this Doc View Source FindIntersections(Polygon2d) Declaration public List<Vector2d> FindIntersections(Polygon2d o) Parameters Type Name Description Polygon2d o Returns Type Description List < Vector2d > | Improve this Doc View Source GetBounds() Declaration public AxisAlignedBox2d GetBounds() Returns Type Description AxisAlignedBox2d | Improve this Doc View Source GetNormal(Int32) Normal at vertex i, which is perp to tangent direction, which is not so intuitive if edges have very different lengths. Points \"inward\" for clockwise polygon, outward for counter-clockwise Declaration public Vector2d GetNormal(int i) Parameters Type Name Description Int32 i Returns Type Description Vector2d | Improve this Doc View Source GetNormal(Int32, Double) Declaration public Vector2d GetNormal(int iSeg, double segT) Parameters Type Name Description Int32 iSeg Double segT Returns Type Description Vector2d | Improve this Doc View Source GetNormal_FaceAvg(Int32) Construct normal at poly vertex by averaging face normals. This is equivalent (?) to angle-based normal, ie is local/independent of segment lengths. Points \"inward\" for clockwise polygon, outward for counter-clockwise Declaration public Vector2d GetNormal_FaceAvg(int i) Parameters Type Name Description Int32 i Returns Type Description Vector2d | Improve this Doc View Source GetTangent(Int32) Declaration public Vector2d GetTangent(int i) Parameters Type Name Description Int32 i Returns Type Description Vector2d | Improve this Doc View Source Intersects(Polygon2d) Declaration public bool Intersects(Polygon2d o) Parameters Type Name Description Polygon2d o Returns Type Description Boolean | Improve this Doc View Source Intersects(Segment2d) Checks if any point on a segment is within the area defined by the Polygon2d. Declaration public bool Intersects(Segment2d o) Parameters Type Name Description Segment2d o Returns Type Description Boolean | Improve this Doc View Source MakeCircle(Double, Int32, Double) Declaration public static Polygon2d MakeCircle(double fRadius, int nSteps, double angleShiftRad = 0) Parameters Type Name Description Double fRadius Int32 nSteps Double angleShiftRad Returns Type Description Polygon2d | Improve this Doc View Source MakeRectangle(Vector2d, Double, Double) Declaration public static Polygon2d MakeRectangle(Vector2d center, double width, double height) Parameters Type Name Description Vector2d center Double width Double height Returns Type Description Polygon2d | Improve this Doc View Source MinimalBoundingBox(Double) Return minimal bounding box of vertices, computed to epsilon tolerance Declaration public Box2d MinimalBoundingBox(double epsilon) Parameters Type Name Description Double epsilon Returns Type Description Box2d | Improve this Doc View Source NeighboursP(Int32, ref Vector2d, ref Vector2d) Declaration public void NeighboursP(int iVertex, ref Vector2d p0, ref Vector2d p1) Parameters Type Name Description Int32 iVertex Vector2d p0 Vector2d p1 | Improve this Doc View Source NeighboursV(Int32, ref Vector2d, ref Vector2d, Boolean) Declaration public void NeighboursV(int iVertex, ref Vector2d v0, ref Vector2d v1, bool bNormalize = false) Parameters Type Name Description Int32 iVertex Vector2d v0 Vector2d v1 Boolean bNormalize | Improve this Doc View Source OpeningAngleDeg(Int32) Declaration public double OpeningAngleDeg(int iVertex) Parameters Type Name Description Int32 iVertex Returns Type Description Double | Improve this Doc View Source PointAt(Int32, Double) Declaration public Vector2d PointAt(int iSegment, double fSegT) Parameters Type Name Description Int32 iSegment Double fSegT Returns Type Description Vector2d | Improve this Doc View Source PolyOffset(Double) offset polygon by fixed distance, by offsetting and intersecting edges. CCW polygon offsets \"outwards\", CW \"inwards\". Declaration public void PolyOffset(double dist) Parameters Type Name Description Double dist | Improve this Doc View Source RemoveVertex(Int32) Declaration public void RemoveVertex(int idx) Parameters Type Name Description Int32 idx | Improve this Doc View Source Reverse() Declaration public void Reverse() | Improve this Doc View Source Rotate(Matrix2d, Vector2d) Declaration public Polygon2d Rotate(Matrix2d rotation, Vector2d origin) Parameters Type Name Description Matrix2d rotation Vector2d origin Returns Type Description Polygon2d | Improve this Doc View Source Scale(Vector2d, Vector2d) Declaration public Polygon2d Scale(Vector2d scale, Vector2d origin) Parameters Type Name Description Vector2d scale Vector2d origin Returns Type Description Polygon2d | Improve this Doc View Source Segment(Int32) Declaration public Segment2d Segment(int iSegment) Parameters Type Name Description Int32 iSegment Returns Type Description Segment2d | Improve this Doc View Source SegmentItr() Declaration public IEnumerable<Segment2d> SegmentItr() Returns Type Description IEnumerable < Segment2d > | Improve this Doc View Source SetVertices(List<Vector2d>, Boolean) Declaration public void SetVertices(List<Vector2d> newVertices, bool bTakeOwnership) Parameters Type Name Description List < Vector2d > newVertices Boolean bTakeOwnership | Improve this Doc View Source Simplify(Double, Double, Boolean) Declaration public void Simplify(double clusterTol = 0.0001, double lineDeviationTol = 0.01, bool bSimplifyStraightLines = true) Parameters Type Name Description Double clusterTol Double lineDeviationTol Boolean bSimplifyStraightLines | Improve this Doc View Source Transform(ITransform2) Declaration public Polygon2d Transform(ITransform2 xform) Parameters Type Name Description ITransform2 xform Returns Type Description Polygon2d | Improve this Doc View Source Transform(Func<Vector2d, Vector2d>) Declaration public Polygon2d Transform(Func<Vector2d, Vector2d> transformF) Parameters Type Name Description Func < Vector2d , Vector2d > transformF Returns Type Description Polygon2d | Improve this Doc View Source Translate(Vector2d) Declaration public Polygon2d Translate(Vector2d translate) Parameters Type Name Description Vector2d translate Returns Type Description Polygon2d | Improve this Doc View Source VerticesItr(Boolean) Declaration public IEnumerable<Vector2d> VerticesItr(bool bRepeatFirstAtEnd) Parameters Type Name Description Boolean bRepeatFirstAtEnd Returns Type Description IEnumerable < Vector2d > | Improve this Doc View Source VtxNormalOffset(Double, Boolean) Offset each point by dist along vertex normal direction (ie tangent-perp) CCW polygon offsets \"outwards\", CW \"inwards\". Declaration public void VtxNormalOffset(double dist, bool bUseFaceAvg = false) Parameters Type Name Description Double dist Boolean bUseFaceAvg | Improve this Doc View Source WindingIntegral(Vector2d) Compute winding integral at point P Declaration public double WindingIntegral(Vector2d P) Parameters Type Name Description Vector2d P Returns Type Description Double Implements IDuplicatable<T>"
  },
  "api/g3.Polygon2dBoxTree.html": {
    "href": "api/g3.Polygon2dBoxTree.html",
    "title": "Class Polygon2dBoxTree | ViRGIS VR GIS",
    "keywords": "Class Polygon2dBoxTree tree of Oriented Boxes (OBB) for a Polygon2d. Construction is sequential, ie pairs of segments are merged into boxes, then pairs of boxes, and so on [TODO] is this the best strategy? is there maybe some kind of sorting/sweepline algo? [TODO] would it make more sense to have more than just 2 segments at lowest level? Inheritance Object Polygon2dBoxTree Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class Polygon2dBoxTree Constructors | Improve this Doc View Source Polygon2dBoxTree(Polygon2d) Declaration public Polygon2dBoxTree(Polygon2d poly) Parameters Type Name Description Polygon2d poly Fields | Improve this Doc View Source Polygon Declaration public Polygon2d Polygon Field Value Type Description Polygon2d Methods | Improve this Doc View Source Distance(Vector2d) Declaration public double Distance(Vector2d pt) Parameters Type Name Description Vector2d pt Returns Type Description Double | Improve this Doc View Source DistanceSquared(Vector2d) Declaration public double DistanceSquared(Vector2d pt) Parameters Type Name Description Vector2d pt Returns Type Description Double | Improve this Doc View Source NearestPoint(Vector2d) Declaration public Vector2d NearestPoint(Vector2d pt) Parameters Type Name Description Vector2d pt Returns Type Description Vector2d | Improve this Doc View Source SquaredDistance(Vector2d, out Int32, out Double, Double) Declaration public double SquaredDistance(Vector2d pt, out int iNearSeg, out double fNearSegT, double max_dist = 1.7976931348623157E+308) Parameters Type Name Description Vector2d pt Int32 iNearSeg Double fNearSegT Double max_dist Returns Type Description Double"
  },
  "api/g3.Polygon2DCurve.html": {
    "href": "api/g3.Polygon2DCurve.html",
    "title": "Class Polygon2DCurve | ViRGIS VR GIS",
    "keywords": "Class Polygon2DCurve Wrapper for a Polygon2d that provides minimal IParametricCurve2D interface Inheritance Object Polygon2DCurve Implements IParametricCurve2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class Polygon2DCurve : IParametricCurve2d Fields | Improve this Doc View Source Polygon Declaration public Polygon2d Polygon Field Value Type Description Polygon2d Properties | Improve this Doc View Source ArcLength Declaration public double ArcLength { get; } Property Value Type Description Double | Improve this Doc View Source HasArcLength Declaration public bool HasArcLength { get; } Property Value Type Description Boolean | Improve this Doc View Source IsClosed Declaration public bool IsClosed { get; } Property Value Type Description Boolean | Improve this Doc View Source IsTransformable Declaration public bool IsTransformable { get; } Property Value Type Description Boolean | Improve this Doc View Source ParamLength Declaration public double ParamLength { get; } Property Value Type Description Double Methods | Improve this Doc View Source Clone() Declaration public IParametricCurve2d Clone() Returns Type Description IParametricCurve2d | Improve this Doc View Source Reverse() Declaration public void Reverse() | Improve this Doc View Source SampleArcLength(Double) Declaration public Vector2d SampleArcLength(double a) Parameters Type Name Description Double a Returns Type Description Vector2d | Improve this Doc View Source SampleT(Double) Declaration public Vector2d SampleT(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source TangentT(Double) Declaration public Vector2d TangentT(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source Transform(ITransform2) Declaration public void Transform(ITransform2 xform) Parameters Type Name Description ITransform2 xform Implements IParametricCurve2d"
  },
  "api/g3.PolygonFont2d.CharacterInfo.html": {
    "href": "api/g3.PolygonFont2d.CharacterInfo.html",
    "title": "Class PolygonFont2d.CharacterInfo | ViRGIS VR GIS",
    "keywords": "Class PolygonFont2d.CharacterInfo Inheritance Object PolygonFont2d.CharacterInfo Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class CharacterInfo Fields | Improve this Doc View Source Bounds Declaration public AxisAlignedBox2d Bounds Field Value Type Description AxisAlignedBox2d | Improve this Doc View Source Polygons Declaration public GeneralPolygon2d[] Polygons Field Value Type Description GeneralPolygon2d []"
  },
  "api/g3.PolygonFont2d.html": {
    "href": "api/g3.PolygonFont2d.html",
    "title": "Class PolygonFont2d | ViRGIS VR GIS",
    "keywords": "Class PolygonFont2d This class represents an outline font, where the outline is composed of polygons. Each font is a list of GeneralPolygon2D objects, so each outline may have 1 or more holes. (In fact, the mapping is [string,list_of_gpolygons], so you can actually keep entire strings together if desired) Inheritance Object PolygonFont2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class PolygonFont2d Constructors | Improve this Doc View Source PolygonFont2d() Declaration public PolygonFont2d() Fields | Improve this Doc View Source Characters Declaration public Dictionary<string, PolygonFont2d.CharacterInfo> Characters Field Value Type Description Dictionary < String , PolygonFont2d.CharacterInfo > | Improve this Doc View Source MaxBounds Declaration public AxisAlignedBox2d MaxBounds Field Value Type Description AxisAlignedBox2d Methods | Improve this Doc View Source AddCharacter(String, GeneralPolygon2d[]) Declaration public void AddCharacter(string s, GeneralPolygon2d[] polygons) Parameters Type Name Description String s GeneralPolygon2d [] polygons | Improve this Doc View Source GetCharacter(Char) Declaration public List<GeneralPolygon2d> GetCharacter(char c) Parameters Type Name Description Char c Returns Type Description List < GeneralPolygon2d > | Improve this Doc View Source GetCharacter(String) Declaration public List<GeneralPolygon2d> GetCharacter(string s) Parameters Type Name Description String s Returns Type Description List < GeneralPolygon2d > | Improve this Doc View Source GetCharacterBounds(Char) Declaration public AxisAlignedBox2d GetCharacterBounds(char c) Parameters Type Name Description Char c Returns Type Description AxisAlignedBox2d | Improve this Doc View Source HasCharacter(Char) Declaration public bool HasCharacter(char c) Parameters Type Name Description Char c Returns Type Description Boolean | Improve this Doc View Source ReadFont(Stream) Declaration public static PolygonFont2d ReadFont(Stream s) Parameters Type Name Description Stream s Returns Type Description PolygonFont2d | Improve this Doc View Source ReadFont(String) Declaration public static PolygonFont2d ReadFont(string filename) Parameters Type Name Description String filename Returns Type Description PolygonFont2d | Improve this Doc View Source Restore(PolygonFont2d, BinaryReader) Declaration public static void Restore(PolygonFont2d font, BinaryReader reader) Parameters Type Name Description PolygonFont2d font BinaryReader reader | Improve this Doc View Source Store(PolygonFont2d, BinaryWriter) Declaration public static void Store(PolygonFont2d font, BinaryWriter writer) Parameters Type Name Description PolygonFont2d font BinaryWriter writer"
  },
  "api/g3.PolyLine2d.html": {
    "href": "api/g3.PolyLine2d.html",
    "title": "Class PolyLine2d | ViRGIS VR GIS",
    "keywords": "Class PolyLine2d Inheritance Object PolyLine2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class PolyLine2d : IEnumerable<Vector2d>, IEnumerable Constructors | Improve this Doc View Source PolyLine2d() Declaration public PolyLine2d() | Improve this Doc View Source PolyLine2d(Polygon2d, Boolean) Declaration public PolyLine2d(Polygon2d copy, bool bDuplicateFirstLast) Parameters Type Name Description Polygon2d copy Boolean bDuplicateFirstLast | Improve this Doc View Source PolyLine2d(PolyLine2d) Declaration public PolyLine2d(PolyLine2d copy) Parameters Type Name Description PolyLine2d copy | Improve this Doc View Source PolyLine2d(Vector2d[]) Declaration public PolyLine2d(Vector2d[] v) Parameters Type Name Description Vector2d [] v | Improve this Doc View Source PolyLine2d(VectorArray2d) Declaration public PolyLine2d(VectorArray2d v) Parameters Type Name Description VectorArray2d v | Improve this Doc View Source PolyLine2d(IEnumerable<Vector2d>) Declaration public PolyLine2d(IEnumerable<Vector2d> copy) Parameters Type Name Description IEnumerable < Vector2d > copy | Improve this Doc View Source PolyLine2d(IList<Vector2d>) Declaration public PolyLine2d(IList<Vector2d> copy) Parameters Type Name Description IList < Vector2d > copy Fields | Improve this Doc View Source Timestamp Declaration public int Timestamp Field Value Type Description Int32 | Improve this Doc View Source vertices Declaration protected List<Vector2d> vertices Field Value Type Description List < Vector2d > Properties | Improve this Doc View Source ArcLength Declaration public double ArcLength { get; } Property Value Type Description Double | Improve this Doc View Source Bounds Declaration public AxisAlignedBox2d Bounds { get; } Property Value Type Description AxisAlignedBox2d | Improve this Doc View Source End Declaration public Vector2d End { get; } Property Value Type Description Vector2d | Improve this Doc View Source Item[Int32] Declaration public Vector2d this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Vector2d | Improve this Doc View Source Length Declaration [Obsolete(\"This method name is confusing. Will remove in future. Use ArcLength instead\")] public double Length { get; } Property Value Type Description Double | Improve this Doc View Source Start Declaration public Vector2d Start { get; } Property Value Type Description Vector2d | Improve this Doc View Source VertexCount Declaration public int VertexCount { get; } Property Value Type Description Int32 | Improve this Doc View Source Vertices Declaration public ReadOnlyCollection<Vector2d> Vertices { get; } Property Value Type Description ReadOnlyCollection < Vector2d > Methods | Improve this Doc View Source AppendVertex(Vector2d) Declaration public virtual void AppendVertex(Vector2d v) Parameters Type Name Description Vector2d v | Improve this Doc View Source AppendVertices(IEnumerable<Vector2d>) Declaration public virtual void AppendVertices(IEnumerable<Vector2d> v) Parameters Type Name Description IEnumerable < Vector2d > v | Improve this Doc View Source DistanceSquared(Vector2d) Declaration public double DistanceSquared(Vector2d point) Parameters Type Name Description Vector2d point Returns Type Description Double | Improve this Doc View Source GetBounds() Declaration public AxisAlignedBox2d GetBounds() Returns Type Description AxisAlignedBox2d | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<Vector2d> GetEnumerator() Returns Type Description IEnumerator < Vector2d > | Improve this Doc View Source GetNormal(Int32) Declaration public Vector2d GetNormal(int i) Parameters Type Name Description Int32 i Returns Type Description Vector2d | Improve this Doc View Source GetTangent(Int32) Declaration public Vector2d GetTangent(int i) Parameters Type Name Description Int32 i Returns Type Description Vector2d | Improve this Doc View Source MakeBoxSpiral(Vector2d, Double, Double) Declaration public static PolyLine2d MakeBoxSpiral(Vector2d center, double len, double spacing) Parameters Type Name Description Vector2d center Double len Double spacing Returns Type Description PolyLine2d | Improve this Doc View Source Reverse() Declaration public virtual void Reverse() | Improve this Doc View Source Segment(Int32) Declaration public Segment2d Segment(int iSegment) Parameters Type Name Description Int32 iSegment Returns Type Description Segment2d | Improve this Doc View Source SegmentItr() Declaration public IEnumerable<Segment2d> SegmentItr() Returns Type Description IEnumerable < Segment2d > | Improve this Doc View Source Simplify(Double, Double, Boolean) Declaration public virtual void Simplify(double clusterTol = 0.0001, double lineDeviationTol = 0.01, bool bSimplifyStraightLines = true) Parameters Type Name Description Double clusterTol Double lineDeviationTol Boolean bSimplifyStraightLines | Improve this Doc View Source simplifyDP(Double, Vector2d[], Int32, Int32, Boolean[]) Declaration protected static void simplifyDP(double tol, Vector2d[] v, int j, int k, bool[] mk) Parameters Type Name Description Double tol Vector2d [] v Int32 j Int32 k Boolean [] mk | Improve this Doc View Source Transform(ITransform2) Declaration public PolyLine2d Transform(ITransform2 xform) Parameters Type Name Description ITransform2 xform Returns Type Description PolyLine2d | Improve this Doc View Source Trim(Double) make polyline shorter by removing each_end_dist from start and end Declaration public bool Trim(double each_end_dist) Parameters Type Name Description Double each_end_dist Returns Type Description Boolean | Improve this Doc View Source TrimEnd(Double) make polyline shorter by dist length, by removing from end Declaration public bool TrimEnd(double dist) Parameters Type Name Description Double dist Returns Type Description Boolean | Improve this Doc View Source TrimStart(Double) make polyline shorter by dist length, by removing from front Declaration public bool TrimStart(double dist) Parameters Type Name Description Double dist Returns Type Description Boolean | Improve this Doc View Source VertexOffset(Double) Offset each point by dist along vertex normal direction (ie tangent-perp) Declaration public void VertexOffset(double dist) Parameters Type Name Description Double dist"
  },
  "api/g3.PolyLine2DCurve.html": {
    "href": "api/g3.PolyLine2DCurve.html",
    "title": "Class PolyLine2DCurve | ViRGIS VR GIS",
    "keywords": "Class PolyLine2DCurve Wrapper for a PolyLine2d that provides minimal IParametricCurve2D interface Inheritance Object PolyLine2DCurve Implements IParametricCurve2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class PolyLine2DCurve : IParametricCurve2d Fields | Improve this Doc View Source Polyline Declaration public PolyLine2d Polyline Field Value Type Description PolyLine2d Properties | Improve this Doc View Source ArcLength Declaration public double ArcLength { get; } Property Value Type Description Double | Improve this Doc View Source HasArcLength Declaration public bool HasArcLength { get; } Property Value Type Description Boolean | Improve this Doc View Source IsClosed Declaration public bool IsClosed { get; } Property Value Type Description Boolean | Improve this Doc View Source IsTransformable Declaration public bool IsTransformable { get; } Property Value Type Description Boolean | Improve this Doc View Source ParamLength Declaration public double ParamLength { get; } Property Value Type Description Double Methods | Improve this Doc View Source Clone() Declaration public IParametricCurve2d Clone() Returns Type Description IParametricCurve2d | Improve this Doc View Source Reverse() Declaration public void Reverse() | Improve this Doc View Source SampleArcLength(Double) Declaration public Vector2d SampleArcLength(double a) Parameters Type Name Description Double a Returns Type Description Vector2d | Improve this Doc View Source SampleT(Double) Declaration public Vector2d SampleT(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source TangentT(Double) Declaration public Vector2d TangentT(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source Transform(ITransform2) Declaration public void Transform(ITransform2 xform) Parameters Type Name Description ITransform2 xform Implements IParametricCurve2d"
  },
  "api/g3.PolyLine3d.html": {
    "href": "api/g3.PolyLine3d.html",
    "title": "Class PolyLine3d | ViRGIS VR GIS",
    "keywords": "Class PolyLine3d Inheritance Object PolyLine3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class PolyLine3d : IEnumerable<Vector3d>, IEnumerable Constructors | Improve this Doc View Source PolyLine3d() Declaration public PolyLine3d() | Improve this Doc View Source PolyLine3d(PolyLine3d) Declaration public PolyLine3d(PolyLine3d copy) Parameters Type Name Description PolyLine3d copy | Improve this Doc View Source PolyLine3d(Vector3d[]) Declaration public PolyLine3d(Vector3d[] v) Parameters Type Name Description Vector3d [] v | Improve this Doc View Source PolyLine3d(VectorArray3d) Declaration public PolyLine3d(VectorArray3d v) Parameters Type Name Description VectorArray3d v Fields | Improve this Doc View Source Timestamp Declaration public int Timestamp Field Value Type Description Int32 | Improve this Doc View Source vertices Declaration protected List<Vector3d> vertices Field Value Type Description List < Vector3d > Properties | Improve this Doc View Source End Declaration public Vector3d End { get; } Property Value Type Description Vector3d | Improve this Doc View Source Item[Int32] Declaration public Vector3d this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Vector3d | Improve this Doc View Source Start Declaration public Vector3d Start { get; } Property Value Type Description Vector3d | Improve this Doc View Source VertexCount Declaration public int VertexCount { get; } Property Value Type Description Int32 | Improve this Doc View Source Vertices Declaration public ReadOnlyCollection<Vector3d> Vertices { get; } Property Value Type Description ReadOnlyCollection < Vector3d > Methods | Improve this Doc View Source AppendVertex(Vector3d) Declaration public void AppendVertex(Vector3d v) Parameters Type Name Description Vector3d v | Improve this Doc View Source GetBounds() Declaration public AxisAlignedBox3d GetBounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<Vector3d> GetEnumerator() Returns Type Description IEnumerator < Vector3d > | Improve this Doc View Source GetTangent(Int32) Declaration public Vector3d GetTangent(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3d | Improve this Doc View Source SegmentItr() Declaration public IEnumerable<Segment3d> SegmentItr() Returns Type Description IEnumerable < Segment3d >"
  },
  "api/g3.PolySimplification2.html": {
    "href": "api/g3.PolySimplification2.html",
    "title": "Class PolySimplification2 | ViRGIS VR GIS",
    "keywords": "Class PolySimplification2 2D Polyline/Polygon simplification. This is a more complex approach than Polygon.Simplify(), which uses sequential vtx clustering and then runs douglas-peucker algorithm. That method can end up modifying long straight segments, which is not ideal in many contexts (eg manufacturing). Strategy here is : 1) find runs of vertices that are very close to straight lines (default 0.01mm deviation tol) 2) find all straight segments longer than threshold distance (default 2mm) 3) discard vertices that deviate less than tolerance (default = 0.2mm) from sequential-points-segment, unless they are required to preserve straight segments [TODO] currently doing greedy search in 1,3. Could do more optimal search. [TODO] currently measuring deviation of p1...pN-1 from line [p0,pN] for points [p0,p1,...pN]. could alternately fit best segment to p1...pN (p0 is already fixed). [TODO] 2d variant of variational shape segmentation? Inheritance Object PolySimplification2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class PolySimplification2 Constructors | Improve this Doc View Source PolySimplification2(Polygon2d) Declaration public PolySimplification2(Polygon2d polygon) Parameters Type Name Description Polygon2d polygon | Improve this Doc View Source PolySimplification2(PolyLine2d) Declaration public PolySimplification2(PolyLine2d polycurve) Parameters Type Name Description PolyLine2d polycurve Fields | Improve this Doc View Source PreserveStraightSegLen After collapsing straight lines, any segment longer than this distance is explicitly preserved Declaration public double PreserveStraightSegLen Field Value Type Description Double | Improve this Doc View Source Result Declaration public List<Vector2d> Result Field Value Type Description List < Vector2d > | Improve this Doc View Source SimplifyDeviationThreshold we skip vertices that deviate less than this distance from the currently-accumulated line segment Declaration public double SimplifyDeviationThreshold Field Value Type Description Double | Improve this Doc View Source StraightLineDeviationThreshold A series of points that deviates less than this distance from a line segment are considered 'on' that line Declaration public double StraightLineDeviationThreshold Field Value Type Description Double Methods | Improve this Doc View Source Simplify() Declaration public void Simplify() | Improve this Doc View Source Simplify(GeneralPolygon2d, Double) simplify outer and holes of a polygon solid with same thresholds Declaration public static void Simplify(GeneralPolygon2d solid, double deviationThresh) Parameters Type Name Description GeneralPolygon2d solid Double deviationThresh"
  },
  "api/g3.ProgressCancel.html": {
    "href": "api/g3.ProgressCancel.html",
    "title": "Class ProgressCancel | ViRGIS VR GIS",
    "keywords": "Class ProgressCancel This class is intended to be passed to long-running computes to 1) provide progress info back to caller (not implemented yet) 2) allow caller to cancel the computation Inheritance Object ProgressCancel Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ProgressCancel Constructors | Improve this Doc View Source ProgressCancel(ICancelSource) Declaration public ProgressCancel(ICancelSource source) Parameters Type Name Description ICancelSource source | Improve this Doc View Source ProgressCancel(Func<Boolean>) Declaration public ProgressCancel(Func<bool> cancelF) Parameters Type Name Description Func < Boolean > cancelF Fields | Improve this Doc View Source Source Declaration public ICancelSource Source Field Value Type Description ICancelSource Methods | Improve this Doc View Source Cancelled() Check if client would like to cancel Declaration public bool Cancelled() Returns Type Description Boolean"
  },
  "api/g3.PuncturedDiscGenerator.html": {
    "href": "api/g3.PuncturedDiscGenerator.html",
    "title": "Class PuncturedDiscGenerator | ViRGIS VR GIS",
    "keywords": "Class PuncturedDiscGenerator Inheritance Object MeshGenerator PuncturedDiscGenerator Inherited Members MeshGenerator.vertices MeshGenerator.uv MeshGenerator.normals MeshGenerator.triangles MeshGenerator.groups MeshGenerator.WantUVs MeshGenerator.WantNormals MeshGenerator.WantGroups MeshGenerator.Clockwise MeshGenerator.MakeMesh(SimpleMesh) MeshGenerator.MakeSimpleMesh() MeshGenerator.MakeMesh(DMesh3) MeshGenerator.MakeDMesh() MeshGenerator.MakeMesh(NTMesh3) MeshGenerator.MakeNTMesh() MeshGenerator.duplicate_vertex_span(Int32, Int32) MeshGenerator.append_disc(Int32, Int32, Int32, Boolean, Boolean, Int32, Int32) MeshGenerator.append_rectangle(Int32, Int32, Int32, Int32, Boolean, Int32, Int32) MeshGenerator.append_2d_disc_segment(Int32, Int32, Int32, Int32, Boolean, Int32, Int32, Int32, Double) MeshGenerator.estimate_normal(Int32, Int32, Int32) MeshGenerator.bilerp(Vector3d, Vector3d, Vector3d, Vector3d, Double, Double) MeshGenerator.bilerp(Vector2d, Vector2d, Vector2d, Vector2d, Double, Double) MeshGenerator.bilerp(Vector2f, Vector2f, Vector2f, Vector2f, Single, Single) MeshGenerator.bilerp(Vector3i, Vector3i, Vector3i, Vector3i, Double, Double) MeshGenerator.lerp(Vector3i, Vector3i, Double) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class PuncturedDiscGenerator : MeshGenerator Fields | Improve this Doc View Source EndAngleDeg Declaration public float EndAngleDeg Field Value Type Description Single | Improve this Doc View Source InnerRadius Declaration public float InnerRadius Field Value Type Description Single | Improve this Doc View Source OuterRadius Declaration public float OuterRadius Field Value Type Description Single | Improve this Doc View Source Slices Declaration public int Slices Field Value Type Description Int32 | Improve this Doc View Source StartAngleDeg Declaration public float StartAngleDeg Field Value Type Description Single Methods | Improve this Doc View Source Generate() Declaration public override MeshGenerator Generate() Returns Type Description MeshGenerator Overrides MeshGenerator.Generate()"
  },
  "api/g3.QuadraticFit2.html": {
    "href": "api/g3.QuadraticFit2.html",
    "title": "Class QuadraticFit2 | ViRGIS VR GIS",
    "keywords": "Class QuadraticFit2 Inheritance Object QuadraticFit2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class QuadraticFit2 Methods | Improve this Doc View Source Fit(Vector2d[], Double[]) Declaration public static double Fit(Vector2d[] points, double[] coefficients) Parameters Type Name Description Vector2d [] points Double [] coefficients Returns Type Description Double | Improve this Doc View Source FitCircle2(Vector2d[], out Circle2d) Declaration public static double FitCircle2(Vector2d[] points, out Circle2d circle) Parameters Type Name Description Vector2d [] points Circle2d circle Returns Type Description Double"
  },
  "api/g3.QuadricError.html": {
    "href": "api/g3.QuadricError.html",
    "title": "Struct QuadricError | ViRGIS VR GIS",
    "keywords": "Struct QuadricError Stores quadratic function that evaluates distance to plane, in minimal 10-coefficient form, following http://mgarland.org/files/papers/qtheory.pdf symmetric matrix A vector b constant c Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct QuadricError Constructors | Improve this Doc View Source QuadricError(ref QuadricError, ref QuadricError) Declaration public QuadricError(ref QuadricError a, ref QuadricError b) Parameters Type Name Description QuadricError a QuadricError b | Improve this Doc View Source QuadricError(ref Vector3d, ref Vector3d) Declaration public QuadricError(ref Vector3d n, ref Vector3d p) Parameters Type Name Description Vector3d n Vector3d p Fields | Improve this Doc View Source Axx Declaration public double Axx Field Value Type Description Double | Improve this Doc View Source Axy Declaration public double Axy Field Value Type Description Double | Improve this Doc View Source Axz Declaration public double Axz Field Value Type Description Double | Improve this Doc View Source Ayy Declaration public double Ayy Field Value Type Description Double | Improve this Doc View Source Ayz Declaration public double Ayz Field Value Type Description Double | Improve this Doc View Source Azz Declaration public double Azz Field Value Type Description Double | Improve this Doc View Source bx Declaration public double bx Field Value Type Description Double | Improve this Doc View Source by Declaration public double by Field Value Type Description Double | Improve this Doc View Source bz Declaration public double bz Field Value Type Description Double | Improve this Doc View Source c Declaration public double c Field Value Type Description Double | Improve this Doc View Source Zero Declaration public static readonly QuadricError Zero Field Value Type Description QuadricError Methods | Improve this Doc View Source Add(Double, ref QuadricError) Declaration public void Add(double w, ref QuadricError b) Parameters Type Name Description Double w QuadricError b | Improve this Doc View Source Evaluate(ref Vector3d) returns pAp + 2*dot(p,b) + c Declaration public double Evaluate(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Double | Improve this Doc View Source OptimalPoint(ref Vector3d) Declaration public bool OptimalPoint(ref Vector3d result) Parameters Type Name Description Vector3d result Returns Type Description Boolean"
  },
  "api/g3.Quaterniond.html": {
    "href": "api/g3.Quaterniond.html",
    "title": "Struct Quaterniond | ViRGIS VR GIS",
    "keywords": "Struct Quaterniond Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Quaterniond Constructors | Improve this Doc View Source Quaterniond(Matrix3d) Declaration public Quaterniond(Matrix3d mat) Parameters Type Name Description Matrix3d mat | Improve this Doc View Source Quaterniond(Quaterniond) Declaration public Quaterniond(Quaterniond q2) Parameters Type Name Description Quaterniond q2 | Improve this Doc View Source Quaterniond(Quaterniond, Quaterniond, Double) Declaration public Quaterniond(Quaterniond p, Quaterniond q, double t) Parameters Type Name Description Quaterniond p Quaterniond q Double t | Improve this Doc View Source Quaterniond(Vector3d, Vector3d) Declaration public Quaterniond(Vector3d vFrom, Vector3d vTo) Parameters Type Name Description Vector3d vFrom Vector3d vTo | Improve this Doc View Source Quaterniond(Vector3d, Double) Declaration public Quaterniond(Vector3d axis, double AngleDeg) Parameters Type Name Description Vector3d axis Double AngleDeg | Improve this Doc View Source Quaterniond(Double, Double, Double, Double) Declaration public Quaterniond(double x, double y, double z, double w) Parameters Type Name Description Double x Double y Double z Double w | Improve this Doc View Source Quaterniond(Double[]) Declaration public Quaterniond(double[] v2) Parameters Type Name Description Double [] v2 Fields | Improve this Doc View Source Identity Declaration public static readonly Quaterniond Identity Field Value Type Description Quaterniond | Improve this Doc View Source w Declaration public double w Field Value Type Description Double | Improve this Doc View Source x Declaration public double x Field Value Type Description Double | Improve this Doc View Source y Declaration public double y Field Value Type Description Double | Improve this Doc View Source z Declaration public double z Field Value Type Description Double | Improve this Doc View Source Zero Declaration public static readonly Quaterniond Zero Field Value Type Description Quaterniond Properties | Improve this Doc View Source AxisX Declaration public Vector3d AxisX { get; } Property Value Type Description Vector3d | Improve this Doc View Source AxisY Declaration public Vector3d AxisY { get; } Property Value Type Description Vector3d | Improve this Doc View Source AxisZ Declaration public Vector3d AxisZ { get; } Property Value Type Description Vector3d | Improve this Doc View Source Item[Int32] Declaration public double this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Double | Improve this Doc View Source Length Declaration public double Length { get; } Property Value Type Description Double | Improve this Doc View Source LengthSquared Declaration public double LengthSquared { get; } Property Value Type Description Double | Improve this Doc View Source Normalized Declaration public Quaterniond Normalized { get; } Property Value Type Description Quaterniond Methods | Improve this Doc View Source AxisAngleD(Vector3d, Double) Declaration public static Quaterniond AxisAngleD(Vector3d axis, double angleDeg) Parameters Type Name Description Vector3d axis Double angleDeg Returns Type Description Quaterniond | Improve this Doc View Source AxisAngleR(Vector3d, Double) Declaration public static Quaterniond AxisAngleR(Vector3d axis, double angleRad) Parameters Type Name Description Vector3d axis Double angleRad Returns Type Description Quaterniond | Improve this Doc View Source Conjugate() Equivalent to transpose of matrix. similar to inverse, but w/o normalization... Declaration public Quaterniond Conjugate() Returns Type Description Quaterniond | Improve this Doc View Source Dot(Quaterniond) Declaration public double Dot(Quaterniond q2) Parameters Type Name Description Quaterniond q2 Returns Type Description Double | Improve this Doc View Source EpsilonEqual(Quaterniond, Double) Declaration public bool EpsilonEqual(Quaterniond q2, double epsilon) Parameters Type Name Description Quaterniond q2 Double epsilon Returns Type Description Boolean | Improve this Doc View Source FromTo(Vector3d, Vector3d) Declaration public static Quaterniond FromTo(Vector3d vFrom, Vector3d vTo) Parameters Type Name Description Vector3d vFrom Vector3d vTo Returns Type Description Quaterniond | Improve this Doc View Source FromToConstrained(Vector3d, Vector3d, Vector3d) Declaration public static Quaterniond FromToConstrained(Vector3d vFrom, Vector3d vTo, Vector3d vAround) Parameters Type Name Description Vector3d vFrom Vector3d vTo Vector3d vAround Returns Type Description Quaterniond | Improve this Doc View Source Inverse() Declaration public Quaterniond Inverse() Returns Type Description Quaterniond | Improve this Doc View Source Inverse(Quaterniond) Declaration public static Quaterniond Inverse(Quaterniond q) Parameters Type Name Description Quaterniond q Returns Type Description Quaterniond | Improve this Doc View Source Normalize(Double) Declaration public double Normalize(double epsilon = 0) Parameters Type Name Description Double epsilon Returns Type Description Double | Improve this Doc View Source SetAxisAngleD(Vector3d, Double) Declaration public void SetAxisAngleD(Vector3d axis, double AngleDeg) Parameters Type Name Description Vector3d axis Double AngleDeg | Improve this Doc View Source SetFromRotationMatrix(Matrix3d) Declaration public void SetFromRotationMatrix(Matrix3d rot) Parameters Type Name Description Matrix3d rot | Improve this Doc View Source SetFromRotationMatrix(ref Matrix3d) Declaration public void SetFromRotationMatrix(ref Matrix3d rot) Parameters Type Name Description Matrix3d rot | Improve this Doc View Source SetFromTo(Vector3d, Vector3d) Declaration public void SetFromTo(Vector3d vFrom, Vector3d vTo) Parameters Type Name Description Vector3d vFrom Vector3d vTo | Improve this Doc View Source SetToSlerp(Quaterniond, Quaterniond, Double) Declaration public void SetToSlerp(Quaterniond p, Quaterniond q, double t) Parameters Type Name Description Quaterniond p Quaterniond q Double t | Improve this Doc View Source Slerp(Quaterniond, Quaterniond, Double) Declaration public static Quaterniond Slerp(Quaterniond p, Quaterniond q, double t) Parameters Type Name Description Quaterniond p Quaterniond q Double t Returns Type Description Quaterniond | Improve this Doc View Source ToRotationMatrix() Declaration public Matrix3d ToRotationMatrix() Returns Type Description Matrix3d | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() | Improve this Doc View Source ToString(String) Declaration public string ToString(string fmt) Parameters Type Name Description String fmt Returns Type Description String Operators | Improve this Doc View Source Addition(Quaterniond, Quaterniond) Declaration public static Quaterniond operator +(Quaterniond q1, Quaterniond q2) Parameters Type Name Description Quaterniond q1 Quaterniond q2 Returns Type Description Quaterniond | Improve this Doc View Source Explicit(Quaterniond to Quaternionf) Declaration public static explicit operator Quaternionf(Quaterniond q) Parameters Type Name Description Quaterniond q Returns Type Description Quaternionf | Improve this Doc View Source Implicit(Quaternionf to Quaterniond) Declaration public static implicit operator Quaterniond(Quaternionf q) Parameters Type Name Description Quaternionf q Returns Type Description Quaterniond | Improve this Doc View Source Multiply(Quaterniond, Quaterniond) Declaration public static Quaterniond operator *(Quaterniond a, Quaterniond b) Parameters Type Name Description Quaterniond a Quaterniond b Returns Type Description Quaterniond | Improve this Doc View Source Multiply(Quaterniond, Vector3d) Declaration public static Vector3d operator *(Quaterniond q, Vector3d v) Parameters Type Name Description Quaterniond q Vector3d v Returns Type Description Vector3d | Improve this Doc View Source Multiply(Quaterniond, Double) Declaration public static Quaterniond operator *(Quaterniond q1, double d) Parameters Type Name Description Quaterniond q1 Double d Returns Type Description Quaterniond | Improve this Doc View Source Multiply(Double, Quaterniond) Declaration public static Quaterniond operator *(double d, Quaterniond q1) Parameters Type Name Description Double d Quaterniond q1 Returns Type Description Quaterniond | Improve this Doc View Source Subtraction(Quaterniond, Quaterniond) Declaration public static Quaterniond operator -(Quaterniond q1, Quaterniond q2) Parameters Type Name Description Quaterniond q1 Quaterniond q2 Returns Type Description Quaterniond | Improve this Doc View Source UnaryNegation(Quaterniond) Declaration public static Quaterniond operator -(Quaterniond q2) Parameters Type Name Description Quaterniond q2 Returns Type Description Quaterniond"
  },
  "api/g3.Quaternionf.html": {
    "href": "api/g3.Quaternionf.html",
    "title": "Struct Quaternionf | ViRGIS VR GIS",
    "keywords": "Struct Quaternionf Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Quaternionf : IComparable<Quaternionf>, IEquatable<Quaternionf> Constructors | Improve this Doc View Source Quaternionf(Matrix3f) Declaration public Quaternionf(Matrix3f mat) Parameters Type Name Description Matrix3f mat | Improve this Doc View Source Quaternionf(Quaternionf) Declaration public Quaternionf(Quaternionf q2) Parameters Type Name Description Quaternionf q2 | Improve this Doc View Source Quaternionf(Quaternionf, Quaternionf, Single) Declaration public Quaternionf(Quaternionf p, Quaternionf q, float t) Parameters Type Name Description Quaternionf p Quaternionf q Single t | Improve this Doc View Source Quaternionf(Vector3f, Vector3f) Declaration public Quaternionf(Vector3f vFrom, Vector3f vTo) Parameters Type Name Description Vector3f vFrom Vector3f vTo | Improve this Doc View Source Quaternionf(Vector3f, Single) Declaration public Quaternionf(Vector3f axis, float AngleDeg) Parameters Type Name Description Vector3f axis Single AngleDeg | Improve this Doc View Source Quaternionf(Single, Single, Single, Single) Declaration public Quaternionf(float x, float y, float z, float w) Parameters Type Name Description Single x Single y Single z Single w | Improve this Doc View Source Quaternionf(Single[]) Declaration public Quaternionf(float[] v2) Parameters Type Name Description Single [] v2 Fields | Improve this Doc View Source Identity Declaration public static readonly Quaternionf Identity Field Value Type Description Quaternionf | Improve this Doc View Source w Declaration public float w Field Value Type Description Single | Improve this Doc View Source x Declaration public float x Field Value Type Description Single | Improve this Doc View Source y Declaration public float y Field Value Type Description Single | Improve this Doc View Source z Declaration public float z Field Value Type Description Single | Improve this Doc View Source Zero Declaration public static readonly Quaternionf Zero Field Value Type Description Quaternionf Properties | Improve this Doc View Source AxisX Declaration public Vector3f AxisX { get; } Property Value Type Description Vector3f | Improve this Doc View Source AxisY Declaration public Vector3f AxisY { get; } Property Value Type Description Vector3f | Improve this Doc View Source AxisZ Declaration public Vector3f AxisZ { get; } Property Value Type Description Vector3f | Improve this Doc View Source Item[Int32] Declaration public float this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Single | Improve this Doc View Source Length Declaration public float Length { get; } Property Value Type Description Single | Improve this Doc View Source LengthSquared Declaration public float LengthSquared { get; } Property Value Type Description Single | Improve this Doc View Source Normalized Declaration public Quaternionf Normalized { get; } Property Value Type Description Quaternionf Methods | Improve this Doc View Source AxisAngleD(Vector3f, Single) Declaration public static Quaternionf AxisAngleD(Vector3f axis, float angleDeg) Parameters Type Name Description Vector3f axis Single angleDeg Returns Type Description Quaternionf | Improve this Doc View Source AxisAngleR(Vector3f, Single) Declaration public static Quaternionf AxisAngleR(Vector3f axis, float angleRad) Parameters Type Name Description Vector3f axis Single angleRad Returns Type Description Quaternionf | Improve this Doc View Source CompareTo(Quaternionf) Declaration public int CompareTo(Quaternionf other) Parameters Type Name Description Quaternionf other Returns Type Description Int32 | Improve this Doc View Source Dot(Quaternionf) Declaration public float Dot(Quaternionf q2) Parameters Type Name Description Quaternionf q2 Returns Type Description Single | Improve this Doc View Source EpsilonEqual(Quaternionf, Single) Declaration public bool EpsilonEqual(Quaternionf q2, float epsilon) Parameters Type Name Description Quaternionf q2 Single epsilon Returns Type Description Boolean | Improve this Doc View Source Equals(Quaternionf) Declaration public bool Equals(Quaternionf other) Parameters Type Name Description Quaternionf other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source FromTo(Vector3f, Vector3f) Declaration public static Quaternionf FromTo(Vector3f vFrom, Vector3f vTo) Parameters Type Name Description Vector3f vFrom Vector3f vTo Returns Type Description Quaternionf | Improve this Doc View Source FromToConstrained(Vector3f, Vector3f, Vector3f) Declaration public static Quaternionf FromToConstrained(Vector3f vFrom, Vector3f vTo, Vector3f vAround) Parameters Type Name Description Vector3f vFrom Vector3f vTo Vector3f vAround Returns Type Description Quaternionf | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source Inverse() Declaration public Quaternionf Inverse() Returns Type Description Quaternionf | Improve this Doc View Source Inverse(Quaternionf) Declaration public static Quaternionf Inverse(Quaternionf q) Parameters Type Name Description Quaternionf q Returns Type Description Quaternionf | Improve this Doc View Source InverseMultiply(ref Vector3d) Inverse() * v Declaration public Vector3d InverseMultiply(ref Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Vector3d | Improve this Doc View Source InverseMultiply(ref Vector3f) Inverse() * v Declaration public Vector3f InverseMultiply(ref Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description Vector3f | Improve this Doc View Source Normalize(Single) Declaration public float Normalize(float epsilon = 0F) Parameters Type Name Description Single epsilon Returns Type Description Single | Improve this Doc View Source SetAxisAngleD(Vector3f, Single) Declaration public void SetAxisAngleD(Vector3f axis, float AngleDeg) Parameters Type Name Description Vector3f axis Single AngleDeg | Improve this Doc View Source SetFromRotationMatrix(Matrix3f) Declaration public void SetFromRotationMatrix(Matrix3f rot) Parameters Type Name Description Matrix3f rot | Improve this Doc View Source SetFromTo(Vector3f, Vector3f) Declaration public void SetFromTo(Vector3f vFrom, Vector3f vTo) Parameters Type Name Description Vector3f vFrom Vector3f vTo | Improve this Doc View Source SetToSlerp(Quaternionf, Quaternionf, Single) Declaration public void SetToSlerp(Quaternionf p, Quaternionf q, float t) Parameters Type Name Description Quaternionf p Quaternionf q Single t | Improve this Doc View Source Slerp(Quaternionf, Quaternionf, Single) Declaration public static Quaternionf Slerp(Quaternionf p, Quaternionf q, float t) Parameters Type Name Description Quaternionf p Quaternionf q Single t Returns Type Description Quaternionf | Improve this Doc View Source ToRotationMatrix() Declaration public Matrix3f ToRotationMatrix() Returns Type Description Matrix3f | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() | Improve this Doc View Source ToString(String) Declaration public string ToString(string fmt) Parameters Type Name Description String fmt Returns Type Description String Operators | Improve this Doc View Source Equality(Quaternionf, Quaternionf) Declaration public static bool operator ==(Quaternionf a, Quaternionf b) Parameters Type Name Description Quaternionf a Quaternionf b Returns Type Description Boolean | Improve this Doc View Source Inequality(Quaternionf, Quaternionf) Declaration public static bool operator !=(Quaternionf a, Quaternionf b) Parameters Type Name Description Quaternionf a Quaternionf b Returns Type Description Boolean | Improve this Doc View Source Multiply(Quaternionf, Quaternionf) Declaration public static Quaternionf operator *(Quaternionf a, Quaternionf b) Parameters Type Name Description Quaternionf a Quaternionf b Returns Type Description Quaternionf | Improve this Doc View Source Multiply(Quaternionf, Vector3d) Declaration public static Vector3d operator *(Quaternionf q, Vector3d v) Parameters Type Name Description Quaternionf q Vector3d v Returns Type Description Vector3d | Improve this Doc View Source Multiply(Quaternionf, Vector3f) Declaration public static Vector3f operator *(Quaternionf q, Vector3f v) Parameters Type Name Description Quaternionf q Vector3f v Returns Type Description Vector3f | Improve this Doc View Source Subtraction(Quaternionf, Quaternionf) Declaration public static Quaternionf operator -(Quaternionf q1, Quaternionf q2) Parameters Type Name Description Quaternionf q1 Quaternionf q2 Returns Type Description Quaternionf"
  },
  "api/g3.Query2.html": {
    "href": "api/g3.Query2.html",
    "title": "Interface Query2 | ViRGIS VR GIS",
    "keywords": "Interface Query2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public interface Query2 Methods | Improve this Doc View Source ToCircumcircle(ref Vector2d, Int32, Int32, Int32) Declaration int ToCircumcircle(ref Vector2d test, int v0, int v1, int v2) Parameters Type Name Description Vector2d test Int32 v0 Int32 v1 Int32 v2 Returns Type Description Int32 | Improve this Doc View Source ToCircumcircle(Int32, Int32, Int32, Int32) Declaration int ToCircumcircle(int i, int v0, int v1, int v2) Parameters Type Name Description Int32 i Int32 v0 Int32 v1 Int32 v2 Returns Type Description Int32 | Improve this Doc View Source ToLine(ref Vector2d, Int32, Int32) Declaration int ToLine(ref Vector2d test, int v0, int v1) Parameters Type Name Description Vector2d test Int32 v0 Int32 v1 Returns Type Description Int32 | Improve this Doc View Source ToLine(Int32, Int32, Int32) Declaration int ToLine(int i, int v0, int v1) Parameters Type Name Description Int32 i Int32 v0 Int32 v1 Returns Type Description Int32 | Improve this Doc View Source ToTriangle(ref Vector2d, Int32, Int32, Int32) Declaration int ToTriangle(ref Vector2d test, int v0, int v1, int v2) Parameters Type Name Description Vector2d test Int32 v0 Int32 v1 Int32 v2 Returns Type Description Int32 | Improve this Doc View Source ToTriangle(Int32, Int32, Int32, Int32) Declaration int ToTriangle(int i, int v0, int v1, int v2) Parameters Type Name Description Int32 i Int32 v0 Int32 v1 Int32 v2 Returns Type Description Int32"
  },
  "api/g3.Query2d.html": {
    "href": "api/g3.Query2d.html",
    "title": "Class Query2d | ViRGIS VR GIS",
    "keywords": "Class Query2d Inheritance Object QueryBase Query2d Query2Int64 Implements Query2 Inherited Members QueryBase.Sort(Int32, Int32) QueryBase.Sort(Int32, Int32, Int32) QueryBase.Sort(Int32, Int32, Int32, Int32) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class Query2d : QueryBase, Query2 Constructors | Improve this Doc View Source Query2d(IList<Vector2d>) Declaration public Query2d(IList<Vector2d> Vertices) Parameters Type Name Description IList < Vector2d > Vertices Fields | Improve this Doc View Source mVertices Declaration protected IList<Vector2d> mVertices Field Value Type Description IList < Vector2d > Methods | Improve this Doc View Source Det3(Double, Double, Double, Double, Double, Double, Double, Double, Double) Declaration public double Det3(double x0, double y0, double z0, double x1, double y1, double z1, double x2, double y2, double z2) Parameters Type Name Description Double x0 Double y0 Double z0 Double x1 Double y1 Double z1 Double x2 Double y2 Double z2 Returns Type Description Double | Improve this Doc View Source Dot(Double, Double, Double, Double) Declaration public double Dot(double x0, double y0, double x1, double y1) Parameters Type Name Description Double x0 Double y0 Double x1 Double y1 Returns Type Description Double | Improve this Doc View Source GetNumVertices() Declaration public int GetNumVertices() Returns Type Description Int32 | Improve this Doc View Source GetVertices() Declaration public IList<Vector2d> GetVertices() Returns Type Description IList < Vector2d > | Improve this Doc View Source ToCircumcircle(ref Vector2d, Int32, Int32, Int32) +1, outside circumcircle of triangle -1, inside circumcircle of triangle 0, on circumcircle of triangle Declaration public virtual int ToCircumcircle(ref Vector2d test, int v0, int v1, int v2) Parameters Type Name Description Vector2d test Int32 v0 Int32 v1 Int32 v2 Returns Type Description Int32 | Improve this Doc View Source ToCircumcircle(Int32, Int32, Int32, Int32) +1, outside circumcircle of triangle -1, inside circumcircle of triangle 0, on circumcircle of triangle Declaration public virtual int ToCircumcircle(int i, int v0, int v1, int v2) Parameters Type Name Description Int32 i Int32 v0 Int32 v1 Int32 v2 Returns Type Description Int32 | Improve this Doc View Source ToLine(ref Vector2d, Int32, Int32) +1, on right of line -1, on left of line 0, on the line Declaration public virtual int ToLine(ref Vector2d test, int v0, int v1) Parameters Type Name Description Vector2d test Int32 v0 Int32 v1 Returns Type Description Int32 | Improve this Doc View Source ToLine(Int32, Int32, Int32) +1, on right of line -1, on left of line 0, on the line Declaration public virtual int ToLine(int i, int v0, int v1) Parameters Type Name Description Int32 i Int32 v0 Int32 v1 Returns Type Description Int32 | Improve this Doc View Source ToTriangle(ref Vector2d, Int32, Int32, Int32) +1, outside triangle -1, inside triangle 0, on triangle Declaration public virtual int ToTriangle(ref Vector2d test, int v0, int v1, int v2) Parameters Type Name Description Vector2d test Int32 v0 Int32 v1 Int32 v2 Returns Type Description Int32 | Improve this Doc View Source ToTriangle(Int32, Int32, Int32, Int32) +1, outside triangle -1, inside triangle 0, on triangle Declaration public virtual int ToTriangle(int i, int v0, int v1, int v2) Parameters Type Name Description Int32 i Int32 v0 Int32 v1 Int32 v2 Returns Type Description Int32 Implements Query2"
  },
  "api/g3.Query2Int64.html": {
    "href": "api/g3.Query2Int64.html",
    "title": "Class Query2Int64 | ViRGIS VR GIS",
    "keywords": "Class Query2Int64 2D queries for integer coordinates. Note that input Vector2d values are directly cast to int64 - you must scale them to suitable coordinates yourself! Inheritance Object QueryBase Query2d Query2Int64 Implements Query2 Inherited Members Query2d.mVertices Query2d.GetNumVertices() Query2d.GetVertices() Query2d.ToLine(Int32, Int32, Int32) Query2d.ToTriangle(Int32, Int32, Int32, Int32) Query2d.ToTriangle(Vector2d, Int32, Int32, Int32) Query2d.ToCircumcircle(Int32, Int32, Int32, Int32) Query2d.Dot(Double, Double, Double, Double) Query2d.Det3(Double, Double, Double, Double, Double, Double, Double, Double, Double) QueryBase.Sort(Int32, Int32) QueryBase.Sort(Int32, Int32, Int32) QueryBase.Sort(Int32, Int32, Int32, Int32) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class Query2Int64 : Query2d, Query2 Constructors | Improve this Doc View Source Query2Int64(IList<Vector2d>) Declaration public Query2Int64(IList<Vector2d> Vertices) Parameters Type Name Description IList < Vector2d > Vertices Methods | Improve this Doc View Source ToCircumcircle(ref Vector2d, Int32, Int32, Int32) Declaration public override int ToCircumcircle(ref Vector2d test, int v0, int v1, int v2) Parameters Type Name Description Vector2d test Int32 v0 Int32 v1 Int32 v2 Returns Type Description Int32 Overrides Query2d.ToCircumcircle(ref Vector2d, Int32, Int32, Int32) | Improve this Doc View Source ToLine(ref Vector2d, Int32, Int32) Declaration public override int ToLine(ref Vector2d test, int v0, int v1) Parameters Type Name Description Vector2d test Int32 v0 Int32 v1 Returns Type Description Int32 Overrides Query2d.ToLine(ref Vector2d, Int32, Int32) Implements Query2"
  },
  "api/g3.QueryBase.html": {
    "href": "api/g3.QueryBase.html",
    "title": "Class QueryBase | ViRGIS VR GIS",
    "keywords": "Class QueryBase Port of WildMagic5 Query class Inheritance Object QueryBase Query2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class QueryBase Methods | Improve this Doc View Source Sort(ref Int32, ref Int32) Declaration public bool Sort(ref int v0, ref int v1) Parameters Type Name Description Int32 v0 Int32 v1 Returns Type Description Boolean | Improve this Doc View Source Sort(ref Int32, ref Int32, ref Int32) Declaration public bool Sort(ref int v0, ref int v1, ref int v2) Parameters Type Name Description Int32 v0 Int32 v1 Int32 v2 Returns Type Description Boolean | Improve this Doc View Source Sort(ref Int32, ref Int32, ref Int32, ref Int32) Declaration public bool Sort(ref int v0, ref int v1, ref int v2, ref int v3) Parameters Type Name Description Int32 v0 Int32 v1 Int32 v2 Int32 v3 Returns Type Description Boolean"
  },
  "api/g3.QueryNumberType.html": {
    "href": "api/g3.QueryNumberType.html",
    "title": "Enum QueryNumberType | ViRGIS VR GIS",
    "keywords": "Enum QueryNumberType Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum QueryNumberType Fields Name Description QT_DOUBLE QT_FILTERED QT_INT64 QT_INTEGER QT_RATIONAL"
  },
  "api/g3.QueryTuple2d.html": {
    "href": "api/g3.QueryTuple2d.html",
    "title": "Class QueryTuple2d | ViRGIS VR GIS",
    "keywords": "Class QueryTuple2d Inheritance Object QueryTuple2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class QueryTuple2d Constructors | Improve this Doc View Source QueryTuple2d(Vector2d, Vector2d, Vector2d) Declaration public QueryTuple2d(Vector2d v0, Vector2d v1, Vector2d v2) Parameters Type Name Description Vector2d v0 Vector2d v1 Vector2d v2 | Improve this Doc View Source QueryTuple2d(Vector2dTuple3) Declaration public QueryTuple2d(Vector2dTuple3 tuple) Parameters Type Name Description Vector2dTuple3 tuple Methods | Improve this Doc View Source Det2(Double, Double, Double, Double) Declaration public static double Det2(double x0, double y0, double x1, double y1) Parameters Type Name Description Double x0 Double y0 Double x1 Double y1 Returns Type Description Double | Improve this Doc View Source Det3(Double, Double, Double, Double, Double, Double, Double, Double, Double) Declaration public static double Det3(double x0, double y0, double z0, double x1, double y1, double z1, double x2, double y2, double z2) Parameters Type Name Description Double x0 Double y0 Double z0 Double x1 Double y1 Double z1 Double x2 Double y2 Double z2 Returns Type Description Double | Improve this Doc View Source Dot(Double, Double, Double, Double) Declaration public static double Dot(double x0, double y0, double x1, double y1) Parameters Type Name Description Double x0 Double y0 Double x1 Double y1 Returns Type Description Double | Improve this Doc View Source Sort(ref Int32, ref Int32) Declaration public static bool Sort(ref int v0, ref int v1) Parameters Type Name Description Int32 v0 Int32 v1 Returns Type Description Boolean | Improve this Doc View Source Sort(ref Int32, ref Int32, ref Int32) Declaration public static bool Sort(ref int v0, ref int v1, ref int v2) Parameters Type Name Description Int32 v0 Int32 v1 Int32 v2 Returns Type Description Boolean | Improve this Doc View Source Sort(ref Int32, ref Int32, ref Int32, ref Int32) Declaration public static bool Sort(ref int v0, ref int v1, ref int v2, ref int v3) Parameters Type Name Description Int32 v0 Int32 v1 Int32 v2 Int32 v3 Returns Type Description Boolean | Improve this Doc View Source ToCircumcircle(Vector2d, Int32, Int32, Int32) Declaration public int ToCircumcircle(Vector2d test, int v0, int v1, int v2) Parameters Type Name Description Vector2d test Int32 v0 Int32 v1 Int32 v2 Returns Type Description Int32 | Improve this Doc View Source ToCircumcircle(Int32, Int32, Int32, Int32) Declaration public int ToCircumcircle(int i, int v0, int v1, int v2) Parameters Type Name Description Int32 i Int32 v0 Int32 v1 Int32 v2 Returns Type Description Int32 | Improve this Doc View Source ToLine(Vector2d, Int32, Int32) Declaration public int ToLine(Vector2d test, int v0, int v1) Parameters Type Name Description Vector2d test Int32 v0 Int32 v1 Returns Type Description Int32 | Improve this Doc View Source ToLine(Int32, Int32, Int32) Declaration public int ToLine(int i, int v0, int v1) Parameters Type Name Description Int32 i Int32 v0 Int32 v1 Returns Type Description Int32 | Improve this Doc View Source ToTriangle(Vector2d, Int32, Int32, Int32) Declaration public int ToTriangle(Vector2d test, int v0, int v1, int v2) Parameters Type Name Description Vector2d test Int32 v0 Int32 v1 Int32 v2 Returns Type Description Int32 | Improve this Doc View Source ToTriangle(Int32, Int32, Int32, Int32) Declaration public int ToTriangle(int i, int v0, int v1, int v2) Parameters Type Name Description Int32 i Int32 v0 Int32 v1 Int32 v2 Returns Type Description Int32"
  },
  "api/g3.Radial3DArrowGenerator.html": {
    "href": "api/g3.Radial3DArrowGenerator.html",
    "title": "Class Radial3DArrowGenerator | ViRGIS VR GIS",
    "keywords": "Class Radial3DArrowGenerator Inheritance Object MeshGenerator VerticalGeneralizedCylinderGenerator Radial3DArrowGenerator Inherited Members VerticalGeneralizedCylinderGenerator.Sections VerticalGeneralizedCylinderGenerator.Slices VerticalGeneralizedCylinderGenerator.Capped VerticalGeneralizedCylinderGenerator.NoSharedVertices VerticalGeneralizedCylinderGenerator.startCapCenterIndex VerticalGeneralizedCylinderGenerator.endCapCenterIndex MeshGenerator.vertices MeshGenerator.uv MeshGenerator.normals MeshGenerator.triangles MeshGenerator.groups MeshGenerator.WantUVs MeshGenerator.WantNormals MeshGenerator.WantGroups MeshGenerator.Clockwise MeshGenerator.MakeMesh(SimpleMesh) MeshGenerator.MakeSimpleMesh() MeshGenerator.MakeMesh(DMesh3) MeshGenerator.MakeDMesh() MeshGenerator.MakeMesh(NTMesh3) MeshGenerator.MakeNTMesh() MeshGenerator.duplicate_vertex_span(Int32, Int32) MeshGenerator.append_disc(Int32, Int32, Int32, Boolean, Boolean, Int32, Int32) MeshGenerator.append_rectangle(Int32, Int32, Int32, Int32, Boolean, Int32, Int32) MeshGenerator.append_2d_disc_segment(Int32, Int32, Int32, Int32, Boolean, Int32, Int32, Int32, Double) MeshGenerator.estimate_normal(Int32, Int32, Int32) MeshGenerator.bilerp(Vector3d, Vector3d, Vector3d, Vector3d, Double, Double) MeshGenerator.bilerp(Vector2d, Vector2d, Vector2d, Vector2d, Double, Double) MeshGenerator.bilerp(Vector2f, Vector2f, Vector2f, Vector2f, Single, Single) MeshGenerator.bilerp(Vector3i, Vector3i, Vector3i, Vector3i, Double, Double) MeshGenerator.lerp(Vector3i, Vector3i, Double) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class Radial3DArrowGenerator : VerticalGeneralizedCylinderGenerator Fields | Improve this Doc View Source HeadBaseRadius Declaration public float HeadBaseRadius Field Value Type Description Single | Improve this Doc View Source HeadLength Declaration public float HeadLength Field Value Type Description Single | Improve this Doc View Source StickLength Declaration public float StickLength Field Value Type Description Single | Improve this Doc View Source StickRadius Declaration public float StickRadius Field Value Type Description Single | Improve this Doc View Source TipRadius Declaration public float TipRadius Field Value Type Description Single Methods | Improve this Doc View Source Generate() Declaration public override MeshGenerator Generate() Returns Type Description MeshGenerator Overrides VerticalGeneralizedCylinderGenerator.Generate()"
  },
  "api/g3.Ray3d.html": {
    "href": "api/g3.Ray3d.html",
    "title": "Struct Ray3d | ViRGIS VR GIS",
    "keywords": "Struct Ray3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Ray3d Constructors | Improve this Doc View Source Ray3d(Vector3d, Vector3d, Boolean) Declaration public Ray3d(Vector3d origin, Vector3d direction, bool bIsNormalized = false) Parameters Type Name Description Vector3d origin Vector3d direction Boolean bIsNormalized | Improve this Doc View Source Ray3d(Vector3f, Vector3f) Declaration public Ray3d(Vector3f origin, Vector3f direction) Parameters Type Name Description Vector3f origin Vector3f direction Fields | Improve this Doc View Source Direction Declaration public Vector3d Direction Field Value Type Description Vector3d | Improve this Doc View Source Origin Declaration public Vector3d Origin Field Value Type Description Vector3d Methods | Improve this Doc View Source ClosestPoint(Vector3d) Declaration public Vector3d ClosestPoint(Vector3d p) Parameters Type Name Description Vector3d p Returns Type Description Vector3d | Improve this Doc View Source DistanceSquared(Vector3d) Declaration public double DistanceSquared(Vector3d p) Parameters Type Name Description Vector3d p Returns Type Description Double | Improve this Doc View Source PointAt(Double) Declaration public Vector3d PointAt(double d) Parameters Type Name Description Double d Returns Type Description Vector3d | Improve this Doc View Source Project(Vector3d) Declaration public double Project(Vector3d p) Parameters Type Name Description Vector3d p Returns Type Description Double Operators | Improve this Doc View Source Explicit(Ray3d to Ray3f) Declaration public static explicit operator Ray3f(Ray3d v) Parameters Type Name Description Ray3d v Returns Type Description Ray3f | Improve this Doc View Source Implicit(Ray3f to Ray3d) Declaration public static implicit operator Ray3d(Ray3f v) Parameters Type Name Description Ray3f v Returns Type Description Ray3d"
  },
  "api/g3.Ray3f.html": {
    "href": "api/g3.Ray3f.html",
    "title": "Struct Ray3f | ViRGIS VR GIS",
    "keywords": "Struct Ray3f Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Ray3f Constructors | Improve this Doc View Source Ray3f(Vector3f, Vector3f, Boolean) Declaration public Ray3f(Vector3f origin, Vector3f direction, bool bIsNormalized = false) Parameters Type Name Description Vector3f origin Vector3f direction Boolean bIsNormalized Fields | Improve this Doc View Source Direction Declaration public Vector3f Direction Field Value Type Description Vector3f | Improve this Doc View Source Origin Declaration public Vector3f Origin Field Value Type Description Vector3f Methods | Improve this Doc View Source DistanceSquared(Vector3f) Declaration public float DistanceSquared(Vector3f p) Parameters Type Name Description Vector3f p Returns Type Description Single | Improve this Doc View Source PointAt(Single) Declaration public Vector3f PointAt(float d) Parameters Type Name Description Single d Returns Type Description Vector3f | Improve this Doc View Source Project(Vector3f) Declaration public float Project(Vector3f p) Parameters Type Name Description Vector3f p Returns Type Description Single"
  },
  "api/g3.RayIntersection.html": {
    "href": "api/g3.RayIntersection.html",
    "title": "Class RayIntersection | ViRGIS VR GIS",
    "keywords": "Class RayIntersection Inheritance Object RayIntersection Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class RayIntersection Methods | Improve this Doc View Source InfiniteCylinder(Vector3f, Vector3f, Vector3f, Vector3f, Single, out Single) Declaration public static bool InfiniteCylinder(Vector3f vOrigin, Vector3f vDirection, Vector3f vCylOrigin, Vector3f vCylAxis, float fRadius, out float fRayT) Parameters Type Name Description Vector3f vOrigin Vector3f vDirection Vector3f vCylOrigin Vector3f vCylAxis Single fRadius Single fRayT Returns Type Description Boolean | Improve this Doc View Source InfiniteCylinderSigned(Vector3f, Vector3f, Vector3f, Vector3f, Single, out Single) Declaration public static bool InfiniteCylinderSigned(Vector3f vOrigin, Vector3f vDirection, Vector3f vCylOrigin, Vector3f vCylAxis, float fRadius, out float fRayT) Parameters Type Name Description Vector3f vOrigin Vector3f vDirection Vector3f vCylOrigin Vector3f vCylAxis Single fRadius Single fRayT Returns Type Description Boolean | Improve this Doc View Source Sphere(Vector3f, Vector3f, Vector3f, Single, out Single) Declaration public static bool Sphere(Vector3f vOrigin, Vector3f vDirection, Vector3f vCenter, float fRadius, out float fRayT) Parameters Type Name Description Vector3f vOrigin Vector3f vDirection Vector3f vCenter Single fRadius Single fRayT Returns Type Description Boolean | Improve this Doc View Source SphereSigned(ref Vector3d, ref Vector3d, ref Vector3d, Double, out Double) Declaration public static bool SphereSigned(ref Vector3d vOrigin, ref Vector3d vDirection, ref Vector3d vCenter, double fRadius, out double fRayT) Parameters Type Name Description Vector3d vOrigin Vector3d vDirection Vector3d vCenter Double fRadius Double fRayT Returns Type Description Boolean | Improve this Doc View Source SphereSigned(ref Vector3f, ref Vector3f, ref Vector3f, Single, out Single) Declaration public static bool SphereSigned(ref Vector3f vOrigin, ref Vector3f vDirection, ref Vector3f vCenter, float fRadius, out float fRayT) Parameters Type Name Description Vector3f vOrigin Vector3f vDirection Vector3f vCenter Single fRadius Single fRayT Returns Type Description Boolean"
  },
  "api/g3.ReadOptions.html": {
    "href": "api/g3.ReadOptions.html",
    "title": "Class ReadOptions | ViRGIS VR GIS",
    "keywords": "Class ReadOptions Inheritance Object ReadOptions Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ReadOptions Constructors | Improve this Doc View Source ReadOptions() Declaration public ReadOptions() Fields | Improve this Doc View Source CustomFlags Declaration public CommandArgumentSet CustomFlags Field Value Type Description CommandArgumentSet | Improve this Doc View Source Defaults Declaration public static readonly ReadOptions Defaults Field Value Type Description ReadOptions | Improve this Doc View Source ReadMaterials Declaration public bool ReadMaterials Field Value Type Description Boolean"
  },
  "api/g3.Reducer.html": {
    "href": "api/g3.Reducer.html",
    "title": "Class Reducer | ViRGIS VR GIS",
    "keywords": "Class Reducer Inheritance Object MeshRefinerBase Reducer Inherited Members MeshRefinerBase.mesh MeshRefinerBase.constraints MeshRefinerBase.AllowCollapseFixedVertsWithSameSetID MeshRefinerBase.EdgeFlipTolerance MeshRefinerBase.edge_flip_tol MeshRefinerBase.Mesh MeshRefinerBase.Constraints MeshRefinerBase.SetExternalConstraints(MeshConstraints) MeshRefinerBase.Progress MeshRefinerBase.Cancelled() MeshRefinerBase.edge_flip_metric(Vector3d, Vector3d) MeshRefinerBase.collapse_creates_flip_or_invalid(Int32, Int32, Vector3d, Int32, Int32) MeshRefinerBase.flip_inverts_normals(Int32, Int32, Int32, Int32, Int32) MeshRefinerBase.can_collapse_constraints(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32) MeshRefinerBase.can_collapse_vtx(Int32, Int32, Int32, Int32) MeshRefinerBase.vertex_is_fixed(Int32) MeshRefinerBase.vertex_is_constrained(Int32) MeshRefinerBase.get_vertex_constraint(Int32) MeshRefinerBase.get_vertex_constraint(Int32, VertexConstraint) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class Reducer : MeshRefinerBase Constructors | Improve this Doc View Source Reducer() Declaration protected Reducer() | Improve this Doc View Source Reducer(DMesh3) Declaration public Reducer(DMesh3 m) Parameters Type Name Description DMesh3 m Fields | Improve this Doc View Source DebugEdges Declaration public List<int> DebugEdges Field Value Type Description List < Int32 > | Improve this Doc View Source EdgeQuadrics Declaration protected Reducer.QEdge[] EdgeQuadrics Field Value Type Description Reducer.QEdge [] | Improve this Doc View Source EdgeQueue Declaration protected IndexPriorityQueue EdgeQueue Field Value Type Description IndexPriorityQueue | Improve this Doc View Source ENABLE_DEBUG_CHECKS Declaration public bool ENABLE_DEBUG_CHECKS Field Value Type Description Boolean | Improve this Doc View Source ENABLE_PROFILING Declaration public bool ENABLE_PROFILING Field Value Type Description Boolean | Improve this Doc View Source HaveBoundary Declaration protected bool HaveBoundary Field Value Type Description Boolean | Improve this Doc View Source IsBoundaryVtxCache Declaration protected bool[] IsBoundaryVtxCache Field Value Type Description Boolean [] | Improve this Doc View Source MinEdgeLength Declaration protected double MinEdgeLength Field Value Type Description Double | Improve this Doc View Source MinimizeQuadricPositionError Declaration public bool MinimizeQuadricPositionError Field Value Type Description Boolean | Improve this Doc View Source PreserveBoundaryShape Declaration public bool PreserveBoundaryShape Field Value Type Description Boolean | Improve this Doc View Source ProjectionMode Declaration public Reducer.TargetProjectionMode ProjectionMode Field Value Type Description Reducer.TargetProjectionMode | Improve this Doc View Source ReduceMode Declaration protected Reducer.TargetModes ReduceMode Field Value Type Description Reducer.TargetModes | Improve this Doc View Source target Declaration protected IProjectionTarget target Field Value Type Description IProjectionTarget | Improve this Doc View Source TargetCount Declaration protected int TargetCount Field Value Type Description Int32 | Improve this Doc View Source vertQuadrics Declaration protected QuadricError[] vertQuadrics Field Value Type Description QuadricError [] Methods | Improve this Doc View Source begin_collapse() Declaration protected virtual void begin_collapse() | Improve this Doc View Source begin_ops() Declaration protected virtual void begin_ops() | Improve this Doc View Source begin_pass() Declaration protected virtual void begin_pass() | Improve this Doc View Source begin_project() Declaration protected virtual void begin_project() | Improve this Doc View Source begin_setup() Declaration protected virtual void begin_setup() | Improve this Doc View Source CollapseEdge(Int32, Vector3d, out Int32) Declaration protected virtual Reducer.ProcessResult CollapseEdge(int edgeID, Vector3d vNewPos, out int collapseToV) Parameters Type Name Description Int32 edgeID Vector3d vNewPos Int32 collapseToV Returns Type Description Reducer.ProcessResult | Improve this Doc View Source DebugCheckVertexConstraints() Declaration protected virtual void DebugCheckVertexConstraints() | Improve this Doc View Source DoDebugChecks() Declaration protected virtual void DoDebugChecks() | Improve this Doc View Source DoReduce() Declaration public virtual void DoReduce() | Improve this Doc View Source end_collapse() Declaration protected virtual void end_collapse() | Improve this Doc View Source end_ops() Declaration protected virtual void end_ops() | Improve this Doc View Source end_pass() Declaration protected virtual void end_pass() | Improve this Doc View Source end_project() Declaration protected virtual void end_project() | Improve this Doc View Source end_setup() Declaration protected virtual void end_setup() | Improve this Doc View Source FastCollapsePass(Double, Int32, Boolean) Declaration public virtual void FastCollapsePass(double fMinEdgeLength, int nRounds = 1, bool MeshIsClosedHint = false) Parameters Type Name Description Double fMinEdgeLength Int32 nRounds Boolean MeshIsClosedHint | Improve this Doc View Source FullProjectionPass() Declaration protected virtual void FullProjectionPass() | Improve this Doc View Source get_projected_collapse_position(Int32, Vector3d) Declaration protected Vector3d get_projected_collapse_position(int vid, Vector3d vNewPos) Parameters Type Name Description Int32 vid Vector3d vNewPos Returns Type Description Vector3d | Improve this Doc View Source InitializeQueue() Declaration protected virtual void InitializeQueue() | Improve this Doc View Source InitializeVertexQuadrics() Declaration protected virtual void InitializeVertexQuadrics() | Improve this Doc View Source IsBoundaryV(Int32) Declaration protected bool IsBoundaryV(int vid) Parameters Type Name Description Int32 vid Returns Type Description Boolean | Improve this Doc View Source next_edge(Int32, out Boolean) Declaration protected virtual int next_edge(int cur_eid, out bool bDone) Parameters Type Name Description Int32 cur_eid Boolean bDone Returns Type Description Int32 | Improve this Doc View Source OnEdgeCollapse(Int32, Int32, Int32, DMesh3.EdgeCollapseInfo) Declaration protected virtual void OnEdgeCollapse(int edgeID, int va, int vb, DMesh3.EdgeCollapseInfo collapseInfo) Parameters Type Name Description Int32 edgeID Int32 va Int32 vb DMesh3.EdgeCollapseInfo collapseInfo | Improve this Doc View Source OptimalPoint(Int32, ref QuadricError, Int32, Int32) Declaration protected Vector3d OptimalPoint(int eid, ref QuadricError q, int ea, int eb) Parameters Type Name Description Int32 eid QuadricError q Int32 ea Int32 eb Returns Type Description Vector3d | Improve this Doc View Source Precompute(Boolean) Declaration protected virtual void Precompute(bool bMeshIsClosed = false) Parameters Type Name Description Boolean bMeshIsClosed | Improve this Doc View Source project_vertex(Int32, IProjectionTarget) Declaration protected void project_vertex(int vID, IProjectionTarget targetIn) Parameters Type Name Description Int32 vID IProjectionTarget targetIn | Improve this Doc View Source project_vertices() Declaration protected virtual IEnumerable<int> project_vertices() Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source ReduceToEdgeLength(Double) Declaration public virtual void ReduceToEdgeLength(double minEdgeLen) Parameters Type Name Description Double minEdgeLen | Improve this Doc View Source ReduceToTriangleCount(Int32) Declaration public virtual void ReduceToTriangleCount(int nCount) Parameters Type Name Description Int32 nCount | Improve this Doc View Source ReduceToVertexCount(Int32) Declaration public virtual void ReduceToVertexCount(int nCount) Parameters Type Name Description Int32 nCount | Improve this Doc View Source Reproject() Declaration protected virtual void Reproject() | Improve this Doc View Source RuntimeDebugCheck(Int32) Declaration [Conditional(\"DEBUG\")] protected virtual void RuntimeDebugCheck(int eid) Parameters Type Name Description Int32 eid | Improve this Doc View Source SetProjectionTarget(IProjectionTarget) Declaration public void SetProjectionTarget(IProjectionTarget target) Parameters Type Name Description IProjectionTarget target | Improve this Doc View Source start_edges() Declaration protected virtual int start_edges() Returns Type Description Int32 | Improve this Doc View Source UpdateNeighbours(Int32) Declaration protected virtual void UpdateNeighbours(int vid) Parameters Type Name Description Int32 vid"
  },
  "api/g3.Reducer.ProcessResult.html": {
    "href": "api/g3.Reducer.ProcessResult.html",
    "title": "Enum Reducer.ProcessResult | ViRGIS VR GIS",
    "keywords": "Enum Reducer.ProcessResult Namespace : g3 Assembly : geometry3Sharp.dll Syntax protected enum ProcessResult Fields Name Description Failed_NotAnEdge Failed_OpNotSuccessful Ignored_CannotCollapse Ignored_Constrained Ignored_CreatesFlip Ignored_EdgeIsFullyConstrained Ignored_EdgeTooLong Ok_Collapsed"
  },
  "api/g3.Reducer.QEdge.html": {
    "href": "api/g3.Reducer.QEdge.html",
    "title": "Struct Reducer.QEdge | ViRGIS VR GIS",
    "keywords": "Struct Reducer.QEdge Namespace : g3 Assembly : geometry3Sharp.dll Syntax protected struct QEdge Constructors | Improve this Doc View Source QEdge(Int32, ref QuadricError, ref Vector3d) Declaration public QEdge(int edge_id, ref QuadricError qin, ref Vector3d pt) Parameters Type Name Description Int32 edge_id QuadricError qin Vector3d pt Fields | Improve this Doc View Source collapse_pt Declaration public Vector3d collapse_pt Field Value Type Description Vector3d | Improve this Doc View Source eid Declaration public int eid Field Value Type Description Int32 | Improve this Doc View Source q Declaration public QuadricError q Field Value Type Description QuadricError"
  },
  "api/g3.Reducer.TargetModes.html": {
    "href": "api/g3.Reducer.TargetModes.html",
    "title": "Enum Reducer.TargetModes | ViRGIS VR GIS",
    "keywords": "Enum Reducer.TargetModes Namespace : g3 Assembly : geometry3Sharp.dll Syntax protected enum TargetModes Fields Name Description MinEdgeLength TriangleCount VertexCount"
  },
  "api/g3.Reducer.TargetProjectionMode.html": {
    "href": "api/g3.Reducer.TargetProjectionMode.html",
    "title": "Enum Reducer.TargetProjectionMode | ViRGIS VR GIS",
    "keywords": "Enum Reducer.TargetProjectionMode Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum TargetProjectionMode Fields Name Description AfterRefinement Inline NoProjection"
  },
  "api/g3.RefCountVector.html": {
    "href": "api/g3.RefCountVector.html",
    "title": "Class RefCountVector | ViRGIS VR GIS",
    "keywords": "Class RefCountVector RefCountedVector is used to keep track of which indices in a linear index list are in use/referenced. A free list is tracked so that unreferenced indices can be re-used. The enumerator iterates over valid indices (ie where refcount > 0) refcounts are shorts so the maximum count is 65536. No overflow checking is done in release builds. Inheritance Object RefCountVector Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class RefCountVector : IEnumerable Constructors | Improve this Doc View Source RefCountVector() Declaration public RefCountVector() | Improve this Doc View Source RefCountVector(RefCountVector) Declaration public RefCountVector(RefCountVector copy) Parameters Type Name Description RefCountVector copy | Improve this Doc View Source RefCountVector(Int16[], Boolean) Declaration public RefCountVector(short[] raw_ref_counts, bool build_free_list = false) Parameters Type Name Description Int16 [] raw_ref_counts Boolean build_free_list Fields | Improve this Doc View Source invalid Declaration public static readonly short invalid Field Value Type Description Int16 Properties | Improve this Doc View Source count Declaration public int count { get; } Property Value Type Description Int32 | Improve this Doc View Source empty Declaration public bool empty { get; } Property Value Type Description Boolean | Improve this Doc View Source is_dense Declaration public bool is_dense { get; } Property Value Type Description Boolean | Improve this Doc View Source max_index Declaration public int max_index { get; } Property Value Type Description Int32 | Improve this Doc View Source RawRefCounts Declaration public DVector<short> RawRefCounts { get; } Property Value Type Description DVector < Int16 > | Improve this Doc View Source UsageStats Declaration public string UsageStats { get; } Property Value Type Description String Methods | Improve this Doc View Source allocate() Declaration public int allocate() Returns Type Description Int32 | Improve this Doc View Source allocate_at(Int32) allocate at specific index, which must either be larger than current max index, or on the free list. If larger, all elements up to this one will be pushed onto free list. otherwise we have to do a linear search through free list. If you are doing many of these, it is likely faster to use allocate_at_unsafe(), and then rebuild_free_list() after you are done. Declaration public bool allocate_at(int index) Parameters Type Name Description Int32 index Returns Type Description Boolean | Improve this Doc View Source allocate_at_unsafe(Int32) allocate at specific index, which must be free or larger than current max index. However, we do not update free list. So, you probably need to do rebuild_free_list() after calling this. Declaration public bool allocate_at_unsafe(int index) Parameters Type Name Description Int32 index Returns Type Description Boolean | Improve this Doc View Source debug_print() Declaration public string debug_print() Returns Type Description String | Improve this Doc View Source decrement(Int32, Int16) Declaration public void decrement(int index, short decrement = 1) Parameters Type Name Description Int32 index Int16 decrement | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator GetEnumerator() Returns Type Description IEnumerator | Improve this Doc View Source increment(Int32, Int16) Declaration public int increment(int index, short increment = 1) Parameters Type Name Description Int32 index Int16 increment Returns Type Description Int32 | Improve this Doc View Source isValid(Int32) Declaration public bool isValid(int index) Parameters Type Name Description Int32 index Returns Type Description Boolean | Improve this Doc View Source isValidUnsafe(Int32) Declaration public bool isValidUnsafe(int index) Parameters Type Name Description Int32 index Returns Type Description Boolean | Improve this Doc View Source rawRefCount(Int32) Declaration public int rawRefCount(int index) Parameters Type Name Description Int32 index Returns Type Description Int32 | Improve this Doc View Source rebuild_free_list() Declaration public void rebuild_free_list() | Improve this Doc View Source refCount(Int32) Declaration public int refCount(int index) Parameters Type Name Description Int32 index Returns Type Description Int32 | Improve this Doc View Source set_Unsafe(Int32, Int16) Declaration public void set_Unsafe(int index, short count) Parameters Type Name Description Int32 index Int16 count | Improve this Doc View Source trim(Int32) Declaration public void trim(int maxIndex) Parameters Type Name Description Int32 maxIndex"
  },
  "api/g3.RegionOperator.html": {
    "href": "api/g3.RegionOperator.html",
    "title": "Class RegionOperator | ViRGIS VR GIS",
    "keywords": "Class RegionOperator This class automatically extracts a submesh from a mesh, and can re-insert it after you have edited it, as long as you have not messed up the boundary [TODO] Nearly all the code here is duplicated from RegionRemesher. Maybe this could be a base class for that? [TODO] ReinsertSubToBaseMapT is not returned by the MeshEditor.ReinsertSubmesh, instead we are trying to guess it here, by making some assumptions about what happens. It works for now, but it would better if MeshEditor returned this information. Inheritance Object RegionOperator Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class RegionOperator Constructors | Improve this Doc View Source RegionOperator(DMesh3, IEnumerable<Int32>, Action<DSubmesh3>) Declaration public RegionOperator(DMesh3 mesh, IEnumerable<int> regionTris, Action<DSubmesh3> submeshConfigF = null) Parameters Type Name Description DMesh3 mesh IEnumerable < Int32 > regionTris Action < DSubmesh3 > submeshConfigF | Improve this Doc View Source RegionOperator(DMesh3, Int32[], Action<DSubmesh3>) Declaration public RegionOperator(DMesh3 mesh, int[] regionTris, Action<DSubmesh3> submeshConfigF = null) Parameters Type Name Description DMesh3 mesh Int32 [] regionTris Action < DSubmesh3 > submeshConfigF Fields | Improve this Doc View Source BaseMesh Declaration public DMesh3 BaseMesh Field Value Type Description DMesh3 | Improve this Doc View Source Region Declaration public DSubmesh3 Region Field Value Type Description DSubmesh3 | Improve this Doc View Source ReinsertDuplicateTriBehavior Declaration public MeshEditor.DuplicateTriBehavior ReinsertDuplicateTriBehavior Field Value Type Description MeshEditor.DuplicateTriBehavior | Improve this Doc View Source ReinsertSubToBaseMapT Declaration public IndexMap ReinsertSubToBaseMapT Field Value Type Description IndexMap | Improve this Doc View Source ReinsertSubToBaseMapV Declaration public IndexMap ReinsertSubToBaseMapV Field Value Type Description IndexMap Properties | Improve this Doc View Source CurrentBaseTriangles list of sub-region triangles. This is either the input regionTris, or the submesh triangles after they are re-inserted. Declaration public int[] CurrentBaseTriangles { get; } Property Value Type Description Int32 [] Methods | Improve this Doc View Source BackPropropagate(Boolean) Declaration public bool BackPropropagate(bool bAllowSubmeshRepairs = true) Parameters Type Name Description Boolean bAllowSubmeshRepairs Returns Type Description Boolean | Improve this Doc View Source BackPropropagateVertices(Boolean) Declaration public bool BackPropropagateVertices(bool bRecomputeBoundaryNormals = false) Parameters Type Name Description Boolean bRecomputeBoundaryNormals Returns Type Description Boolean | Improve this Doc View Source CurrentBaseInteriorVertices() find base-mesh interior vertices of region (ie does not include region boundary vertices) Declaration public HashSet<int> CurrentBaseInteriorVertices() Returns Type Description HashSet < Int32 > | Improve this Doc View Source RepairPossibleNonManifoldEdges() Declaration public void RepairPossibleNonManifoldEdges() | Improve this Doc View Source SetSubmeshGroupID(Int32) set group ID for entire submesh Declaration public void SetSubmeshGroupID(int gid) Parameters Type Name Description Int32 gid"
  },
  "api/g3.RegionRemesher.html": {
    "href": "api/g3.RegionRemesher.html",
    "title": "Class RegionRemesher | ViRGIS VR GIS",
    "keywords": "Class RegionRemesher Inheritance Object MeshRefinerBase Remesher RegionRemesher Inherited Members Remesher.EnableFlips Remesher.EnableCollapses Remesher.EnableSplits Remesher.EnableSmoothing Remesher.PreventNormalFlips Remesher.MinEdgeLength Remesher.MaxEdgeLength Remesher.SmoothSpeedT Remesher.SmoothType Remesher.CustomSmoothF Remesher.VertexControlF Remesher.DebugEdges Remesher.ProjectionMode Remesher.EnableParallelProjection Remesher.EnableParallelSmooth Remesher.EnableSmoothInPlace Remesher.ProjectionTarget Remesher.SetProjectionTarget(IProjectionTarget) Remesher.SetTargetEdgeLength(Double) Remesher.ENABLE_PROFILING Remesher.Precompute() Remesher.ModifiedEdgesLastPass Remesher.BasicRemeshPass() Remesher.OnEdgeSplit(Int32, Int32, Int32, DMesh3.EdgeSplitInfo) Remesher.OnEdgeCollapse(Int32, Int32, Int32, DMesh3.EdgeCollapseInfo) Remesher.start_edges() Remesher.next_edge(Int32, Boolean) Remesher.smooth_vertices() Remesher.project_vertices() Remesher.ProcessEdge(Int32) Remesher.update_after_split(Int32, Int32, Int32, DMesh3.EdgeSplitInfo) Remesher.project_vertex(Int32, IProjectionTarget) Remesher.get_projected_collapse_position(Int32, Vector3d) Remesher.FullSmoothPass_InPlace(Boolean) Remesher.FullSmoothPass_Buffer(Boolean) Remesher.vBufferV Remesher.vModifiedV Remesher.InitializeVertexBufferForPass() Remesher.ApplyVertexBuffer(Boolean) Remesher.ComputeSmoothedVertexPos(Int32, Func<DMesh3, Int32, Double, Vector3d>, Boolean) Remesher.FullProjectionPass() Remesher.ENABLE_DEBUG_CHECKS Remesher.DoDebugChecks() Remesher.begin_pass() Remesher.end_pass() Remesher.begin_ops() Remesher.end_ops() Remesher.begin_smooth() Remesher.end_smooth() Remesher.begin_project() Remesher.end_project() Remesher.begin_collapse() Remesher.end_collapse() Remesher.begin_flip() Remesher.end_flip() Remesher.begin_split() Remesher.end_split() MeshRefinerBase.mesh MeshRefinerBase.constraints MeshRefinerBase.AllowCollapseFixedVertsWithSameSetID MeshRefinerBase.EdgeFlipTolerance MeshRefinerBase.edge_flip_tol MeshRefinerBase.Mesh MeshRefinerBase.Constraints MeshRefinerBase.SetExternalConstraints(MeshConstraints) MeshRefinerBase.Progress MeshRefinerBase.Cancelled() MeshRefinerBase.edge_flip_metric(Vector3d, Vector3d) MeshRefinerBase.collapse_creates_flip_or_invalid(Int32, Int32, Vector3d, Int32, Int32) MeshRefinerBase.flip_inverts_normals(Int32, Int32, Int32, Int32, Int32) MeshRefinerBase.can_collapse_constraints(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32) MeshRefinerBase.can_collapse_vtx(Int32, Int32, Int32, Int32) MeshRefinerBase.vertex_is_fixed(Int32) MeshRefinerBase.vertex_is_constrained(Int32) MeshRefinerBase.get_vertex_constraint(Int32) MeshRefinerBase.get_vertex_constraint(Int32, VertexConstraint) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class RegionRemesher : Remesher Constructors | Improve this Doc View Source RegionRemesher(DMesh3, IEnumerable<Int32>) Declaration public RegionRemesher(DMesh3 mesh, IEnumerable<int> regionTris) Parameters Type Name Description DMesh3 mesh IEnumerable < Int32 > regionTris | Improve this Doc View Source RegionRemesher(DMesh3, Int32[]) Declaration public RegionRemesher(DMesh3 mesh, int[] regionTris) Parameters Type Name Description DMesh3 mesh Int32 [] regionTris Fields | Improve this Doc View Source BaseMesh Declaration public DMesh3 BaseMesh Field Value Type Description DMesh3 | Improve this Doc View Source Region Declaration public DSubmesh3 Region Field Value Type Description DSubmesh3 | Improve this Doc View Source ReinsertDuplicateTriBehavior Declaration public MeshEditor.DuplicateTriBehavior ReinsertDuplicateTriBehavior Field Value Type Description MeshEditor.DuplicateTriBehavior | Improve this Doc View Source ReinsertSubToBaseMapV Declaration public IndexMap ReinsertSubToBaseMapV Field Value Type Description IndexMap Properties | Improve this Doc View Source CurrentBaseTriangles list of sub-region triangles. This is either the input regionTris, or the submesh triangles after they are re-inserted. Declaration public int[] CurrentBaseTriangles { get; } Property Value Type Description Int32 [] Methods | Improve this Doc View Source BackPropropagate(Boolean) Declaration public bool BackPropropagate(bool bAllowSubmeshRepairs = true) Parameters Type Name Description Boolean bAllowSubmeshRepairs Returns Type Description Boolean | Improve this Doc View Source QuickRemesh(DMesh3, Int32[], Double, Double, Double, Int32, IProjectionTarget, RegionRemesher.QuickRemeshFlags) Declaration public static RegionRemesher QuickRemesh(DMesh3 mesh, int[] tris, double minEdgeLen, double maxEdgeLen, double smoothSpeed, int rounds, IProjectionTarget target, RegionRemesher.QuickRemeshFlags flags = RegionRemesher.QuickRemeshFlags.PreventNormalFlips) Parameters Type Name Description DMesh3 mesh Int32 [] tris Double minEdgeLen Double maxEdgeLen Double smoothSpeed Int32 rounds IProjectionTarget target RegionRemesher.QuickRemeshFlags flags Returns Type Description RegionRemesher | Improve this Doc View Source QuickRemesh(DMesh3, Int32[], Double, Double, Int32, IProjectionTarget, RegionRemesher.QuickRemeshFlags) Declaration public static RegionRemesher QuickRemesh(DMesh3 mesh, int[] tris, double targetEdgeLen, double smoothSpeed, int rounds, IProjectionTarget target, RegionRemesher.QuickRemeshFlags flags = RegionRemesher.QuickRemeshFlags.PreventNormalFlips) Parameters Type Name Description DMesh3 mesh Int32 [] tris Double targetEdgeLen Double smoothSpeed Int32 rounds IProjectionTarget target RegionRemesher.QuickRemeshFlags flags Returns Type Description RegionRemesher | Improve this Doc View Source RepairPossibleNonManifoldEdges() Declaration public void RepairPossibleNonManifoldEdges() | Improve this Doc View Source SetSubmeshGroupID(Int32) set group ID for entire submesh Declaration public void SetSubmeshGroupID(int gid) Parameters Type Name Description Int32 gid"
  },
  "api/g3.RegionRemesher.QuickRemeshFlags.html": {
    "href": "api/g3.RegionRemesher.QuickRemeshFlags.html",
    "title": "Enum RegionRemesher.QuickRemeshFlags | ViRGIS VR GIS",
    "keywords": "Enum RegionRemesher.QuickRemeshFlags Namespace : g3 Assembly : geometry3Sharp.dll Syntax [Flags] public enum QuickRemeshFlags Fields Name Description NoFlags PreventNormalFlips"
  },
  "api/g3.RemapItr-2.html": {
    "href": "api/g3.RemapItr-2.html",
    "title": "Class RemapItr<T, T2> | ViRGIS VR GIS",
    "keywords": "Class RemapItr<T, T2> Iterator that re-maps iterated values via a Func Inheritance Object RemapItr<T, T2> Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class RemapItr<T, T2> : IEnumerable<T>, IEnumerable Type Parameters Name Description T T2 Constructors | Improve this Doc View Source RemapItr(IEnumerable<T2>, Func<T2, T>) Declaration public RemapItr(IEnumerable<T2> otherIterator, Func<T2, T> valueFunction) Parameters Type Name Description IEnumerable <T2> otherIterator Func <T2, T> valueFunction Fields | Improve this Doc View Source OtherItr Declaration public IEnumerable<T2> OtherItr Field Value Type Description IEnumerable <T2> | Improve this Doc View Source ValueF Declaration public Func<T2, T> ValueF Field Value Type Description Func <T2, T> Methods | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T>"
  },
  "api/g3.Remesher.html": {
    "href": "api/g3.Remesher.html",
    "title": "Class Remesher | ViRGIS VR GIS",
    "keywords": "Class Remesher Inheritance Object MeshRefinerBase Remesher EdgeLoopRemesher RegionRemesher Inherited Members MeshRefinerBase.mesh MeshRefinerBase.constraints MeshRefinerBase.AllowCollapseFixedVertsWithSameSetID MeshRefinerBase.EdgeFlipTolerance MeshRefinerBase.edge_flip_tol MeshRefinerBase.Mesh MeshRefinerBase.Constraints MeshRefinerBase.SetExternalConstraints(MeshConstraints) MeshRefinerBase.Progress MeshRefinerBase.Cancelled() MeshRefinerBase.edge_flip_metric(Vector3d, Vector3d) MeshRefinerBase.collapse_creates_flip_or_invalid(Int32, Int32, Vector3d, Int32, Int32) MeshRefinerBase.flip_inverts_normals(Int32, Int32, Int32, Int32, Int32) MeshRefinerBase.can_collapse_constraints(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32) MeshRefinerBase.can_collapse_vtx(Int32, Int32, Int32, Int32) MeshRefinerBase.vertex_is_fixed(Int32) MeshRefinerBase.vertex_is_constrained(Int32) MeshRefinerBase.get_vertex_constraint(Int32) MeshRefinerBase.get_vertex_constraint(Int32, VertexConstraint) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class Remesher : MeshRefinerBase Constructors | Improve this Doc View Source Remesher() Declaration protected Remesher() | Improve this Doc View Source Remesher(DMesh3) Declaration public Remesher(DMesh3 m) Parameters Type Name Description DMesh3 m Fields | Improve this Doc View Source CustomSmoothF Declaration public Func<DMesh3, int, double, Vector3d> CustomSmoothF Field Value Type Description Func < DMesh3 , Int32 , Double , Vector3d > | Improve this Doc View Source DebugEdges Declaration public List<int> DebugEdges Field Value Type Description List < Int32 > | Improve this Doc View Source ENABLE_DEBUG_CHECKS Declaration public bool ENABLE_DEBUG_CHECKS Field Value Type Description Boolean | Improve this Doc View Source ENABLE_PROFILING Declaration public bool ENABLE_PROFILING Field Value Type Description Boolean | Improve this Doc View Source EnableCollapses Declaration public bool EnableCollapses Field Value Type Description Boolean | Improve this Doc View Source EnableFlips Declaration public bool EnableFlips Field Value Type Description Boolean | Improve this Doc View Source EnableParallelProjection Declaration public bool EnableParallelProjection Field Value Type Description Boolean | Improve this Doc View Source EnableParallelSmooth Declaration public bool EnableParallelSmooth Field Value Type Description Boolean | Improve this Doc View Source EnableSmoothing Declaration public bool EnableSmoothing Field Value Type Description Boolean | Improve this Doc View Source EnableSmoothInPlace Declaration public bool EnableSmoothInPlace Field Value Type Description Boolean | Improve this Doc View Source EnableSplits Declaration public bool EnableSplits Field Value Type Description Boolean | Improve this Doc View Source MaxEdgeLength Declaration public double MaxEdgeLength Field Value Type Description Double | Improve this Doc View Source MinEdgeLength Declaration public double MinEdgeLength Field Value Type Description Double | Improve this Doc View Source ModifiedEdgesLastPass Number of edges that were modified in previous Remesh pass. If this number gets small relative to edge count, you have probably converged (ish) Declaration public int ModifiedEdgesLastPass Field Value Type Description Int32 | Improve this Doc View Source PreventNormalFlips Declaration public bool PreventNormalFlips Field Value Type Description Boolean | Improve this Doc View Source ProjectionMode Declaration public Remesher.TargetProjectionMode ProjectionMode Field Value Type Description Remesher.TargetProjectionMode | Improve this Doc View Source SmoothSpeedT Declaration public double SmoothSpeedT Field Value Type Description Double | Improve this Doc View Source SmoothType Declaration public Remesher.SmoothTypes SmoothType Field Value Type Description Remesher.SmoothTypes | Improve this Doc View Source vBufferV Declaration protected DVector<Vector3d> vBufferV Field Value Type Description DVector < Vector3d > | Improve this Doc View Source VertexControlF Declaration public Func<int, Remesher.VertexControl> VertexControlF Field Value Type Description Func < Int32 , Remesher.VertexControl > | Improve this Doc View Source vModifiedV Declaration protected BitArray vModifiedV Field Value Type Description BitArray Properties | Improve this Doc View Source ProjectionTarget Declaration public IProjectionTarget ProjectionTarget { get; } Property Value Type Description IProjectionTarget Methods | Improve this Doc View Source ApplyVertexBuffer(Boolean) Declaration protected virtual void ApplyVertexBuffer(bool bParallel) Parameters Type Name Description Boolean bParallel | Improve this Doc View Source BasicRemeshPass() Linear edge-refinement pass, followed by smoothing and projection Edges are processed in prime-modulo-order to break symmetry smoothing is done in parallel if EnableParallelSmooth = true Projection pass if ProjectionMode == AfterRefinement number of modified edges returned in ModifiedEdgesLastPass Declaration public virtual void BasicRemeshPass() | Improve this Doc View Source begin_collapse() Declaration protected virtual void begin_collapse() | Improve this Doc View Source begin_flip() Declaration protected virtual void begin_flip() | Improve this Doc View Source begin_ops() Declaration protected virtual void begin_ops() | Improve this Doc View Source begin_pass() Declaration protected virtual void begin_pass() | Improve this Doc View Source begin_project() Declaration protected virtual void begin_project() | Improve this Doc View Source begin_smooth() Declaration protected virtual void begin_smooth() | Improve this Doc View Source begin_split() Declaration protected virtual void begin_split() | Improve this Doc View Source ComputeSmoothedVertexPos(Int32, Func<DMesh3, Int32, Double, Vector3d>, out Boolean) This computes smoothed positions w/ proper constraints/etc. Does not modify mesh. Declaration protected virtual Vector3d ComputeSmoothedVertexPos(int vID, Func<DMesh3, int, double, Vector3d> smoothFunc, out bool bModified) Parameters Type Name Description Int32 vID Func < DMesh3 , Int32 , Double , Vector3d > smoothFunc Boolean bModified Returns Type Description Vector3d | Improve this Doc View Source DoDebugChecks() Declaration protected virtual void DoDebugChecks() | Improve this Doc View Source end_collapse() Declaration protected virtual void end_collapse() | Improve this Doc View Source end_flip() Declaration protected virtual void end_flip() | Improve this Doc View Source end_ops() Declaration protected virtual void end_ops() | Improve this Doc View Source end_pass() Declaration protected virtual void end_pass() | Improve this Doc View Source end_project() Declaration protected virtual void end_project() | Improve this Doc View Source end_smooth() Declaration protected virtual void end_smooth() | Improve this Doc View Source end_split() Declaration protected virtual void end_split() | Improve this Doc View Source FullProjectionPass() Declaration protected virtual void FullProjectionPass() | Improve this Doc View Source FullSmoothPass_Buffer(Boolean) Declaration protected virtual void FullSmoothPass_Buffer(bool bParallel) Parameters Type Name Description Boolean bParallel | Improve this Doc View Source FullSmoothPass_InPlace(Boolean) Declaration protected virtual void FullSmoothPass_InPlace(bool bParallel) Parameters Type Name Description Boolean bParallel | Improve this Doc View Source get_projected_collapse_position(Int32, Vector3d) Declaration protected virtual Vector3d get_projected_collapse_position(int vid, Vector3d vNewPos) Parameters Type Name Description Int32 vid Vector3d vNewPos Returns Type Description Vector3d | Improve this Doc View Source InitializeVertexBufferForPass() Declaration protected virtual void InitializeVertexBufferForPass() | Improve this Doc View Source next_edge(Int32, out Boolean) Declaration protected virtual int next_edge(int cur_eid, out bool bDone) Parameters Type Name Description Int32 cur_eid Boolean bDone Returns Type Description Int32 | Improve this Doc View Source OnEdgeCollapse(Int32, Int32, Int32, DMesh3.EdgeCollapseInfo) Declaration protected virtual void OnEdgeCollapse(int edgeID, int va, int vb, DMesh3.EdgeCollapseInfo collapseInfo) Parameters Type Name Description Int32 edgeID Int32 va Int32 vb DMesh3.EdgeCollapseInfo collapseInfo | Improve this Doc View Source OnEdgeSplit(Int32, Int32, Int32, DMesh3.EdgeSplitInfo) Declaration protected virtual void OnEdgeSplit(int edgeID, int va, int vb, DMesh3.EdgeSplitInfo splitInfo) Parameters Type Name Description Int32 edgeID Int32 va Int32 vb DMesh3.EdgeSplitInfo splitInfo | Improve this Doc View Source Precompute() we can vastly speed things up if we precompute some invariants. You need to re-run this if you are changing the mesh externally between remesh passes, otherwise you will get weird results. But you will probably still come out ahead, computation-time-wise Declaration public virtual void Precompute() | Improve this Doc View Source ProcessEdge(Int32) Declaration protected virtual Remesher.ProcessResult ProcessEdge(int edgeID) Parameters Type Name Description Int32 edgeID Returns Type Description Remesher.ProcessResult | Improve this Doc View Source project_vertex(Int32, IProjectionTarget) Declaration protected virtual void project_vertex(int vID, IProjectionTarget targetIn) Parameters Type Name Description Int32 vID IProjectionTarget targetIn | Improve this Doc View Source project_vertices() Declaration protected virtual IEnumerable<int> project_vertices() Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source SetProjectionTarget(IProjectionTarget) Declaration public void SetProjectionTarget(IProjectionTarget target) Parameters Type Name Description IProjectionTarget target | Improve this Doc View Source SetTargetEdgeLength(Double) Set min/max edge-lengths to sane values for given target edge length Declaration public void SetTargetEdgeLength(double fLength) Parameters Type Name Description Double fLength | Improve this Doc View Source smooth_vertices() Declaration protected virtual IEnumerable<int> smooth_vertices() Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source start_edges() Declaration protected virtual int start_edges() Returns Type Description Int32 | Improve this Doc View Source update_after_split(Int32, Int32, Int32, ref DMesh3.EdgeSplitInfo) Declaration protected virtual void update_after_split(int edgeID, int va, int vb, ref DMesh3.EdgeSplitInfo splitInfo) Parameters Type Name Description Int32 edgeID Int32 va Int32 vb DMesh3.EdgeSplitInfo splitInfo"
  },
  "api/g3.Remesher.ProcessResult.html": {
    "href": "api/g3.Remesher.ProcessResult.html",
    "title": "Enum Remesher.ProcessResult | ViRGIS VR GIS",
    "keywords": "Enum Remesher.ProcessResult Namespace : g3 Assembly : geometry3Sharp.dll Syntax protected enum ProcessResult Fields Name Description Failed_NotAnEdge Failed_OpNotSuccessful Ignored_EdgeIsFine Ignored_EdgeIsFullyConstrained Ok_Collapsed Ok_Flipped Ok_Split"
  },
  "api/g3.Remesher.SmoothTypes.html": {
    "href": "api/g3.Remesher.SmoothTypes.html",
    "title": "Enum Remesher.SmoothTypes | ViRGIS VR GIS",
    "keywords": "Enum Remesher.SmoothTypes Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum SmoothTypes Fields Name Description Cotan MeanValue Uniform"
  },
  "api/g3.Remesher.TargetProjectionMode.html": {
    "href": "api/g3.Remesher.TargetProjectionMode.html",
    "title": "Enum Remesher.TargetProjectionMode | ViRGIS VR GIS",
    "keywords": "Enum Remesher.TargetProjectionMode Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum TargetProjectionMode Fields Name Description AfterRefinement Inline NoProjection"
  },
  "api/g3.Remesher.VertexControl.html": {
    "href": "api/g3.Remesher.VertexControl.html",
    "title": "Enum Remesher.VertexControl | ViRGIS VR GIS",
    "keywords": "Enum Remesher.VertexControl Namespace : g3 Assembly : geometry3Sharp.dll Syntax [Flags] public enum VertexControl Fields Name Description AllowAll NoMovement NoProject NoSmooth"
  },
  "api/g3.RemoveTrianglesMeshChange.html": {
    "href": "api/g3.RemoveTrianglesMeshChange.html",
    "title": "Class RemoveTrianglesMeshChange | ViRGIS VR GIS",
    "keywords": "Class RemoveTrianglesMeshChange Remove triangles from mesh and store necessary data to be able to reverse the change. Vertex and Triangle IDs will be restored on Revert() Currently does not restore the same EdgeIDs Inheritance Object RemoveTrianglesMeshChange Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class RemoveTrianglesMeshChange Constructors | Improve this Doc View Source RemoveTrianglesMeshChange() Declaration public RemoveTrianglesMeshChange() Fields | Improve this Doc View Source Colors Declaration protected DVector<Vector3f> Colors Field Value Type Description DVector < Vector3f > | Improve this Doc View Source Normals Declaration protected DVector<Vector3f> Normals Field Value Type Description DVector < Vector3f > | Improve this Doc View Source OnApplyF Declaration public Action<IEnumerable<int>, IEnumerable<int>> OnApplyF Field Value Type Description Action < IEnumerable < Int32 >, IEnumerable < Int32 >> | Improve this Doc View Source OnRevertF Declaration public Action<IEnumerable<int>, IEnumerable<int>> OnRevertF Field Value Type Description Action < IEnumerable < Int32 >, IEnumerable < Int32 >> | Improve this Doc View Source Positions Declaration protected DVector<Vector3d> Positions Field Value Type Description DVector < Vector3d > | Improve this Doc View Source RemovedT Declaration protected DVector<int> RemovedT Field Value Type Description DVector < Int32 > | Improve this Doc View Source RemovedV Declaration protected DVector<int> RemovedV Field Value Type Description DVector < Int32 > | Improve this Doc View Source Triangles Declaration protected DVector<Index4i> Triangles Field Value Type Description DVector < Index4i > | Improve this Doc View Source UVs Declaration protected DVector<Vector2f> UVs Field Value Type Description DVector < Vector2f > Methods | Improve this Doc View Source Apply(DMesh3) Declaration public void Apply(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh | Improve this Doc View Source InitializeFromApply(DMesh3, IEnumerable<Int32>) Declaration public void InitializeFromApply(DMesh3 mesh, IEnumerable<int> triangles) Parameters Type Name Description DMesh3 mesh IEnumerable < Int32 > triangles | Improve this Doc View Source InitializeFromExisting(DMesh3, IEnumerable<Int32>) Declaration public void InitializeFromExisting(DMesh3 mesh, IEnumerable<int> remove_t) Parameters Type Name Description DMesh3 mesh IEnumerable < Int32 > remove_t | Improve this Doc View Source Revert(DMesh3) Declaration public void Revert(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh"
  },
  "api/g3.RoundRectGenerator.Corner.html": {
    "href": "api/g3.RoundRectGenerator.Corner.html",
    "title": "Enum RoundRectGenerator.Corner | ViRGIS VR GIS",
    "keywords": "Enum RoundRectGenerator.Corner Namespace : g3 Assembly : geometry3Sharp.dll Syntax [Flags] public enum Corner Fields Name Description BottomLeft BottomRight TopLeft TopRight"
  },
  "api/g3.RoundRectGenerator.html": {
    "href": "api/g3.RoundRectGenerator.html",
    "title": "Class RoundRectGenerator | ViRGIS VR GIS",
    "keywords": "Class RoundRectGenerator Inheritance Object MeshGenerator RoundRectGenerator Inherited Members MeshGenerator.vertices MeshGenerator.uv MeshGenerator.normals MeshGenerator.triangles MeshGenerator.groups MeshGenerator.WantUVs MeshGenerator.WantNormals MeshGenerator.WantGroups MeshGenerator.Clockwise MeshGenerator.MakeMesh(SimpleMesh) MeshGenerator.MakeSimpleMesh() MeshGenerator.MakeMesh(DMesh3) MeshGenerator.MakeDMesh() MeshGenerator.MakeMesh(NTMesh3) MeshGenerator.MakeNTMesh() MeshGenerator.duplicate_vertex_span(Int32, Int32) MeshGenerator.append_disc(Int32, Int32, Int32, Boolean, Boolean, Int32, Int32) MeshGenerator.append_rectangle(Int32, Int32, Int32, Int32, Boolean, Int32, Int32) MeshGenerator.append_2d_disc_segment(Int32, Int32, Int32, Int32, Boolean, Int32, Int32, Int32, Double) MeshGenerator.estimate_normal(Int32, Int32, Int32) MeshGenerator.bilerp(Vector3d, Vector3d, Vector3d, Vector3d, Double, Double) MeshGenerator.bilerp(Vector2d, Vector2d, Vector2d, Vector2d, Double, Double) MeshGenerator.bilerp(Vector2f, Vector2f, Vector2f, Vector2f, Single, Single) MeshGenerator.bilerp(Vector3i, Vector3i, Vector3i, Vector3i, Double, Double) MeshGenerator.lerp(Vector3i, Vector3i, Double) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class RoundRectGenerator : MeshGenerator Fields | Improve this Doc View Source CornerSteps Declaration public int CornerSteps Field Value Type Description Int32 | Improve this Doc View Source Height Declaration public float Height Field Value Type Description Single | Improve this Doc View Source Radius Declaration public float Radius Field Value Type Description Single | Improve this Doc View Source SharpCorners Declaration public RoundRectGenerator.Corner SharpCorners Field Value Type Description RoundRectGenerator.Corner | Improve this Doc View Source UVMode Declaration public RoundRectGenerator.UVModes UVMode Field Value Type Description RoundRectGenerator.UVModes | Improve this Doc View Source Width Declaration public float Width Field Value Type Description Single Methods | Improve this Doc View Source Generate() Declaration public override MeshGenerator Generate() Returns Type Description MeshGenerator Overrides MeshGenerator.Generate() | Improve this Doc View Source GetBorderLoop() This is a utility function that returns the set of border points, which is useful when we use a roundrect as a UI element and want the border Declaration public Vector3d[] GetBorderLoop() Returns Type Description Vector3d []"
  },
  "api/g3.RoundRectGenerator.UVModes.html": {
    "href": "api/g3.RoundRectGenerator.UVModes.html",
    "title": "Enum RoundRectGenerator.UVModes | ViRGIS VR GIS",
    "keywords": "Enum RoundRectGenerator.UVModes Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum UVModes Fields Name Description BottomCornerUVRectangle CenteredUVRectangle FullUVSquare"
  },
  "api/g3.SafeListBuilder-1.html": {
    "href": "api/g3.SafeListBuilder-1.html",
    "title": "Class SafeListBuilder<T> | ViRGIS VR GIS",
    "keywords": "Class SafeListBuilder<T> Inheritance Object SafeListBuilder<T> Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SafeListBuilder<T> Type Parameters Name Description T Constructors | Improve this Doc View Source SafeListBuilder() Declaration public SafeListBuilder() Fields | Improve this Doc View Source List Declaration public List<T> List Field Value Type Description List <T> | Improve this Doc View Source spinlock Declaration public SpinLock spinlock Field Value Type Description SpinLock Properties | Improve this Doc View Source Result Declaration public List<T> Result { get; } Property Value Type Description List <T> Methods | Improve this Doc View Source SafeAdd(T) Declaration public void SafeAdd(T value) Parameters Type Name Description T value | Improve this Doc View Source SafeOperation(Action<List<T>>) Declaration public void SafeOperation(Action<List<T>> opF) Parameters Type Name Description Action < List <T>> opF"
  },
  "api/g3.SampledArcLengthParam.html": {
    "href": "api/g3.SampledArcLengthParam.html",
    "title": "Class SampledArcLengthParam | ViRGIS VR GIS",
    "keywords": "Class SampledArcLengthParam Inheritance Object SampledArcLengthParam Implements IArcLengthParam Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SampledArcLengthParam : IArcLengthParam Constructors | Improve this Doc View Source SampledArcLengthParam(IEnumerable<Vector3d>, Int32) Declaration public SampledArcLengthParam(IEnumerable<Vector3d> samples, int nCountHint = -1) Parameters Type Name Description IEnumerable < Vector3d > samples Int32 nCountHint Properties | Improve this Doc View Source ArcLength Declaration public double ArcLength { get; } Property Value Type Description Double Methods | Improve this Doc View Source Sample(Double) Declaration public CurveSample Sample(double f) Parameters Type Name Description Double f Returns Type Description CurveSample | Improve this Doc View Source tangent(Int32) Declaration protected Vector3d tangent(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3d Implements IArcLengthParam"
  },
  "api/g3.SampledArcLengthParam2d.html": {
    "href": "api/g3.SampledArcLengthParam2d.html",
    "title": "Class SampledArcLengthParam2d | ViRGIS VR GIS",
    "keywords": "Class SampledArcLengthParam2d Inheritance Object SampledArcLengthParam2d Implements IArcLengthParam2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SampledArcLengthParam2d : IArcLengthParam2d Constructors | Improve this Doc View Source SampledArcLengthParam2d(IEnumerable<Vector2d>, Int32) Declaration public SampledArcLengthParam2d(IEnumerable<Vector2d> samples, int nCountHint = -1) Parameters Type Name Description IEnumerable < Vector2d > samples Int32 nCountHint Properties | Improve this Doc View Source ArcLength Declaration public double ArcLength { get; } Property Value Type Description Double Methods | Improve this Doc View Source Sample(Double) Declaration public CurveSample2d Sample(double f) Parameters Type Name Description Double f Returns Type Description CurveSample2d | Improve this Doc View Source tangent(Int32) Declaration protected Vector2d tangent(int i) Parameters Type Name Description Int32 i Returns Type Description Vector2d Implements IArcLengthParam2d"
  },
  "api/g3.ScalarMap.html": {
    "href": "api/g3.ScalarMap.html",
    "title": "Class ScalarMap | ViRGIS VR GIS",
    "keywords": "Class ScalarMap Scalar version of a ColorMap (ie interpolate between sample points) [TODO] could we make this a template? Inheritance Object ScalarMap Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ScalarMap Constructors | Improve this Doc View Source ScalarMap() Declaration public ScalarMap() Methods | Improve this Doc View Source AddPoint(Double, Double) Declaration public void AddPoint(double t, double value) Parameters Type Name Description Double t Double value | Improve this Doc View Source Linear(Double) Declaration public double Linear(double t) Parameters Type Name Description Double t Returns Type Description Double"
  },
  "api/g3.ScaleGridIndexer2.html": {
    "href": "api/g3.ScaleGridIndexer2.html",
    "title": "Struct ScaleGridIndexer2 | ViRGIS VR GIS",
    "keywords": "Struct ScaleGridIndexer2 Map to/from grid coords Implements IGridWorldIndexer2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct ScaleGridIndexer2 : IGridWorldIndexer2 Constructors | Improve this Doc View Source ScaleGridIndexer2(Double) Declaration public ScaleGridIndexer2(double cellSize) Parameters Type Name Description Double cellSize Fields | Improve this Doc View Source CellSize Declaration public double CellSize Field Value Type Description Double Methods | Improve this Doc View Source FromGrid(Vector2d) Declaration public Vector2d FromGrid(Vector2d gridpointf) Parameters Type Name Description Vector2d gridpointf Returns Type Description Vector2d | Improve this Doc View Source FromGrid(Vector2i) Declaration public Vector2d FromGrid(Vector2i gridpoint) Parameters Type Name Description Vector2i gridpoint Returns Type Description Vector2d | Improve this Doc View Source ToGrid(Vector2d) Declaration public Vector2i ToGrid(Vector2d point) Parameters Type Name Description Vector2d point Returns Type Description Vector2i Implements IGridWorldIndexer2"
  },
  "api/g3.ScaleGridIndexer3.html": {
    "href": "api/g3.ScaleGridIndexer3.html",
    "title": "Struct ScaleGridIndexer3 | ViRGIS VR GIS",
    "keywords": "Struct ScaleGridIndexer3 Map to/from grid coords Implements IGridWorldIndexer3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct ScaleGridIndexer3 : IGridWorldIndexer3 Constructors | Improve this Doc View Source ScaleGridIndexer3(Double) Declaration public ScaleGridIndexer3(double cellSize) Parameters Type Name Description Double cellSize Fields | Improve this Doc View Source CellSize Declaration public double CellSize Field Value Type Description Double Methods | Improve this Doc View Source FromGrid(Vector3d) Declaration public Vector3d FromGrid(Vector3d gridpointf) Parameters Type Name Description Vector3d gridpointf Returns Type Description Vector3d | Improve this Doc View Source FromGrid(Vector3i) Declaration public Vector3d FromGrid(Vector3i gridpoint) Parameters Type Name Description Vector3i gridpoint Returns Type Description Vector3d | Improve this Doc View Source ToGrid(Vector3d) Declaration public Vector3i ToGrid(Vector3d point) Parameters Type Name Description Vector3d point Returns Type Description Vector3i | Improve this Doc View Source ToGridf(Vector3d) Declaration public Vector3d ToGridf(Vector3d point) Parameters Type Name Description Vector3d point Returns Type Description Vector3d Implements IGridWorldIndexer3"
  },
  "api/g3.SculptCurveDeformation.DeformInfo.html": {
    "href": "api/g3.SculptCurveDeformation.DeformInfo.html",
    "title": "Struct SculptCurveDeformation.DeformInfo | ViRGIS VR GIS",
    "keywords": "Struct SculptCurveDeformation.DeformInfo Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct DeformInfo Fields | Improve this Doc View Source bNoChange Declaration public bool bNoChange Field Value Type Description Boolean | Improve this Doc View Source maxEdgeLenSqr Declaration public double maxEdgeLenSqr Field Value Type Description Double | Improve this Doc View Source minEdgeLenSqr Declaration public double minEdgeLenSqr Field Value Type Description Double"
  },
  "api/g3.SculptCurveDeformation.html": {
    "href": "api/g3.SculptCurveDeformation.html",
    "title": "Class SculptCurveDeformation | ViRGIS VR GIS",
    "keywords": "Class SculptCurveDeformation Base-class for DCurve3 spatial deformations. Subclasses must implement abstract Apply() method. Inheritance Object SculptCurveDeformation StandardSculptCurveDeformation Namespace : g3 Assembly : geometry3Sharp.dll Syntax public abstract class SculptCurveDeformation Constructors | Improve this Doc View Source SculptCurveDeformation() Declaration public SculptCurveDeformation() Fields | Improve this Doc View Source _curve Declaration protected DCurve3 _curve Field Value Type Description DCurve3 | Improve this Doc View Source _weightfunc Declaration protected Func<double, double, double> _weightfunc Field Value Type Description Func < Double , Double , Double > | Improve this Doc View Source radius Declaration protected double radius Field Value Type Description Double | Improve this Doc View Source vPreviousPos Declaration protected Frame3f vPreviousPos Field Value Type Description Frame3f Properties | Improve this Doc View Source Curve Declaration public DCurve3 Curve { get; set; } Property Value Type Description DCurve3 | Improve this Doc View Source Radius Declaration public double Radius { get; set; } Property Value Type Description Double | Improve this Doc View Source WeightFunc Declaration public Func<double, double, double> WeightFunc { get; set; } Property Value Type Description Func < Double , Double , Double > Methods | Improve this Doc View Source Apply(Frame3f) Declaration public abstract SculptCurveDeformation.DeformInfo Apply(Frame3f vNextPos) Parameters Type Name Description Frame3f vNextPos Returns Type Description SculptCurveDeformation.DeformInfo | Improve this Doc View Source BeginDeformation(Frame3f) Declaration public virtual void BeginDeformation(Frame3f vStartPos) Parameters Type Name Description Frame3f vStartPos | Improve this Doc View Source UpdateDeformation(Frame3f) Declaration public virtual SculptCurveDeformation.DeformInfo UpdateDeformation(Frame3f vNextPos) Parameters Type Name Description Frame3f vNextPos Returns Type Description SculptCurveDeformation.DeformInfo"
  },
  "api/g3.SculptCurveMove.html": {
    "href": "api/g3.SculptCurveMove.html",
    "title": "Class SculptCurveMove | ViRGIS VR GIS",
    "keywords": "Class SculptCurveMove Inheritance Object SculptCurveDeformation StandardSculptCurveDeformation SculptCurveMove Inherited Members StandardSculptCurveDeformation.DeformF StandardSculptCurveDeformation.SmoothAlpha StandardSculptCurveDeformation.SmoothIterations StandardSculptCurveDeformation.NewV StandardSculptCurveDeformation.ModifiedV SculptCurveDeformation._curve SculptCurveDeformation.Curve SculptCurveDeformation._weightfunc SculptCurveDeformation.WeightFunc SculptCurveDeformation.radius SculptCurveDeformation.Radius SculptCurveDeformation.vPreviousPos SculptCurveDeformation.BeginDeformation(Frame3f) SculptCurveDeformation.UpdateDeformation(Frame3f) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SculptCurveMove : StandardSculptCurveDeformation Constructors | Improve this Doc View Source SculptCurveMove() Declaration public SculptCurveMove() Methods | Improve this Doc View Source Apply(Frame3f) Declaration public override SculptCurveDeformation.DeformInfo Apply(Frame3f vNextPos) Parameters Type Name Description Frame3f vNextPos Returns Type Description SculptCurveDeformation.DeformInfo Overrides StandardSculptCurveDeformation.Apply(Frame3f)"
  },
  "api/g3.SculptCurveSmooth.html": {
    "href": "api/g3.SculptCurveSmooth.html",
    "title": "Class SculptCurveSmooth | ViRGIS VR GIS",
    "keywords": "Class SculptCurveSmooth Inheritance Object SculptCurveDeformation StandardSculptCurveDeformation SculptCurveSmooth Inherited Members StandardSculptCurveDeformation.DeformF StandardSculptCurveDeformation.SmoothAlpha StandardSculptCurveDeformation.SmoothIterations StandardSculptCurveDeformation.NewV StandardSculptCurveDeformation.ModifiedV StandardSculptCurveDeformation.Apply(Frame3f) SculptCurveDeformation._curve SculptCurveDeformation.Curve SculptCurveDeformation._weightfunc SculptCurveDeformation.WeightFunc SculptCurveDeformation.radius SculptCurveDeformation.Radius SculptCurveDeformation.vPreviousPos SculptCurveDeformation.BeginDeformation(Frame3f) SculptCurveDeformation.UpdateDeformation(Frame3f) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SculptCurveSmooth : StandardSculptCurveDeformation Constructors | Improve this Doc View Source SculptCurveSmooth() Declaration public SculptCurveSmooth()"
  },
  "api/g3.Segment2d.html": {
    "href": "api/g3.Segment2d.html",
    "title": "Struct Segment2d | ViRGIS VR GIS",
    "keywords": "Struct Segment2d Implements IParametricCurve2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Segment2d : IParametricCurve2d Constructors | Improve this Doc View Source Segment2d(Vector2d, Vector2d) Declaration public Segment2d(Vector2d p0, Vector2d p1) Parameters Type Name Description Vector2d p0 Vector2d p1 | Improve this Doc View Source Segment2d(Vector2d, Vector2d, Double) Declaration public Segment2d(Vector2d center, Vector2d direction, double extent) Parameters Type Name Description Vector2d center Vector2d direction Double extent Fields | Improve this Doc View Source Center Declaration public Vector2d Center Field Value Type Description Vector2d | Improve this Doc View Source Direction Declaration public Vector2d Direction Field Value Type Description Vector2d | Improve this Doc View Source Extent Declaration public double Extent Field Value Type Description Double Properties | Improve this Doc View Source ArcLength Declaration public double ArcLength { get; } Property Value Type Description Double | Improve this Doc View Source HasArcLength Declaration public bool HasArcLength { get; } Property Value Type Description Boolean | Improve this Doc View Source IsClosed Declaration public bool IsClosed { get; } Property Value Type Description Boolean | Improve this Doc View Source IsTransformable Declaration public bool IsTransformable { get; } Property Value Type Description Boolean | Improve this Doc View Source Length Declaration public double Length { get; } Property Value Type Description Double | Improve this Doc View Source P0 Declaration public Vector2d P0 { get; set; } Property Value Type Description Vector2d | Improve this Doc View Source P1 Declaration public Vector2d P1 { get; set; } Property Value Type Description Vector2d | Improve this Doc View Source ParamLength Declaration public double ParamLength { get; } Property Value Type Description Double Methods | Improve this Doc View Source Clone() Declaration public IParametricCurve2d Clone() Returns Type Description IParametricCurve2d | Improve this Doc View Source DistanceSquared(Vector2d) Declaration public double DistanceSquared(Vector2d p) Parameters Type Name Description Vector2d p Returns Type Description Double | Improve this Doc View Source DistanceSquared(Vector2d, out Double) Declaration public double DistanceSquared(Vector2d p, out double t) Parameters Type Name Description Vector2d p Double t Returns Type Description Double | Improve this Doc View Source Endpoint(Int32) Declaration public Vector2d Endpoint(int i) Parameters Type Name Description Int32 i Returns Type Description Vector2d | Improve this Doc View Source FastDistanceSquared(ref Vector2d, ref Vector2d, ref Vector2d) distance from pt to segment (a,b), with no square roots Declaration public static double FastDistanceSquared(ref Vector2d a, ref Vector2d b, ref Vector2d pt) Parameters Type Name Description Vector2d a Vector2d b Vector2d pt Returns Type Description Double | Improve this Doc View Source Intersects(Segment2d, Double, Double) Declaration public bool Intersects(Segment2d seg2, double dotThresh = 4.94065645841247E-324, double intervalThresh = 0) Parameters Type Name Description Segment2d seg2 Double dotThresh Double intervalThresh Returns Type Description Boolean | Improve this Doc View Source Intersects(ref Segment2d, Double, Double) Test if segments intersect. Returns true for parallel-line overlaps. Returns same result as IntrSegment2Segment2. Declaration public bool Intersects(ref Segment2d seg2, double dotThresh = 4.94065645841247E-324, double intervalThresh = 0) Parameters Type Name Description Segment2d seg2 Double dotThresh Double intervalThresh Returns Type Description Boolean | Improve this Doc View Source NearestPoint(Vector2d) Declaration public Vector2d NearestPoint(Vector2d p) Parameters Type Name Description Vector2d p Returns Type Description Vector2d | Improve this Doc View Source PointAt(Double) Declaration public Vector2d PointAt(double d) Parameters Type Name Description Double d Returns Type Description Vector2d | Improve this Doc View Source PointBetween(Double) Declaration public Vector2d PointBetween(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source Project(Vector2d) Declaration public double Project(Vector2d p) Parameters Type Name Description Vector2d p Returns Type Description Double | Improve this Doc View Source Reverse() Declaration public void Reverse() | Improve this Doc View Source SampleArcLength(Double) Declaration public Vector2d SampleArcLength(double a) Parameters Type Name Description Double a Returns Type Description Vector2d | Improve this Doc View Source SampleT(Double) Declaration public Vector2d SampleT(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source TangentT(Double) Declaration public Vector2d TangentT(double t) Parameters Type Name Description Double t Returns Type Description Vector2d | Improve this Doc View Source Transform(ITransform2) Declaration public void Transform(ITransform2 xform) Parameters Type Name Description ITransform2 xform | Improve this Doc View Source WhichSide(Vector2d, Double) Returns: +1, on right of line -1, on left of line 0, on the line Declaration public int WhichSide(Vector2d test, double tol = 0) Parameters Type Name Description Vector2d test Double tol Returns Type Description Int32 | Improve this Doc View Source WhichSide(ref Vector2d, ref Vector2d, ref Vector2d, Double) Returns: +1, on right of line -1, on left of line 0, on the line Declaration public static int WhichSide(ref Vector2d a, ref Vector2d b, ref Vector2d test, double tol = 0) Parameters Type Name Description Vector2d a Vector2d b Vector2d test Double tol Returns Type Description Int32 Implements IParametricCurve2d"
  },
  "api/g3.Segment2dBox.html": {
    "href": "api/g3.Segment2dBox.html",
    "title": "Class Segment2dBox | ViRGIS VR GIS",
    "keywords": "Class Segment2dBox Inheritance Object Segment2dBox Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class Segment2dBox Constructors | Improve this Doc View Source Segment2dBox() Declaration public Segment2dBox() | Improve this Doc View Source Segment2dBox(Segment2d) Declaration public Segment2dBox(Segment2d seg) Parameters Type Name Description Segment2d seg Fields | Improve this Doc View Source Segment Declaration public Segment2d Segment Field Value Type Description Segment2d Operators | Improve this Doc View Source Implicit(Segment2dBox to Segment2d) Declaration public static implicit operator Segment2d(Segment2dBox box) Parameters Type Name Description Segment2dBox box Returns Type Description Segment2d"
  },
  "api/g3.Segment2f.html": {
    "href": "api/g3.Segment2f.html",
    "title": "Struct Segment2f | ViRGIS VR GIS",
    "keywords": "Struct Segment2f Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Segment2f Constructors | Improve this Doc View Source Segment2f(Vector2f, Vector2f) Declaration public Segment2f(Vector2f p0, Vector2f p1) Parameters Type Name Description Vector2f p0 Vector2f p1 | Improve this Doc View Source Segment2f(Vector2f, Vector2f, Single) Declaration public Segment2f(Vector2f center, Vector2f direction, float extent) Parameters Type Name Description Vector2f center Vector2f direction Single extent Fields | Improve this Doc View Source Center Declaration public Vector2f Center Field Value Type Description Vector2f | Improve this Doc View Source Direction Declaration public Vector2f Direction Field Value Type Description Vector2f | Improve this Doc View Source Extent Declaration public float Extent Field Value Type Description Single Properties | Improve this Doc View Source Length Declaration public float Length { get; } Property Value Type Description Single | Improve this Doc View Source P0 Declaration public Vector2f P0 { get; set; } Property Value Type Description Vector2f | Improve this Doc View Source P1 Declaration public Vector2f P1 { get; set; } Property Value Type Description Vector2f Methods | Improve this Doc View Source DistanceSquared(Vector2f) Declaration public float DistanceSquared(Vector2f p) Parameters Type Name Description Vector2f p Returns Type Description Single | Improve this Doc View Source FastDistanceSquared(ref Vector2f, ref Vector2f, ref Vector2f) distance from pt to segment (a,b), with no square roots Declaration public static float FastDistanceSquared(ref Vector2f a, ref Vector2f b, ref Vector2f pt) Parameters Type Name Description Vector2f a Vector2f b Vector2f pt Returns Type Description Single | Improve this Doc View Source NearestPoint(Vector2f) Declaration public Vector2f NearestPoint(Vector2f p) Parameters Type Name Description Vector2f p Returns Type Description Vector2f | Improve this Doc View Source PointAt(Single) Declaration public Vector2f PointAt(float d) Parameters Type Name Description Single d Returns Type Description Vector2f | Improve this Doc View Source PointBetween(Single) Declaration public Vector2f PointBetween(float t) Parameters Type Name Description Single t Returns Type Description Vector2f | Improve this Doc View Source Project(Vector2f) Declaration public float Project(Vector2f p) Parameters Type Name Description Vector2f p Returns Type Description Single"
  },
  "api/g3.Segment3d.html": {
    "href": "api/g3.Segment3d.html",
    "title": "Struct Segment3d | ViRGIS VR GIS",
    "keywords": "Struct Segment3d Implements IParametricCurve3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Segment3d : IParametricCurve3d Constructors | Improve this Doc View Source Segment3d(Vector3d, Vector3d) Declaration public Segment3d(Vector3d p0, Vector3d p1) Parameters Type Name Description Vector3d p0 Vector3d p1 | Improve this Doc View Source Segment3d(Vector3d, Vector3d, Double) Declaration public Segment3d(Vector3d center, Vector3d direction, double extent) Parameters Type Name Description Vector3d center Vector3d direction Double extent Fields | Improve this Doc View Source Center Declaration public Vector3d Center Field Value Type Description Vector3d | Improve this Doc View Source Direction Declaration public Vector3d Direction Field Value Type Description Vector3d | Improve this Doc View Source Extent Declaration public double Extent Field Value Type Description Double Properties | Improve this Doc View Source ArcLength Declaration public double ArcLength { get; } Property Value Type Description Double | Improve this Doc View Source HasArcLength Declaration public bool HasArcLength { get; } Property Value Type Description Boolean | Improve this Doc View Source IsClosed Declaration public bool IsClosed { get; } Property Value Type Description Boolean | Improve this Doc View Source Length Declaration public double Length { get; } Property Value Type Description Double | Improve this Doc View Source P0 Declaration public Vector3d P0 { get; set; } Property Value Type Description Vector3d | Improve this Doc View Source P1 Declaration public Vector3d P1 { get; set; } Property Value Type Description Vector3d | Improve this Doc View Source ParamLength Declaration public double ParamLength { get; } Property Value Type Description Double Methods | Improve this Doc View Source Clone() Declaration public IParametricCurve3d Clone() Returns Type Description IParametricCurve3d | Improve this Doc View Source DistanceSquared(Vector3d) Declaration public double DistanceSquared(Vector3d p) Parameters Type Name Description Vector3d p Returns Type Description Double | Improve this Doc View Source DistanceSquared(Vector3d, out Double) Declaration public double DistanceSquared(Vector3d p, out double t) Parameters Type Name Description Vector3d p Double t Returns Type Description Double | Improve this Doc View Source NearestPoint(Vector3d) Declaration public Vector3d NearestPoint(Vector3d p) Parameters Type Name Description Vector3d p Returns Type Description Vector3d | Improve this Doc View Source PointAt(Double) Declaration public Vector3d PointAt(double d) Parameters Type Name Description Double d Returns Type Description Vector3d | Improve this Doc View Source PointBetween(Double) Declaration public Vector3d PointBetween(double t) Parameters Type Name Description Double t Returns Type Description Vector3d | Improve this Doc View Source Project(Vector3d) Declaration public double Project(Vector3d p) Parameters Type Name Description Vector3d p Returns Type Description Double | Improve this Doc View Source Reverse() Declaration public void Reverse() | Improve this Doc View Source SampleArcLength(Double) Declaration public Vector3d SampleArcLength(double a) Parameters Type Name Description Double a Returns Type Description Vector3d | Improve this Doc View Source SampleT(Double) Declaration public Vector3d SampleT(double t) Parameters Type Name Description Double t Returns Type Description Vector3d | Improve this Doc View Source SetEndpoints(Vector3d, Vector3d) Declaration public void SetEndpoints(Vector3d p0, Vector3d p1) Parameters Type Name Description Vector3d p0 Vector3d p1 | Improve this Doc View Source TangentT(Double) Declaration public Vector3d TangentT(double t) Parameters Type Name Description Double t Returns Type Description Vector3d Operators | Improve this Doc View Source Explicit(Segment3d to Segment3f) Declaration public static explicit operator Segment3f(Segment3d v) Parameters Type Name Description Segment3d v Returns Type Description Segment3f | Improve this Doc View Source Implicit(Segment3f to Segment3d) Declaration public static implicit operator Segment3d(Segment3f v) Parameters Type Name Description Segment3f v Returns Type Description Segment3d Implements IParametricCurve3d"
  },
  "api/g3.Segment3f.html": {
    "href": "api/g3.Segment3f.html",
    "title": "Struct Segment3f | ViRGIS VR GIS",
    "keywords": "Struct Segment3f Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Segment3f Constructors | Improve this Doc View Source Segment3f(Vector3f, Vector3f) Declaration public Segment3f(Vector3f p0, Vector3f p1) Parameters Type Name Description Vector3f p0 Vector3f p1 | Improve this Doc View Source Segment3f(Vector3f, Vector3f, Single) Declaration public Segment3f(Vector3f center, Vector3f direction, float extent) Parameters Type Name Description Vector3f center Vector3f direction Single extent Fields | Improve this Doc View Source Center Declaration public Vector3f Center Field Value Type Description Vector3f | Improve this Doc View Source Direction Declaration public Vector3f Direction Field Value Type Description Vector3f | Improve this Doc View Source Extent Declaration public float Extent Field Value Type Description Single Properties | Improve this Doc View Source Length Declaration public float Length { get; } Property Value Type Description Single | Improve this Doc View Source P0 Declaration public Vector3f P0 { get; set; } Property Value Type Description Vector3f | Improve this Doc View Source P1 Declaration public Vector3f P1 { get; set; } Property Value Type Description Vector3f Methods | Improve this Doc View Source DistanceSquared(Vector3f) Declaration public float DistanceSquared(Vector3f p) Parameters Type Name Description Vector3f p Returns Type Description Single | Improve this Doc View Source NearestPoint(Vector3f) Declaration public Vector3f NearestPoint(Vector3f p) Parameters Type Name Description Vector3f p Returns Type Description Vector3f | Improve this Doc View Source PointAt(Single) Declaration public Vector3f PointAt(float d) Parameters Type Name Description Single d Returns Type Description Vector3f | Improve this Doc View Source PointBetween(Single) Declaration public Vector3f PointBetween(float t) Parameters Type Name Description Single t Returns Type Description Vector3f | Improve this Doc View Source Project(Vector3f) Declaration public float Project(Vector3f p) Parameters Type Name Description Vector3f p Returns Type Description Single | Improve this Doc View Source SetEndpoints(Vector3f, Vector3f) Declaration public void SetEndpoints(Vector3f p0, Vector3f p1) Parameters Type Name Description Vector3f p0 Vector3f p1"
  },
  "api/g3.SegmentHashGrid2d-1.html": {
    "href": "api/g3.SegmentHashGrid2d-1.html",
    "title": "Class SegmentHashGrid2d<T> | ViRGIS VR GIS",
    "keywords": "Class SegmentHashGrid2d<T> Hash Grid for 2D segments. You provide the 'segment' type. If you have an indexable set of segments this can just be int, or can be more complex segment data structure (but be careful w/ structs...) Segments are stored in the grid cell that contains the segment center. We keep track of the extent of the longest segment that has been added. The search radius for distance queries is expanded by this extent. So, distance queries ARE NOT EFFICIENT if you even one very long segment. [TODO] make a multi-level hash Does not actually store 2D segments. So, to remove a segment you must also know it's 2D center, so we can look up the cell coordinates. Hence, to 'update' a segment, you need to know both it's old and new 2D centers. Inheritance Object SegmentHashGrid2d<T> Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SegmentHashGrid2d<T> Type Parameters Name Description T Constructors | Improve this Doc View Source SegmentHashGrid2d(Double, T) \"invalid\" value will be returned by queries if no valid result is found (eg bounded-distance query) Declaration public SegmentHashGrid2d(double cellSize, T invalidValue) Parameters Type Name Description Double cellSize T invalidValue Methods | Improve this Doc View Source FindNearestInRadius(Vector2d, Double, Func<T, Double>, Func<T, Boolean>) Find nearest segment in grid, within radius, without locking / thread-safety You must provided distF which returns distance between query_pt and the segment argument You can ignore specific segments via ignoreF lambda - return true to ignore Return value is pair (nearest_index,min_dist) or (invalidValue,double.MaxValue) Declaration public KeyValuePair<T, double> FindNearestInRadius(Vector2d query_pt, double radius, Func<T, double> distF, Func<T, bool> ignoreF = null) Parameters Type Name Description Vector2d query_pt Double radius Func <T, Double > distF Func <T, Boolean > ignoreF Returns Type Description KeyValuePair <T, Double > | Improve this Doc View Source FindNearestInSquaredRadius(Vector2d, Double, Func<T, Double>, Func<T, Boolean>) Variant of FindNearestInRadius that works with squared-distances. Return value is pair (nearest_index,min_dist) or (invalidValue,double.MaxValue) Declaration public KeyValuePair<T, double> FindNearestInSquaredRadius(Vector2d query_pt, double radiusSqr, Func<T, double> distSqrF, Func<T, bool> ignoreF = null) Parameters Type Name Description Vector2d query_pt Double radiusSqr Func <T, Double > distSqrF Func <T, Boolean > ignoreF Returns Type Description KeyValuePair <T, Double > | Improve this Doc View Source InsertSegment(T, Vector2d, Double) Insert segment at position. This function is thread-safe, uses a SpinLock internally Declaration public void InsertSegment(T value, Vector2d center, double extent) Parameters Type Name Description T value Vector2d center Double extent | Improve this Doc View Source InsertSegmentUnsafe(T, Vector2d, Double) Insert segment without locking / thread-safety Declaration public void InsertSegmentUnsafe(T value, Vector2d center, double extent) Parameters Type Name Description T value Vector2d center Double extent | Improve this Doc View Source RemoveSegment(T, Vector2d) Remove segment. This function is thread-safe, uses a SpinLock internally Declaration public bool RemoveSegment(T value, Vector2d center) Parameters Type Name Description T value Vector2d center Returns Type Description Boolean | Improve this Doc View Source RemoveSegmentUnsafe(T, Vector2d) Remove segment without locking / thread-safety Declaration public bool RemoveSegmentUnsafe(T value, Vector2d center) Parameters Type Name Description T value Vector2d center Returns Type Description Boolean | Improve this Doc View Source UpdateSegment(T, Vector2d, Vector2d, Double) Move segment from old to new position. This function is thread-safe, uses a SpinLock internally Declaration public void UpdateSegment(T value, Vector2d old_center, Vector2d new_center, double new_extent) Parameters Type Name Description T value Vector2d old_center Vector2d new_center Double new_extent | Improve this Doc View Source UpdateSegmentUnsafe(T, Vector2d, Vector2d, Double) Move segment from old to new position without locking / thread-safety Declaration public void UpdateSegmentUnsafe(T value, Vector2d old_center, Vector2d new_center, double new_extent) Parameters Type Name Description T value Vector2d old_center Vector2d new_center Double new_extent"
  },
  "api/g3.SegmentSet2d.html": {
    "href": "api/g3.SegmentSet2d.html",
    "title": "Class SegmentSet2d | ViRGIS VR GIS",
    "keywords": "Class SegmentSet2d Inheritance Object SegmentSet2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SegmentSet2d Constructors | Improve this Doc View Source SegmentSet2d() Declaration public SegmentSet2d() | Improve this Doc View Source SegmentSet2d(GeneralPolygon2d) Declaration public SegmentSet2d(GeneralPolygon2d poly) Parameters Type Name Description GeneralPolygon2d poly | Improve this Doc View Source SegmentSet2d(List<GeneralPolygon2d>) Declaration public SegmentSet2d(List<GeneralPolygon2d> polys) Parameters Type Name Description List < GeneralPolygon2d > polys Methods | Improve this Doc View Source FindAllIntersections(Segment2d, List<Double>, List<Int32>, List<IntrSegment2Segment2>, Boolean) Declaration public void FindAllIntersections(Segment2d seg, List<double> segmentTs, List<int> indices = null, List<IntrSegment2Segment2> tests = null, bool bOnlySimple = true) Parameters Type Name Description Segment2d seg List < Double > segmentTs List < Int32 > indices List < IntrSegment2Segment2 > tests Boolean bOnlySimple | Improve this Doc View Source FindAnyIntersection(Segment2d, out Int32) Find any segment in set that intersects input segment. Returns intersection test, and index of segment Declaration public IntrSegment2Segment2 FindAnyIntersection(Segment2d seg, out int iSegment) Parameters Type Name Description Segment2d seg Int32 iSegment Returns Type Description IntrSegment2Segment2"
  },
  "api/g3.SequentialProjectionTarget.html": {
    "href": "api/g3.SequentialProjectionTarget.html",
    "title": "Class SequentialProjectionTarget | ViRGIS VR GIS",
    "keywords": "Class SequentialProjectionTarget Inheritance Object SequentialProjectionTarget Implements IProjectionTarget Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SequentialProjectionTarget : IProjectionTarget Constructors | Improve this Doc View Source SequentialProjectionTarget() Declaration public SequentialProjectionTarget() | Improve this Doc View Source SequentialProjectionTarget(IProjectionTarget[]) Declaration public SequentialProjectionTarget(params IProjectionTarget[] targets) Parameters Type Name Description IProjectionTarget [] targets Properties | Improve this Doc View Source Targets Declaration public IProjectionTarget[] Targets { get; set; } Property Value Type Description IProjectionTarget [] Methods | Improve this Doc View Source Project(Vector3d, Int32) Declaration public Vector3d Project(Vector3d vPoint, int identifier = -1) Parameters Type Name Description Vector3d vPoint Int32 identifier Returns Type Description Vector3d Implements IProjectionTarget"
  },
  "api/g3.SetGroupBehavior.html": {
    "href": "api/g3.SetGroupBehavior.html",
    "title": "Struct SetGroupBehavior | ViRGIS VR GIS",
    "keywords": "Struct SetGroupBehavior Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct SetGroupBehavior Constructors | Improve this Doc View Source SetGroupBehavior(SetGroupBehavior.Modes, Int32) Declaration public SetGroupBehavior(SetGroupBehavior.Modes mode, int id = 0) Parameters Type Name Description SetGroupBehavior.Modes mode Int32 id Properties | Improve this Doc View Source AutoGenerate Declaration public static SetGroupBehavior AutoGenerate { get; } Property Value Type Description SetGroupBehavior | Improve this Doc View Source Ignore Declaration public static SetGroupBehavior Ignore { get; } Property Value Type Description SetGroupBehavior Methods | Improve this Doc View Source GetGroupID(DMesh3) Declaration public int GetGroupID(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh Returns Type Description Int32 | Improve this Doc View Source SetTo(Int32) Declaration public static SetGroupBehavior SetTo(int groupID) Parameters Type Name Description Int32 groupID Returns Type Description SetGroupBehavior"
  },
  "api/g3.SetGroupBehavior.Modes.html": {
    "href": "api/g3.SetGroupBehavior.Modes.html",
    "title": "Enum SetGroupBehavior.Modes | ViRGIS VR GIS",
    "keywords": "Enum SetGroupBehavior.Modes Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum Modes Fields Name Description AutoGenerate Ignore UseConstant"
  },
  "api/g3.SetVerticesMeshChange.html": {
    "href": "api/g3.SetVerticesMeshChange.html",
    "title": "Class SetVerticesMeshChange | ViRGIS VR GIS",
    "keywords": "Class SetVerticesMeshChange Mesh change for full-mesh vertex deformations - more efficient than ModifyVerticesMeshChange. Note that this does not enforce that vertex count does not change! Inheritance Object SetVerticesMeshChange Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SetVerticesMeshChange Constructors | Improve this Doc View Source SetVerticesMeshChange() Declaration public SetVerticesMeshChange() Fields | Improve this Doc View Source NewColors Declaration public DVector<float> NewColors Field Value Type Description DVector < Single > | Improve this Doc View Source NewNormals Declaration public DVector<float> NewNormals Field Value Type Description DVector < Single > | Improve this Doc View Source NewPositions Declaration public DVector<double> NewPositions Field Value Type Description DVector < Double > | Improve this Doc View Source NewUVs Declaration public DVector<float> NewUVs Field Value Type Description DVector < Single > | Improve this Doc View Source OldColors Declaration public DVector<float> OldColors Field Value Type Description DVector < Single > | Improve this Doc View Source OldNormals Declaration public DVector<float> OldNormals Field Value Type Description DVector < Single > | Improve this Doc View Source OldPositions Declaration public DVector<double> OldPositions Field Value Type Description DVector < Double > | Improve this Doc View Source OldUVs Declaration public DVector<float> OldUVs Field Value Type Description DVector < Single > | Improve this Doc View Source OnApplyF Declaration public Action<SetVerticesMeshChange> OnApplyF Field Value Type Description Action < SetVerticesMeshChange > | Improve this Doc View Source OnRevertF Declaration public Action<SetVerticesMeshChange> OnRevertF Field Value Type Description Action < SetVerticesMeshChange > Methods | Improve this Doc View Source Apply(DMesh3) Declaration public void Apply(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh | Improve this Doc View Source Revert(DMesh3) Declaration public void Revert(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh"
  },
  "api/g3.ShiftGridIndexer2.html": {
    "href": "api/g3.ShiftGridIndexer2.html",
    "title": "Struct ShiftGridIndexer2 | ViRGIS VR GIS",
    "keywords": "Struct ShiftGridIndexer2 Map to/from grid coords, where grid is translated from origin Implements IGridWorldIndexer2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct ShiftGridIndexer2 : IGridWorldIndexer2 Constructors | Improve this Doc View Source ShiftGridIndexer2(Vector2d, Double) Declaration public ShiftGridIndexer2(Vector2d origin, double cellSize) Parameters Type Name Description Vector2d origin Double cellSize Fields | Improve this Doc View Source CellSize Declaration public double CellSize Field Value Type Description Double | Improve this Doc View Source Origin Declaration public Vector2d Origin Field Value Type Description Vector2d Methods | Improve this Doc View Source FromGrid(Vector2d) Declaration public Vector2d FromGrid(Vector2d gridpointf) Parameters Type Name Description Vector2d gridpointf Returns Type Description Vector2d | Improve this Doc View Source FromGrid(Vector2i) Declaration public Vector2d FromGrid(Vector2i gridpoint) Parameters Type Name Description Vector2i gridpoint Returns Type Description Vector2d | Improve this Doc View Source ToGrid(Vector2d) Declaration public Vector2i ToGrid(Vector2d point) Parameters Type Name Description Vector2d point Returns Type Description Vector2i Implements IGridWorldIndexer2"
  },
  "api/g3.ShiftGridIndexer3.html": {
    "href": "api/g3.ShiftGridIndexer3.html",
    "title": "Struct ShiftGridIndexer3 | ViRGIS VR GIS",
    "keywords": "Struct ShiftGridIndexer3 Map to/from grid coords, where grid is translated from origin Implements IGridWorldIndexer3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct ShiftGridIndexer3 : IGridWorldIndexer3 Constructors | Improve this Doc View Source ShiftGridIndexer3(Vector3d, Double) Declaration public ShiftGridIndexer3(Vector3d origin, double cellSize) Parameters Type Name Description Vector3d origin Double cellSize Fields | Improve this Doc View Source CellSize Declaration public double CellSize Field Value Type Description Double | Improve this Doc View Source Origin Declaration public Vector3d Origin Field Value Type Description Vector3d Methods | Improve this Doc View Source FromGrid(Vector3d) Declaration public Vector3d FromGrid(Vector3d gridpointf) Parameters Type Name Description Vector3d gridpointf Returns Type Description Vector3d | Improve this Doc View Source FromGrid(Vector3i) Declaration public Vector3d FromGrid(Vector3i gridpoint) Parameters Type Name Description Vector3i gridpoint Returns Type Description Vector3d | Improve this Doc View Source ToGrid(Vector3d) Declaration public Vector3i ToGrid(Vector3d point) Parameters Type Name Description Vector3d point Returns Type Description Vector3i | Improve this Doc View Source ToGridf(Vector3d) Declaration public Vector3d ToGridf(Vector3d point) Parameters Type Name Description Vector3d point Returns Type Description Vector3d Implements IGridWorldIndexer3"
  },
  "api/g3.ShiftIndexMap.html": {
    "href": "api/g3.ShiftIndexMap.html",
    "title": "Class ShiftIndexMap | ViRGIS VR GIS",
    "keywords": "Class ShiftIndexMap Inheritance Object ShiftIndexMap Implements IIndexMap Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class ShiftIndexMap : IIndexMap Constructors | Improve this Doc View Source ShiftIndexMap(Int32) Declaration public ShiftIndexMap(int n) Parameters Type Name Description Int32 n Fields | Improve this Doc View Source Shift Declaration public int Shift Field Value Type Description Int32 Properties | Improve this Doc View Source Item[Int32] Declaration public int this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description Int32 Implements IIndexMap"
  },
  "api/g3.SimpleHoleFiller.html": {
    "href": "api/g3.SimpleHoleFiller.html",
    "title": "Class SimpleHoleFiller | ViRGIS VR GIS",
    "keywords": "Class SimpleHoleFiller Inheritance Object SimpleHoleFiller Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SimpleHoleFiller Constructors | Improve this Doc View Source SimpleHoleFiller(DMesh3, EdgeLoop) Declaration public SimpleHoleFiller(DMesh3 mesh, EdgeLoop loop) Parameters Type Name Description DMesh3 mesh EdgeLoop loop Fields | Improve this Doc View Source Loop Declaration public EdgeLoop Loop Field Value Type Description EdgeLoop | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 | Improve this Doc View Source NewTriangles Declaration public int[] NewTriangles Field Value Type Description Int32 [] | Improve this Doc View Source NewVertex Declaration public int NewVertex Field Value Type Description Int32 Methods | Improve this Doc View Source Fill(Int32) Declaration public virtual bool Fill(int group_id = -1) Parameters Type Name Description Int32 group_id Returns Type Description Boolean | Improve this Doc View Source Validate() Declaration public virtual ValidationStatus Validate() Returns Type Description ValidationStatus"
  },
  "api/g3.SimpleMesh.html": {
    "href": "api/g3.SimpleMesh.html",
    "title": "Class SimpleMesh | ViRGIS VR GIS",
    "keywords": "Class SimpleMesh Inheritance Object SimpleMesh Implements IDeformableMesh IMesh IPointSet Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SimpleMesh : IDeformableMesh, IMesh, IPointSet Constructors | Improve this Doc View Source SimpleMesh() Declaration public SimpleMesh() | Improve this Doc View Source SimpleMesh(IMesh) Declaration public SimpleMesh(IMesh copy) Parameters Type Name Description IMesh copy Fields | Improve this Doc View Source Colors Declaration public DVector<float> Colors Field Value Type Description DVector < Single > | Improve this Doc View Source FaceGroups Declaration public DVector<int> FaceGroups Field Value Type Description DVector < Int32 > | Improve this Doc View Source Normals Declaration public DVector<float> Normals Field Value Type Description DVector < Single > | Improve this Doc View Source Triangles Declaration public DVector<int> Triangles Field Value Type Description DVector < Int32 > | Improve this Doc View Source UVs Declaration public DVector<float> UVs Field Value Type Description DVector < Single > | Improve this Doc View Source Vertices Declaration public DVector<double> Vertices Field Value Type Description DVector < Double > Properties | Improve this Doc View Source Components Declaration public MeshComponents Components { get; } Property Value Type Description MeshComponents | Improve this Doc View Source HasTriangleGroups Declaration public bool HasTriangleGroups { get; } Property Value Type Description Boolean | Improve this Doc View Source HasVertexColors Declaration public bool HasVertexColors { get; } Property Value Type Description Boolean | Improve this Doc View Source HasVertexNormals Declaration public bool HasVertexNormals { get; } Property Value Type Description Boolean | Improve this Doc View Source HasVertexUVs Declaration public bool HasVertexUVs { get; } Property Value Type Description Boolean | Improve this Doc View Source MaxTriangleID Declaration public int MaxTriangleID { get; } Property Value Type Description Int32 | Improve this Doc View Source MaxVertexID Declaration public int MaxVertexID { get; } Property Value Type Description Int32 | Improve this Doc View Source Timestamp Timestamp is incremented any time any change is made to the mesh Declaration public int Timestamp { get; } Property Value Type Description Int32 | Improve this Doc View Source TriangleCount Declaration public int TriangleCount { get; } Property Value Type Description Int32 | Improve this Doc View Source VertexCount Declaration public int VertexCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source AppendTriangle(Int32, Int32, Int32, Int32) Declaration public int AppendTriangle(int i, int j, int k, int g = -1) Parameters Type Name Description Int32 i Int32 j Int32 k Int32 g Returns Type Description Int32 | Improve this Doc View Source AppendTriangles(IndexArray3i, Int32[]) Declaration public void AppendTriangles(IndexArray3i t, int[] groups = null) Parameters Type Name Description IndexArray3i t Int32 [] groups | Improve this Doc View Source AppendTriangles(Int32[], Int32[], Int32) Declaration public void AppendTriangles(int[] vTriangles, int[] vertexMap, int g = -1) Parameters Type Name Description Int32 [] vTriangles Int32 [] vertexMap Int32 g | Improve this Doc View Source AppendVertex(NewVertexInfo) Declaration public int AppendVertex(NewVertexInfo info) Parameters Type Name Description NewVertexInfo info Returns Type Description Int32 | Improve this Doc View Source AppendVertex(Double, Double, Double) Declaration public int AppendVertex(double x, double y, double z) Parameters Type Name Description Double x Double y Double z Returns Type Description Int32 | Improve this Doc View Source AppendVertices(VectorArray3d, VectorArray3f, VectorArray3f, VectorArray2f) Declaration public void AppendVertices(VectorArray3d v, VectorArray3f n = null, VectorArray3f c = null, VectorArray2f uv = null) Parameters Type Name Description VectorArray3d v VectorArray3f n VectorArray3f c VectorArray2f uv | Improve this Doc View Source ColorsItr() Declaration public IEnumerable<Vector3f> ColorsItr() Returns Type Description IEnumerable < Vector3f > | Improve this Doc View Source GetFaceGroupsArray() Declaration public int[] GetFaceGroupsArray() Returns Type Description Int32 [] | Improve this Doc View Source GetFaceGroupsBuffer(Int32*) Declaration public void GetFaceGroupsBuffer(int *pBuffer) Parameters Type Name Description Int32 * pBuffer | Improve this Doc View Source GetTriangle(Int32) Declaration public Index3i GetTriangle(int i) Parameters Type Name Description Int32 i Returns Type Description Index3i | Improve this Doc View Source GetTriangleArray() Declaration public int[] GetTriangleArray() Returns Type Description Int32 [] | Improve this Doc View Source GetTriangleBuffer(Int32*) Declaration public void GetTriangleBuffer(int *pBuffer) Parameters Type Name Description Int32 * pBuffer | Improve this Doc View Source GetTriangleGroup(Int32) Declaration public int GetTriangleGroup(int i) Parameters Type Name Description Int32 i Returns Type Description Int32 | Improve this Doc View Source GetVertex(Int32) Declaration public Vector3d GetVertex(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3d | Improve this Doc View Source GetVertexAll(Int32) Declaration public NewVertexInfo GetVertexAll(int i) Parameters Type Name Description Int32 i Returns Type Description NewVertexInfo | Improve this Doc View Source GetVertexArray() Declaration public double[] GetVertexArray() Returns Type Description Double [] | Improve this Doc View Source GetVertexArrayFloat() Declaration public float[] GetVertexArrayFloat() Returns Type Description Single [] | Improve this Doc View Source GetVertexBuffer(Double*) Declaration public void GetVertexBuffer(double *pBuffer) Parameters Type Name Description Double * pBuffer | Improve this Doc View Source GetVertexColor(Int32) Declaration public Vector3f GetVertexColor(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3f | Improve this Doc View Source GetVertexColorArray() Declaration public float[] GetVertexColorArray() Returns Type Description Single [] | Improve this Doc View Source GetVertexColorBuffer(Single*) Declaration public void GetVertexColorBuffer(float *pBuffer) Parameters Type Name Description Single * pBuffer | Improve this Doc View Source GetVertexNormal(Int32) Declaration public Vector3f GetVertexNormal(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3f | Improve this Doc View Source GetVertexNormalArray() Declaration public float[] GetVertexNormalArray() Returns Type Description Single [] | Improve this Doc View Source GetVertexNormalBuffer(Single*) Declaration public void GetVertexNormalBuffer(float *pBuffer) Parameters Type Name Description Single * pBuffer | Improve this Doc View Source GetVertexUV(Int32) Declaration public Vector2f GetVertexUV(int i) Parameters Type Name Description Int32 i Returns Type Description Vector2f | Improve this Doc View Source GetVertexUVArray() Declaration public float[] GetVertexUVArray() Returns Type Description Single [] | Improve this Doc View Source GetVertexUVBuffer(Single*) Declaration public void GetVertexUVBuffer(float *pBuffer) Parameters Type Name Description Single * pBuffer | Improve this Doc View Source Initialize(VectorArray3d, VectorArray3i, VectorArray3f, VectorArray3f, VectorArray2f, Int32[]) Declaration public void Initialize(VectorArray3d v, VectorArray3i t, VectorArray3f n = null, VectorArray3f c = null, VectorArray2f uv = null, int[] g = null) Parameters Type Name Description VectorArray3d v VectorArray3i t VectorArray3f n VectorArray3f c VectorArray2f uv Int32 [] g | Improve this Doc View Source Initialize(Boolean, Boolean, Boolean, Boolean) Declaration public void Initialize(bool bWantNormals = true, bool bWantColors = true, bool bWantUVs = true, bool bWantFaceGroups = true) Parameters Type Name Description Boolean bWantNormals Boolean bWantColors Boolean bWantUVs Boolean bWantFaceGroups | Improve this Doc View Source IsTriangle(Int32) Declaration public bool IsTriangle(int tID) Parameters Type Name Description Int32 tID Returns Type Description Boolean | Improve this Doc View Source IsVertex(Int32) Declaration public bool IsVertex(int vID) Parameters Type Name Description Int32 vID Returns Type Description Boolean | Improve this Doc View Source NormalsItr() Declaration public IEnumerable<Vector3f> NormalsItr() Returns Type Description IEnumerable < Vector3f > | Improve this Doc View Source Scale(Double) Declaration public void Scale(double s) Parameters Type Name Description Double s | Improve this Doc View Source Scale(Double, Double, Double) Declaration public void Scale(double sx, double sy, double sz) Parameters Type Name Description Double sx Double sy Double sz | Improve this Doc View Source SetVertex(Int32, Vector3d) Declaration public void SetVertex(int i, Vector3d v) Parameters Type Name Description Int32 i Vector3d v | Improve this Doc View Source SetVertexColor(Int32, Vector3f) Declaration public void SetVertexColor(int i, Vector3f c) Parameters Type Name Description Int32 i Vector3f c | Improve this Doc View Source SetVertexNormal(Int32, Vector3f) Declaration public void SetVertexNormal(int i, Vector3f n) Parameters Type Name Description Int32 i Vector3f n | Improve this Doc View Source SetVertexUV(Int32, Vector2f) Declaration public void SetVertexUV(int i, Vector2f uv) Parameters Type Name Description Int32 i Vector2f uv | Improve this Doc View Source Translate(Double, Double, Double) Declaration public void Translate(double tx, double ty, double tz) Parameters Type Name Description Double tx Double ty Double tz | Improve this Doc View Source TriangleGroupsItr() Declaration public IEnumerable<int> TriangleGroupsItr() Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source TriangleIndices() Declaration public IEnumerable<int> TriangleIndices() Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source TrianglesItr() Declaration public IEnumerable<Index3i> TrianglesItr() Returns Type Description IEnumerable < Index3i > | Improve this Doc View Source UVsItr() Declaration public IEnumerable<Vector2f> UVsItr() Returns Type Description IEnumerable < Vector2f > | Improve this Doc View Source VertexIndices() Declaration public IEnumerable<int> VertexIndices() Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source VerticesItr() Declaration public IEnumerable<Vector3d> VerticesItr() Returns Type Description IEnumerable < Vector3d > Implements IDeformableMesh IMesh IPointSet Extension Methods SimpleMeshExtensions.ToMesh(SimpleMesh)"
  },
  "api/g3.SimpleMeshBuilder.html": {
    "href": "api/g3.SimpleMeshBuilder.html",
    "title": "Class SimpleMeshBuilder | ViRGIS VR GIS",
    "keywords": "Class SimpleMeshBuilder Inheritance Object SimpleMeshBuilder Implements IMeshBuilder Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SimpleMeshBuilder : IMeshBuilder Constructors | Improve this Doc View Source SimpleMeshBuilder() Declaration public SimpleMeshBuilder() Fields | Improve this Doc View Source MaterialAssignment Declaration public List<int> MaterialAssignment Field Value Type Description List < Int32 > | Improve this Doc View Source Materials Declaration public List<GenericMaterial> Materials Field Value Type Description List < GenericMaterial > | Improve this Doc View Source Meshes Declaration public List<SimpleMesh> Meshes Field Value Type Description List < SimpleMesh > Properties | Improve this Doc View Source SupportsMetaData Declaration public bool SupportsMetaData { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source AppendMetaData(String, Object) Declaration public void AppendMetaData(string identifier, object data) Parameters Type Name Description String identifier Object data | Improve this Doc View Source AppendNewMesh(DMesh3) Declaration public int AppendNewMesh(DMesh3 existingMesh) Parameters Type Name Description DMesh3 existingMesh Returns Type Description Int32 | Improve this Doc View Source AppendNewMesh(Boolean, Boolean, Boolean, Boolean) Declaration public int AppendNewMesh(bool bHaveVtxNormals, bool bHaveVtxColors, bool bHaveVtxUVs, bool bHaveFaceGroups) Parameters Type Name Description Boolean bHaveVtxNormals Boolean bHaveVtxColors Boolean bHaveVtxUVs Boolean bHaveFaceGroups Returns Type Description Int32 | Improve this Doc View Source AppendTriangle(Int32, Int32, Int32) Declaration public int AppendTriangle(int i, int j, int k) Parameters Type Name Description Int32 i Int32 j Int32 k Returns Type Description Int32 | Improve this Doc View Source AppendTriangle(Int32, Int32, Int32, Int32) Declaration public int AppendTriangle(int i, int j, int k, int g) Parameters Type Name Description Int32 i Int32 j Int32 k Int32 g Returns Type Description Int32 | Improve this Doc View Source AppendVertex(NewVertexInfo) Declaration public int AppendVertex(NewVertexInfo info) Parameters Type Name Description NewVertexInfo info Returns Type Description Int32 | Improve this Doc View Source AppendVertex(Double, Double, Double) Declaration public int AppendVertex(double x, double y, double z) Parameters Type Name Description Double x Double y Double z Returns Type Description Int32 | Improve this Doc View Source AssignMaterial(Int32, Int32) Declaration public void AssignMaterial(int materialID, int meshID) Parameters Type Name Description Int32 materialID Int32 meshID | Improve this Doc View Source BuildMaterial(GenericMaterial) Declaration public int BuildMaterial(GenericMaterial m) Parameters Type Name Description GenericMaterial m Returns Type Description Int32 | Improve this Doc View Source SetActiveMesh(Int32) Declaration public void SetActiveMesh(int id) Parameters Type Name Description Int32 id Implements IMeshBuilder"
  },
  "api/g3.SimpleQuadMesh.html": {
    "href": "api/g3.SimpleQuadMesh.html",
    "title": "Class SimpleQuadMesh | ViRGIS VR GIS",
    "keywords": "Class SimpleQuadMesh SimpleTriangleMesh but for quads. Data packed into buffers, no dynamics. Supports Per-Vertex Normals, Colors, UV, and Per-Quad Facegroup. use static WriteOBJ() to save. No loading, for now. Inheritance Object SimpleQuadMesh Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SimpleQuadMesh Constructors | Improve this Doc View Source SimpleQuadMesh() Declaration public SimpleQuadMesh() Fields | Improve this Doc View Source Colors Declaration public DVector<float> Colors Field Value Type Description DVector < Single > | Improve this Doc View Source FaceGroups Declaration public DVector<int> FaceGroups Field Value Type Description DVector < Int32 > | Improve this Doc View Source Normals Declaration public DVector<float> Normals Field Value Type Description DVector < Single > | Improve this Doc View Source Quads Declaration public DVector<int> Quads Field Value Type Description DVector < Int32 > | Improve this Doc View Source UVs Declaration public DVector<float> UVs Field Value Type Description DVector < Single > | Improve this Doc View Source Vertices Declaration public DVector<double> Vertices Field Value Type Description DVector < Double > Properties | Improve this Doc View Source Components Declaration public MeshComponents Components { get; } Property Value Type Description MeshComponents | Improve this Doc View Source HasFaceGroups Declaration public bool HasFaceGroups { get; } Property Value Type Description Boolean | Improve this Doc View Source HasVertexColors Declaration public bool HasVertexColors { get; } Property Value Type Description Boolean | Improve this Doc View Source HasVertexNormals Declaration public bool HasVertexNormals { get; } Property Value Type Description Boolean | Improve this Doc View Source HasVertexUVs Declaration public bool HasVertexUVs { get; } Property Value Type Description Boolean | Improve this Doc View Source MaxQuadID Declaration public int MaxQuadID { get; } Property Value Type Description Int32 | Improve this Doc View Source MaxVertexID Declaration public int MaxVertexID { get; } Property Value Type Description Int32 | Improve this Doc View Source QuadCount Declaration public int QuadCount { get; } Property Value Type Description Int32 | Improve this Doc View Source VertexCount Declaration public int VertexCount { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source AppendQuad(Int32, Int32, Int32, Int32, Int32) Declaration public int AppendQuad(int i, int j, int k, int l, int g = -1) Parameters Type Name Description Int32 i Int32 j Int32 k Int32 l Int32 g Returns Type Description Int32 | Improve this Doc View Source AppendVertex(NewVertexInfo) Declaration public int AppendVertex(NewVertexInfo info) Parameters Type Name Description NewVertexInfo info Returns Type Description Int32 | Improve this Doc View Source AppendVertex(Vector3d) Declaration public int AppendVertex(Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Int32 | Improve this Doc View Source AppendVertex(Double, Double, Double) Declaration public int AppendVertex(double x, double y, double z) Parameters Type Name Description Double x Double y Double z Returns Type Description Int32 | Improve this Doc View Source ColorsItr() Declaration public IEnumerable<Vector3f> ColorsItr() Returns Type Description IEnumerable < Vector3f > | Improve this Doc View Source FaceGroupsItr() Declaration public IEnumerable<int> FaceGroupsItr() Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source GetFaceGroup(Int32) Declaration public int GetFaceGroup(int i) Parameters Type Name Description Int32 i Returns Type Description Int32 | Improve this Doc View Source GetFaceGroupsArray() Declaration public int[] GetFaceGroupsArray() Returns Type Description Int32 [] | Improve this Doc View Source GetQuad(Int32) Declaration public Index4i GetQuad(int i) Parameters Type Name Description Int32 i Returns Type Description Index4i | Improve this Doc View Source GetQuadArray() Declaration public int[] GetQuadArray() Returns Type Description Int32 [] | Improve this Doc View Source GetVertex(Int32) Declaration public Vector3d GetVertex(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3d | Improve this Doc View Source GetVertexAll(Int32) Declaration public NewVertexInfo GetVertexAll(int i) Parameters Type Name Description Int32 i Returns Type Description NewVertexInfo | Improve this Doc View Source GetVertexArray() Declaration public double[] GetVertexArray() Returns Type Description Double [] | Improve this Doc View Source GetVertexArrayFloat() Declaration public float[] GetVertexArrayFloat() Returns Type Description Single [] | Improve this Doc View Source GetVertexColor(Int32) Declaration public Vector3f GetVertexColor(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3f | Improve this Doc View Source GetVertexColorArray() Declaration public float[] GetVertexColorArray() Returns Type Description Single [] | Improve this Doc View Source GetVertexNormal(Int32) Declaration public Vector3f GetVertexNormal(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3f | Improve this Doc View Source GetVertexNormalArray() Declaration public float[] GetVertexNormalArray() Returns Type Description Single [] | Improve this Doc View Source GetVertexUV(Int32) Declaration public Vector2f GetVertexUV(int i) Parameters Type Name Description Int32 i Returns Type Description Vector2f | Improve this Doc View Source GetVertexUVArray() Declaration public float[] GetVertexUVArray() Returns Type Description Single [] | Improve this Doc View Source Initialize(Boolean, Boolean, Boolean, Boolean) Declaration public void Initialize(bool bWantNormals = true, bool bWantColors = true, bool bWantUVs = true, bool bWantFaceGroups = true) Parameters Type Name Description Boolean bWantNormals Boolean bWantColors Boolean bWantUVs Boolean bWantFaceGroups | Improve this Doc View Source IsQuad(Int32) Declaration public bool IsQuad(int qID) Parameters Type Name Description Int32 qID Returns Type Description Boolean | Improve this Doc View Source IsVertex(Int32) Declaration public bool IsVertex(int vID) Parameters Type Name Description Int32 vID Returns Type Description Boolean | Improve this Doc View Source NormalsItr() Declaration public IEnumerable<Vector3f> NormalsItr() Returns Type Description IEnumerable < Vector3f > | Improve this Doc View Source QuadIndices() Declaration public IEnumerable<int> QuadIndices() Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source QuadsItr() Declaration public IEnumerable<Index4i> QuadsItr() Returns Type Description IEnumerable < Index4i > | Improve this Doc View Source SetVertex(Int32, Vector3d) Declaration public void SetVertex(int i, Vector3d v) Parameters Type Name Description Int32 i Vector3d v | Improve this Doc View Source SetVertexColor(Int32, Vector3f) Declaration public void SetVertexColor(int i, Vector3f c) Parameters Type Name Description Int32 i Vector3f c | Improve this Doc View Source SetVertexNormal(Int32, Vector3f) Declaration public void SetVertexNormal(int i, Vector3f n) Parameters Type Name Description Int32 i Vector3f n | Improve this Doc View Source SetVertexUV(Int32, Vector2f) Declaration public void SetVertexUV(int i, Vector2f uv) Parameters Type Name Description Int32 i Vector2f uv | Improve this Doc View Source UVsItr() Declaration public IEnumerable<Vector2f> UVsItr() Returns Type Description IEnumerable < Vector2f > | Improve this Doc View Source VertexIndices() Declaration public IEnumerable<int> VertexIndices() Returns Type Description IEnumerable < Int32 > | Improve this Doc View Source VerticesItr() Declaration public IEnumerable<Vector3d> VerticesItr() Returns Type Description IEnumerable < Vector3d > | Improve this Doc View Source WriteOBJ(SimpleQuadMesh, String, WriteOptions) Declaration public static IOWriteResult WriteOBJ(SimpleQuadMesh mesh, string sPath, WriteOptions options) Parameters Type Name Description SimpleQuadMesh mesh String sPath WriteOptions options Returns Type Description IOWriteResult"
  },
  "api/g3.SimpleStore.html": {
    "href": "api/g3.SimpleStore.html",
    "title": "Class SimpleStore | ViRGIS VR GIS",
    "keywords": "Class SimpleStore Utility class that is intended to support things like writing and reading test cases, etc. You can write out a test case in a single line, eg SimpleStore.Store(path, new object[] { TestMesh, VertexList, PlaneNormal, ... }) The object list will be binned into the relevant sublists automatically. Then you can load this data via: SimpleStore s = SimpleStore.Restore(path) Inheritance Object SimpleStore Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SimpleStore Constructors | Improve this Doc View Source SimpleStore() Declaration public SimpleStore() | Improve this Doc View Source SimpleStore(Object[]) Declaration public SimpleStore(object[] objs) Parameters Type Name Description Object [] objs Fields | Improve this Doc View Source IntLists Declaration public List<List<int>> IntLists Field Value Type Description List < List < Int32 >> | Improve this Doc View Source Meshes Declaration public List<DMesh3> Meshes Field Value Type Description List < DMesh3 > | Improve this Doc View Source Points Declaration public List<Vector3d> Points Field Value Type Description List < Vector3d > | Improve this Doc View Source Strings Declaration public List<string> Strings Field Value Type Description List < String > Methods | Improve this Doc View Source Add(Object[]) Declaration public void Add(object[] objs) Parameters Type Name Description Object [] objs | Improve this Doc View Source Restore(String) Declaration public static SimpleStore Restore(string sPath) Parameters Type Name Description String sPath Returns Type Description SimpleStore | Improve this Doc View Source Store(String, SimpleStore) Declaration public static void Store(string sPath, SimpleStore s) Parameters Type Name Description String sPath SimpleStore s | Improve this Doc View Source Store(String, Object[]) Declaration public static void Store(string sPath, object[] objs) Parameters Type Name Description String sPath Object [] objs"
  },
  "api/g3.SingularValueDecomposition.html": {
    "href": "api/g3.SingularValueDecomposition.html",
    "title": "Class SingularValueDecomposition | ViRGIS VR GIS",
    "keywords": "Class SingularValueDecomposition Singular Value Decomposition of arbitrary matrix A Computes U/S/V of A = U * S * V^T Useful Properties: S = square-roots of eigenvalues of A U = eigenvectors of A * A^T V = eigenvectors of A^T * A U * V^T = rotation matrix closest to A V * Inv(S) * U^T = psuedoinverse of A U and/or V are rotation matrices but may also contain reflections Detection: det(U) or det(v) == -1 Removal: if ( det(U) == -1 ) { U *= -1; S *= -1 } if ( det(V) == -1 ) { V *= -1; S *= -1 } (right? seems to work) Inheritance Object SingularValueDecomposition Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SingularValueDecomposition Constructors | Improve this Doc View Source SingularValueDecomposition(Int32, Int32, Int32) Declaration public SingularValueDecomposition(int numRows, int numCols, int maxIterations) Parameters Type Name Description Int32 numRows Int32 numCols Int32 maxIterations Methods | Improve this Doc View Source GetSingularValues(Double[]) Declaration public void GetSingularValues(double[] singularValues) Parameters Type Name Description Double [] singularValues | Improve this Doc View Source GetU(Double[]) Declaration public void GetU(double[] uMatrix) Parameters Type Name Description Double [] uMatrix | Improve this Doc View Source GetV(Double[]) Declaration public void GetV(double[] vMatrix) Parameters Type Name Description Double [] vMatrix | Improve this Doc View Source Solve(Double[], Int32) Declaration public uint Solve(double[] input, int sortType = -1) Parameters Type Name Description Double [] input Int32 sortType Returns Type Description UInt32"
  },
  "api/g3.SkeletalBlend3d.html": {
    "href": "api/g3.SkeletalBlend3d.html",
    "title": "Class SkeletalBlend3d | ViRGIS VR GIS",
    "keywords": "Class SkeletalBlend3d sum-blend Inheritance Object SkeletalBlend3d Implements BoundedImplicitFunction3d ImplicitFunction3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SkeletalBlend3d : BoundedImplicitFunction3d, ImplicitFunction3d Fields | Improve this Doc View Source A Declaration public BoundedImplicitFunction3d A Field Value Type Description BoundedImplicitFunction3d | Improve this Doc View Source B Declaration public BoundedImplicitFunction3d B Field Value Type Description BoundedImplicitFunction3d Methods | Improve this Doc View Source Bounds() Declaration public AxisAlignedBox3d Bounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Value(ref Vector3d) Declaration public double Value(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Double Implements BoundedImplicitFunction3d ImplicitFunction3d"
  },
  "api/g3.SkeletalRicciBlend3d.html": {
    "href": "api/g3.SkeletalRicciBlend3d.html",
    "title": "Class SkeletalRicciBlend3d | ViRGIS VR GIS",
    "keywords": "Class SkeletalRicciBlend3d Ricci blend Inheritance Object SkeletalRicciBlend3d Implements BoundedImplicitFunction3d ImplicitFunction3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SkeletalRicciBlend3d : BoundedImplicitFunction3d, ImplicitFunction3d Fields | Improve this Doc View Source A Declaration public BoundedImplicitFunction3d A Field Value Type Description BoundedImplicitFunction3d | Improve this Doc View Source B Declaration public BoundedImplicitFunction3d B Field Value Type Description BoundedImplicitFunction3d | Improve this Doc View Source BlendPower Declaration public double BlendPower Field Value Type Description Double Methods | Improve this Doc View Source Bounds() Declaration public AxisAlignedBox3d Bounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Value(ref Vector3d) Declaration public double Value(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Double Implements BoundedImplicitFunction3d ImplicitFunction3d"
  },
  "api/g3.SkeletalRicciNaryBlend3d.html": {
    "href": "api/g3.SkeletalRicciNaryBlend3d.html",
    "title": "Class SkeletalRicciNaryBlend3d | ViRGIS VR GIS",
    "keywords": "Class SkeletalRicciNaryBlend3d Boolean Union of N implicit functions, A OR B. Assumption is that both have surface at zero isocontour and negative is inside. Inheritance Object SkeletalRicciNaryBlend3d Implements BoundedImplicitFunction3d ImplicitFunction3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SkeletalRicciNaryBlend3d : BoundedImplicitFunction3d, ImplicitFunction3d Fields | Improve this Doc View Source BlendPower Declaration public double BlendPower Field Value Type Description Double | Improve this Doc View Source Children Declaration public List<BoundedImplicitFunction3d> Children Field Value Type Description List < BoundedImplicitFunction3d > | Improve this Doc View Source FieldShift Declaration public double FieldShift Field Value Type Description Double Methods | Improve this Doc View Source Bounds() Declaration public AxisAlignedBox3d Bounds() Returns Type Description AxisAlignedBox3d | Improve this Doc View Source Value(ref Vector3d) Declaration public double Value(ref Vector3d pt) Parameters Type Name Description Vector3d pt Returns Type Description Double Implements BoundedImplicitFunction3d ImplicitFunction3d"
  },
  "api/g3.SmallListSet.html": {
    "href": "api/g3.SmallListSet.html",
    "title": "Class SmallListSet | ViRGIS VR GIS",
    "keywords": "Class SmallListSet SmallListSet stores a set of short integer-valued variable-size lists. The lists are encoded into a few large DVector buffers, with internal pooling, so adding/removing lists usually does not involve any new or delete ops. The lists are stored in two parts. The first N elements are stored in a linear subset of a dvector. If the list spills past these N elements, the extra elements are stored in a linked list (which is also stored in a flat array). Each list stores its count, so list-size operations are constant time. All the internal \"pointers\" are 32-bit. Inheritance Object SmallListSet Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SmallListSet Constructors | Improve this Doc View Source SmallListSet() Declaration public SmallListSet() | Improve this Doc View Source SmallListSet(SmallListSet) Declaration public SmallListSet(SmallListSet copy) Parameters Type Name Description SmallListSet copy Properties | Improve this Doc View Source MemoryUsage Declaration public string MemoryUsage { get; } Property Value Type Description String | Improve this Doc View Source Size returns largest current list_index Declaration public int Size { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source allocate_block() Declaration protected int allocate_block() Returns Type Description Int32 | Improve this Doc View Source AllocateAt(Int32) create a new list at list_index Declaration public void AllocateAt(int list_index) Parameters Type Name Description Int32 list_index | Improve this Doc View Source Clear(Int32) remove all elements from list at list_index Declaration public void Clear(int list_index) Parameters Type Name Description Int32 list_index | Improve this Doc View Source Contains(Int32, Int32) search for val in list at list_index Declaration public bool Contains(int list_index, int val) Parameters Type Name Description Int32 list_index Int32 val Returns Type Description Boolean | Improve this Doc View Source Count(Int32) return size of list at list_index Declaration public int Count(int list_index) Parameters Type Name Description Int32 list_index Returns Type Description Int32 | Improve this Doc View Source Find(Int32, Func<Int32, Boolean>, Int32) search for findF(list_value) == true, of list at list_index, and return list_value Declaration public int Find(int list_index, Func<int, bool> findF, int invalidValue = -1) Parameters Type Name Description Int32 list_index Func < Int32 , Boolean > findF Int32 invalidValue Returns Type Description Int32 | Improve this Doc View Source First(Int32) return the first item in the list at list_index (no zero-size-list checking) Declaration public int First(int list_index) Parameters Type Name Description Int32 list_index Returns Type Description Int32 | Improve this Doc View Source Insert(Int32, Int32) insert val into list at list_index. Declaration public void Insert(int list_index, int val) Parameters Type Name Description Int32 list_index Int32 val | Improve this Doc View Source Move(Int32, Int32) move list at from_index to to_index Declaration public void Move(int from_index, int to_index) Parameters Type Name Description Int32 from_index Int32 to_index | Improve this Doc View Source Remove(Int32, Int32) remove val from the list at list_index. return false if val was not in list. Declaration public bool Remove(int list_index, int val) Parameters Type Name Description Int32 list_index Int32 val Returns Type Description Boolean | Improve this Doc View Source Replace(Int32, Func<Int32, Boolean>, Int32) search for findF(list_value) == true, of list at list_index, and replace with new_value. returns false if not found Declaration public bool Replace(int list_index, Func<int, bool> findF, int new_value) Parameters Type Name Description Int32 list_index Func < Int32 , Boolean > findF Int32 new_value Returns Type Description Boolean | Improve this Doc View Source Resize(Int32) resize the list-of-lists Declaration public void Resize(int new_size) Parameters Type Name Description Int32 new_size | Improve this Doc View Source ValueItr(Int32) iterate over the values of list at list_index Declaration public IEnumerable<int> ValueItr(int list_index) Parameters Type Name Description Int32 list_index Returns Type Description IEnumerable < Int32 >"
  },
  "api/g3.Snapping.html": {
    "href": "api/g3.Snapping.html",
    "title": "Class Snapping | ViRGIS VR GIS",
    "keywords": "Class Snapping Inheritance Object Snapping Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class Snapping Methods | Improve this Doc View Source SnapToIncrement(Double, Double, Double) Declaration public static double SnapToIncrement(double fValue, double fIncrement, double offset = 0) Parameters Type Name Description Double fValue Double fIncrement Double offset Returns Type Description Double | Improve this Doc View Source SnapToIncrementHigh(Double, Double, Double) Declaration public static double SnapToIncrementHigh(double fValue, double fIncrement, double offset = 0) Parameters Type Name Description Double fValue Double fIncrement Double offset Returns Type Description Double | Improve this Doc View Source SnapToIncrementLow(Double, Double, Double) Declaration public static double SnapToIncrementLow(double fValue, double fIncrement, double offset = 0) Parameters Type Name Description Double fValue Double fIncrement Double offset Returns Type Description Double | Improve this Doc View Source SnapToNearbyIncrement(Double, Double, Double) Declaration public static double SnapToNearbyIncrement(double fValue, double fIncrement, double fTolerance) Parameters Type Name Description Double fValue Double fIncrement Double fTolerance Returns Type Description Double"
  },
  "api/g3.SparseList-1.html": {
    "href": "api/g3.SparseList-1.html",
    "title": "Class SparseList<T> | ViRGIS VR GIS",
    "keywords": "Class SparseList<T> Inheritance Object SparseList<T> Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SparseList<T> where T : IEquatable<T> Type Parameters Name Description T Constructors | Improve this Doc View Source SparseList(Int32, Int32, T) Declaration public SparseList(int MaxIndex, int SubsetCountEst, T ZeroValue) Parameters Type Name Description Int32 MaxIndex Int32 SubsetCountEst T ZeroValue Properties | Improve this Doc View Source Item[Int32] Declaration public T this[int idx] { get; set; } Parameters Type Name Description Int32 idx Property Value Type Description T Methods | Improve this Doc View Source Count(Func<T, Boolean>) Declaration public int Count(Func<T, bool> CountF) Parameters Type Name Description Func <T, Boolean > CountF Returns Type Description Int32 | Improve this Doc View Source NonZeroValues() Declaration public IEnumerable<KeyValuePair<int, T>> NonZeroValues() Returns Type Description IEnumerable < KeyValuePair < Int32 , T>> | Improve this Doc View Source Values() This enumeration will return pairs [index,0] for dense case Declaration public IEnumerable<KeyValuePair<int, T>> Values() Returns Type Description IEnumerable < KeyValuePair < Int32 , T>>"
  },
  "api/g3.SparseObjectList-1.html": {
    "href": "api/g3.SparseObjectList-1.html",
    "title": "Class SparseObjectList<T> | ViRGIS VR GIS",
    "keywords": "Class SparseObjectList<T> variant of SparseList for class objects, then \"zero\" is null TODO: can we combine these classes somehow? Inheritance Object SparseObjectList<T> Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SparseObjectList<T> where T : class Type Parameters Name Description T Constructors | Improve this Doc View Source SparseObjectList(Int32, Int32) Declaration public SparseObjectList(int MaxIndex, int SubsetCountEst) Parameters Type Name Description Int32 MaxIndex Int32 SubsetCountEst Properties | Improve this Doc View Source Item[Int32] Declaration public T this[int idx] { get; set; } Parameters Type Name Description Int32 idx Property Value Type Description T Methods | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source Count(Func<T, Boolean>) Declaration public int Count(Func<T, bool> CountF) Parameters Type Name Description Func <T, Boolean > CountF Returns Type Description Int32 | Improve this Doc View Source NonZeroValues() Declaration public IEnumerable<KeyValuePair<int, T>> NonZeroValues() Returns Type Description IEnumerable < KeyValuePair < Int32 , T>> | Improve this Doc View Source Values() This enumeration will return pairs [index,0] for dense case Declaration public IEnumerable<KeyValuePair<int, T>> Values() Returns Type Description IEnumerable < KeyValuePair < Int32 , T>>"
  },
  "api/g3.SparseSymmetricCG.html": {
    "href": "api/g3.SparseSymmetricCG.html",
    "title": "Class SparseSymmetricCG | ViRGIS VR GIS",
    "keywords": "Class SparseSymmetricCG Inheritance Object SparseSymmetricCG Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SparseSymmetricCG Fields | Improve this Doc View Source B Declaration public double[] B Field Value Type Description Double [] | Improve this Doc View Source Iterations Declaration public int Iterations Field Value Type Description Int32 | Improve this Doc View Source MaxIterations Declaration public int MaxIterations Field Value Type Description Int32 | Improve this Doc View Source MultiplyF Declaration public Action<double[], double[]> MultiplyF Field Value Type Description Action < Double [], Double []> | Improve this Doc View Source PreconditionMultiplyF Declaration public Action<double[], double[]> PreconditionMultiplyF Field Value Type Description Action < Double [], Double []> | Improve this Doc View Source UseXAsInitialGuess Declaration public bool UseXAsInitialGuess Field Value Type Description Boolean | Improve this Doc View Source X Declaration public double[] X Field Value Type Description Double [] Methods | Improve this Doc View Source Solve() Declaration public bool Solve() Returns Type Description Boolean | Improve this Doc View Source SolvePreconditioned() Declaration public bool SolvePreconditioned() Returns Type Description Boolean"
  },
  "api/g3.SparseSymmetricCGMultipleRHS.html": {
    "href": "api/g3.SparseSymmetricCGMultipleRHS.html",
    "title": "Class SparseSymmetricCGMultipleRHS | ViRGIS VR GIS",
    "keywords": "Class SparseSymmetricCGMultipleRHS [RMS] this is a variant of SparseSymmetricCG that supports multiple right-hand-sides. Makes quite a big difference as matrix gets bigger, because MultiplyF can unroll inner loops (as long as you actually do that) However, if this is done then it is not really possible to do different numbers of iterations for different RHS's. We will not update that RHS once it has converged, however we still have to do the multiplies! Inheritance Object SparseSymmetricCGMultipleRHS Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SparseSymmetricCGMultipleRHS Fields | Improve this Doc View Source B Declaration public double[][] B Field Value Type Description Double [][] | Improve this Doc View Source ConvergeTolerance Declaration public double ConvergeTolerance Field Value Type Description Double | Improve this Doc View Source Iterations Declaration public int Iterations Field Value Type Description Int32 | Improve this Doc View Source MaxIterations Declaration public int MaxIterations Field Value Type Description Int32 | Improve this Doc View Source MultiplyF Declaration public Action<double[][], double[][]> MultiplyF Field Value Type Description Action < Double [][], Double [][]> | Improve this Doc View Source PreconditionMultiplyF Declaration public Action<double[][], double[][]> PreconditionMultiplyF Field Value Type Description Action < Double [][], Double [][]> | Improve this Doc View Source UseXAsInitialGuess Declaration public bool UseXAsInitialGuess Field Value Type Description Boolean | Improve this Doc View Source X Declaration public double[][] X Field Value Type Description Double [][] Methods | Improve this Doc View Source Solve() standard CG solve Declaration public bool Solve() Returns Type Description Boolean | Improve this Doc View Source SolvePreconditioned() Preconditioned variant Similar to non-preconditioned version, this can suffer if one solution converges much slower than others, as we can't skip matrix multiplies in that case. Declaration public bool SolvePreconditioned() Returns Type Description Boolean"
  },
  "api/g3.SpatialFunctions.html": {
    "href": "api/g3.SpatialFunctions.html",
    "title": "Class SpatialFunctions | ViRGIS VR GIS",
    "keywords": "Class SpatialFunctions Inheritance Object SpatialFunctions Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class SpatialFunctions"
  },
  "api/g3.SpatialFunctions.NormalOffset.html": {
    "href": "api/g3.SpatialFunctions.NormalOffset.html",
    "title": "Class SpatialFunctions.NormalOffset | ViRGIS VR GIS",
    "keywords": "Class SpatialFunctions.NormalOffset Inheritance Object SpatialFunctions.NormalOffset Namespace : g3 Assembly : geometry3Sharp.dll Syntax [Obsolete(\"NormalOffset is deprecated - is anybody using it? please lmk.\")] public class NormalOffset Fields | Improve this Doc View Source Distance Declaration public double Distance Field Value Type Description Double | Improve this Doc View Source Mesh Declaration public DMesh3 Mesh Field Value Type Description DMesh3 | Improve this Doc View Source Spatial Declaration public ISpatial Spatial Field Value Type Description ISpatial | Improve this Doc View Source UseFaceNormal Declaration public bool UseFaceNormal Field Value Type Description Boolean Methods | Improve this Doc View Source FindNearestAndOffset(Vector3d) Declaration public Vector3d FindNearestAndOffset(Vector3d pos) Parameters Type Name Description Vector3d pos Returns Type Description Vector3d"
  },
  "api/g3.Sphere3Generator_NormalizedCube.html": {
    "href": "api/g3.Sphere3Generator_NormalizedCube.html",
    "title": "Class Sphere3Generator_NormalizedCube | ViRGIS VR GIS",
    "keywords": "Class Sphere3Generator_NormalizedCube Generate a mesh of a sphere by first generating a mesh of a cube, and then normalizing the vertices and moving them to sphere of desired radius. Inheritance Object MeshGenerator GridBox3Generator Sphere3Generator_NormalizedCube Inherited Members GridBox3Generator.Box GridBox3Generator.EdgeVertices GridBox3Generator.NoSharedVertices MeshGenerator.vertices MeshGenerator.uv MeshGenerator.normals MeshGenerator.triangles MeshGenerator.groups MeshGenerator.WantUVs MeshGenerator.WantNormals MeshGenerator.WantGroups MeshGenerator.Clockwise MeshGenerator.MakeMesh(SimpleMesh) MeshGenerator.MakeSimpleMesh() MeshGenerator.MakeMesh(DMesh3) MeshGenerator.MakeDMesh() MeshGenerator.MakeMesh(NTMesh3) MeshGenerator.MakeNTMesh() MeshGenerator.duplicate_vertex_span(Int32, Int32) MeshGenerator.append_disc(Int32, Int32, Int32, Boolean, Boolean, Int32, Int32) MeshGenerator.append_rectangle(Int32, Int32, Int32, Int32, Boolean, Int32, Int32) MeshGenerator.append_2d_disc_segment(Int32, Int32, Int32, Int32, Boolean, Int32, Int32, Int32, Double) MeshGenerator.estimate_normal(Int32, Int32, Int32) MeshGenerator.bilerp(Vector3d, Vector3d, Vector3d, Vector3d, Double, Double) MeshGenerator.bilerp(Vector2d, Vector2d, Vector2d, Vector2d, Double, Double) MeshGenerator.bilerp(Vector2f, Vector2f, Vector2f, Vector2f, Single, Single) MeshGenerator.bilerp(Vector3i, Vector3i, Vector3i, Vector3i, Double, Double) MeshGenerator.lerp(Vector3i, Vector3i, Double) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class Sphere3Generator_NormalizedCube : GridBox3Generator Fields | Improve this Doc View Source Radius Declaration public double Radius Field Value Type Description Double Methods | Improve this Doc View Source Generate() Declaration public override MeshGenerator Generate() Returns Type Description MeshGenerator Overrides GridBox3Generator.Generate()"
  },
  "api/g3.Sphere3Generator_NormalizedCube.NormalizationTypes.html": {
    "href": "api/g3.Sphere3Generator_NormalizedCube.NormalizationTypes.html",
    "title": "Enum Sphere3Generator_NormalizedCube.NormalizationTypes | ViRGIS VR GIS",
    "keywords": "Enum Sphere3Generator_NormalizedCube.NormalizationTypes Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum NormalizationTypes Fields Name Description CubeMapping NormalizedVector"
  },
  "api/g3.SphericalFibonacciPointSet.html": {
    "href": "api/g3.SphericalFibonacciPointSet.html",
    "title": "Class SphericalFibonacciPointSet | ViRGIS VR GIS",
    "keywords": "Class SphericalFibonacciPointSet A Spherical Fibonacci Point Set is a set of points that are roughly evenly distributed on a sphere. Basically the points lie on a spiral, see pdf below. The i-th SF point of an N-point set can be calculated directly. For a given (normalized) point P, finding the nearest SF point (ie mapping back to i) can be done in constant time. math from http://lgdv.cs.fau.de/uploads/publications/spherical_fibonacci_mapping_opt.pdf Inheritance Object SphericalFibonacciPointSet Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SphericalFibonacciPointSet Constructors | Improve this Doc View Source SphericalFibonacciPointSet(Int32) Declaration public SphericalFibonacciPointSet(int n = 64) Parameters Type Name Description Int32 n Fields | Improve this Doc View Source N Declaration public int N Field Value Type Description Int32 Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source Item[Int32] Declaration public Vector3d this[int i] { get; } Parameters Type Name Description Int32 i Property Value Type Description Vector3d Methods | Improve this Doc View Source NearestPoint(Vector3d, Boolean) Find index of nearest point-set point for input arbitrary point Declaration public int NearestPoint(Vector3d p, bool bIsNormalized = false) Parameters Type Name Description Vector3d p Boolean bIsNormalized Returns Type Description Int32 | Improve this Doc View Source Point(Int32) Compute i'th spherical point Declaration public Vector3d Point(int i) Parameters Type Name Description Int32 i Returns Type Description Vector3d"
  },
  "api/g3.StandardMeshReader.html": {
    "href": "api/g3.StandardMeshReader.html",
    "title": "Class StandardMeshReader | ViRGIS VR GIS",
    "keywords": "Class StandardMeshReader Inheritance Object StandardMeshReader Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class StandardMeshReader Constructors | Improve this Doc View Source StandardMeshReader(Boolean) Construct a MeshReader, optionally with default format handlers Initializes MeshBuilder to a DMesh3Builder Declaration public StandardMeshReader(bool bIncludeDefaultReaders = true) Parameters Type Name Description Boolean bIncludeDefaultReaders Fields | Improve this Doc View Source ReadInvariantCulture If the mesh format we are writing is text, then the OS will write in the number style of the current language. So in Germany, numbers are written 1,00 instead of 1.00, for example. If this flag is true, we override this to always write in a consistent way. Declaration public bool ReadInvariantCulture Field Value Type Description Boolean Properties | Improve this Doc View Source MeshBuilder The various format handlers will use this IMeshBuilder to construct meshes based on the file data and read options. Default is initialized to DMesh3Builder Declaration public IMeshBuilder MeshBuilder { get; set; } Property Value Type Description IMeshBuilder Methods | Improve this Doc View Source AddFormatHandler(MeshFormatReader) Add a handler for a given formta Declaration public void AddFormatHandler(MeshFormatReader reader) Parameters Type Name Description MeshFormatReader reader | Improve this Doc View Source Read(Stream, String, ReadOptions) Read mesh file at path, with given Options. Result is stored in MeshBuilder parameter Declaration public IOReadResult Read(Stream stream, string sExtension, ReadOptions options) Parameters Type Name Description Stream stream String sExtension ReadOptions options Returns Type Description IOReadResult | Improve this Doc View Source Read(String, ReadOptions) Read mesh file at path, with given Options. Result is stored in MeshBuilder parameter Declaration public IOReadResult Read(string sFilename, ReadOptions options) Parameters Type Name Description String sFilename ReadOptions options Returns Type Description IOReadResult | Improve this Doc View Source ReadFile(Stream, String, ReadOptions, IMeshBuilder) Read mesh file using options and builder. You must provide our own Builder here because the reader is not returned Declaration public static IOReadResult ReadFile(Stream stream, string sExtension, ReadOptions options, IMeshBuilder builder) Parameters Type Name Description Stream stream String sExtension ReadOptions options IMeshBuilder builder Returns Type Description IOReadResult | Improve this Doc View Source ReadFile(String, ReadOptions, IMeshBuilder) Read mesh file using options and builder. You must provide our own Builder here because the reader is not returned Declaration public static IOReadResult ReadFile(string sFilename, ReadOptions options, IMeshBuilder builder) Parameters Type Name Description String sFilename ReadOptions options IMeshBuilder builder Returns Type Description IOReadResult | Improve this Doc View Source ReadMesh(Stream, String) This is basically a utility function, returns first mesh in file, with default options. Declaration public static DMesh3 ReadMesh(Stream stream, string sExtension) Parameters Type Name Description Stream stream String sExtension Returns Type Description DMesh3 | Improve this Doc View Source ReadMesh(String) This is basically a utility function, returns first mesh in file, with default options. Declaration public static DMesh3 ReadMesh(string sFilename) Parameters Type Name Description String sFilename Returns Type Description DMesh3 | Improve this Doc View Source SupportsFormat(String) Check if extension type is supported Declaration public bool SupportsFormat(string sExtension) Parameters Type Name Description String sExtension Returns Type Description Boolean Events | Improve this Doc View Source warningEvent Declaration public event ParsingMessagesHandler warningEvent Event Type Type Description ParsingMessagesHandler"
  },
  "api/g3.StandardMeshWriter.html": {
    "href": "api/g3.StandardMeshWriter.html",
    "title": "Class StandardMeshWriter | ViRGIS VR GIS",
    "keywords": "Class StandardMeshWriter Writes various mesh file formats. Format is determined from extension. Currently supports: .obj : Wavefront OBJ Format https://en.wikipedia.org/wiki/Wavefront_.obj_file .stl : ascii and binary STL formats https://en.wikipedia.org/wiki/STL_(file_format ) .off : OFF format https://en.wikipedia.org/wiki/OFF_(file_format ) .g3mesh : internal binary format for packed DMesh3 objects Each of these is implemented in a separate Writer class, eg OBJWriter, STLWriter, etc Inheritance Object StandardMeshWriter Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class StandardMeshWriter : IDisposable Fields | Improve this Doc View Source CloseStreamF called on Streams returned by OpenStreamF when we are done with them. Declaration public Action<Stream> CloseStreamF Field Value Type Description Action < Stream > | Improve this Doc View Source OpenStreamF By default we write to files, but if you would like to write to some other Stream type (eg MemoryStream), you can replace this function. We also pass this function down into the XYZWriter classes that need to write additional files (eg OBJ mesh) Declaration public Func<string, Stream> OpenStreamF Field Value Type Description Func < String , Stream > | Improve this Doc View Source WriteInvariantCulture If the mesh format we are writing is text, then the OS will write in the number style of the current language. So in Germany, numbers are written 1,00 instead of 1.00, for example. If this flag is true, we override this to always write in a consistent way. Declaration public bool WriteInvariantCulture Field Value Type Description Boolean Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Write(String, List<WriteMesh>, WriteOptions) Declaration public IOWriteResult Write(string sFilename, List<WriteMesh> vMeshes, WriteOptions options) Parameters Type Name Description String sFilename List < WriteMesh > vMeshes WriteOptions options Returns Type Description IOWriteResult | Improve this Doc View Source WriteFile(String, List<WriteMesh>, WriteOptions) Declaration public static IOWriteResult WriteFile(string sFilename, List<WriteMesh> vMeshes, WriteOptions options) Parameters Type Name Description String sFilename List < WriteMesh > vMeshes WriteOptions options Returns Type Description IOWriteResult | Improve this Doc View Source WriteMesh(String, IMesh, WriteOptions) Declaration public static IOWriteResult WriteMesh(string sFilename, IMesh mesh, WriteOptions options) Parameters Type Name Description String sFilename IMesh mesh WriteOptions options Returns Type Description IOWriteResult | Improve this Doc View Source WriteMeshes(String, List<DMesh3>, WriteOptions) Declaration public static IOWriteResult WriteMeshes(string sFilename, List<DMesh3> vMeshes, WriteOptions options) Parameters Type Name Description String sFilename List < DMesh3 > vMeshes WriteOptions options Returns Type Description IOWriteResult"
  },
  "api/g3.StandardSculptCurveDeformation.html": {
    "href": "api/g3.StandardSculptCurveDeformation.html",
    "title": "Class StandardSculptCurveDeformation | ViRGIS VR GIS",
    "keywords": "Class StandardSculptCurveDeformation Inheritance Object SculptCurveDeformation StandardSculptCurveDeformation SculptCurveMove SculptCurveSmooth Inherited Members SculptCurveDeformation._curve SculptCurveDeformation.Curve SculptCurveDeformation._weightfunc SculptCurveDeformation.WeightFunc SculptCurveDeformation.radius SculptCurveDeformation.Radius SculptCurveDeformation.vPreviousPos SculptCurveDeformation.BeginDeformation(Frame3f) SculptCurveDeformation.UpdateDeformation(Frame3f) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class StandardSculptCurveDeformation : SculptCurveDeformation Constructors | Improve this Doc View Source StandardSculptCurveDeformation() Declaration public StandardSculptCurveDeformation() Fields | Improve this Doc View Source DeformF Declaration public Func<int, double, Vector3d> DeformF Field Value Type Description Func < Int32 , Double , Vector3d > | Improve this Doc View Source ModifiedV Declaration public BitArray ModifiedV Field Value Type Description BitArray | Improve this Doc View Source NewV Declaration public DVector<Vector3d> NewV Field Value Type Description DVector < Vector3d > | Improve this Doc View Source SmoothAlpha Declaration public double SmoothAlpha Field Value Type Description Double | Improve this Doc View Source SmoothIterations Declaration public int SmoothIterations Field Value Type Description Int32 Methods | Improve this Doc View Source Apply(Frame3f) Declaration public override SculptCurveDeformation.DeformInfo Apply(Frame3f vNextPos) Parameters Type Name Description Frame3f vNextPos Returns Type Description SculptCurveDeformation.DeformInfo Overrides SculptCurveDeformation.Apply(Frame3f)"
  },
  "api/g3.STLFormatReader.html": {
    "href": "api/g3.STLFormatReader.html",
    "title": "Class STLFormatReader | ViRGIS VR GIS",
    "keywords": "Class STLFormatReader Inheritance Object STLFormatReader Implements MeshFormatReader Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class STLFormatReader : MeshFormatReader Properties | Improve this Doc View Source SupportedExtensions Declaration public List<string> SupportedExtensions { get; } Property Value Type Description List < String > Methods | Improve this Doc View Source ReadFile(Stream, IMeshBuilder, ReadOptions, ParsingMessagesHandler) Declaration public IOReadResult ReadFile(Stream stream, IMeshBuilder builder, ReadOptions options, ParsingMessagesHandler messages) Parameters Type Name Description Stream stream IMeshBuilder builder ReadOptions options ParsingMessagesHandler messages Returns Type Description IOReadResult | Improve this Doc View Source ReadFile(String, IMeshBuilder, ReadOptions, ParsingMessagesHandler) Declaration public IOReadResult ReadFile(string sFilename, IMeshBuilder builder, ReadOptions options, ParsingMessagesHandler messages) Parameters Type Name Description String sFilename IMeshBuilder builder ReadOptions options ParsingMessagesHandler messages Returns Type Description IOReadResult Implements MeshFormatReader"
  },
  "api/g3.STLReader.html": {
    "href": "api/g3.STLReader.html",
    "title": "Class STLReader | ViRGIS VR GIS",
    "keywords": "Class STLReader Inheritance Object STLReader Implements IMeshReader Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class STLReader : IMeshReader Fields | Improve this Doc View Source PerTriAttribFlag ReadOptions.CustomFlags flag for configuring .WantPerTriAttribs Declaration public const string PerTriAttribFlag = \"-want-tri-attrib\" Field Value Type Description String | Improve this Doc View Source PerTriAttribMetadataName name argument passed to IMeshBuilder.AppendMetaData Declaration public static string PerTriAttribMetadataName Field Value Type Description String | Improve this Doc View Source RebuildStrategy Which algorithm is used to try to reconstruct mesh topology from STL triangle soup Declaration public STLReader.Strategy RebuildStrategy Field Value Type Description STLReader.Strategy | Improve this Doc View Source StrategyFlag ReadOptions.CustomFlags flag for configuring .RebuildStrategy Declaration public const string StrategyFlag = \"-stl-weld-strategy\" Field Value Type Description String | Improve this Doc View Source WantPerTriAttribs Binary STL supports per-triangle integer attribute, which is often used to store face colors. If this flag is true, we will attach these face colors to the returned mesh via IMeshBuilder.AppendMetaData Declaration public bool WantPerTriAttribs Field Value Type Description Boolean | Improve this Doc View Source WeldTolerance Vertices within this distance are considered \"the same\" by welding strategies. Declaration public double WeldTolerance Field Value Type Description Double Methods | Improve this Doc View Source BuildMesh(STLReader.STLSolid, IMeshBuilder) Declaration protected virtual void BuildMesh(STLReader.STLSolid solid, IMeshBuilder builder) Parameters Type Name Description STLReader.STLSolid solid IMeshBuilder builder | Improve this Doc View Source BuildMesh_Auto(STLReader.STLSolid) Declaration protected virtual DMesh3 BuildMesh_Auto(STLReader.STLSolid solid) Parameters Type Name Description STLReader.STLSolid solid Returns Type Description DMesh3 | Improve this Doc View Source BuildMesh_IdenticalWeld(STLReader.STLSolid) Declaration protected virtual DMesh3 BuildMesh_IdenticalWeld(STLReader.STLSolid solid) Parameters Type Name Description STLReader.STLSolid solid Returns Type Description DMesh3 | Improve this Doc View Source BuildMesh_NoMerge(STLReader.STLSolid, IMeshBuilder) Declaration protected virtual void BuildMesh_NoMerge(STLReader.STLSolid solid, IMeshBuilder builder) Parameters Type Name Description STLReader.STLSolid solid IMeshBuilder builder | Improve this Doc View Source BuildMesh_TolerantWeld(STLReader.STLSolid, Double) Declaration protected virtual DMesh3 BuildMesh_TolerantWeld(STLReader.STLSolid solid, double weld_tolerance) Parameters Type Name Description STLReader.STLSolid solid Double weld_tolerance Returns Type Description DMesh3 | Improve this Doc View Source check_for_cracks(DMesh3, out Int32, Double) Declaration protected bool check_for_cracks(DMesh3 mesh, out int boundary_edge_count, double crack_tol = 9.9999999747524271E-07) Parameters Type Name Description DMesh3 mesh Int32 boundary_edge_count Double crack_tol Returns Type Description Boolean | Improve this Doc View Source count_boundary_edges(DMesh3) Declaration protected int count_boundary_edges(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh Returns Type Description Int32 | Improve this Doc View Source Read(BinaryReader, ReadOptions, IMeshBuilder) Declaration public IOReadResult Read(BinaryReader reader, ReadOptions options, IMeshBuilder builder) Parameters Type Name Description BinaryReader reader ReadOptions options IMeshBuilder builder Returns Type Description IOReadResult | Improve this Doc View Source Read(TextReader, ReadOptions, IMeshBuilder) Declaration public IOReadResult Read(TextReader reader, ReadOptions options, IMeshBuilder builder) Parameters Type Name Description TextReader reader ReadOptions options IMeshBuilder builder Returns Type Description IOReadResult Events | Improve this Doc View Source warningEvent connect to this event to get warning messages Declaration public event ParsingMessagesHandler warningEvent Event Type Type Description ParsingMessagesHandler Implements IMeshReader"
  },
  "api/g3.STLReader.STLSolid.html": {
    "href": "api/g3.STLReader.STLSolid.html",
    "title": "Class STLReader.STLSolid | ViRGIS VR GIS",
    "keywords": "Class STLReader.STLSolid Inheritance Object STLReader.STLSolid Namespace : g3 Assembly : geometry3Sharp.dll Syntax protected class STLSolid Fields | Improve this Doc View Source Name Declaration public string Name Field Value Type Description String | Improve this Doc View Source TriAttribs Declaration public DVector<short> TriAttribs Field Value Type Description DVector < Int16 > | Improve this Doc View Source Vertices Declaration public DVectorArray3f Vertices Field Value Type Description DVectorArray3f"
  },
  "api/g3.STLReader.Strategy.html": {
    "href": "api/g3.STLReader.Strategy.html",
    "title": "Enum STLReader.Strategy | ViRGIS VR GIS",
    "keywords": "Enum STLReader.Strategy Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum Strategy Fields Name Description AutoBestResult IdenticalVertexWeld NoProcessing TolerantVertexWeld"
  },
  "api/g3.STLWriter.html": {
    "href": "api/g3.STLWriter.html",
    "title": "Class STLWriter | ViRGIS VR GIS",
    "keywords": "Class STLWriter Inheritance Object STLWriter Implements IMeshWriter Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class STLWriter : IMeshWriter Methods | Improve this Doc View Source Write(BinaryWriter, List<WriteMesh>, WriteOptions) Declaration public IOWriteResult Write(BinaryWriter writer, List<WriteMesh> vMeshes, WriteOptions options) Parameters Type Name Description BinaryWriter writer List < WriteMesh > vMeshes WriteOptions options Returns Type Description IOWriteResult | Improve this Doc View Source Write(TextWriter, List<WriteMesh>, WriteOptions) Declaration public IOWriteResult Write(TextWriter writer, List<WriteMesh> vMeshes, WriteOptions options) Parameters Type Name Description TextWriter writer List < WriteMesh > vMeshes WriteOptions options Returns Type Description IOWriteResult Implements IMeshWriter"
  },
  "api/g3.StringTagSet-1.html": {
    "href": "api/g3.StringTagSet-1.html",
    "title": "Class StringTagSet<T> | ViRGIS VR GIS",
    "keywords": "Class StringTagSet<T> Basic object->string mapping Inheritance Object StringTagSet<T> Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class StringTagSet<T> Type Parameters Name Description T Constructors | Improve this Doc View Source StringTagSet() Declaration public StringTagSet() Fields | Improve this Doc View Source InvalidTag Declaration public const string InvalidTag = \"\" Field Value Type Description String Methods | Improve this Doc View Source Add(T, String) Declaration public void Add(T reference, string tag) Parameters Type Name Description T reference String tag | Improve this Doc View Source Get(T) Declaration public string Get(T reference) Parameters Type Name Description T reference Returns Type Description String | Improve this Doc View Source Has(T) Declaration public bool Has(T reference) Parameters Type Name Description T reference Returns Type Description Boolean"
  },
  "api/g3.SVGWriter.html": {
    "href": "api/g3.SVGWriter.html",
    "title": "Class SVGWriter | ViRGIS VR GIS",
    "keywords": "Class SVGWriter Inheritance Object SVGWriter Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SVGWriter Constructors | Improve this Doc View Source SVGWriter() Declaration public SVGWriter() Fields | Improve this Doc View Source BoundsPad Declaration public double BoundsPad Field Value Type Description Double | Improve this Doc View Source DefaultArcStyle Declaration public SVGWriter.Style DefaultArcStyle Field Value Type Description SVGWriter.Style | Improve this Doc View Source DefaultCircleStyle Declaration public SVGWriter.Style DefaultCircleStyle Field Value Type Description SVGWriter.Style | Improve this Doc View Source DefaultDGraphStyle Declaration public SVGWriter.Style DefaultDGraphStyle Field Value Type Description SVGWriter.Style | Improve this Doc View Source DefaultLineStyle Declaration public SVGWriter.Style DefaultLineStyle Field Value Type Description SVGWriter.Style | Improve this Doc View Source DefaultPolygonStyle Declaration public SVGWriter.Style DefaultPolygonStyle Field Value Type Description SVGWriter.Style | Improve this Doc View Source DefaultPolylineStyle Declaration public SVGWriter.Style DefaultPolylineStyle Field Value Type Description SVGWriter.Style | Improve this Doc View Source FlipY Declaration public bool FlipY Field Value Type Description Boolean | Improve this Doc View Source Precision Declaration public int Precision Field Value Type Description Int32 Methods | Improve this Doc View Source AddArc(Arc2d) Declaration public void AddArc(Arc2d arc) Parameters Type Name Description Arc2d arc | Improve this Doc View Source AddArc(Arc2d, SVGWriter.Style) Declaration public void AddArc(Arc2d arc, SVGWriter.Style style) Parameters Type Name Description Arc2d arc SVGWriter.Style style | Improve this Doc View Source AddBox(AxisAlignedBox2d) Declaration public void AddBox(AxisAlignedBox2d box) Parameters Type Name Description AxisAlignedBox2d box | Improve this Doc View Source AddBox(AxisAlignedBox2d, SVGWriter.Style) Declaration public void AddBox(AxisAlignedBox2d box, SVGWriter.Style style) Parameters Type Name Description AxisAlignedBox2d box SVGWriter.Style style | Improve this Doc View Source AddCircle(Circle2d) Declaration public void AddCircle(Circle2d circle) Parameters Type Name Description Circle2d circle | Improve this Doc View Source AddCircle(Circle2d, SVGWriter.Style) Declaration public void AddCircle(Circle2d circle, SVGWriter.Style style) Parameters Type Name Description Circle2d circle SVGWriter.Style style | Improve this Doc View Source AddComplex(PlanarComplex) Declaration public void AddComplex(PlanarComplex complex) Parameters Type Name Description PlanarComplex complex | Improve this Doc View Source AddGraph(DGraph2) Declaration public void AddGraph(DGraph2 graph) Parameters Type Name Description DGraph2 graph | Improve this Doc View Source AddGraph(DGraph2, SVGWriter.Style) Declaration public void AddGraph(DGraph2 graph, SVGWriter.Style style) Parameters Type Name Description DGraph2 graph SVGWriter.Style style | Improve this Doc View Source AddLine(Segment2d) Declaration public void AddLine(Segment2d segment) Parameters Type Name Description Segment2d segment | Improve this Doc View Source AddLine(Segment2d, SVGWriter.Style) Declaration public void AddLine(Segment2d segment, SVGWriter.Style style) Parameters Type Name Description Segment2d segment SVGWriter.Style style | Improve this Doc View Source AddPolygon(Polygon2d) Declaration public void AddPolygon(Polygon2d poly) Parameters Type Name Description Polygon2d poly | Improve this Doc View Source AddPolygon(Polygon2d, SVGWriter.Style) Declaration public void AddPolygon(Polygon2d poly, SVGWriter.Style style) Parameters Type Name Description Polygon2d poly SVGWriter.Style style | Improve this Doc View Source AddPolyline(PolyLine2d) Declaration public void AddPolyline(PolyLine2d poly) Parameters Type Name Description PolyLine2d poly | Improve this Doc View Source AddPolyline(PolyLine2d, SVGWriter.Style) Declaration public void AddPolyline(PolyLine2d poly, SVGWriter.Style style) Parameters Type Name Description PolyLine2d poly SVGWriter.Style style | Improve this Doc View Source MapPt(Vector2d) Declaration protected virtual Vector2d MapPt(Vector2d v) Parameters Type Name Description Vector2d v Returns Type Description Vector2d | Improve this Doc View Source QuickWrite(DGraph2, String, Double) Declaration public static void QuickWrite(DGraph2 graph, string sPath, double line_width = 1) Parameters Type Name Description DGraph2 graph String sPath Double line_width | Improve this Doc View Source QuickWrite(List<GeneralPolygon2d>, String, Double) Declaration public static void QuickWrite(List<GeneralPolygon2d> polygons, string sPath, double line_width = 1) Parameters Type Name Description List < GeneralPolygon2d > polygons String sPath Double line_width | Improve this Doc View Source QuickWrite(List<GeneralPolygon2d>, String, Single, List<GeneralPolygon2d>, String, Single, String) Declaration public static void QuickWrite(List<GeneralPolygon2d> polygons1, string color1, float width1, List<GeneralPolygon2d> polygons2, string color2, float width2, string sPath) Parameters Type Name Description List < GeneralPolygon2d > polygons1 String color1 Single width1 List < GeneralPolygon2d > polygons2 String color2 Single width2 String sPath | Improve this Doc View Source SetDefaultLineWidth(Single) Declaration public void SetDefaultLineWidth(float width) Parameters Type Name Description Single width | Improve this Doc View Source Write(String) Declaration public IOWriteResult Write(string sFilename) Parameters Type Name Description String sFilename Returns Type Description IOWriteResult"
  },
  "api/g3.SVGWriter.Style.html": {
    "href": "api/g3.SVGWriter.Style.html",
    "title": "Struct SVGWriter.Style | ViRGIS VR GIS",
    "keywords": "Struct SVGWriter.Style Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Style Fields | Improve this Doc View Source Default Declaration public static readonly SVGWriter.Style Default Field Value Type Description SVGWriter.Style | Improve this Doc View Source fill Declaration public string fill Field Value Type Description String | Improve this Doc View Source stroke Declaration public string stroke Field Value Type Description String | Improve this Doc View Source stroke_width Declaration public float stroke_width Field Value Type Description Single Methods | Improve this Doc View Source Filled(String, String, Single) Declaration public static SVGWriter.Style Filled(string fillCol, string strokeCol = \"\", float strokeWidth = 0F) Parameters Type Name Description String fillCol String strokeCol Single strokeWidth Returns Type Description SVGWriter.Style | Improve this Doc View Source Outline(String, Single) Declaration public static SVGWriter.Style Outline(string strokeCol, float strokeWidth) Parameters Type Name Description String strokeCol Single strokeWidth Returns Type Description SVGWriter.Style | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString()"
  },
  "api/g3.SymmetricEigenSolver.html": {
    "href": "api/g3.SymmetricEigenSolver.html",
    "title": "Class SymmetricEigenSolver | ViRGIS VR GIS",
    "keywords": "Class SymmetricEigenSolver Inheritance Object SymmetricEigenSolver Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SymmetricEigenSolver Constructors | Improve this Doc View Source SymmetricEigenSolver(Int32, Int32) Declaration public SymmetricEigenSolver(int size, int maxIterations) Parameters Type Name Description Int32 size Int32 maxIterations Fields | Improve this Doc View Source NO_CONVERGENCE Declaration public const int NO_CONVERGENCE = 2147483647 Field Value Type Description Int32 Methods | Improve this Doc View Source GetEigenvalue(Int32) Declaration public double GetEigenvalue(int c) Parameters Type Name Description Int32 c Returns Type Description Double | Improve this Doc View Source GetEigenvalues() Declaration public double[] GetEigenvalues() Returns Type Description Double [] | Improve this Doc View Source GetEigenvalues(Double[]) Declaration public void GetEigenvalues(double[] eigenvalues) Parameters Type Name Description Double [] eigenvalues | Improve this Doc View Source GetEigenvector(Int32) Declaration public double[] GetEigenvector(int c) Parameters Type Name Description Int32 c Returns Type Description Double [] | Improve this Doc View Source GetEigenvector(Int32, Double[]) Declaration public void GetEigenvector(int c, double[] eigenvector) Parameters Type Name Description Int32 c Double [] eigenvector | Improve this Doc View Source GetEigenvectors() Declaration public double[] GetEigenvectors() Returns Type Description Double [] | Improve this Doc View Source GetEigenvectors(Double[]) Declaration public void GetEigenvectors(double[] eigenvectors) Parameters Type Name Description Double [] eigenvectors | Improve this Doc View Source IsRotation() Declaration public bool IsRotation() Returns Type Description Boolean | Improve this Doc View Source Solve(Double[], SymmetricEigenSolver.SortType) Declaration public int Solve(double[] input, SymmetricEigenSolver.SortType eSort) Parameters Type Name Description Double [] input SymmetricEigenSolver.SortType eSort Returns Type Description Int32"
  },
  "api/g3.SymmetricEigenSolver.SortType.html": {
    "href": "api/g3.SymmetricEigenSolver.SortType.html",
    "title": "Enum SymmetricEigenSolver.SortType | ViRGIS VR GIS",
    "keywords": "Enum SymmetricEigenSolver.SortType Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum SortType Fields Name Description Decreasing Increasing NoSorting"
  },
  "api/g3.SymmetricSparseMatrix.html": {
    "href": "api/g3.SymmetricSparseMatrix.html",
    "title": "Class SymmetricSparseMatrix | ViRGIS VR GIS",
    "keywords": "Class SymmetricSparseMatrix Basic sparse-symmetric-matrix class. Stores upper-triangular portion. Uses Dictionary as sparsifying data structure, which is probably not a good option. But it is easy. Inheritance Object SymmetricSparseMatrix Implements IMatrix Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class SymmetricSparseMatrix : IMatrix Constructors | Improve this Doc View Source SymmetricSparseMatrix(DenseMatrix) Declaration public SymmetricSparseMatrix(DenseMatrix m) Parameters Type Name Description DenseMatrix m | Improve this Doc View Source SymmetricSparseMatrix(SymmetricSparseMatrix) Declaration public SymmetricSparseMatrix(SymmetricSparseMatrix m) Parameters Type Name Description SymmetricSparseMatrix m | Improve this Doc View Source SymmetricSparseMatrix(Int32) Declaration public SymmetricSparseMatrix(int setN = 0) Parameters Type Name Description Int32 setN Properties | Improve this Doc View Source Columns Declaration public int Columns { get; } Property Value Type Description Int32 | Improve this Doc View Source Item[Int32, Int32] Declaration public double this[int r, int c] { get; set; } Parameters Type Name Description Int32 r Int32 c Property Value Type Description Double | Improve this Doc View Source Rows Declaration public int Rows { get; } Property Value Type Description Int32 | Improve this Doc View Source Size Declaration public Index2i Size { get; } Property Value Type Description Index2i Methods | Improve this Doc View Source EpsilonEqual(SymmetricSparseMatrix, Double) Declaration public bool EpsilonEqual(SymmetricSparseMatrix B, double eps = 2.2204460492503131E-16) Parameters Type Name Description SymmetricSparseMatrix B Double eps Returns Type Description Boolean | Improve this Doc View Source Multiply(SymmetricSparseMatrix) Declaration public SymmetricSparseMatrix Multiply(SymmetricSparseMatrix M2) Parameters Type Name Description SymmetricSparseMatrix M2 Returns Type Description SymmetricSparseMatrix | Improve this Doc View Source Multiply(SymmetricSparseMatrix, ref SymmetricSparseMatrix, Boolean) Declaration public void Multiply(SymmetricSparseMatrix M2, ref SymmetricSparseMatrix R, bool bParallel = true) Parameters Type Name Description SymmetricSparseMatrix M2 SymmetricSparseMatrix R Boolean bParallel | Improve this Doc View Source Multiply(Double[], Double[]) Declaration public void Multiply(double[] X, double[] Result) Parameters Type Name Description Double [] X Double [] Result | Improve this Doc View Source NonZeroIndices() Declaration public IEnumerable<Index2i> NonZeroIndices() Returns Type Description IEnumerable < Index2i > | Improve this Doc View Source NonZeros() Declaration public IEnumerable<KeyValuePair<Index2i, double>> NonZeros() Returns Type Description IEnumerable < KeyValuePair < Index2i , Double >> | Improve this Doc View Source Set(Int32, Int32, Double) Declaration public void Set(int r, int c, double value) Parameters Type Name Description Int32 r Int32 c Double value | Improve this Doc View Source Square(Boolean) Declaration public SymmetricSparseMatrix Square(bool bParallel = true) Parameters Type Name Description Boolean bParallel Returns Type Description SymmetricSparseMatrix | Improve this Doc View Source SquarePackedParallel() Returns this*this, as a packed sparse matrix. Computes in parallel. Declaration public PackedSparseMatrix SquarePackedParallel() Returns Type Description PackedSparseMatrix Implements IMatrix"
  },
  "api/g3.TilingUtil.html": {
    "href": "api/g3.TilingUtil.html",
    "title": "Class TilingUtil | ViRGIS VR GIS",
    "keywords": "Class TilingUtil Inheritance Object TilingUtil Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class TilingUtil Methods | Improve this Doc View Source BoundedCircleTiling2(AxisAlignedBox2d, AxisAlignedBox2d, Double) hex-grid tiling of circles inside bounds, with spacing between elements Returns list of translations to element. Always allows at least one row and column, even if element overflows bounds in that dimension. Declaration public static List<Vector2d> BoundedCircleTiling2(AxisAlignedBox2d element, AxisAlignedBox2d bounds, double spacing) Parameters Type Name Description AxisAlignedBox2d element AxisAlignedBox2d bounds Double spacing Returns Type Description List < Vector2d > | Improve this Doc View Source BoundedRegularTiling2(AxisAlignedBox2d, AxisAlignedBox2d, Double) Regular-grid tiling of element inside bounds, with spacing between elements Returns list of translations to element. Always allows at least one row and column, even if element overflows bounds in that dimension. Declaration public static List<Vector2d> BoundedRegularTiling2(AxisAlignedBox2d element, AxisAlignedBox2d bounds, double spacing) Parameters Type Name Description AxisAlignedBox2d element AxisAlignedBox2d bounds Double spacing Returns Type Description List < Vector2d >"
  },
  "api/g3.TransformedIntersectionTarget.html": {
    "href": "api/g3.TransformedIntersectionTarget.html",
    "title": "Class TransformedIntersectionTarget | ViRGIS VR GIS",
    "keywords": "Class TransformedIntersectionTarget Inheritance Object TransformedIntersectionTarget Implements IIntersectionTarget Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class TransformedIntersectionTarget : IIntersectionTarget Fields | Improve this Doc View Source MapFromBaseNormalF Declaration public Func<Vector3d, Vector3d> MapFromBaseNormalF Field Value Type Description Func < Vector3d , Vector3d > | Improve this Doc View Source MapFromBasePosF Declaration public Func<Vector3d, Vector3d> MapFromBasePosF Field Value Type Description Func < Vector3d , Vector3d > | Improve this Doc View Source MapToBaseF Declaration public Func<Ray3d, Ray3d> MapToBaseF Field Value Type Description Func < Ray3d , Ray3d > Properties | Improve this Doc View Source HasNormal Declaration public bool HasNormal { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source RayIntersect(Ray3d, out Vector3d, out Vector3d) Declaration public bool RayIntersect(Ray3d ray, out Vector3d vHit, out Vector3d vHitNormal) Parameters Type Name Description Ray3d ray Vector3d vHit Vector3d vHitNormal Returns Type Description Boolean Implements IIntersectionTarget"
  },
  "api/g3.TransformedMeshProjectionTarget.html": {
    "href": "api/g3.TransformedMeshProjectionTarget.html",
    "title": "Class TransformedMeshProjectionTarget | ViRGIS VR GIS",
    "keywords": "Class TransformedMeshProjectionTarget Extension of MeshProjectionTarget that allows the target to have a transformation relative to it's internal space. Call SetTransform(), or initialize the transforms yourself Inheritance Object MeshProjectionTarget TransformedMeshProjectionTarget Implements IOrientedProjectionTarget IProjectionTarget Inherited Members MeshProjectionTarget.Mesh MeshProjectionTarget.Spatial MeshProjectionTarget.Auto(DMesh3, Boolean) MeshProjectionTarget.Auto(DMesh3, IEnumerable<Int32>, Int32) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class TransformedMeshProjectionTarget : MeshProjectionTarget, IOrientedProjectionTarget, IProjectionTarget Constructors | Improve this Doc View Source TransformedMeshProjectionTarget() Declaration public TransformedMeshProjectionTarget() | Improve this Doc View Source TransformedMeshProjectionTarget(DMesh3) Declaration public TransformedMeshProjectionTarget(DMesh3 mesh) Parameters Type Name Description DMesh3 mesh | Improve this Doc View Source TransformedMeshProjectionTarget(DMesh3, ISpatial) Declaration public TransformedMeshProjectionTarget(DMesh3 mesh, ISpatial spatial) Parameters Type Name Description DMesh3 mesh ISpatial spatial Fields | Improve this Doc View Source SourceToTargetXForm Declaration public TransformSequence SourceToTargetXForm Field Value Type Description TransformSequence | Improve this Doc View Source TargetToSourceXForm Declaration public TransformSequence TargetToSourceXForm Field Value Type Description TransformSequence Methods | Improve this Doc View Source Project(Vector3d, out Vector3d, Int32) Declaration public override Vector3d Project(Vector3d vPoint, out Vector3d vProjectNormal, int identifier = -1) Parameters Type Name Description Vector3d vPoint Vector3d vProjectNormal Int32 identifier Returns Type Description Vector3d Overrides MeshProjectionTarget.Project(Vector3d, out Vector3d, Int32) | Improve this Doc View Source Project(Vector3d, Int32) Declaration public override Vector3d Project(Vector3d vPoint, int identifier = -1) Parameters Type Name Description Vector3d vPoint Int32 identifier Returns Type Description Vector3d Overrides MeshProjectionTarget.Project(Vector3d, Int32) | Improve this Doc View Source SetTransform(TransformSequence) Declaration public void SetTransform(TransformSequence sourceToTargetX) Parameters Type Name Description TransformSequence sourceToTargetX Implements IOrientedProjectionTarget IProjectionTarget"
  },
  "api/g3.TransformSequence.html": {
    "href": "api/g3.TransformSequence.html",
    "title": "Class TransformSequence | ViRGIS VR GIS",
    "keywords": "Class TransformSequence TransformSequence stores an ordered list of basic transformations. This can be useful if you need to construct some modifications and want to use the same set later. For example, if you have a hierarchy of objects with relative transformations and want to \"save\" the nested transform sequence without having to hold references to the original objects. Use the Append() functions to add different transform types, and the TransformX() to apply the sequence Inheritance Object TransformSequence Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class TransformSequence Constructors | Improve this Doc View Source TransformSequence() Declaration public TransformSequence() | Improve this Doc View Source TransformSequence(TransformSequence) Declaration public TransformSequence(TransformSequence copy) Parameters Type Name Description TransformSequence copy Methods | Improve this Doc View Source Append(TransformSequence) Declaration public void Append(TransformSequence sequence) Parameters Type Name Description TransformSequence sequence | Improve this Doc View Source AppendFromFrame(Frame3f) Declaration public void AppendFromFrame(Frame3f frame) Parameters Type Name Description Frame3f frame | Improve this Doc View Source AppendRotation(Quaternionf) Declaration public void AppendRotation(Quaternionf q) Parameters Type Name Description Quaternionf q | Improve this Doc View Source AppendRotation(Quaternionf, Vector3d) Declaration public void AppendRotation(Quaternionf q, Vector3d aroundPt) Parameters Type Name Description Quaternionf q Vector3d aroundPt | Improve this Doc View Source AppendScale(Vector3d) Declaration public void AppendScale(Vector3d s) Parameters Type Name Description Vector3d s | Improve this Doc View Source AppendScale(Vector3d, Vector3d) Declaration public void AppendScale(Vector3d s, Vector3d aroundPt) Parameters Type Name Description Vector3d s Vector3d aroundPt | Improve this Doc View Source AppendToFrame(Frame3f) Declaration public void AppendToFrame(Frame3f frame) Parameters Type Name Description Frame3f frame | Improve this Doc View Source AppendTranslation(Vector3d) Declaration public void AppendTranslation(Vector3d dv) Parameters Type Name Description Vector3d dv | Improve this Doc View Source AppendTranslation(Double, Double, Double) Declaration public void AppendTranslation(double dx, double dy, double dz) Parameters Type Name Description Double dx Double dy Double dz | Improve this Doc View Source MakeInverse() construct inverse transformation sequence Declaration public TransformSequence MakeInverse() Returns Type Description TransformSequence | Improve this Doc View Source Restore(BinaryReader) Declaration public void Restore(BinaryReader reader) Parameters Type Name Description BinaryReader reader | Improve this Doc View Source Store(BinaryWriter) Declaration public void Store(BinaryWriter writer) Parameters Type Name Description BinaryWriter writer | Improve this Doc View Source TransformP(Vector3d) Apply transforms to point Declaration public Vector3d TransformP(Vector3d p) Parameters Type Name Description Vector3d p Returns Type Description Vector3d | Improve this Doc View Source TransformP(Vector3f) Apply transforms to point Declaration public Vector3f TransformP(Vector3f p) Parameters Type Name Description Vector3f p Returns Type Description Vector3f | Improve this Doc View Source TransformV(Vector3d) Apply transforms to vector. Includes scaling. Declaration public Vector3d TransformV(Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Vector3d"
  },
  "api/g3.TransformSequence2.html": {
    "href": "api/g3.TransformSequence2.html",
    "title": "Class TransformSequence2 | ViRGIS VR GIS",
    "keywords": "Class TransformSequence2 TransformSequence stores an ordered list of basic transformations. This can be useful if you need to construct some modifications and want to use the same set later. For example, if you have a hierarchy of objects with relative transformations and want to \"save\" the nested transform sequence without having to hold references to the original objects. Use the Append() functions to add different transform types, and the TransformX() to apply the sequence Inheritance Object TransformSequence2 Implements ITransform2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class TransformSequence2 : ITransform2 Constructors | Improve this Doc View Source TransformSequence2() Declaration public TransformSequence2() Methods | Improve this Doc View Source Append(ITransform2) Declaration public TransformSequence2 Append(ITransform2 t2) Parameters Type Name Description ITransform2 t2 Returns Type Description TransformSequence2 | Improve this Doc View Source RotationDeg(Double) Declaration public TransformSequence2 RotationDeg(double angle) Parameters Type Name Description Double angle Returns Type Description TransformSequence2 | Improve this Doc View Source RotationDeg(Double, Vector2d) Declaration public TransformSequence2 RotationDeg(double angle, Vector2d aroundPt) Parameters Type Name Description Double angle Vector2d aroundPt Returns Type Description TransformSequence2 | Improve this Doc View Source RotationRad(Double) Declaration public TransformSequence2 RotationRad(double angle) Parameters Type Name Description Double angle Returns Type Description TransformSequence2 | Improve this Doc View Source RotationRad(Double, Vector2d) Declaration public TransformSequence2 RotationRad(double angle, Vector2d aroundPt) Parameters Type Name Description Double angle Vector2d aroundPt Returns Type Description TransformSequence2 | Improve this Doc View Source Scale(Vector2d) Declaration public TransformSequence2 Scale(Vector2d s) Parameters Type Name Description Vector2d s Returns Type Description TransformSequence2 | Improve this Doc View Source Scale(Vector2d, Vector2d) Declaration public TransformSequence2 Scale(Vector2d s, Vector2d aroundPt) Parameters Type Name Description Vector2d s Vector2d aroundPt Returns Type Description TransformSequence2 | Improve this Doc View Source TransformN(Vector2d) Apply transforms to normalized vector Declaration public Vector2d TransformN(Vector2d n) Parameters Type Name Description Vector2d n Returns Type Description Vector2d | Improve this Doc View Source TransformP(Vector2d) Apply transforms to point Declaration public Vector2d TransformP(Vector2d p) Parameters Type Name Description Vector2d p Returns Type Description Vector2d | Improve this Doc View Source TransformScalar(Double) Apply transforms to scalar dimension Declaration public double TransformScalar(double s) Parameters Type Name Description Double s Returns Type Description Double | Improve this Doc View Source Translation(Vector2d) Declaration public TransformSequence2 Translation(Vector2d dv) Parameters Type Name Description Vector2d dv Returns Type Description TransformSequence2 | Improve this Doc View Source Translation(Double, Double) Declaration public TransformSequence2 Translation(double dx, double dy) Parameters Type Name Description Double dx Double dy Returns Type Description TransformSequence2 Implements ITransform2"
  },
  "api/g3.Triangle2d.html": {
    "href": "api/g3.Triangle2d.html",
    "title": "Struct Triangle2d | ViRGIS VR GIS",
    "keywords": "Struct Triangle2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Triangle2d Constructors | Improve this Doc View Source Triangle2d(Vector2d, Vector2d, Vector2d) Declaration public Triangle2d(Vector2d v0, Vector2d v1, Vector2d v2) Parameters Type Name Description Vector2d v0 Vector2d v1 Vector2d v2 Fields | Improve this Doc View Source V0 Declaration public Vector2d V0 Field Value Type Description Vector2d | Improve this Doc View Source V1 Declaration public Vector2d V1 Field Value Type Description Vector2d | Improve this Doc View Source V2 Declaration public Vector2d V2 Field Value Type Description Vector2d Properties | Improve this Doc View Source Item[Int32] Declaration public Vector2d this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Vector2d Methods | Improve this Doc View Source PointAt(Vector3d) Declaration public Vector2d PointAt(Vector3d bary) Parameters Type Name Description Vector3d bary Returns Type Description Vector2d | Improve this Doc View Source PointAt(Double, Double, Double) Declaration public Vector2d PointAt(double bary0, double bary1, double bary2) Parameters Type Name Description Double bary0 Double bary1 Double bary2 Returns Type Description Vector2d Operators | Improve this Doc View Source Explicit(Triangle2d to Triangle2f) Declaration public static explicit operator Triangle2f(Triangle2d v) Parameters Type Name Description Triangle2d v Returns Type Description Triangle2f | Improve this Doc View Source Implicit(Triangle2f to Triangle2d) Declaration public static implicit operator Triangle2d(Triangle2f v) Parameters Type Name Description Triangle2f v Returns Type Description Triangle2d"
  },
  "api/g3.Triangle2f.html": {
    "href": "api/g3.Triangle2f.html",
    "title": "Struct Triangle2f | ViRGIS VR GIS",
    "keywords": "Struct Triangle2f Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Triangle2f Constructors | Improve this Doc View Source Triangle2f(Vector2f, Vector2f, Vector2f) Declaration public Triangle2f(Vector2f v0, Vector2f v1, Vector2f v2) Parameters Type Name Description Vector2f v0 Vector2f v1 Vector2f v2 Fields | Improve this Doc View Source V0 Declaration public Vector2f V0 Field Value Type Description Vector2f | Improve this Doc View Source V1 Declaration public Vector2f V1 Field Value Type Description Vector2f | Improve this Doc View Source V2 Declaration public Vector2f V2 Field Value Type Description Vector2f Properties | Improve this Doc View Source Item[Int32] Declaration public Vector2f this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Vector2f Methods | Improve this Doc View Source PointAt(Vector3f) Declaration public Vector2f PointAt(Vector3f bary) Parameters Type Name Description Vector3f bary Returns Type Description Vector2f | Improve this Doc View Source PointAt(Single, Single, Single) Declaration public Vector2f PointAt(float bary0, float bary1, float bary2) Parameters Type Name Description Single bary0 Single bary1 Single bary2 Returns Type Description Vector2f"
  },
  "api/g3.Triangle3d.html": {
    "href": "api/g3.Triangle3d.html",
    "title": "Struct Triangle3d | ViRGIS VR GIS",
    "keywords": "Struct Triangle3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Triangle3d Constructors | Improve this Doc View Source Triangle3d(Vector3d, Vector3d, Vector3d) Declaration public Triangle3d(Vector3d v0, Vector3d v1, Vector3d v2) Parameters Type Name Description Vector3d v0 Vector3d v1 Vector3d v2 Fields | Improve this Doc View Source V0 Declaration public Vector3d V0 Field Value Type Description Vector3d | Improve this Doc View Source V1 Declaration public Vector3d V1 Field Value Type Description Vector3d | Improve this Doc View Source V2 Declaration public Vector3d V2 Field Value Type Description Vector3d Properties | Improve this Doc View Source Area Declaration public double Area { get; } Property Value Type Description Double | Improve this Doc View Source AspectRatio Declaration public double AspectRatio { get; } Property Value Type Description Double | Improve this Doc View Source Item[Int32] Declaration public Vector3d this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Vector3d | Improve this Doc View Source Normal Declaration public Vector3d Normal { get; } Property Value Type Description Vector3d Methods | Improve this Doc View Source BarycentricCoords(Vector3d) Declaration public Vector3d BarycentricCoords(Vector3d point) Parameters Type Name Description Vector3d point Returns Type Description Vector3d | Improve this Doc View Source PointAt(Vector3d) Declaration public Vector3d PointAt(Vector3d bary) Parameters Type Name Description Vector3d bary Returns Type Description Vector3d | Improve this Doc View Source PointAt(Double, Double, Double) Declaration public Vector3d PointAt(double bary0, double bary1, double bary2) Parameters Type Name Description Double bary0 Double bary1 Double bary2 Returns Type Description Vector3d Operators | Improve this Doc View Source Explicit(Triangle3d to Triangle3f) Declaration public static explicit operator Triangle3f(Triangle3d v) Parameters Type Name Description Triangle3d v Returns Type Description Triangle3f | Improve this Doc View Source Implicit(Triangle3f to Triangle3d) Declaration public static implicit operator Triangle3d(Triangle3f v) Parameters Type Name Description Triangle3f v Returns Type Description Triangle3d"
  },
  "api/g3.Triangle3f.html": {
    "href": "api/g3.Triangle3f.html",
    "title": "Struct Triangle3f | ViRGIS VR GIS",
    "keywords": "Struct Triangle3f Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Triangle3f Constructors | Improve this Doc View Source Triangle3f(Vector3f, Vector3f, Vector3f) Declaration public Triangle3f(Vector3f v0, Vector3f v1, Vector3f v2) Parameters Type Name Description Vector3f v0 Vector3f v1 Vector3f v2 Fields | Improve this Doc View Source V0 Declaration public Vector3f V0 Field Value Type Description Vector3f | Improve this Doc View Source V1 Declaration public Vector3f V1 Field Value Type Description Vector3f | Improve this Doc View Source V2 Declaration public Vector3f V2 Field Value Type Description Vector3f Properties | Improve this Doc View Source Item[Int32] Declaration public Vector3f this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Vector3f Methods | Improve this Doc View Source BarycentricCoords(Vector3f) Declaration public Vector3f BarycentricCoords(Vector3f point) Parameters Type Name Description Vector3f point Returns Type Description Vector3f | Improve this Doc View Source PointAt(Vector3f) Declaration public Vector3f PointAt(Vector3f bary) Parameters Type Name Description Vector3f bary Returns Type Description Vector3f | Improve this Doc View Source PointAt(Single, Single, Single) Declaration public Vector3f PointAt(float bary0, float bary1, float bary2) Parameters Type Name Description Single bary0 Single bary1 Single bary2 Returns Type Description Vector3f"
  },
  "api/g3.TriangleBinsGrid2d.html": {
    "href": "api/g3.TriangleBinsGrid2d.html",
    "title": "Class TriangleBinsGrid2d | ViRGIS VR GIS",
    "keywords": "Class TriangleBinsGrid2d This class is a spatial data structure for 2D triangles. It is intended for point-containment and box-overlap queries. It does not store the triangles, only indices, so you must pass in the triangle vertices to add/remove functions, similar to PointHashGrid2d. However, unlike the hash classes, this one is based on a grid of \"bins\" which has a fixed size, so you must provide a bounding box on construction. Each triangle is inserted into every bin that it overlaps. [TODO] currently each triangle is inserted into every bin that it's bounding box overlaps. Need conservative rasterization to improve this. Can implement by testing each bin bbox for intersection w/ triangle Inheritance Object TriangleBinsGrid2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class TriangleBinsGrid2d Constructors | Improve this Doc View Source TriangleBinsGrid2d(AxisAlignedBox2d, Int32) \"invalid\" value will be returned by queries if no valid result is found (eg bounded-distance query) Declaration public TriangleBinsGrid2d(AxisAlignedBox2d bounds, int numCells) Parameters Type Name Description AxisAlignedBox2d bounds Int32 numCells Properties | Improve this Doc View Source Bounds Declaration public AxisAlignedBox2d Bounds { get; } Property Value Type Description AxisAlignedBox2d Methods | Improve this Doc View Source FindContainingTriangle(Vector2d, Func<Int32, Vector2d, Boolean>, Func<Int32, Boolean>) Find triangle that contains point. Not thread-safe. You provide containsF(), which does the containment check. If you provide ignoreF(), then tri is skipped if ignoreF(tid) == true Declaration public int FindContainingTriangle(Vector2d query_pt, Func<int, Vector2d, bool> containsF, Func<int, bool> ignoreF = null) Parameters Type Name Description Vector2d query_pt Func < Int32 , Vector2d , Boolean > containsF Func < Int32 , Boolean > ignoreF Returns Type Description Int32 | Improve this Doc View Source FindTrianglesInRange(AxisAlignedBox2d, HashSet<Int32>) find all triangles that overlap range Declaration public void FindTrianglesInRange(AxisAlignedBox2d range, HashSet<int> triangles) Parameters Type Name Description AxisAlignedBox2d range HashSet < Int32 > triangles | Improve this Doc View Source InsertTriangle(Int32, ref Vector2d, ref Vector2d, ref Vector2d) Insert triangle. This function is thread-safe, uses a SpinLock internally Declaration public void InsertTriangle(int triangle_id, ref Vector2d a, ref Vector2d b, ref Vector2d c) Parameters Type Name Description Int32 triangle_id Vector2d a Vector2d b Vector2d c | Improve this Doc View Source InsertTriangleUnsafe(Int32, ref Vector2d, ref Vector2d, ref Vector2d) Insert triangle without locking / thread-safety Declaration public void InsertTriangleUnsafe(int triangle_id, ref Vector2d a, ref Vector2d b, ref Vector2d c) Parameters Type Name Description Int32 triangle_id Vector2d a Vector2d b Vector2d c | Improve this Doc View Source RemoveTriangle(Int32, ref Vector2d, ref Vector2d, ref Vector2d) Remove triangle. This function is thread-safe, uses a SpinLock internally Declaration public void RemoveTriangle(int triangle_id, ref Vector2d a, ref Vector2d b, ref Vector2d c) Parameters Type Name Description Int32 triangle_id Vector2d a Vector2d b Vector2d c | Improve this Doc View Source RemoveTriangleUnsafe(Int32, ref Vector2d, ref Vector2d, ref Vector2d) Remove triangle without locking / thread-safety Declaration public void RemoveTriangleUnsafe(int triangle_id, ref Vector2d a, ref Vector2d b, ref Vector2d c) Parameters Type Name Description Int32 triangle_id Vector2d a Vector2d b Vector2d c"
  },
  "api/g3.TriangulatedPolygonGenerator.html": {
    "href": "api/g3.TriangulatedPolygonGenerator.html",
    "title": "Class TriangulatedPolygonGenerator | ViRGIS VR GIS",
    "keywords": "Class TriangulatedPolygonGenerator Triangulate a 2D polygon-with-holes by inserting it's edges into a meshed rectangle and then removing the triangles outside the polygon. Inheritance Object MeshGenerator TriangulatedPolygonGenerator Inherited Members MeshGenerator.vertices MeshGenerator.uv MeshGenerator.normals MeshGenerator.triangles MeshGenerator.groups MeshGenerator.WantUVs MeshGenerator.WantNormals MeshGenerator.WantGroups MeshGenerator.Clockwise MeshGenerator.MakeMesh(SimpleMesh) MeshGenerator.MakeSimpleMesh() MeshGenerator.MakeMesh(DMesh3) MeshGenerator.MakeDMesh() MeshGenerator.MakeMesh(NTMesh3) MeshGenerator.MakeNTMesh() MeshGenerator.duplicate_vertex_span(Int32, Int32) MeshGenerator.append_disc(Int32, Int32, Int32, Boolean, Boolean, Int32, Int32) MeshGenerator.append_rectangle(Int32, Int32, Int32, Int32, Boolean, Int32, Int32) MeshGenerator.append_2d_disc_segment(Int32, Int32, Int32, Int32, Boolean, Int32, Int32, Int32, Double) MeshGenerator.estimate_normal(Int32, Int32, Int32) MeshGenerator.bilerp(Vector3d, Vector3d, Vector3d, Vector3d, Double, Double) MeshGenerator.bilerp(Vector2d, Vector2d, Vector2d, Vector2d, Double, Double) MeshGenerator.bilerp(Vector2f, Vector2f, Vector2f, Vector2f, Single, Single) MeshGenerator.bilerp(Vector3i, Vector3i, Vector3i, Vector3i, Double, Double) MeshGenerator.lerp(Vector3i, Vector3i, Double) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class TriangulatedPolygonGenerator : MeshGenerator Fields | Improve this Doc View Source FixedNormal Declaration public Vector3f FixedNormal Field Value Type Description Vector3f | Improve this Doc View Source Polygon Declaration public GeneralPolygon2d Polygon Field Value Type Description GeneralPolygon2d | Improve this Doc View Source Subdivisions Declaration public int Subdivisions Field Value Type Description Int32 | Improve this Doc View Source UVMode Declaration public TrivialRectGenerator.UVModes UVMode Field Value Type Description TrivialRectGenerator.UVModes Methods | Improve this Doc View Source ComputeResult(out MeshInsertPolygon) Actually computes the insertion. In some cases we would like more info coming back than we get by using Generate() api. Note that resulting mesh is not compacted. Declaration public DMesh3 ComputeResult(out MeshInsertPolygon insertion) Parameters Type Name Description MeshInsertPolygon insertion Returns Type Description DMesh3 | Improve this Doc View Source Generate() Declaration public override MeshGenerator Generate() Returns Type Description MeshGenerator Overrides MeshGenerator.Generate()"
  },
  "api/g3.TrivialBox3Generator.html": {
    "href": "api/g3.TrivialBox3Generator.html",
    "title": "Class TrivialBox3Generator | ViRGIS VR GIS",
    "keywords": "Class TrivialBox3Generator Generate a minimal box Inheritance Object MeshGenerator TrivialBox3Generator Inherited Members MeshGenerator.vertices MeshGenerator.uv MeshGenerator.normals MeshGenerator.triangles MeshGenerator.groups MeshGenerator.WantUVs MeshGenerator.WantNormals MeshGenerator.WantGroups MeshGenerator.Clockwise MeshGenerator.MakeMesh(SimpleMesh) MeshGenerator.MakeSimpleMesh() MeshGenerator.MakeMesh(DMesh3) MeshGenerator.MakeDMesh() MeshGenerator.MakeMesh(NTMesh3) MeshGenerator.MakeNTMesh() MeshGenerator.duplicate_vertex_span(Int32, Int32) MeshGenerator.append_disc(Int32, Int32, Int32, Boolean, Boolean, Int32, Int32) MeshGenerator.append_rectangle(Int32, Int32, Int32, Int32, Boolean, Int32, Int32) MeshGenerator.append_2d_disc_segment(Int32, Int32, Int32, Int32, Boolean, Int32, Int32, Int32, Double) MeshGenerator.estimate_normal(Int32, Int32, Int32) MeshGenerator.bilerp(Vector3d, Vector3d, Vector3d, Vector3d, Double, Double) MeshGenerator.bilerp(Vector2d, Vector2d, Vector2d, Vector2d, Double, Double) MeshGenerator.bilerp(Vector2f, Vector2f, Vector2f, Vector2f, Single, Single) MeshGenerator.bilerp(Vector3i, Vector3i, Vector3i, Vector3i, Double, Double) MeshGenerator.lerp(Vector3i, Vector3i, Double) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class TrivialBox3Generator : MeshGenerator Fields | Improve this Doc View Source Box Declaration public Box3d Box Field Value Type Description Box3d | Improve this Doc View Source NoSharedVertices Declaration public bool NoSharedVertices Field Value Type Description Boolean Methods | Improve this Doc View Source Generate() Declaration public override MeshGenerator Generate() Returns Type Description MeshGenerator Overrides MeshGenerator.Generate()"
  },
  "api/g3.TrivialDiscGenerator.html": {
    "href": "api/g3.TrivialDiscGenerator.html",
    "title": "Class TrivialDiscGenerator | ViRGIS VR GIS",
    "keywords": "Class TrivialDiscGenerator Inheritance Object MeshGenerator TrivialDiscGenerator Inherited Members MeshGenerator.vertices MeshGenerator.uv MeshGenerator.normals MeshGenerator.triangles MeshGenerator.groups MeshGenerator.WantUVs MeshGenerator.WantNormals MeshGenerator.WantGroups MeshGenerator.Clockwise MeshGenerator.MakeMesh(SimpleMesh) MeshGenerator.MakeSimpleMesh() MeshGenerator.MakeMesh(DMesh3) MeshGenerator.MakeDMesh() MeshGenerator.MakeMesh(NTMesh3) MeshGenerator.MakeNTMesh() MeshGenerator.duplicate_vertex_span(Int32, Int32) MeshGenerator.append_disc(Int32, Int32, Int32, Boolean, Boolean, Int32, Int32) MeshGenerator.append_rectangle(Int32, Int32, Int32, Int32, Boolean, Int32, Int32) MeshGenerator.append_2d_disc_segment(Int32, Int32, Int32, Int32, Boolean, Int32, Int32, Int32, Double) MeshGenerator.estimate_normal(Int32, Int32, Int32) MeshGenerator.bilerp(Vector3d, Vector3d, Vector3d, Vector3d, Double, Double) MeshGenerator.bilerp(Vector2d, Vector2d, Vector2d, Vector2d, Double, Double) MeshGenerator.bilerp(Vector2f, Vector2f, Vector2f, Vector2f, Single, Single) MeshGenerator.bilerp(Vector3i, Vector3i, Vector3i, Vector3i, Double, Double) MeshGenerator.lerp(Vector3i, Vector3i, Double) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class TrivialDiscGenerator : MeshGenerator Fields | Improve this Doc View Source EndAngleDeg Declaration public float EndAngleDeg Field Value Type Description Single | Improve this Doc View Source Radius Declaration public float Radius Field Value Type Description Single | Improve this Doc View Source Slices Declaration public int Slices Field Value Type Description Int32 | Improve this Doc View Source StartAngleDeg Declaration public float StartAngleDeg Field Value Type Description Single Methods | Improve this Doc View Source Generate() Declaration public override MeshGenerator Generate() Returns Type Description MeshGenerator Overrides MeshGenerator.Generate()"
  },
  "api/g3.TrivialRectGenerator.html": {
    "href": "api/g3.TrivialRectGenerator.html",
    "title": "Class TrivialRectGenerator | ViRGIS VR GIS",
    "keywords": "Class TrivialRectGenerator Inheritance Object MeshGenerator TrivialRectGenerator GriddedRectGenerator Inherited Members MeshGenerator.vertices MeshGenerator.uv MeshGenerator.normals MeshGenerator.triangles MeshGenerator.groups MeshGenerator.WantUVs MeshGenerator.WantNormals MeshGenerator.WantGroups MeshGenerator.Clockwise MeshGenerator.MakeMesh(SimpleMesh) MeshGenerator.MakeSimpleMesh() MeshGenerator.MakeMesh(DMesh3) MeshGenerator.MakeDMesh() MeshGenerator.MakeMesh(NTMesh3) MeshGenerator.MakeNTMesh() MeshGenerator.duplicate_vertex_span(Int32, Int32) MeshGenerator.append_disc(Int32, Int32, Int32, Boolean, Boolean, Int32, Int32) MeshGenerator.append_rectangle(Int32, Int32, Int32, Int32, Boolean, Int32, Int32) MeshGenerator.append_2d_disc_segment(Int32, Int32, Int32, Int32, Boolean, Int32, Int32, Int32, Double) MeshGenerator.estimate_normal(Int32, Int32, Int32) MeshGenerator.bilerp(Vector3d, Vector3d, Vector3d, Vector3d, Double, Double) MeshGenerator.bilerp(Vector2d, Vector2d, Vector2d, Vector2d, Double, Double) MeshGenerator.bilerp(Vector2f, Vector2f, Vector2f, Vector2f, Single, Single) MeshGenerator.bilerp(Vector3i, Vector3i, Vector3i, Vector3i, Double, Double) MeshGenerator.lerp(Vector3i, Vector3i, Double) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class TrivialRectGenerator : MeshGenerator Fields | Improve this Doc View Source Height Declaration public float Height Field Value Type Description Single | Improve this Doc View Source IndicesMap How to map 2D indices to 3D. Default is (x,0,z). Set this value to (1,2) if you want (x,y,0). Set values to negative to mirror on that axis. Declaration public Index2i IndicesMap Field Value Type Description Index2i | Improve this Doc View Source Normal Declaration public Vector3f Normal Field Value Type Description Vector3f | Improve this Doc View Source UVMode Declaration public TrivialRectGenerator.UVModes UVMode Field Value Type Description TrivialRectGenerator.UVModes | Improve this Doc View Source Width Declaration public float Width Field Value Type Description Single Methods | Improve this Doc View Source Generate() Declaration public override MeshGenerator Generate() Returns Type Description MeshGenerator Overrides MeshGenerator.Generate() | Improve this Doc View Source make_vertex(Single, Single) Declaration protected virtual Vector3d make_vertex(float x, float y) Parameters Type Name Description Single x Single y Returns Type Description Vector3d"
  },
  "api/g3.TrivialRectGenerator.UVModes.html": {
    "href": "api/g3.TrivialRectGenerator.UVModes.html",
    "title": "Enum TrivialRectGenerator.UVModes | ViRGIS VR GIS",
    "keywords": "Enum TrivialRectGenerator.UVModes Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum UVModes Fields Name Description BottomCornerUVRectangle CenteredUVRectangle FullUVSquare"
  },
  "api/g3.TubeGenerator.html": {
    "href": "api/g3.TubeGenerator.html",
    "title": "Class TubeGenerator | ViRGIS VR GIS",
    "keywords": "Class TubeGenerator Sweep a 2D Profile Polygon along a 3D Path. Supports closed and open paths, and capping open paths. However caps are triangulated using a fan around a center vertex (which you can set using CapCenter). If Polygon is non-convex, this will have foldovers. In that case, you have to triangulate and append it yourself. If your profile curve does not contain the polygon bbox center, set OverrideCapCenter=true and set CapCenter to a suitable center point. The output normals are currently set to those for a circular profile. Call MeshNormals.QuickCompute() on the output DMesh to estimate proper vertex normals Inheritance Object MeshGenerator TubeGenerator Inherited Members MeshGenerator.vertices MeshGenerator.uv MeshGenerator.normals MeshGenerator.triangles MeshGenerator.groups MeshGenerator.WantUVs MeshGenerator.WantNormals MeshGenerator.WantGroups MeshGenerator.Clockwise MeshGenerator.MakeMesh(SimpleMesh) MeshGenerator.MakeSimpleMesh() MeshGenerator.MakeMesh(DMesh3) MeshGenerator.MakeDMesh() MeshGenerator.MakeMesh(NTMesh3) MeshGenerator.MakeNTMesh() MeshGenerator.duplicate_vertex_span(Int32, Int32) MeshGenerator.append_disc(Int32, Int32, Int32, Boolean, Boolean, Int32, Int32) MeshGenerator.append_rectangle(Int32, Int32, Int32, Int32, Boolean, Int32, Int32) MeshGenerator.append_2d_disc_segment(Int32, Int32, Int32, Int32, Boolean, Int32, Int32, Int32, Double) MeshGenerator.estimate_normal(Int32, Int32, Int32) MeshGenerator.bilerp(Vector3d, Vector3d, Vector3d, Vector3d, Double, Double) MeshGenerator.bilerp(Vector2d, Vector2d, Vector2d, Vector2d, Double, Double) MeshGenerator.bilerp(Vector2f, Vector2f, Vector2f, Vector2f, Single, Single) MeshGenerator.bilerp(Vector3i, Vector3i, Vector3i, Vector3i, Double, Double) MeshGenerator.lerp(Vector3i, Vector3i, Double) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class TubeGenerator : MeshGenerator Constructors | Improve this Doc View Source TubeGenerator() Declaration public TubeGenerator() | Improve this Doc View Source TubeGenerator(DCurve3, Polygon2d) Declaration public TubeGenerator(DCurve3 tubePath, Polygon2d tubeShape) Parameters Type Name Description DCurve3 tubePath Polygon2d tubeShape | Improve this Doc View Source TubeGenerator(Polygon2d, Frame3f, Polygon2d, Int32) Declaration public TubeGenerator(Polygon2d tubePath, Frame3f pathPlane, Polygon2d tubeShape, int nPlaneNormal = 2) Parameters Type Name Description Polygon2d tubePath Frame3f pathPlane Polygon2d tubeShape Int32 nPlaneNormal | Improve this Doc View Source TubeGenerator(PolyLine2d, Frame3f, Polygon2d, Int32) Declaration public TubeGenerator(PolyLine2d tubePath, Frame3f pathPlane, Polygon2d tubeShape, int nPlaneNormal = 2) Parameters Type Name Description PolyLine2d tubePath Frame3f pathPlane Polygon2d tubeShape Int32 nPlaneNormal Fields | Improve this Doc View Source CapCenter Declaration public Vector2d CapCenter Field Value Type Description Vector2d | Improve this Doc View Source Capped Declaration public bool Capped Field Value Type Description Boolean | Improve this Doc View Source ClosedLoop Declaration public bool ClosedLoop Field Value Type Description Boolean | Improve this Doc View Source endCapCenterIndex Declaration public int endCapCenterIndex Field Value Type Description Int32 | Improve this Doc View Source Frame Declaration public Frame3f Frame Field Value Type Description Frame3f | Improve this Doc View Source NoSharedVertices Declaration public bool NoSharedVertices Field Value Type Description Boolean | Improve this Doc View Source OverrideCapCenter Declaration public bool OverrideCapCenter Field Value Type Description Boolean | Improve this Doc View Source Polygon Declaration public Polygon2d Polygon Field Value Type Description Polygon2d | Improve this Doc View Source startCapCenterIndex Declaration public int startCapCenterIndex Field Value Type Description Int32 | Improve this Doc View Source Vertices Declaration public List<Vector3d> Vertices Field Value Type Description List < Vector3d > Methods | Improve this Doc View Source Generate() Declaration public override MeshGenerator Generate() Returns Type Description MeshGenerator Overrides MeshGenerator.Generate()"
  },
  "api/g3.Units.Angular.html": {
    "href": "api/g3.Units.Angular.html",
    "title": "Enum Units.Angular | ViRGIS VR GIS",
    "keywords": "Enum Units.Angular Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum Angular Fields Name Description Degrees Radians"
  },
  "api/g3.Units.html": {
    "href": "api/g3.Units.html",
    "title": "Class Units | ViRGIS VR GIS",
    "keywords": "Class Units Inheritance Object Units Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class Units Methods | Improve this Doc View Source Convert(Units.Linear, Units.Linear) Declaration public static double Convert(Units.Linear from, Units.Linear to) Parameters Type Name Description Units.Linear from Units.Linear to Returns Type Description Double | Improve this Doc View Source GetMetricPower(Units.Linear) Declaration public static double GetMetricPower(Units.Linear t) Parameters Type Name Description Units.Linear t Returns Type Description Double | Improve this Doc View Source GetShortString(Units.Linear) Declaration public static string GetShortString(Units.Linear unit) Parameters Type Name Description Units.Linear unit Returns Type Description String | Improve this Doc View Source IsMetric(Units.Linear) Declaration public static bool IsMetric(Units.Linear t) Parameters Type Name Description Units.Linear t Returns Type Description Boolean | Improve this Doc View Source MetersTo(Units.Linear) Declaration public static double MetersTo(Units.Linear t) Parameters Type Name Description Units.Linear t Returns Type Description Double | Improve this Doc View Source ParseLinear(String) Declaration public static Units.Linear ParseLinear(string units) Parameters Type Name Description String units Returns Type Description Units.Linear | Improve this Doc View Source ToMeters(Units.Linear) Declaration public static double ToMeters(Units.Linear t) Parameters Type Name Description Units.Linear t Returns Type Description Double"
  },
  "api/g3.Units.Linear.html": {
    "href": "api/g3.Units.Linear.html",
    "title": "Enum Units.Linear | ViRGIS VR GIS",
    "keywords": "Enum Units.Linear Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum Linear Fields Name Description Centimeters Feet Inches Kilometers Meters Microns Miles Millimeters Nanometers UnknownUnits Yards"
  },
  "api/g3.Util.html": {
    "href": "api/g3.Util.html",
    "title": "Class Util | ViRGIS VR GIS",
    "keywords": "Class Util Inheritance Object Util Namespace : g3 Assembly : geometry3Sharp.dll Syntax public static class Util Fields | Improve this Doc View Source DebugBreakOnDevAssert Declaration public static bool DebugBreakOnDevAssert Field Value Type Description Boolean Methods | Improve this Doc View Source AppendArrays<T>(Object[]) Declaration public static T[] AppendArrays<T>(params object[] args) Parameters Type Name Description Object [] args Returns Type Description T[] Type Parameters Name Description T | Improve this Doc View Source BufferCopy(Int32[], Int32[]) Declaration public static int[] BufferCopy(int[] from, int[] to) Parameters Type Name Description Int32 [] from Int32 [] to Returns Type Description Int32 [] | Improve this Doc View Source BufferCopy(Single[], Single[]) Declaration public static float[] BufferCopy(float[] from, float[] to) Parameters Type Name Description Single [] from Single [] to Returns Type Description Single [] | Improve this Doc View Source ByteArrayToStructure(Byte[], ref Object) Declaration public static void ByteArrayToStructure(byte[] bytearray, ref object obj) Parameters Type Name Description Byte [] bytearray Object obj | Improve this Doc View Source gBreakToDebugger() Declaration public static void gBreakToDebugger() | Improve this Doc View Source gDevAssert(Boolean, String) Declaration [Conditional(\"DEBUG\")] public static void gDevAssert(bool bValue, string message = \"gDevAssert\") Parameters Type Name Description Boolean bValue String message | Improve this Doc View Source IsASCIIControlChar(Int32) test if character is ascii control character, which (presumably?) won't occur in unicode files? Declaration public static bool IsASCIIControlChar(int ch) Parameters Type Name Description Int32 ch Returns Type Description Boolean | Improve this Doc View Source IsBinaryFile(String, Int32) check if file contains bytes that correspond to ascii control characters, which would not occur in a plain text file, but are likely in a binary file. (note: this is not conclusive! for example if binary file was all FF's, this would return true) Declaration public static bool IsBinaryFile(string path, int max_search_len = -1) Parameters Type Name Description String path Int32 max_search_len Returns Type Description Boolean | Improve this Doc View Source IsBinaryStream(Stream, Int32) See IsBinaryFile() Declaration public static bool IsBinaryStream(Stream streamIn, int max_search_len = -1) Parameters Type Name Description Stream streamIn Int32 max_search_len Returns Type Description Boolean | Improve this Doc View Source IsBitSet(Byte, Int32) Declaration public static bool IsBitSet(byte b, int pos) Parameters Type Name Description Byte b Int32 pos Returns Type Description Boolean | Improve this Doc View Source IsBitSet(Int32, Int32) Declaration public static bool IsBitSet(int n, int pos) Parameters Type Name Description Int32 n Int32 pos Returns Type Description Boolean | Improve this Doc View Source IsRunningOnMono() Declaration public static bool IsRunningOnMono() Returns Type Description Boolean | Improve this Doc View Source IsTextString(Byte[]) Declaration public static bool IsTextString(byte[] array) Parameters Type Name Description Byte [] array Returns Type Description Boolean | Improve this Doc View Source MakeFloatFormatString(Int32, Int32) Declaration public static string MakeFloatFormatString(int i, int nPrecision) Parameters Type Name Description Int32 i Int32 nPrecision Returns Type Description String | Improve this Doc View Source MakeVec3FormatString(Int32, Int32, Int32, Int32) Declaration public static string MakeVec3FormatString(int i0, int i1, int i2, int nPrecision) Parameters Type Name Description Int32 i0 Int32 i1 Int32 i2 Int32 nPrecision Returns Type Description String | Improve this Doc View Source ParseDouble(String, Double) Declaration public static double ParseDouble(string s, double fDefault) Parameters Type Name Description String s Double fDefault Returns Type Description Double | Improve this Doc View Source ParseFloat(String, Single) Declaration public static float ParseFloat(string s, float fDefault) Parameters Type Name Description String s Single fDefault Returns Type Description Single | Improve this Doc View Source ParseInt(String, Int32) Declaration public static float ParseInt(string s, int nDefault) Parameters Type Name Description String s Int32 nDefault Returns Type Description Single | Improve this Doc View Source StructureToByteArray(Object) Declaration public static byte[] StructureToByteArray(object obj) Parameters Type Name Description Object obj Returns Type Description Byte [] | Improve this Doc View Source ToHexString(Byte[], Boolean) Declaration public static string ToHexString(byte[] bytes, bool upperCase = false) Parameters Type Name Description Byte [] bytes Boolean upperCase Returns Type Description String | Improve this Doc View Source ToSecMilli(TimeSpan) Declaration public static string ToSecMilli(TimeSpan t) Parameters Type Name Description TimeSpan t Returns Type Description String | Improve this Doc View Source WriteDebugMesh(IMesh, String) Declaration public static void WriteDebugMesh(IMesh mesh, string sPath) Parameters Type Name Description IMesh mesh String sPath | Improve this Doc View Source WriteDebugMeshAndMarkers(IMesh, List<Vector3d>, String) Declaration public static void WriteDebugMeshAndMarkers(IMesh mesh, List<Vector3d> Markers, string sPath) Parameters Type Name Description IMesh mesh List < Vector3d > Markers String sPath"
  },
  "api/g3.ValidationStatus.html": {
    "href": "api/g3.ValidationStatus.html",
    "title": "Enum ValidationStatus | ViRGIS VR GIS",
    "keywords": "Enum ValidationStatus Namespace : g3 Assembly : geometry3Sharp.dll Syntax public enum ValidationStatus Fields Name Description DuplicateTriangles IncorrectLoopOrientation NearDegenerateMeshEdges NearDenegerateInputGeometry NotATriangle NotAVertex NotBoundaryEdge NotBoundaryVertex Ok VerticesNotConnectedByEdge"
  },
  "api/g3.Vector2d.html": {
    "href": "api/g3.Vector2d.html",
    "title": "Struct Vector2d | ViRGIS VR GIS",
    "keywords": "Struct Vector2d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Vector2d : IComparable<Vector2d>, IEquatable<Vector2d> Constructors | Improve this Doc View Source Vector2d(Vector2d) Declaration public Vector2d(Vector2d copy) Parameters Type Name Description Vector2d copy | Improve this Doc View Source Vector2d(Vector2f) Declaration public Vector2d(Vector2f copy) Parameters Type Name Description Vector2f copy | Improve this Doc View Source Vector2d(Double) Declaration public Vector2d(double f) Parameters Type Name Description Double f | Improve this Doc View Source Vector2d(Double, Double) Declaration public Vector2d(double x, double y) Parameters Type Name Description Double x Double y | Improve this Doc View Source Vector2d(Double[]) Declaration public Vector2d(double[] v2) Parameters Type Name Description Double [] v2 | Improve this Doc View Source Vector2d(Single) Declaration public Vector2d(float f) Parameters Type Name Description Single f | Improve this Doc View Source Vector2d(Single, Single) Declaration public Vector2d(float x, float y) Parameters Type Name Description Single x Single y | Improve this Doc View Source Vector2d(Single[]) Declaration public Vector2d(float[] v2) Parameters Type Name Description Single [] v2 Fields | Improve this Doc View Source AxisX Declaration public static readonly Vector2d AxisX Field Value Type Description Vector2d | Improve this Doc View Source AxisY Declaration public static readonly Vector2d AxisY Field Value Type Description Vector2d | Improve this Doc View Source MaxValue Declaration public static readonly Vector2d MaxValue Field Value Type Description Vector2d | Improve this Doc View Source MinValue Declaration public static readonly Vector2d MinValue Field Value Type Description Vector2d | Improve this Doc View Source One Declaration public static readonly Vector2d One Field Value Type Description Vector2d | Improve this Doc View Source x Declaration public double x Field Value Type Description Double | Improve this Doc View Source y Declaration public double y Field Value Type Description Double | Improve this Doc View Source Zero Declaration public static readonly Vector2d Zero Field Value Type Description Vector2d Properties | Improve this Doc View Source IsFinite Declaration public bool IsFinite { get; } Property Value Type Description Boolean | Improve this Doc View Source IsNormalized Declaration public bool IsNormalized { get; } Property Value Type Description Boolean | Improve this Doc View Source Item[Int32] Declaration public double this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Double | Improve this Doc View Source Length Declaration public double Length { get; } Property Value Type Description Double | Improve this Doc View Source LengthSquared Declaration public double LengthSquared { get; } Property Value Type Description Double | Improve this Doc View Source Normalized Declaration public Vector2d Normalized { get; } Property Value Type Description Vector2d | Improve this Doc View Source Perp returns right-perp vector, ie rotated 90 degrees to the right Declaration public Vector2d Perp { get; } Property Value Type Description Vector2d | Improve this Doc View Source UnitPerp returns right-perp vector, ie rotated 90 degrees to the right Declaration public Vector2d UnitPerp { get; } Property Value Type Description Vector2d Methods | Improve this Doc View Source Add(Vector2d) Declaration public void Add(Vector2d o) Parameters Type Name Description Vector2d o | Improve this Doc View Source AngleD(Vector2d) Declaration public double AngleD(Vector2d v2) Parameters Type Name Description Vector2d v2 Returns Type Description Double | Improve this Doc View Source AngleD(Vector2d, Vector2d) Declaration public static double AngleD(Vector2d v1, Vector2d v2) Parameters Type Name Description Vector2d v1 Vector2d v2 Returns Type Description Double | Improve this Doc View Source AngleR(Vector2d) Declaration public double AngleR(Vector2d v2) Parameters Type Name Description Vector2d v2 Returns Type Description Double | Improve this Doc View Source AngleR(Vector2d, Vector2d) Declaration public static double AngleR(Vector2d v1, Vector2d v2) Parameters Type Name Description Vector2d v1 Vector2d v2 Returns Type Description Double | Improve this Doc View Source CompareTo(Vector2d) Declaration public int CompareTo(Vector2d other) Parameters Type Name Description Vector2d other Returns Type Description Int32 | Improve this Doc View Source Cross(Vector2d) returns cross-product of this vector with v2 (same as DotPerp) Declaration public double Cross(Vector2d v2) Parameters Type Name Description Vector2d v2 Returns Type Description Double | Improve this Doc View Source Distance(Vector2d) Declaration public double Distance(Vector2d v2) Parameters Type Name Description Vector2d v2 Returns Type Description Double | Improve this Doc View Source DistanceSquared(Vector2d) Declaration public double DistanceSquared(Vector2d v2) Parameters Type Name Description Vector2d v2 Returns Type Description Double | Improve this Doc View Source Dot(Vector2d) Declaration public double Dot(Vector2d v2) Parameters Type Name Description Vector2d v2 Returns Type Description Double | Improve this Doc View Source DotPerp(Vector2d) returns dot-product of this vector with v2.Perp Declaration public double DotPerp(Vector2d v2) Parameters Type Name Description Vector2d v2 Returns Type Description Double | Improve this Doc View Source EpsilonEqual(Vector2d, Double) Declaration public bool EpsilonEqual(Vector2d v2, double epsilon) Parameters Type Name Description Vector2d v2 Double epsilon Returns Type Description Boolean | Improve this Doc View Source Equals(Vector2d) Declaration public bool Equals(Vector2d other) Parameters Type Name Description Vector2d other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source FromAngleDeg(Double) Declaration public static Vector2d FromAngleDeg(double angle) Parameters Type Name Description Double angle Returns Type Description Vector2d | Improve this Doc View Source FromAngleRad(Double) Declaration public static Vector2d FromAngleRad(double angle) Parameters Type Name Description Double angle Returns Type Description Vector2d | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source GetInformation(IList<Vector2d>, Double, out Vector2d.Information) Declaration public static void GetInformation(IList<Vector2d> points, double epsilon, out Vector2d.Information info) Parameters Type Name Description IList < Vector2d > points Double epsilon Vector2d.Information info | Improve this Doc View Source Lerp(Vector2d, Vector2d, Double) Declaration public static Vector2d Lerp(Vector2d a, Vector2d b, double t) Parameters Type Name Description Vector2d a Vector2d b Double t Returns Type Description Vector2d | Improve this Doc View Source Lerp(ref Vector2d, ref Vector2d, Double) Declaration public static Vector2d Lerp(ref Vector2d a, ref Vector2d b, double t) Parameters Type Name Description Vector2d a Vector2d b Double t Returns Type Description Vector2d | Improve this Doc View Source Normalize(Double) Declaration public double Normalize(double epsilon = 2.2204460492503131E-16) Parameters Type Name Description Double epsilon Returns Type Description Double | Improve this Doc View Source Round(Int32) Declaration public void Round(int nDecimals) Parameters Type Name Description Int32 nDecimals | Improve this Doc View Source Set(Vector2d) Declaration public void Set(Vector2d o) Parameters Type Name Description Vector2d o | Improve this Doc View Source Set(Double, Double) Declaration public void Set(double fX, double fY) Parameters Type Name Description Double fX Double fY | Improve this Doc View Source Subtract(Vector2d) Declaration public void Subtract(Vector2d o) Parameters Type Name Description Vector2d o | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators | Improve this Doc View Source Addition(Vector2d, Vector2d) Declaration public static Vector2d operator +(Vector2d a, Vector2d o) Parameters Type Name Description Vector2d a Vector2d o Returns Type Description Vector2d | Improve this Doc View Source Addition(Vector2d, Double) Declaration public static Vector2d operator +(Vector2d a, double f) Parameters Type Name Description Vector2d a Double f Returns Type Description Vector2d | Improve this Doc View Source Division(Vector2d, Vector2d) Declaration public static Vector2d operator /(Vector2d a, Vector2d b) Parameters Type Name Description Vector2d a Vector2d b Returns Type Description Vector2d | Improve this Doc View Source Division(Vector2d, Double) Declaration public static Vector2d operator /(Vector2d v, double f) Parameters Type Name Description Vector2d v Double f Returns Type Description Vector2d | Improve this Doc View Source Division(Double, Vector2d) Declaration public static Vector2d operator /(double f, Vector2d v) Parameters Type Name Description Double f Vector2d v Returns Type Description Vector2d | Improve this Doc View Source Equality(Vector2d, Vector2d) Declaration public static bool operator ==(Vector2d a, Vector2d b) Parameters Type Name Description Vector2d a Vector2d b Returns Type Description Boolean | Improve this Doc View Source Explicit(Vector2d to Vector2f) Declaration public static explicit operator Vector2f(Vector2d v) Parameters Type Name Description Vector2d v Returns Type Description Vector2f | Improve this Doc View Source Implicit(Vector2f to Vector2d) Declaration public static implicit operator Vector2d(Vector2f v) Parameters Type Name Description Vector2f v Returns Type Description Vector2d | Improve this Doc View Source Inequality(Vector2d, Vector2d) Declaration public static bool operator !=(Vector2d a, Vector2d b) Parameters Type Name Description Vector2d a Vector2d b Returns Type Description Boolean | Improve this Doc View Source Multiply(Vector2d, Vector2d) Declaration public static Vector2d operator *(Vector2d a, Vector2d b) Parameters Type Name Description Vector2d a Vector2d b Returns Type Description Vector2d | Improve this Doc View Source Multiply(Vector2d, Double) Declaration public static Vector2d operator *(Vector2d a, double f) Parameters Type Name Description Vector2d a Double f Returns Type Description Vector2d | Improve this Doc View Source Multiply(Double, Vector2d) Declaration public static Vector2d operator *(double f, Vector2d a) Parameters Type Name Description Double f Vector2d a Returns Type Description Vector2d | Improve this Doc View Source Subtraction(Vector2d, Vector2d) Declaration public static Vector2d operator -(Vector2d a, Vector2d o) Parameters Type Name Description Vector2d a Vector2d o Returns Type Description Vector2d | Improve this Doc View Source Subtraction(Vector2d, Double) Declaration public static Vector2d operator -(Vector2d a, double f) Parameters Type Name Description Vector2d a Double f Returns Type Description Vector2d | Improve this Doc View Source UnaryNegation(Vector2d) Declaration public static Vector2d operator -(Vector2d v) Parameters Type Name Description Vector2d v Returns Type Description Vector2d"
  },
  "api/g3.Vector2d.Information.html": {
    "href": "api/g3.Vector2d.Information.html",
    "title": "Struct Vector2d.Information | ViRGIS VR GIS",
    "keywords": "Struct Vector2d.Information Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Information Fields | Improve this Doc View Source mDimension Declaration public int mDimension Field Value Type Description Int32 | Improve this Doc View Source mDirection0 Declaration public Vector2d mDirection0 Field Value Type Description Vector2d | Improve this Doc View Source mDirection1 Declaration public Vector2d mDirection1 Field Value Type Description Vector2d | Improve this Doc View Source mExtreme Declaration public Vector3i mExtreme Field Value Type Description Vector3i | Improve this Doc View Source mExtremeCCW Declaration public bool mExtremeCCW Field Value Type Description Boolean | Improve this Doc View Source mMax Declaration public Vector2d mMax Field Value Type Description Vector2d | Improve this Doc View Source mMaxRange Declaration public double mMaxRange Field Value Type Description Double | Improve this Doc View Source mMin Declaration public Vector2d mMin Field Value Type Description Vector2d | Improve this Doc View Source mOrigin Declaration public Vector2d mOrigin Field Value Type Description Vector2d"
  },
  "api/g3.Vector2dTuple2.html": {
    "href": "api/g3.Vector2dTuple2.html",
    "title": "Struct Vector2dTuple2 | ViRGIS VR GIS",
    "keywords": "Struct Vector2dTuple2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Vector2dTuple2 Constructors | Improve this Doc View Source Vector2dTuple2(Vector2d, Vector2d) Declaration public Vector2dTuple2(Vector2d v0, Vector2d v1) Parameters Type Name Description Vector2d v0 Vector2d v1 Fields | Improve this Doc View Source V0 Declaration public Vector2d V0 Field Value Type Description Vector2d | Improve this Doc View Source V1 Declaration public Vector2d V1 Field Value Type Description Vector2d Properties | Improve this Doc View Source Item[Int32] Declaration public Vector2d this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Vector2d"
  },
  "api/g3.Vector2dTuple3.html": {
    "href": "api/g3.Vector2dTuple3.html",
    "title": "Struct Vector2dTuple3 | ViRGIS VR GIS",
    "keywords": "Struct Vector2dTuple3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Vector2dTuple3 Constructors | Improve this Doc View Source Vector2dTuple3(Vector2d, Vector2d, Vector2d) Declaration public Vector2dTuple3(Vector2d v0, Vector2d v1, Vector2d v2) Parameters Type Name Description Vector2d v0 Vector2d v1 Vector2d v2 Fields | Improve this Doc View Source V0 Declaration public Vector2d V0 Field Value Type Description Vector2d | Improve this Doc View Source V1 Declaration public Vector2d V1 Field Value Type Description Vector2d | Improve this Doc View Source V2 Declaration public Vector2d V2 Field Value Type Description Vector2d Properties | Improve this Doc View Source Item[Int32] Declaration public Vector2d this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Vector2d"
  },
  "api/g3.Vector2dTuple4.html": {
    "href": "api/g3.Vector2dTuple4.html",
    "title": "Struct Vector2dTuple4 | ViRGIS VR GIS",
    "keywords": "Struct Vector2dTuple4 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Vector2dTuple4 Constructors | Improve this Doc View Source Vector2dTuple4(Vector2d, Vector2d, Vector2d, Vector2d) Declaration public Vector2dTuple4(Vector2d v0, Vector2d v1, Vector2d v2, Vector2d v3) Parameters Type Name Description Vector2d v0 Vector2d v1 Vector2d v2 Vector2d v3 Fields | Improve this Doc View Source V0 Declaration public Vector2d V0 Field Value Type Description Vector2d | Improve this Doc View Source V1 Declaration public Vector2d V1 Field Value Type Description Vector2d | Improve this Doc View Source V2 Declaration public Vector2d V2 Field Value Type Description Vector2d | Improve this Doc View Source V3 Declaration public Vector2d V3 Field Value Type Description Vector2d Properties | Improve this Doc View Source Item[Int32] Declaration public Vector2d this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Vector2d"
  },
  "api/g3.Vector2f.html": {
    "href": "api/g3.Vector2f.html",
    "title": "Struct Vector2f | ViRGIS VR GIS",
    "keywords": "Struct Vector2f Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Vector2f : IComparable<Vector2f>, IEquatable<Vector2f> Constructors | Improve this Doc View Source Vector2f(Vector2d) Declaration public Vector2f(Vector2d copy) Parameters Type Name Description Vector2d copy | Improve this Doc View Source Vector2f(Vector2f) Declaration public Vector2f(Vector2f copy) Parameters Type Name Description Vector2f copy | Improve this Doc View Source Vector2f(Double) Declaration public Vector2f(double f) Parameters Type Name Description Double f | Improve this Doc View Source Vector2f(Double, Double) Declaration public Vector2f(double x, double y) Parameters Type Name Description Double x Double y | Improve this Doc View Source Vector2f(Double[]) Declaration public Vector2f(double[] v2) Parameters Type Name Description Double [] v2 | Improve this Doc View Source Vector2f(Single) Declaration public Vector2f(float f) Parameters Type Name Description Single f | Improve this Doc View Source Vector2f(Single, Single) Declaration public Vector2f(float x, float y) Parameters Type Name Description Single x Single y | Improve this Doc View Source Vector2f(Single[]) Declaration public Vector2f(float[] v2) Parameters Type Name Description Single [] v2 Fields | Improve this Doc View Source AxisX Declaration public static readonly Vector2f AxisX Field Value Type Description Vector2f | Improve this Doc View Source AxisY Declaration public static readonly Vector2f AxisY Field Value Type Description Vector2f | Improve this Doc View Source MaxValue Declaration public static readonly Vector2f MaxValue Field Value Type Description Vector2f | Improve this Doc View Source MinValue Declaration public static readonly Vector2f MinValue Field Value Type Description Vector2f | Improve this Doc View Source One Declaration public static readonly Vector2f One Field Value Type Description Vector2f | Improve this Doc View Source x Declaration public float x Field Value Type Description Single | Improve this Doc View Source y Declaration public float y Field Value Type Description Single | Improve this Doc View Source Zero Declaration public static readonly Vector2f Zero Field Value Type Description Vector2f Properties | Improve this Doc View Source IsFinite Declaration public bool IsFinite { get; } Property Value Type Description Boolean | Improve this Doc View Source IsNormalized Declaration public bool IsNormalized { get; } Property Value Type Description Boolean | Improve this Doc View Source Item[Int32] Declaration public float this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Single | Improve this Doc View Source Length Declaration public float Length { get; } Property Value Type Description Single | Improve this Doc View Source LengthSquared Declaration public float LengthSquared { get; } Property Value Type Description Single | Improve this Doc View Source Normalized Declaration public Vector2f Normalized { get; } Property Value Type Description Vector2f | Improve this Doc View Source Perp Declaration public Vector2f Perp { get; } Property Value Type Description Vector2f | Improve this Doc View Source UnitPerp Declaration public Vector2f UnitPerp { get; } Property Value Type Description Vector2f Methods | Improve this Doc View Source Add(Vector2f) Declaration public void Add(Vector2f o) Parameters Type Name Description Vector2f o | Improve this Doc View Source AngleD(Vector2f) Declaration public float AngleD(Vector2f v2) Parameters Type Name Description Vector2f v2 Returns Type Description Single | Improve this Doc View Source AngleD(Vector2f, Vector2f) Declaration public static float AngleD(Vector2f v1, Vector2f v2) Parameters Type Name Description Vector2f v1 Vector2f v2 Returns Type Description Single | Improve this Doc View Source AngleR(Vector2f) Declaration public float AngleR(Vector2f v2) Parameters Type Name Description Vector2f v2 Returns Type Description Single | Improve this Doc View Source AngleR(Vector2f, Vector2f) Declaration public static float AngleR(Vector2f v1, Vector2f v2) Parameters Type Name Description Vector2f v1 Vector2f v2 Returns Type Description Single | Improve this Doc View Source CompareTo(Vector2f) Declaration public int CompareTo(Vector2f other) Parameters Type Name Description Vector2f other Returns Type Description Int32 | Improve this Doc View Source Cross(Vector2f) Declaration public float Cross(Vector2f v2) Parameters Type Name Description Vector2f v2 Returns Type Description Single | Improve this Doc View Source Distance(Vector2f) Declaration public float Distance(Vector2f v2) Parameters Type Name Description Vector2f v2 Returns Type Description Single | Improve this Doc View Source DistanceSquared(Vector2f) Declaration public float DistanceSquared(Vector2f v2) Parameters Type Name Description Vector2f v2 Returns Type Description Single | Improve this Doc View Source Dot(Vector2f) Declaration public float Dot(Vector2f v2) Parameters Type Name Description Vector2f v2 Returns Type Description Single | Improve this Doc View Source DotPerp(Vector2f) Declaration public float DotPerp(Vector2f v2) Parameters Type Name Description Vector2f v2 Returns Type Description Single | Improve this Doc View Source EpsilonEqual(Vector2f, Single) Declaration public bool EpsilonEqual(Vector2f v2, float epsilon) Parameters Type Name Description Vector2f v2 Single epsilon Returns Type Description Boolean | Improve this Doc View Source Equals(Vector2f) Declaration public bool Equals(Vector2f other) Parameters Type Name Description Vector2f other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source Lerp(Vector2f, Vector2f, Single) Declaration public static Vector2f Lerp(Vector2f a, Vector2f b, float t) Parameters Type Name Description Vector2f a Vector2f b Single t Returns Type Description Vector2f | Improve this Doc View Source Lerp(ref Vector2f, ref Vector2f, Single) Declaration public static Vector2f Lerp(ref Vector2f a, ref Vector2f b, float t) Parameters Type Name Description Vector2f a Vector2f b Single t Returns Type Description Vector2f | Improve this Doc View Source Normalize(Single) Declaration public float Normalize(float epsilon = 1.1920929E-07F) Parameters Type Name Description Single epsilon Returns Type Description Single | Improve this Doc View Source Round(Int32) Declaration public void Round(int nDecimals) Parameters Type Name Description Int32 nDecimals | Improve this Doc View Source Set(Vector2f) Declaration public void Set(Vector2f o) Parameters Type Name Description Vector2f o | Improve this Doc View Source Set(Single, Single) Declaration public void Set(float fX, float fY) Parameters Type Name Description Single fX Single fY | Improve this Doc View Source Subtract(Vector2f) Declaration public void Subtract(Vector2f o) Parameters Type Name Description Vector2f o | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators | Improve this Doc View Source Addition(Vector2f, Vector2f) Declaration public static Vector2f operator +(Vector2f a, Vector2f o) Parameters Type Name Description Vector2f a Vector2f o Returns Type Description Vector2f | Improve this Doc View Source Addition(Vector2f, Single) Declaration public static Vector2f operator +(Vector2f a, float f) Parameters Type Name Description Vector2f a Single f Returns Type Description Vector2f | Improve this Doc View Source Division(Vector2f, Vector2f) Declaration public static Vector2f operator /(Vector2f a, Vector2f b) Parameters Type Name Description Vector2f a Vector2f b Returns Type Description Vector2f | Improve this Doc View Source Division(Vector2f, Single) Declaration public static Vector2f operator /(Vector2f v, float f) Parameters Type Name Description Vector2f v Single f Returns Type Description Vector2f | Improve this Doc View Source Division(Single, Vector2f) Declaration public static Vector2f operator /(float f, Vector2f v) Parameters Type Name Description Single f Vector2f v Returns Type Description Vector2f | Improve this Doc View Source Equality(Vector2f, Vector2f) Declaration public static bool operator ==(Vector2f a, Vector2f b) Parameters Type Name Description Vector2f a Vector2f b Returns Type Description Boolean | Improve this Doc View Source Inequality(Vector2f, Vector2f) Declaration public static bool operator !=(Vector2f a, Vector2f b) Parameters Type Name Description Vector2f a Vector2f b Returns Type Description Boolean | Improve this Doc View Source Multiply(Vector2f, Vector2f) Declaration public static Vector2f operator *(Vector2f a, Vector2f b) Parameters Type Name Description Vector2f a Vector2f b Returns Type Description Vector2f | Improve this Doc View Source Multiply(Vector2f, Single) Declaration public static Vector2f operator *(Vector2f a, float f) Parameters Type Name Description Vector2f a Single f Returns Type Description Vector2f | Improve this Doc View Source Multiply(Single, Vector2f) Declaration public static Vector2f operator *(float f, Vector2f a) Parameters Type Name Description Single f Vector2f a Returns Type Description Vector2f | Improve this Doc View Source Subtraction(Vector2f, Vector2f) Declaration public static Vector2f operator -(Vector2f a, Vector2f o) Parameters Type Name Description Vector2f a Vector2f o Returns Type Description Vector2f | Improve this Doc View Source Subtraction(Vector2f, Single) Declaration public static Vector2f operator -(Vector2f a, float f) Parameters Type Name Description Vector2f a Single f Returns Type Description Vector2f | Improve this Doc View Source UnaryNegation(Vector2f) Declaration public static Vector2f operator -(Vector2f v) Parameters Type Name Description Vector2f v Returns Type Description Vector2f"
  },
  "api/g3.Vector2i.html": {
    "href": "api/g3.Vector2i.html",
    "title": "Struct Vector2i | ViRGIS VR GIS",
    "keywords": "Struct Vector2i Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Vector2i : IComparable<Vector2i>, IEquatable<Vector2i> Constructors | Improve this Doc View Source Vector2i(Int32) Declaration public Vector2i(int f) Parameters Type Name Description Int32 f | Improve this Doc View Source Vector2i(Int32, Int32) Declaration public Vector2i(int x, int y) Parameters Type Name Description Int32 x Int32 y | Improve this Doc View Source Vector2i(Int32[]) Declaration public Vector2i(int[] v2) Parameters Type Name Description Int32 [] v2 Fields | Improve this Doc View Source AxisX Declaration public static readonly Vector2i AxisX Field Value Type Description Vector2i | Improve this Doc View Source AxisY Declaration public static readonly Vector2i AxisY Field Value Type Description Vector2i | Improve this Doc View Source One Declaration public static readonly Vector2i One Field Value Type Description Vector2i | Improve this Doc View Source x Declaration public int x Field Value Type Description Int32 | Improve this Doc View Source y Declaration public int y Field Value Type Description Int32 | Improve this Doc View Source Zero Declaration public static readonly Vector2i Zero Field Value Type Description Vector2i Properties | Improve this Doc View Source array Declaration public int[] array { get; } Property Value Type Description Int32 [] | Improve this Doc View Source Item[Int32] Declaration public int this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Int32 | Improve this Doc View Source LengthSquared Declaration public int LengthSquared { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Add(Int32) Declaration public void Add(int s) Parameters Type Name Description Int32 s | Improve this Doc View Source CompareTo(Vector2i) Declaration public int CompareTo(Vector2i other) Parameters Type Name Description Vector2i other Returns Type Description Int32 | Improve this Doc View Source Equals(Vector2i) Declaration public bool Equals(Vector2i other) Parameters Type Name Description Vector2i other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators | Improve this Doc View Source Addition(Vector2i, Vector2i) Declaration public static Vector2i operator +(Vector2i v0, Vector2i v1) Parameters Type Name Description Vector2i v0 Vector2i v1 Returns Type Description Vector2i | Improve this Doc View Source Addition(Vector2i, Int32) Declaration public static Vector2i operator +(Vector2i v0, int f) Parameters Type Name Description Vector2i v0 Int32 f Returns Type Description Vector2i | Improve this Doc View Source Division(Vector2i, Vector2i) Declaration public static Vector2i operator /(Vector2i a, Vector2i b) Parameters Type Name Description Vector2i a Vector2i b Returns Type Description Vector2i | Improve this Doc View Source Division(Vector2i, Int32) Declaration public static Vector2i operator /(Vector2i v, int f) Parameters Type Name Description Vector2i v Int32 f Returns Type Description Vector2i | Improve this Doc View Source Division(Int32, Vector2i) Declaration public static Vector2i operator /(int f, Vector2i v) Parameters Type Name Description Int32 f Vector2i v Returns Type Description Vector2i | Improve this Doc View Source Equality(Vector2i, Vector2i) Declaration public static bool operator ==(Vector2i a, Vector2i b) Parameters Type Name Description Vector2i a Vector2i b Returns Type Description Boolean | Improve this Doc View Source Inequality(Vector2i, Vector2i) Declaration public static bool operator !=(Vector2i a, Vector2i b) Parameters Type Name Description Vector2i a Vector2i b Returns Type Description Boolean | Improve this Doc View Source Multiply(Vector2i, Vector2i) Declaration public static Vector2i operator *(Vector2i a, Vector2i b) Parameters Type Name Description Vector2i a Vector2i b Returns Type Description Vector2i | Improve this Doc View Source Multiply(Vector2i, Int32) Declaration public static Vector2i operator *(Vector2i v, int f) Parameters Type Name Description Vector2i v Int32 f Returns Type Description Vector2i | Improve this Doc View Source Multiply(Int32, Vector2i) Declaration public static Vector2i operator *(int f, Vector2i v) Parameters Type Name Description Int32 f Vector2i v Returns Type Description Vector2i | Improve this Doc View Source Subtraction(Vector2i, Vector2i) Declaration public static Vector2i operator -(Vector2i v0, Vector2i v1) Parameters Type Name Description Vector2i v0 Vector2i v1 Returns Type Description Vector2i | Improve this Doc View Source Subtraction(Vector2i, Int32) Declaration public static Vector2i operator -(Vector2i v0, int f) Parameters Type Name Description Vector2i v0 Int32 f Returns Type Description Vector2i | Improve this Doc View Source UnaryNegation(Vector2i) Declaration public static Vector2i operator -(Vector2i v) Parameters Type Name Description Vector2i v Returns Type Description Vector2i"
  },
  "api/g3.Vector2l.html": {
    "href": "api/g3.Vector2l.html",
    "title": "Struct Vector2l | ViRGIS VR GIS",
    "keywords": "Struct Vector2l Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Vector2l : IComparable<Vector2l>, IEquatable<Vector2l> Constructors | Improve this Doc View Source Vector2l(Int64) Declaration public Vector2l(long f) Parameters Type Name Description Int64 f | Improve this Doc View Source Vector2l(Int64, Int64) Declaration public Vector2l(long x, long y) Parameters Type Name Description Int64 x Int64 y | Improve this Doc View Source Vector2l(Int64[]) Declaration public Vector2l(long[] v2) Parameters Type Name Description Int64 [] v2 Fields | Improve this Doc View Source AxisX Declaration public static readonly Vector2l AxisX Field Value Type Description Vector2l | Improve this Doc View Source AxisY Declaration public static readonly Vector2l AxisY Field Value Type Description Vector2l | Improve this Doc View Source One Declaration public static readonly Vector2l One Field Value Type Description Vector2l | Improve this Doc View Source x Declaration public long x Field Value Type Description Int64 | Improve this Doc View Source y Declaration public long y Field Value Type Description Int64 | Improve this Doc View Source Zero Declaration public static readonly Vector2l Zero Field Value Type Description Vector2l Properties | Improve this Doc View Source array Declaration public long[] array { get; } Property Value Type Description Int64 [] | Improve this Doc View Source Item[Int64] Declaration public long this[long key] { get; set; } Parameters Type Name Description Int64 key Property Value Type Description Int64 Methods | Improve this Doc View Source Add(Int64) Declaration public void Add(long s) Parameters Type Name Description Int64 s | Improve this Doc View Source CompareTo(Vector2l) Declaration public int CompareTo(Vector2l other) Parameters Type Name Description Vector2l other Returns Type Description Int32 | Improve this Doc View Source Equals(Vector2l) Declaration public bool Equals(Vector2l other) Parameters Type Name Description Vector2l other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators | Improve this Doc View Source Addition(Vector2l, Vector2l) Declaration public static Vector2l operator +(Vector2l v0, Vector2l v1) Parameters Type Name Description Vector2l v0 Vector2l v1 Returns Type Description Vector2l | Improve this Doc View Source Addition(Vector2l, Int64) Declaration public static Vector2l operator +(Vector2l v0, long f) Parameters Type Name Description Vector2l v0 Int64 f Returns Type Description Vector2l | Improve this Doc View Source Division(Vector2l, Vector2l) Declaration public static Vector2l operator /(Vector2l a, Vector2l b) Parameters Type Name Description Vector2l a Vector2l b Returns Type Description Vector2l | Improve this Doc View Source Division(Vector2l, Int64) Declaration public static Vector2l operator /(Vector2l v, long f) Parameters Type Name Description Vector2l v Int64 f Returns Type Description Vector2l | Improve this Doc View Source Division(Int64, Vector2l) Declaration public static Vector2l operator /(long f, Vector2l v) Parameters Type Name Description Int64 f Vector2l v Returns Type Description Vector2l | Improve this Doc View Source Equality(Vector2l, Vector2l) Declaration public static bool operator ==(Vector2l a, Vector2l b) Parameters Type Name Description Vector2l a Vector2l b Returns Type Description Boolean | Improve this Doc View Source Inequality(Vector2l, Vector2l) Declaration public static bool operator !=(Vector2l a, Vector2l b) Parameters Type Name Description Vector2l a Vector2l b Returns Type Description Boolean | Improve this Doc View Source Multiply(Vector2l, Vector2l) Declaration public static Vector2l operator *(Vector2l a, Vector2l b) Parameters Type Name Description Vector2l a Vector2l b Returns Type Description Vector2l | Improve this Doc View Source Multiply(Vector2l, Int64) Declaration public static Vector2l operator *(Vector2l v, long f) Parameters Type Name Description Vector2l v Int64 f Returns Type Description Vector2l | Improve this Doc View Source Multiply(Int64, Vector2l) Declaration public static Vector2l operator *(long f, Vector2l v) Parameters Type Name Description Int64 f Vector2l v Returns Type Description Vector2l | Improve this Doc View Source Subtraction(Vector2l, Vector2l) Declaration public static Vector2l operator -(Vector2l v0, Vector2l v1) Parameters Type Name Description Vector2l v0 Vector2l v1 Returns Type Description Vector2l | Improve this Doc View Source Subtraction(Vector2l, Int64) Declaration public static Vector2l operator -(Vector2l v0, long f) Parameters Type Name Description Vector2l v0 Int64 f Returns Type Description Vector2l | Improve this Doc View Source UnaryNegation(Vector2l) Declaration public static Vector2l operator -(Vector2l v) Parameters Type Name Description Vector2l v Returns Type Description Vector2l"
  },
  "api/g3.Vector3d.html": {
    "href": "api/g3.Vector3d.html",
    "title": "Struct Vector3d | ViRGIS VR GIS",
    "keywords": "Struct Vector3d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Vector3d : IComparable<Vector3d>, IEquatable<Vector3d> Constructors | Improve this Doc View Source Vector3d(Vector3d) Declaration public Vector3d(Vector3d copy) Parameters Type Name Description Vector3d copy | Improve this Doc View Source Vector3d(Vector3f) Declaration public Vector3d(Vector3f copy) Parameters Type Name Description Vector3f copy | Improve this Doc View Source Vector3d(Double) Declaration public Vector3d(double f) Parameters Type Name Description Double f | Improve this Doc View Source Vector3d(Double, Double, Double) Declaration public Vector3d(double x, double y, double z) Parameters Type Name Description Double x Double y Double z | Improve this Doc View Source Vector3d(Double[]) Declaration public Vector3d(double[] v2) Parameters Type Name Description Double [] v2 Fields | Improve this Doc View Source AxisX Declaration public static readonly Vector3d AxisX Field Value Type Description Vector3d | Improve this Doc View Source AxisY Declaration public static readonly Vector3d AxisY Field Value Type Description Vector3d | Improve this Doc View Source AxisZ Declaration public static readonly Vector3d AxisZ Field Value Type Description Vector3d | Improve this Doc View Source MaxValue Declaration public static readonly Vector3d MaxValue Field Value Type Description Vector3d | Improve this Doc View Source MinValue Declaration public static readonly Vector3d MinValue Field Value Type Description Vector3d | Improve this Doc View Source One Declaration public static readonly Vector3d One Field Value Type Description Vector3d | Improve this Doc View Source x Declaration public double x Field Value Type Description Double | Improve this Doc View Source y Declaration public double y Field Value Type Description Double | Improve this Doc View Source z Declaration public double z Field Value Type Description Double | Improve this Doc View Source Zero Declaration public static readonly Vector3d Zero Field Value Type Description Vector3d Properties | Improve this Doc View Source Abs Declaration public Vector3d Abs { get; } Property Value Type Description Vector3d | Improve this Doc View Source IsFinite Declaration public bool IsFinite { get; } Property Value Type Description Boolean | Improve this Doc View Source IsNormalized Declaration public bool IsNormalized { get; } Property Value Type Description Boolean | Improve this Doc View Source Item[Int32] Declaration public double this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Double | Improve this Doc View Source Length Declaration public double Length { get; } Property Value Type Description Double | Improve this Doc View Source LengthL1 Declaration public double LengthL1 { get; } Property Value Type Description Double | Improve this Doc View Source LengthSquared Declaration public double LengthSquared { get; } Property Value Type Description Double | Improve this Doc View Source Max Declaration public double Max { get; } Property Value Type Description Double | Improve this Doc View Source MaxAbs Declaration public double MaxAbs { get; } Property Value Type Description Double | Improve this Doc View Source Min Declaration public double Min { get; } Property Value Type Description Double | Improve this Doc View Source MinAbs Declaration public double MinAbs { get; } Property Value Type Description Double | Improve this Doc View Source Normalized Declaration public Vector3d Normalized { get; } Property Value Type Description Vector3d | Improve this Doc View Source xy Declaration public Vector2d xy { get; set; } Property Value Type Description Vector2d | Improve this Doc View Source xz Declaration public Vector2d xz { get; set; } Property Value Type Description Vector2d | Improve this Doc View Source yz Declaration public Vector2d yz { get; set; } Property Value Type Description Vector2d Methods | Improve this Doc View Source Add(Vector3d) Declaration public void Add(Vector3d o) Parameters Type Name Description Vector3d o | Improve this Doc View Source AngleD(Vector3d) Declaration public double AngleD(Vector3d v2) Parameters Type Name Description Vector3d v2 Returns Type Description Double | Improve this Doc View Source AngleD(Vector3d, Vector3d) Declaration public static double AngleD(Vector3d v1, Vector3d v2) Parameters Type Name Description Vector3d v1 Vector3d v2 Returns Type Description Double | Improve this Doc View Source AngleR(Vector3d) Declaration public double AngleR(Vector3d v2) Parameters Type Name Description Vector3d v2 Returns Type Description Double | Improve this Doc View Source AngleR(Vector3d, Vector3d) Declaration public static double AngleR(Vector3d v1, Vector3d v2) Parameters Type Name Description Vector3d v1 Vector3d v2 Returns Type Description Double | Improve this Doc View Source CompareTo(Vector3d) Declaration public int CompareTo(Vector3d other) Parameters Type Name Description Vector3d other Returns Type Description Int32 | Improve this Doc View Source ComputeOrthogonalComplement(Int32, Vector3d, ref Vector3d, ref Vector3d) this function is ported from GTEngine. Compute a right-handed orthonormal basis for the orthogonal complement of the input vectors. The function returns the smallest length of the unnormalized vectors computed during the process. If this value is nearly zero, it is possible that the inputs are linearly dependent (within numerical round-off errors). On input, numInputs must be 1 or 2 and v0 through v(numInputs-1) must be initialized. On output, the vectors v0 through v2 form an orthonormal set. Declaration public static double ComputeOrthogonalComplement(int numInputs, Vector3d v0, ref Vector3d v1, ref Vector3d v2) Parameters Type Name Description Int32 numInputs Vector3d v0 Vector3d v1 Vector3d v2 Returns Type Description Double | Improve this Doc View Source Cross(Vector3d) Declaration public Vector3d Cross(Vector3d v2) Parameters Type Name Description Vector3d v2 Returns Type Description Vector3d | Improve this Doc View Source Cross(Vector3d, Vector3d) Declaration public static Vector3d Cross(Vector3d v1, Vector3d v2) Parameters Type Name Description Vector3d v1 Vector3d v2 Returns Type Description Vector3d | Improve this Doc View Source Cross(ref Vector3d) Declaration public Vector3d Cross(ref Vector3d v2) Parameters Type Name Description Vector3d v2 Returns Type Description Vector3d | Improve this Doc View Source Distance(Vector3d) Declaration public double Distance(Vector3d v2) Parameters Type Name Description Vector3d v2 Returns Type Description Double | Improve this Doc View Source Distance(ref Vector3d) Declaration public double Distance(ref Vector3d v2) Parameters Type Name Description Vector3d v2 Returns Type Description Double | Improve this Doc View Source DistanceSquared(Vector3d) Declaration public double DistanceSquared(Vector3d v2) Parameters Type Name Description Vector3d v2 Returns Type Description Double | Improve this Doc View Source DistanceSquared(ref Vector3d) Declaration public double DistanceSquared(ref Vector3d v2) Parameters Type Name Description Vector3d v2 Returns Type Description Double | Improve this Doc View Source Dot(Vector3d) Declaration public double Dot(Vector3d v2) Parameters Type Name Description Vector3d v2 Returns Type Description Double | Improve this Doc View Source Dot(Vector3d, Vector3d) Declaration public static double Dot(Vector3d v1, Vector3d v2) Parameters Type Name Description Vector3d v1 Vector3d v2 Returns Type Description Double | Improve this Doc View Source Dot(ref Vector3d) Declaration public double Dot(ref Vector3d v2) Parameters Type Name Description Vector3d v2 Returns Type Description Double | Improve this Doc View Source EpsilonEqual(Vector3d, Double) Declaration public bool EpsilonEqual(Vector3d v2, double epsilon) Parameters Type Name Description Vector3d v2 Double epsilon Returns Type Description Boolean | Improve this Doc View Source Equals(Vector3d) Declaration public bool Equals(Vector3d other) Parameters Type Name Description Vector3d other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GenerateComplementBasis(ref Vector3d, ref Vector3d, Vector3d) Input W must be a unit-length vector. The output vectors {U,V} are unit length and mutually perpendicular, and {U,V,W} is an orthonormal basis. ported from WildMagic5 Declaration public static void GenerateComplementBasis(ref Vector3d u, ref Vector3d v, Vector3d w) Parameters Type Name Description Vector3d u Vector3d v Vector3d w | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source Lerp(Vector3d, Vector3d, Double) Declaration public static Vector3d Lerp(Vector3d a, Vector3d b, double t) Parameters Type Name Description Vector3d a Vector3d b Double t Returns Type Description Vector3d | Improve this Doc View Source Lerp(ref Vector3d, ref Vector3d, Double) Declaration public static Vector3d Lerp(ref Vector3d a, ref Vector3d b, double t) Parameters Type Name Description Vector3d a Vector3d b Double t Returns Type Description Vector3d | Improve this Doc View Source MakePerpVectors(ref Vector3d, out Vector3d, out Vector3d) Returns two vectors perpendicular to n, as efficiently as possible. Duff et all method, from https://graphics.pixar.com/library/OrthonormalB/paper.pdf Declaration public static void MakePerpVectors(ref Vector3d n, out Vector3d b1, out Vector3d b2) Parameters Type Name Description Vector3d n Vector3d b1 Vector3d b2 | Improve this Doc View Source Normalize(Double) Declaration public double Normalize(double epsilon = 2.2204460492503131E-16) Parameters Type Name Description Double epsilon Returns Type Description Double | Improve this Doc View Source Orthonormalize(ref Vector3d, ref Vector3d, ref Vector3d) Gram-Schmidt orthonormalization of the input vectors. [RMS] this is from WildMagic5, but I added returning the minLength value from GTEngine, because I use this in place of GTEngine's Orthonormalize in ComputeOrthogonalComplement below Declaration public static double Orthonormalize(ref Vector3d u, ref Vector3d v, ref Vector3d w) Parameters Type Name Description Vector3d u Vector3d v Vector3d w Returns Type Description Double | Improve this Doc View Source Round(Int32) Declaration public void Round(int nDecimals) Parameters Type Name Description Int32 nDecimals | Improve this Doc View Source Set(Vector3d) Declaration public void Set(Vector3d o) Parameters Type Name Description Vector3d o | Improve this Doc View Source Set(Double, Double, Double) Declaration public void Set(double fX, double fY, double fZ) Parameters Type Name Description Double fX Double fY Double fZ | Improve this Doc View Source Subtract(Vector3d) Declaration public void Subtract(Vector3d o) Parameters Type Name Description Vector3d o | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() | Improve this Doc View Source ToString(String) Declaration public string ToString(string fmt) Parameters Type Name Description String fmt Returns Type Description String | Improve this Doc View Source UnitCross(Vector3d) Declaration public Vector3d UnitCross(Vector3d v2) Parameters Type Name Description Vector3d v2 Returns Type Description Vector3d | Improve this Doc View Source UnitCross(ref Vector3d) Declaration public Vector3d UnitCross(ref Vector3d v2) Parameters Type Name Description Vector3d v2 Returns Type Description Vector3d Operators | Improve this Doc View Source Addition(Vector3d, Vector3d) Declaration public static Vector3d operator +(Vector3d v0, Vector3d v1) Parameters Type Name Description Vector3d v0 Vector3d v1 Returns Type Description Vector3d | Improve this Doc View Source Addition(Vector3d, Double) Declaration public static Vector3d operator +(Vector3d v0, double f) Parameters Type Name Description Vector3d v0 Double f Returns Type Description Vector3d | Improve this Doc View Source Division(Vector3d, Vector3d) Declaration public static Vector3d operator /(Vector3d a, Vector3d b) Parameters Type Name Description Vector3d a Vector3d b Returns Type Description Vector3d | Improve this Doc View Source Division(Vector3d, Double) Declaration public static Vector3d operator /(Vector3d v, double f) Parameters Type Name Description Vector3d v Double f Returns Type Description Vector3d | Improve this Doc View Source Division(Double, Vector3d) Declaration public static Vector3d operator /(double f, Vector3d v) Parameters Type Name Description Double f Vector3d v Returns Type Description Vector3d | Improve this Doc View Source Equality(Vector3d, Vector3d) Declaration public static bool operator ==(Vector3d a, Vector3d b) Parameters Type Name Description Vector3d a Vector3d b Returns Type Description Boolean | Improve this Doc View Source Explicit(Vector3d to Vector3f) Declaration public static explicit operator Vector3f(Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Vector3f | Improve this Doc View Source Implicit(Vector3f to Vector3d) Declaration public static implicit operator Vector3d(Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description Vector3d | Improve this Doc View Source Inequality(Vector3d, Vector3d) Declaration public static bool operator !=(Vector3d a, Vector3d b) Parameters Type Name Description Vector3d a Vector3d b Returns Type Description Boolean | Improve this Doc View Source Multiply(Vector3d, Vector3d) Declaration public static Vector3d operator *(Vector3d a, Vector3d b) Parameters Type Name Description Vector3d a Vector3d b Returns Type Description Vector3d | Improve this Doc View Source Multiply(Vector3d, Double) Declaration public static Vector3d operator *(Vector3d v, double f) Parameters Type Name Description Vector3d v Double f Returns Type Description Vector3d | Improve this Doc View Source Multiply(Double, Vector3d) Declaration public static Vector3d operator *(double f, Vector3d v) Parameters Type Name Description Double f Vector3d v Returns Type Description Vector3d | Improve this Doc View Source Subtraction(Vector3d, Vector3d) Declaration public static Vector3d operator -(Vector3d v0, Vector3d v1) Parameters Type Name Description Vector3d v0 Vector3d v1 Returns Type Description Vector3d | Improve this Doc View Source Subtraction(Vector3d, Double) Declaration public static Vector3d operator -(Vector3d v0, double f) Parameters Type Name Description Vector3d v0 Double f Returns Type Description Vector3d | Improve this Doc View Source UnaryNegation(Vector3d) Declaration public static Vector3d operator -(Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Vector3d"
  },
  "api/g3.Vector3dTuple2.html": {
    "href": "api/g3.Vector3dTuple2.html",
    "title": "Struct Vector3dTuple2 | ViRGIS VR GIS",
    "keywords": "Struct Vector3dTuple2 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Vector3dTuple2 Constructors | Improve this Doc View Source Vector3dTuple2(Vector3d, Vector3d) Declaration public Vector3dTuple2(Vector3d v0, Vector3d v1) Parameters Type Name Description Vector3d v0 Vector3d v1 Fields | Improve this Doc View Source V0 Declaration public Vector3d V0 Field Value Type Description Vector3d | Improve this Doc View Source V1 Declaration public Vector3d V1 Field Value Type Description Vector3d Properties | Improve this Doc View Source Item[Int32] Declaration public Vector3d this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Vector3d"
  },
  "api/g3.Vector3dTuple3.html": {
    "href": "api/g3.Vector3dTuple3.html",
    "title": "Struct Vector3dTuple3 | ViRGIS VR GIS",
    "keywords": "Struct Vector3dTuple3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Vector3dTuple3 Constructors | Improve this Doc View Source Vector3dTuple3(Vector3d, Vector3d, Vector3d) Declaration public Vector3dTuple3(Vector3d v0, Vector3d v1, Vector3d v2) Parameters Type Name Description Vector3d v0 Vector3d v1 Vector3d v2 Fields | Improve this Doc View Source V0 Declaration public Vector3d V0 Field Value Type Description Vector3d | Improve this Doc View Source V1 Declaration public Vector3d V1 Field Value Type Description Vector3d | Improve this Doc View Source V2 Declaration public Vector3d V2 Field Value Type Description Vector3d Properties | Improve this Doc View Source Item[Int32] Declaration public Vector3d this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Vector3d"
  },
  "api/g3.Vector3f.html": {
    "href": "api/g3.Vector3f.html",
    "title": "Struct Vector3f | ViRGIS VR GIS",
    "keywords": "Struct Vector3f Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Vector3f : IComparable<Vector3f>, IEquatable<Vector3f> Constructors | Improve this Doc View Source Vector3f(Vector3d) Declaration public Vector3f(Vector3d copy) Parameters Type Name Description Vector3d copy | Improve this Doc View Source Vector3f(Vector3f) Declaration public Vector3f(Vector3f copy) Parameters Type Name Description Vector3f copy | Improve this Doc View Source Vector3f(Double) Declaration public Vector3f(double f) Parameters Type Name Description Double f | Improve this Doc View Source Vector3f(Double, Double, Double) Declaration public Vector3f(double x, double y, double z) Parameters Type Name Description Double x Double y Double z | Improve this Doc View Source Vector3f(Double[]) Declaration public Vector3f(double[] v2) Parameters Type Name Description Double [] v2 | Improve this Doc View Source Vector3f(Single) Declaration public Vector3f(float f) Parameters Type Name Description Single f | Improve this Doc View Source Vector3f(Single, Single, Single) Declaration public Vector3f(float x, float y, float z) Parameters Type Name Description Single x Single y Single z | Improve this Doc View Source Vector3f(Single[]) Declaration public Vector3f(float[] v2) Parameters Type Name Description Single [] v2 Fields | Improve this Doc View Source AxisX Declaration public static readonly Vector3f AxisX Field Value Type Description Vector3f | Improve this Doc View Source AxisY Declaration public static readonly Vector3f AxisY Field Value Type Description Vector3f | Improve this Doc View Source AxisZ Declaration public static readonly Vector3f AxisZ Field Value Type Description Vector3f | Improve this Doc View Source Invalid Declaration public static readonly Vector3f Invalid Field Value Type Description Vector3f | Improve this Doc View Source MaxValue Declaration public static readonly Vector3f MaxValue Field Value Type Description Vector3f | Improve this Doc View Source MinValue Declaration public static readonly Vector3f MinValue Field Value Type Description Vector3f | Improve this Doc View Source One Declaration public static readonly Vector3f One Field Value Type Description Vector3f | Improve this Doc View Source OneNormalized Declaration public static readonly Vector3f OneNormalized Field Value Type Description Vector3f | Improve this Doc View Source x Declaration public float x Field Value Type Description Single | Improve this Doc View Source y Declaration public float y Field Value Type Description Single | Improve this Doc View Source z Declaration public float z Field Value Type Description Single | Improve this Doc View Source Zero Declaration public static readonly Vector3f Zero Field Value Type Description Vector3f Properties | Improve this Doc View Source IsFinite Declaration public bool IsFinite { get; } Property Value Type Description Boolean | Improve this Doc View Source IsNormalized Declaration public bool IsNormalized { get; } Property Value Type Description Boolean | Improve this Doc View Source Item[Int32] Declaration public float this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Single | Improve this Doc View Source Length Declaration public float Length { get; } Property Value Type Description Single | Improve this Doc View Source LengthL1 Declaration public float LengthL1 { get; } Property Value Type Description Single | Improve this Doc View Source LengthSquared Declaration public float LengthSquared { get; } Property Value Type Description Single | Improve this Doc View Source Max Declaration public float Max { get; } Property Value Type Description Single | Improve this Doc View Source MaxAbs Declaration public float MaxAbs { get; } Property Value Type Description Single | Improve this Doc View Source Min Declaration public float Min { get; } Property Value Type Description Single | Improve this Doc View Source MinAbs Declaration public float MinAbs { get; } Property Value Type Description Single | Improve this Doc View Source Normalized Declaration public Vector3f Normalized { get; } Property Value Type Description Vector3f | Improve this Doc View Source xy Declaration public Vector2f xy { get; set; } Property Value Type Description Vector2f | Improve this Doc View Source xz Declaration public Vector2f xz { get; set; } Property Value Type Description Vector2f | Improve this Doc View Source yz Declaration public Vector2f yz { get; set; } Property Value Type Description Vector2f Methods | Improve this Doc View Source Add(Vector3f) Declaration public void Add(Vector3f o) Parameters Type Name Description Vector3f o | Improve this Doc View Source AngleD(Vector3f) Declaration public float AngleD(Vector3f v2) Parameters Type Name Description Vector3f v2 Returns Type Description Single | Improve this Doc View Source AngleD(Vector3f, Vector3f) Declaration public static float AngleD(Vector3f v1, Vector3f v2) Parameters Type Name Description Vector3f v1 Vector3f v2 Returns Type Description Single | Improve this Doc View Source AngleR(Vector3f) Declaration public float AngleR(Vector3f v2) Parameters Type Name Description Vector3f v2 Returns Type Description Single | Improve this Doc View Source AngleR(Vector3f, Vector3f) Declaration public static float AngleR(Vector3f v1, Vector3f v2) Parameters Type Name Description Vector3f v1 Vector3f v2 Returns Type Description Single | Improve this Doc View Source CompareTo(Vector3f) Declaration public int CompareTo(Vector3f other) Parameters Type Name Description Vector3f other Returns Type Description Int32 | Improve this Doc View Source Cross(Vector3f) Declaration public Vector3f Cross(Vector3f v2) Parameters Type Name Description Vector3f v2 Returns Type Description Vector3f | Improve this Doc View Source Cross(Vector3f, Vector3f) Declaration public static Vector3f Cross(Vector3f v1, Vector3f v2) Parameters Type Name Description Vector3f v1 Vector3f v2 Returns Type Description Vector3f | Improve this Doc View Source Distance(Vector3f) Declaration public float Distance(Vector3f v2) Parameters Type Name Description Vector3f v2 Returns Type Description Single | Improve this Doc View Source DistanceSquared(Vector3f) Declaration public float DistanceSquared(Vector3f v2) Parameters Type Name Description Vector3f v2 Returns Type Description Single | Improve this Doc View Source Dot(Vector3f) Declaration public float Dot(Vector3f v2) Parameters Type Name Description Vector3f v2 Returns Type Description Single | Improve this Doc View Source Dot(Vector3f, Vector3f) Declaration public static float Dot(Vector3f v1, Vector3f v2) Parameters Type Name Description Vector3f v1 Vector3f v2 Returns Type Description Single | Improve this Doc View Source EpsilonEqual(Vector3f, Single) Declaration public bool EpsilonEqual(Vector3f v2, float epsilon) Parameters Type Name Description Vector3f v2 Single epsilon Returns Type Description Boolean | Improve this Doc View Source Equals(Vector3f) Declaration public bool Equals(Vector3f other) Parameters Type Name Description Vector3f other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source Lerp(Vector3f, Vector3f, Single) Declaration public static Vector3f Lerp(Vector3f a, Vector3f b, float t) Parameters Type Name Description Vector3f a Vector3f b Single t Returns Type Description Vector3f | Improve this Doc View Source Normalize(Single) Declaration public float Normalize(float epsilon = 1.1920929E-07F) Parameters Type Name Description Single epsilon Returns Type Description Single | Improve this Doc View Source Round(Int32) Declaration public void Round(int nDecimals) Parameters Type Name Description Int32 nDecimals | Improve this Doc View Source Set(Vector3f) Declaration public void Set(Vector3f o) Parameters Type Name Description Vector3f o | Improve this Doc View Source Set(Single, Single, Single) Declaration public void Set(float fX, float fY, float fZ) Parameters Type Name Description Single fX Single fY Single fZ | Improve this Doc View Source Subtract(Vector3f) Declaration public void Subtract(Vector3f o) Parameters Type Name Description Vector3f o | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() | Improve this Doc View Source ToString(String) Declaration public string ToString(string fmt) Parameters Type Name Description String fmt Returns Type Description String | Improve this Doc View Source UnitCross(Vector3f) Declaration public Vector3f UnitCross(Vector3f v2) Parameters Type Name Description Vector3f v2 Returns Type Description Vector3f Operators | Improve this Doc View Source Addition(Vector3f, Vector3f) Declaration public static Vector3f operator +(Vector3f v0, Vector3f v1) Parameters Type Name Description Vector3f v0 Vector3f v1 Returns Type Description Vector3f | Improve this Doc View Source Addition(Vector3f, Single) Declaration public static Vector3f operator +(Vector3f v0, float f) Parameters Type Name Description Vector3f v0 Single f Returns Type Description Vector3f | Improve this Doc View Source Division(Vector3f, Vector3f) Declaration public static Vector3f operator /(Vector3f a, Vector3f b) Parameters Type Name Description Vector3f a Vector3f b Returns Type Description Vector3f | Improve this Doc View Source Division(Vector3f, Single) Declaration public static Vector3f operator /(Vector3f v, float f) Parameters Type Name Description Vector3f v Single f Returns Type Description Vector3f | Improve this Doc View Source Division(Single, Vector3f) Declaration public static Vector3f operator /(float f, Vector3f v) Parameters Type Name Description Single f Vector3f v Returns Type Description Vector3f | Improve this Doc View Source Equality(Vector3f, Vector3f) Declaration public static bool operator ==(Vector3f a, Vector3f b) Parameters Type Name Description Vector3f a Vector3f b Returns Type Description Boolean | Improve this Doc View Source Inequality(Vector3f, Vector3f) Declaration public static bool operator !=(Vector3f a, Vector3f b) Parameters Type Name Description Vector3f a Vector3f b Returns Type Description Boolean | Improve this Doc View Source Multiply(Vector3f, Vector3f) Declaration public static Vector3f operator *(Vector3f a, Vector3f b) Parameters Type Name Description Vector3f a Vector3f b Returns Type Description Vector3f | Improve this Doc View Source Multiply(Vector3f, Single) Declaration public static Vector3f operator *(Vector3f v, float f) Parameters Type Name Description Vector3f v Single f Returns Type Description Vector3f | Improve this Doc View Source Multiply(Single, Vector3f) Declaration public static Vector3f operator *(float f, Vector3f v) Parameters Type Name Description Single f Vector3f v Returns Type Description Vector3f | Improve this Doc View Source Subtraction(Vector3f, Vector3f) Declaration public static Vector3f operator -(Vector3f v0, Vector3f v1) Parameters Type Name Description Vector3f v0 Vector3f v1 Returns Type Description Vector3f | Improve this Doc View Source Subtraction(Vector3f, Single) Declaration public static Vector3f operator -(Vector3f v0, float f) Parameters Type Name Description Vector3f v0 Single f Returns Type Description Vector3f | Improve this Doc View Source UnaryNegation(Vector3f) Declaration public static Vector3f operator -(Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description Vector3f"
  },
  "api/g3.Vector3fTuple3.html": {
    "href": "api/g3.Vector3fTuple3.html",
    "title": "Struct Vector3fTuple3 | ViRGIS VR GIS",
    "keywords": "Struct Vector3fTuple3 Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Vector3fTuple3 Constructors | Improve this Doc View Source Vector3fTuple3(Vector3f, Vector3f, Vector3f) Declaration public Vector3fTuple3(Vector3f v0, Vector3f v1, Vector3f v2) Parameters Type Name Description Vector3f v0 Vector3f v1 Vector3f v2 Fields | Improve this Doc View Source V0 Declaration public Vector3f V0 Field Value Type Description Vector3f | Improve this Doc View Source V1 Declaration public Vector3f V1 Field Value Type Description Vector3f | Improve this Doc View Source V2 Declaration public Vector3f V2 Field Value Type Description Vector3f Properties | Improve this Doc View Source Item[Int32] Declaration public Vector3f this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Vector3f"
  },
  "api/g3.Vector3i.html": {
    "href": "api/g3.Vector3i.html",
    "title": "Struct Vector3i | ViRGIS VR GIS",
    "keywords": "Struct Vector3i 3D integer vector type. This is basically the same as Index3i but with .x.y.z member names. This makes code far more readable in many places. Unfortunately I can't see a way to do this w/o so much duplication...we could have .x/.y/.z accessors but that is much less efficient... Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Vector3i : IComparable<Vector3i>, IEquatable<Vector3i> Constructors | Improve this Doc View Source Vector3i(Int32) Declaration public Vector3i(int f) Parameters Type Name Description Int32 f | Improve this Doc View Source Vector3i(Int32, Int32, Int32) Declaration public Vector3i(int x, int y, int z) Parameters Type Name Description Int32 x Int32 y Int32 z | Improve this Doc View Source Vector3i(Int32[]) Declaration public Vector3i(int[] v2) Parameters Type Name Description Int32 [] v2 Fields | Improve this Doc View Source AxisX Declaration public static readonly Vector3i AxisX Field Value Type Description Vector3i | Improve this Doc View Source AxisY Declaration public static readonly Vector3i AxisY Field Value Type Description Vector3i | Improve this Doc View Source AxisZ Declaration public static readonly Vector3i AxisZ Field Value Type Description Vector3i | Improve this Doc View Source One Declaration public static readonly Vector3i One Field Value Type Description Vector3i | Improve this Doc View Source x Declaration public int x Field Value Type Description Int32 | Improve this Doc View Source y Declaration public int y Field Value Type Description Int32 | Improve this Doc View Source z Declaration public int z Field Value Type Description Int32 | Improve this Doc View Source Zero Declaration public static readonly Vector3i Zero Field Value Type Description Vector3i Properties | Improve this Doc View Source array Declaration public int[] array { get; } Property Value Type Description Int32 [] | Improve this Doc View Source Item[Int32] Declaration public int this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Int32 | Improve this Doc View Source LengthSquared Declaration public int LengthSquared { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Add(Vector3i) Declaration public void Add(Vector3i o) Parameters Type Name Description Vector3i o | Improve this Doc View Source Add(Int32) Declaration public void Add(int s) Parameters Type Name Description Int32 s | Improve this Doc View Source CompareTo(Vector3i) Declaration public int CompareTo(Vector3i other) Parameters Type Name Description Vector3i other Returns Type Description Int32 | Improve this Doc View Source Equals(Vector3i) Declaration public bool Equals(Vector3i other) Parameters Type Name Description Vector3i other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source Set(Vector3i) Declaration public void Set(Vector3i o) Parameters Type Name Description Vector3i o | Improve this Doc View Source Set(Int32, Int32, Int32) Declaration public void Set(int fX, int fY, int fZ) Parameters Type Name Description Int32 fX Int32 fY Int32 fZ | Improve this Doc View Source Subtract(Vector3i) Declaration public void Subtract(Vector3i o) Parameters Type Name Description Vector3i o | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() Operators | Improve this Doc View Source Addition(Vector3i, Vector3i) Declaration public static Vector3i operator +(Vector3i v0, Vector3i v1) Parameters Type Name Description Vector3i v0 Vector3i v1 Returns Type Description Vector3i | Improve this Doc View Source Addition(Vector3i, Int32) Declaration public static Vector3i operator +(Vector3i v0, int f) Parameters Type Name Description Vector3i v0 Int32 f Returns Type Description Vector3i | Improve this Doc View Source Division(Vector3i, Vector3i) Declaration public static Vector3i operator /(Vector3i a, Vector3i b) Parameters Type Name Description Vector3i a Vector3i b Returns Type Description Vector3i | Improve this Doc View Source Division(Vector3i, Int32) Declaration public static Vector3i operator /(Vector3i v, int f) Parameters Type Name Description Vector3i v Int32 f Returns Type Description Vector3i | Improve this Doc View Source Division(Int32, Vector3i) Declaration public static Vector3i operator /(int f, Vector3i v) Parameters Type Name Description Int32 f Vector3i v Returns Type Description Vector3i | Improve this Doc View Source Equality(Vector3i, Vector3i) Declaration public static bool operator ==(Vector3i a, Vector3i b) Parameters Type Name Description Vector3i a Vector3i b Returns Type Description Boolean | Improve this Doc View Source Explicit(Vector3d to Vector3i) Declaration public static explicit operator Vector3i(Vector3d v) Parameters Type Name Description Vector3d v Returns Type Description Vector3i | Improve this Doc View Source Explicit(Vector3f to Vector3i) Declaration public static explicit operator Vector3i(Vector3f v) Parameters Type Name Description Vector3f v Returns Type Description Vector3i | Improve this Doc View Source Explicit(Vector3i to Vector3d) Declaration public static explicit operator Vector3d(Vector3i v) Parameters Type Name Description Vector3i v Returns Type Description Vector3d | Improve this Doc View Source Explicit(Vector3i to Vector3f) Declaration public static explicit operator Vector3f(Vector3i v) Parameters Type Name Description Vector3i v Returns Type Description Vector3f | Improve this Doc View Source Implicit(Index3i to Vector3i) Declaration public static implicit operator Vector3i(Index3i v) Parameters Type Name Description Index3i v Returns Type Description Vector3i | Improve this Doc View Source Implicit(Vector3i to Index3i) Declaration public static implicit operator Index3i(Vector3i v) Parameters Type Name Description Vector3i v Returns Type Description Index3i | Improve this Doc View Source Inequality(Vector3i, Vector3i) Declaration public static bool operator !=(Vector3i a, Vector3i b) Parameters Type Name Description Vector3i a Vector3i b Returns Type Description Boolean | Improve this Doc View Source Multiply(Vector3i, Vector3i) Declaration public static Vector3i operator *(Vector3i a, Vector3i b) Parameters Type Name Description Vector3i a Vector3i b Returns Type Description Vector3i | Improve this Doc View Source Multiply(Vector3i, Int32) Declaration public static Vector3i operator *(Vector3i v, int f) Parameters Type Name Description Vector3i v Int32 f Returns Type Description Vector3i | Improve this Doc View Source Multiply(Int32, Vector3i) Declaration public static Vector3i operator *(int f, Vector3i v) Parameters Type Name Description Int32 f Vector3i v Returns Type Description Vector3i | Improve this Doc View Source Subtraction(Vector3i, Vector3i) Declaration public static Vector3i operator -(Vector3i v0, Vector3i v1) Parameters Type Name Description Vector3i v0 Vector3i v1 Returns Type Description Vector3i | Improve this Doc View Source Subtraction(Vector3i, Int32) Declaration public static Vector3i operator -(Vector3i v0, int f) Parameters Type Name Description Vector3i v0 Int32 f Returns Type Description Vector3i | Improve this Doc View Source UnaryNegation(Vector3i) Declaration public static Vector3i operator -(Vector3i v) Parameters Type Name Description Vector3i v Returns Type Description Vector3i"
  },
  "api/g3.Vector4d.html": {
    "href": "api/g3.Vector4d.html",
    "title": "Struct Vector4d | ViRGIS VR GIS",
    "keywords": "Struct Vector4d Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Vector4d : IComparable<Vector4d>, IEquatable<Vector4d> Constructors | Improve this Doc View Source Vector4d(Vector4d) Declaration public Vector4d(Vector4d copy) Parameters Type Name Description Vector4d copy | Improve this Doc View Source Vector4d(Double) Declaration public Vector4d(double f) Parameters Type Name Description Double f | Improve this Doc View Source Vector4d(Double, Double, Double, Double) Declaration public Vector4d(double x, double y, double z, double w) Parameters Type Name Description Double x Double y Double z Double w | Improve this Doc View Source Vector4d(Double[]) Declaration public Vector4d(double[] v2) Parameters Type Name Description Double [] v2 Fields | Improve this Doc View Source One Declaration public static readonly Vector4d One Field Value Type Description Vector4d | Improve this Doc View Source w Declaration public double w Field Value Type Description Double | Improve this Doc View Source x Declaration public double x Field Value Type Description Double | Improve this Doc View Source y Declaration public double y Field Value Type Description Double | Improve this Doc View Source z Declaration public double z Field Value Type Description Double | Improve this Doc View Source Zero Declaration public static readonly Vector4d Zero Field Value Type Description Vector4d Properties | Improve this Doc View Source IsFinite Declaration public bool IsFinite { get; } Property Value Type Description Boolean | Improve this Doc View Source IsNormalized Declaration public bool IsNormalized { get; } Property Value Type Description Boolean | Improve this Doc View Source Item[Int32] Declaration public double this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Double | Improve this Doc View Source Length Declaration public double Length { get; } Property Value Type Description Double | Improve this Doc View Source LengthL1 Declaration public double LengthL1 { get; } Property Value Type Description Double | Improve this Doc View Source LengthSquared Declaration public double LengthSquared { get; } Property Value Type Description Double | Improve this Doc View Source Normalized Declaration public Vector4d Normalized { get; } Property Value Type Description Vector4d Methods | Improve this Doc View Source AngleD(Vector4d) Declaration public double AngleD(Vector4d v2) Parameters Type Name Description Vector4d v2 Returns Type Description Double | Improve this Doc View Source AngleD(Vector4d, Vector4d) Declaration public static double AngleD(Vector4d v1, Vector4d v2) Parameters Type Name Description Vector4d v1 Vector4d v2 Returns Type Description Double | Improve this Doc View Source AngleR(Vector4d) Declaration public double AngleR(Vector4d v2) Parameters Type Name Description Vector4d v2 Returns Type Description Double | Improve this Doc View Source AngleR(Vector4d, Vector4d) Declaration public static double AngleR(Vector4d v1, Vector4d v2) Parameters Type Name Description Vector4d v1 Vector4d v2 Returns Type Description Double | Improve this Doc View Source CompareTo(Vector4d) Declaration public int CompareTo(Vector4d other) Parameters Type Name Description Vector4d other Returns Type Description Int32 | Improve this Doc View Source Distance(Vector4d) Declaration public double Distance(Vector4d v2) Parameters Type Name Description Vector4d v2 Returns Type Description Double | Improve this Doc View Source Distance(ref Vector4d) Declaration public double Distance(ref Vector4d v2) Parameters Type Name Description Vector4d v2 Returns Type Description Double | Improve this Doc View Source DistanceSquared(Vector4d) Declaration public double DistanceSquared(Vector4d v2) Parameters Type Name Description Vector4d v2 Returns Type Description Double | Improve this Doc View Source DistanceSquared(ref Vector4d) Declaration public double DistanceSquared(ref Vector4d v2) Parameters Type Name Description Vector4d v2 Returns Type Description Double | Improve this Doc View Source Dot(Vector4d) Declaration public double Dot(Vector4d v2) Parameters Type Name Description Vector4d v2 Returns Type Description Double | Improve this Doc View Source Dot(Vector4d, Vector4d) Declaration public static double Dot(Vector4d v1, Vector4d v2) Parameters Type Name Description Vector4d v1 Vector4d v2 Returns Type Description Double | Improve this Doc View Source Dot(ref Vector4d) Declaration public double Dot(ref Vector4d v2) Parameters Type Name Description Vector4d v2 Returns Type Description Double | Improve this Doc View Source EpsilonEqual(Vector4d, Double) Declaration public bool EpsilonEqual(Vector4d v2, double epsilon) Parameters Type Name Description Vector4d v2 Double epsilon Returns Type Description Boolean | Improve this Doc View Source Equals(Vector4d) Declaration public bool Equals(Vector4d other) Parameters Type Name Description Vector4d other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source Normalize(Double) Declaration public double Normalize(double epsilon = 2.2204460492503131E-16) Parameters Type Name Description Double epsilon Returns Type Description Double | Improve this Doc View Source Round(Int32) Declaration public void Round(int nDecimals) Parameters Type Name Description Int32 nDecimals | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() | Improve this Doc View Source ToString(String) Declaration public string ToString(string fmt) Parameters Type Name Description String fmt Returns Type Description String Operators | Improve this Doc View Source Addition(Vector4d, Vector4d) Declaration public static Vector4d operator +(Vector4d v0, Vector4d v1) Parameters Type Name Description Vector4d v0 Vector4d v1 Returns Type Description Vector4d | Improve this Doc View Source Addition(Vector4d, Double) Declaration public static Vector4d operator +(Vector4d v0, double f) Parameters Type Name Description Vector4d v0 Double f Returns Type Description Vector4d | Improve this Doc View Source Division(Vector4d, Vector4d) Declaration public static Vector4d operator /(Vector4d a, Vector4d b) Parameters Type Name Description Vector4d a Vector4d b Returns Type Description Vector4d | Improve this Doc View Source Division(Vector4d, Double) Declaration public static Vector4d operator /(Vector4d v, double f) Parameters Type Name Description Vector4d v Double f Returns Type Description Vector4d | Improve this Doc View Source Division(Double, Vector4d) Declaration public static Vector4d operator /(double f, Vector4d v) Parameters Type Name Description Double f Vector4d v Returns Type Description Vector4d | Improve this Doc View Source Equality(Vector4d, Vector4d) Declaration public static bool operator ==(Vector4d a, Vector4d b) Parameters Type Name Description Vector4d a Vector4d b Returns Type Description Boolean | Improve this Doc View Source Inequality(Vector4d, Vector4d) Declaration public static bool operator !=(Vector4d a, Vector4d b) Parameters Type Name Description Vector4d a Vector4d b Returns Type Description Boolean | Improve this Doc View Source Multiply(Vector4d, Vector4d) Declaration public static Vector4d operator *(Vector4d a, Vector4d b) Parameters Type Name Description Vector4d a Vector4d b Returns Type Description Vector4d | Improve this Doc View Source Multiply(Vector4d, Double) Declaration public static Vector4d operator *(Vector4d v, double f) Parameters Type Name Description Vector4d v Double f Returns Type Description Vector4d | Improve this Doc View Source Multiply(Double, Vector4d) Declaration public static Vector4d operator *(double f, Vector4d v) Parameters Type Name Description Double f Vector4d v Returns Type Description Vector4d | Improve this Doc View Source Subtraction(Vector4d, Vector4d) Declaration public static Vector4d operator -(Vector4d v0, Vector4d v1) Parameters Type Name Description Vector4d v0 Vector4d v1 Returns Type Description Vector4d | Improve this Doc View Source Subtraction(Vector4d, Double) Declaration public static Vector4d operator -(Vector4d v0, double f) Parameters Type Name Description Vector4d v0 Double f Returns Type Description Vector4d | Improve this Doc View Source UnaryNegation(Vector4d) Declaration public static Vector4d operator -(Vector4d v) Parameters Type Name Description Vector4d v Returns Type Description Vector4d"
  },
  "api/g3.Vector4f.html": {
    "href": "api/g3.Vector4f.html",
    "title": "Struct Vector4f | ViRGIS VR GIS",
    "keywords": "Struct Vector4f Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct Vector4f : IComparable<Vector4f>, IEquatable<Vector4f> Constructors | Improve this Doc View Source Vector4f(Vector4f) Declaration public Vector4f(Vector4f copy) Parameters Type Name Description Vector4f copy | Improve this Doc View Source Vector4f(Single) Declaration public Vector4f(float f) Parameters Type Name Description Single f | Improve this Doc View Source Vector4f(Single, Single, Single, Single) Declaration public Vector4f(float x, float y, float z, float w) Parameters Type Name Description Single x Single y Single z Single w | Improve this Doc View Source Vector4f(Single[]) Declaration public Vector4f(float[] v2) Parameters Type Name Description Single [] v2 Fields | Improve this Doc View Source One Declaration public static readonly Vector4f One Field Value Type Description Vector4f | Improve this Doc View Source w Declaration public float w Field Value Type Description Single | Improve this Doc View Source x Declaration public float x Field Value Type Description Single | Improve this Doc View Source y Declaration public float y Field Value Type Description Single | Improve this Doc View Source z Declaration public float z Field Value Type Description Single | Improve this Doc View Source Zero Declaration public static readonly Vector4f Zero Field Value Type Description Vector4f Properties | Improve this Doc View Source IsFinite Declaration public bool IsFinite { get; } Property Value Type Description Boolean | Improve this Doc View Source IsNormalized Declaration public bool IsNormalized { get; } Property Value Type Description Boolean | Improve this Doc View Source Item[Int32] Declaration public float this[int key] { get; set; } Parameters Type Name Description Int32 key Property Value Type Description Single | Improve this Doc View Source Length Declaration public float Length { get; } Property Value Type Description Single | Improve this Doc View Source LengthL1 Declaration public float LengthL1 { get; } Property Value Type Description Single | Improve this Doc View Source LengthSquared Declaration public float LengthSquared { get; } Property Value Type Description Single | Improve this Doc View Source Normalized Declaration public Vector4f Normalized { get; } Property Value Type Description Vector4f Methods | Improve this Doc View Source AngleD(Vector4f) Declaration public float AngleD(Vector4f v2) Parameters Type Name Description Vector4f v2 Returns Type Description Single | Improve this Doc View Source AngleD(Vector4f, Vector4f) Declaration public static float AngleD(Vector4f v1, Vector4f v2) Parameters Type Name Description Vector4f v1 Vector4f v2 Returns Type Description Single | Improve this Doc View Source AngleR(Vector4f) Declaration public float AngleR(Vector4f v2) Parameters Type Name Description Vector4f v2 Returns Type Description Single | Improve this Doc View Source AngleR(Vector4f, Vector4f) Declaration public static float AngleR(Vector4f v1, Vector4f v2) Parameters Type Name Description Vector4f v1 Vector4f v2 Returns Type Description Single | Improve this Doc View Source CompareTo(Vector4f) Declaration public int CompareTo(Vector4f other) Parameters Type Name Description Vector4f other Returns Type Description Int32 | Improve this Doc View Source Distance(Vector4f) Declaration public float Distance(Vector4f v2) Parameters Type Name Description Vector4f v2 Returns Type Description Single | Improve this Doc View Source Distance(ref Vector4f) Declaration public float Distance(ref Vector4f v2) Parameters Type Name Description Vector4f v2 Returns Type Description Single | Improve this Doc View Source DistanceSquared(Vector4f) Declaration public float DistanceSquared(Vector4f v2) Parameters Type Name Description Vector4f v2 Returns Type Description Single | Improve this Doc View Source DistanceSquared(ref Vector4f) Declaration public float DistanceSquared(ref Vector4f v2) Parameters Type Name Description Vector4f v2 Returns Type Description Single | Improve this Doc View Source Dot(Vector4f) Declaration public float Dot(Vector4f v2) Parameters Type Name Description Vector4f v2 Returns Type Description Single | Improve this Doc View Source Dot(Vector4f, Vector4f) Declaration public static float Dot(Vector4f v1, Vector4f v2) Parameters Type Name Description Vector4f v1 Vector4f v2 Returns Type Description Single | Improve this Doc View Source Dot(ref Vector4f) Declaration public float Dot(ref Vector4f v2) Parameters Type Name Description Vector4f v2 Returns Type Description Single | Improve this Doc View Source EpsilonEqual(Vector4f, Single) Declaration public bool EpsilonEqual(Vector4f v2, float epsilon) Parameters Type Name Description Vector4f v2 Single epsilon Returns Type Description Boolean | Improve this Doc View Source Equals(Vector4f) Declaration public bool Equals(Vector4f other) Parameters Type Name Description Vector4f other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source Normalize(Single) Declaration public float Normalize(float epsilon = 1.1920929E-07F) Parameters Type Name Description Single epsilon Returns Type Description Single | Improve this Doc View Source Round(Int32) Declaration public void Round(int nDecimals) Parameters Type Name Description Int32 nDecimals | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString() | Improve this Doc View Source ToString(String) Declaration public string ToString(string fmt) Parameters Type Name Description String fmt Returns Type Description String Operators | Improve this Doc View Source Addition(Vector4f, Vector4f) Declaration public static Vector4f operator +(Vector4f v0, Vector4f v1) Parameters Type Name Description Vector4f v0 Vector4f v1 Returns Type Description Vector4f | Improve this Doc View Source Addition(Vector4f, Single) Declaration public static Vector4f operator +(Vector4f v0, float f) Parameters Type Name Description Vector4f v0 Single f Returns Type Description Vector4f | Improve this Doc View Source Division(Vector4f, Vector4f) Declaration public static Vector4f operator /(Vector4f a, Vector4f b) Parameters Type Name Description Vector4f a Vector4f b Returns Type Description Vector4f | Improve this Doc View Source Division(Vector4f, Single) Declaration public static Vector4f operator /(Vector4f v, float f) Parameters Type Name Description Vector4f v Single f Returns Type Description Vector4f | Improve this Doc View Source Division(Single, Vector4f) Declaration public static Vector4f operator /(float f, Vector4f v) Parameters Type Name Description Single f Vector4f v Returns Type Description Vector4f | Improve this Doc View Source Equality(Vector4f, Vector4f) Declaration public static bool operator ==(Vector4f a, Vector4f b) Parameters Type Name Description Vector4f a Vector4f b Returns Type Description Boolean | Improve this Doc View Source Inequality(Vector4f, Vector4f) Declaration public static bool operator !=(Vector4f a, Vector4f b) Parameters Type Name Description Vector4f a Vector4f b Returns Type Description Boolean | Improve this Doc View Source Multiply(Vector4f, Vector4f) Declaration public static Vector4f operator *(Vector4f a, Vector4f b) Parameters Type Name Description Vector4f a Vector4f b Returns Type Description Vector4f | Improve this Doc View Source Multiply(Vector4f, Single) Declaration public static Vector4f operator *(Vector4f v, float f) Parameters Type Name Description Vector4f v Single f Returns Type Description Vector4f | Improve this Doc View Source Multiply(Single, Vector4f) Declaration public static Vector4f operator *(float f, Vector4f v) Parameters Type Name Description Single f Vector4f v Returns Type Description Vector4f | Improve this Doc View Source Subtraction(Vector4f, Vector4f) Declaration public static Vector4f operator -(Vector4f v0, Vector4f v1) Parameters Type Name Description Vector4f v0 Vector4f v1 Returns Type Description Vector4f | Improve this Doc View Source Subtraction(Vector4f, Single) Declaration public static Vector4f operator -(Vector4f v0, float f) Parameters Type Name Description Vector4f v0 Single f Returns Type Description Vector4f | Improve this Doc View Source UnaryNegation(Vector4f) Declaration public static Vector4f operator -(Vector4f v) Parameters Type Name Description Vector4f v Returns Type Description Vector4f"
  },
  "api/g3.VectorArray2-1.html": {
    "href": "api/g3.VectorArray2-1.html",
    "title": "Class VectorArray2<T> | ViRGIS VR GIS",
    "keywords": "Class VectorArray2<T> Inheritance Object VectorArray2<T> IndexArray2i VectorArray2d VectorArray2f Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class VectorArray2<T> : IEnumerable<T>, IEnumerable Type Parameters Name Description T Constructors | Improve this Doc View Source VectorArray2(T[]) Declaration public VectorArray2(T[] data) Parameters Type Name Description T[] data | Improve this Doc View Source VectorArray2(Int32) Declaration public VectorArray2(int nCount = 0) Parameters Type Name Description Int32 nCount Fields | Improve this Doc View Source array Declaration public T[] array Field Value Type Description T[] Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> | Improve this Doc View Source Resize(Int32) Declaration public void Resize(int Count) Parameters Type Name Description Int32 Count | Improve this Doc View Source Set(Int32, T, T) Declaration public void Set(int i, T a, T b) Parameters Type Name Description Int32 i T a T b | Improve this Doc View Source Set(Int32, Int32, VectorArray2<T>) Declaration public void Set(int iStart, int iCount, VectorArray2<T> source) Parameters Type Name Description Int32 iStart Int32 iCount VectorArray2 <T> source"
  },
  "api/g3.VectorArray2d.html": {
    "href": "api/g3.VectorArray2d.html",
    "title": "Class VectorArray2d | ViRGIS VR GIS",
    "keywords": "Class VectorArray2d Inheritance Object VectorArray2 < Double > VectorArray2d Inherited Members VectorArray2<Double>.array VectorArray2<Double>.Count VectorArray2<Double>.GetEnumerator() VectorArray2<Double>.Resize(Int32) VectorArray2<Double>.Set(Int32, Double, Double) VectorArray2<Double>.Set(Int32, Int32, VectorArray2<Double>) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class VectorArray2d : VectorArray2<double>, IEnumerable<double>, IEnumerable Constructors | Improve this Doc View Source VectorArray2d(Double[]) Declaration public VectorArray2d(double[] data) Parameters Type Name Description Double [] data | Improve this Doc View Source VectorArray2d(Int32) Declaration public VectorArray2d(int nCount) Parameters Type Name Description Int32 nCount Properties | Improve this Doc View Source Item[Int32] Declaration public Vector2d this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Vector2d Methods | Improve this Doc View Source AsVector2d() Declaration public IEnumerable<Vector2d> AsVector2d() Returns Type Description IEnumerable < Vector2d >"
  },
  "api/g3.VectorArray2f.html": {
    "href": "api/g3.VectorArray2f.html",
    "title": "Class VectorArray2f | ViRGIS VR GIS",
    "keywords": "Class VectorArray2f Inheritance Object VectorArray2 < Single > VectorArray2f Inherited Members VectorArray2<Single>.array VectorArray2<Single>.Count VectorArray2<Single>.GetEnumerator() VectorArray2<Single>.Resize(Int32) VectorArray2<Single>.Set(Int32, Single, Single) VectorArray2<Single>.Set(Int32, Int32, VectorArray2<Single>) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class VectorArray2f : VectorArray2<float>, IEnumerable<float>, IEnumerable Constructors | Improve this Doc View Source VectorArray2f(Int32) Declaration public VectorArray2f(int nCount) Parameters Type Name Description Int32 nCount | Improve this Doc View Source VectorArray2f(Single[]) Declaration public VectorArray2f(float[] data) Parameters Type Name Description Single [] data Properties | Improve this Doc View Source Item[Int32] Declaration public Vector2f this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Vector2f Methods | Improve this Doc View Source AsVector2f() Declaration public IEnumerable<Vector2d> AsVector2f() Returns Type Description IEnumerable < Vector2d >"
  },
  "api/g3.VectorArray3-1.html": {
    "href": "api/g3.VectorArray3-1.html",
    "title": "Class VectorArray3<T> | ViRGIS VR GIS",
    "keywords": "Class VectorArray3<T> Inheritance Object VectorArray3<T> IndexArray3i VectorArray3d VectorArray3f VectorArray3i Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class VectorArray3<T> : IEnumerable<T>, IEnumerable Type Parameters Name Description T Constructors | Improve this Doc View Source VectorArray3(T[]) Declaration public VectorArray3(T[] data) Parameters Type Name Description T[] data | Improve this Doc View Source VectorArray3(Int32) Declaration public VectorArray3(int nCount = 0) Parameters Type Name Description Int32 nCount Fields | Improve this Doc View Source array Declaration public T[] array Field Value Type Description T[] Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> | Improve this Doc View Source Resize(Int32) Declaration public void Resize(int Count) Parameters Type Name Description Int32 Count | Improve this Doc View Source Set(Int32, T, T, T) Declaration public void Set(int i, T a, T b, T c) Parameters Type Name Description Int32 i T a T b T c | Improve this Doc View Source Set(Int32, Int32, VectorArray3<T>) Declaration public void Set(int iStart, int iCount, VectorArray3<T> source) Parameters Type Name Description Int32 iStart Int32 iCount VectorArray3 <T> source"
  },
  "api/g3.VectorArray3d.html": {
    "href": "api/g3.VectorArray3d.html",
    "title": "Class VectorArray3d | ViRGIS VR GIS",
    "keywords": "Class VectorArray3d Inheritance Object VectorArray3 < Double > VectorArray3d Inherited Members VectorArray3<Double>.array VectorArray3<Double>.Count VectorArray3<Double>.GetEnumerator() VectorArray3<Double>.Resize(Int32) VectorArray3<Double>.Set(Int32, Double, Double, Double) VectorArray3<Double>.Set(Int32, Int32, VectorArray3<Double>) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class VectorArray3d : VectorArray3<double>, IEnumerable<double>, IEnumerable Constructors | Improve this Doc View Source VectorArray3d(Double[]) Declaration public VectorArray3d(double[] data) Parameters Type Name Description Double [] data | Improve this Doc View Source VectorArray3d(Int32, Boolean) Declaration public VectorArray3d(int nCount, bool debug = false) Parameters Type Name Description Int32 nCount Boolean debug Properties | Improve this Doc View Source Item[Int32] Declaration public Vector3d this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Vector3d Methods | Improve this Doc View Source AsVector3d() Declaration public IEnumerable<Vector3d> AsVector3d() Returns Type Description IEnumerable < Vector3d >"
  },
  "api/g3.VectorArray3f.html": {
    "href": "api/g3.VectorArray3f.html",
    "title": "Class VectorArray3f | ViRGIS VR GIS",
    "keywords": "Class VectorArray3f Inheritance Object VectorArray3 < Single > VectorArray3f Inherited Members VectorArray3<Single>.array VectorArray3<Single>.Count VectorArray3<Single>.GetEnumerator() VectorArray3<Single>.Resize(Int32) VectorArray3<Single>.Set(Int32, Single, Single, Single) VectorArray3<Single>.Set(Int32, Int32, VectorArray3<Single>) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class VectorArray3f : VectorArray3<float>, IEnumerable<float>, IEnumerable Constructors | Improve this Doc View Source VectorArray3f(Int32) Declaration public VectorArray3f(int nCount) Parameters Type Name Description Int32 nCount | Improve this Doc View Source VectorArray3f(Single[]) Declaration public VectorArray3f(float[] data) Parameters Type Name Description Single [] data Properties | Improve this Doc View Source Item[Int32] Declaration public Vector3f this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Vector3f Methods | Improve this Doc View Source AsVector3f() Declaration public IEnumerable<Vector3f> AsVector3f() Returns Type Description IEnumerable < Vector3f >"
  },
  "api/g3.VectorArray3i.html": {
    "href": "api/g3.VectorArray3i.html",
    "title": "Class VectorArray3i | ViRGIS VR GIS",
    "keywords": "Class VectorArray3i Inheritance Object VectorArray3 < Int32 > VectorArray3i Inherited Members VectorArray3<Int32>.array VectorArray3<Int32>.Count VectorArray3<Int32>.GetEnumerator() VectorArray3<Int32>.Resize(Int32) VectorArray3<Int32>.Set(Int32, Int32, Int32, Int32) VectorArray3<Int32>.Set(Int32, Int32, VectorArray3<Int32>) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class VectorArray3i : VectorArray3<int>, IEnumerable<int>, IEnumerable Constructors | Improve this Doc View Source VectorArray3i(Int32) Declaration public VectorArray3i(int nCount) Parameters Type Name Description Int32 nCount | Improve this Doc View Source VectorArray3i(Int32[]) Declaration public VectorArray3i(int[] data) Parameters Type Name Description Int32 [] data Properties | Improve this Doc View Source Item[Int32] Declaration public Vector3i this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Vector3i Methods | Improve this Doc View Source AsVector3i() Declaration public IEnumerable<Vector3i> AsVector3i() Returns Type Description IEnumerable < Vector3i > | Improve this Doc View Source Set(Int32, Int32, Int32, Int32, Boolean) Declaration public void Set(int i, int a, int b, int c, bool bCycle = false) Parameters Type Name Description Int32 i Int32 a Int32 b Int32 c Boolean bCycle"
  },
  "api/g3.VectorArray4-1.html": {
    "href": "api/g3.VectorArray4-1.html",
    "title": "Class VectorArray4<T> | ViRGIS VR GIS",
    "keywords": "Class VectorArray4<T> Inheritance Object VectorArray4<T> IndexArray4i Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class VectorArray4<T> : IEnumerable<T>, IEnumerable Type Parameters Name Description T Constructors | Improve this Doc View Source VectorArray4(T[]) Declaration public VectorArray4(T[] data) Parameters Type Name Description T[] data | Improve this Doc View Source VectorArray4(Int32) Declaration public VectorArray4(int nCount = 0) Parameters Type Name Description Int32 nCount Fields | Improve this Doc View Source array Declaration public T[] array Field Value Type Description T[] Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> | Improve this Doc View Source Resize(Int32) Declaration public void Resize(int Count) Parameters Type Name Description Int32 Count | Improve this Doc View Source Set(Int32, T, T, T, T) Declaration public void Set(int i, T a, T b, T c, T d) Parameters Type Name Description Int32 i T a T b T c T d | Improve this Doc View Source Set(Int32, Int32, VectorArray4<T>) Declaration public void Set(int iStart, int iCount, VectorArray4<T> source) Parameters Type Name Description Int32 iStart Int32 iCount VectorArray4 <T> source"
  },
  "api/g3.VertexConstraint.html": {
    "href": "api/g3.VertexConstraint.html",
    "title": "Struct VertexConstraint | ViRGIS VR GIS",
    "keywords": "Struct VertexConstraint Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct VertexConstraint Constructors | Improve this Doc View Source VertexConstraint(IProjectionTarget) Declaration public VertexConstraint(IProjectionTarget target) Parameters Type Name Description IProjectionTarget target | Improve this Doc View Source VertexConstraint(Boolean, Int32) Declaration public VertexConstraint(bool isFixed, int setID = -1) Parameters Type Name Description Boolean isFixed Int32 setID Fields | Improve this Doc View Source Fixed Declaration public bool Fixed Field Value Type Description Boolean | Improve this Doc View Source FixedSetID Declaration public int FixedSetID Field Value Type Description Int32 | Improve this Doc View Source InvalidSetID Declaration public const int InvalidSetID = -1 Field Value Type Description Int32 | Improve this Doc View Source Pinned Declaration public static readonly VertexConstraint Pinned Field Value Type Description VertexConstraint | Improve this Doc View Source Target Declaration public IProjectionTarget Target Field Value Type Description IProjectionTarget | Improve this Doc View Source Unconstrained Declaration public static readonly VertexConstraint Unconstrained Field Value Type Description VertexConstraint"
  },
  "api/g3.VerticalGeneralizedCylinderGenerator.html": {
    "href": "api/g3.VerticalGeneralizedCylinderGenerator.html",
    "title": "Class VerticalGeneralizedCylinderGenerator | ViRGIS VR GIS",
    "keywords": "Class VerticalGeneralizedCylinderGenerator Inheritance Object MeshGenerator VerticalGeneralizedCylinderGenerator Radial3DArrowGenerator Inherited Members MeshGenerator.vertices MeshGenerator.uv MeshGenerator.normals MeshGenerator.triangles MeshGenerator.groups MeshGenerator.WantUVs MeshGenerator.WantNormals MeshGenerator.WantGroups MeshGenerator.Clockwise MeshGenerator.MakeMesh(SimpleMesh) MeshGenerator.MakeSimpleMesh() MeshGenerator.MakeMesh(DMesh3) MeshGenerator.MakeDMesh() MeshGenerator.MakeMesh(NTMesh3) MeshGenerator.MakeNTMesh() MeshGenerator.duplicate_vertex_span(Int32, Int32) MeshGenerator.append_disc(Int32, Int32, Int32, Boolean, Boolean, Int32, Int32) MeshGenerator.append_rectangle(Int32, Int32, Int32, Int32, Boolean, Int32, Int32) MeshGenerator.append_2d_disc_segment(Int32, Int32, Int32, Int32, Boolean, Int32, Int32, Int32, Double) MeshGenerator.estimate_normal(Int32, Int32, Int32) MeshGenerator.bilerp(Vector3d, Vector3d, Vector3d, Vector3d, Double, Double) MeshGenerator.bilerp(Vector2d, Vector2d, Vector2d, Vector2d, Double, Double) MeshGenerator.bilerp(Vector2f, Vector2f, Vector2f, Vector2f, Single, Single) MeshGenerator.bilerp(Vector3i, Vector3i, Vector3i, Vector3i, Double, Double) MeshGenerator.lerp(Vector3i, Vector3i, Double) Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class VerticalGeneralizedCylinderGenerator : MeshGenerator Fields | Improve this Doc View Source Capped Declaration public bool Capped Field Value Type Description Boolean | Improve this Doc View Source endCapCenterIndex Declaration public int endCapCenterIndex Field Value Type Description Int32 | Improve this Doc View Source NoSharedVertices Declaration public bool NoSharedVertices Field Value Type Description Boolean | Improve this Doc View Source Sections Declaration public MeshGenerator.CircularSection[] Sections Field Value Type Description MeshGenerator.CircularSection [] | Improve this Doc View Source Slices Declaration public int Slices Field Value Type Description Int32 | Improve this Doc View Source startCapCenterIndex Declaration public int startCapCenterIndex Field Value Type Description Int32 Methods | Improve this Doc View Source Generate() Declaration public override MeshGenerator Generate() Returns Type Description MeshGenerator Overrides MeshGenerator.Generate()"
  },
  "api/g3.VoxelSurfaceGenerator.html": {
    "href": "api/g3.VoxelSurfaceGenerator.html",
    "title": "Class VoxelSurfaceGenerator | ViRGIS VR GIS",
    "keywords": "Class VoxelSurfaceGenerator Inheritance Object VoxelSurfaceGenerator Namespace : g3 Assembly : geometry3Sharp.dll Syntax public class VoxelSurfaceGenerator Fields | Improve this Doc View Source CapAtBoundary Declaration public bool CapAtBoundary Field Value Type Description Boolean | Improve this Doc View Source Clockwise Declaration public bool Clockwise Field Value Type Description Boolean | Improve this Doc View Source ColorSourceF Declaration public Func<Vector3i, Colorf> ColorSourceF Field Value Type Description Func < Vector3i , Colorf > | Improve this Doc View Source MaxMeshElementCount Declaration public int MaxMeshElementCount Field Value Type Description Int32 | Improve this Doc View Source Meshes Declaration public List<DMesh3> Meshes Field Value Type Description List < DMesh3 > | Improve this Doc View Source SkipInteriorFaces Declaration public bool SkipInteriorFaces Field Value Type Description Boolean | Improve this Doc View Source Voxels Declaration public IBinaryVoxelGrid Voxels Field Value Type Description IBinaryVoxelGrid Methods | Improve this Doc View Source Generate() Declaration public void Generate()"
  },
  "api/g3.WriteMesh.html": {
    "href": "api/g3.WriteMesh.html",
    "title": "Struct WriteMesh | ViRGIS VR GIS",
    "keywords": "Struct WriteMesh Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct WriteMesh Constructors | Improve this Doc View Source WriteMesh(IMesh, String) Declaration public WriteMesh(IMesh mesh, string name = \"\") Parameters Type Name Description IMesh mesh String name Fields | Improve this Doc View Source Materials Declaration public List<GenericMaterial> Materials Field Value Type Description List < GenericMaterial > | Improve this Doc View Source Mesh Declaration public IMesh Mesh Field Value Type Description IMesh | Improve this Doc View Source Name Declaration public string Name Field Value Type Description String | Improve this Doc View Source TriToMaterialMap Declaration public IIndexMap TriToMaterialMap Field Value Type Description IIndexMap | Improve this Doc View Source UVs Declaration public DenseUVMesh UVs Field Value Type Description DenseUVMesh"
  },
  "api/g3.WriteOptions.html": {
    "href": "api/g3.WriteOptions.html",
    "title": "Struct WriteOptions | ViRGIS VR GIS",
    "keywords": "Struct WriteOptions Namespace : g3 Assembly : geometry3Sharp.dll Syntax public struct WriteOptions Fields | Improve this Doc View Source AsciiHeaderFunc Declaration public Func<string> AsciiHeaderFunc Field Value Type Description Func < String > | Improve this Doc View Source bCombineMeshes Declaration public bool bCombineMeshes Field Value Type Description Boolean | Improve this Doc View Source bPerVertexColors Declaration public bool bPerVertexColors Field Value Type Description Boolean | Improve this Doc View Source bPerVertexNormals Declaration public bool bPerVertexNormals Field Value Type Description Boolean | Improve this Doc View Source bPerVertexUVs Declaration public bool bPerVertexUVs Field Value Type Description Boolean | Improve this Doc View Source bWriteBinary Declaration public bool bWriteBinary Field Value Type Description Boolean | Improve this Doc View Source bWriteGroups Declaration public bool bWriteGroups Field Value Type Description Boolean | Improve this Doc View Source bWriteMaterials Declaration public bool bWriteMaterials Field Value Type Description Boolean | Improve this Doc View Source Defaults Declaration public static readonly WriteOptions Defaults Field Value Type Description WriteOptions | Improve this Doc View Source GroupNameF Declaration public Func<int, string> GroupNameF Field Value Type Description Func < Int32 , String > | Improve this Doc View Source groupNamePrefix Declaration public string groupNamePrefix Field Value Type Description String | Improve this Doc View Source MaterialFilePath Declaration public string MaterialFilePath Field Value Type Description String | Improve this Doc View Source ProgressFunc Declaration public Action<int, int> ProgressFunc Field Value Type Description Action < Int32 , Int32 > | Improve this Doc View Source RealPrecisionDigits Declaration public int RealPrecisionDigits Field Value Type Description Int32"
  },
  "api/GeoJSON.Net.Converters.CrsConverter.html": {
    "href": "api/GeoJSON.Net.Converters.CrsConverter.html",
    "title": "Class CrsConverter | ViRGIS VR GIS",
    "keywords": "Class CrsConverter Converts ICRSObject types to and from JSON. Inheritance Object Newtonsoft.Json.JsonConverter CrsConverter Namespace : GeoJSON.Net.Converters Assembly : Assembly-CSharp.dll Syntax public class CrsConverter : JsonConverter Methods | Improve this Doc View Source CanConvert(Type) Determines whether this instance can convert the specified object type. Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Type of the object. Returns Type Description Boolean true if this instance can convert the specified object type; otherwise, false . Overrides Newtonsoft.Json.JsonConverter.CanConvert(System.Type) | Improve this Doc View Source ReadJson(JsonReader, Type, Object, JsonSerializer) Reads the JSON representation of the object. Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader The Newtonsoft.Json.JsonReader to read from. Type objectType Type of the object. Object existingValue The existing value of object being read. Newtonsoft.Json.JsonSerializer serializer The calling serializer. Returns Type Description Object The object value. Overrides Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) Exceptions Type Condition Newtonsoft.Json.JsonReaderException CRS must be null or a json object or CRS must have a \"type\" property | Improve this Doc View Source WriteJson(JsonWriter, Object, JsonSerializer) Writes the JSON representation of the object. Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer The Newtonsoft.Json.JsonWriter to write to. Object value The value. Newtonsoft.Json.JsonSerializer serializer The calling serializer. Overrides Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer) Exceptions Type Condition ArgumentOutOfRangeException"
  },
  "api/GeoJSON.Net.Converters.GeoJsonConverter.html": {
    "href": "api/GeoJSON.Net.Converters.GeoJsonConverter.html",
    "title": "Class GeoJsonConverter | ViRGIS VR GIS",
    "keywords": "Class GeoJsonConverter Converts IGeoJSONObject types to and from JSON. Inheritance Object Newtonsoft.Json.JsonConverter GeoJsonConverter Namespace : GeoJSON.Net.Converters Assembly : Assembly-CSharp.dll Syntax public class GeoJsonConverter : JsonConverter Methods | Improve this Doc View Source CanConvert(Type) Determines whether this instance can convert the specified object type. Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Type of the object. Returns Type Description Boolean true if this instance can convert the specified object type; otherwise, false . Overrides Newtonsoft.Json.JsonConverter.CanConvert(System.Type) | Improve this Doc View Source ReadJson(JsonReader, Type, Object, JsonSerializer) Reads the JSON representation of the object. Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader The Newtonsoft.Json.JsonReader to read from. Type objectType Type of the object. Object existingValue The existing value of object being read. Newtonsoft.Json.JsonSerializer serializer The calling serializer. Returns Type Description Object The object value. Overrides Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) | Improve this Doc View Source WriteJson(JsonWriter, Object, JsonSerializer) Writes the JSON representation of the object. Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer The Newtonsoft.Json.JsonWriter to write to. Object value The value. Newtonsoft.Json.JsonSerializer serializer The calling serializer. Overrides Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer)"
  },
  "api/GeoJSON.Net.Converters.GeometryConverter.html": {
    "href": "api/GeoJSON.Net.Converters.GeometryConverter.html",
    "title": "Class GeometryConverter | ViRGIS VR GIS",
    "keywords": "Class GeometryConverter Converts IGeometryObject types to and from JSON. Inheritance Object Newtonsoft.Json.JsonConverter GeometryConverter Namespace : GeoJSON.Net.Converters Assembly : Assembly-CSharp.dll Syntax public class GeometryConverter : JsonConverter Methods | Improve this Doc View Source CanConvert(Type) Determines whether this instance can convert the specified object type. Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Type of the object. Returns Type Description Boolean true if this instance can convert the specified object type; otherwise, false . Overrides Newtonsoft.Json.JsonConverter.CanConvert(System.Type) | Improve this Doc View Source ReadJson(JsonReader, Type, Object, JsonSerializer) Reads the JSON representation of the object. Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader The Newtonsoft.Json.JsonReader to read from. Type objectType Type of the object. Object existingValue The existing value of object being read. Newtonsoft.Json.JsonSerializer serializer The calling serializer. Returns Type Description Object The object value. Overrides Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) | Improve this Doc View Source WriteJson(JsonWriter, Object, JsonSerializer) Writes the JSON representation of the object. Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer The Newtonsoft.Json.JsonWriter to write to. Object value The value. Newtonsoft.Json.JsonSerializer serializer The calling serializer. Overrides Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer)"
  },
  "api/GeoJSON.Net.Converters.html": {
    "href": "api/GeoJSON.Net.Converters.html",
    "title": "Namespace GeoJSON.Net.Converters | ViRGIS VR GIS",
    "keywords": "Namespace GeoJSON.Net.Converters Classes CrsConverter Converts ICRSObject types to and from JSON. GeoJsonConverter Converts IGeoJSONObject types to and from JSON. GeometryConverter Converts IGeometryObject types to and from JSON. LineStringEnumerableConverter Converter to read and write the IEnumerable<T> type. PointEnumerableConverter Converter to read and write the IEnumerable<T> type. PolygonEnumerableConverter Converter to read and write the IEnumerable<T> type. PositionConverter Converter to read and write an IPosition , that is, the coordinates of a Point . PositionEnumerableConverter Converter to read and write the IEnumerable<T> type. TypeExtensions"
  },
  "api/GeoJSON.Net.Converters.LineStringEnumerableConverter.html": {
    "href": "api/GeoJSON.Net.Converters.LineStringEnumerableConverter.html",
    "title": "Class LineStringEnumerableConverter | ViRGIS VR GIS",
    "keywords": "Class LineStringEnumerableConverter Converter to read and write the IEnumerable<T> type. Inheritance Object Newtonsoft.Json.JsonConverter LineStringEnumerableConverter Namespace : GeoJSON.Net.Converters Assembly : Assembly-CSharp.dll Syntax public class LineStringEnumerableConverter : JsonConverter Methods | Improve this Doc View Source CanConvert(Type) Determines whether this instance can convert the specified object type. Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Type of the object. Returns Type Description Boolean true if this instance can convert the specified object type; otherwise, false . Overrides Newtonsoft.Json.JsonConverter.CanConvert(System.Type) | Improve this Doc View Source ReadJson(JsonReader, Type, Object, JsonSerializer) Reads the JSON representation of the object. Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader The Newtonsoft.Json.JsonReader to read from. Type objectType Type of the object. Object existingValue The existing value of object being read. Newtonsoft.Json.JsonSerializer serializer The calling serializer. Returns Type Description Object The object value. Overrides Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) | Improve this Doc View Source WriteJson(JsonWriter, Object, JsonSerializer) Writes the JSON representation of the object. Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer The Newtonsoft.Json.JsonWriter to write to. Object value The value. Newtonsoft.Json.JsonSerializer serializer The calling serializer. Overrides Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer)"
  },
  "api/GeoJSON.Net.Converters.PointEnumerableConverter.html": {
    "href": "api/GeoJSON.Net.Converters.PointEnumerableConverter.html",
    "title": "Class PointEnumerableConverter | ViRGIS VR GIS",
    "keywords": "Class PointEnumerableConverter Converter to read and write the IEnumerable<T> type. Inheritance Object Newtonsoft.Json.JsonConverter PointEnumerableConverter Namespace : GeoJSON.Net.Converters Assembly : Assembly-CSharp.dll Syntax public class PointEnumerableConverter : JsonConverter Methods | Improve this Doc View Source CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Returns Type Description Boolean Overrides Newtonsoft.Json.JsonConverter.CanConvert(System.Type) | Improve this Doc View Source ReadJson(JsonReader, Type, Object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader Type objectType Object existingValue Newtonsoft.Json.JsonSerializer serializer Returns Type Description Object Overrides Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) | Improve this Doc View Source WriteJson(JsonWriter, Object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer Object value Newtonsoft.Json.JsonSerializer serializer Overrides Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer)"
  },
  "api/GeoJSON.Net.Converters.PolygonEnumerableConverter.html": {
    "href": "api/GeoJSON.Net.Converters.PolygonEnumerableConverter.html",
    "title": "Class PolygonEnumerableConverter | ViRGIS VR GIS",
    "keywords": "Class PolygonEnumerableConverter Converter to read and write the IEnumerable<T> type. Inheritance Object Newtonsoft.Json.JsonConverter PolygonEnumerableConverter Namespace : GeoJSON.Net.Converters Assembly : Assembly-CSharp.dll Syntax public class PolygonEnumerableConverter : JsonConverter Methods | Improve this Doc View Source CanConvert(Type) Determines whether this instance can convert the specified object type. Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Type of the object. Returns Type Description Boolean true if this instance can convert the specified object type; otherwise, false . Overrides Newtonsoft.Json.JsonConverter.CanConvert(System.Type) | Improve this Doc View Source ReadJson(JsonReader, Type, Object, JsonSerializer) Reads the JSON representation of the object. Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader The Newtonsoft.Json.JsonReader to read from. Type objectType Type of the object. Object existingValue The existing value of object being read. Newtonsoft.Json.JsonSerializer serializer The calling serializer. Returns Type Description Object The object value. Overrides Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) | Improve this Doc View Source WriteJson(JsonWriter, Object, JsonSerializer) Writes the JSON representation of the object. Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer The Newtonsoft.Json.JsonWriter to write to. Object value The value. Newtonsoft.Json.JsonSerializer serializer The calling serializer. Overrides Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer)"
  },
  "api/GeoJSON.Net.Converters.PositionConverter.html": {
    "href": "api/GeoJSON.Net.Converters.PositionConverter.html",
    "title": "Class PositionConverter | ViRGIS VR GIS",
    "keywords": "Class PositionConverter Converter to read and write an IPosition , that is, the coordinates of a Point . Inheritance Object Newtonsoft.Json.JsonConverter PositionConverter Namespace : GeoJSON.Net.Converters Assembly : Assembly-CSharp.dll Syntax public class PositionConverter : JsonConverter Methods | Improve this Doc View Source CanConvert(Type) Determines whether this instance can convert the specified object type. Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Type of the object. Returns Type Description Boolean true if this instance can convert the specified object type; otherwise, false . Overrides Newtonsoft.Json.JsonConverter.CanConvert(System.Type) | Improve this Doc View Source ReadJson(JsonReader, Type, Object, JsonSerializer) Reads the JSON representation of the object. Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader The Newtonsoft.Json.JsonReader to read from. Type objectType Type of the object. Object existingValue The existing value of object being read. Newtonsoft.Json.JsonSerializer serializer The calling serializer. Returns Type Description Object The object value. Overrides Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) | Improve this Doc View Source WriteJson(JsonWriter, Object, JsonSerializer) Writes the JSON representation of the object. Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer The Newtonsoft.Json.JsonWriter to write to. Object value The value. Newtonsoft.Json.JsonSerializer serializer The calling serializer. Overrides Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer)"
  },
  "api/GeoJSON.Net.Converters.PositionEnumerableConverter.html": {
    "href": "api/GeoJSON.Net.Converters.PositionEnumerableConverter.html",
    "title": "Class PositionEnumerableConverter | ViRGIS VR GIS",
    "keywords": "Class PositionEnumerableConverter Converter to read and write the IEnumerable<T> type. Inheritance Object Newtonsoft.Json.JsonConverter PositionEnumerableConverter Namespace : GeoJSON.Net.Converters Assembly : Assembly-CSharp.dll Syntax public class PositionEnumerableConverter : JsonConverter Methods | Improve this Doc View Source CanConvert(Type) Determines whether this instance can convert the specified object type. Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Type of the object. Returns Type Description Boolean true if this instance can convert the specified object type; otherwise, false . Overrides Newtonsoft.Json.JsonConverter.CanConvert(System.Type) | Improve this Doc View Source ReadJson(JsonReader, Type, Object, JsonSerializer) Reads the JSON representation of the object. Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader The Newtonsoft.Json.JsonReader to read from. Type objectType Type of the object. Object existingValue The existing value of object being read. Newtonsoft.Json.JsonSerializer serializer The calling serializer. Returns Type Description Object The object value. Overrides Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) | Improve this Doc View Source WriteJson(JsonWriter, Object, JsonSerializer) Writes the JSON representation of the object. Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer The Newtonsoft.Json.JsonWriter to write to. Object value The value. Newtonsoft.Json.JsonSerializer serializer The calling serializer. Overrides Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer)"
  },
  "api/GeoJSON.Net.Converters.TypeExtensions.html": {
    "href": "api/GeoJSON.Net.Converters.TypeExtensions.html",
    "title": "Class TypeExtensions | ViRGIS VR GIS",
    "keywords": "Class TypeExtensions Inheritance Object TypeExtensions Namespace : GeoJSON.Net.Converters Assembly : Assembly-CSharp.dll Syntax public static class TypeExtensions Methods | Improve this Doc View Source IsAssignableFromType(Type, Type) Encapsulates the framework-dependent preprocessor guards. Declaration public static bool IsAssignableFromType(this Type self, Type other) Parameters Type Name Description Type self Type other Returns Type Description Boolean"
  },
  "api/GeoJSON.Net.CoordinateReferenceSystem.CRSBase.html": {
    "href": "api/GeoJSON.Net.CoordinateReferenceSystem.CRSBase.html",
    "title": "Class CRSBase | ViRGIS VR GIS",
    "keywords": "Class CRSBase Base class for all IGeometryObject implementing types Inheritance Object CRSBase LinkedCRS NamedCRS Namespace : GeoJSON.Net.CoordinateReferenceSystem Assembly : Assembly-CSharp.dll Syntax [JsonObject(MemberSerialization.OptIn)] public abstract class CRSBase : IEqualityComparer<CRSBase>, IEquatable<CRSBase> Properties | Improve this Doc View Source Properties Gets the properties. Declaration [JsonProperty(PropertyName = \"properties\", Required = Required.Always)] public Dictionary<string, object> Properties { get; } Property Value Type Description Dictionary < String , Object > | Improve this Doc View Source Type Gets the type of the GeometryObject object. Declaration [JsonProperty(PropertyName = \"type\", Required = Required.Always)] [JsonConverter(typeof(StringEnumConverter))] public CRSType Type { get; } Property Value Type Description CRSType Methods | Improve this Doc View Source Equals(CRSBase) Determines whether the specified object is equal to the current object Declaration public bool Equals(CRSBase other) Parameters Type Name Description CRSBase other Returns Type Description Boolean | Improve this Doc View Source Equals(CRSBase, CRSBase) Determines whether the specified object instances are considered equal Declaration public bool Equals(CRSBase left, CRSBase right) Parameters Type Name Description CRSBase left CRSBase right Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Determines whether the specified object is equal to the current object Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Returns the hash code for this instance Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() | Improve this Doc View Source GetHashCode(CRSBase) Returns the hash code for the specified object Declaration public int GetHashCode(CRSBase obj) Parameters Type Name Description CRSBase obj Returns Type Description Int32 Operators | Improve this Doc View Source Equality(CRSBase, CRSBase) Determines whether the specified object instances are considered equal Declaration public static bool operator ==(CRSBase left, CRSBase right) Parameters Type Name Description CRSBase left CRSBase right Returns Type Description Boolean | Improve this Doc View Source Inequality(CRSBase, CRSBase) Determines whether the specified object instances are not considered equal Declaration public static bool operator !=(CRSBase left, CRSBase right) Parameters Type Name Description CRSBase left CRSBase right Returns Type Description Boolean"
  },
  "api/GeoJSON.Net.CoordinateReferenceSystem.CRSType.html": {
    "href": "api/GeoJSON.Net.CoordinateReferenceSystem.CRSType.html",
    "title": "Enum CRSType | ViRGIS VR GIS",
    "keywords": "Enum CRSType Defines the GeoJSON Coordinate Reference System Objects (CRS) types as originally defined in the geojson.org v1.0 spec Namespace : GeoJSON.Net.CoordinateReferenceSystem Assembly : Assembly-CSharp.dll Syntax public enum CRSType Remarks Originally defined http://geojson.org/geojson-spec.html#coordinate-reference-system-objects The current RFC removes the CRS type, but allows to be left in for backwards compatibility. See https://tools.ietf.org/html/rfc7946#section-4 Fields Name Description Link Defines the Linked CRS type. Name Defines the Named CRS type. Unspecified Defines a CRS type where the CRS cannot be assumed"
  },
  "api/GeoJSON.Net.CoordinateReferenceSystem.DefaultCRS.html": {
    "href": "api/GeoJSON.Net.CoordinateReferenceSystem.DefaultCRS.html",
    "title": "Class DefaultCRS | ViRGIS VR GIS",
    "keywords": "Class DefaultCRS The default CRS is a geographic coordinate reference system, using the WGS84 datum, and with longitude and latitude units of decimal degrees. see https://tools.ietf.org/html/rfc7946#section-4 Inheritance Object CRSBase NamedCRS DefaultCRS Implements ICRSObject Inherited Members CRSBase.Properties CRSBase.Type CRSBase.Equals(Object) CRSBase.Equals(CRSBase) CRSBase.Equals(CRSBase, CRSBase) CRSBase.GetHashCode() CRSBase.GetHashCode(CRSBase) Namespace : GeoJSON.Net.CoordinateReferenceSystem Assembly : Assembly-CSharp.dll Syntax public class DefaultCRS : NamedCRS, IEqualityComparer<CRSBase>, IEquatable<CRSBase>, ICRSObject Remarks Defines the GeoJSON Coordinate Reference System Objects (CRS) types originally defined in the geojson.org v1.0 spec see http://geojson.org/geojson-spec.html#coordinate-reference-system-objects . The current RFC removes the CRS type, but allows to be left in for backwards compatibility. See https://tools.ietf.org/html/rfc7946#section-4 Properties | Improve this Doc View Source Instance Gets the instance. Declaration public static DefaultCRS Instance { get; } Property Value Type Description DefaultCRS The instance. Implements ICRSObject"
  },
  "api/GeoJSON.Net.CoordinateReferenceSystem.html": {
    "href": "api/GeoJSON.Net.CoordinateReferenceSystem.html",
    "title": "Namespace GeoJSON.Net.CoordinateReferenceSystem | ViRGIS VR GIS",
    "keywords": "Namespace GeoJSON.Net.CoordinateReferenceSystem Classes CRSBase Base class for all IGeometryObject implementing types DefaultCRS The default CRS is a geographic coordinate reference system, using the WGS84 datum, and with longitude and latitude units of decimal degrees. see https://tools.ietf.org/html/rfc7946#section-4 LinkedCRS Defines the Linked CRS type. NamedCRS Defines the Named CRS type. UnspecifiedCRS Represents an unspecified Coordinate Reference System i.e. where a geojson object has a null crs Interfaces ICRSObject Base Interface for CRSBase Object types. Enums CRSType Defines the GeoJSON Coordinate Reference System Objects (CRS) types as originally defined in the geojson.org v1.0 spec"
  },
  "api/GeoJSON.Net.CoordinateReferenceSystem.ICRSObject.html": {
    "href": "api/GeoJSON.Net.CoordinateReferenceSystem.ICRSObject.html",
    "title": "Interface ICRSObject | ViRGIS VR GIS",
    "keywords": "Interface ICRSObject Base Interface for CRSBase Object types. Namespace : GeoJSON.Net.CoordinateReferenceSystem Assembly : Assembly-CSharp.dll Syntax public interface ICRSObject Properties | Improve this Doc View Source Type Gets the CRS type. Declaration CRSType Type { get; } Property Value Type Description CRSType"
  },
  "api/GeoJSON.Net.CoordinateReferenceSystem.LinkedCRS.html": {
    "href": "api/GeoJSON.Net.CoordinateReferenceSystem.LinkedCRS.html",
    "title": "Class LinkedCRS | ViRGIS VR GIS",
    "keywords": "Class LinkedCRS Defines the Linked CRS type. Inheritance Object CRSBase LinkedCRS Implements ICRSObject Inherited Members CRSBase.Properties CRSBase.Type CRSBase.Equals(Object) CRSBase.Equals(CRSBase) CRSBase.Equals(CRSBase, CRSBase) CRSBase.GetHashCode() CRSBase.GetHashCode(CRSBase) Namespace : GeoJSON.Net.CoordinateReferenceSystem Assembly : Assembly-CSharp.dll Syntax public class LinkedCRS : CRSBase, IEqualityComparer<CRSBase>, IEquatable<CRSBase>, ICRSObject Remarks This was originally defined in the spec http://geojson.org/geojson-spec.html#named-crs The current RFC removes the CRS type, but allows to be left in for backwards compatibility. See https://tools.ietf.org/html/rfc7946#section-4 Constructors | Improve this Doc View Source LinkedCRS(String, String) Initializes a new instance of the LinkedCRS class. Declaration public LinkedCRS(string href, string type = \"\") Parameters Type Name Description String href The mandatory href member must be a dereferenceable URI. String type The optional type member will be put in the properties Dictionary | Improve this Doc View Source LinkedCRS(Uri, String) Initializes a new instance of the LinkedCRS class. Declaration public LinkedCRS(Uri href, string type = \"\") Parameters Type Name Description Uri href The mandatory href member must be a dereferenceable URI. String type The optional type member will be put in the properties Dictionary Implements ICRSObject"
  },
  "api/GeoJSON.Net.CoordinateReferenceSystem.NamedCRS.html": {
    "href": "api/GeoJSON.Net.CoordinateReferenceSystem.NamedCRS.html",
    "title": "Class NamedCRS | ViRGIS VR GIS",
    "keywords": "Class NamedCRS Defines the Named CRS type. Inheritance Object CRSBase NamedCRS DefaultCRS Implements ICRSObject Inherited Members CRSBase.Properties CRSBase.Type CRSBase.Equals(Object) CRSBase.Equals(CRSBase) CRSBase.Equals(CRSBase, CRSBase) CRSBase.GetHashCode() CRSBase.GetHashCode(CRSBase) Namespace : GeoJSON.Net.CoordinateReferenceSystem Assembly : Assembly-CSharp.dll Syntax public class NamedCRS : CRSBase, IEqualityComparer<CRSBase>, IEquatable<CRSBase>, ICRSObject Remarks See http://geojson.org/geojson-spec.html#named-crs The current RFC removes the CRS type, but allows to be left in for backwards compatibility. See https://tools.ietf.org/html/rfc7946#section-4 Constructors | Improve this Doc View Source NamedCRS(String) Initializes a new instance of the NamedCRS class. Declaration public NamedCRS(string name) Parameters Type Name Description String name The mandatory name member must be a string identifying a coordinate reference system. OGC CRS URNs such as 'urn:ogc:def:crs:OGC:1.3:CRS84' shall be preferred over legacy identifiers such as 'EPSG:4326'. Implements ICRSObject"
  },
  "api/GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.html": {
    "href": "api/GeoJSON.Net.CoordinateReferenceSystem.UnspecifiedCRS.html",
    "title": "Class UnspecifiedCRS | ViRGIS VR GIS",
    "keywords": "Class UnspecifiedCRS Represents an unspecified Coordinate Reference System i.e. where a geojson object has a null crs Inheritance Object UnspecifiedCRS Implements ICRSObject Namespace : GeoJSON.Net.CoordinateReferenceSystem Assembly : Assembly-CSharp.dll Syntax public class UnspecifiedCRS : ICRSObject Properties | Improve this Doc View Source Type Gets the CRS type. Declaration public CRSType Type { get; } Property Value Type Description CRSType Methods | Improve this Doc View Source Equals(ICRSObject) Determines whether the specified object is equal to the current object Declaration public bool Equals(ICRSObject obj) Parameters Type Name Description ICRSObject obj Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Determines whether the specified object is equal to the current object Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Returns the hash code for this instance Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() Operators | Improve this Doc View Source Equality(UnspecifiedCRS, UnspecifiedCRS) Determines whether the specified object instances are considered equal Declaration public static bool operator ==(UnspecifiedCRS left, UnspecifiedCRS right) Parameters Type Name Description UnspecifiedCRS left UnspecifiedCRS right Returns Type Description Boolean | Improve this Doc View Source Inequality(UnspecifiedCRS, UnspecifiedCRS) Determines whether the specified object instances are not considered equal Declaration public static bool operator !=(UnspecifiedCRS left, UnspecifiedCRS right) Parameters Type Name Description UnspecifiedCRS left UnspecifiedCRS right Returns Type Description Boolean Implements ICRSObject"
  },
  "api/GeoJSON.Net.DoubleTenDecimalPlaceComparer.html": {
    "href": "api/GeoJSON.Net.DoubleTenDecimalPlaceComparer.html",
    "title": "Class DoubleTenDecimalPlaceComparer | ViRGIS VR GIS",
    "keywords": "Class DoubleTenDecimalPlaceComparer Compares doubles for equality. Inheritance Object DoubleTenDecimalPlaceComparer Namespace : GeoJSON.Net Assembly : Assembly-CSharp.dll Syntax public class DoubleTenDecimalPlaceComparer : IEqualityComparer<double> Remarks 10 decimal places equates to accuracy to 11.1 μm. Methods | Improve this Doc View Source Equals(Double, Double) Declaration public bool Equals(double x, double y) Parameters Type Name Description Double x Double y Returns Type Description Boolean | Improve this Doc View Source GetHashCode(Double) Declaration public int GetHashCode(double obj) Parameters Type Name Description Double obj Returns Type Description Int32"
  },
  "api/GeoJSON.Net.Feature.Feature.html": {
    "href": "api/GeoJSON.Net.Feature.Feature.html",
    "title": "Class Feature | ViRGIS VR GIS",
    "keywords": "Class Feature A GeoJSON Feature Object. Inheritance Object GeoJSONObject Feature < IGeometryObject , IDictionary < String , Object >> Feature < IGeometryObject > Feature Implements IGeoJSONObject Inherited Members Feature<IGeometryObject>.Equals(Feature<IGeometryObject>) Feature<IGeometryObject>.Equals(Object) Feature<IGeometryObject>.GetHashCode() Feature<IGeometryObject, IDictionary<String, Object>>.Type Feature<IGeometryObject, IDictionary<String, Object>>.Id Feature<IGeometryObject, IDictionary<String, Object>>.Geometry Feature<IGeometryObject, IDictionary<String, Object>>.Properties Feature<IGeometryObject, IDictionary<String, Object>>.Equals(Feature<IGeometryObject, IDictionary<String, Object>>) Feature<IGeometryObject, IDictionary<String, Object>>.Equals(Object) Feature<IGeometryObject, IDictionary<String, Object>>.GetHashCode() GeoJSONObject.BoundingBoxes GeoJSONObject.CRS GeoJSONObject.Type GeoJSONObject.Equals(GeoJSONObject) GeoJSONObject.Equals(GeoJSONObject, GeoJSONObject) GeoJSONObject.GetHashCode(GeoJSONObject) Namespace : GeoJSON.Net.Feature Assembly : Assembly-CSharp.dll Syntax public class Feature : Feature<IGeometryObject>, IGeoJSONObject, IEqualityComparer<GeoJSONObject>, IEquatable<GeoJSONObject>, IEquatable<Feature<IGeometryObject, IDictionary<string, object>>>, IEquatable<Feature<IGeometryObject>> Remarks See https://tools.ietf.org/html/rfc7946#section-3.2 Constructors | Improve this Doc View Source Feature(IGeometryObject, IDictionary<String, Object>, String) Declaration [JsonConstructor] public Feature(IGeometryObject geometry, IDictionary<string, object> properties = null, string id = null) Parameters Type Name Description IGeometryObject geometry IDictionary < String , Object > properties String id | Improve this Doc View Source Feature(IGeometryObject, Object, String) Declaration public Feature(IGeometryObject geometry, object properties, string id = null) Parameters Type Name Description IGeometryObject geometry Object properties String id Implements IGeoJSONObject"
  },
  "api/GeoJSON.Net.Feature.Feature-1.html": {
    "href": "api/GeoJSON.Net.Feature.Feature-1.html",
    "title": "Class Feature<TGeometry> | ViRGIS VR GIS",
    "keywords": "Class Feature<TGeometry> Typed GeoJSON Feature class Inheritance Object GeoJSONObject Feature <TGeometry, IDictionary < String , Object >> Feature<TGeometry> Feature Implements IGeoJSONObject Inherited Members Feature<TGeometry, IDictionary<String, Object>>.Type Feature<TGeometry, IDictionary<String, Object>>.Id Feature<TGeometry, IDictionary<String, Object>>.Geometry Feature<TGeometry, IDictionary<String, Object>>.Properties Feature<TGeometry, IDictionary<String, Object>>.Equals(Feature<TGeometry, IDictionary<String, Object>>) Feature<TGeometry, IDictionary<String, Object>>.Equals(Object) Feature<TGeometry, IDictionary<String, Object>>.GetHashCode() GeoJSONObject.BoundingBoxes GeoJSONObject.CRS GeoJSONObject.Type GeoJSONObject.Equals(GeoJSONObject) GeoJSONObject.Equals(GeoJSONObject, GeoJSONObject) GeoJSONObject.GetHashCode(GeoJSONObject) Namespace : GeoJSON.Net.Feature Assembly : Assembly-CSharp.dll Syntax public class Feature<TGeometry> : Feature<TGeometry, IDictionary<string, object>>, IGeoJSONObject, IEqualityComparer<GeoJSONObject>, IEquatable<GeoJSONObject>, IEquatable<Feature<TGeometry, IDictionary<string, object>>>, IEquatable<Feature<TGeometry>> where TGeometry : IGeometryObject Type Parameters Name Description TGeometry Remarks Returns correctly typed Geometry property Constructors | Improve this Doc View Source Feature(TGeometry, IDictionary<String, Object>, String) Initializes a new instance of the Feature class. Declaration [JsonConstructor] public Feature(TGeometry geometry, IDictionary<string, object> properties = null, string id = null) Parameters Type Name Description TGeometry geometry The Geometry Object. IDictionary < String , Object > properties The properties. String id The (optional) identifier. | Improve this Doc View Source Feature(TGeometry, Object, String) Initializes a new instance of the Feature class. Declaration public Feature(TGeometry geometry, object properties, string id = null) Parameters Type Name Description TGeometry geometry The Geometry Object. Object properties Class used to fill feature properties. Any public member will be added to feature properties String id The (optional) identifier. Methods | Improve this Doc View Source Equals(Feature<TGeometry>) Declaration public bool Equals(Feature<TGeometry> other) Parameters Type Name Description Feature <TGeometry> other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides GeoJSON.Net.Feature.Feature<TGeometry, System.Collections.Generic.IDictionary<System.String, System.Object>>.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides GeoJSON.Net.Feature.Feature<TGeometry, System.Collections.Generic.IDictionary<System.String, System.Object>>.GetHashCode() Operators | Improve this Doc View Source Equality(Feature<TGeometry>, Feature<TGeometry>) Declaration public static bool operator ==(Feature<TGeometry> left, Feature<TGeometry> right) Parameters Type Name Description Feature <TGeometry> left Feature <TGeometry> right Returns Type Description Boolean | Improve this Doc View Source Inequality(Feature<TGeometry>, Feature<TGeometry>) Declaration public static bool operator !=(Feature<TGeometry> left, Feature<TGeometry> right) Parameters Type Name Description Feature <TGeometry> left Feature <TGeometry> right Returns Type Description Boolean Implements IGeoJSONObject"
  },
  "api/GeoJSON.Net.Feature.Feature-2.html": {
    "href": "api/GeoJSON.Net.Feature.Feature-2.html",
    "title": "Class Feature<TGeometry, TProps> | ViRGIS VR GIS",
    "keywords": "Class Feature<TGeometry, TProps> A GeoJSON Feature Object; generic version for strongly typed Geometry and Properties Inheritance Object GeoJSONObject Feature<TGeometry, TProps> Feature<TGeometry> Implements IGeoJSONObject Inherited Members GeoJSONObject.BoundingBoxes GeoJSONObject.CRS GeoJSONObject.Equals(GeoJSONObject) GeoJSONObject.Equals(GeoJSONObject, GeoJSONObject) GeoJSONObject.GetHashCode(GeoJSONObject) Namespace : GeoJSON.Net.Feature Assembly : Assembly-CSharp.dll Syntax public class Feature<TGeometry, TProps> : GeoJSONObject, IGeoJSONObject, IEqualityComparer<GeoJSONObject>, IEquatable<GeoJSONObject>, IEquatable<Feature<TGeometry, TProps>> where TGeometry : IGeometryObject Type Parameters Name Description TGeometry TProps Remarks See https://tools.ietf.org/html/rfc7946#section-3.2 Constructors | Improve this Doc View Source Feature(TGeometry, TProps, String) Declaration [JsonConstructor] public Feature(TGeometry geometry, TProps properties, string id = null) Parameters Type Name Description TGeometry geometry TProps properties String id Properties | Improve this Doc View Source Geometry Declaration [JsonProperty(PropertyName = \"geometry\", Required = Required.AllowNull)] [JsonConverter(typeof(GeometryConverter))] public TGeometry Geometry { get; } Property Value Type Description TGeometry | Improve this Doc View Source Id Declaration [JsonProperty(PropertyName = \"id\", NullValueHandling = NullValueHandling.Ignore)] public string Id { get; } Property Value Type Description String | Improve this Doc View Source Properties Declaration [JsonProperty(PropertyName = \"properties\", Required = Required.AllowNull)] public TProps Properties { get; } Property Value Type Description TProps | Improve this Doc View Source Type Declaration public override GeoJSONObjectType Type { get; } Property Value Type Description GeoJSONObjectType Overrides GeoJSONObject.Type Methods | Improve this Doc View Source Equals(Feature<TGeometry, TProps>) Equality comparer. Declaration public bool Equals(Feature<TGeometry, TProps> other) Parameters Type Name Description Feature <TGeometry, TProps> other Returns Type Description Boolean Remarks In contrast to , this implementation returns true only if Id and Properties are also equal. See #80 for discussion. The rationale here is that a user explicitly specifying the property type most probably cares about the properties equality. | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides GeoJSONObject.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides GeoJSONObject.GetHashCode() Operators | Improve this Doc View Source Equality(Feature<TGeometry, TProps>, Feature<TGeometry, TProps>) Declaration public static bool operator ==(Feature<TGeometry, TProps> left, Feature<TGeometry, TProps> right) Parameters Type Name Description Feature <TGeometry, TProps> left Feature <TGeometry, TProps> right Returns Type Description Boolean | Improve this Doc View Source Inequality(Feature<TGeometry, TProps>, Feature<TGeometry, TProps>) Declaration public static bool operator !=(Feature<TGeometry, TProps> left, Feature<TGeometry, TProps> right) Parameters Type Name Description Feature <TGeometry, TProps> left Feature <TGeometry, TProps> right Returns Type Description Boolean Implements IGeoJSONObject"
  },
  "api/GeoJSON.Net.Feature.FeatureCollection.html": {
    "href": "api/GeoJSON.Net.Feature.FeatureCollection.html",
    "title": "Class FeatureCollection | ViRGIS VR GIS",
    "keywords": "Class FeatureCollection Defines the FeatureCollection type. Inheritance Object GeoJSONObject FeatureCollection Implements IGeoJSONObject Inherited Members GeoJSONObject.BoundingBoxes GeoJSONObject.CRS GeoJSONObject.Equals(GeoJSONObject) GeoJSONObject.Equals(GeoJSONObject, GeoJSONObject) GeoJSONObject.GetHashCode(GeoJSONObject) Namespace : GeoJSON.Net.Feature Assembly : Assembly-CSharp.dll Syntax public class FeatureCollection : GeoJSONObject, IGeoJSONObject, IEqualityComparer<GeoJSONObject>, IEquatable<GeoJSONObject>, IEqualityComparer<FeatureCollection>, IEquatable<FeatureCollection> Constructors | Improve this Doc View Source FeatureCollection() Initializes a new instance of the FeatureCollection class. Declaration public FeatureCollection() | Improve this Doc View Source FeatureCollection(List<Feature>) Initializes a new instance of the FeatureCollection class. Declaration public FeatureCollection(List<Feature> features) Parameters Type Name Description List < Feature > features The features. Properties | Improve this Doc View Source Features Gets the features. Declaration [JsonProperty(PropertyName = \"features\", Required = Required.Always)] public List<Feature> Features { get; } Property Value Type Description List < Feature > The features. | Improve this Doc View Source Type Declaration public override GeoJSONObjectType Type { get; } Property Value Type Description GeoJSONObjectType Overrides GeoJSONObject.Type Methods | Improve this Doc View Source Equals(FeatureCollection) Determines whether the specified object is equal to the current object Declaration public bool Equals(FeatureCollection other) Parameters Type Name Description FeatureCollection other Returns Type Description Boolean | Improve this Doc View Source Equals(FeatureCollection, FeatureCollection) Determines whether the specified object instances are considered equal Declaration public bool Equals(FeatureCollection left, FeatureCollection right) Parameters Type Name Description FeatureCollection left FeatureCollection right Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Determines whether the specified object is equal to the current object Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides GeoJSONObject.Equals(Object) | Improve this Doc View Source GetHashCode() Returns the hash code for this instance Declaration public override int GetHashCode() Returns Type Description Int32 Overrides GeoJSONObject.GetHashCode() | Improve this Doc View Source GetHashCode(FeatureCollection) Returns the hash code for the specified object Declaration public int GetHashCode(FeatureCollection other) Parameters Type Name Description FeatureCollection other Returns Type Description Int32 Operators | Improve this Doc View Source Equality(FeatureCollection, FeatureCollection) Determines whether the specified object instances are considered equal Declaration public static bool operator ==(FeatureCollection left, FeatureCollection right) Parameters Type Name Description FeatureCollection left FeatureCollection right Returns Type Description Boolean | Improve this Doc View Source Inequality(FeatureCollection, FeatureCollection) Determines whether the specified object instances are not considered equal Declaration public static bool operator !=(FeatureCollection left, FeatureCollection right) Parameters Type Name Description FeatureCollection left FeatureCollection right Returns Type Description Boolean Implements IGeoJSONObject"
  },
  "api/GeoJSON.Net.Feature.html": {
    "href": "api/GeoJSON.Net.Feature.html",
    "title": "Namespace GeoJSON.Net.Feature | ViRGIS VR GIS",
    "keywords": "Namespace GeoJSON.Net.Feature Classes Feature A GeoJSON Feature Object. Feature<TGeometry> Typed GeoJSON Feature class Feature<TGeometry, TProps> A GeoJSON Feature Object; generic version for strongly typed Geometry and Properties FeatureCollection Defines the FeatureCollection type."
  },
  "api/GeoJSON.Net.GeoJSONObject.html": {
    "href": "api/GeoJSON.Net.GeoJSONObject.html",
    "title": "Class GeoJSONObject | ViRGIS VR GIS",
    "keywords": "Class GeoJSONObject Base class for all IGeometryObject implementing types Inheritance Object GeoJSONObject Feature<TGeometry, TProps> FeatureCollection GeometryCollection LineString MultiLineString MultiPoint MultiPolygon Point Polygon Implements IGeoJSONObject Namespace : GeoJSON.Net Assembly : Assembly-CSharp.dll Syntax [JsonObject(MemberSerialization.OptIn)] public abstract class GeoJSONObject : IGeoJSONObject, IEqualityComparer<GeoJSONObject>, IEquatable<GeoJSONObject> Properties | Improve this Doc View Source BoundingBoxes Gets or sets the (optional) Bounding Boxes . Declaration [JsonProperty(PropertyName = \"bbox\", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)] public double[] BoundingBoxes { get; set; } Property Value Type Description Double [] The value of BoundingBoxes must be a 2*n array where n is the number of dimensions represented in the contained geometries, with the lowest values for all axes followed by the highest values. The axes order of a bbox follows the axes order of geometries. In addition, the coordinate reference system for the bbox is assumed to match the coordinate reference system of the GeoJSON object of which it is a member. | Improve this Doc View Source CRS Gets or sets the (optional) Coordinate Reference System Object. Declaration [JsonProperty(PropertyName = \"crs\", Required = Required.Default, DefaultValueHandling = DefaultValueHandling.Ignore | DefaultValueHandling.Populate | DefaultValueHandling.IgnoreAndPopulate, NullValueHandling = NullValueHandling.Include)] [JsonConverter(typeof(CrsConverter))] public ICRSObject CRS { get; set; } Property Value Type Description ICRSObject The Coordinate Reference System Objects. | Improve this Doc View Source Type The (mandatory) type of the GeoJSON Object . Declaration [JsonProperty(PropertyName = \"type\", Required = Required.Always, DefaultValueHandling = DefaultValueHandling.Include)] [JsonConverter(typeof(StringEnumConverter))] public abstract GeoJSONObjectType Type { get; } Property Value Type Description GeoJSONObjectType Methods | Improve this Doc View Source Equals(GeoJSONObject) Determines whether the specified object is equal to the current object Declaration public bool Equals(GeoJSONObject other) Parameters Type Name Description GeoJSONObject other Returns Type Description Boolean | Improve this Doc View Source Equals(GeoJSONObject, GeoJSONObject) Determines whether the specified object instances are considered equal Declaration public bool Equals(GeoJSONObject left, GeoJSONObject right) Parameters Type Name Description GeoJSONObject left GeoJSONObject right Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Determines whether the specified object is equal to the current object Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Returns the hash code for this instance Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() | Improve this Doc View Source GetHashCode(GeoJSONObject) Returns the hash code for the specified object Declaration public int GetHashCode(GeoJSONObject obj) Parameters Type Name Description GeoJSONObject obj Returns Type Description Int32 Operators | Improve this Doc View Source Equality(GeoJSONObject, GeoJSONObject) Determines whether the specified object instances are considered equal Declaration public static bool operator ==(GeoJSONObject left, GeoJSONObject right) Parameters Type Name Description GeoJSONObject left GeoJSONObject right Returns Type Description Boolean | Improve this Doc View Source Inequality(GeoJSONObject, GeoJSONObject) Determines whether the specified object instances are not considered equal Declaration public static bool operator !=(GeoJSONObject left, GeoJSONObject right) Parameters Type Name Description GeoJSONObject left GeoJSONObject right Returns Type Description Boolean Implements IGeoJSONObject"
  },
  "api/GeoJSON.Net.GeoJSONObjectType.html": {
    "href": "api/GeoJSON.Net.GeoJSONObjectType.html",
    "title": "Enum GeoJSONObjectType | ViRGIS VR GIS",
    "keywords": "Enum GeoJSONObjectType Defines the GeoJSON Objects types. Namespace : GeoJSON.Net Assembly : Assembly-CSharp.dll Syntax public enum GeoJSONObjectType Fields Name Description Feature Defines the Feature type. FeatureCollection Defines the FeatureCollection type. GeometryCollection Defines the GeometryCollection type. LineString Defines the LineString type. MultiLineString Defines the MultiLineString type. MultiPoint Defines the MultiPoint type. MultiPolygon Defines the MultiPolygon type. Point Defines the Point type. Polygon Defines the Polygon type."
  },
  "api/GeoJSON.Net.Geometry.GeometryCollection.html": {
    "href": "api/GeoJSON.Net.Geometry.GeometryCollection.html",
    "title": "Class GeometryCollection | ViRGIS VR GIS",
    "keywords": "Class GeometryCollection Defines the GeometryCollection type. Inheritance Object GeoJSONObject GeometryCollection Implements IGeoJSONObject IGeometryObject Inherited Members GeoJSONObject.BoundingBoxes GeoJSONObject.CRS GeoJSONObject.Equals(GeoJSONObject) GeoJSONObject.Equals(GeoJSONObject, GeoJSONObject) GeoJSONObject.GetHashCode(GeoJSONObject) Namespace : GeoJSON.Net.Geometry Assembly : Assembly-CSharp.dll Syntax public class GeometryCollection : GeoJSONObject, IGeoJSONObject, IEqualityComparer<GeoJSONObject>, IEquatable<GeoJSONObject>, IGeometryObject, IEqualityComparer<GeometryCollection>, IEquatable<GeometryCollection> Remarks See https://tools.ietf.org/html/rfc7946#section-3.1.8 Constructors | Improve this Doc View Source GeometryCollection() Initializes a new instance of the GeometryCollection class. Declaration public GeometryCollection() | Improve this Doc View Source GeometryCollection(IEnumerable<IGeometryObject>) Initializes a new instance of the GeometryCollection class. Declaration public GeometryCollection(IEnumerable<IGeometryObject> geometries) Parameters Type Name Description IEnumerable < IGeometryObject > geometries The geometries contained in this GeometryCollection. Properties | Improve this Doc View Source Geometries Gets the list of Polygons enclosed in this MultiPolygon. Declaration [JsonProperty(\"geometries\", Required = Required.Always)] [JsonConverter(typeof(GeometryConverter))] public ReadOnlyCollection<IGeometryObject> Geometries { get; } Property Value Type Description ReadOnlyCollection < IGeometryObject > | Improve this Doc View Source Type Declaration public override GeoJSONObjectType Type { get; } Property Value Type Description GeoJSONObjectType Overrides GeoJSONObject.Type Methods | Improve this Doc View Source Equals(GeometryCollection) Determines whether the specified object is equal to the current object Declaration public bool Equals(GeometryCollection other) Parameters Type Name Description GeometryCollection other Returns Type Description Boolean | Improve this Doc View Source Equals(GeometryCollection, GeometryCollection) Determines whether the specified object instances are considered equal Declaration public bool Equals(GeometryCollection left, GeometryCollection right) Parameters Type Name Description GeometryCollection left GeometryCollection right Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Determines whether the specified object is equal to the current object Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides GeoJSONObject.Equals(Object) | Improve this Doc View Source GetHashCode() Returns the hash code for this instance Declaration public override int GetHashCode() Returns Type Description Int32 Overrides GeoJSONObject.GetHashCode() | Improve this Doc View Source GetHashCode(GeometryCollection) Returns the hash code for the specified object Declaration public int GetHashCode(GeometryCollection other) Parameters Type Name Description GeometryCollection other Returns Type Description Int32 Operators | Improve this Doc View Source Equality(GeometryCollection, GeometryCollection) Determines whether the specified object instances are considered equal Declaration public static bool operator ==(GeometryCollection left, GeometryCollection right) Parameters Type Name Description GeometryCollection left GeometryCollection right Returns Type Description Boolean | Improve this Doc View Source Inequality(GeometryCollection, GeometryCollection) Determines whether the specified object instances are not considered equal Declaration public static bool operator !=(GeometryCollection left, GeometryCollection right) Parameters Type Name Description GeometryCollection left GeometryCollection right Returns Type Description Boolean Implements IGeoJSONObject IGeometryObject"
  },
  "api/GeoJSON.Net.Geometry.html": {
    "href": "api/GeoJSON.Net.Geometry.html",
    "title": "Namespace GeoJSON.Net.Geometry | ViRGIS VR GIS",
    "keywords": "Namespace GeoJSON.Net.Geometry Classes GeometryCollection Defines the GeometryCollection type. LineString Defines the LineString type. MultiLineString Defines the MultiLineString type. MultiPoint Contains an array of Point . MultiPolygon Defines the MultiPolygon type. Point Defines the Point type. In geography, a point refers to a Position on a map, expressed in latitude and longitude. Polygon Defines the Polygon type. Coordinates of a Polygon are a list of linear rings coordinate arrays. The first element in the array represents the exterior ring. Any subsequent elements represent interior rings (or holes). Position A position is the fundamental geometry construct, consisting of Latitude , Longitude and (optionally) Altitude . Interfaces IGeometryObject Base Interface for GeometryObject types. IPosition Defines the Geographic Position type."
  },
  "api/GeoJSON.Net.Geometry.IGeometryObject.html": {
    "href": "api/GeoJSON.Net.Geometry.IGeometryObject.html",
    "title": "Interface IGeometryObject | ViRGIS VR GIS",
    "keywords": "Interface IGeometryObject Base Interface for GeometryObject types. Namespace : GeoJSON.Net.Geometry Assembly : Assembly-CSharp.dll Syntax public interface IGeometryObject Properties | Improve this Doc View Source Type Gets the (mandatory) type of the GeoJSON Object. However, for GeoJSON Objects only the 'Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon', or 'GeometryCollection' types are allowed. Declaration GeoJSONObjectType Type { get; } Property Value Type Description GeoJSONObjectType The type of the object. Remarks See https://tools.ietf.org/html/rfc7946#section-3.1"
  },
  "api/GeoJSON.Net.Geometry.IPosition.html": {
    "href": "api/GeoJSON.Net.Geometry.IPosition.html",
    "title": "Interface IPosition | ViRGIS VR GIS",
    "keywords": "Interface IPosition Defines the Geographic Position type. Namespace : GeoJSON.Net.Geometry Assembly : Assembly-CSharp.dll Syntax public interface IPosition Remarks See https://tools.ietf.org/html/rfc7946#section-3.1.1 Properties | Improve this Doc View Source Altitude Gets the altitude. Declaration double? Altitude { get; } Property Value Type Description Nullable < Double > | Improve this Doc View Source Latitude Gets the latitude. Declaration double Latitude { get; } Property Value Type Description Double The latitude. | Improve this Doc View Source Longitude Gets the longitude. Declaration double Longitude { get; } Property Value Type Description Double The longitude. Extension Methods PositionExtensionMethods.Vector2d(IPosition) PositionExtensionMethods.Vector2(IPosition) PositionExtensionMethods.Point(IPosition) PositionExtensionMethods.Vector3(IPosition)"
  },
  "api/GeoJSON.Net.Geometry.LineString.html": {
    "href": "api/GeoJSON.Net.Geometry.LineString.html",
    "title": "Class LineString | ViRGIS VR GIS",
    "keywords": "Class LineString Defines the LineString type. Inheritance Object GeoJSONObject LineString Implements IGeoJSONObject IGeometryObject Inherited Members GeoJSONObject.BoundingBoxes GeoJSONObject.CRS GeoJSONObject.Equals(GeoJSONObject) GeoJSONObject.Equals(GeoJSONObject, GeoJSONObject) GeoJSONObject.GetHashCode(GeoJSONObject) Namespace : GeoJSON.Net.Geometry Assembly : Assembly-CSharp.dll Syntax [JsonObject(MemberSerialization.OptIn)] public class LineString : GeoJSONObject, IGeoJSONObject, IEqualityComparer<GeoJSONObject>, IEquatable<GeoJSONObject>, IGeometryObject, IEqualityComparer<LineString>, IEquatable<LineString> Remarks See https://tools.ietf.org/html/rfc7946#section-3.1.4 Constructors | Improve this Doc View Source LineString(IEnumerable<IPosition>) Initializes a new instance of the LineString class. Declaration public LineString(IEnumerable<IPosition> coordinates) Parameters Type Name Description IEnumerable < IPosition > coordinates The coordinates. | Improve this Doc View Source LineString(IEnumerable<IEnumerable<Double>>) Initializes a new LineString from a 2-d array of Double s that matches the \"coordinates\" field in the JSON representation. Declaration [JsonConstructor] public LineString(IEnumerable<IEnumerable<double>> coordinates) Parameters Type Name Description IEnumerable < IEnumerable < Double >> coordinates Properties | Improve this Doc View Source Coordinates The positions of the line string. Declaration [JsonProperty(\"coordinates\", Required = Required.Always)] [JsonConverter(typeof(PositionEnumerableConverter))] public ReadOnlyCollection<IPosition> Coordinates { get; } Property Value Type Description ReadOnlyCollection < IPosition > | Improve this Doc View Source Type Declaration public override GeoJSONObjectType Type { get; } Property Value Type Description GeoJSONObjectType Overrides GeoJSONObject.Type Methods | Improve this Doc View Source Equals(LineString) Determines whether the specified object is equal to the current object Declaration public bool Equals(LineString other) Parameters Type Name Description LineString other Returns Type Description Boolean | Improve this Doc View Source Equals(LineString, LineString) Determines whether the specified object instances are considered equal Declaration public bool Equals(LineString left, LineString right) Parameters Type Name Description LineString left LineString right Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Determines whether the specified object is equal to the current object Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides GeoJSONObject.Equals(Object) | Improve this Doc View Source GetHashCode() Returns the hash code for this instance Declaration public override int GetHashCode() Returns Type Description Int32 Overrides GeoJSONObject.GetHashCode() | Improve this Doc View Source GetHashCode(LineString) Returns the hash code for the specified object Declaration public int GetHashCode(LineString other) Parameters Type Name Description LineString other Returns Type Description Int32 | Improve this Doc View Source IsClosed() Determines whether this instance has its first and last coordinate at the same position and thereby is closed. Declaration public bool IsClosed() Returns Type Description Boolean true if this instance is closed; otherwise, false . | Improve this Doc View Source IsLinearRing() Determines whether this LineString is a LinearRing. Declaration public bool IsLinearRing() Returns Type Description Boolean true if it is a linear ring; otherwise, false . Remarks See https://tools.ietf.org/html/rfc7946#section-3.1.1 Operators | Improve this Doc View Source Equality(LineString, LineString) Determines whether the specified object instances are considered equal Declaration public static bool operator ==(LineString left, LineString right) Parameters Type Name Description LineString left LineString right Returns Type Description Boolean | Improve this Doc View Source Inequality(LineString, LineString) Determines whether the specified object instances are not considered equal Declaration public static bool operator !=(LineString left, LineString right) Parameters Type Name Description LineString left LineString right Returns Type Description Boolean Implements IGeoJSONObject IGeometryObject Extension Methods LineExtensionMethods.Point(LineString, Int32) LineExtensionMethods.Points(LineString) LineExtensionMethods.Vector3(LineString)"
  },
  "api/GeoJSON.Net.Geometry.MultiLineString.html": {
    "href": "api/GeoJSON.Net.Geometry.MultiLineString.html",
    "title": "Class MultiLineString | ViRGIS VR GIS",
    "keywords": "Class MultiLineString Defines the MultiLineString type. Inheritance Object GeoJSONObject MultiLineString Implements IGeoJSONObject IGeometryObject Inherited Members GeoJSONObject.BoundingBoxes GeoJSONObject.CRS GeoJSONObject.Equals(GeoJSONObject) GeoJSONObject.Equals(GeoJSONObject, GeoJSONObject) GeoJSONObject.GetHashCode(GeoJSONObject) Namespace : GeoJSON.Net.Geometry Assembly : Assembly-CSharp.dll Syntax public class MultiLineString : GeoJSONObject, IGeoJSONObject, IEqualityComparer<GeoJSONObject>, IEquatable<GeoJSONObject>, IGeometryObject, IEqualityComparer<MultiLineString>, IEquatable<MultiLineString> Remarks See https://tools.ietf.org/html/rfc7946#section-3.1.5 Constructors | Improve this Doc View Source MultiLineString(IEnumerable<LineString>) Initializes a new instance of the MultiLineString class. Declaration public MultiLineString(IEnumerable<LineString> coordinates) Parameters Type Name Description IEnumerable < LineString > coordinates The coordinates. | Improve this Doc View Source MultiLineString(IEnumerable<IEnumerable<IEnumerable<Double>>>) Initializes a new MultiLineString from a 3-d array of Double s that matches the \"coordinates\" field in the JSON representation. Declaration [JsonConstructor] public MultiLineString(IEnumerable<IEnumerable<IEnumerable<double>>> coordinates) Parameters Type Name Description IEnumerable < IEnumerable < IEnumerable < Double >>> coordinates Properties | Improve this Doc View Source Coordinates The collection of line strings of this MultiLineString . Declaration [JsonProperty(\"coordinates\", Required = Required.Always)] [JsonConverter(typeof(LineStringEnumerableConverter))] public ReadOnlyCollection<LineString> Coordinates { get; } Property Value Type Description ReadOnlyCollection < LineString > | Improve this Doc View Source Type Declaration public override GeoJSONObjectType Type { get; } Property Value Type Description GeoJSONObjectType Overrides GeoJSONObject.Type Methods | Improve this Doc View Source Equals(MultiLineString) Determines whether the specified object is equal to the current object Declaration public bool Equals(MultiLineString other) Parameters Type Name Description MultiLineString other Returns Type Description Boolean | Improve this Doc View Source Equals(MultiLineString, MultiLineString) Determines whether the specified object instances are considered equal Declaration public bool Equals(MultiLineString left, MultiLineString right) Parameters Type Name Description MultiLineString left MultiLineString right Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Determines whether the specified object is equal to the current object Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides GeoJSONObject.Equals(Object) | Improve this Doc View Source GetHashCode() Returns the hash code for this instance Declaration public override int GetHashCode() Returns Type Description Int32 Overrides GeoJSONObject.GetHashCode() | Improve this Doc View Source GetHashCode(MultiLineString) Returns the hash code for the specified object Declaration public int GetHashCode(MultiLineString other) Parameters Type Name Description MultiLineString other Returns Type Description Int32 Operators | Improve this Doc View Source Equality(MultiLineString, MultiLineString) Determines whether the specified object instances are considered equal Declaration public static bool operator ==(MultiLineString left, MultiLineString right) Parameters Type Name Description MultiLineString left MultiLineString right Returns Type Description Boolean | Improve this Doc View Source Inequality(MultiLineString, MultiLineString) Determines whether the specified object instances are not considered equal Declaration public static bool operator !=(MultiLineString left, MultiLineString right) Parameters Type Name Description MultiLineString left MultiLineString right Returns Type Description Boolean Implements IGeoJSONObject IGeometryObject"
  },
  "api/GeoJSON.Net.Geometry.MultiPoint.html": {
    "href": "api/GeoJSON.Net.Geometry.MultiPoint.html",
    "title": "Class MultiPoint | ViRGIS VR GIS",
    "keywords": "Class MultiPoint Contains an array of Point . Inheritance Object GeoJSONObject MultiPoint Implements IGeoJSONObject IGeometryObject Inherited Members GeoJSONObject.BoundingBoxes GeoJSONObject.CRS GeoJSONObject.Equals(GeoJSONObject) GeoJSONObject.Equals(GeoJSONObject, GeoJSONObject) GeoJSONObject.GetHashCode(GeoJSONObject) Namespace : GeoJSON.Net.Geometry Assembly : Assembly-CSharp.dll Syntax public class MultiPoint : GeoJSONObject, IGeoJSONObject, IEqualityComparer<GeoJSONObject>, IEquatable<GeoJSONObject>, IGeometryObject, IEqualityComparer<MultiPoint>, IEquatable<MultiPoint> Remarks See https://tools.ietf.org/html/rfc7946#section-3.1.3 Constructors | Improve this Doc View Source MultiPoint(IEnumerable<Point>) Initializes a new instance of the MultiPoint class. Declaration public MultiPoint(IEnumerable<Point> coordinates) Parameters Type Name Description IEnumerable < Point > coordinates The coordinates. | Improve this Doc View Source MultiPoint(IEnumerable<IEnumerable<Double>>) Declaration [JsonConstructor] public MultiPoint(IEnumerable<IEnumerable<double>> coordinates) Parameters Type Name Description IEnumerable < IEnumerable < Double >> coordinates Properties | Improve this Doc View Source Coordinates The points contained in this MultiPoint . Declaration [JsonProperty(\"coordinates\", Required = Required.Always)] [JsonConverter(typeof(PointEnumerableConverter))] public ReadOnlyCollection<Point> Coordinates { get; } Property Value Type Description ReadOnlyCollection < Point > | Improve this Doc View Source Type Declaration public override GeoJSONObjectType Type { get; } Property Value Type Description GeoJSONObjectType Overrides GeoJSONObject.Type Methods | Improve this Doc View Source Equals(MultiPoint) Determines whether the specified object is equal to the current object Declaration public bool Equals(MultiPoint other) Parameters Type Name Description MultiPoint other Returns Type Description Boolean | Improve this Doc View Source Equals(MultiPoint, MultiPoint) Determines whether the specified object instances are considered equal Declaration public bool Equals(MultiPoint left, MultiPoint right) Parameters Type Name Description MultiPoint left MultiPoint right Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Determines whether the specified object is equal to the current object Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides GeoJSONObject.Equals(Object) | Improve this Doc View Source GetHashCode() Returns the hash code for this instance Declaration public override int GetHashCode() Returns Type Description Int32 Overrides GeoJSONObject.GetHashCode() | Improve this Doc View Source GetHashCode(MultiPoint) Returns the hash code for the specified object Declaration public int GetHashCode(MultiPoint other) Parameters Type Name Description MultiPoint other Returns Type Description Int32 Operators | Improve this Doc View Source Equality(MultiPoint, MultiPoint) Determines whether the specified object instances are considered equal Declaration public static bool operator ==(MultiPoint left, MultiPoint right) Parameters Type Name Description MultiPoint left MultiPoint right Returns Type Description Boolean | Improve this Doc View Source Inequality(MultiPoint, MultiPoint) Determines whether the specified object instances are not considered equal Declaration public static bool operator !=(MultiPoint left, MultiPoint right) Parameters Type Name Description MultiPoint left MultiPoint right Returns Type Description Boolean Implements IGeoJSONObject IGeometryObject"
  },
  "api/GeoJSON.Net.Geometry.MultiPolygon.html": {
    "href": "api/GeoJSON.Net.Geometry.MultiPolygon.html",
    "title": "Class MultiPolygon | ViRGIS VR GIS",
    "keywords": "Class MultiPolygon Defines the MultiPolygon type. Inheritance Object GeoJSONObject MultiPolygon Implements IGeoJSONObject IGeometryObject Inherited Members GeoJSONObject.BoundingBoxes GeoJSONObject.CRS GeoJSONObject.Equals(GeoJSONObject) GeoJSONObject.Equals(GeoJSONObject, GeoJSONObject) GeoJSONObject.GetHashCode(GeoJSONObject) Namespace : GeoJSON.Net.Geometry Assembly : Assembly-CSharp.dll Syntax public class MultiPolygon : GeoJSONObject, IGeoJSONObject, IEqualityComparer<GeoJSONObject>, IEquatable<GeoJSONObject>, IGeometryObject, IEqualityComparer<MultiPolygon>, IEquatable<MultiPolygon> Remarks See https://tools.ietf.org/html/rfc7946#section-3.1.7 Constructors | Improve this Doc View Source MultiPolygon(IEnumerable<Polygon>) Initializes a new instance of the MultiPolygon class. Declaration public MultiPolygon(IEnumerable<Polygon> polygons) Parameters Type Name Description IEnumerable < Polygon > polygons The polygons contained in this MultiPolygon. | Improve this Doc View Source MultiPolygon(IEnumerable<IEnumerable<IEnumerable<IEnumerable<Double>>>>) Initializes a new MultiPolygon from a 4-d array of Double s that matches the \"coordinates\" field in the JSON representation. Declaration [JsonConstructor] public MultiPolygon(IEnumerable<IEnumerable<IEnumerable<IEnumerable<double>>>> coordinates) Parameters Type Name Description IEnumerable < IEnumerable < IEnumerable < IEnumerable < Double >>>> coordinates Properties | Improve this Doc View Source Coordinates The list of Polygons enclosed in this MultiPolygon . Declaration [JsonProperty(\"coordinates\", Required = Required.Always)] [JsonConverter(typeof(PolygonEnumerableConverter))] public ReadOnlyCollection<Polygon> Coordinates { get; } Property Value Type Description ReadOnlyCollection < Polygon > | Improve this Doc View Source Type Declaration public override GeoJSONObjectType Type { get; } Property Value Type Description GeoJSONObjectType Overrides GeoJSONObject.Type Methods | Improve this Doc View Source Equals(MultiPolygon) Determines whether the specified object is equal to the current object Declaration public bool Equals(MultiPolygon other) Parameters Type Name Description MultiPolygon other Returns Type Description Boolean | Improve this Doc View Source Equals(MultiPolygon, MultiPolygon) Determines whether the specified object instances are considered equal Declaration public bool Equals(MultiPolygon left, MultiPolygon right) Parameters Type Name Description MultiPolygon left MultiPolygon right Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Determines whether the specified object is equal to the current object Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides GeoJSONObject.Equals(Object) | Improve this Doc View Source GetHashCode() Returns the hash code for this instance Declaration public override int GetHashCode() Returns Type Description Int32 Overrides GeoJSONObject.GetHashCode() | Improve this Doc View Source GetHashCode(MultiPolygon) Returns the hash code for the specified object Declaration public int GetHashCode(MultiPolygon other) Parameters Type Name Description MultiPolygon other Returns Type Description Int32 Operators | Improve this Doc View Source Equality(MultiPolygon, MultiPolygon) Determines whether the specified object instances are considered equal Declaration public static bool operator ==(MultiPolygon left, MultiPolygon right) Parameters Type Name Description MultiPolygon left MultiPolygon right Returns Type Description Boolean | Improve this Doc View Source Inequality(MultiPolygon, MultiPolygon) Determines whether the specified object instances are not considered equal Declaration public static bool operator !=(MultiPolygon left, MultiPolygon right) Parameters Type Name Description MultiPolygon left MultiPolygon right Returns Type Description Boolean Implements IGeoJSONObject IGeometryObject"
  },
  "api/GeoJSON.Net.Geometry.Point.html": {
    "href": "api/GeoJSON.Net.Geometry.Point.html",
    "title": "Class Point | ViRGIS VR GIS",
    "keywords": "Class Point Defines the Point type. In geography, a point refers to a Position on a map, expressed in latitude and longitude. Inheritance Object GeoJSONObject Point Implements IGeoJSONObject IGeometryObject Inherited Members GeoJSONObject.BoundingBoxes GeoJSONObject.CRS GeoJSONObject.Equals(GeoJSONObject) GeoJSONObject.Equals(GeoJSONObject, GeoJSONObject) GeoJSONObject.GetHashCode(GeoJSONObject) Namespace : GeoJSON.Net.Geometry Assembly : Assembly-CSharp.dll Syntax public class Point : GeoJSONObject, IGeoJSONObject, IEqualityComparer<GeoJSONObject>, IEquatable<GeoJSONObject>, IGeometryObject, IEqualityComparer<Point>, IEquatable<Point> Remarks See https://tools.ietf.org/html/rfc7946#section-3.1.2 Constructors | Improve this Doc View Source Point(IPosition) Initializes a new instance of the Point class. Declaration public Point(IPosition coordinates) Parameters Type Name Description IPosition coordinates The Position. Properties | Improve this Doc View Source Coordinates The IPosition underlying this point. Declaration [JsonProperty(\"coordinates\", Required = Required.Always)] [JsonConverter(typeof(PositionConverter))] public IPosition Coordinates { get; } Property Value Type Description IPosition | Improve this Doc View Source Type Declaration public override GeoJSONObjectType Type { get; } Property Value Type Description GeoJSONObjectType Overrides GeoJSONObject.Type Methods | Improve this Doc View Source Equals(Point) Determines whether the specified object is equal to the current object Declaration public bool Equals(Point other) Parameters Type Name Description Point other Returns Type Description Boolean | Improve this Doc View Source Equals(Point, Point) Determines whether the specified object instances are considered equal Declaration public bool Equals(Point left, Point right) Parameters Type Name Description Point left Point right Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Determines whether the specified object is equal to the current object Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides GeoJSONObject.Equals(Object) | Improve this Doc View Source GetHashCode() Returns the hash code for this instance Declaration public override int GetHashCode() Returns Type Description Int32 Overrides GeoJSONObject.GetHashCode() | Improve this Doc View Source GetHashCode(Point) Returns the hash code for the specified object Declaration public int GetHashCode(Point other) Parameters Type Name Description Point other Returns Type Description Int32 Operators | Improve this Doc View Source Equality(Point, Point) Determines whether the specified object instances are considered equal Declaration public static bool operator ==(Point left, Point right) Parameters Type Name Description Point left Point right Returns Type Description Boolean | Improve this Doc View Source Inequality(Point, Point) Determines whether the specified object instances are not considered equal Declaration public static bool operator !=(Point left, Point right) Parameters Type Name Description Point left Point right Returns Type Description Boolean Implements IGeoJSONObject IGeometryObject"
  },
  "api/GeoJSON.Net.Geometry.Polygon.html": {
    "href": "api/GeoJSON.Net.Geometry.Polygon.html",
    "title": "Class Polygon | ViRGIS VR GIS",
    "keywords": "Class Polygon Defines the Polygon type. Coordinates of a Polygon are a list of linear rings coordinate arrays. The first element in the array represents the exterior ring. Any subsequent elements represent interior rings (or holes). Inheritance Object GeoJSONObject Polygon Implements IGeoJSONObject IGeometryObject Inherited Members GeoJSONObject.BoundingBoxes GeoJSONObject.CRS GeoJSONObject.Equals(GeoJSONObject) GeoJSONObject.Equals(GeoJSONObject, GeoJSONObject) GeoJSONObject.GetHashCode(GeoJSONObject) Namespace : GeoJSON.Net.Geometry Assembly : Assembly-CSharp.dll Syntax public class Polygon : GeoJSONObject, IGeoJSONObject, IEqualityComparer<GeoJSONObject>, IEquatable<GeoJSONObject>, IGeometryObject, IEqualityComparer<Polygon>, IEquatable<Polygon> Remarks See https://tools.ietf.org/html/rfc7946#section-3.1.6 Constructors | Improve this Doc View Source Polygon(IEnumerable<LineString>) Initializes a new instance of the Polygon class. Declaration public Polygon(IEnumerable<LineString> coordinates) Parameters Type Name Description IEnumerable < LineString > coordinates The linear rings with the first element in the array representing the exterior ring. Any subsequent elements represent interior rings (or holes). | Improve this Doc View Source Polygon(IEnumerable<IEnumerable<IEnumerable<Double>>>) Initializes a new Polygon from a 3-d array of Double s that matches the \"coordinates\" field in the JSON representation. Declaration [JsonConstructor] public Polygon(IEnumerable<IEnumerable<IEnumerable<double>>> coordinates) Parameters Type Name Description IEnumerable < IEnumerable < IEnumerable < Double >>> coordinates Properties | Improve this Doc View Source Coordinates Gets the list of linestrings defining this Polygon . Declaration [JsonProperty(\"coordinates\", Required = Required.Always)] [JsonConverter(typeof(LineStringEnumerableConverter))] public ReadOnlyCollection<LineString> Coordinates { get; } Property Value Type Description ReadOnlyCollection < LineString > | Improve this Doc View Source Type Declaration public override GeoJSONObjectType Type { get; } Property Value Type Description GeoJSONObjectType Overrides GeoJSONObject.Type Methods | Improve this Doc View Source Equals(Polygon) Determines whether the specified object is equal to the current object Declaration public bool Equals(Polygon other) Parameters Type Name Description Polygon other Returns Type Description Boolean | Improve this Doc View Source Equals(Polygon, Polygon) Determines whether the specified object instances are considered equal Declaration public bool Equals(Polygon left, Polygon right) Parameters Type Name Description Polygon left Polygon right Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Determines whether the specified object is equal to the current object Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides GeoJSONObject.Equals(Object) | Improve this Doc View Source GetHashCode() Returns the hash code for this instance Declaration public override int GetHashCode() Returns Type Description Int32 Overrides GeoJSONObject.GetHashCode() | Improve this Doc View Source GetHashCode(Polygon) Returns the hash code for the specified object Declaration public int GetHashCode(Polygon other) Parameters Type Name Description Polygon other Returns Type Description Int32 Operators | Improve this Doc View Source Equality(Polygon, Polygon) Determines whether the specified object instances are considered equal Declaration public static bool operator ==(Polygon left, Polygon right) Parameters Type Name Description Polygon left Polygon right Returns Type Description Boolean | Improve this Doc View Source Inequality(Polygon, Polygon) Determines whether the specified object instances are not considered equal Declaration public static bool operator !=(Polygon left, Polygon right) Parameters Type Name Description Polygon left Polygon right Returns Type Description Boolean Implements IGeoJSONObject IGeometryObject"
  },
  "api/GeoJSON.Net.Geometry.Position.html": {
    "href": "api/GeoJSON.Net.Geometry.Position.html",
    "title": "Class Position | ViRGIS VR GIS",
    "keywords": "Class Position A position is the fundamental geometry construct, consisting of Latitude , Longitude and (optionally) Altitude . Inheritance Object Position Implements IPosition Namespace : GeoJSON.Net.Geometry Assembly : Assembly-CSharp.dll Syntax public class Position : IPosition, IEqualityComparer<Position>, IEquatable<Position> Constructors | Improve this Doc View Source Position(Double, Double, Nullable<Double>) Initializes a new instance of the Position class. Declaration public Position(double latitude, double longitude, double? altitude = default(double? )) Parameters Type Name Description Double latitude The latitude, or Y coordinate. Double longitude The longitude or X coordinate. Nullable < Double > altitude The altitude in m(eter). | Improve this Doc View Source Position(String, String, String) Initializes a new instance of the Position class. Declaration public Position(string latitude, string longitude, string altitude = null) Parameters Type Name Description String latitude The latitude, or Y coordinate e.g. '38.889722'. String longitude The longitude, or X coordinate e.g. '-77.008889'. String altitude The altitude in m(eters). Properties | Improve this Doc View Source Altitude Gets the altitude. Declaration public double? Altitude { get; } Property Value Type Description Nullable < Double > | Improve this Doc View Source Latitude Gets the latitude or Y coordinate Declaration public double Latitude { get; } Property Value Type Description Double | Improve this Doc View Source Longitude Gets the longitude or X coordinate Declaration public double Longitude { get; } Property Value Type Description Double Methods | Improve this Doc View Source Equals(Position) Determines whether the specified object is equal to the current object Declaration public bool Equals(Position other) Parameters Type Name Description Position other Returns Type Description Boolean | Improve this Doc View Source Equals(Position, Position) Determines whether the specified object instances are considered equal Declaration public bool Equals(Position left, Position right) Parameters Type Name Description Position left Position right Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Determines whether the specified object is equal to the current object Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Returns the hash code for this instance Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() | Improve this Doc View Source GetHashCode(Position) Returns the hash code for the specified object Declaration public int GetHashCode(Position other) Parameters Type Name Description Position other Returns Type Description Int32 | Improve this Doc View Source ToString() Returns a String that represents this instance. Declaration public override string ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString() Operators | Improve this Doc View Source Equality(Position, Position) Determines whether the specified object instances are considered equal Declaration public static bool operator ==(Position left, Position right) Parameters Type Name Description Position left Position right Returns Type Description Boolean | Improve this Doc View Source Inequality(Position, Position) Determines whether the specified object instances are considered equal Declaration public static bool operator !=(Position left, Position right) Parameters Type Name Description Position left Position right Returns Type Description Boolean Implements IPosition Extension Methods PositionExtensionMethods.Vector2d(IPosition) PositionExtensionMethods.Vector2(IPosition) PositionExtensionMethods.Point(IPosition) PositionExtensionMethods.Vector3(IPosition)"
  },
  "api/GeoJSON.Net.html": {
    "href": "api/GeoJSON.Net.html",
    "title": "Namespace GeoJSON.Net | ViRGIS VR GIS",
    "keywords": "Namespace GeoJSON.Net Classes DoubleTenDecimalPlaceComparer Compares doubles for equality. GeoJSONObject Base class for all IGeometryObject implementing types Interfaces IGeoJSONObject Base Interface for GeoJSONObject types. Enums GeoJSONObjectType Defines the GeoJSON Objects types."
  },
  "api/GeoJSON.Net.IGeoJSONObject.html": {
    "href": "api/GeoJSON.Net.IGeoJSONObject.html",
    "title": "Interface IGeoJSONObject | ViRGIS VR GIS",
    "keywords": "Interface IGeoJSONObject Base Interface for GeoJSONObject types. Namespace : GeoJSON.Net Assembly : Assembly-CSharp.dll Syntax public interface IGeoJSONObject Properties | Improve this Doc View Source BoundingBoxes Gets or sets the (optional) Bounding Boxes. Declaration double[] BoundingBoxes { get; set; } Property Value Type Description Double [] The value of the bbox member must be a 2*n array where n is the number of dimensions represented in the contained geometries, with the lowest values for all axes followed by the highest values. The axes order of a bbox follows the axes order of geometries. In addition, the coordinate reference system for the bbox is assumed to match the coordinate reference system of the GeoJSON object of which it is a member. Remarks See https://tools.ietf.org/html/rfc7946#section-5 | Improve this Doc View Source CRS Gets the (optional) Coordinate Reference System Object. Declaration ICRSObject CRS { get; } Property Value Type Description ICRSObject The Coordinate Reference System Objects. Remarks See https://tools.ietf.org/html/rfc7946#section-4 | Improve this Doc View Source Type Gets the (mandatory) type of the GeoJSON Object. Declaration GeoJSONObjectType Type { get; } Property Value Type Description GeoJSONObjectType The type of the object. Remarks See https://tools.ietf.org/html/rfc7946#section-3"
  },
  "api/Project.GeographyCollection.GeogData.html": {
    "href": "api/Project.GeographyCollection.GeogData.html",
    "title": "Struct GeographyCollection.GeogData | ViRGIS VR GIS",
    "keywords": "Struct GeographyCollection.GeogData Namespace : Project Assembly : Assembly-CSharp.dll Syntax public struct GeogData Fields | Improve this Doc View Source Units Declaration [JsonProperty(PropertyName = \"units\", Required = Required.Always)] public Dictionary<string, Unit> Units Field Value Type Description Dictionary < String , Unit >"
  },
  "api/Project.GeographyCollection.html": {
    "href": "api/Project.GeographyCollection.html",
    "title": "Class GeographyCollection | ViRGIS VR GIS",
    "keywords": "Class GeographyCollection Inheritance Object TestableObject RecordSet GeographyCollection GeologyCollection Inherited Members RecordSet.Id RecordSet.DisplayName RecordSet.Type RecordSet.DataType RecordSet.Source RecordSet.Features RecordSet.Position RecordSet.Transform RecordSet.Visible TestableObject.ContainsKey(String) Namespace : Project Assembly : Assembly-CSharp.dll Syntax public class GeographyCollection : RecordSet Fields | Improve this Doc View Source Properties Declaration [JsonProperty(PropertyName = \"properties\")] public GeographyCollection.GeogData Properties Field Value Type Description GeographyCollection.GeogData"
  },
  "api/Project.GeologyCollection.GeoData.html": {
    "href": "api/Project.GeologyCollection.GeoData.html",
    "title": "Struct GeologyCollection.GeoData | ViRGIS VR GIS",
    "keywords": "Struct GeologyCollection.GeoData Namespace : Project Assembly : Assembly-CSharp.dll Syntax public struct GeoData Fields | Improve this Doc View Source Lines Declaration [JsonProperty(PropertyName = \"lines\")] public Dictionary<string, GeoTypes> Lines Field Value Type Description Dictionary < String , GeoTypes > | Improve this Doc View Source Units Declaration [JsonProperty(PropertyName = \"units\", Required = Required.Always)] public Dictionary<string, Unit> Units Field Value Type Description Dictionary < String , Unit > | Improve this Doc View Source xSect Declaration [JsonProperty(PropertyName = \"x_sect_type\")] public string xSect Field Value Type Description String"
  },
  "api/Project.GeologyCollection.html": {
    "href": "api/Project.GeologyCollection.html",
    "title": "Class GeologyCollection | ViRGIS VR GIS",
    "keywords": "Class GeologyCollection Inheritance Object TestableObject RecordSet GeographyCollection GeologyCollection Inherited Members RecordSet.Id RecordSet.DisplayName RecordSet.Type RecordSet.DataType RecordSet.Source RecordSet.Features RecordSet.Position RecordSet.Transform RecordSet.Visible TestableObject.ContainsKey(String) Namespace : Project Assembly : Assembly-CSharp.dll Syntax public class GeologyCollection : GeographyCollection Fields | Improve this Doc View Source Properties Declaration [JsonProperty(PropertyName = \"properties\")] public GeologyCollection.GeoData Properties Field Value Type Description GeologyCollection.GeoData"
  },
  "api/Project.GeoTypes.html": {
    "href": "api/Project.GeoTypes.html",
    "title": "Enum GeoTypes | ViRGIS VR GIS",
    "keywords": "Enum GeoTypes Namespace : Project Assembly : Assembly-CSharp.dll Syntax public enum GeoTypes Fields Name Description Fault Fract Vein"
  },
  "api/Project.GisProject.html": {
    "href": "api/Project.GisProject.html",
    "title": "Class GisProject | ViRGIS VR GIS",
    "keywords": "Class GisProject Inheritance Object TestableObject GisProject Inherited Members TestableObject.ContainsKey(String) Namespace : Project Assembly : Assembly-CSharp.dll Syntax public class GisProject : TestableObject Fields | Improve this Doc View Source Cameras Declaration [JsonProperty(PropertyName = \"cameras\", Required = Required.Always)] public List<Point> Cameras Field Value Type Description List < Point > | Improve this Doc View Source GridScale Declaration [JsonProperty(PropertyName = \"grid-scale\")] public float GridScale Field Value Type Description Single | Improve this Doc View Source MapScale Declaration [JsonProperty(PropertyName = \"mapscale\", Required = Required.Always)] public int MapScale Field Value Type Description Int32 | Improve this Doc View Source Name Declaration [JsonProperty(PropertyName = \"name\", Required = Required.Always)] public string Name Field Value Type Description String | Improve this Doc View Source Origin Declaration [JsonProperty(PropertyName = \"origin\", Required = Required.Always)] public Point Origin Field Value Type Description Point | Improve this Doc View Source RecordSets Declaration [JsonProperty(PropertyName = \"recordsets\", Required = Required.Always)] [JsonConverter(typeof(RecordsetConverter))] public List<RecordSet> RecordSets Field Value Type Description List < RecordSet > | Improve this Doc View Source Scale Declaration [JsonProperty(PropertyName = \"scale\", Required = Required.Always)] public float Scale Field Value Type Description Single Properties | Improve this Doc View Source Camera Declaration public Point Camera { get; } Property Value Type Description Point"
  },
  "api/Project.html": {
    "href": "api/Project.html",
    "title": "Namespace Project | ViRGIS VR GIS",
    "keywords": "Namespace Project Classes GeographyCollection GeologyCollection GisProject JsonTransform RecordSet RecordsetConverter Serializable SerializableColor SerializableQuaternion SerializableVector3 Since unity doesn't flag the Vector3 as serializable, we need to create our own version. This one will automatically convert between Vector3 and SerializableVector3 TestableObject Generic class to make an entity testabble - to allow the members to be tested for their presence Unit VectorConverter<T> Structs GeographyCollection.GeogData GeologyCollection.GeoData Enums GeoTypes RecordSetDataType RecordSetType Shapes"
  },
  "api/Project.JsonTransform.html": {
    "href": "api/Project.JsonTransform.html",
    "title": "Class JsonTransform | ViRGIS VR GIS",
    "keywords": "Class JsonTransform Inheritance Object TestableObject JsonTransform Inherited Members TestableObject.ContainsKey(String) Namespace : Project Assembly : Assembly-CSharp.dll Syntax public class JsonTransform : TestableObject Fields | Improve this Doc View Source Position Declaration [JsonProperty(PropertyName = \"translate\", Required = Required.Always)] [JsonConverter(typeof(VectorConverter<SerializableVector3>))] public SerializableVector3 Position Field Value Type Description SerializableVector3 | Improve this Doc View Source Rotate Declaration [JsonProperty(PropertyName = \"rotate\", Required = Required.Always)] [JsonConverter(typeof(VectorConverter<SerializableQuaternion>))] public SerializableQuaternion Rotate Field Value Type Description SerializableQuaternion | Improve this Doc View Source Scale Declaration [JsonProperty(PropertyName = \"scale\", Required = Required.Always)] [JsonConverter(typeof(VectorConverter<SerializableVector3>))] public SerializableVector3 Scale Field Value Type Description SerializableVector3"
  },
  "api/Project.RecordSet.html": {
    "href": "api/Project.RecordSet.html",
    "title": "Class RecordSet | ViRGIS VR GIS",
    "keywords": "Class RecordSet Inheritance Object TestableObject RecordSet GeographyCollection Inherited Members TestableObject.ContainsKey(String) Namespace : Project Assembly : Assembly-CSharp.dll Syntax public class RecordSet : TestableObject Fields | Improve this Doc View Source DataType Declaration [JsonProperty(PropertyName = \"datatype\", Required = Required.Always)] [JsonConverter(typeof(StringEnumConverter))] public RecordSetDataType DataType Field Value Type Description RecordSetDataType | Improve this Doc View Source DisplayName Declaration [JsonProperty(PropertyName = \"display-name\")] public string DisplayName Field Value Type Description String | Improve this Doc View Source Features Declaration [JsonProperty(PropertyName = \"features\")] public FeatureCollection Features Field Value Type Description FeatureCollection | Improve this Doc View Source Id Declaration [JsonProperty(PropertyName = \"id\", Required = Required.Always)] public string Id Field Value Type Description String | Improve this Doc View Source Position Declaration [JsonProperty(PropertyName = \"position\")] public Point Position Field Value Type Description Point | Improve this Doc View Source Properties Declaration [JsonProperty(PropertyName = \"properties\")] public Dictionary<string, object> Properties Field Value Type Description Dictionary < String , Object > | Improve this Doc View Source Source Declaration [JsonProperty(PropertyName = \"source\")] public string Source Field Value Type Description String | Improve this Doc View Source Transform Declaration [JsonProperty(PropertyName = \"transform\")] public JsonTransform Transform Field Value Type Description JsonTransform | Improve this Doc View Source Type Declaration [JsonProperty(PropertyName = \"type\", Required = Required.Always)] public string Type Field Value Type Description String | Improve this Doc View Source Visible Declaration [JsonProperty(PropertyName = \"visible\", DefaultValueHandling = DefaultValueHandling.Ignore | DefaultValueHandling.Populate | DefaultValueHandling.IgnoreAndPopulate)] public bool Visible Field Value Type Description Boolean"
  },
  "api/Project.RecordsetConverter.html": {
    "href": "api/Project.RecordsetConverter.html",
    "title": "Class RecordsetConverter | ViRGIS VR GIS",
    "keywords": "Class RecordsetConverter Inheritance Object Newtonsoft.Json.JsonConverter RecordsetConverter Namespace : Project Assembly : Assembly-CSharp.dll Syntax public class RecordsetConverter : JsonConverter Constructors | Improve this Doc View Source RecordsetConverter() Declaration public RecordsetConverter() Methods | Improve this Doc View Source CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Returns Type Description Boolean Overrides Newtonsoft.Json.JsonConverter.CanConvert(System.Type) | Improve this Doc View Source ReadJson(JsonReader, Type, Object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader Type objectType Object existingValue Newtonsoft.Json.JsonSerializer serializer Returns Type Description Object Overrides Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) | Improve this Doc View Source WriteJson(JsonWriter, Object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object vector, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer Object vector Newtonsoft.Json.JsonSerializer serializer Overrides Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer)"
  },
  "api/Project.RecordSetDataType.html": {
    "href": "api/Project.RecordSetDataType.html",
    "title": "Enum RecordSetDataType | ViRGIS VR GIS",
    "keywords": "Enum RecordSetDataType Namespace : Project Assembly : Assembly-CSharp.dll Syntax public enum RecordSetDataType Fields Name Description CSV Line Mesh Point PointCloud Polygon Record Tab XSect"
  },
  "api/Project.RecordSetType.html": {
    "href": "api/Project.RecordSetType.html",
    "title": "Enum RecordSetType | ViRGIS VR GIS",
    "keywords": "Enum RecordSetType Namespace : Project Assembly : Assembly-CSharp.dll Syntax public enum RecordSetType Fields Name Description GeographyCollection GeologyCollection"
  },
  "api/Project.Serializable.html": {
    "href": "api/Project.Serializable.html",
    "title": "Class Serializable | ViRGIS VR GIS",
    "keywords": "Class Serializable Inheritance Object Serializable SerializableColor SerializableQuaternion SerializableVector3 Namespace : Project Assembly : Assembly-CSharp.dll Syntax public abstract class Serializable Fields | Improve this Doc View Source magnitude Declaration public float magnitude Field Value Type Description Single Methods | Improve this Doc View Source ToArray() Declaration public abstract float[] ToArray() Returns Type Description Single [] | Improve this Doc View Source Update(IList<Single>) Declaration public abstract void Update(IList<float> v) Parameters Type Name Description IList < Single > v"
  },
  "api/Project.SerializableColor.html": {
    "href": "api/Project.SerializableColor.html",
    "title": "Class SerializableColor | ViRGIS VR GIS",
    "keywords": "Class SerializableColor Inheritance Object Serializable SerializableColor Inherited Members Serializable.magnitude Namespace : Project Assembly : Assembly-CSharp.dll Syntax [Serializable] public class SerializableColor : Serializable Constructors | Improve this Doc View Source SerializableColor() Declaration public SerializableColor() | Improve this Doc View Source SerializableColor(Single, Single, Single, Single) Declaration public SerializableColor(float rr, float rg, float rb, float ra) Parameters Type Name Description Single rr Single rg Single rb Single ra Fields | Improve this Doc View Source a Declaration public float a Field Value Type Description Single | Improve this Doc View Source b Declaration public float b Field Value Type Description Single | Improve this Doc View Source g Declaration public float g Field Value Type Description Single | Improve this Doc View Source r Declaration public float r Field Value Type Description Single Methods | Improve this Doc View Source ToArray() Declaration public override float[] ToArray() Returns Type Description Single [] Overrides Serializable.ToArray() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() | Improve this Doc View Source Update(IList<Single>) Declaration public override void Update(IList<float> color) Parameters Type Name Description IList < Single > color Overrides Serializable.Update(IList<Single>) Operators | Improve this Doc View Source Implicit(SerializableColor to Color) Declaration public static implicit operator Color(SerializableColor r) Parameters Type Name Description SerializableColor r Returns Type Description UnityEngine.Color | Improve this Doc View Source Implicit(Color to SerializableColor) Declaration public static implicit operator SerializableColor(Color color) Parameters Type Name Description UnityEngine.Color color Returns Type Description SerializableColor"
  },
  "api/Project.SerializableQuaternion.html": {
    "href": "api/Project.SerializableQuaternion.html",
    "title": "Class SerializableQuaternion | ViRGIS VR GIS",
    "keywords": "Class SerializableQuaternion Inheritance Object Serializable SerializableQuaternion Inherited Members Serializable.magnitude Namespace : Project Assembly : Assembly-CSharp.dll Syntax [Serializable] public class SerializableQuaternion : Serializable Constructors | Improve this Doc View Source SerializableQuaternion() Declaration public SerializableQuaternion() | Improve this Doc View Source SerializableQuaternion(Single, Single, Single, Single) Constructor Declaration public SerializableQuaternion(float rX, float rY, float rZ, float rW) Parameters Type Name Description Single rX Single rY Single rZ Single rW Fields | Improve this Doc View Source w w component Declaration public float w Field Value Type Description Single | Improve this Doc View Source x x component Declaration public float x Field Value Type Description Single | Improve this Doc View Source y y component Declaration public float y Field Value Type Description Single | Improve this Doc View Source z z component Declaration public float z Field Value Type Description Single Methods | Improve this Doc View Source ToArray() Declaration public override float[] ToArray() Returns Type Description Single [] Overrides Serializable.ToArray() | Improve this Doc View Source ToString() Returns a string representation of the object Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() | Improve this Doc View Source Update(IList<Single>) Declaration public override void Update(IList<float> r) Parameters Type Name Description IList < Single > r Overrides Serializable.Update(IList<Single>) Operators | Improve this Doc View Source Implicit(SerializableQuaternion to Quaternion) Automatic conversion from SerializableQuaternion to Quaternion Declaration public static implicit operator Quaternion(SerializableQuaternion rValue) Parameters Type Name Description SerializableQuaternion rValue Returns Type Description UnityEngine.Quaternion | Improve this Doc View Source Implicit(Quaternion to SerializableQuaternion) Automatic conversion from Quaternion to SerializableQuaternion Declaration public static implicit operator SerializableQuaternion(Quaternion rValue) Parameters Type Name Description UnityEngine.Quaternion rValue Returns Type Description SerializableQuaternion"
  },
  "api/Project.SerializableVector3.html": {
    "href": "api/Project.SerializableVector3.html",
    "title": "Class SerializableVector3 | ViRGIS VR GIS",
    "keywords": "Class SerializableVector3 Since unity doesn't flag the Vector3 as serializable, we need to create our own version. This one will automatically convert between Vector3 and SerializableVector3 Inheritance Object Serializable SerializableVector3 Namespace : Project Assembly : Assembly-CSharp.dll Syntax [Serializable] public class SerializableVector3 : Serializable Constructors | Improve this Doc View Source SerializableVector3() Declaration public SerializableVector3() | Improve this Doc View Source SerializableVector3(Single, Single, Single) Constructor Declaration public SerializableVector3(float rX, float rY, float rZ) Parameters Type Name Description Single rX Single rY Single rZ Fields | Improve this Doc View Source x x component Declaration public float x Field Value Type Description Single | Improve this Doc View Source y y component Declaration public float y Field Value Type Description Single | Improve this Doc View Source z z component Declaration public float z Field Value Type Description Single Properties | Improve this Doc View Source magnitude Declaration public float magnitude { get; } Property Value Type Description Single Methods | Improve this Doc View Source ToArray() Declaration public override float[] ToArray() Returns Type Description Single [] Overrides Serializable.ToArray() | Improve this Doc View Source ToString() Returns a string representation of the object Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() | Improve this Doc View Source Update(IList<Single>) Declaration public override void Update(IList<float> r) Parameters Type Name Description IList < Single > r Overrides Serializable.Update(IList<Single>) Operators | Improve this Doc View Source Implicit(SerializableVector3 to Vector3) Automatic conversion from SerializableVector3 to Vector3 Declaration public static implicit operator Vector3(SerializableVector3 rValue) Parameters Type Name Description SerializableVector3 rValue Returns Type Description UnityEngine.Vector3 | Improve this Doc View Source Implicit(Vector3 to SerializableVector3) Automatic conversion from Vector3 to SerializableVector3 Declaration public static implicit operator SerializableVector3(Vector3 rValue) Parameters Type Name Description UnityEngine.Vector3 rValue Returns Type Description SerializableVector3"
  },
  "api/Project.Shapes.html": {
    "href": "api/Project.Shapes.html",
    "title": "Enum Shapes | ViRGIS VR GIS",
    "keywords": "Enum Shapes Namespace : Project Assembly : Assembly-CSharp.dll Syntax public enum Shapes Fields Name Description Cuboid Cylinder Spheroid"
  },
  "api/Project.TestableObject.html": {
    "href": "api/Project.TestableObject.html",
    "title": "Class TestableObject | ViRGIS VR GIS",
    "keywords": "Class TestableObject Generic class to make an entity testabble - to allow the members to be tested for their presence Inheritance Object TestableObject GisProject JsonTransform RecordSet Unit Namespace : Project Assembly : Assembly-CSharp.dll Syntax public class TestableObject Methods | Improve this Doc View Source ContainsKey(String) Declaration public bool ContainsKey(string propName) Parameters Type Name Description String propName Returns Type Description Boolean"
  },
  "api/Project.Unit.html": {
    "href": "api/Project.Unit.html",
    "title": "Class Unit | ViRGIS VR GIS",
    "keywords": "Class Unit Inheritance Object TestableObject Unit Inherited Members TestableObject.ContainsKey(String) Namespace : Project Assembly : Assembly-CSharp.dll Syntax public class Unit : TestableObject Fields | Improve this Doc View Source Color Declaration [JsonProperty(PropertyName = \"color\", Required = Required.Always)] [JsonConverter(typeof(VectorConverter<SerializableColor>))] public SerializableColor Color Field Value Type Description SerializableColor | Improve this Doc View Source Label Declaration [JsonProperty(PropertyName = \"label\")] public string Label Field Value Type Description String | Improve this Doc View Source Shape Declaration [JsonProperty(PropertyName = \"shape\", Required = Required.Always)] [JsonConverter(typeof(StringEnumConverter))] public Shapes Shape Field Value Type Description Shapes | Improve this Doc View Source Transform Declaration [JsonProperty(PropertyName = \"transform\", Required = Required.Always)] public JsonTransform Transform Field Value Type Description JsonTransform"
  },
  "api/Project.VectorConverter-1.html": {
    "href": "api/Project.VectorConverter-1.html",
    "title": "Class VectorConverter<T> | ViRGIS VR GIS",
    "keywords": "Class VectorConverter<T> Inheritance Object Newtonsoft.Json.JsonConverter VectorConverter<T> Namespace : Project Assembly : Assembly-CSharp.dll Syntax public class VectorConverter<T> : JsonConverter where T : Serializable, new() Type Parameters Name Description T Constructors | Improve this Doc View Source VectorConverter() Declaration public VectorConverter() Methods | Improve this Doc View Source CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description Type objectType Returns Type Description Boolean Overrides Newtonsoft.Json.JsonConverter.CanConvert(System.Type) | Improve this Doc View Source ReadJson(JsonReader, Type, Object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader Type objectType Object existingValue Newtonsoft.Json.JsonSerializer serializer Returns Type Description Object Overrides Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) | Improve this Doc View Source WriteJson(JsonWriter, Object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object vector, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer Object vector Newtonsoft.Json.JsonSerializer serializer Overrides Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer)"
  },
  "api/Virgis.AppState.html": {
    "href": "api/Virgis.AppState.html",
    "title": "Class AppState | ViRGIS VR GIS",
    "keywords": "Class AppState Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour AppState Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class AppState : MonoBehaviour Fields | Improve this Doc View Source instance Declaration public static AppState instance Field Value Type Description AppState Properties | Improve this Doc View Source abstractMap Declaration public AbstractMap abstractMap { get; set; } Property Value Type Description Mapbox.Unity.Map.AbstractMap | Improve this Doc View Source editSession Declaration public EditSession editSession { get; } Property Value Type Description EditSession | Improve this Doc View Source layers Declaration public List<Component> layers { get; } Property Value Type Description List < UnityEngine.Component > | Improve this Doc View Source mainCamera Declaration public GameObject mainCamera { get; set; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source map Declaration public GameObject map { get; set; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source project Declaration public GisProject project { get; set; } Property Value Type Description GisProject | Improve this Doc View Source trackingSpace Declaration public GameObject trackingSpace { get; set; } Property Value Type Description UnityEngine.GameObject Methods | Improve this Doc View Source AddEndEditSessionListener(UnityAction<Boolean>) Declaration public void AddEndEditSessionListener(UnityAction<bool> action) Parameters Type Name Description UnityEngine.Events.UnityAction < Boolean > action | Improve this Doc View Source addLayer(Component) Declaration public void addLayer(Component layer) Parameters Type Name Description UnityEngine.Component layer | Improve this Doc View Source AddStartEditSessionListener(UnityAction) Declaration public void AddStartEditSessionListener(UnityAction action) Parameters Type Name Description UnityEngine.Events.UnityAction action | Improve this Doc View Source AddZoomChangeListerner(UnityAction<Single>) Declaration public void AddZoomChangeListerner(UnityAction<float> action) Parameters Type Name Description UnityEngine.Events.UnityAction < Single > action | Improve this Doc View Source clearLayers() Declaration public void clearLayers() | Improve this Doc View Source GetScale() Declaration public float GetScale() Returns Type Description Single | Improve this Doc View Source InEditSession() Declaration public bool InEditSession() Returns Type Description Boolean | Improve this Doc View Source Init() Init is called after a project has been fully loaded. Declaration public void Init() | Improve this Doc View Source StartEditSession() Declaration public void StartEditSession() | Improve this Doc View Source StopDiscardEditSession() Declaration public void StopDiscardEditSession() | Improve this Doc View Source StopSaveEditSession() Declaration public void StopSaveEditSession() | Improve this Doc View Source ZoomChange(Single) Declaration public void ZoomChange(float zoom) Parameters Type Name Description Single zoom"
  },
  "api/Virgis.CSVData.html": {
    "href": "api/Virgis.CSVData.html",
    "title": "Class CSVData | ViRGIS VR GIS",
    "keywords": "Class CSVData Inheritance Object List < CSVRow > CSVData Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class CSVData : List<CSVRow>, IList<CSVRow>, ICollection<CSVRow>, IReadOnlyList<CSVRow>, IReadOnlyCollection<CSVRow>, IEnumerable<CSVRow>, IList, ICollection, IEnumerable"
  },
  "api/Virgis.CSVReader.html": {
    "href": "api/Virgis.CSVReader.html",
    "title": "Class CSVReader | ViRGIS VR GIS",
    "keywords": "Class CSVReader Inheritance Object CSVReader Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class CSVReader Fields | Improve this Doc View Source Payload Declaration public string Payload Field Value Type Description String Methods | Improve this Doc View Source Load(String) Declaration public Task Load(string file) Parameters Type Name Description String file Returns Type Description Task | Improve this Doc View Source Read() Declaration public CSVData Read() Returns Type Description CSVData"
  },
  "api/Virgis.CSVRow.html": {
    "href": "api/Virgis.CSVRow.html",
    "title": "Class CSVRow | ViRGIS VR GIS",
    "keywords": "Class CSVRow Inheritance Object Dictionary < String , Object > CSVRow Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class CSVRow : Dictionary<string, object>, IDictionary<string, object>, ICollection<KeyValuePair<string, object>>, IReadOnlyDictionary<string, object>, IReadOnlyCollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable"
  },
  "api/Virgis.Dataline.html": {
    "href": "api/Virgis.Dataline.html",
    "title": "Class Dataline | ViRGIS VR GIS",
    "keywords": "Class Dataline Controls and Instance of a Line Component Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour VirgisFeature Dataline Implements IVirgisFeature IVirgisEntity Inherited Members VirgisFeature.mainMat VirgisFeature.selectedMat VirgisFeature.gisId VirgisFeature.gisProperties VirgisFeature.label VirgisFeature.SetMaterial(Material, Material) VirgisFeature.StartEditSession() VirgisFeature.ExitEditSession(Boolean) VirgisFeature.GetClosest(Vector3, Guid[]) VirgisFeature.GetGeometry<T>() VirgisFeature.GetId() VirgisFeature.GetMetadata() VirgisFeature.Equals(Object) VirgisFeature.GetHashCode() VirgisFeature.Equals(VirgisFeature) Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class Dataline : VirgisFeature, IVirgisFeature, IVirgisEntity Fields | Improve this Doc View Source CylinderObject Declaration public GameObject CylinderObject Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source VertexTable Declaration public List<VertexLookup> VertexTable Field Value Type Description List < VertexLookup > Methods | Improve this Doc View Source AddVertex(Vector3) Declaration public override VirgisFeature AddVertex(Vector3 position) Parameters Type Name Description UnityEngine.Vector3 position Returns Type Description VirgisFeature Overrides VirgisFeature.AddVertex(Vector3) | Improve this Doc View Source AddVertex(LineSegment, Vector3) Declaration public VirgisFeature AddVertex(LineSegment segment, Vector3 position) Parameters Type Name Description LineSegment segment UnityEngine.Vector3 position Returns Type Description VirgisFeature | Improve this Doc View Source Draw(Vector3[], Boolean, Dictionary<String, Unit>, GameObject, GameObject, GameObject, Material, Material, Material, Material) Called to draw the line Declaration public void Draw(Vector3[] line, bool Lr, Dictionary<string, Unit> symbology, GameObject LinePrefab, GameObject HandlePrefab, GameObject LabelPrefab, Material mainMat, Material selectedMat, Material lineMain, Material lineSelected) Parameters Type Name Description UnityEngine.Vector3 [] line Boolean Lr Dictionary < String , Unit > symbology The symbo,logy to be applied to the loine UnityEngine.GameObject LinePrefab The prefab to be used for the line UnityEngine.GameObject HandlePrefab The prefab to be used for the handle UnityEngine.GameObject LabelPrefab the prefab to used for the label UnityEngine.Material mainMat UnityEngine.Material selectedMat UnityEngine.Material lineMain UnityEngine.Material lineSelected | Improve this Doc View Source GetVertexes() Declaration public Datapoint[] GetVertexes() Returns Type Description Datapoint [] | Improve this Doc View Source GetVertexPositions() called to get the verteces of the LineString Declaration public Vector3[] GetVertexPositions() Returns Type Description UnityEngine.Vector3 [] Vector3[] of verteces | Improve this Doc View Source GetWkt() Declaration public string GetWkt() Returns Type Description String | Improve this Doc View Source GetWktCoords() Declaration public string GetWktCoords() Returns Type Description String | Improve this Doc View Source MakeLinearRing() Declaration public void MakeLinearRing() | Improve this Doc View Source MoveAxis(MoveArgs) Declaration public override void MoveAxis(MoveArgs args) Parameters Type Name Description MoveArgs args Overrides VirgisFeature.MoveAxis(MoveArgs) | Improve this Doc View Source MoveTo(MoveArgs) Declaration public override void MoveTo(MoveArgs args) Parameters Type Name Description MoveArgs args Overrides VirgisFeature.MoveTo(MoveArgs) | Improve this Doc View Source RemoveVertex(VirgisFeature) Declaration public override void RemoveVertex(VirgisFeature vertex) Parameters Type Name Description VirgisFeature vertex Overrides VirgisFeature.RemoveVertex(VirgisFeature) | Improve this Doc View Source Selected(SelectionTypes) Declaration public override void Selected(SelectionTypes button) Parameters Type Name Description SelectionTypes button Overrides VirgisFeature.Selected(SelectionTypes) | Improve this Doc View Source Translate(MoveArgs) Declaration public override void Translate(MoveArgs args) Parameters Type Name Description MoveArgs args Overrides VirgisFeature.Translate(MoveArgs) | Improve this Doc View Source UnSelected(SelectionTypes) Declaration public override void UnSelected(SelectionTypes button) Parameters Type Name Description SelectionTypes button Overrides VirgisFeature.UnSelected(SelectionTypes) | Improve this Doc View Source VertexMove(MoveArgs) Declaration public override void VertexMove(MoveArgs data) Parameters Type Name Description MoveArgs data Overrides VirgisFeature.VertexMove(MoveArgs) Implements IVirgisFeature IVirgisEntity"
  },
  "api/Virgis.DataPlotter.html": {
    "href": "api/Virgis.DataPlotter.html",
    "title": "Class DataPlotter | ViRGIS VR GIS",
    "keywords": "Class DataPlotter Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour VirgisLayer < RecordSet , CSVData > DataPlotter Implements IVirgisLayer IVirgisEntity Inherited Members VirgisLayer<RecordSet, CSVData>.layer VirgisLayer<RecordSet, CSVData>.features VirgisLayer<RecordSet, CSVData>.changed VirgisLayer<RecordSet, CSVData>._id VirgisLayer<RecordSet, CSVData>._editable VirgisLayer<RecordSet, CSVData>.Init(RecordSet) VirgisLayer<RecordSet, CSVData>._init(RecordSet) VirgisLayer<RecordSet, CSVData>.AddFeature(Vector3[]) VirgisLayer<RecordSet, CSVData>._addFeature(Vector3[]) VirgisLayer<RecordSet, CSVData>.Draw() VirgisLayer<RecordSet, CSVData>._draw() VirgisLayer<RecordSet, CSVData>.CheckPoint() VirgisLayer<RecordSet, CSVData>._checkpoint() VirgisLayer<RecordSet, CSVData>.Save() VirgisLayer<RecordSet, CSVData>._save() VirgisLayer<RecordSet, CSVData>.Translate(MoveArgs) VirgisLayer<RecordSet, CSVData>.MoveAxis(MoveArgs) VirgisLayer<RecordSet, CSVData>.MoveTo(MoveArgs) VirgisLayer<RecordSet, CSVData>.VertexMove(MoveArgs) VirgisLayer<RecordSet, CSVData>.StartEditSession() VirgisLayer<RecordSet, CSVData>.ExitEditSession(Boolean) VirgisLayer<RecordSet, CSVData>.Selected(SelectionTypes) VirgisLayer<RecordSet, CSVData>.UnSelected(SelectionTypes) VirgisLayer<RecordSet, CSVData>.GetClosest(Vector3, Guid[]) VirgisLayer<RecordSet, CSVData>.GetFeature(Guid) VirgisLayer<RecordSet, CSVData>.GetId() VirgisLayer<RecordSet, CSVData>.GetMetadata() VirgisLayer<RecordSet, CSVData>.GetFeatureShape() VirgisLayer<RecordSet, CSVData>.SetVisible(Boolean) VirgisLayer<RecordSet, CSVData>.IsVisible() VirgisLayer<RecordSet, CSVData>.SetEditable(Boolean) VirgisLayer<RecordSet, CSVData>.IsEditable() VirgisLayer<RecordSet, CSVData>.Equals(Object) VirgisLayer<RecordSet, CSVData>.GetHashCode() VirgisLayer<RecordSet, CSVData>.Equals(VirgisLayer<RecordSet, CSVData>) Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class DataPlotter : VirgisLayer<RecordSet, CSVData>, IVirgisLayer, IVirgisEntity Fields | Improve this Doc View Source CubePrefab Declaration public GameObject CubePrefab Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source CylinderPrefab Declaration public GameObject CylinderPrefab Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source LabelPrefab Declaration public GameObject LabelPrefab Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source SpherePrefab Declaration public GameObject SpherePrefab Field Value Type Description UnityEngine.GameObject Methods | Improve this Doc View Source _addFeature(Vector3[]) Declaration protected override VirgisFeature _addFeature(Vector3[] geometry) Parameters Type Name Description UnityEngine.Vector3 [] geometry Returns Type Description VirgisFeature Overrides Virgis.VirgisLayer<Project.RecordSet, Virgis.CSVData>._addFeature(UnityEngine.Vector3[]) | Improve this Doc View Source _checkpoint() Declaration protected override void _checkpoint() Overrides Virgis.VirgisLayer<Project.RecordSet, Virgis.CSVData>._checkpoint() | Improve this Doc View Source _draw() Declaration protected override void _draw() Overrides Virgis.VirgisLayer<Project.RecordSet, Virgis.CSVData>._draw() | Improve this Doc View Source _init(RecordSet) Declaration protected override Task _init(RecordSet layer) Parameters Type Name Description RecordSet layer Returns Type Description Task Overrides Virgis.VirgisLayer<Project.RecordSet, Virgis.CSVData>._init(Project.RecordSet) | Improve this Doc View Source _save() Declaration protected override void _save() Overrides Virgis.VirgisLayer<Project.RecordSet, Virgis.CSVData>._save() | Improve this Doc View Source GetFeatureShape() Declaration public override GameObject GetFeatureShape() Returns Type Description UnityEngine.GameObject Overrides Virgis.VirgisLayer<Project.RecordSet, Virgis.CSVData>.GetFeatureShape() | Improve this Doc View Source MoveAxis(MoveArgs) Declaration public override void MoveAxis(MoveArgs args) Parameters Type Name Description MoveArgs args Overrides Virgis.VirgisLayer<Project.RecordSet, Virgis.CSVData>.MoveAxis(Virgis.MoveArgs) | Improve this Doc View Source Translate(MoveArgs) Declaration public override void Translate(MoveArgs args) Parameters Type Name Description MoveArgs args Overrides Virgis.VirgisLayer<Project.RecordSet, Virgis.CSVData>.Translate(Virgis.MoveArgs) Implements IVirgisLayer IVirgisEntity"
  },
  "api/Virgis.Datapoint.html": {
    "href": "api/Virgis.Datapoint.html",
    "title": "Class Datapoint | ViRGIS VR GIS",
    "keywords": "Class Datapoint Controls an instance of a data pointor handle Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour VirgisFeature Datapoint Implements IVirgisFeature IVirgisEntity Inherited Members VirgisFeature.mainMat VirgisFeature.selectedMat VirgisFeature.gisId VirgisFeature.gisProperties VirgisFeature.label VirgisFeature.StartEditSession() VirgisFeature.ExitEditSession(Boolean) VirgisFeature.AddVertex(Vector3) VirgisFeature.RemoveVertex(VirgisFeature) VirgisFeature.GetId() VirgisFeature.GetMetadata() VirgisFeature.Equals(Object) VirgisFeature.GetHashCode() VirgisFeature.Equals(VirgisFeature) Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class Datapoint : VirgisFeature, IVirgisFeature, IVirgisEntity Methods | Improve this Doc View Source Delete() Declaration public void Delete() | Improve this Doc View Source GetClosest(Vector3, Guid[]) Declaration public override VirgisFeature GetClosest(Vector3 coords, Guid[] excludes) Parameters Type Name Description UnityEngine.Vector3 coords Guid [] excludes Returns Type Description VirgisFeature Overrides VirgisFeature.GetClosest(Vector3, Guid[]) | Improve this Doc View Source GetGeometry<T>() Declaration public override T GetGeometry<T>() Returns Type Description T Type Parameters Name Description T Overrides VirgisFeature.GetGeometry<T>() | Improve this Doc View Source MoveAxis(MoveArgs) Declaration public override void MoveAxis(MoveArgs args) Parameters Type Name Description MoveArgs args Overrides VirgisFeature.MoveAxis(MoveArgs) | Improve this Doc View Source MoveTo(MoveArgs) Declaration public override void MoveTo(MoveArgs args) Parameters Type Name Description MoveArgs args Overrides VirgisFeature.MoveTo(MoveArgs) | Improve this Doc View Source Selected(SelectionTypes) Declaration public override void Selected(SelectionTypes button) Parameters Type Name Description SelectionTypes button Overrides VirgisFeature.Selected(SelectionTypes) | Improve this Doc View Source SetMaterial(Material, Material) Declaration public override void SetMaterial(Material mainMat, Material selectedMat) Parameters Type Name Description UnityEngine.Material mainMat UnityEngine.Material selectedMat Overrides VirgisFeature.SetMaterial(Material, Material) | Improve this Doc View Source Translate(MoveArgs) Declaration public override void Translate(MoveArgs args) Parameters Type Name Description MoveArgs args Overrides VirgisFeature.Translate(MoveArgs) | Improve this Doc View Source UnSelected(SelectionTypes) Declaration public override void UnSelected(SelectionTypes button) Parameters Type Name Description SelectionTypes button Overrides VirgisFeature.UnSelected(SelectionTypes) | Improve this Doc View Source VertexMove(MoveArgs) Declaration public override void VertexMove(MoveArgs args) Parameters Type Name Description MoveArgs args Overrides VirgisFeature.VertexMove(MoveArgs) Implements IVirgisFeature IVirgisEntity"
  },
  "api/Virgis.Datapolygon.html": {
    "href": "api/Virgis.Datapolygon.html",
    "title": "Class Datapolygon | ViRGIS VR GIS",
    "keywords": "Class Datapolygon Controls an instance of a Polygon ViRGIS component Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour VirgisFeature Datapolygon Implements IVirgisFeature IVirgisEntity Inherited Members VirgisFeature.mainMat VirgisFeature.selectedMat VirgisFeature.gisId VirgisFeature.gisProperties VirgisFeature.label VirgisFeature.SetMaterial(Material, Material) VirgisFeature.StartEditSession() VirgisFeature.ExitEditSession(Boolean) VirgisFeature.GetClosest(Vector3, Guid[]) VirgisFeature.GetGeometry<T>() VirgisFeature.GetId() VirgisFeature.GetMetadata() VirgisFeature.Equals(Object) VirgisFeature.GetHashCode() VirgisFeature.Equals(VirgisFeature) Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class Datapolygon : VirgisFeature, IVirgisFeature, IVirgisEntity Fields | Improve this Doc View Source Centroid Declaration public Datapoint Centroid Field Value Type Description Datapoint | Improve this Doc View Source VertexTable Declaration public List<VertexLookup> VertexTable Field Value Type Description List < VertexLookup > Methods | Improve this Doc View Source AddVertex(Vector3) Declaration public override VirgisFeature AddVertex(Vector3 position) Parameters Type Name Description UnityEngine.Vector3 position Returns Type Description VirgisFeature Overrides VirgisFeature.AddVertex(Vector3) | Improve this Doc View Source Draw(List<VertexLookup>, Material) Called to draw the Polygon based upon the Declaration public GameObject Draw(List<VertexLookup> verteces, Material mat = null) Parameters Type Name Description List < VertexLookup > verteces UnityEngine.Material mat Material to be used Returns Type Description UnityEngine.GameObject | Improve this Doc View Source GetVertexes() Get an array of the Datapoint components for the vertexes Declaration public Datapoint[] GetVertexes() Returns Type Description Datapoint [] Datapoint[] | Improve this Doc View Source GetVertexPositions() Declaration public Vector3[] GetVertexPositions() Returns Type Description UnityEngine.Vector3 [] | Improve this Doc View Source MoveAxis(MoveArgs) Declaration public override void MoveAxis(MoveArgs args) Parameters Type Name Description MoveArgs args Overrides VirgisFeature.MoveAxis(MoveArgs) | Improve this Doc View Source MoveTo(MoveArgs) Declaration public override void MoveTo(MoveArgs args) Parameters Type Name Description MoveArgs args Overrides VirgisFeature.MoveTo(MoveArgs) | Improve this Doc View Source RemoveVertex(VirgisFeature) Declaration public override void RemoveVertex(VirgisFeature vertex) Parameters Type Name Description VirgisFeature vertex Overrides VirgisFeature.RemoveVertex(VirgisFeature) | Improve this Doc View Source ResetCenter() Reset the center vertex to be the center of the Linear Ring vertexes Declaration public void ResetCenter() | Improve this Doc View Source Selected(SelectionTypes) Declaration public override void Selected(SelectionTypes button) Parameters Type Name Description SelectionTypes button Overrides VirgisFeature.Selected(SelectionTypes) | Improve this Doc View Source ShapeMoveVertex(MoveArgs) Move a vertex of the polygon and recreate the mesh Declaration public void ShapeMoveVertex(MoveArgs data) Parameters Type Name Description MoveArgs data MoveArgs | Improve this Doc View Source Translate(MoveArgs) Declaration public override void Translate(MoveArgs args) Parameters Type Name Description MoveArgs args Overrides VirgisFeature.Translate(MoveArgs) | Improve this Doc View Source Triangles(Int32) calculate the Triangles for a Polyhrderon with length verteces Declaration public static int[] Triangles(int length) Parameters Type Name Description Int32 length number of verteces not including the centroid Returns Type Description Int32 [] | Improve this Doc View Source UnSelected(SelectionTypes) Declaration public override void UnSelected(SelectionTypes button) Parameters Type Name Description SelectionTypes button Overrides VirgisFeature.UnSelected(SelectionTypes) | Improve this Doc View Source VertexMove(MoveArgs) Declaration public override void VertexMove(MoveArgs data) Parameters Type Name Description MoveArgs data Overrides VirgisFeature.VertexMove(MoveArgs) | Improve this Doc View Source Vertices() Calculate the verteces of the polygon from the LineSString Declaration public Vector3[] Vertices() Returns Type Description UnityEngine.Vector3 [] Implements IVirgisFeature IVirgisEntity"
  },
  "api/Virgis.DataRotator.html": {
    "href": "api/Virgis.DataRotator.html",
    "title": "Class DataRotator | ViRGIS VR GIS",
    "keywords": "Class DataRotator Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour DataRotator Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class DataRotator : MonoBehaviour Fields | Improve this Doc View Source anticolor Declaration public Color anticolor Field Value Type Description UnityEngine.Color | Improve this Doc View Source color Declaration public Color color Field Value Type Description UnityEngine.Color | Improve this Doc View Source position Declaration public Vector3 position Field Value Type Description UnityEngine.Vector3 Methods | Improve this Doc View Source Selected(Int32) Declaration public void Selected(int button) Parameters Type Name Description Int32 button | Improve this Doc View Source SetColor(Color) Declaration public void SetColor(Color newCol) Parameters Type Name Description UnityEngine.Color newCol | Improve this Doc View Source Translate(MoveArgs) Declaration public void Translate(MoveArgs args) Parameters Type Name Description MoveArgs args | Improve this Doc View Source UnSelected(Int32) Declaration public void UnSelected(int button) Parameters Type Name Description Int32 button"
  },
  "api/Virgis.DcurveExtensions.html": {
    "href": "api/Virgis.DcurveExtensions.html",
    "title": "Class DcurveExtensions | ViRGIS VR GIS",
    "keywords": "Class DcurveExtensions Inheritance Object DcurveExtensions Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public static class DcurveExtensions Methods | Improve this Doc View Source Center(DCurve3) Estimates the 3D centroid of a DCurve Declaration public static Vector3d Center(this DCurve3 curve) Parameters Type Name Description DCurve3 curve DCurve Returns Type Description Vector3d Vector3[] | Improve this Doc View Source CenterMark(DCurve3) Estimates the nearest point on a DCurve to the centroid of that DCurve Declaration public static Vector3d CenterMark(this DCurve3 curve) Parameters Type Name Description DCurve3 curve g3.DCurve Returns Type Description Vector3d g3.Vector3d Centroid | Improve this Doc View Source NearestSegment(DCurve3, Vector3d) Finds the Segment from the DCurve3 closes to the position Declaration public static int NearestSegment(this DCurve3 curve, Vector3d position) Parameters Type Name Description DCurve3 curve DCurve3 Vector3d position Vector3d Returns Type Description Int32 Integer Sgement index | Improve this Doc View Source Vector3(DCurve3, Vector3[], Boolean) Creates g3.DCurve from Vector3[] Declaration public static void Vector3(this DCurve3 curve, Vector3[] verteces, bool bClosed) Parameters Type Name Description DCurve3 curve DCurve UnityEngine.Vector3 [] verteces Vextor3[] Boolean bClosed whether the line is closed"
  },
  "api/Virgis.EditableLayerChangedEvent.html": {
    "href": "api/Virgis.EditableLayerChangedEvent.html",
    "title": "Class EditableLayerChangedEvent | ViRGIS VR GIS",
    "keywords": "Class EditableLayerChangedEvent EditableLayerChangedEvent is triggered during an edit session, where the editable layer has been changed to another layer. Inheritance Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent < IVirgisLayer > EditableLayerChangedEvent Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax [Serializable] public class EditableLayerChangedEvent : UnityEvent<IVirgisLayer>, ISerializationCallbackReceiver"
  },
  "api/Virgis.EditModeUI.html": {
    "href": "api/Virgis.EditModeUI.html",
    "title": "Class EditModeUI | ViRGIS VR GIS",
    "keywords": "Class EditModeUI Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour EditModeUI Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class EditModeUI : MonoBehaviour Fields | Improve this Doc View Source snapAnchorToggle Declaration public Toggle snapAnchorToggle Field Value Type Description UnityEngine.UI.Toggle | Improve this Doc View Source snapGridToggle Declaration public Toggle snapGridToggle Field Value Type Description UnityEngine.UI.Toggle Methods | Improve this Doc View Source OnSnapAnchorToggleValueChanged(Boolean) Declaration public void OnSnapAnchorToggleValueChanged(bool enabled) Parameters Type Name Description Boolean enabled | Improve this Doc View Source OnSnapGridToggleValueChanged(Boolean) Declaration public void OnSnapGridToggleValueChanged(bool enabled) Parameters Type Name Description Boolean enabled"
  },
  "api/Virgis.EditSession.EditMode.html": {
    "href": "api/Virgis.EditSession.EditMode.html",
    "title": "Enum EditSession.EditMode | ViRGIS VR GIS",
    "keywords": "Enum EditSession.EditMode Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public enum EditMode Fields Name Description None SnapAnchor SnapGrid"
  },
  "api/Virgis.EditSession.html": {
    "href": "api/Virgis.EditSession.html",
    "title": "Class EditSession | ViRGIS VR GIS",
    "keywords": "Class EditSession Inheritance Object EditSession Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class EditSession Constructors | Improve this Doc View Source EditSession() Declaration public EditSession() Properties | Improve this Doc View Source editableLayer Declaration public IVirgisLayer editableLayer { get; set; } Property Value Type Description IVirgisLayer | Improve this Doc View Source mode Declaration public EditSession.EditMode mode { get; set; } Property Value Type Description EditSession.EditMode Methods | Improve this Doc View Source AddEditableLayerChangedListener(UnityAction<IVirgisLayer>) Declaration public void AddEditableLayerChangedListener(UnityAction<IVirgisLayer> action) Parameters Type Name Description UnityEngine.Events.UnityAction < IVirgisLayer > action | Improve this Doc View Source AddEndEditSessionListener(UnityAction<Boolean>) Declaration public void AddEndEditSessionListener(UnityAction<bool> action) Parameters Type Name Description UnityEngine.Events.UnityAction < Boolean > action | Improve this Doc View Source AddStartEditSessionListener(UnityAction) Declaration public void AddStartEditSessionListener(UnityAction action) Parameters Type Name Description UnityEngine.Events.UnityAction action | Improve this Doc View Source IsActive() Declaration public bool IsActive() Returns Type Description Boolean | Improve this Doc View Source Start() Declaration public void Start() | Improve this Doc View Source StopAndDiscard() Declaration public void StopAndDiscard() | Improve this Doc View Source StopAndSave() Declaration public void StopAndSave()"
  },
  "api/Virgis.EndEditSessionEvent.html": {
    "href": "api/Virgis.EndEditSessionEvent.html",
    "title": "Class EndEditSessionEvent | ViRGIS VR GIS",
    "keywords": "Class EndEditSessionEvent Inheritance Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent < Boolean > EndEditSessionEvent Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax [Serializable] public class EndEditSessionEvent : UnityEvent<bool>, ISerializationCallbackReceiver"
  },
  "api/Virgis.FeatureAdder.html": {
    "href": "api/Virgis.FeatureAdder.html",
    "title": "Class FeatureAdder | ViRGIS VR GIS",
    "keywords": "Class FeatureAdder Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour FeatureAdder Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class FeatureAdder : MonoBehaviour Fields | Improve this Doc View Source blueCubePrefab Declaration public GameObject blueCubePrefab Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source defaultMarkerShape Declaration public GameObject defaultMarkerShape Field Value Type Description UnityEngine.GameObject Methods | Improve this Doc View Source LeftTriggerPressed(Boolean) Declaration public void LeftTriggerPressed(bool activate) Parameters Type Name Description Boolean activate | Improve this Doc View Source LeftTriggerReleased(Boolean) Declaration public void LeftTriggerReleased(bool activate) Parameters Type Name Description Boolean activate"
  },
  "api/Virgis.FeatureObject.html": {
    "href": "api/Virgis.FeatureObject.html",
    "title": "Class FeatureObject | ViRGIS VR GIS",
    "keywords": "Class FeatureObject abstract parent for generic datasets Inheritance Object UnityEngine.Object UnityEngine.ScriptableObject FeatureObject Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public abstract class FeatureObject : ScriptableObject Fields | Improve this Doc View Source coords Declaration public Vector3 coords Field Value Type Description UnityEngine.Vector3"
  },
  "api/Virgis.FlyingCam.html": {
    "href": "api/Virgis.FlyingCam.html",
    "title": "Class FlyingCam | ViRGIS VR GIS",
    "keywords": "Class FlyingCam Main Script for controlling the UI behaviour and the movement of the Camera Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour FlyingCam Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class FlyingCam : MonoBehaviour Fields | Improve this Doc View Source AxisSensitivity Declaration public float AxisSensitivity Field Value Type Description Single | Improve this Doc View Source DesktopAcceleration Declaration [Header(\"Constants - Desktop\")] public float DesktopAcceleration Field Value Type Description Single | Improve this Doc View Source MaxXAngle Declaration [Space] [Range(0F, 89F)] public float MaxXAngle Field Value Type Description Single | Improve this Doc View Source PanSensitvity Declaration public float PanSensitvity Field Value Type Description Single | Improve this Doc View Source SlideMod Declaration public float SlideMod Field Value Type Description Single | Improve this Doc View Source trackingSpace Declaration public GameObject trackingSpace Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source VrAcceleration Declaration [Space] [Header(\"Constants - Occulus Rift\")] public float VrAcceleration Field Value Type Description Single | Improve this Doc View Source XAxisSensitivity Declaration public float XAxisSensitivity Field Value Type Description Single | Improve this Doc View Source YAxisSensitivity Declaration public float YAxisSensitivity Field Value Type Description Single | Improve this Doc View Source ZoomSensitivity Declaration public float ZoomSensitivity Field Value Type Description Single Methods | Improve this Doc View Source addVertexPressed(Boolean) Declaration public void addVertexPressed(bool thisEvent) Parameters Type Name Description Boolean thisEvent | Improve this Doc View Source addVertexReleased(Boolean) Declaration public void addVertexReleased(bool thisEvent) Parameters Type Name Description Boolean thisEvent | Improve this Doc View Source delVertexPressed(Boolean) Declaration public void delVertexPressed(bool thisEvent) Parameters Type Name Description Boolean thisEvent | Improve this Doc View Source delVertexReleased(Boolean) Declaration public void delVertexReleased(bool thisEvent) Parameters Type Name Description Boolean thisEvent | Improve this Doc View Source gripPressed(Boolean) Declaration public void gripPressed(bool thisEvent) Parameters Type Name Description Boolean thisEvent | Improve this Doc View Source gripReleased(Boolean) Declaration public void gripReleased(bool thisEvent) Parameters Type Name Description Boolean thisEvent | Improve this Doc View Source HandleKeyInput(InputAction.CallbackContext) Declaration public void HandleKeyInput(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source HandleMouseClick(InputAction.CallbackContext) Declaration public void HandleMouseClick(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source HandleMouseRotation(InputAction.CallbackContext) Declaration public void HandleMouseRotation(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source HandleMove(InputAction.CallbackContext) Declaration public void HandleMove(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source HandlePanZoom(InputAction.CallbackContext) Declaration public void HandlePanZoom(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source HandleVertical(InputAction.CallbackContext) Declaration public void HandleVertical(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source lhGripPressed(Boolean) Declaration public void lhGripPressed(bool thisEvent) Parameters Type Name Description Boolean thisEvent | Improve this Doc View Source lhGripRelaesed(Boolean) Declaration public void lhGripRelaesed(bool thisEvent) Parameters Type Name Description Boolean thisEvent | Improve this Doc View Source lhTriggerPressed(Boolean) Declaration public void lhTriggerPressed(bool thisEvent) Parameters Type Name Description Boolean thisEvent | Improve this Doc View Source lhTriggerReleased(Boolean) Declaration public void lhTriggerReleased(bool thisEvent) Parameters Type Name Description Boolean thisEvent | Improve this Doc View Source Move(Vector2) Declaration public void Move(Vector2 axis) Parameters Type Name Description UnityEngine.Vector2 axis | Improve this Doc View Source PanZoom(Vector2) Declaration public void PanZoom(Vector2 axis) Parameters Type Name Description UnityEngine.Vector2 axis | Improve this Doc View Source PointerHit(ObjectPointer.EventData) Declaration public void PointerHit(ObjectPointer.EventData data) Parameters Type Name Description Zinnia.Pointer.ObjectPointer.EventData data | Improve this Doc View Source PointerUnhit(ObjectPointer.EventData) Declaration public void PointerUnhit(ObjectPointer.EventData data) Parameters Type Name Description Zinnia.Pointer.ObjectPointer.EventData data | Improve this Doc View Source receiveRay(PointsCast.EventData) Declaration public void receiveRay(PointsCast.EventData data) Parameters Type Name Description Zinnia.Cast.PointsCast.EventData data | Improve this Doc View Source ScaleDown(Boolean) Declaration public void ScaleDown(bool thisEvent) Parameters Type Name Description Boolean thisEvent | Improve this Doc View Source ScaleUp(Boolean) Declaration public void ScaleUp(bool thisEvent) Parameters Type Name Description Boolean thisEvent | Improve this Doc View Source triggerPressed(Boolean) Declaration public void triggerPressed(bool thisEvent) Parameters Type Name Description Boolean thisEvent | Improve this Doc View Source triggerReleased(Boolean) Declaration public void triggerReleased(bool thisEvent) Parameters Type Name Description Boolean thisEvent"
  },
  "api/Virgis.GeoJsonReader.html": {
    "href": "api/Virgis.GeoJsonReader.html",
    "title": "Class GeoJsonReader | ViRGIS VR GIS",
    "keywords": "Class GeoJsonReader Inheritance Object GeoJsonReader Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class GeoJsonReader Fields | Improve this Doc View Source fileName Declaration public string fileName Field Value Type Description String | Improve this Doc View Source payload Declaration public string payload Field Value Type Description String Methods | Improve this Doc View Source getFeatureCollection() Declaration public FeatureCollection getFeatureCollection() Returns Type Description FeatureCollection | Improve this Doc View Source GetProject() Declaration public GisProject GetProject() Returns Type Description GisProject | Improve this Doc View Source Load(String) Declaration public Task Load(string file) Parameters Type Name Description String file Returns Type Description Task | Improve this Doc View Source Save() Declaration public Task Save() Returns Type Description Task | Improve this Doc View Source SetFeatureCollection(FeatureCollection) Declaration public void SetFeatureCollection(FeatureCollection contents) Parameters Type Name Description FeatureCollection contents | Improve this Doc View Source SetProject(GisProject) Declaration public void SetProject(GisProject project) Parameters Type Name Description GisProject project"
  },
  "api/Virgis.html": {
    "href": "api/Virgis.html",
    "title": "Namespace Virgis | ViRGIS VR GIS",
    "keywords": "Namespace Virgis Classes AppState CSVData CSVReader CSVRow Dataline Controls and Instance of a Line Component DataPlotter Datapoint Controls an instance of a data pointor handle Datapolygon Controls an instance of a Polygon ViRGIS component DataRotator DcurveExtensions EditableLayerChangedEvent EditableLayerChangedEvent is triggered during an edit session, where the editable layer has been changed to another layer. EditModeUI EditSession EndEditSessionEvent FeatureAdder FeatureObject abstract parent for generic datasets FlyingCam Main Script for controlling the UI behaviour and the movement of the Camera GeoJsonReader KdTree<T> KdTree<T>.KdNode LayerPanelEditSelectedEvent LayersUI LayersUI is the mediator for all components within the Layers UI GO (i.e. Layers Menu). LayerUIPanel LineExtensionMethods LineLayer The parent entity for a instance of a Line Layer - that holds one MultiLineString FeatureCollection LineSegment Controls an instance of a line segment MapInitialize This script initialises the project and loads the Project and Layer data. It is run once at Startup MenuFacade MenuFacade is the mediator for all components within the Menus GO. MeshData Class for holding Mesh data as a SimpleMeshBuilder MeshLayer ParticleData Class for holding PointCloud data as a Particle cloud Note - this extends FeatureCollection. This is a hack to allow typing. this type WILL NOT SAVE succesfully to GeoJSON as a FeatureCollection PlyImport Imports a .ply file as a ParticleData Object Adapted from https://github.com/leon196/PointCloudExporter/blob/master/Assets/Scripts/SimpleImporter.cs PointCloudLayer PointLayer PolygonLayer Controls an instance of a Polygon Layer PositionExtensionMethods SimpleMeshExtensions UnityLayers Vector3ExtebnsionMethods VertexLookup Structure used to hold avertex for an arbitrary shape and to calculate equality VirgisFeature VirgisLayer<T, S> Abstract parent for all Layer entities VirgisVectorExtensions ZoomEvent Event type for Zoom Change Events Structs MoveArgs Structure used to hold the details of a generic move request sent to a target enitity Interfaces IVirgisEntity Abstract parent for all in game entities IVirgisFeature Abstract Parent for all symbology relevant in game entities IVirgisLayer Enums EditSession.EditMode SelectionTypes Enum holding the types of \"selection\"tha the user can make"
  },
  "api/Virgis.IVirgisEntity.html": {
    "href": "api/Virgis.IVirgisEntity.html",
    "title": "Interface IVirgisEntity | ViRGIS VR GIS",
    "keywords": "Interface IVirgisEntity Abstract parent for all in game entities Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public interface IVirgisEntity Methods | Improve this Doc View Source ExitEditSession(Boolean) Declaration void ExitEditSession(bool saved) Parameters Type Name Description Boolean saved | Improve this Doc View Source GetClosest(Vector3, Guid[]) Declaration VirgisFeature GetClosest(Vector3 coords, Guid[] exclude) Parameters Type Name Description UnityEngine.Vector3 coords Guid [] exclude Returns Type Description VirgisFeature | Improve this Doc View Source GetId() Declaration Guid GetId() Returns Type Description Guid | Improve this Doc View Source GetMetadata() Declaration RecordSet GetMetadata() Returns Type Description RecordSet | Improve this Doc View Source MoveAxis(MoveArgs) Declaration void MoveAxis(MoveArgs args) Parameters Type Name Description MoveArgs args | Improve this Doc View Source MoveTo(MoveArgs) Declaration void MoveTo(MoveArgs args) Parameters Type Name Description MoveArgs args | Improve this Doc View Source Selected(SelectionTypes) Declaration void Selected(SelectionTypes button) Parameters Type Name Description SelectionTypes button | Improve this Doc View Source StartEditSession() Declaration void StartEditSession() | Improve this Doc View Source Translate(MoveArgs) Declaration void Translate(MoveArgs args) Parameters Type Name Description MoveArgs args | Improve this Doc View Source UnSelected(SelectionTypes) Declaration void UnSelected(SelectionTypes button) Parameters Type Name Description SelectionTypes button | Improve this Doc View Source VertexMove(MoveArgs) Declaration void VertexMove(MoveArgs args) Parameters Type Name Description MoveArgs args"
  },
  "api/Virgis.IVirgisFeature.html": {
    "href": "api/Virgis.IVirgisFeature.html",
    "title": "Interface IVirgisFeature | ViRGIS VR GIS",
    "keywords": "Interface IVirgisFeature Abstract Parent for all symbology relevant in game entities Inherited Members IVirgisEntity.Selected(SelectionTypes) IVirgisEntity.UnSelected(SelectionTypes) IVirgisEntity.StartEditSession() IVirgisEntity.ExitEditSession(Boolean) IVirgisEntity.GetId() IVirgisEntity.GetMetadata() IVirgisEntity.GetClosest(Vector3, Guid[]) IVirgisEntity.MoveAxis(MoveArgs) IVirgisEntity.Translate(MoveArgs) IVirgisEntity.MoveTo(MoveArgs) IVirgisEntity.VertexMove(MoveArgs) Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public interface IVirgisFeature : IVirgisEntity Methods | Improve this Doc View Source AddVertex(Vector3) Declaration VirgisFeature AddVertex(Vector3 position) Parameters Type Name Description UnityEngine.Vector3 position Returns Type Description VirgisFeature | Improve this Doc View Source GetGeometry<T>() Declaration T GetGeometry<T>() Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source RemoveVertex(VirgisFeature) Declaration void RemoveVertex(VirgisFeature vertex) Parameters Type Name Description VirgisFeature vertex | Improve this Doc View Source SetMaterial(Material, Material) Declaration void SetMaterial(Material mainMat, Material selectedMat) Parameters Type Name Description UnityEngine.Material mainMat UnityEngine.Material selectedMat"
  },
  "api/Virgis.IVirgisLayer.html": {
    "href": "api/Virgis.IVirgisLayer.html",
    "title": "Interface IVirgisLayer | ViRGIS VR GIS",
    "keywords": "Interface IVirgisLayer Inherited Members IVirgisEntity.Selected(SelectionTypes) IVirgisEntity.UnSelected(SelectionTypes) IVirgisEntity.StartEditSession() IVirgisEntity.ExitEditSession(Boolean) IVirgisEntity.GetId() IVirgisEntity.GetMetadata() IVirgisEntity.GetClosest(Vector3, Guid[]) IVirgisEntity.MoveAxis(MoveArgs) IVirgisEntity.Translate(MoveArgs) IVirgisEntity.MoveTo(MoveArgs) IVirgisEntity.VertexMove(MoveArgs) Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public interface IVirgisLayer : IVirgisEntity Methods | Improve this Doc View Source AddFeature(Vector3[]) Declaration VirgisFeature AddFeature(Vector3[] geometry) Parameters Type Name Description UnityEngine.Vector3 [] geometry Returns Type Description VirgisFeature | Improve this Doc View Source CheckPoint() Declaration void CheckPoint() | Improve this Doc View Source Draw() Declaration void Draw() | Improve this Doc View Source GetFeature(Guid) Declaration VirgisFeature GetFeature(Guid id) Parameters Type Name Description Guid id Returns Type Description VirgisFeature | Improve this Doc View Source GetFeatureShape() Declaration GameObject GetFeatureShape() Returns Type Description UnityEngine.GameObject | Improve this Doc View Source IsEditable() Declaration bool IsEditable() Returns Type Description Boolean | Improve this Doc View Source IsVisible() Declaration bool IsVisible() Returns Type Description Boolean | Improve this Doc View Source Save() Declaration RecordSet Save() Returns Type Description RecordSet | Improve this Doc View Source SetEditable(Boolean) Declaration void SetEditable(bool inSession) Parameters Type Name Description Boolean inSession | Improve this Doc View Source SetVisible(Boolean) Declaration void SetVisible(bool visible) Parameters Type Name Description Boolean visible"
  },
  "api/Virgis.KdTree-1.html": {
    "href": "api/Virgis.KdTree-1.html",
    "title": "Class KdTree<T> | ViRGIS VR GIS",
    "keywords": "Class KdTree<T> Inheritance Object KdTree<T> Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class KdTree<T> : IEnumerable<T>, IEnumerable where T : Component Type Parameters Name Description T Constructors | Improve this Doc View Source KdTree(Boolean) create a tree Declaration public KdTree(bool just2D = false) Parameters Type Name Description Boolean just2D just use x/z Fields | Improve this Doc View Source _count Declaration protected int _count Field Value Type Description Int32 | Improve this Doc View Source _just2D Declaration protected bool _just2D Field Value Type Description Boolean | Improve this Doc View Source _last Declaration protected KdTree<T>.KdNode _last Field Value Type Description KdTree.KdNode <> | Improve this Doc View Source _LastUpdate Declaration protected float _LastUpdate Field Value Type Description Single | Improve this Doc View Source _open Declaration protected KdTree<T>.KdNode[] _open Field Value Type Description KdTree.KdNode <>[] | Improve this Doc View Source _root Declaration protected KdTree<T>.KdNode _root Field Value Type Description KdTree.KdNode <> Properties | Improve this Doc View Source AverageSearchDeep Declaration public float AverageSearchDeep { get; protected set; } Property Value Type Description Single | Improve this Doc View Source AverageSearchLength Declaration public float AverageSearchLength { get; protected set; } Property Value Type Description Single | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean | Improve this Doc View Source Item[Int32] Declaration public T this[int key] { get; } Parameters Type Name Description Int32 key Property Value Type Description T Methods | Improve this Doc View Source _distance(Vector3, Vector3) Declaration protected float _distance(Vector3 a, Vector3 b) Parameters Type Name Description UnityEngine.Vector3 a UnityEngine.Vector3 b Returns Type Description Single | Improve this Doc View Source _findClosest(Vector3, List<T>) Declaration protected T _findClosest(Vector3 position, List<T> traversed = null) Parameters Type Name Description UnityEngine.Vector3 position List <T> traversed Returns Type Description T | Improve this Doc View Source _getSplitValue(Int32, Vector3) Declaration protected float _getSplitValue(int level, Vector3 position) Parameters Type Name Description Int32 level UnityEngine.Vector3 position Returns Type Description Single | Improve this Doc View Source Add(T) add item Declaration public void Add(T item) Parameters Type Name Description T item item | Improve this Doc View Source AddAll(List<T>) batch add items Declaration public void AddAll(List<T> items) Parameters Type Name Description List <T> items items | Improve this Doc View Source Clear() clear tree Declaration public void Clear() | Improve this Doc View Source CountAll(Predicate<T>) count all objects that matches the given predicate Declaration public int CountAll(Predicate<T> match) Parameters Type Name Description Predicate <T> match lamda expression Returns Type Description Int32 matching object count | Improve this Doc View Source Find(Predicate<T>) find first object that matches the given predicate Declaration public T Find(Predicate<T> match) Parameters Type Name Description Predicate <T> match lamda expression Returns Type Description T | Improve this Doc View Source FindAll(Predicate<T>) find all objects that matches the given predicate Declaration public KdTree<T> FindAll(Predicate<T> match) Parameters Type Name Description Predicate <T> match lamda expression Returns Type Description KdTree <T> | Improve this Doc View Source FindClose(Vector3) Find close objects to given position Declaration public IEnumerable<T> FindClose(Vector3 position) Parameters Type Name Description UnityEngine.Vector3 position position Returns Type Description IEnumerable <T> close object | Improve this Doc View Source FindClosest(Vector3) Find closest object to given position Declaration public T FindClosest(Vector3 position) Parameters Type Name Description UnityEngine.Vector3 position position Returns Type Description T closest object | Improve this Doc View Source GetEnumerator() Method to enable foreach-loops Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> Enumberator | Improve this Doc View Source RemoveAll(Predicate<T>) remove all objects that matches the given predicate Declaration public void RemoveAll(Predicate<T> match) Parameters Type Name Description Predicate <T> match lamda expression | Improve this Doc View Source RemoveAt(Int32) Remove at position i (position in list or loop) Declaration public void RemoveAt(int i) Parameters Type Name Description Int32 i | Improve this Doc View Source ToList() Convert to list Declaration public List<T> ToList() Returns Type Description List <T> list | Improve this Doc View Source UpdatePositions() Update positions (if objects moved) Declaration public void UpdatePositions() | Improve this Doc View Source UpdatePositions(Single) Update positions (if objects moved) Declaration public void UpdatePositions(float rate) Parameters Type Name Description Single rate Updates per second"
  },
  "api/Virgis.KdTree-1.KdNode.html": {
    "href": "api/Virgis.KdTree-1.KdNode.html",
    "title": "Class KdTree<T>.KdNode | ViRGIS VR GIS",
    "keywords": "Class KdTree<T>.KdNode Inheritance Object KdTree<T>.KdNode Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax protected class KdNode"
  },
  "api/Virgis.LayerPanelEditSelectedEvent.html": {
    "href": "api/Virgis.LayerPanelEditSelectedEvent.html",
    "title": "Class LayerPanelEditSelectedEvent | ViRGIS VR GIS",
    "keywords": "Class LayerPanelEditSelectedEvent Inheritance Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent < LayerUIPanel , Boolean > LayerPanelEditSelectedEvent Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax [Serializable] public class LayerPanelEditSelectedEvent : UnityEvent<LayerUIPanel, bool>, ISerializationCallbackReceiver"
  },
  "api/Virgis.LayersUI.html": {
    "href": "api/Virgis.LayersUI.html",
    "title": "Class LayersUI | ViRGIS VR GIS",
    "keywords": "Class LayersUI LayersUI is the mediator for all components within the Layers UI GO (i.e. Layers Menu). Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour LayersUI Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class LayersUI : MonoBehaviour Fields | Improve this Doc View Source layerPanelPrefab Declaration public GameObject layerPanelPrefab Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source layersScrollView Declaration public GameObject layersScrollView Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source menus Declaration public GameObject menus Field Value Type Description UnityEngine.GameObject Methods | Improve this Doc View Source HandleKeyInput(InputAction.CallbackContext) Declaration public void HandleKeyInput(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source OnShowMenuButtonClicked() Declaration public void OnShowMenuButtonClicked()"
  },
  "api/Virgis.LayerUIPanel.html": {
    "href": "api/Virgis.LayerUIPanel.html",
    "title": "Class LayerUIPanel | ViRGIS VR GIS",
    "keywords": "Class LayerUIPanel Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour LayerUIPanel Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class LayerUIPanel : MonoBehaviour Fields | Improve this Doc View Source editLayerToggle Declaration public Toggle editLayerToggle Field Value Type Description UnityEngine.UI.Toggle | Improve this Doc View Source viewLayerToggle Declaration public Toggle viewLayerToggle Field Value Type Description UnityEngine.UI.Toggle Properties | Improve this Doc View Source layer Declaration public IVirgisLayer layer { get; set; } Property Value Type Description IVirgisLayer Methods | Improve this Doc View Source AddEditSelectedListener(UnityAction<LayerUIPanel, Boolean>) Declaration public void AddEditSelectedListener(UnityAction<LayerUIPanel, bool> action) Parameters Type Name Description UnityEngine.Events.UnityAction < LayerUIPanel , Boolean > action"
  },
  "api/Virgis.LineExtensionMethods.html": {
    "href": "api/Virgis.LineExtensionMethods.html",
    "title": "Class LineExtensionMethods | ViRGIS VR GIS",
    "keywords": "Class LineExtensionMethods Inheritance Object LineExtensionMethods Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public static class LineExtensionMethods Methods | Improve this Doc View Source Point(LineString, Int32) Converts LineString Vertex i to a Position Declaration public static Position Point(this LineString line, int i) Parameters Type Name Description LineString line LineString Int32 i vertex index Returns Type Description Position Position | Improve this Doc View Source Points(LineString) Converts LineString to Position[] Declaration public static Position[] Points(this LineString line) Parameters Type Name Description LineString line LineString Returns Type Description Position [] Position[] | Improve this Doc View Source Vector3(LineString) Converts LineString to Vector3[] in world space taking account of zoom, scale and map scale Declaration public static Vector3[] Vector3(this LineString line) Parameters Type Name Description LineString line LineString Returns Type Description UnityEngine.Vector3 [] Vector3[] World Space Locations"
  },
  "api/Virgis.LineLayer.html": {
    "href": "api/Virgis.LineLayer.html",
    "title": "Class LineLayer | ViRGIS VR GIS",
    "keywords": "Class LineLayer The parent entity for a instance of a Line Layer - that holds one MultiLineString FeatureCollection Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour VirgisLayer < GeographyCollection , FeatureCollection > LineLayer Implements IVirgisLayer IVirgisEntity Inherited Members VirgisLayer<GeographyCollection, FeatureCollection>.layer VirgisLayer<GeographyCollection, FeatureCollection>.features VirgisLayer<GeographyCollection, FeatureCollection>.changed VirgisLayer<GeographyCollection, FeatureCollection>._id VirgisLayer<GeographyCollection, FeatureCollection>._editable VirgisLayer<GeographyCollection, FeatureCollection>.Init(GeographyCollection) VirgisLayer<GeographyCollection, FeatureCollection>._init(GeographyCollection) VirgisLayer<GeographyCollection, FeatureCollection>.AddFeature(Vector3[]) VirgisLayer<GeographyCollection, FeatureCollection>._addFeature(Vector3[]) VirgisLayer<GeographyCollection, FeatureCollection>.Draw() VirgisLayer<GeographyCollection, FeatureCollection>._draw() VirgisLayer<GeographyCollection, FeatureCollection>.CheckPoint() VirgisLayer<GeographyCollection, FeatureCollection>._checkpoint() VirgisLayer<GeographyCollection, FeatureCollection>.Save() VirgisLayer<GeographyCollection, FeatureCollection>._save() VirgisLayer<GeographyCollection, FeatureCollection>.Translate(MoveArgs) VirgisLayer<GeographyCollection, FeatureCollection>.MoveAxis(MoveArgs) VirgisLayer<GeographyCollection, FeatureCollection>.MoveTo(MoveArgs) VirgisLayer<GeographyCollection, FeatureCollection>.VertexMove(MoveArgs) VirgisLayer<GeographyCollection, FeatureCollection>.StartEditSession() VirgisLayer<GeographyCollection, FeatureCollection>.ExitEditSession(Boolean) VirgisLayer<GeographyCollection, FeatureCollection>.Selected(SelectionTypes) VirgisLayer<GeographyCollection, FeatureCollection>.UnSelected(SelectionTypes) VirgisLayer<GeographyCollection, FeatureCollection>.GetClosest(Vector3, Guid[]) VirgisLayer<GeographyCollection, FeatureCollection>.GetFeature(Guid) VirgisLayer<GeographyCollection, FeatureCollection>.GetId() VirgisLayer<GeographyCollection, FeatureCollection>.GetMetadata() VirgisLayer<GeographyCollection, FeatureCollection>.GetFeatureShape() VirgisLayer<GeographyCollection, FeatureCollection>.SetVisible(Boolean) VirgisLayer<GeographyCollection, FeatureCollection>.IsVisible() VirgisLayer<GeographyCollection, FeatureCollection>.SetEditable(Boolean) VirgisLayer<GeographyCollection, FeatureCollection>.IsEditable() VirgisLayer<GeographyCollection, FeatureCollection>.Equals(Object) VirgisLayer<GeographyCollection, FeatureCollection>.GetHashCode() VirgisLayer<GeographyCollection, FeatureCollection>.Equals(VirgisLayer<GeographyCollection, FeatureCollection>) Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class LineLayer : VirgisLayer<GeographyCollection, FeatureCollection>, IVirgisLayer, IVirgisEntity Fields | Improve this Doc View Source CubePrefab Declaration public GameObject CubePrefab Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source CuboidLinePrefab Declaration public GameObject CuboidLinePrefab Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source CylinderLinePrefab Declaration public GameObject CylinderLinePrefab Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source CylinderPrefab Declaration public GameObject CylinderPrefab Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source LabelPrefab Declaration public GameObject LabelPrefab Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source LineBaseMaterial Declaration public Material LineBaseMaterial Field Value Type Description UnityEngine.Material | Improve this Doc View Source PointBaseMaterial Declaration public Material PointBaseMaterial Field Value Type Description UnityEngine.Material | Improve this Doc View Source SpherePrefab Declaration public GameObject SpherePrefab Field Value Type Description UnityEngine.GameObject Methods | Improve this Doc View Source _addFeature(Vector3[]) Declaration protected override VirgisFeature _addFeature(Vector3[] geometry) Parameters Type Name Description UnityEngine.Vector3 [] geometry Returns Type Description VirgisFeature Overrides Virgis.VirgisLayer<Project.GeographyCollection, GeoJSON.Net.Feature.FeatureCollection>._addFeature(UnityEngine.Vector3[]) | Improve this Doc View Source _checkpoint() Declaration protected override void _checkpoint() Overrides Virgis.VirgisLayer<Project.GeographyCollection, GeoJSON.Net.Feature.FeatureCollection>._checkpoint() | Improve this Doc View Source _draw() Declaration protected override void _draw() Overrides Virgis.VirgisLayer<Project.GeographyCollection, GeoJSON.Net.Feature.FeatureCollection>._draw() | Improve this Doc View Source _drawFeature(Vector3[], Boolean, String, Dictionary<String, Object>) Draws a single feature based on world scale coordinates Declaration protected VirgisFeature _drawFeature(Vector3[] line, bool Lr = false, string gisId = null, Dictionary<string, object> properties = null) Parameters Type Name Description UnityEngine.Vector3 [] line Vector3[] coordinates Boolean Lr boolean Is the line a linear ring , deafult false String gisId string Id Dictionary < String , Object > properties Dictionary properties Returns Type Description VirgisFeature | Improve this Doc View Source _init(GeographyCollection) Declaration protected override Task _init(GeographyCollection layer) Parameters Type Name Description GeographyCollection layer Returns Type Description Task Overrides Virgis.VirgisLayer<Project.GeographyCollection, GeoJSON.Net.Feature.FeatureCollection>._init(Project.GeographyCollection) | Improve this Doc View Source _save() Declaration protected override void _save() Overrides Virgis.VirgisLayer<Project.GeographyCollection, GeoJSON.Net.Feature.FeatureCollection>._save() | Improve this Doc View Source GetFeatureShape() Declaration public override GameObject GetFeatureShape() Returns Type Description UnityEngine.GameObject Overrides Virgis.VirgisLayer<Project.GeographyCollection, GeoJSON.Net.Feature.FeatureCollection>.GetFeatureShape() | Improve this Doc View Source MoveAxis(MoveArgs) Declaration public override void MoveAxis(MoveArgs args) Parameters Type Name Description MoveArgs args Overrides Virgis.VirgisLayer<Project.GeographyCollection, GeoJSON.Net.Feature.FeatureCollection>.MoveAxis(Virgis.MoveArgs) | Improve this Doc View Source Translate(MoveArgs) Declaration public override void Translate(MoveArgs args) Parameters Type Name Description MoveArgs args Overrides Virgis.VirgisLayer<Project.GeographyCollection, GeoJSON.Net.Feature.FeatureCollection>.Translate(Virgis.MoveArgs) Implements IVirgisLayer IVirgisEntity"
  },
  "api/Virgis.LineSegment.html": {
    "href": "api/Virgis.LineSegment.html",
    "title": "Class LineSegment | ViRGIS VR GIS",
    "keywords": "Class LineSegment Controls an instance of a line segment Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour VirgisFeature LineSegment Implements IVirgisFeature IVirgisEntity Inherited Members VirgisFeature.mainMat VirgisFeature.selectedMat VirgisFeature.gisId VirgisFeature.gisProperties VirgisFeature.label VirgisFeature.StartEditSession() VirgisFeature.ExitEditSession(Boolean) VirgisFeature.Translate(MoveArgs) VirgisFeature.VertexMove(MoveArgs) VirgisFeature.GetClosest(Vector3, Guid[]) VirgisFeature.RemoveVertex(VirgisFeature) VirgisFeature.GetGeometry<T>() VirgisFeature.GetId() VirgisFeature.GetMetadata() VirgisFeature.Equals(Object) VirgisFeature.GetHashCode() VirgisFeature.Equals(VirgisFeature) Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class LineSegment : VirgisFeature, IVirgisFeature, IVirgisEntity Fields | Improve this Doc View Source vEnd Declaration public int vEnd Field Value Type Description Int32 | Improve this Doc View Source vStart Declaration public int vStart Field Value Type Description Int32 Methods | Improve this Doc View Source AddVertex(Vector3) Declaration public override VirgisFeature AddVertex(Vector3 position) Parameters Type Name Description UnityEngine.Vector3 position Returns Type Description VirgisFeature Overrides VirgisFeature.AddVertex(Vector3) | Improve this Doc View Source Delete() Declaration public void Delete() | Improve this Doc View Source Draw(Vector3, Vector3, Int32, Int32, Single) Called to draw the line Segment Declaration public void Draw(Vector3 from, Vector3 to, int vertStart, int vertEnd, float dia) Parameters Type Name Description UnityEngine.Vector3 from starting point of the line segment in worldspace coords UnityEngine.Vector3 to end point for the line segment in worldspace coordinates Int32 vertStart vertex ID for the vertex at the start of the line segment Int32 vertEnd vertex ID for the vertex at the end of the line segment Single dia Diamtere of the line segement in Map.local units | Improve this Doc View Source MoveAxis(MoveArgs) Declaration public override void MoveAxis(MoveArgs args) Parameters Type Name Description MoveArgs args Overrides VirgisFeature.MoveAxis(MoveArgs) | Improve this Doc View Source MoveEnd(Vector3) Declaration public void MoveEnd(Vector3 newEnd) Parameters Type Name Description UnityEngine.Vector3 newEnd | Improve this Doc View Source MoveStart(Vector3) Declaration public void MoveStart(Vector3 newStart) Parameters Type Name Description UnityEngine.Vector3 newStart | Improve this Doc View Source MoveTo(MoveArgs) Declaration public override void MoveTo(MoveArgs args) Parameters Type Name Description MoveArgs args Overrides VirgisFeature.MoveTo(MoveArgs) | Improve this Doc View Source Selected(SelectionTypes) Declaration public override void Selected(SelectionTypes button) Parameters Type Name Description SelectionTypes button Overrides VirgisFeature.Selected(SelectionTypes) | Improve this Doc View Source SetMaterial(Material, Material) Declaration public override void SetMaterial(Material mainMat, Material selectedMat) Parameters Type Name Description UnityEngine.Material mainMat UnityEngine.Material selectedMat Overrides VirgisFeature.SetMaterial(Material, Material) | Improve this Doc View Source UnSelected(SelectionTypes) Declaration public override void UnSelected(SelectionTypes button) Parameters Type Name Description SelectionTypes button Overrides VirgisFeature.UnSelected(SelectionTypes) Implements IVirgisFeature IVirgisEntity"
  },
  "api/Virgis.MapInitialize.html": {
    "href": "api/Virgis.MapInitialize.html",
    "title": "Class MapInitialize | ViRGIS VR GIS",
    "keywords": "Class MapInitialize This script initialises the project and loads the Project and Layer data. It is run once at Startup Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour VirgisLayer < RecordSet , FeatureObject > MapInitialize Implements IVirgisLayer IVirgisEntity Inherited Members VirgisLayer<RecordSet, FeatureObject>.layer VirgisLayer<RecordSet, FeatureObject>.features VirgisLayer<RecordSet, FeatureObject>.changed VirgisLayer<RecordSet, FeatureObject>._id VirgisLayer<RecordSet, FeatureObject>._editable VirgisLayer<RecordSet, FeatureObject>.Init(RecordSet) VirgisLayer<RecordSet, FeatureObject>._init(RecordSet) VirgisLayer<RecordSet, FeatureObject>.AddFeature(Vector3[]) VirgisLayer<RecordSet, FeatureObject>._addFeature(Vector3[]) VirgisLayer<RecordSet, FeatureObject>.Draw() VirgisLayer<RecordSet, FeatureObject>._draw() VirgisLayer<RecordSet, FeatureObject>.CheckPoint() VirgisLayer<RecordSet, FeatureObject>._checkpoint() VirgisLayer<RecordSet, FeatureObject>.Save() VirgisLayer<RecordSet, FeatureObject>._save() VirgisLayer<RecordSet, FeatureObject>.Translate(MoveArgs) VirgisLayer<RecordSet, FeatureObject>.MoveAxis(MoveArgs) VirgisLayer<RecordSet, FeatureObject>.MoveTo(MoveArgs) VirgisLayer<RecordSet, FeatureObject>.VertexMove(MoveArgs) VirgisLayer<RecordSet, FeatureObject>.StartEditSession() VirgisLayer<RecordSet, FeatureObject>.ExitEditSession(Boolean) VirgisLayer<RecordSet, FeatureObject>.Selected(SelectionTypes) VirgisLayer<RecordSet, FeatureObject>.UnSelected(SelectionTypes) VirgisLayer<RecordSet, FeatureObject>.GetClosest(Vector3, Guid[]) VirgisLayer<RecordSet, FeatureObject>.GetFeature(Guid) VirgisLayer<RecordSet, FeatureObject>.GetId() VirgisLayer<RecordSet, FeatureObject>.GetMetadata() VirgisLayer<RecordSet, FeatureObject>.GetFeatureShape() VirgisLayer<RecordSet, FeatureObject>.SetVisible(Boolean) VirgisLayer<RecordSet, FeatureObject>.IsVisible() VirgisLayer<RecordSet, FeatureObject>.SetEditable(Boolean) VirgisLayer<RecordSet, FeatureObject>.IsEditable() VirgisLayer<RecordSet, FeatureObject>.Equals(Object) VirgisLayer<RecordSet, FeatureObject>.GetHashCode() VirgisLayer<RecordSet, FeatureObject>.Equals(VirgisLayer<RecordSet, FeatureObject>) Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class MapInitialize : VirgisLayer<RecordSet, FeatureObject>, IVirgisLayer, IVirgisEntity Fields | Improve this Doc View Source appState Declaration public AppState appState Field Value Type Description AppState | Improve this Doc View Source CsvLayer Declaration public GameObject CsvLayer Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source inputfile Declaration public string inputfile Field Value Type Description String | Improve this Doc View Source LineLayer Declaration public GameObject LineLayer Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source MainCamera Declaration public GameObject MainCamera Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source MeshLayer Declaration public GameObject MeshLayer Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source PointCloud Declaration public GameObject PointCloud Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source PointLayer Declaration public GameObject PointLayer Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source PolygonLayer Declaration public GameObject PolygonLayer Field Value Type Description UnityEngine.GameObject Methods | Improve this Doc View Source _addFeature(Vector3[]) Declaration protected override VirgisFeature _addFeature(Vector3[] geometry) Parameters Type Name Description UnityEngine.Vector3 [] geometry Returns Type Description VirgisFeature Overrides Virgis.VirgisLayer<Project.RecordSet, Virgis.FeatureObject>._addFeature(UnityEngine.Vector3[]) | Improve this Doc View Source _checkpoint() Declaration protected override void _checkpoint() Overrides Virgis.VirgisLayer<Project.RecordSet, Virgis.FeatureObject>._checkpoint() | Improve this Doc View Source _draw() Declaration protected override void _draw() Overrides Virgis.VirgisLayer<Project.RecordSet, Virgis.FeatureObject>._draw() | Improve this Doc View Source _init(RecordSet) Declaration protected override Task _init(RecordSet layer) Parameters Type Name Description RecordSet layer Returns Type Description Task Overrides Virgis.VirgisLayer<Project.RecordSet, Virgis.FeatureObject>._init(Project.RecordSet) | Improve this Doc View Source _onExitEditSession(Boolean) Called when an edit session ends Declaration protected void _onExitEditSession(bool saved) Parameters Type Name Description Boolean saved true if stop and save, false if stop and discard | Improve this Doc View Source _onStartEditSession() Declaration protected void _onStartEditSession() | Improve this Doc View Source _save() Declaration protected override void _save() Overrides Virgis.VirgisLayer<Project.RecordSet, Virgis.FeatureObject>._save() | Improve this Doc View Source Add(MoveArgs) Declaration public void Add(MoveArgs args) Parameters Type Name Description MoveArgs args | Improve this Doc View Source ExitEditSession(Boolean) Declaration public override void ExitEditSession(bool saved) Parameters Type Name Description Boolean saved Overrides Virgis.VirgisLayer<Project.RecordSet, Virgis.FeatureObject>.ExitEditSession(System.Boolean) | Improve this Doc View Source GetFeatureShape() Declaration public override GameObject GetFeatureShape() Returns Type Description UnityEngine.GameObject Overrides Virgis.VirgisLayer<Project.RecordSet, Virgis.FeatureObject>.GetFeatureShape() | Improve this Doc View Source MoveAxis(MoveArgs) Declaration public override void MoveAxis(MoveArgs args) Parameters Type Name Description MoveArgs args Overrides Virgis.VirgisLayer<Project.RecordSet, Virgis.FeatureObject>.MoveAxis(Virgis.MoveArgs) | Improve this Doc View Source Save() Declaration public void Save() | Improve this Doc View Source StartEditSession() Declaration public override void StartEditSession() Overrides Virgis.VirgisLayer<Project.RecordSet, Virgis.FeatureObject>.StartEditSession() | Improve this Doc View Source Translate(MoveArgs) Declaration public override void Translate(MoveArgs args) Parameters Type Name Description MoveArgs args Overrides Virgis.VirgisLayer<Project.RecordSet, Virgis.FeatureObject>.Translate(Virgis.MoveArgs) Implements IVirgisLayer IVirgisEntity"
  },
  "api/Virgis.MenuFacade.html": {
    "href": "api/Virgis.MenuFacade.html",
    "title": "Class MenuFacade | ViRGIS VR GIS",
    "keywords": "Class MenuFacade MenuFacade is the mediator for all components within the Menus GO. Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour MenuFacade Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class MenuFacade : MonoBehaviour Fields | Improve this Doc View Source layersUI Declaration public GameObject layersUI Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source startEditButton Declaration public Button startEditButton Field Value Type Description UnityEngine.UI.Button | Improve this Doc View Source stopDiscardEditButton Declaration public Button stopDiscardEditButton Field Value Type Description UnityEngine.UI.Button | Improve this Doc View Source stopSaveEditButton Declaration public Button stopSaveEditButton Field Value Type Description UnityEngine.UI.Button Methods | Improve this Doc View Source HandleKeyInput(InputAction.CallbackContext) Declaration public void HandleKeyInput(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction.CallbackContext context | Improve this Doc View Source OnShowLayersButtonClicked() Declaration public void OnShowLayersButtonClicked() | Improve this Doc View Source OnStartEditButtonClicked() Declaration public void OnStartEditButtonClicked() | Improve this Doc View Source OnStopDiscardEditButtonClicked() Declaration public void OnStopDiscardEditButtonClicked() | Improve this Doc View Source OnStopSaveEditButtonClicked() Declaration public void OnStopSaveEditButtonClicked() | Improve this Doc View Source Visible(Boolean) Declaration public void Visible(bool thisEvent) Parameters Type Name Description Boolean thisEvent"
  },
  "api/Virgis.MeshData.html": {
    "href": "api/Virgis.MeshData.html",
    "title": "Class MeshData | ViRGIS VR GIS",
    "keywords": "Class MeshData Class for holding Mesh data as a SimpleMeshBuilder Inheritance Object MeshData Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class MeshData Fields | Improve this Doc View Source Mesh Declaration public SimpleMeshBuilder Mesh Field Value Type Description SimpleMeshBuilder"
  },
  "api/Virgis.MeshLayer.html": {
    "href": "api/Virgis.MeshLayer.html",
    "title": "Class MeshLayer | ViRGIS VR GIS",
    "keywords": "Class MeshLayer Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour VirgisLayer < GeographyCollection , MeshData > MeshLayer Implements IVirgisLayer IVirgisEntity Inherited Members VirgisLayer<GeographyCollection, MeshData>.layer VirgisLayer<GeographyCollection, MeshData>.features VirgisLayer<GeographyCollection, MeshData>.changed VirgisLayer<GeographyCollection, MeshData>._id VirgisLayer<GeographyCollection, MeshData>._editable VirgisLayer<GeographyCollection, MeshData>.Init(GeographyCollection) VirgisLayer<GeographyCollection, MeshData>._init(GeographyCollection) VirgisLayer<GeographyCollection, MeshData>.AddFeature(Vector3[]) VirgisLayer<GeographyCollection, MeshData>._addFeature(Vector3[]) VirgisLayer<GeographyCollection, MeshData>.Draw() VirgisLayer<GeographyCollection, MeshData>._draw() VirgisLayer<GeographyCollection, MeshData>.CheckPoint() VirgisLayer<GeographyCollection, MeshData>._checkpoint() VirgisLayer<GeographyCollection, MeshData>.Save() VirgisLayer<GeographyCollection, MeshData>._save() VirgisLayer<GeographyCollection, MeshData>.Translate(MoveArgs) VirgisLayer<GeographyCollection, MeshData>.MoveAxis(MoveArgs) VirgisLayer<GeographyCollection, MeshData>.MoveTo(MoveArgs) VirgisLayer<GeographyCollection, MeshData>.VertexMove(MoveArgs) VirgisLayer<GeographyCollection, MeshData>.StartEditSession() VirgisLayer<GeographyCollection, MeshData>.ExitEditSession(Boolean) VirgisLayer<GeographyCollection, MeshData>.Selected(SelectionTypes) VirgisLayer<GeographyCollection, MeshData>.UnSelected(SelectionTypes) VirgisLayer<GeographyCollection, MeshData>.GetClosest(Vector3, Guid[]) VirgisLayer<GeographyCollection, MeshData>.GetFeature(Guid) VirgisLayer<GeographyCollection, MeshData>.GetId() VirgisLayer<GeographyCollection, MeshData>.GetMetadata() VirgisLayer<GeographyCollection, MeshData>.GetFeatureShape() VirgisLayer<GeographyCollection, MeshData>.SetVisible(Boolean) VirgisLayer<GeographyCollection, MeshData>.IsVisible() VirgisLayer<GeographyCollection, MeshData>.SetEditable(Boolean) VirgisLayer<GeographyCollection, MeshData>.IsEditable() VirgisLayer<GeographyCollection, MeshData>.Equals(Object) VirgisLayer<GeographyCollection, MeshData>.GetHashCode() VirgisLayer<GeographyCollection, MeshData>.Equals(VirgisLayer<GeographyCollection, MeshData>) Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class MeshLayer : VirgisLayer<GeographyCollection, MeshData>, IVirgisLayer, IVirgisEntity Fields | Improve this Doc View Source handle Declaration public GameObject handle Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source HandleMaterial Declaration public Material HandleMaterial Field Value Type Description UnityEngine.Material | Improve this Doc View Source material Declaration public Material material Field Value Type Description UnityEngine.Material | Improve this Doc View Source meshes Declaration public List<GameObject> meshes Field Value Type Description List < UnityEngine.GameObject > Methods | Improve this Doc View Source _addFeature(Vector3[]) Declaration protected override VirgisFeature _addFeature(Vector3[] geometry) Parameters Type Name Description UnityEngine.Vector3 [] geometry Returns Type Description VirgisFeature Overrides Virgis.VirgisLayer<Project.GeographyCollection, Virgis.MeshData>._addFeature(UnityEngine.Vector3[]) | Improve this Doc View Source _checkpoint() Declaration protected override void _checkpoint() Overrides Virgis.VirgisLayer<Project.GeographyCollection, Virgis.MeshData>._checkpoint() | Improve this Doc View Source _draw() Declaration protected override void _draw() Overrides Virgis.VirgisLayer<Project.GeographyCollection, Virgis.MeshData>._draw() | Improve this Doc View Source _init(GeographyCollection) Declaration protected override Task _init(GeographyCollection layer) Parameters Type Name Description GeographyCollection layer Returns Type Description Task Overrides Virgis.VirgisLayer<Project.GeographyCollection, Virgis.MeshData>._init(Project.GeographyCollection) | Improve this Doc View Source _save() Declaration protected override void _save() Overrides Virgis.VirgisLayer<Project.GeographyCollection, Virgis.MeshData>._save() | Improve this Doc View Source GetFeatureShape() Declaration public override GameObject GetFeatureShape() Returns Type Description UnityEngine.GameObject Overrides Virgis.VirgisLayer<Project.GeographyCollection, Virgis.MeshData>.GetFeatureShape() | Improve this Doc View Source MoveAxis(MoveArgs) Declaration public override void MoveAxis(MoveArgs args) Parameters Type Name Description MoveArgs args Overrides Virgis.VirgisLayer<Project.GeographyCollection, Virgis.MeshData>.MoveAxis(Virgis.MoveArgs) | Improve this Doc View Source Translate(MoveArgs) Declaration public override void Translate(MoveArgs args) Parameters Type Name Description MoveArgs args Overrides Virgis.VirgisLayer<Project.GeographyCollection, Virgis.MeshData>.Translate(Virgis.MoveArgs) Implements IVirgisLayer IVirgisEntity"
  },
  "api/Virgis.MoveArgs.html": {
    "href": "api/Virgis.MoveArgs.html",
    "title": "Struct MoveArgs | ViRGIS VR GIS",
    "keywords": "Struct MoveArgs Structure used to hold the details of a generic move request sent to a target enitity Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public struct MoveArgs Fields | Improve this Doc View Source id Declaration public Guid id Field Value Type Description Guid | Improve this Doc View Source oldPos Declaration public Vector3 oldPos Field Value Type Description UnityEngine.Vector3 | Improve this Doc View Source pos Declaration public Vector3 pos Field Value Type Description UnityEngine.Vector3 | Improve this Doc View Source rotate Declaration public Quaternion rotate Field Value Type Description UnityEngine.Quaternion | Improve this Doc View Source scale Declaration public float scale Field Value Type Description Single | Improve this Doc View Source translate Declaration public Vector3 translate Field Value Type Description UnityEngine.Vector3"
  },
  "api/Virgis.ParticleData.html": {
    "href": "api/Virgis.ParticleData.html",
    "title": "Class ParticleData | ViRGIS VR GIS",
    "keywords": "Class ParticleData Class for holding PointCloud data as a Particle cloud Note - this extends FeatureCollection. This is a hack to allow typing. this type WILL NOT SAVE succesfully to GeoJSON as a FeatureCollection Inheritance Object ParticleData Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class ParticleData Fields | Improve this Doc View Source bounds Declaration public Bounds bounds Field Value Type Description UnityEngine.Bounds | Improve this Doc View Source colors Declaration public List<Color32> colors Field Value Type Description List < Color32 > | Improve this Doc View Source normals Declaration public List<Vector3> normals Field Value Type Description List < UnityEngine.Vector3 > | Improve this Doc View Source vertexCount Declaration public int vertexCount Field Value Type Description Int32 | Improve this Doc View Source vertices Declaration public List<Vector3> vertices Field Value Type Description List < UnityEngine.Vector3 >"
  },
  "api/Virgis.PlyImport.html": {
    "href": "api/Virgis.PlyImport.html",
    "title": "Class PlyImport | ViRGIS VR GIS",
    "keywords": "Class PlyImport Imports a .ply file as a ParticleData Object Adapted from https://github.com/leon196/PointCloudExporter/blob/master/Assets/Scripts/SimpleImporter.cs Inheritance Object PlyImport Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class PlyImport Methods | Improve this Doc View Source Load(String, Int32) Declaration public Task<ParticleData> Load(string filePath, int maximumVertex = 10000000) Parameters Type Name Description String filePath Int32 maximumVertex Returns Type Description Task < ParticleData >"
  },
  "api/Virgis.PointCloudLayer.html": {
    "href": "api/Virgis.PointCloudLayer.html",
    "title": "Class PointCloudLayer | ViRGIS VR GIS",
    "keywords": "Class PointCloudLayer Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour VirgisLayer < GeographyCollection , ParticleData > PointCloudLayer Implements IVirgisLayer IVirgisEntity Inherited Members VirgisLayer<GeographyCollection, ParticleData>.layer VirgisLayer<GeographyCollection, ParticleData>.features VirgisLayer<GeographyCollection, ParticleData>.changed VirgisLayer<GeographyCollection, ParticleData>._id VirgisLayer<GeographyCollection, ParticleData>._editable VirgisLayer<GeographyCollection, ParticleData>.Init(GeographyCollection) VirgisLayer<GeographyCollection, ParticleData>._init(GeographyCollection) VirgisLayer<GeographyCollection, ParticleData>.AddFeature(Vector3[]) VirgisLayer<GeographyCollection, ParticleData>._addFeature(Vector3[]) VirgisLayer<GeographyCollection, ParticleData>.Draw() VirgisLayer<GeographyCollection, ParticleData>._draw() VirgisLayer<GeographyCollection, ParticleData>.CheckPoint() VirgisLayer<GeographyCollection, ParticleData>._checkpoint() VirgisLayer<GeographyCollection, ParticleData>.Save() VirgisLayer<GeographyCollection, ParticleData>._save() VirgisLayer<GeographyCollection, ParticleData>.Translate(MoveArgs) VirgisLayer<GeographyCollection, ParticleData>.MoveAxis(MoveArgs) VirgisLayer<GeographyCollection, ParticleData>.MoveTo(MoveArgs) VirgisLayer<GeographyCollection, ParticleData>.VertexMove(MoveArgs) VirgisLayer<GeographyCollection, ParticleData>.StartEditSession() VirgisLayer<GeographyCollection, ParticleData>.ExitEditSession(Boolean) VirgisLayer<GeographyCollection, ParticleData>.Selected(SelectionTypes) VirgisLayer<GeographyCollection, ParticleData>.UnSelected(SelectionTypes) VirgisLayer<GeographyCollection, ParticleData>.GetClosest(Vector3, Guid[]) VirgisLayer<GeographyCollection, ParticleData>.GetFeature(Guid) VirgisLayer<GeographyCollection, ParticleData>.GetId() VirgisLayer<GeographyCollection, ParticleData>.GetMetadata() VirgisLayer<GeographyCollection, ParticleData>.GetFeatureShape() VirgisLayer<GeographyCollection, ParticleData>.SetVisible(Boolean) VirgisLayer<GeographyCollection, ParticleData>.IsVisible() VirgisLayer<GeographyCollection, ParticleData>.SetEditable(Boolean) VirgisLayer<GeographyCollection, ParticleData>.IsEditable() VirgisLayer<GeographyCollection, ParticleData>.Equals(Object) VirgisLayer<GeographyCollection, ParticleData>.GetHashCode() VirgisLayer<GeographyCollection, ParticleData>.Equals(VirgisLayer<GeographyCollection, ParticleData>) Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class PointCloudLayer : VirgisLayer<GeographyCollection, ParticleData>, IVirgisLayer, IVirgisEntity Fields | Improve this Doc View Source handle Declaration public GameObject handle Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source HandleMaterial Declaration public Material HandleMaterial Field Value Type Description UnityEngine.Material | Improve this Doc View Source material Declaration public Material material Field Value Type Description UnityEngine.Material | Improve this Doc View Source meshes Declaration public List<GameObject> meshes Field Value Type Description List < UnityEngine.GameObject > | Improve this Doc View Source pointCloud Declaration public GameObject pointCloud Field Value Type Description UnityEngine.GameObject Methods | Improve this Doc View Source _addFeature(Vector3[]) Declaration protected override VirgisFeature _addFeature(Vector3[] geometry) Parameters Type Name Description UnityEngine.Vector3 [] geometry Returns Type Description VirgisFeature Overrides Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>._addFeature(UnityEngine.Vector3[]) | Improve this Doc View Source _checkpoint() Declaration protected override void _checkpoint() Overrides Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>._checkpoint() | Improve this Doc View Source _draw() Declaration protected override void _draw() Overrides Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>._draw() | Improve this Doc View Source _init(GeographyCollection) Declaration protected override Task _init(GeographyCollection layer) Parameters Type Name Description GeographyCollection layer Returns Type Description Task Overrides Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>._init(Project.GeographyCollection) | Improve this Doc View Source _save() Declaration protected override void _save() Overrides Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>._save() | Improve this Doc View Source GetFeatureShape() Declaration public override GameObject GetFeatureShape() Returns Type Description UnityEngine.GameObject Overrides Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.GetFeatureShape() | Improve this Doc View Source MoveAxis(MoveArgs) Declaration public override void MoveAxis(MoveArgs args) Parameters Type Name Description MoveArgs args Overrides Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.MoveAxis(Virgis.MoveArgs) | Improve this Doc View Source Translate(MoveArgs) Declaration public override void Translate(MoveArgs args) Parameters Type Name Description MoveArgs args Overrides Virgis.VirgisLayer<Project.GeographyCollection, Virgis.ParticleData>.Translate(Virgis.MoveArgs) Implements IVirgisLayer IVirgisEntity"
  },
  "api/Virgis.PointLayer.html": {
    "href": "api/Virgis.PointLayer.html",
    "title": "Class PointLayer | ViRGIS VR GIS",
    "keywords": "Class PointLayer Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour VirgisLayer < GeographyCollection , FeatureCollection > PointLayer Implements IVirgisLayer IVirgisEntity Inherited Members VirgisLayer<GeographyCollection, FeatureCollection>.layer VirgisLayer<GeographyCollection, FeatureCollection>.features VirgisLayer<GeographyCollection, FeatureCollection>.changed VirgisLayer<GeographyCollection, FeatureCollection>._id VirgisLayer<GeographyCollection, FeatureCollection>._editable VirgisLayer<GeographyCollection, FeatureCollection>.Init(GeographyCollection) VirgisLayer<GeographyCollection, FeatureCollection>._init(GeographyCollection) VirgisLayer<GeographyCollection, FeatureCollection>.AddFeature(Vector3[]) VirgisLayer<GeographyCollection, FeatureCollection>._addFeature(Vector3[]) VirgisLayer<GeographyCollection, FeatureCollection>.Draw() VirgisLayer<GeographyCollection, FeatureCollection>._draw() VirgisLayer<GeographyCollection, FeatureCollection>.CheckPoint() VirgisLayer<GeographyCollection, FeatureCollection>._checkpoint() VirgisLayer<GeographyCollection, FeatureCollection>.Save() VirgisLayer<GeographyCollection, FeatureCollection>._save() VirgisLayer<GeographyCollection, FeatureCollection>.Translate(MoveArgs) VirgisLayer<GeographyCollection, FeatureCollection>.MoveAxis(MoveArgs) VirgisLayer<GeographyCollection, FeatureCollection>.MoveTo(MoveArgs) VirgisLayer<GeographyCollection, FeatureCollection>.VertexMove(MoveArgs) VirgisLayer<GeographyCollection, FeatureCollection>.StartEditSession() VirgisLayer<GeographyCollection, FeatureCollection>.ExitEditSession(Boolean) VirgisLayer<GeographyCollection, FeatureCollection>.Selected(SelectionTypes) VirgisLayer<GeographyCollection, FeatureCollection>.UnSelected(SelectionTypes) VirgisLayer<GeographyCollection, FeatureCollection>.GetClosest(Vector3, Guid[]) VirgisLayer<GeographyCollection, FeatureCollection>.GetFeature(Guid) VirgisLayer<GeographyCollection, FeatureCollection>.GetId() VirgisLayer<GeographyCollection, FeatureCollection>.GetMetadata() VirgisLayer<GeographyCollection, FeatureCollection>.GetFeatureShape() VirgisLayer<GeographyCollection, FeatureCollection>.SetVisible(Boolean) VirgisLayer<GeographyCollection, FeatureCollection>.IsVisible() VirgisLayer<GeographyCollection, FeatureCollection>.SetEditable(Boolean) VirgisLayer<GeographyCollection, FeatureCollection>.IsEditable() VirgisLayer<GeographyCollection, FeatureCollection>.Equals(Object) VirgisLayer<GeographyCollection, FeatureCollection>.GetHashCode() VirgisLayer<GeographyCollection, FeatureCollection>.Equals(VirgisLayer<GeographyCollection, FeatureCollection>) Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class PointLayer : VirgisLayer<GeographyCollection, FeatureCollection>, IVirgisLayer, IVirgisEntity Fields | Improve this Doc View Source BaseMaterial Declaration public Material BaseMaterial Field Value Type Description UnityEngine.Material | Improve this Doc View Source CubePrefab Declaration public GameObject CubePrefab Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source CylinderPrefab Declaration public GameObject CylinderPrefab Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source LabelPrefab Declaration public GameObject LabelPrefab Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source SpherePrefab Declaration public GameObject SpherePrefab Field Value Type Description UnityEngine.GameObject Methods | Improve this Doc View Source _addFeature(Vector3[]) Declaration protected override VirgisFeature _addFeature(Vector3[] geometry) Parameters Type Name Description UnityEngine.Vector3 [] geometry Returns Type Description VirgisFeature Overrides Virgis.VirgisLayer<Project.GeographyCollection, GeoJSON.Net.Feature.FeatureCollection>._addFeature(UnityEngine.Vector3[]) | Improve this Doc View Source _checkpoint() Declaration protected override void _checkpoint() Overrides Virgis.VirgisLayer<Project.GeographyCollection, GeoJSON.Net.Feature.FeatureCollection>._checkpoint() | Improve this Doc View Source _draw() Declaration protected override void _draw() Overrides Virgis.VirgisLayer<Project.GeographyCollection, GeoJSON.Net.Feature.FeatureCollection>._draw() | Improve this Doc View Source _drawFeature(Vector3, String, Dictionary<String, Object>) Draws a single feature based on world space coordinates Declaration protected VirgisFeature _drawFeature(Vector3 position, string gisId = null, Dictionary<string, object> properties = null) Parameters Type Name Description UnityEngine.Vector3 position Vector3 position String gisId string Id Dictionary < String , Object > properties Dictionary properties Returns Type Description VirgisFeature | Improve this Doc View Source _init(GeographyCollection) Declaration protected override Task _init(GeographyCollection layer) Parameters Type Name Description GeographyCollection layer Returns Type Description Task Overrides Virgis.VirgisLayer<Project.GeographyCollection, GeoJSON.Net.Feature.FeatureCollection>._init(Project.GeographyCollection) | Improve this Doc View Source _save() Declaration protected override void _save() Overrides Virgis.VirgisLayer<Project.GeographyCollection, GeoJSON.Net.Feature.FeatureCollection>._save() | Improve this Doc View Source GetFeatureShape() Declaration public override GameObject GetFeatureShape() Returns Type Description UnityEngine.GameObject Overrides Virgis.VirgisLayer<Project.GeographyCollection, GeoJSON.Net.Feature.FeatureCollection>.GetFeatureShape() | Improve this Doc View Source MoveAxis(MoveArgs) Declaration public override void MoveAxis(MoveArgs args) Parameters Type Name Description MoveArgs args Overrides Virgis.VirgisLayer<Project.GeographyCollection, GeoJSON.Net.Feature.FeatureCollection>.MoveAxis(Virgis.MoveArgs) | Improve this Doc View Source RemoveVertex(VirgisFeature) Declaration public void RemoveVertex(VirgisFeature vertex) Parameters Type Name Description VirgisFeature vertex | Improve this Doc View Source Translate(MoveArgs) Declaration public override void Translate(MoveArgs args) Parameters Type Name Description MoveArgs args Overrides Virgis.VirgisLayer<Project.GeographyCollection, GeoJSON.Net.Feature.FeatureCollection>.Translate(Virgis.MoveArgs) Implements IVirgisLayer IVirgisEntity"
  },
  "api/Virgis.PolygonLayer.html": {
    "href": "api/Virgis.PolygonLayer.html",
    "title": "Class PolygonLayer | ViRGIS VR GIS",
    "keywords": "Class PolygonLayer Controls an instance of a Polygon Layer Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour VirgisLayer < GeographyCollection , FeatureCollection > PolygonLayer Implements IVirgisLayer IVirgisEntity Inherited Members VirgisLayer<GeographyCollection, FeatureCollection>.layer VirgisLayer<GeographyCollection, FeatureCollection>.features VirgisLayer<GeographyCollection, FeatureCollection>.changed VirgisLayer<GeographyCollection, FeatureCollection>._id VirgisLayer<GeographyCollection, FeatureCollection>._editable VirgisLayer<GeographyCollection, FeatureCollection>.Init(GeographyCollection) VirgisLayer<GeographyCollection, FeatureCollection>._init(GeographyCollection) VirgisLayer<GeographyCollection, FeatureCollection>.AddFeature(Vector3[]) VirgisLayer<GeographyCollection, FeatureCollection>._addFeature(Vector3[]) VirgisLayer<GeographyCollection, FeatureCollection>.Draw() VirgisLayer<GeographyCollection, FeatureCollection>._draw() VirgisLayer<GeographyCollection, FeatureCollection>.CheckPoint() VirgisLayer<GeographyCollection, FeatureCollection>._checkpoint() VirgisLayer<GeographyCollection, FeatureCollection>.Save() VirgisLayer<GeographyCollection, FeatureCollection>._save() VirgisLayer<GeographyCollection, FeatureCollection>.Translate(MoveArgs) VirgisLayer<GeographyCollection, FeatureCollection>.MoveAxis(MoveArgs) VirgisLayer<GeographyCollection, FeatureCollection>.MoveTo(MoveArgs) VirgisLayer<GeographyCollection, FeatureCollection>.VertexMove(MoveArgs) VirgisLayer<GeographyCollection, FeatureCollection>.StartEditSession() VirgisLayer<GeographyCollection, FeatureCollection>.ExitEditSession(Boolean) VirgisLayer<GeographyCollection, FeatureCollection>.Selected(SelectionTypes) VirgisLayer<GeographyCollection, FeatureCollection>.UnSelected(SelectionTypes) VirgisLayer<GeographyCollection, FeatureCollection>.GetClosest(Vector3, Guid[]) VirgisLayer<GeographyCollection, FeatureCollection>.GetFeature(Guid) VirgisLayer<GeographyCollection, FeatureCollection>.GetId() VirgisLayer<GeographyCollection, FeatureCollection>.GetMetadata() VirgisLayer<GeographyCollection, FeatureCollection>.GetFeatureShape() VirgisLayer<GeographyCollection, FeatureCollection>.SetVisible(Boolean) VirgisLayer<GeographyCollection, FeatureCollection>.IsVisible() VirgisLayer<GeographyCollection, FeatureCollection>.SetEditable(Boolean) VirgisLayer<GeographyCollection, FeatureCollection>.IsEditable() VirgisLayer<GeographyCollection, FeatureCollection>.Equals(Object) VirgisLayer<GeographyCollection, FeatureCollection>.GetHashCode() VirgisLayer<GeographyCollection, FeatureCollection>.Equals(VirgisLayer<GeographyCollection, FeatureCollection>) Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class PolygonLayer : VirgisLayer<GeographyCollection, FeatureCollection>, IVirgisLayer, IVirgisEntity Fields | Improve this Doc View Source BodyBaseMaterial Declaration public Material BodyBaseMaterial Field Value Type Description UnityEngine.Material | Improve this Doc View Source CubePrefab Declaration public GameObject CubePrefab Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source CuboidLinePrefab Declaration public GameObject CuboidLinePrefab Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source CylinderLinePrefab Declaration public GameObject CylinderLinePrefab Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source CylinderPrefab Declaration public GameObject CylinderPrefab Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source LabelPrefab Declaration public GameObject LabelPrefab Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source LineBaseMaterial Declaration public Material LineBaseMaterial Field Value Type Description UnityEngine.Material | Improve this Doc View Source PointBaseMaterial Declaration public Material PointBaseMaterial Field Value Type Description UnityEngine.Material | Improve this Doc View Source PolygonPrefab Declaration public GameObject PolygonPrefab Field Value Type Description UnityEngine.GameObject | Improve this Doc View Source SpherePrefab Declaration public GameObject SpherePrefab Field Value Type Description UnityEngine.GameObject Methods | Improve this Doc View Source _addFeature(Vector3[]) Declaration protected override VirgisFeature _addFeature(Vector3[] geometry) Parameters Type Name Description UnityEngine.Vector3 [] geometry Returns Type Description VirgisFeature Overrides Virgis.VirgisLayer<Project.GeographyCollection, GeoJSON.Net.Feature.FeatureCollection>._addFeature(UnityEngine.Vector3[]) | Improve this Doc View Source _checkpoint() Declaration protected override void _checkpoint() Overrides Virgis.VirgisLayer<Project.GeographyCollection, GeoJSON.Net.Feature.FeatureCollection>._checkpoint() | Improve this Doc View Source _draw() Declaration protected override void _draw() Overrides Virgis.VirgisLayer<Project.GeographyCollection, GeoJSON.Net.Feature.FeatureCollection>._draw() | Improve this Doc View Source _drawFeature(Vector3[], Vector3, String, Dictionary<String, Object>) Declaration protected VirgisFeature _drawFeature(Vector3[] perimeter, Vector3 center, string gisId = null, Dictionary<string, object> properties = null) Parameters Type Name Description UnityEngine.Vector3 [] perimeter UnityEngine.Vector3 center String gisId Dictionary < String , Object > properties Returns Type Description VirgisFeature | Improve this Doc View Source _init(GeographyCollection) Declaration protected override Task _init(GeographyCollection layer) Parameters Type Name Description GeographyCollection layer Returns Type Description Task Overrides Virgis.VirgisLayer<Project.GeographyCollection, GeoJSON.Net.Feature.FeatureCollection>._init(Project.GeographyCollection) | Improve this Doc View Source _save() Declaration protected override void _save() Overrides Virgis.VirgisLayer<Project.GeographyCollection, GeoJSON.Net.Feature.FeatureCollection>._save() | Improve this Doc View Source GetFeatureShape() Declaration public override GameObject GetFeatureShape() Returns Type Description UnityEngine.GameObject Overrides Virgis.VirgisLayer<Project.GeographyCollection, GeoJSON.Net.Feature.FeatureCollection>.GetFeatureShape() | Improve this Doc View Source MoveAxis(MoveArgs) Declaration public override void MoveAxis(MoveArgs args) Parameters Type Name Description MoveArgs args Overrides Virgis.VirgisLayer<Project.GeographyCollection, GeoJSON.Net.Feature.FeatureCollection>.MoveAxis(Virgis.MoveArgs) | Improve this Doc View Source Translate(MoveArgs) Declaration public override void Translate(MoveArgs args) Parameters Type Name Description MoveArgs args Overrides Virgis.VirgisLayer<Project.GeographyCollection, GeoJSON.Net.Feature.FeatureCollection>.Translate(Virgis.MoveArgs) Implements IVirgisLayer IVirgisEntity"
  },
  "api/Virgis.PositionExtensionMethods.html": {
    "href": "api/Virgis.PositionExtensionMethods.html",
    "title": "Class PositionExtensionMethods | ViRGIS VR GIS",
    "keywords": "Class PositionExtensionMethods Inheritance Object PositionExtensionMethods Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public static class PositionExtensionMethods Methods | Improve this Doc View Source Point(IPosition) Converts IPositon to Position Declaration public static Position Point(this IPosition position) Parameters Type Name Description IPosition position Returns Type Description Position | Improve this Doc View Source Vector2(IPosition) Converts IPosition to UnityEngine.vector2 Declaration public static Vector2 Vector2(this IPosition position) Parameters Type Name Description IPosition position IPosition Returns Type Description UnityEngine.Vector2 UnityEngine.Vector2 | Improve this Doc View Source Vector2d(IPosition) Converts Iposition to Vector2D Declaration public static Vector2d Vector2d(this IPosition position) Parameters Type Name Description IPosition position IPosition Returns Type Description Mapbox.Utils.Vector2d Mapbox.Utils.Vector2d | Improve this Doc View Source Vector3(IPosition) Converts Iposition to Vector3 World Space coordinates takling account of zoom, scale and mapscale Declaration public static Vector3 Vector3(this IPosition position) Parameters Type Name Description IPosition position IPosition Returns Type Description UnityEngine.Vector3 Vector3"
  },
  "api/Virgis.SelectionTypes.html": {
    "href": "api/Virgis.SelectionTypes.html",
    "title": "Enum SelectionTypes | ViRGIS VR GIS",
    "keywords": "Enum SelectionTypes Enum holding the types of \"selection\"tha the user can make Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public enum SelectionTypes Fields Name Description BROADCAST SELECT SELECTALL"
  },
  "api/Virgis.SimpleMeshExtensions.html": {
    "href": "api/Virgis.SimpleMeshExtensions.html",
    "title": "Class SimpleMeshExtensions | ViRGIS VR GIS",
    "keywords": "Class SimpleMeshExtensions Inheritance Object SimpleMeshExtensions Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public static class SimpleMeshExtensions Methods | Improve this Doc View Source ToMesh(SimpleMesh) Converts g3.SimpleMesh to UnityEngine.Mesh Declaration public static Mesh ToMesh(this SimpleMesh simpleMesh) Parameters Type Name Description SimpleMesh simpleMesh SimpleMesh Returns Type Description UnityEngine.Mesh UnityEngine.Mesh"
  },
  "api/Virgis.UnityLayers.html": {
    "href": "api/Virgis.UnityLayers.html",
    "title": "Class UnityLayers | ViRGIS VR GIS",
    "keywords": "Class UnityLayers Inheritance Object UnityLayers Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public static class UnityLayers Properties | Improve this Doc View Source LINE Declaration public static LayerMask LINE { get; } Property Value Type Description UnityEngine.LayerMask | Improve this Doc View Source MESH Declaration public static LayerMask MESH { get; } Property Value Type Description UnityEngine.LayerMask | Improve this Doc View Source POINT Declaration public static LayerMask POINT { get; } Property Value Type Description UnityEngine.LayerMask | Improve this Doc View Source SHAPE Declaration public static LayerMask SHAPE { get; } Property Value Type Description UnityEngine.LayerMask"
  },
  "api/Virgis.Vector3ExtebnsionMethods.html": {
    "href": "api/Virgis.Vector3ExtebnsionMethods.html",
    "title": "Class Vector3ExtebnsionMethods | ViRGIS VR GIS",
    "keywords": "Class Vector3ExtebnsionMethods Inheritance Object Vector3ExtebnsionMethods Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public static class Vector3ExtebnsionMethods Methods | Improve this Doc View Source ToPoint(Vector3) Converts Vector3 World Space Location to Point taking accoun t of zoom, scale and mapscale Declaration public static Point ToPoint(this Vector3 position) Parameters Type Name Description UnityEngine.Vector3 position Returns Type Description Point | Improve this Doc View Source ToPosition(Vector3) Convert Vector3 World Space location to Position taking account of zoom, scale and mapscale Declaration public static IPosition ToPosition(this Vector3 position) Parameters Type Name Description UnityEngine.Vector3 position Vector3 World Space coordinates Returns Type Description IPosition Position"
  },
  "api/Virgis.VertexLookup.html": {
    "href": "api/Virgis.VertexLookup.html",
    "title": "Class VertexLookup | ViRGIS VR GIS",
    "keywords": "Class VertexLookup Structure used to hold avertex for an arbitrary shape and to calculate equality Inheritance Object VertexLookup Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class VertexLookup Fields | Improve this Doc View Source Com Declaration public VirgisFeature Com Field Value Type Description VirgisFeature | Improve this Doc View Source Id Declaration public Guid Id Field Value Type Description Guid | Improve this Doc View Source isVertex Declaration public bool isVertex Field Value Type Description Boolean | Improve this Doc View Source Line Declaration public LineSegment Line Field Value Type Description LineSegment | Improve this Doc View Source Vertex Declaration public int Vertex Field Value Type Description Int32 Methods | Improve this Doc View Source CompareTo(VertexLookup) Declaration public int CompareTo(VertexLookup other) Parameters Type Name Description VertexLookup other Returns Type Description Int32 | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) | Improve this Doc View Source Equals(VertexLookup) Declaration public bool Equals(VertexLookup other) Parameters Type Name Description VertexLookup other Returns Type Description Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode()"
  },
  "api/Virgis.VirgisFeature.html": {
    "href": "api/Virgis.VirgisFeature.html",
    "title": "Class VirgisFeature | ViRGIS VR GIS",
    "keywords": "Class VirgisFeature Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour VirgisFeature Dataline Datapoint Datapolygon LineSegment Implements IVirgisFeature IVirgisEntity Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public abstract class VirgisFeature : MonoBehaviour, IVirgisFeature, IVirgisEntity Fields | Improve this Doc View Source gisId Declaration public string gisId Field Value Type Description String | Improve this Doc View Source gisProperties Declaration public Dictionary<string, object> gisProperties Field Value Type Description Dictionary < String , Object > | Improve this Doc View Source label Declaration public Transform label Field Value Type Description UnityEngine.Transform | Improve this Doc View Source mainMat Declaration protected Material mainMat Field Value Type Description UnityEngine.Material | Improve this Doc View Source selectedMat Declaration protected Material selectedMat Field Value Type Description UnityEngine.Material Methods | Improve this Doc View Source AddVertex(Vector3) call this to add a vertex to a feature. Declaration public virtual VirgisFeature AddVertex(Vector3 position) Parameters Type Name Description UnityEngine.Vector3 position Vector3 Returns Type Description VirgisFeature VirgisComponent The new vertex | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides UnityEngine.Object.Equals(System.Object) | Improve this Doc View Source Equals(VirgisFeature) Declaration public bool Equals(VirgisFeature other) Parameters Type Name Description VirgisFeature other Returns Type Description Boolean | Improve this Doc View Source ExitEditSession(Boolean) Called when an edit session ends Declaration public virtual void ExitEditSession(bool saved) Parameters Type Name Description Boolean saved | Improve this Doc View Source GetClosest(Vector3, Guid[]) Gets the closest point of the faeture geometry to the coordinates Declaration public virtual VirgisFeature GetClosest(Vector3 coords, Guid[] exclude) Parameters Type Name Description UnityEngine.Vector3 coords Vector3 Target Coordinates Guid [] exclude Returns Type Description VirgisFeature Vector3 in world space coordinates | Improve this Doc View Source GetGeometry<T>() Get Geometry from the Feature Declaration public virtual T GetGeometry<T>() Returns Type Description T Gemoetry of type T Type Parameters Name Description T The Type of the geometry | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides UnityEngine.Object.GetHashCode() | Improve this Doc View Source GetId() Declaration public Guid GetId() Returns Type Description Guid | Improve this Doc View Source GetMetadata() Declaration public RecordSet GetMetadata() Returns Type Description RecordSet | Improve this Doc View Source MoveAxis(MoveArgs) received when a Move Axis request is made by the user Declaration public virtual void MoveAxis(MoveArgs args) Parameters Type Name Description MoveArgs args | Improve this Doc View Source MoveTo(MoveArgs) Sent by the UI to request this component to move. Declaration public virtual void MoveTo(MoveArgs args) Parameters Type Name Description MoveArgs args MoveArgs : Either a trabslate vectir OR a Vector position to move to, both in World space coordinates | Improve this Doc View Source RemoveVertex(VirgisFeature) call this to remove a vertxe from a feature Declaration public virtual void RemoveVertex(VirgisFeature vertex) Parameters Type Name Description VirgisFeature vertex Vertex to remove | Improve this Doc View Source Selected(SelectionTypes) Use to tell the Component that it is selected Declaration public virtual void Selected(SelectionTypes button) Parameters Type Name Description SelectionTypes button SelectionType | Improve this Doc View Source SetMaterial(Material, Material) Use to set the material of the feature Declaration public virtual void SetMaterial(Material mainMat, Material selectedMat) Parameters Type Name Description UnityEngine.Material mainMat Usual material UnityEngine.Material selectedMat Material to be used when feature is selected | Improve this Doc View Source StartEditSession() Called when an edit session starts Declaration public virtual void StartEditSession() | Improve this Doc View Source Translate(MoveArgs) Called when a child component is translated by User action Declaration public virtual void Translate(MoveArgs args) Parameters Type Name Description MoveArgs args MoveArgs | Improve this Doc View Source UnSelected(SelectionTypes) Use to tell the Component that it is un selected Declaration public virtual void UnSelected(SelectionTypes button) Parameters Type Name Description SelectionTypes button SelectionType | Improve this Doc View Source VertexMove(MoveArgs) Called when a child Vertex moves to the point in the MoveArgs - which is in World Coordinates Declaration public virtual void VertexMove(MoveArgs args) Parameters Type Name Description MoveArgs args Implements IVirgisFeature IVirgisEntity"
  },
  "api/Virgis.VirgisLayer-2.html": {
    "href": "api/Virgis.VirgisLayer-2.html",
    "title": "Class VirgisLayer<T, S> | ViRGIS VR GIS",
    "keywords": "Class VirgisLayer<T, S> Abstract parent for all Layer entities Inheritance Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour VirgisLayer<T, S> DataPlotter LineLayer MapInitialize MeshLayer PointCloudLayer PointLayer PolygonLayer Implements IVirgisLayer IVirgisEntity Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public abstract class VirgisLayer<T, S> : MonoBehaviour, IVirgisLayer, IVirgisEntity where T : RecordSet Type Parameters Name Description T S Fields | Improve this Doc View Source _editable Declaration protected bool _editable Field Value Type Description Boolean | Improve this Doc View Source _id Declaration protected Guid _id Field Value Type Description Guid | Improve this Doc View Source changed Declaration public bool changed Field Value Type Description Boolean | Improve this Doc View Source features Declaration public S features Field Value Type Description S | Improve this Doc View Source layer Declaration public T layer Field Value Type Description T Methods | Improve this Doc View Source _addFeature(Vector3[]) Declaration protected abstract VirgisFeature _addFeature(Vector3[] geometry) Parameters Type Name Description UnityEngine.Vector3 [] geometry Returns Type Description VirgisFeature | Improve this Doc View Source _checkpoint() Implement the layer specific checkpoint code here Declaration protected abstract void _checkpoint() | Improve this Doc View Source _draw() Implment the layer specific draw code in this method Declaration protected abstract void _draw() | Improve this Doc View Source _init(T) Implement the layer specific init code in this method Declaration protected abstract Task _init(T layer) Parameters Type Name Description T layer Returns Type Description Task | Improve this Doc View Source _save() Implment the layer specific draw code in this method Declaration protected abstract void _save() | Improve this Doc View Source AddFeature(Vector3[]) Call this to create a new feature Declaration public VirgisFeature AddFeature(Vector3[] geometry) Parameters Type Name Description UnityEngine.Vector3 [] geometry Returns Type Description VirgisFeature | Improve this Doc View Source CheckPoint() Call this to tell the layers to create a checkpoint. Only valid outside of an Edit Session. Inside an Edit Session use Save() as CheckPoint() will do nothing Declaration public void CheckPoint() | Improve this Doc View Source Draw() Draw the layer based upon the features in the features GeographyCollection Declaration public void Draw() | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides UnityEngine.Object.Equals(System.Object) | Improve this Doc View Source Equals(VirgisLayer<T, S>) Declaration public bool Equals(VirgisLayer<T, S> other) Parameters Type Name Description VirgisLayer <T, S> other Returns Type Description Boolean | Improve this Doc View Source ExitEditSession(Boolean) Called when an edit session ends Declaration public virtual void ExitEditSession(bool saved) Parameters Type Name Description Boolean saved true if stop and save, false if stop and discard | Improve this Doc View Source GetClosest(Vector3, Guid[]) Get the Closest Feature to the coordinates. Exclude any Component Ids in the Exclude Array. The exclude lis is primarily used to avoid a GetClosest to a Faeture picking up the feature itself Declaration public VirgisFeature GetClosest(Vector3 coords, Guid[] exclude) Parameters Type Name Description UnityEngine.Vector3 coords coordinates Guid [] exclude Returns Type Description VirgisFeature returns the featue contained in an enitity of type S | Improve this Doc View Source GetFeature(Guid) Get the feature that matches the ID provided Declaration public VirgisFeature GetFeature(Guid id) Parameters Type Name Description Guid id ID Returns Type Description VirgisFeature returns the featue contained in an enitity of type S | Improve this Doc View Source GetFeatureShape() Declaration public abstract GameObject GetFeatureShape() Returns Type Description UnityEngine.GameObject | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides UnityEngine.Object.GetHashCode() | Improve this Doc View Source GetId() Fecth the layer GUID Declaration public Guid GetId() Returns Type Description Guid GUID | Improve this Doc View Source GetMetadata() Fetch the metadata for this Layer Declaration public RecordSet GetMetadata() Returns Type Description RecordSet | Improve this Doc View Source Init(T) Called to initialise this layer If the data cannot be read, fails quitely and creates an empty layer Declaration public Task<VirgisLayer<T, S>> Init(T layer) Parameters Type Name Description T layer The GeographyCollection object that defines this layer Returns Type Description Task < VirgisLayer <T, S>> refernce to this GameObject for chaining | Improve this Doc View Source IsEditable() Test to see if this layer is editable Declaration public bool IsEditable() Returns Type Description Boolean Boolean | Improve this Doc View Source IsVisible() Test if this layer is currently visible Declaration public bool IsVisible() Returns Type Description Boolean Boolean | Improve this Doc View Source MoveAxis(MoveArgs) Called whenevr a member entity is asked to Change Axis Declaration public virtual void MoveAxis(MoveArgs args) Parameters Type Name Description MoveArgs args MoveArgs Object | Improve this Doc View Source MoveTo(MoveArgs) Declaration public virtual void MoveTo(MoveArgs args) Parameters Type Name Description MoveArgs args | Improve this Doc View Source Save() Called to save the current layer data to source Declaration public RecordSet Save() Returns Type Description RecordSet A copy of the data save dot the source | Improve this Doc View Source Selected(SelectionTypes) called when a daughter IVirgisEntity is selected Declaration public virtual void Selected(SelectionTypes button) Parameters Type Name Description SelectionTypes button SelectionType | Improve this Doc View Source SetEditable(Boolean) Sets a marker that this particular layer is being edited. Declaration public void SetEditable(bool inSession) Parameters Type Name Description Boolean inSession | Improve this Doc View Source SetVisible(Boolean) Declaration public void SetVisible(bool visible) Parameters Type Name Description Boolean visible | Improve this Doc View Source StartEditSession() Called when an edit session starts Declaration public virtual void StartEditSession() | Improve this Doc View Source Translate(MoveArgs) Called Whenever a member entity is asked to Translate Declaration public virtual void Translate(MoveArgs args) Parameters Type Name Description MoveArgs args MoveArge Object | Improve this Doc View Source UnSelected(SelectionTypes) Called when a daughter IVirgisEntity is UnSelected Declaration public virtual void UnSelected(SelectionTypes button) Parameters Type Name Description SelectionTypes button SelectionType | Improve this Doc View Source VertexMove(MoveArgs) Declaration public virtual void VertexMove(MoveArgs args) Parameters Type Name Description MoveArgs args Implements IVirgisLayer IVirgisEntity"
  },
  "api/Virgis.VirgisVectorExtensions.html": {
    "href": "api/Virgis.VirgisVectorExtensions.html",
    "title": "Class VirgisVectorExtensions | ViRGIS VR GIS",
    "keywords": "Class VirgisVectorExtensions Inheritance Object VirgisVectorExtensions Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public static class VirgisVectorExtensions Methods | Improve this Doc View Source Round(Vector3, Single) Rounds a Vector3 in 3d to the nearest value divisible by roundTo Declaration public static Vector3 Round(this Vector3 vector3, float roundTo = 0.1F) Parameters Type Name Description UnityEngine.Vector3 vector3 Vector 3 value Single roundTo rounding size Returns Type Description UnityEngine.Vector3 Vector3 rounded value"
  },
  "api/Virgis.ZoomEvent.html": {
    "href": "api/Virgis.ZoomEvent.html",
    "title": "Class ZoomEvent | ViRGIS VR GIS",
    "keywords": "Class ZoomEvent Event type for Zoom Change Events Inheritance Object UnityEngine.Events.UnityEventBase UnityEngine.Events.UnityEvent < Single > ZoomEvent Namespace : Virgis Assembly : Assembly-CSharp.dll Syntax public class ZoomEvent : UnityEvent<float>, ISerializationCallbackReceiver Constructors | Improve this Doc View Source ZoomEvent() Declaration public ZoomEvent() Methods | Improve this Doc View Source AddZoomChangeListerner(UnityAction<Single>) Declaration public void AddZoomChangeListerner(UnityAction<float> action) Parameters Type Name Description UnityEngine.Events.UnityAction < Single > action | Improve this Doc View Source Change(Single) Declaration public void Change(float zoom) Parameters Type Name Description Single zoom | Improve this Doc View Source GetScale() Declaration public float GetScale() Returns Type Description Single"
  },
  "manual/architecture.html": {
    "href": "manual/architecture.html",
    "title": "​Architecture | ViRGIS VR GIS",
    "keywords": "​Architecture ​Purpose The purpose of this section is to define the high-level conceptual architecture. Read this section if you want to understand what components are required for any version of the product. Objectives The ability to load a 3D representation of a Georeferenced GIS model in a Virtual Reality world with the ability to move around the representation in an intuitive way, The ability to create entities in the representation at run-time from data located outside of the VR engine - i.e. from the “GIS world’ and using GIS formats, and The ability to add and modify entities in the representation from within the VR world in an intuitive way and for those changes to reflect seamlessly back into the GIS World. ​Conceptual Architecture The basic architecture to meet the Objectives is made of four high-level components: Objective 1 is met by creating a ViRGIS VR application, The ViRGIS App is run on the selected VR device - i.e. the Headset, Objective 2 requires that there is one or more GIS Backend(s) to the system and that the ViRGIS app is linked to the GIS Backend(s). Objective 3 requires that the link(s) to the GIS Backend are transactional, and The three objectives together require that there is a high-level architectural component orchestrating the data into the platform. In particular, in GIS the idea of the “Project View”, i.e. how the data entities are combined, is usually separated from the data about the actual entities, i.e. the geometry, and the former includes the presentation or symbology of the entities. Therefore, this orchestrating component is mostly about the handling of the “project” and “symbology” level interactions. Each of these components will be explained for each version in the next sections. Figure 1 - High-Level Conceptual Architecture ​ViRGIS App The ViRGIS app will be created in Unity and will be written in C#. The ViRGIS app will be compiled for Windows, macOS and Android. The latter two will be compiled on Mono. The App will be made up of the following components: Project Schema . This JSON based schema defines the data structure for the definition of the project. Entity Data Schema and Object Schema . This defines how entities will be stored and mapped internally to the VR world. Data Ingestion . Georeference framework . This creates a mapping between real-world coordinate systems and the VR-world coordinate system. 3D Geometry Tools . The tools that are required to manipulate the entities in 3D and provide usual GIS functionality. Event System . The ViRGIS entities have a system to propagate events through the entity model. User Interface . All the details relating to how to represent the user in the VR-world and the UI, Menus and controls to allow them to work in that world. Symbology and rendering . This is not part of the App. This is defined in the Core and Pro packages. ​VR Adapter The Core product includes the definition of a JSON schema for the transfer of the Project and Symbology data to the app. The ViRGIS app will read this data from a file. This is will include the simplest symbology: The ability to choose the colour, shape and size for point and line features , and The ability to choose the colour and size for the perimeter of a polygon and the ability to choose a colour or texture for the mesh of a polygon, with the texture being a .PNG or .JPEG file. It is assumed that any user of the Core release will develop their own solutions to create this file. ​GIS Backend The Core product will be able to load, edit and save vector layers in the form of standard GeoJSON files using EPSG:4326 ( WGS84, Geographic) CRS. The Core product will also be able to load georeferenced point clouds as .PLY format files and georeferenced Meshes as .OBJ, .OFF & .STL format files. The Core product will only load raster tile layers, DEMs and vector tile layers provided by MAPBOX."
  },
  "manual/entity.html": {
    "href": "manual/entity.html",
    "title": "Virgis Entity Model | ViRGIS VR GIS",
    "keywords": "Virgis Entity Model Conceptual Data Model The high level entity structure, in line wit standard GIS practice is based on the following model. Where : A Feature is a datapoint with some geometry, and A Layer is a set of Features that : Are all associated with some metadata about how to represent those features - i.e size and shape of point or line, color or point or line or polygon etc. This says that all the Features in one Layer all look the same, and All mean the same thing and came from the same source - e.g. a set of points each of which is a place where a rock sample was taken or an archeological pot was found OR a set of lines each of which is a fault line in the rock. Logical Entity Model The conceptual model is implement using the following model - again broadly in line with best practice. Where: FeatureCollection, Feature and Geometry are defined as per the definitions in GeoJSON ( see https://tools.ietf.org/html/rfc7946 ) A Unit is an atomic unit of Symbology define the size, shape, colour and offset position for one component of the feature(for instance lines or points) Symbology is the metadata that complete describes how the features in a layer should be represented, A RecordSet is the complete representation of a layer, and A Project is a complete representation of a model. Unit , RecordSet and Project are defined in the Scripting Reference. Current Implementation The Logical Entity Model is implemented by two files and two types of GameObject, as follows Where the source is a reference to one GeoJSON file All Feature types implement the IVirgisFeature interface and extend VirgisFeature . There can be as many Feature types as there are types of geometry. All Layer types implement the IVirgisLayer interface and extend VirgisLayer . There can be as many Layer types as required. The Map GameObject is an instance of a Layer that happens to contain other layers."
  },
  "manual/geospatial.html": {
    "href": "manual/geospatial.html",
    "title": "​3D Geospatial Systems | ViRGIS VR GIS",
    "keywords": "​3D Geospatial Systems ​Purpose The purpose of this section is to provide some background and discussion into the complications of 3D Geospatial Systems and the design decisions being made. Read this section to get a deeper understanding of the reasoning behind some of the design decisions made in the ViRGIS App. ​Sources The following are some of the sources for this discussion Tet-Khuan, C., Rahman, A.A. & Zlatanova, S. (2007) 3D spatial operations in geo DBMS environment for 3D GIS. In: ResearchGate . 26 August 2007 pp. 151–163. Laksono, D. & Aditya, T. (2019) Utilizing A Game Engine for Interactive 3D Topographic Data Visualization. ISPRS International Journal of Geo-Information . 8 (8), 361. De Roo, B., Bourgeois, J. & De Maeyer, P. (2017) Usability Assessment of a Virtual Globe-Based 4D Archaeological GIS. In: Alias Abdul-Rahman (ed.). Advances in 3D Geoinformation . Cham, Springer International Publishing. pp. 323–335. De Roo, B. (2016) A GEODATA INFRASTRUCTURE FOR ARCHAEOLOGY: FLEXIBILITY IN MANAGEMENT AND ANALYSIS. In: ResearchGate . [Online]. 28 June 2016 Available from: doi:10.5593/SGEM2016/B21/S08.071 [Accessed: 22 March 2020]. van Oosterom, P., Martinez-Rubi, O., Tijssen, T. & Gonçalves, R. (2017) Realistic Benchmarks for Point Cloud Data Management Systems. In: Alias Abdul-Rahman (ed.). Advances in 3D Geoinformation . Cham, Springer International Publishing. pp. 1–30. Rahman, A.A., Karim, H., Jamali, A., Buyuksalih, G., et al. (2018) Conceptual Framework Towards Unified 3D Topological Modelling and Visualization Based on CityGML. In: ResearchGate . [Online]. 1 May 2018 Available from: https://www.researchgate.net/publication/323382865_Conceptual_Framework_Towards_Unified_3D_Topological_Modelling_and_Visualization_Based_on_CityGML [Accessed: 22 March 2020]. Nicholas Duggan FRGS Cgeog (GIS) (2015) “Why 3D GIS is the Future”: https://www.xyht.com/spatial-itgis/3d-gis-future/ Martin Dobias (2019) New QGIS 3D capabilities and future plans reviewed in https://hub.packtpub.com/new-qgis-3d-capabilities-and-future-plans-presented-by-martin-dobias-a-core-qgis-developer/ De Roo, B., Bourgeois, J. & De Maeyer, P. (2017) Usability Assessment of a Virtual Globe-Based 4D Archaeological GIS. In: Alias Abdul-Rahman (ed.). Advances in 3D Geoinformation . Cham, Springer International Publishing. pp. 323–335. ​Some Terminology and Realms Real-World Space - space defined by geographic coordinates and by real-world units (e.g. metres). This space is always projected and z-up. VR-Space - space defined in the virtual world in the coordinate system of the VR world. This is an unprojected coordinate system and y-up. GIS World - refers to the paradigm space of Geospatial Information and the tools and processes used there. VR World - refers to the paradigm space of the VR and gaming systems and the tools and processes used there. World Space Coordinates - refers to the Unity World Space Coordinate System ​Geometry ToDo - expand, confirm and correct ViRGIS creates a limited extent geographically projected coordinate system in the VR Space, where the ellipsoid is represented as a planar datum. This tool is intended for limited extent GIS or Spatial analysis problems where the planar datum is not a problem. If an ellipsoid representation of the datum is required, this is not the tool. This space can be zoomed - that really represents a change in the level of details (LoD) but also changes the base relationship between VR Space units and Real World Space units (which is a nominal 1m per unit but changes as the zoom level change to try to avoid impossibly large numbers in the VR Space). Real-world Points, Lines and Polygons etc are projected into this VR Space using standard projection techniques. ​Basics - moving from 2D to 3D Coordinate systems don’t change. We continue to use the same Coordinate Reference Systems and datums. With all of the same tools needed and problems associated. Altitudes are not Always Altitudes Z, or more traditionally Altitude, has always been used in GIS but has not been a core coordinate and as such the handling is less well defined. Z can be: Relative to the Ellipsoid, Relative to the Geoid, Relative to local ground level or a dedicated local datum, Relative to a regional datum such as MSL. In 2D GIS, in most cases Z is just a DEM (i.e. an attribute), so this did not matter and since Z is a data attribute and not actually a coordinate, if the data is wrong or missing it does not change the geometry. This is not true in true 3D space. In the VR World, all Z values from the Real-World Space are projected into Y values in the VR Space coordinate system relative to the ellipsoid. Points are Points A point (with Z value) is a simple 3D entity. No difference there. 2D points - i.e. LatLngs - have to be dealt with since they are valid data points in the GIS formats used. The current assumption will be to place these points on the ellipsoid. The preferred approach is to deal with these points in the data acquisition phase and in the GIS - basically to give all points valid Z values before they get to the VR Space. There are some additional types of symbology. Using the experience quoted by QGIS 3D, a good starting point is: Basic shape and colour. The basic shapes in Unity are sphere (actually ellipsoid since it can be scaled in each dimension), cube (actually right cuboid since it can be scaled in each dimension) & right elliptical cylinder and the colours are defined by a standard RGBA color space. So - we shall start with that. Using 3D models (i.e. meshes) as 3D icons. This capability is practically OOTB with Unity, but providing the library of Icons and semantics to define them in the Project.json will take some time. Billboards. I.e. 2D sprites that always face the viewer. Creating Text based Billboards is simple in Unity and will be used in ViRGIS V1 for labelling. Adding texture should not be complicated but has the same problem of library and semantics as b). Lines remain Lines A line is a set of points or vertices and, provided all vertices have a Z value, is a simple 3D entity although it should be noted for completeness that the length of the line measured in 3D may not be the same as the length of the line measured in 2D. The symbology questions are primarily: “Simple” or “Buffered” - i.e. whether the width is defined in VR-World units or in Real-World Units and projected to VR-World units. Shape. In the VR-World (more so than the 3D GIS World) every entity needs solid structure for the brain to process it correctly. Lines with zero breadth don’t work. Therefore, all lines will be represented by cuboids or right elliptical cylinders. As a note, the line segment is created by elongating the mesh along the z-axis in VR Space. That means the characteristics of the line symbology (i.e. cross section) are set by the X and Y values of the scale vector in VR Space. To keep consistency, the scaling is still written as a 3D transform in z-up format. This means that in the project.json file, the x and z values set the width and breadth of the line. The y value should always be 1, since the y-value is created when drawing the line. It should also be noted that the transform is applied in the local reference frame. This means that the (Real-World) y axis is aligned along the line segment and the other axes aligned accordingly. This actually means that the (Real-world) y axis could actually end up pointing in any direction in Real-World global space, including down. Polygons are difficult As discussed in Tet-Khuan et al and elsewhere, Polygons are not actually 3D shapes and a number of assumptions have to be made: The assumption in 2D GIS is that a polygon is planar and orthogonal to the view (i.e. that all vertices have the same Z value). It is possible create this polygon in the VR Space either : As a 2D Mesh, or As a prism whose cross section is the polygon. For ViRGIS, we have not used either of these methods. We have assumed that solid bodies, such as might be represented by approach ii) will come into the App as either a group of polygons or as a mesh. These two statements are functional the same as described below but have different meanings in term of the formats used. A group of polygons might be represented by a GeoJSON file while a mesh is more likely to be presented as a .OBJ file etc. It is possible to construct a polygon with 3D points. This is sometimes called a polygonZ and is assumed to be planar. Due to projection, the shape of this polygon might not the same as the shape seen in 2D GIS. If it is not planar, it is a polyhedral. For features presenting as polygons, we have chosen the following method A Polygon is represented by a linear ring as defined in GeoJSON, There are no constraints on the Z values of the vertices and no assumptions that the Polygon is planar, A simplistic algorithm is used to turn a linear ring into a polyhedral by adding a single additional vertex at the centroid of the linear ring, This polyhedral is turned into a triangulated mesh; note that for a planar polygon, the polygon will at this point still be planar but represented by a triangulated mesh rather than a polygon, The polyhedral can now be manipulated by moving any of vertices. The polyhedral is returned back to the GIS world by returning the linear ring. This will then be projected into the 2D GIS world automatically, since that world will ignore the z values as coordinates and just use the x and y values. The polyhedron vertex is stored in the metadata for the polygon so round trip editing capabilities between the GIS World and the VR World are ensured. This means that all polygons become internally just a special case of a mesh. For symbology, the mesh needs to be constructed from a material that is covered with a texture. This texture can be computed, e.g. flat or cross-checked, where the color and possible other parameters have to be configured, or it can be a link to an image in .PNG or .JPEG format. One characteristic of a polygon over a mesh is the linear ring - which can take symbology as well. This allows the edges in a polygon mesh to be high-lighted. This is not simply possible in a standard Unity mesh. Meshes are New In the VR World, meshes become a very important feature type. Meshes are 2.xD surfaces made up of small planar polygons joined at the edges with a large number of vertices. [ToDO - more research on the use of mesh in GIS] In Unity, meshes can have triangular or quad faces, but for performance and greater consistency with the GIS TIN formats, we will only be using triangulated meshes. ViRGIS V1 will include arbitrary meshes as georeferenced objects in the model and allow the position, scale and rotation of the mesh to be manipulated. ViRGIS v1 assumes that, for meshes coming from “non-polygon” formats (e.g..OBJ), all data about the material, texture and colour of the mesh is included in the mesh data and no additional symbology is provided. Each mesh definition file (which may contain one or more individual meshes) is created in the model as its own RecordSet object or GIS layer. Point Clouds are New A point cloud is a large set of 3D points each of which has attributes (e.g. colour) and together make up some structure. The key point here is the size of the dataset. Point Clouds are important for LiDAR analysis and for Photogrammetry. ViRGIS V1 loads Point Cloud data into a Unity Particle system to provide a performant way of presenting very large numbers of points in the VR World."
  },
  "manual/v1.html": {
    "href": "manual/v1.html",
    "title": "ViRGIS App V1 | ViRGIS VR GIS",
    "keywords": "ViRGIS App V1 ​Project Schema The ViRGIS project schema is a custom JSON schema developed based upon components of the following standards and pseudo-standards: GeoJSON , TopoJSON, GeologyJSON , OMF , EO-GeoJSON The Full Definition is Shown in the Scripting Refernce ​Entity Data Schema & Object Schema ViRGIS App v1 will support the following types: Layer Type Feature Types Formats Feature Contents Point Point, Multipoint GeoJSON Datapoint GO Line Linestring, MultiLinestring GeoJSON Vertex GOs and Line Segment GOs Polygon Polygon, MultiPolygon GeoJSON Vertex GOs, Line Segment GOs and a Mesh body. Mesh Mesh OBJ, OFF, STL Mesh PointCloud Point Cloud PLY Particle System Map Raster Tile Mapbox Tilesystem Terrain Raster Tile Mapbox Mesh Map Vector Tile Mapbox Tilesystem ​Data Ingestion In ViRGIS App V1, data ingestion will be performed by a set of dedicated IO drivers. For the JSON based formats, these are based upon the Newtonsoft JSON.NET library [^1] using the GeoJSON.NET [^2] type definitions to address GeoJSON objects. For the meshed based formats the geometry3Sharp library is used to create meshes from the raw data and for Point Clouds, a custom script reads the PLY and creates a Particle System. ToDo add PCX Georeference Framework The core of the GIS system is the Georeference framework that provides the basis for mapping from Real-World coordinates to VR-World coordinates in a zoomable map. The ViRGIS Georeference Framework is based upon the Mapbox Unity SDK [^3]. ​3D Geometry Tools ViRGIS App V1 includes an implementation of geometry3Sharp [^4] to provide comprehensive and advanced 3D geometry tools. As well as the usual geometry tools, this library has a comprehensive set of tools for 3D Mesh manipulation. A key part of the integration of this toolkit into Unity and Mapbox is the marshalling of multiple data types across the three libraries. See Appendix 2 for details. ​Event System In V1, the entity model maintains a basic event model using messaging up and down the entity tree. When an entity triggers an event (which is usually a leaf node - but not necessarily), that entity uses SendMessage to send the event to all its ancestors. When an entity receives an event, it can use BroadcastMessage to broadcast the event to all descendants, based upon the current state of the entity. This relatively simple model preserves the entity structure into the event structure without needing any further configuration. The basic idea can be shown by the Selected event that is triggered on a component by the UI. This event is propagated up so that the Feature and Layer that this component is part of know that the event has occurred. If the feature is a line and is in blockEdit mode it will broadcast the Selected event to all of the components of the line. There are following prototypes in the entity model: IVirgisEntity . Covers all entities in the Virgis Entity Model IVirgisFeature . Covers all visible features and parts of Features (like lines) IVirgisLayer . Covers all GIS Layers in the model. Note that a GIS Layer in not the same thing as a Unity Layer. GIS layers are collections of like data. Unity Layers are used by Unity to categorise GameObjects. There is no connection between these concepts. There is also an event system called AppState that is used to communicate changes in the application state. This is explained further in the Scripting Reference ​User Interface The Overall VR Interface architecture is described in this article ​Guidelines This is NOT a game. This is an environment the user is exploring. The User's representation in the space is not a character. It does not need a body or (much) physics (although a bit of physics about how the user moves always make it easier on our brains). The User's representation in the space is a camera or probe that we use to explore the space. The User is NOT the centre of the space. The data is the centre of the space. This is different from many mapping applications on the web and in games - where the space reveals itself almost infinitely as the User moves. This is GIS and in GIS - the data has bounds (called the \"extent\" of the data). We will use that paradigm. We move around in that extent. We have two eyes and two hands. Therefore - the User Avatar has two cameras and two representations of hands. These are provide by the XR Rig (currently OVR XR Rig). The Game Space is set up with a putative scale of 1m in real-world to one Unity unit. But there is also internal scaling (ie. zoom factors) in the map that changes this. The space can be zoomed in-game. Real users are going to demand the ability to look from multiple viewpoints without the effort of moving e.g \"in close\" to change things \"wide outside\" view to get the overview - or alternate angles to understand parallax effects. The hands are used to control things. Select and manipulate, Move the character in the model, Move and scale the model, Change the state of the model and of the avatar. ​Design Decisions From Guideline 1 all avatars are only First Person view. From Guideline 4 suggests that an approach will be to have a main avatar and one or more drones to get alternate views. From Guideline 5 : We use a ray pointer interactor oon the left hand to allow the selection and manipulation of data entities, We use the controls on the right hand to move and control the avatatr and manipulate entities, We use the controls on the left hand to zoom and rotate the model, and There is an interactive menu attached to the left hand to allow the application state to be changed. Movement of the avatar is by using a 3D \"jet-pack\" analog. ​Edit Session This concept is common in GIS software. The basic concept is that changes to geospatial data are complicated and have many interdependencies - which means that a simple “undo” function can get you into more problems than solutions! Therefore, the usual concept is, effectively, to create a simple type of “checkpoint” at the start of an Edit Session and to always be able to get back to the “checkpoint”. The “checkpoint” is always what is currently saved in the data file. <!-- Footnotes themselves at the bottom. --> Notes [^1]: JSON.NET is a C# library and is available under an MIT Open Source Licence [^2]: GeoJSON.NET is a C# library and is available under an MIT Open Source Licence [^3]: Mapbox Unity SDK is a C# library that is available under an MIT Open Source Licence [^4]: geometry3Sharp is a C# library that is available under a Boost Open Source Licence"
  }
}